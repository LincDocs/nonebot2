[...new Array(6)].map((e,t)=>`[vp-content] h${t+1}`).join(",");const{entries:$}=Object,{fromEntries:st}=Object,nt="ENTRIES",D="KEYS",W="VALUES",_="";class S{set;_type;_path;constructor(t,s){const n=t._tree,o=Array.from(n.keys());this.set=t,this._type=s,this._path=o.length>0?[{node:n,keys:o}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:s}=b(this._path);if(b(s)===_)return{done:!1,value:this.result()};const n=t.get(b(s));return this._path.push({node:n,keys:Array.from(n.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=b(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>b(t)).filter(t=>t!==_).join("")}value(){return b(this._path).node.get(_)}result(){switch(this._type){case W:return this.value();case D:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const b=e=>e[e.length-1],ot=(e,t,s)=>{const n=new Map;if(typeof t!="string")return n;const o=t.length+1,r=o+s,i=new Uint8Array(r*o).fill(s+1);for(let c=0;c<o;++c)i[c]=c;for(let c=1;c<r;++c)i[c*o]=c;return q(e,t,s,n,i,1,o,""),n},q=(e,t,s,n,o,r,i,c)=>{const l=r*i;t:for(const u of e.keys())if(u===_){const h=o[l-1];h<=s&&n.set(c,[e.get(u),h])}else{let h=r;for(let f=0;f<u.length;++f,++h){const m=u[f],g=i*h,y=g-i;let d=o[g];const a=Math.max(0,h-s-1),w=Math.min(i-1,h+s);for(let p=a;p<w;++p){const O=m!==t[p],C=o[y+p]+ +O,k=o[y+p+1]+1,x=o[g+p]+1,v=o[g+p+1]=Math.min(C,k,x);v<d&&(d=v)}if(d>s)continue t}q(e.get(u),t,s,n,o,h,i,c+u)}};class z{_tree;_prefix;_size=void 0;constructor(t=new Map,s=""){this._tree=t,this._prefix=s}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[s,n]=I(this._tree,t.slice(this._prefix.length));if(s===void 0){const[o,r]=L(n);for(const i of o.keys())if(i!==_&&i.startsWith(r)){const c=new Map;return c.set(i.slice(r.length),o.get(i)),new z(c,t)}}return new z(s,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,rt(this._tree,t)}entries(){return new S(this,nt)}forEach(t){for(const[s,n]of this)t(s,n,this)}fuzzyGet(t,s){return ot(this._tree,t,s)}get(t){const s=F(this._tree,t);return s!==void 0?s.get(_):void 0}has(t){return F(this._tree,t)?.has(_)??!1}keys(){return new S(this,D)}set(t,s){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,E(this._tree,t).set(_,s),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=E(this._tree,t);return n.set(_,s(n.get(_))),this}fetch(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=E(this._tree,t);let o=n.get(_);return o===void 0&&n.set(_,o=s()),o}values(){return new S(this,W)}[Symbol.iterator](){return this.entries()}static from(t){const s=new z;for(const[n,o]of t)s.set(n,o);return s}static fromObject(t){return z.from(Object.entries(t))}}const I=(e,t,s=[])=>{if(t.length===0||e==null)return[e,s];for(const n of e.keys())if(n!==_&&t.startsWith(n))return s.push([e,n]),I(e.get(n),t.slice(n.length),s);return s.push([e,t]),I(void 0,"",s)},F=(e,t)=>{if(t.length===0||!e)return e;for(const s of e.keys())if(s!==_&&t.startsWith(s))return F(e.get(s),t.slice(s.length))},E=(e,t)=>{const s=t.length;t:for(let n=0;e&&n<s;){for(const r of e.keys())if(r!==_&&t[n]===r[0]){const i=Math.min(s-n,r.length);let c=1;for(;c<i&&t[n+c]===r[c];)++c;const l=e.get(r);if(c===r.length)e=l;else{const u=new Map;u.set(r.slice(c),l),e.set(t.slice(n,n+c),u),e.delete(r),e=u}n+=c;continue t}const o=new Map;return e.set(t.slice(n),o),o}return e},rt=(e,t)=>{const[s,n]=I(e,t);if(s!==void 0){if(s.delete(_),s.size===0)A(n);else if(s.size===1){const[o,r]=s.entries().next().value;R(n,o,r)}}},A=e=>{if(e.length===0)return;const[t,s]=L(e);if(t.delete(s),t.size===0)A(e.slice(0,-1));else if(t.size===1){const[n,o]=t.entries().next().value;n!==_&&R(e.slice(0,-1),n,o)}},R=(e,t,s)=>{if(e.length===0)return;const[n,o]=L(e);n.set(o+t,s),n.delete(o)},L=e=>e[e.length-1],it=(e,t)=>{const s=e._idToShortId.get(t);if(s!=null)return e._storedFields.get(s)},ct=/[\n\r\p{Z}\p{P}]+/u,j="or",N="and",ut="and_not",ht=(e,t)=>{e.includes(t)||e.push(t)},P=(e,t)=>{for(const s of t)e.includes(s)||e.push(s)},B=({score:e},{score:t})=>t-e,lt=()=>new Map,M=e=>{const t=new Map;for(const s of Object.keys(e))t.set(parseInt(s,10),e[s]);return t},G=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,H={[j]:(e,t)=>{for(const s of t.keys()){const n=e.get(s);if(n==null)e.set(s,t.get(s));else{const{score:o,terms:r,match:i}=t.get(s);n.score=n.score+o,n.match=Object.assign(n.match,i),P(n.terms,r)}}return e},[N]:(e,t)=>{const s=new Map;for(const n of t.keys()){const o=e.get(n);if(o==null)continue;const{score:r,terms:i,match:c}=t.get(n);P(o.terms,i),s.set(n,{score:o.score+r,terms:o.terms,match:Object.assign(o.match,c)})}return s},[ut]:(e,t)=>{for(const s of t.keys())e.delete(s);return e}},dt=(e,t,s,n,o,r)=>{const{k:i,b:c,d:l}=r;return Math.log(1+(s-t+.5)/(t+.5))*(l+e*(i+1)/(e+i*(1-c+c*n/o)))},at=e=>(t,s,n)=>({term:t,fuzzy:typeof e.fuzzy=="function"?e.fuzzy(t,s,n):e.fuzzy??!1,prefix:typeof e.prefix=="function"?e.prefix(t,s,n):e.prefix===!0,termBoost:typeof e.boostTerm=="function"?e.boostTerm(t,s,n):1}),J=(e,t,s,n)=>{for(const o of Object.keys(e._fieldIds))if(e._fieldIds[o]===s){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${n}" was not present in field "${o}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},ft=(e,t,s,n)=>{if(!e._index.has(n)){J(e,s,t,n);return}const o=e._index.fetch(n,lt),r=o.get(t),i=r?.get(s);!r||typeof i>"u"?J(e,s,t,n):i<=1?r.size<=1?o.delete(t):r.delete(s):r.set(s,i-1),e._index.get(n).size===0&&e._index.delete(n)},mt={k:1.2,b:.7,d:.5},gt={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(ct),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{console?.[e]?.(t)},autoVacuum:!0},Y={combineWith:j,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:mt},pt={combineWith:N,prefix:(e,t,s)=>t===s.length-1},_t={batchSize:1e3,batchWait:10},K={minDirtFactor:.1,minDirtCount:20},yt={..._t,...K},U=Symbol("*"),wt=(e,t)=>{const s=new Map,n={...e._options.searchOptions,...t};for(const[o,r]of e._documentIds){const i=n.boostDocument?n.boostDocument(r,"",e._storedFields.get(o)):1;s.set(o,{score:i,terms:[],match:{}})}return s},Q=(e,t=j)=>{if(e.length===0)return new Map;const s=t.toLowerCase();if(!(s in H))throw new Error(`Invalid combination operator: ${t}`);return e.reduce(H[s])},T=(e,t,s,n,o,r,i,c,l,u=new Map)=>{if(r==null)return u;for(const h of Object.keys(i)){const f=i[h],m=e._fieldIds[h],g=r.get(m);if(g==null)continue;let y=g.size;const d=e._avgFieldLength[m];for(const a of g.keys()){if(!e._documentIds.has(a)){ft(e,m,a,s),y-=1;continue}const w=c?c(e._documentIds.get(a),s,e._storedFields.get(a)):1;if(!w)continue;const p=g.get(a),O=e._fieldLength.get(a)[m],C=dt(p,y,e._documentCount,O,d,l),k=n*o*f*w*C,x=u.get(a);if(x){x.score+=k,ht(x.terms,t);const v=G(x.match,s);v?v.push(h):x.match[s]=[h]}else u.set(a,{score:k,terms:[t],match:{[s]:[h]}})}}return u},xt=(e,t,s)=>{const n={...e._options.searchOptions,...s},o=(n.fields??e._options.fields).reduce((d,a)=>({...d,[a]:G(n.boost,a)||1}),{}),{boostDocument:r,weights:i,maxFuzzy:c,bm25:l}=n,{fuzzy:u,prefix:h}={...Y.weights,...i},f=e._index.get(t.term),m=T(e,t.term,t.term,1,t.termBoost,f,o,r,l);let g,y;if(t.prefix&&(g=e._index.atPrefix(t.term)),t.fuzzy){const d=t.fuzzy===!0?.2:t.fuzzy,a=d<1?Math.min(c,Math.round(t.term.length*d)):d;a&&(y=e._index.fuzzyGet(t.term,a))}if(g)for(const[d,a]of g){const w=d.length-t.term.length;if(!w)continue;y?.delete(d);const p=h*d.length/(d.length+.3*w);T(e,t.term,d,p,t.termBoost,a,o,r,l,m)}if(y)for(const d of y.keys()){const[a,w]=y.get(d);if(!w)continue;const p=u*d.length/(d.length+w);T(e,t.term,d,p,t.termBoost,a,o,r,l,m)}return m},X=(e,t,s={})=>{if(t===U)return wt(e,s);if(typeof t!="string"){const h={...s,...t,queries:void 0},f=t.queries.map(m=>X(e,m,h));return Q(f,h.combineWith)}const{tokenize:n,processTerm:o,searchOptions:r}=e._options,i={tokenize:n,processTerm:o,...r,...s},{tokenize:c,processTerm:l}=i,u=c(t).flatMap(h=>l(h)).filter(h=>!!h).map(at(i)).map(h=>xt(e,h,i));return Q(u,i.combineWith)},Z=(e,t,s={})=>{const{searchOptions:n}=e._options,o={...n,...s},r=X(e,t,s),i=[];for(const[c,{score:l,terms:u,match:h}]of r){const f=u.length||1,m={id:e._documentIds.get(c),score:l*f,terms:Object.keys(h),queryTerms:u,match:h};Object.assign(m,e._storedFields.get(c)),(o.filter==null||o.filter(m))&&i.push(m)}return t===U&&o.boostDocument==null||i.sort(B),i},zt=(e,t,s={})=>{s={...e._options.autoSuggestOptions,...s};const n=new Map;for(const{score:r,terms:i}of Z(e,t,s)){const c=i.join(" "),l=n.get(c);l!=null?(l.score+=r,l.count+=1):n.set(c,{score:r,terms:i,count:1})}const o=[];for(const[r,{score:i,terms:c,count:l}]of n)o.push({suggestion:r,terms:c,score:i/l});return o.sort(B),o};class bt{_options;_index;_documentCount;_documentIds;_idToShortId;_fieldIds;_fieldLength;_avgFieldLength;_nextId;_storedFields;_dirtCount;_currentVacuum;_enqueuedVacuum;_enqueuedVacuumConditions;constructor(t){if(!t?.fields)throw new Error('SlimSearch: option "fields" must be provided');const s=t.autoVacuum==null||t.autoVacuum===!0?yt:t.autoVacuum;this._options={...gt,...t,autoVacuum:s,searchOptions:{...Y,...t.searchOptions},autoSuggestOptions:{...pt,...t.autoSuggestOptions}},this._index=new z,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=K,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[s,n]of this._index){const o={};for(const[r,i]of n)o[r]=Object.fromEntries(i);t.push([s,o])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,version:2}}addFields(t){for(let s=0;s<t.length;s++)this._fieldIds[t[s]]=s}}const vt=e=>new bt(e),kt=({documentCount:e,nextId:t,fieldIds:s,averageFieldLength:n,dirtCount:o,version:r},i)=>{if(r!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const c=vt(i);return c._documentCount=e,c._nextId=t,c._idToShortId=new Map,c._fieldIds=s,c._avgFieldLength=n,c._dirtCount=o??0,c._index=new z,c},It=(e,t)=>{const{index:s,documentIds:n,fieldLength:o,storedFields:r}=e,i=kt(e,t);i._documentIds=M(n),i._fieldLength=M(o),i._storedFields=M(r);for(const[c,l]of i._documentIds)i._idToShortId.set(l,c);for(const[c,l]of s){const u=new Map;for(const h of Object.keys(l))u.set(parseInt(h,10),M(l[h]));i._index.set(c,u)}return i},V=(e,t)=>{const s=e.toLowerCase(),n=t.toLowerCase(),o=[];let r=0,i=0;const c=(u,h=!1)=>{let f;i===0?f=u.length>20?`… ${u.slice(-20)}`:u:h?f=u.length+i>100?`${u.slice(0,100-i)}… `:u:f=u.length>20?`${u.slice(0,20)} … ${u.slice(-20)}`:u,f&&o.push(f),i+=f.length,h||(o.push(["mark",t]),i+=t.length,i>=100&&o.push(" …"))};let l=s.indexOf(n,r);if(l===-1)return null;for(;l>=0;){const u=l+n.length;if(c(e.slice(r,l)),r=u,i>100)break;l=s.indexOf(n,r)}return i<100&&c(e.slice(r),!0),o},Mt=(e,t)=>t.contents.reduce((s,[,n])=>s+n,0)-e.contents.reduce((s,[,n])=>s+n,0),Ot=(e,t)=>Math.max(...t.contents.map(([,s])=>s))-Math.max(...e.contents.map(([,s])=>s)),tt=(e,t,s={})=>{const n={};return Z(t,e,{boost:{h:2,t:1,c:4},prefix:!0,...s}).forEach(o=>{const{id:r,terms:i,score:c}=o,l=r.includes("@"),u=r.includes("#"),[h,f]=r.split(/[#@]/),m=Number(h),g=i.sort((d,a)=>d.length-a.length).filter((d,a)=>i.slice(a+1).every(w=>!w.includes(d))),{contents:y}=n[m]??={title:"",contents:[]};if(l)y.push([{type:"customField",id:m,index:f,display:g.map(d=>o.c.map(a=>V(a,d))).flat().filter(d=>d!==null)},c]);else{const d=g.map(a=>V(o.h,a)).filter(a=>a!==null);if(d.length&&y.push([{type:u?"heading":"title",id:m,...u&&{anchor:f},display:d},c]),"t"in o&&o.t)for(const a of o.t){const w=g.map(p=>V(a,p)).filter(p=>p!==null);w.length&&y.push([{type:"text",id:m,...u&&{anchor:f},display:w},c])}}}),$(n).sort(([,o],[,r])=>"max"==="total"?Mt(o,r):Ot(o,r)).map(([o,{title:r,contents:i}])=>{if(!r){const c=it(t,o);c&&(r=c.h)}return{title:r,contents:i.map(([c])=>c)}})},et=(e,t,s={})=>{const n=zt(t,e,{fuzzy:.2,maxFuzzy:3,...s}).map(({suggestion:o})=>o);return e.includes(" ")?n:n.filter(o=>!o.includes(" "))},Ct=st($(JSON.parse("{\"/\":{\"documentCount\":336,\"nextId\":336,\"documentIds\":{\"0\":\"0\",\"1\":\"0#特色\",\"2\":\"0#异步优先\",\"3\":\"0#完整的类型注解\",\"4\":\"0#开箱即用\",\"5\":\"0#插件系统\",\"6\":\"0#依赖注入系统\",\"7\":\"0#什么是依赖注入\",\"8\":\"1\",\"9\":\"1#编辑器推荐配置\",\"10\":\"1#visual-studio-code\",\"11\":\"1#其他\",\"12\":\"2\",\"13\":\"2#适配器功能与组成\",\"14\":\"2#注册适配器\",\"15\":\"2#获取已注册的适配器\",\"16\":\"2#获取-bot-对象\",\"17\":\"2#获取事件通用信息\",\"18\":\"2#事件类型\",\"19\":\"2#事件名称\",\"20\":\"2#事件描述\",\"21\":\"2#事件日志字符串\",\"22\":\"2#事件主体-id\",\"23\":\"2#事件会话-id\",\"24\":\"2#事件消息\",\"25\":\"2#事件纯文本消息\",\"26\":\"2#事件是否与机器人有关\",\"27\":\"2#更多\",\"28\":\"3\",\"29\":\"3#驱动器类型\",\"30\":\"3#配置驱动器\",\"31\":\"3#获取驱动器\",\"32\":\"3#内置驱动器\",\"33\":\"3#none\",\"34\":\"3#fastapi-默认\",\"35\":\"3#fastapi-配置项\",\"36\":\"3#fastapi-openapi-url\",\"37\":\"3#fastapi-docs-url\",\"38\":\"3#fastapi-redoc-url\",\"39\":\"3#fastapi-include-adapter-schema\",\"40\":\"3#fastapi-reload\",\"41\":\"3#fastapi-reload-dirs\",\"42\":\"3#fastapi-reload-delay\",\"43\":\"3#fastapi-reload-includes\",\"44\":\"3#fastapi-reload-excludes\",\"45\":\"3#fastapi-extra\",\"46\":\"3#quart\",\"47\":\"3#quart-配置项\",\"48\":\"3#quart-reload\",\"49\":\"3#quart-reload-dirs\",\"50\":\"3#quart-reload-delay\",\"51\":\"3#quart-reload-includes\",\"52\":\"3#quart-reload-excludes\",\"53\":\"3#quart-extra\",\"54\":\"3#httpx\",\"55\":\"3#websockets\",\"56\":\"3#aiohttp\",\"57\":\"4\",\"58\":\"4#编写存储提供者\",\"59\":\"4#设置存储提供者\",\"60\":\"5\",\"61\":\"5#事件响应器组成\",\"62\":\"5#事件响应器类型\",\"63\":\"5#事件触发权限\",\"64\":\"5#事件响应规则\",\"65\":\"5#响应优先级\",\"66\":\"5#阻断\",\"67\":\"5#有效期\",\"68\":\"5#默认状态\",\"69\":\"5#基本辅助函数\",\"70\":\"5#内置响应规则\",\"71\":\"5#startswith\",\"72\":\"5#endswith\",\"73\":\"5#fullmatch\",\"74\":\"5#keyword\",\"75\":\"5#command\",\"76\":\"5#shell-command\",\"77\":\"5#regex\",\"78\":\"5#to-me\",\"79\":\"5#is-type\",\"80\":\"5#响应器组\",\"81\":\"5#commandgroup\",\"82\":\"5#matchergroup\",\"83\":\"5#第三方响应规则\",\"84\":\"5#alconna\",\"85\":\"6\",\"86\":\"6#插件元数据\",\"87\":\"6#获取插件信息\",\"88\":\"7\",\"89\":\"7#创建嵌套插件\",\"90\":\"7#已有插件\",\"91\":\"8\",\"92\":\"8#插件跟踪\",\"93\":\"8#插件依赖声明\",\"94\":\"9\",\"95\":\"9#通过兼容层添加路由\",\"96\":\"9#http-路由\",\"97\":\"9#websocket-路由\",\"98\":\"9#使用-asgi-应用添加路由\",\"99\":\"9#获取-asgi-应用\",\"100\":\"9#添加路由规则\",\"101\":\"10\",\"102\":\"10#全局钩子函数\",\"103\":\"10#启动准备\",\"104\":\"10#终止处理\",\"105\":\"10#bot-连接处理\",\"106\":\"10#bot-断开处理\",\"107\":\"10#事件处理钩子函数\",\"108\":\"10#事件预处理\",\"109\":\"10#事件后处理\",\"110\":\"10#运行预处理\",\"111\":\"10#运行后处理\",\"112\":\"10#平台接口调用钩子\",\"113\":\"10#平台接口调用后钩子\",\"114\":\"11\",\"115\":\"11#更新事件响应器类型\",\"116\":\"11#更新事件触发权限\",\"117\":\"12\",\"118\":\"12#记录日志\",\"119\":\"12#自定义日志输出\",\"120\":\"12#重定向-logging-日志\",\"121\":\"13\",\"122\":\"13#事件类型\",\"123\":\"13#重载\",\"124\":\"14\",\"125\":\"14#rulechecker\",\"126\":\"14#rule\",\"127\":\"14#合并响应规则\",\"128\":\"14#主动使用响应规则\",\"129\":\"14#内置响应规则\",\"130\":\"15\",\"131\":\"16\",\"132\":\"17\",\"133\":\"17#安装插件\",\"134\":\"17#使用插件\",\"135\":\"17#配置项\",\"136\":\"17#localstore-use-cwd\",\"137\":\"17#localstore-cache-dir\",\"138\":\"17#localstore-data-dir\",\"139\":\"17#localstore-config-dir\",\"140\":\"17#localstore-plugin-cache-dir\",\"141\":\"17#localstore-plugin-data-dir\",\"142\":\"17#localstore-plugin-config-dir\",\"143\":\"18\",\"144\":\"18#安装插件\",\"145\":\"18#使用插件\",\"146\":\"18#获取-sentry-dsn\",\"147\":\"18#配置插件\",\"148\":\"18#配置项\",\"149\":\"19\",\"150\":\"19#安装插件\",\"151\":\"19#使用插件\",\"152\":\"19#导入调度器\",\"153\":\"19#添加定时任务\",\"154\":\"19#配置项\",\"155\":\"19#apscheduler-autostart\",\"156\":\"19#apscheduler-log-level\",\"157\":\"19#apscheduler-config\",\"158\":\"20\",\"159\":\"21\",\"160\":\"21#code-of-conduct\",\"161\":\"21#参与开发\",\"162\":\"21#鸣谢\",\"163\":\"22\",\"164\":\"22#组织结构\",\"165\":\"22#使用-nb-cli-创建项目\",\"166\":\"22#组成部分\",\"167\":\"22#log\",\"168\":\"22#config\",\"169\":\"22#adapter\",\"170\":\"22#与平台交互\",\"171\":\"22#客户端通信方式\",\"172\":\"22#服务端通信方式\",\"173\":\"22#建立-bot-连接\",\"174\":\"22#转换-event-事件\",\"175\":\"22#调用平台-api\",\"176\":\"22#bot\",\"177\":\"22#event\",\"178\":\"22#message\",\"179\":\"22#适配器测试\",\"180\":\"22#后续工作\",\"181\":\"23\",\"182\":\"23#nonebot-v1\",\"183\":\"23#更新-nonebot-v1-文档中的-指南-部分\",\"184\":\"23#nonebot-v1-api-文档自动生成\",\"185\":\"23#nonebot-v2\",\"186\":\"23#nonebot-v2-自动化测试框架-nonebug\",\"187\":\"23#nonebot-v2-telegram-适配器\",\"188\":\"23#nonebot-v2-飞书适配器\",\"189\":\"23#onebot\",\"190\":\"23#设计-onebot-v12-接口标准\",\"191\":\"23#实现-rust-版-libonebot\",\"192\":\"23#实现自选语言版-libonebot\",\"193\":\"24\",\"194\":\"24#nonebot2-命令行-cli-交互体验升级\",\"195\":\"24#nonebot2-命令行即时交互通信设计与实现\",\"196\":\"24#nonebot2-用户上手与深入教程设计\",\"197\":\"25\",\"198\":\"25#nonebot-项目管理图形化面板\",\"199\":\"25#nonebot-discord-适配器\",\"200\":\"25#nonebot-数据库支持插件\",\"201\":\"26\",\"202\":\"26#nonepress-官网组件库更新与优化\",\"203\":\"26#noneflow-社区自动化工作流管理优化\",\"204\":\"26#noneblockly-低代码框架开发\",\"205\":\"27\",\"206\":\"27#安装依赖\",\"207\":\"27#创建配置文件\",\"208\":\"27#创建入口文件\",\"209\":\"27#运行机器人\",\"210\":\"28\",\"211\":\"28#插件结构\",\"212\":\"28#单文件插件\",\"213\":\"28#包插件\",\"214\":\"28#创建插件\",\"215\":\"28#加载插件\",\"216\":\"28#load-plugin\",\"217\":\"28#load-plugins\",\"218\":\"28#load-all-plugins\",\"219\":\"28#load-from-json\",\"220\":\"28#load-from-toml\",\"221\":\"28#load-builtin-plugin\",\"222\":\"28#load-builtin-plugins\",\"223\":\"28#其他加载方式\",\"224\":\"29\",\"225\":\"30\",\"226\":\"30#事件响应器辅助函数\",\"227\":\"30#创建事件响应器\",\"228\":\"30#为事件响应器添加参数\",\"229\":\"31\",\"230\":\"31#认识消息类型\",\"231\":\"31#消息序列-message\",\"232\":\"31#消息段-messagesegment\",\"233\":\"31#使用消息序列\",\"234\":\"31#构造消息序列\",\"235\":\"31#直接构造\",\"236\":\"31#运算构造\",\"237\":\"31#从字典数组构造\",\"238\":\"31#获取消息纯文本\",\"239\":\"31#遍历\",\"240\":\"31#比较\",\"241\":\"31#检查消息段\",\"242\":\"31#过滤、索引与切片\",\"243\":\"31#拼接消息\",\"244\":\"31#使用消息模板\",\"245\":\"32\",\"246\":\"32#命令头\",\"247\":\"32#参数声明-args\",\"248\":\"32#key\",\"249\":\"32#var\",\"250\":\"32#multivar-与-keywordvar\",\"251\":\"32#default\",\"252\":\"32#选项与子命令-option-subcommand\",\"253\":\"32#action\",\"254\":\"32#解析结果-arparma\",\"255\":\"32#元数据-commandmeta\",\"256\":\"32#命名空间配置\",\"257\":\"32#新建命名空间并替换\",\"258\":\"32#修改默认的命名空间\",\"259\":\"32#快捷指令\",\"260\":\"32#args的使用\",\"261\":\"32#command的使用\",\"262\":\"32#紧凑命令\",\"263\":\"32#模糊匹配\",\"264\":\"32#半自动补全\",\"265\":\"32#duplication\",\"266\":\"32#上下文插值\",\"267\":\"33\",\"268\":\"33#alconna-auto-send-output\",\"269\":\"33#alconna-use-command-start\",\"270\":\"33#alconna-auto-completion\",\"271\":\"33#alconna-use-origin\",\"272\":\"33#alconna-use-command-sep\",\"273\":\"33#alconna-global-extensions\",\"274\":\"33#alconna-context-style\",\"275\":\"33#alconna-enable-saa-patch\",\"276\":\"33#alconna-apply-filehost\",\"277\":\"33#alconna-apply-fetch-targets\",\"278\":\"34\",\"279\":\"34#示例\",\"280\":\"34#创建新机器人\",\"281\":\"34#卸载插件\",\"282\":\"34#cli\",\"283\":\"34#heads\",\"284\":\"34#upgrade\",\"285\":\"34#downgrade\",\"286\":\"34#check\",\"287\":\"34#配置\",\"288\":\"34#sqlalchemy-database-url\",\"289\":\"34#sqlalchemy-bind\",\"290\":\"34#sqlalchemy-engine-options\",\"291\":\"34#sqlalchemy-echo\",\"292\":\"35\",\"293\":\"35#测试-http-服务端\",\"294\":\"35#测试-websocket-服务端\",\"295\":\"35#测试-http-客户端\",\"296\":\"35#测试-websocket-客户端\",\"297\":\"36\",\"298\":\"36#示例\",\"299\":\"36#模型定义\",\"300\":\"36#首次迁移\",\"301\":\"36#会话管理\",\"302\":\"36#依赖注入\",\"303\":\"37\",\"304\":\"37#数据库会话\",\"305\":\"37#asyncsession\",\"306\":\"37#async-scoped-session\",\"307\":\"37#查询数据\",\"308\":\"37#model\",\"309\":\"37#sqldepends\",\"310\":\"37#类型标注\",\"311\":\"38\",\"312\":\"39\",\"313\":\"40\",\"314\":\"41\",\"315\":\"42\",\"316\":\"43\",\"317\":\"44\",\"318\":\"45\",\"319\":\"46\",\"320\":\"47\",\"321\":\"48\",\"322\":\"49\",\"323\":\"50\",\"324\":\"51\",\"325\":\"52\",\"326\":\"53\",\"327\":\"54\",\"328\":\"55\",\"329\":\"56\",\"330\":\"57\",\"331\":\"58\",\"332\":\"59\",\"333\":\"60\",\"334\":\"61\",\"335\":\"62\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[1,22],\"1\":[1],\"2\":[1,8],\"3\":[1,16],\"4\":[1,11],\"5\":[1,6],\"6\":[1,7],\"7\":[1,30],\"8\":[1,12],\"9\":[1],\"10\":[3,37],\"11\":[1,10],\"12\":[1,5],\"13\":[1,27],\"14\":[1,25],\"15\":[1,15],\"16\":[3,40],\"17\":[1,7],\"18\":[1,11],\"19\":[1,8],\"20\":[1,8],\"21\":[1,9],\"22\":[2,10],\"23\":[2,13],\"24\":[1,9],\"25\":[1,10],\"26\":[1,13],\"27\":[1,5],\"28\":[1,11],\"29\":[1,41],\"30\":[1,47],\"31\":[1,12],\"32\":[1],\"33\":[1,8],\"34\":[3,39],\"35\":[2],\"36\":[1,15],\"37\":[1,14],\"38\":[1,14],\"39\":[1,12],\"40\":[1,74],\"41\":[1,10],\"42\":[1,9],\"43\":[1,13],\"44\":[1,13],\"45\":[1,9],\"46\":[1,20],\"47\":[2],\"48\":[1,34],\"49\":[1,10],\"50\":[1,9],\"51\":[1,13],\"52\":[1,13],\"53\":[1,9],\"54\":[1,30],\"55\":[1,29],\"56\":[1,14],\"57\":[1,22],\"58\":[1,21],\"59\":[1,13],\"60\":[1,13],\"61\":[1],\"62\":[1,27],\"63\":[1,10],\"64\":[1,10],\"65\":[1,9],\"66\":[1,27],\"67\":[1,20],\"68\":[1,10],\"69\":[1,46],\"70\":[1,5],\"71\":[1,23],\"72\":[1,23],\"73\":[1,25],\"74\":[1,18],\"75\":[1,55],\"76\":[1,53],\"77\":[1,32],\"78\":[1,10],\"79\":[1,19],\"80\":[1,5],\"81\":[1,34],\"82\":[1,18],\"83\":[1],\"84\":[1,35],\"85\":[1,12],\"86\":[1,102],\"87\":[1,47],\"88\":[1,10],\"89\":[1,22],\"90\":[1,29],\"91\":[1,13],\"92\":[1,35],\"93\":[1,29],\"94\":[1,46],\"95\":[1,11],\"96\":[2,63],\"97\":[2,70],\"98\":[3],\"99\":[3,18],\"100\":[1,32],\"101\":[1,21],\"102\":[1,6],\"103\":[1,21],\"104\":[1,19],\"105\":[2,22],\"106\":[2,22],\"107\":[1,5],\"108\":[1,33],\"109\":[1,21],\"110\":[1,37],\"111\":[1,29],\"112\":[1,35],\"113\":[1,38],\"114\":[1,15],\"115\":[1,32],\"116\":[1,53],\"117\":[1,15],\"118\":[1,65],\"119\":[1,70],\"120\":[3,25],\"121\":[1,14],\"122\":[1,66],\"123\":[1,68],\"124\":[1,26],\"125\":[1,37],\"126\":[1,42],\"127\":[1,65],\"128\":[1,23],\"129\":[1,4],\"130\":[1,68],\"131\":[1,10],\"132\":[1,14],\"133\":[1,10],\"134\":[1,64],\"135\":[1],\"136\":[3,7],\"137\":[3,34],\"138\":[3,48],\"139\":[3,43],\"140\":[4,11],\"141\":[4,11],\"142\":[4,11],\"143\":[1,18],\"144\":[1,10],\"145\":[1,3],\"146\":[3,11],\"147\":[1,12],\"148\":[1,57],\"149\":[1,18],\"150\":[1,10],\"151\":[1,14],\"152\":[1,16],\"153\":[1,53],\"154\":[1],\"155\":[2,9],\"156\":[3,20],\"157\":[2,14],\"158\":[1,24],\"159\":[1],\"160\":[3,5],\"161\":[1,3],\"162\":[1,4],\"163\":[1,15],\"164\":[1,32],\"165\":[4,8],\"166\":[1,13],\"167\":[1,40],\"168\":[1,18],\"169\":[1,46],\"170\":[1,9],\"171\":[1,123],\"172\":[1,90],\"173\":[3,34],\"174\":[3,68],\"175\":[2,106],\"176\":[1,71],\"177\":[1,91],\"178\":[1,57],\"179\":[1,44],\"180\":[1,14],\"181\":[2,24],\"182\":[2],\"183\":[6,62],\"184\":[4,44],\"185\":[2],\"186\":[5,41],\"187\":[4,54],\"188\":[3,49],\"189\":[1],\"190\":[4,39],\"191\":[4,71],\"192\":[2,74],\"193\":[2,36],\"194\":[4,46],\"195\":[2,37],\"196\":[2,63],\"197\":[2,32],\"198\":[2,44],\"199\":[3,36],\"200\":[2,45],\"201\":[2,26],\"202\":[2,75],\"203\":[2,76],\"204\":[2,64],\"205\":[1,29],\"206\":[1,33],\"207\":[1,32],\"208\":[1,59],\"209\":[1,22],\"210\":[1,3],\"211\":[1,12],\"212\":[1,14],\"213\":[1,19],\"214\":[1,62],\"215\":[1,35],\"216\":[1,29],\"217\":[1,21],\"218\":[1,13],\"219\":[1,32],\"220\":[1,37],\"221\":[1,13],\"222\":[1,10],\"223\":[1,3],\"224\":[1,40],\"225\":[1,21],\"226\":[1,37],\"227\":[1,38],\"228\":[1,40],\"229\":[1,20],\"230\":[1],\"231\":[1,29],\"232\":[1,30],\"233\":[1,48],\"234\":[1,13],\"235\":[1,17],\"236\":[1,7],\"237\":[1,24],\"238\":[1,29],\"239\":[1,10],\"240\":[1,12],\"241\":[1,17],\"242\":[2,52],\"243\":[1,37],\"244\":[1,69],\"245\":[2,59],\"246\":[1,103],\"247\":[3,27],\"248\":[1,47],\"249\":[1,123],\"250\":[3,28],\"251\":[1,23],\"252\":[4,71],\"253\":[1,35],\"254\":[3,60],\"255\":[3,65],\"256\":[1,46],\"257\":[1,51],\"258\":[1,19],\"259\":[1,34],\"260\":[1,23],\"261\":[1,82],\"262\":[1,62],\"263\":[1,28],\"264\":[1,32],\"265\":[1,75],\"266\":[1,31],\"267\":[1],\"268\":[4,7],\"269\":[4,12],\"270\":[3,9],\"271\":[3,13],\"272\":[4,13],\"273\":[3,13],\"274\":[3,12],\"275\":[4,8],\"276\":[3,6],\"277\":[4,6],\"278\":[1,17],\"279\":[1],\"280\":[1,28],\"281\":[1,22],\"282\":[1,5],\"283\":[1,23],\"284\":[1,14],\"285\":[1,14],\"286\":[1,10],\"287\":[1],\"288\":[3,18],\"289\":[2,39],\"290\":[3,20],\"291\":[2,25],\"292\":[1,18],\"293\":[3,82],\"294\":[3,67],\"295\":[3,1],\"296\":[3,1],\"297\":[1,18],\"298\":[1],\"299\":[1,64],\"300\":[1,210],\"301\":[1,117],\"302\":[1,70],\"303\":[1,6],\"304\":[1],\"305\":[1,47],\"306\":[3,45],\"307\":[1],\"308\":[1,40],\"309\":[1,34],\"310\":[1,52],\"311\":[1,113],\"312\":[1,3],\"313\":[1,3],\"314\":[1,3],\"315\":[1,3],\"316\":[1,6],\"317\":[1,5],\"318\":[1,5],\"319\":[1,5],\"320\":[1,3],\"321\":[1],\"322\":[1],\"323\":[2],\"324\":[1],\"325\":[1],\"326\":[1],\"327\":[1],\"328\":[1],\"329\":[1],\"330\":[1],\"331\":[1],\"332\":[1],\"333\":[1],\"334\":[1],\"335\":[1]},\"averageFieldLength\":[1.4464285714285725,29.727446911051224],\"storedFields\":{\"0\":{\"h\":\"概览\",\"t\":[\"NoneBot2 是一个现代、跨平台、可扩展的 Python 聊天机器人框架（下称 NoneBot），它基于 Python 的类型注解和异步优先特性（兼容同步），能够为你的需求实现提供便捷灵活的支持。同时，NoneBot 拥有大量的开发者为其开发插件，用户无需编写任何代码，仅需完成环境配置及插件安装，就可以正常使用 NoneBot。\",\"需要注意的是，NoneBot 仅支持 Python 3.9 以上版本\"]},\"1\":{\"h\":\"特色\"},\"2\":{\"h\":\"异步优先\",\"t\":[\"NoneBot 基于 Python asyncio / trio 编写，并在异步机制的基础上进行了一定程度的同步函数兼容。\"]},\"3\":{\"h\":\"完整的类型注解\",\"t\":[\"NoneBot 参考 PEP 484 等 PEP 完整实现了类型注解，通过 Pyright（Pylance） 检查。配合编辑器的类型推导功能，能将绝大多数的 Bug 杜绝在编辑器中（编辑器支持）。\"]},\"4\":{\"h\":\"开箱即用\",\"t\":[\"NoneBot 提供了使用便捷、具有交互式功能的命令行工具--nb-cli，使得用户初次接触 NoneBot 时更容易上手。使用方法请阅读本文档指南以及 CLI 文档。\"]},\"5\":{\"h\":\"插件系统\",\"t\":[\"插件系统是 NoneBot 的核心，通过它可以实现机器人的模块化以及功能扩展，便于维护和管理。\"]},\"6\":{\"h\":\"依赖注入系统\",\"t\":[\"NoneBot 采用了一套自行定义的依赖注入系统，可以让事件的处理过程更加的简洁、清晰，增加代码的可读性，减少代码冗余。\"]},\"7\":{\"h\":\"什么是依赖注入\",\"t\":[\"『依赖注入』意思是，在编程中，有一种方法可以让你的代码声明它工作和使用所需要的东西，即**『依赖』**。\",\"系统（在这里是指 NoneBot）将负责做任何需要的事情，为你的代码提供这些必要依赖（即**『注入』**依赖性）\",\"这在你有以下情形的需求时非常有用：\",\"这部分代码拥有共享的逻辑（同样的代码逻辑多次重复）\",\"共享数据库以及网络请求连接会话 \",\"比如 httpx.AsyncClient、aiohttp.ClientSession 和 sqlalchemy.Session\",\"机器人用户权限检查以及认证\",\"还有更多...\",\"它在完成上述工作的同时，还能尽量减少代码的耦合和重复\"]},\"8\":{\"h\":\"编辑器支持\",\"t\":[\"框架基于 PEP484、PEP 561、PEP8 等规范进行开发并且拥有完整类型注解。框架使用 Pyright（Pylance）工具进行类型检查，确保代码可以被编辑器正确解析。\"]},\"9\":{\"h\":\"编辑器推荐配置\"},\"10\":{\"h\":\"Visual Studio Code\",\"t\":[\"在 Visual Studio Code 中，可以使用 Pylance Language Server 并启用 Type Checking 配置以达到最佳开发体验。\",\"在 VSCode 插件视图搜索并安装 Python (ms-python.python) 和 Pylance (ms-python.vscode-pylance) 插件。\",\"修改 VSCode 配置 在 VSCode 设置视图搜索配置项 Python: Language Server 并将其值设置为 Pylance，搜索配置项 Python > Analysis: Type Checking Mode 并将其值设置为 basic。\",\"或者向项目 .vscode 文件夹中配置文件添加以下内容：\",\"{ \\\"python.languageServer\\\": \\\"Pylance\\\", \\\"python.analysis.typeCheckingMode\\\": \\\"basic\\\" }\"]},\"11\":{\"h\":\"其他\",\"t\":[\"欢迎提交 Pull Request 添加其他编辑器配置推荐。点击左下角 Edit this page 前往编辑。\"]},\"12\":{\"h\":\"使用适配器\",\"t\":[\"适配器 (Adapter) 是机器人与平台交互的核心桥梁，它负责在驱动器和机器人插件之间转换与传递消息。\"]},\"13\":{\"h\":\"适配器功能与组成\",\"t\":[\"适配器通常有两种功能，分别是接收事件和调用平台接口。其中，接收事件是指将驱动器收到的事件消息转换为 NoneBot 定义的事件模型，然后交由机器人插件处理；调用平台接口是指将机器人插件调用平台接口的数据转换为平台指定的格式，然后交由驱动器发送，并接收接口返回数据。\",\"为了实现这两种功能，适配器通常由四个部分组成：\",\"Adapter：负责转换事件和调用接口，正确创建 Bot 对象并注册到 NoneBot 中。\",\"Bot：负责存储平台机器人相关信息，并提供回复事件的方法。\",\"Event：负责定义事件内容，以及事件主体对象。\",\"Message：负责正确序列化消息，以便机器人插件处理。\"]},\"14\":{\"h\":\"注册适配器\",\"t\":[\"在使用适配器之前，我们需要先将适配器注册到驱动器中，这样适配器就可以通过驱动器接收事件和调用接口了。我们以 Console 适配器为例，来看看如何注册适配器：\",\"import nonebot from nonebot.adapters.console import Adapter driver = nonebot.get_driver() driver.register_adapter(Adapter)\",\"我们首先需要从适配器模块中导入所需要的适配器类，然后通过驱动器的 register_adapter 方法将适配器注册到驱动器中即可。如果我们需要多平台支持，可以多次调用 register_adapter 方法来注册多个适配器。\"]},\"15\":{\"h\":\"获取已注册的适配器\",\"t\":[\"NoneBot 提供了 get_adapter 方法来获取已注册的适配器，我们可以通过适配器的名称或类型来获取指定的适配器实例：\",\"import nonebot from nonebot.adapters.console import Adapter adapters = nonebot.get_adapters() console_adapter = nonebot.get_adapter(Adapter) console_adapter = nonebot.get_adapter(Adapter.get_name())\"]},\"16\":{\"h\":\"获取 Bot 对象\",\"t\":[\"当前所有适配器已连接的 Bot 对象可以通过 get_bots 方法获取，这是一个以机器人 ID 为键的字典：\",\"import nonebot bots = nonebot.get_bots()\",\"我们也可以通过 get_bot 方法获取指定 ID 的 Bot 对象。如果省略 ID 参数，将会返回所有 Bot 中的第一个：\",\"import nonebot bot = nonebot.get_bot(\\\"bot_id\\\")\",\"如果需要获取指定适配器连接的 Bot 对象，我们可以通过适配器的 bots 属性获取，这也是一个以机器人 ID 为键的字典：\",\"import nonebot from nonebot.adapters.console import Adapter console_adapter = nonebot.get_adapter(Adapter) bots = console_adapter.bots\",\"Bot 对象都具有一个 self_id 属性，它是机器人的唯一 ID，由适配器填写，通常为机器人的帐号 ID 或者 APP ID。\"]},\"17\":{\"h\":\"获取事件通用信息\",\"t\":[\"适配器的所有事件模型均继承自 Event 基类，在事件类型与重载一节中，我们也提到了如何使用基类抽象方法来获取事件通用信息。基类能提供如下信息：\"]},\"18\":{\"h\":\"事件类型\",\"t\":[\"事件类型通常为 meta_event、message、notice、request。\",\"type: str = event.get_type()\"]},\"19\":{\"h\":\"事件名称\",\"t\":[\"事件名称由适配器定义，通常用于日志记录。\",\"name: str = event.get_event_name()\"]},\"20\":{\"h\":\"事件描述\",\"t\":[\"事件描述由适配器定义，通常用于日志记录。\",\"description: str = event.get_event_description()\"]},\"21\":{\"h\":\"事件日志字符串\",\"t\":[\"事件日志字符串由事件名称和事件描述组成，用于日志记录。\",\"log: str = event.get_log_string()\"]},\"22\":{\"h\":\"事件主体 ID\",\"t\":[\"事件主体 ID 通常为机器人用户 ID。\",\"user_id: str = event.get_user_id()\"]},\"23\":{\"h\":\"事件会话 ID\",\"t\":[\"事件会话 ID 通常为机器人用户 ID 与群聊/频道 ID 组合而成。\",\"session_id: str = event.get_session_id()\"]},\"24\":{\"h\":\"事件消息\",\"t\":[\"如果事件包含消息，则可以通过该方法获取，否则会产生异常。\",\"message: Message = event.get_message()\"]},\"25\":{\"h\":\"事件纯文本消息\",\"t\":[\"通常为事件消息的纯文本内容，如果事件不包含消息，则会产生异常。\",\"text: str = event.get_plaintext()\"]},\"26\":{\"h\":\"事件是否与机器人有关\",\"t\":[\"由适配器实现的判断，通常将事件目标主体为机器人、消息中包含“@机器人”或以“机器人的昵称”开始视为与机器人有关。\",\"is_tome: bool = event.is_tome()\"]},\"27\":{\"h\":\"更多\",\"t\":[\"官方支持的适配器和社区贡献的适配器均可在商店中查看。如果你想要开发自己的适配器，可以参考开发文档。欢迎通过商店发布你的适配器。\"]},\"28\":{\"h\":\"选择驱动器\",\"t\":[\"驱动器 (Driver) 是机器人运行的基石，它是机器人初始化的第一步，主要负责数据收发。\",\"提示\",\"驱动器的选择通常与机器人所使用的协议适配器相关，如果不知道该选择哪个驱动器，可以先阅读相关协议适配器文档说明。\",\"提示\",\"如何安装驱动器请参考安装驱动器。\"]},\"29\":{\"h\":\"驱动器类型\",\"t\":[\"驱动器类型大体上可以分为两种：\",\"Forward：即客户端型驱动器，多用于使用 HTTP 轮询，连接 WebSocket 服务器等情形。\",\"Reverse：即服务端型驱动器，多用于使用 WebHook，接收 WebSocket 客户端连接等情形。\",\"客户端型驱动器可以分为以下两种：\",\"异步发送 HTTP 请求，自定义 HTTP Method、URL、Header、Body、Cookie、Proxy、Timeout 等。\",\"异步建立 WebSocket 连接上下文，自定义 WebSocket URL、Header、Cookie、Proxy、Timeout 等。\",\"服务端型驱动器目前有：\",\"ASGI 应用框架，具有以下功能： \",\"协议适配器自定义 HTTP 上报地址以及对上报数据处理的回调函数。\",\"协议适配器自定义 WebSocket 连接请求地址以及对 WebSocket 请求处理的回调函数。\",\"用户可以向 ASGI 应用添加任何服务端相关功能，如：添加自定义路由。\"]},\"30\":{\"h\":\"配置驱动器\",\"t\":[\"驱动器的配置方法已经在配置章节中简单进行了介绍，这里将详细介绍驱动器配置的格式。\",\"NoneBot 中的客户端和服务端型驱动器可以相互配合使用，但服务端型驱动器仅能选择一个。所有驱动器模块都会包含一个 Driver 子类，即驱动器类，他可以作为驱动器单独运行。同时，客户端驱动器模块中还会提供一个 Mixin 子类，用于在与其他驱动器配合使用时加载。因此，驱动器配置格式采用特殊语法：<module>[:<Driver>][+<module>[:<Mixin>]]*。\",\"其中，<module> 代表驱动器模块路径；<Driver> 代表驱动器类名，默认为 Driver；<Mixin> 代表驱动器混入类名，默认为 Mixin。即，我们需要选择一个主要驱动器，然后在其基础上配合使用其他驱动器的功能。主要驱动器可以为客户端或服务端类型，但混入类驱动器只能为客户端类型。\",\"特别的，为了简化内置驱动器模块路径，我们可以使用 ~ 符号作为内置驱动器模块路径的前缀，如 ~fastapi 代表使用内置驱动器 fastapi。NoneBot 内置了多个驱动器适配，但需要安装额外依赖才能使用，具体请参考安装驱动器。常见的驱动器配置如下：\",\"DRIVER=~fastapi DRIVER=~aiohttp DRIVER=~httpx+~websockets DRIVER=~fastapi+~httpx+~websockets\"]},\"31\":{\"h\":\"获取驱动器\",\"t\":[\"在 NoneBot 框架初始化完成后，我们就可以通过 get_driver() 方法获取全局驱动器实例：\",\"from nonebot import get_driver driver = get_driver()\"]},\"32\":{\"h\":\"内置驱动器\"},\"33\":{\"h\":\"None\",\"t\":[\"**类型：**服务端驱动器\",\"NoneBot 内置的空驱动器，不提供任何收发数据功能，可以在不需要外部网络连接时使用。\",\"DRIVER=~none\"]},\"34\":{\"h\":\"FastAPI（默认）\",\"t\":[\"**类型：**ASGI 服务端驱动器\",\"FastAPI is a modern, fast (high-performance), web framework for building APIs with Python 3.6+ based on standard Python type hints.\",\"FastAPI 是一个易上手、高性能的异步 Web 框架，具有极佳的编写体验。 FastAPI 可以通过类型注解、依赖注入等方式实现输入参数校验、自动生成 API 文档等功能，也可以挂载其他 ASGI、WSGI 应用。\",\"DRIVER=~fastapi\"]},\"35\":{\"h\":\"FastAPI 配置项\"},\"36\":{\"h\":\"\",\"t\":[\"类型：str | None 默认值：None 说明：FastAPI 提供的 OpenAPI JSON 定义地址，如果为 None，则不提供 OpenAPI JSON 定义。\"]},\"37\":{\"h\":\"\",\"t\":[\"类型：str | None 默认值：None 说明：FastAPI 提供的 Swagger 文档地址，如果为 None，则不提供 Swagger 文档。\"]},\"38\":{\"h\":\"\",\"t\":[\"类型：str | None 默认值：None 说明：FastAPI 提供的 ReDoc 文档地址，如果为 None，则不提供 ReDoc 文档。\"]},\"39\":{\"h\":\"\",\"t\":[\"类型：bool 默认值：True 说明：FastAPI 提供的 OpenAPI JSON 定义中是否包含适配器路由的 Schema。\"]},\"40\":{\"h\":\"\",\"t\":[\"警告\",\"不推荐开启该配置项，在 Windows 平台上开启该功能有可能会造成预料之外的影响！替代方案：使用 nb-cli 命令行工具以及参数 --reload 启动 NoneBot。\",\"nb run --reload\",\"开启该功能后，在 uvicorn 运行时（FastAPI 提供的 ASGI 底层，即 reload 功能的实际来源），asyncio 使用的事件循环会被 uvicorn 从默认的 ProactorEventLoop 强制切换到 SelectorEventLoop。\",\"相关信息参考 uvicorn#529，uvicorn#1070，uvicorn#1257\",\"后者（SelectorEventLoop）在 Windows 平台的可使用性不如前者（ProactorEventLoop），包括但不限于\",\"不支持创建子进程\",\"最多只支持 512 个套接字\",\"...\",\"具体信息参考 Python 文档\",\"所以，一些使用了 asyncio 的库因此可能无法正常工作，如：\",\"playwright\",\"如果在开启该功能后，原本正常运行的代码报错，且打印的异常堆栈信息和 asyncio 有关（异常一般为 NotImplementedError）， 你可能就需要考虑相关库对事件循环的支持，以及是否启用该功能。\",\"类型：bool 默认值：False 说明：是否开启 uvicorn 的 reload 功能，需要在机器人入口文件提供 ASGI 应用路径。\",\"app = nonebot.get_asgi() nonebot.run(app=\\\"bot:app\\\")\"]},\"41\":{\"h\":\"\",\"t\":[\"类型：List[str] | None 默认值：None 说明：重载监控文件夹列表，默认为 uvicorn 默认值\"]},\"42\":{\"h\":\"\",\"t\":[\"类型：float | None 默认值：None 说明：重载延迟，默认为 uvicorn 默认值\"]},\"43\":{\"h\":\"\",\"t\":[\"类型：List[str] | None 默认值：None 说明：要监听的文件列表，支持 glob pattern，默认为 uvicorn 默认值\"]},\"44\":{\"h\":\"\",\"t\":[\"类型：List[str] | None 默认值：None 说明：不要监听的文件列表，支持 glob pattern，默认为 uvicorn 默认值\"]},\"45\":{\"h\":\"\",\"t\":[\"类型：Dist[str, Any] 默认值：{} 说明：传递给 FastAPI 的其他参数\"]},\"46\":{\"h\":\"Quart\",\"t\":[\"**类型：**ASGI 服务端驱动器\",\"Quart is an asyncio reimplementation of the popular Flask microframework API.\",\"Quart 是一个类 Flask 的异步版本，拥有与 Flask 非常相似的接口和使用方法。\",\"DRIVER=~quart\"]},\"47\":{\"h\":\"Quart 配置项\"},\"48\":{\"h\":\"\",\"t\":[\"警告\",\"不推荐开启该配置项，在 Windows 平台上开启该功能有可能会造成预料之外的影响！替代方案：使用 nb-cli 命令行工具以及参数 --reload 启动 NoneBot。\",\"nb run --reload\",\"类型：bool 默认值：False 说明：是否开启 uvicorn 的 reload 功能，需要在机器人入口文件提供 ASGI 应用路径。\",\"app = nonebot.get_asgi() nonebot.run(app=\\\"bot:app\\\")\"]},\"49\":{\"h\":\"\",\"t\":[\"类型：List[str] | None 默认值：None 说明：重载监控文件夹列表，默认为 uvicorn 默认值\"]},\"50\":{\"h\":\"\",\"t\":[\"类型：float | None 默认值：None 说明：重载延迟，默认为 uvicorn 默认值\"]},\"51\":{\"h\":\"\",\"t\":[\"类型：List[str] | None 默认值：None 说明：要监听的文件列表，支持 glob pattern，默认为 uvicorn 默认值\"]},\"52\":{\"h\":\"\",\"t\":[\"类型：List[str] | None 默认值：None 说明：不要监听的文件列表，支持 glob pattern，默认为 uvicorn 默认值\"]},\"53\":{\"h\":\"\",\"t\":[\"类型：Dist[str, Any] 默认值：{} 说明：传递给 Quart 的其他参数\"]},\"54\":{\"h\":\"HTTPX\",\"t\":[\"**类型：**HTTP 客户端驱动器\",\"注意\",\"本驱动器仅支持 HTTP 请求，不支持 WebSocket 连接请求。\",\"HTTPX is a fully featured HTTP client for Python 3, which provides sync and async APIs, and support for both HTTP/1.1 and HTTP/2.\",\"DRIVER=~httpx\"]},\"55\":{\"h\":\"websockets\",\"t\":[\"**类型：**WebSocket 客户端驱动器\",\"注意\",\"本驱动器仅支持 WebSocket 连接请求，不支持 HTTP 请求。\",\"websockets is a library for building WebSocket servers and clients in Python with a focus on correctness, simplicity, robustness, and performance.\",\"DRIVER=~websockets\"]},\"56\":{\"h\":\"AIOHTTP\",\"t\":[\"**类型：**HTTP/WebSocket 客户端驱动器\",\"AIOHTTP: Asynchronous HTTP Client/Server for asyncio and Python.\",\"DRIVER=~aiohttp\"]},\"57\":{\"h\":\"事件响应器存储\",\"t\":[\"事件响应器是 NoneBot 处理事件的核心，它们默认存储在一个字典中。在进入会话状态后，事件响应器将会转为临时响应器，作为最高优先级同样存储于该字典中。因此，事件响应器的存储类似于会话存储，它决定了整个 NoneBot 对事件的处理行为。\",\"NoneBot 默认使用 Python 的字典将事件响应器存储于内存中，但是我们也可以自定义事件响应器存储，将事件响应器存储于其他地方，例如 Redis 等。这样我们就可以实现持久化、在多实例间共享会话状态等功能。\"]},\"58\":{\"h\":\"编写存储提供者\",\"t\":[\"事件响应器的存储提供者 MatcherProvider 抽象类继承自 MutableMapping[int, list[type[Matcher]]]，即以优先级为键，以事件响应器列表为值的映射。我们可以方便地进行逐优先级事件传播。\",\"编写一个自定义的存储提供者，只需要继承并实现 MatcherProvider 抽象类：\",\"from nonebot.matcher import MatcherProvider class CustomProvider(MatcherProvider): ...\"]},\"59\":{\"h\":\"设置存储提供者\",\"t\":[\"我们可以通过 matchers.set_provider 方法设置存储提供者：\",\"from nonebot.matcher import matchers matchers.set_provider(CustomProvider) assert isinstance(matchers.provider, CustomProvider)\"]},\"60\":{\"h\":\"事件响应器进阶\",\"t\":[\"在指南与深入中，我们已经介绍了事件响应器的基本用法以及响应规则、权限控制等功能。在这一节中，我们将介绍事件响应器的组成，内置的响应规则，与第三方响应规则拓展。\",\"提示\",\"事件响应器允许继承，你可以通过直接继承 Matcher 类来创建一个新的事件响应器。\"]},\"61\":{\"h\":\"事件响应器组成\"},\"62\":{\"h\":\"事件响应器类型\",\"t\":[\"事件响应器类型 type 即是该响应器所要响应的事件类型，只有在接收到的事件类型与该响应器的类型相同时，才会触发该响应器。如果类型为空字符串 \\\"\\\"，则响应器将会响应所有类型的事件。事件响应器类型的检查在所有其他检查（权限控制、响应规则）之前进行。\",\"NoneBot 内置了四种常用事件类型：meta_event、message、notice、request，分别对应元事件、消息、通知、请求。通常情况下，协议适配器会将事件合理地分类至这四种类型中。如果有其他类型的事件需要响应，可以自行定义新的类型。\"]},\"63\":{\"h\":\"事件触发权限\",\"t\":[\"事件触发权限 permission 是一个 Permission 对象，这在权限控制一节中已经介绍过。事件触发权限会在事件响应器的类型检查通过后进行检查，如果权限检查通过，则执行响应规则检查。\"]},\"64\":{\"h\":\"事件响应规则\",\"t\":[\"事件响应规则 rule 是一个 Rule 对象，这在响应规则一节中已经介绍过。事件响应器的响应规则会在事件响应器的权限检查通过后进行匹配，如果响应规则检查通过，则触发该响应器。\"]},\"65\":{\"h\":\"响应优先级\",\"t\":[\"响应优先级 priority 是一个正整数，用于指定响应器的优先级。响应器的优先级越小，越先被触发。如果响应器的优先级相同，则按照响应器的注册顺序进行触发。\"]},\"66\":{\"h\":\"阻断\",\"t\":[\"阻断 block 是一个布尔值，用于指定响应器是否阻断事件的传播。如果阻断为 True，则在该响应器被触发后，事件将不会再传播给其他下一优先级的响应器。\",\"NoneBot 内置的事件响应器中，所有非 command 规则的 message 类型的事件响应器都会阻断事件传递，其他则不会。\",\"在部分情况中，可以使用 stop_propagation 方法动态阻止事件传播，该方法需要 handler 在参数中获取 matcher 实例后调用方法。\"]},\"67\":{\"h\":\"有效期\",\"t\":[\"事件响应器的有效期分为 temp 和 expire_time 。temp 是一个布尔值，用于指定响应器是否为临时响应器。如果为 True，则该响应器在被触发后会被自动销毁。expire_time 是一个 datetime 对象，用于指定响应器的过期时间。如果 expire_time 不为 None，则在该时间点后，该响应器会被自动销毁。\"]},\"68\":{\"h\":\"默认状态\",\"t\":[\"事件响应器的默认状态 default_state 是一个 dict 对象，用于指定响应器的默认状态。在响应器被触发时，响应器将会初始化默认状态然后开始执行事件处理流程。\"]},\"69\":{\"h\":\"基本辅助函数\",\"t\":[\"NoneBot 为四种类型的事件响应器提供了五个基本的辅助函数：\",\"on：创建任何类型的事件响应器。\",\"on_metaevent：创建元事件响应器。\",\"on_message：创建消息事件响应器。\",\"on_request：创建请求事件响应器。\",\"on_notice：创建通知事件响应器。\",\"除了 on 函数具有一个 type 参数外，其余参数均相同：\",\"rule：响应规则，可以是 Rule 对象或者 RuleChecker 函数。\",\"permission：事件触发权限，可以是 Permission 对象或者 PermissionChecker 函数。\",\"handlers：事件处理函数列表。\",\"temp：是否为临时响应器。\",\"expire_time：响应器的过期时间。\",\"priority：响应器的优先级。\",\"block：是否阻断事件传播。\",\"state：响应器的默认状态。\",\"在消息类型的事件响应器的基础上，NoneBot 还内置了一些常用的响应规则，并结合为辅助函数来方便我们快速创建指定功能的响应器。下面我们逐个介绍。\"]},\"70\":{\"h\":\"内置响应规则\",\"t\":[\"提示\",\"响应规则的使用方法可以参考 深入 - 响应规则。\"]},\"71\":{\"h\":\"\",\"t\":[\"startswith 响应规则用于匹配消息纯文本部分的开头是否与指定字符串（或一系列字符串）相同。可选参数 ignorecase 用于指定是否忽略大小写，默认为 False。\",\"例如，我们可以创建一个匹配消息开头为 ! 或者 / 的规则：\",\"from nonebot.rule import startswith rule = startswith((\\\"!\\\", \\\"/\\\"), ignorecase=False)\",\"也可以直接使用辅助函数新建一个响应器：\",\"from nonebot import on_startswith matcher = on_startswith((\\\"!\\\", \\\"/\\\"), ignorecase=False)\"]},\"72\":{\"h\":\"\",\"t\":[\"endswith 响应规则用于匹配消息纯文本部分的结尾是否与指定字符串（或一系列字符串）相同。可选参数 ignorecase 用于指定是否忽略大小写，默认为 False。\",\"例如，我们可以创建一个匹配消息结尾为 . 或者 。 的规则：\",\"from nonebot.rule import endswith rule = endswith((\\\".\\\", \\\"。\\\"), ignorecase=False)\",\"也可以直接使用辅助函数新建一个响应器：\",\"from nonebot import on_endswith matcher = on_endswith((\\\".\\\", \\\"。\\\"), ignorecase=False)\"]},\"73\":{\"h\":\"\",\"t\":[\"fullmatch 响应规则用于匹配消息纯文本部分是否与指定字符串（或一系列字符串）完全相同。可选参数 ignorecase 用于指定是否忽略大小写，默认为 False。\",\"例如，我们可以创建一个匹配消息为 ping 或者 pong 的规则：\",\"from nonebot.rule import fullmatch rule = fullmatch((\\\"ping\\\", \\\"pong\\\"), ignorecase=False)\",\"也可以直接使用辅助函数新建一个响应器：\",\"from nonebot import on_fullmatch matcher = on_fullmatch((\\\"ping\\\", \\\"pong\\\"), ignorecase=False)\"]},\"74\":{\"h\":\"\",\"t\":[\"keyword 响应规则用于匹配消息纯文本部分是否包含指定字符串（或一系列字符串）。\",\"例如，我们可以创建一个匹配消息中包含 hello 或者 hi 的规则：\",\"from nonebot.rule import keyword rule = keyword(\\\"hello\\\", \\\"hi\\\")\",\"也可以直接使用辅助函数新建一个响应器：\",\"from nonebot import on_keyword matcher = on_keyword({\\\"hello\\\", \\\"hi\\\"})\"]},\"75\":{\"h\":\"\",\"t\":[\"command 是最常用的响应规则，它用于匹配消息是否为命令。它会根据配置中的 Command Start 和 Command Separator 来判断消息是否为命令。\",\"例如，当我们配置了 Command Start 为 /，Command Separator 为 . 时：\",\"from nonebot.rule import command # 匹配 \\\"/help\\\" 或者 \\\"/帮助\\\" 开头的消息 rule = command(\\\"help\\\", \\\"帮助\\\") # 匹配 \\\"/help.cmd\\\" 开头的消息 rule = command((\\\"help\\\", \\\"cmd\\\"))\",\"也可以直接使用辅助函数新建一个响应器：\",\"from nonebot import on_command matcher = on_command(\\\"help\\\", aliases={\\\"帮助\\\"})\",\"此外，command 响应规则默认允许消息命令与参数间不加空格，如果需要严格匹配命令与参数间的空白符，可以使用 command 函数的 force_whitespace 参数。force_whitespace 参数可以是 bool 类型或者具体的字符串，默认为 False。如果为 True，则命令与参数间必须有任意个数的空白符；如果为字符串，则命令与参数间必须有且与给定字符串一致的空白符。\",\"rule = command(\\\"help\\\", force_whitespace=True) rule = command(\\\"help\\\", force_whitespace=\\\" \\\")\",\"命令解析后的结果可以通过 Command、RawCommand、CommandArg、CommandStart、CommandWhitespace 依赖注入获取。\"]},\"76\":{\"h\":\"\",\"t\":[\"shell_command 响应规则用于匹配类 shell 命令形式的消息。它首先与 command 响应规则一样进行命令匹配，如果匹配成功，则会进行进一步的参数解析。参数解析采用 argparse 标准库进行，在此基础上添加了消息序列 Message 支持。\",\"例如，我们可以创建一个匹配 /cmd 命令并且带有 -v 选项与默认 -h 帮助选项的规则：\",\"from nonebot.rule import shell_command, ArgumentParser parser = ArgumentParser() parser.add_argument(\\\"-v\\\", \\\"--verbose\\\", action=\\\"store_true\\\") rule = shell_command(\\\"cmd\\\", parser=parser)\",\"更多关于 argparse 的使用方法请参考 argparse 文档。我们也可以选择不提供 parser 参数，这样 shell_command 将不会解析参数，但会提供参数列表 argv。\",\"直接使用辅助函数新建一个响应器：\",\"from nonebot import on_shell_command from nonebot.rule import ArgumentParser parser = ArgumentParser() parser.add_argument(\\\"-v\\\", \\\"--verbose\\\", action=\\\"store_true\\\") matcher = on_shell_command(\\\"cmd\\\", parser=parser)\",\"参数解析后的结果可以通过 ShellCommandArgv、ShellCommandArgs 依赖注入获取。\"]},\"77\":{\"h\":\"\",\"t\":[\"regex 响应规则用于匹配消息是否与指定正则表达式匹配。\",\"提示\",\"正则表达式匹配使用 search 而非 match，如需从头匹配请使用 r\\\"^xxx\\\" 模式来确保匹配开头。\",\"例如，我们可以创建一个匹配消息中包含字母并且忽略大小写的规则：\",\"from nonebot.rule import regex rule = regex(r\\\"[a-z]+\\\", flags=re.IGNORECASE)\",\"也可以直接使用辅助函数新建一个响应器：\",\"from nonebot import on_regex matcher = on_regex(r\\\"[a-z]+\\\", flags=re.IGNORECASE)\",\"正则匹配后的结果可以通过 RegexStr、RegexGroup、RegexDict 依赖注入获取。\"]},\"78\":{\"h\":\"\",\"t\":[\"to_me 响应规则用于匹配事件是否与机器人相关。\",\"例如：\",\"from nonebot.rule import to_me rule = to_me()\"]},\"79\":{\"h\":\"\",\"t\":[\"is_type 响应规则用于匹配事件类型是否为指定类型（或者一系列类型）。\",\"例如，我们可以创建一个匹配 OneBot v11 私聊和群聊消息事件的规则：\",\"from nonebot.rule import is_type from nonebot.adapters.onebot.v11 import PrivateMessageEvent, GroupMessageEvent rule = is_type(PrivateMessageEvent, GroupMessageEvent)\"]},\"80\":{\"h\":\"响应器组\",\"t\":[\"为了更方便的管理一系列功能相近的响应器，NoneBot 提供了两种响应器组，它们可以帮助我们进行响应器的统一管理。\"]},\"81\":{\"h\":\"\",\"t\":[\"CommandGroup 可以用于管理一系列具有相同前置命令的子命令响应器。\",\"例如，我们创建 /cmd、/cmd.sub、/cmd.help 三个命令，他们具有相同的优先级：\",\"from nonebot import CommandGroup group = CommandGroup(\\\"cmd\\\", priority=10) cmd = group.command(tuple()) sub_cmd = group.command(\\\"sub\\\") help_cmd = group.command(\\\"help\\\")\",\"命令别名 aliases 默认不会添加 CommandGroup 设定的前缀，如果需要为 aliases 添加前缀，可以添加 prefix_aliases=True 参数:\",\"from nonebot import CommandGroup group = CommandGroup(\\\"cmd\\\", prefix_aliases=True) cmd = group.command(tuple()) help_cmd = group.command(\\\"help\\\", aliases={\\\"帮助\\\"})\",\"这样就能成功匹配 /cmd、/cmd.help、/cmd.帮助 命令。如果未设置，将默认匹配 /cmd、/cmd.help、/帮助 命令。\"]},\"82\":{\"h\":\"\",\"t\":[\"MatcherGroup 可以用于管理一系列具有相同属性的响应器。\",\"例如，我们创建一个具有相同响应规则的响应器组：\",\"from nonebot.rule import to_me from nonebot import MatcherGroup group = MatcherGroup(rule=to_me()) matcher1 = group.on_message() matcher2 = group.on_message()\"]},\"83\":{\"h\":\"第三方响应规则\"},\"84\":{\"h\":\"Alconna\",\"t\":[\"nonebot-plugin-alconna 是一类提供了拓展响应规则的插件。 该插件使用 Alconna 作为命令解析器， 是一个简单、灵活、高效的命令参数解析器, 并且不局限于解析命令式字符串。\",\"该插件提供了一类新的事件响应器辅助函数 on_alconna，以及 AlconnaResult 等依赖注入函数。\",\"基于 Alconna 的特性，该插件同时提供了一系列便捷的消息段标注。 标注可用于在 Alconna 中匹配消息中除 text 外的其他消息段，也可用于快速创建各适配器下的消息段。所有标注位于 nonebot_plugin_alconna.adapters 中。\",\"该插件同时通过提供 UniMessage (通用消息模型) 实现了跨平台接收和发送消息的功能。\",\"详情请阅读最佳实践中的 命令解析拓展 章节。\"]},\"85\":{\"h\":\"插件信息\",\"t\":[\"NoneBot 是一个插件化的框架，可以通过加载插件来扩展功能。同时，我们也可以通过 NoneBot 的插件系统来获取相关信息，例如插件的名称、使用方法，用于收集帮助信息等。下面我们将介绍如何为插件添加元数据，以及如何获取插件信息。\"]},\"86\":{\"h\":\"插件元数据\",\"t\":[\"在 NoneBot 中，插件 Plugin 对象中存储了插件系统所需要的一系列信息。包括插件的索引名称、插件模块、插件中的事件响应器、插件父子关系等。通常，只有插件开发者才需要关心这些信息，而插件使用者或者机器人用户想要看到的是插件使用方法等帮助信息。因此，我们可以为插件添加插件元数据 PluginMetadata，它允许插件开发者为插件添加一些额外的信息。这些信息编写于插件模块的顶层，可以直接通过源码查看，或者通过 NoneBot 插件系统获取收集到的信息，通过其他方式发送给机器人用户等。\",\"现在，假设我们有一个插件 example, 它的模块结构如下：\",\"📦 awesome-bot ├── 📂 awesome_bot │ └── 📂 plugins | └── 📂 example | ├── 📜 __init__.py | └── 📜 config.py ├── 📜 pyproject.toml └── 📜 README.md\",\"我们需要在插件顶层模块 example/__init__.py 中添加插件元数据，如下所示：\",\"from nonebot.plugin import PluginMetadata from .config import Config __plugin_meta__ = PluginMetadata( name=\\\"示例插件\\\", description=\\\"这是一个示例插件\\\", usage=\\\"没什么用\\\", type=\\\"application\\\", config=Config, extra={}, )\",\"我们可以看到，插件元数据 PluginMetadata 有三个基本属性：插件名称、插件描述、插件使用方法。除此之外，还有几个可选的属性（具体填写见发布插件章节）：\",\"type：插件类别，发布插件必填。当前有效类别有：library（为其他插件编写提供功能），application（向机器人用户提供功能）；\",\"homepage：插件项目主页，发布插件必填；\",\"config：插件的配置类，如无配置类可不填；\",\"supported_adapters：支持的适配器模块名集合，若插件可以保证兼容所有适配器（即仅使用基本适配器功能）可不填写；\",\"extra：一个字典，可以用于存储任意信息。其他插件可以通过约定 extra 字典的键名来达成收集某些特殊信息的目的。\",\"请注意，这里的插件名称是供使用者或机器人用户查看的，与插件索引名称无关。插件索引名称（插件模块名称）仅用于 NoneBot 插件系统内部索引。\"]},\"87\":{\"h\":\"获取插件信息\",\"t\":[\"NoneBot 提供了多种获取插件对象的方法，例如获取当前所有已导入的插件：\",\"import nonebot plugins: set[Plugin] = nonebot.get_loaded_plugins()\",\"也可以通过插件索引名称获取插件对象：\",\"import nonebot plugin: Plugin | None = nonebot.get_plugin(\\\"example\\\")\",\"或者通过模块路径获取插件对象：\",\"import nonebot plugin: Plugin | None = nonebot.get_plugin_by_module_name(\\\"awesome_bot.plugins.example\\\")\",\"如果需要获取所有当前声明的插件名称（可能还未加载），可以使用 get_available_plugin_names 函数：\",\"import nonebot plugin_names: set[str] = nonebot.get_available_plugin_names()\",\"插件对象 Plugin 中包含了多个属性：\",\"name：插件索引名称\",\"module：插件模块\",\"module_name：插件模块路径\",\"manager：插件管理器\",\"matcher：插件中定义的事件响应器\",\"parent_plugin：插件的父插件\",\"sub_plugins：插件的子插件集合\",\"metadata：插件元数据\",\"通过这些属性以及插件元数据，我们就可以收集所需要的插件信息了。\"]},\"88\":{\"h\":\"嵌套插件\",\"t\":[\"NoneBot 支持嵌套插件，即一个插件可以包含其他插件。通过这种方式，我们可以将一个大型插件拆分成多个功能子插件，使得插件更加清晰、易于维护。我们可以直接在插件中使用 NoneBot 加载插件的方法来加载子插件。\"]},\"89\":{\"h\":\"创建嵌套插件\",\"t\":[\"我们可以在使用 nb-cli 命令创建插件时，选择直接通过模板创建一个嵌套插件：\",\"$ nb plugin create [?] 插件名称: parent [?] 使用嵌套插件? (y/N) Y [?] 输出目录: awesome_bot/plugins\",\"或者使用 nb plugin create --sub-plugin 选项直接创建一个嵌套插件。\"]},\"90\":{\"h\":\"已有插件\",\"t\":[\"如果你已经有一个插件，想要在其中嵌套加载子插件，可以在插件的 __init__.py 中添加如下代码：\",\"import nonebot from pathlib import Path sub_plugins = nonebot.load_plugins( str(Path(__file__).parent.joinpath(\\\"plugins\\\").resolve()) )\",\"这样，parent 插件就会加载 parent/plugins 目录下的所有插件。NoneBot 会正确识别这些插件的父子关系，你可以在 parent 的插件信息中看到这些子插件的信息，也可以在子插件信息中看到它们的父插件信息。\"]},\"91\":{\"h\":\"跨插件访问\",\"t\":[\"NoneBot 插件化系统的设计使得插件之间可以功能独立、各司其职，我们可以更好地维护和扩展插件。但是，有时候我们可能需要在不同插件之间调用功能。NoneBot 生态中就有一类插件，它们专为其他插件提供功能支持，如：定时任务插件、数据存储插件等。这时候我们就需要在插件之间进行跨插件访问。\"]},\"92\":{\"h\":\"插件跟踪\",\"t\":[\"由于 NoneBot 插件系统通过 Import Hooks 的方式实现插件加载与跟踪管理，因此我们不能在 NoneBot 跟踪插件前进行模块 import，这会导致插件加载失败。即，我们不能在使用 NoneBot 提供的加载插件方法前，直接使用 import 语句导入插件。\",\"对于在项目目录下的插件，我们通常直接使用 load_from_toml 等方法一次性加载所有插件。由于这些插件已经被声明，即便插件导入顺序不同，NoneBot 也能正确跟踪插件。此时，我们不需要对跨插件访问进行特殊处理。但当我们使用了外部插件，如果没有事先声明或加载插件，NoneBot 并不会将其当作插件进行跟踪，可能会出现意料之外的错误出现。\",\"简单来说，我们必须在 import 外部插件之前，确保依赖的外部插件已经被声明或加载。\"]},\"93\":{\"h\":\"插件依赖声明\",\"t\":[\"NoneBot 提供了一种方法来确保我们依赖的插件已经被正确加载，即使用 require 函数。通过 require 函数，我们可以在当前插件中声明依赖的插件，NoneBot 会在加载当前插件时，检查依赖的插件是否已经被加载，如果没有，会尝试优先加载依赖的插件。\",\"假设我们有一个插件 a 依赖于插件 b，我们可以在插件 a 中使用 require 函数声明其依赖于插件 b：\",\"from nonebot import require require(\\\"b\\\") from b import some_function\",\"其中，require 函数的参数为插件索引名称或者外部插件的模块名称。在完成依赖声明后，我们可以在插件 a 中直接导入插件 b 所提供的功能。\"]},\"94\":{\"h\":\"添加路由\",\"t\":[\"在驱动器一节中，我们了解了驱动器的两种类型。既然驱动器可以作为服务端运行，那么我们就可以向驱动器添加路由规则，从而实现自定义的 API 接口等功能。在添加路由规则时，我们需要注意驱动器的类型，详情可以参考选择驱动器。\",\"NoneBot 中，我们可以通过两种途径向 ASGI 驱动器添加路由规则：\",\"通过 NoneBot 的兼容层建立路由规则。\",\"直接向 ASGI 应用添加路由规则。\",\"这两种途径各有优劣，前者可以在各种服务端型驱动器下运行，但并不能直接使用 ASGI 应用框架提供的特性与功能；后者直接使用 ASGI 应用，更自由、功能完整，但只能在特定类型驱动器下运行。\",\"在向驱动器添加路由规则时，我们需要注意驱动器是否为服务端类型，我们可以通过以下方式判断：\",\"from nonebot import get_driver from nonebot.drivers import ASGIMixin # highlight-next-line can_use = isinstance(get_driver(), ASGIMixin)\"]},\"95\":{\"h\":\"通过兼容层添加路由\",\"t\":[\"NoneBot 兼容层定义了两个数据类 HTTPServerSetup 和 WebSocketServerSetup，分别用于定义 HTTP 服务端和 WebSocket 服务端的路由规则。\"]},\"96\":{\"h\":\"HTTP 路由\",\"t\":[\"HTTPServerSetup 具有四个属性：\",\"path：路由路径，不支持特殊占位表达式。类型为 URL。\",\"method：请求方法。类型为 str。\",\"name：路由名称，不可重复。类型为 str。\",\"handle_func：路由处理函数。类型为 Callable[[Request], Awaitable[Response]]。\",\"例如，我们添加一个 /hello 的路由，当请求方法为 GET 时，返回 200 OK 以及返回体信息：\",\"from nonebot import get_driver from nonebot.drivers import URL, Request, Response, ASGIMixin, HTTPServerSetup async def hello(request: Request) -> Response: return Response(200, content=\\\"Hello, world!\\\") if isinstance((driver := get_driver()), ASGIMixin): driver.setup_http_server( HTTPServerSetup( path=URL(\\\"/hello\\\"), method=\\\"GET\\\", name=\\\"hello\\\", handle_func=hello, ) )\",\"对于 Request 和 Response 的详细信息，可以参考 API 文档。\"]},\"97\":{\"h\":\"WebSocket 路由\",\"t\":[\"WebSocketServerSetup 具有三个属性：\",\"path：路由路径，不支持特殊占位表达式。类型为 URL。\",\"name：路由名称，不可重复。类型为 str。\",\"handle_func：路由处理函数。类型为 Callable[[WebSocket], Awaitable[Any]]。\",\"例如，我们添加一个 /ws 的路由，发送所有接收到的数据：\",\"from nonebot import get_driver from nonebot.drivers import URL, ASGIMixin, WebSocket, WebSocketServerSetup async def ws_handler(ws: WebSocket): await ws.accept() try: while True: data = await ws.receive() await ws.send(data) except WebSocketClosed as e: # handle closed ... finally: with contextlib.suppress(Exception): await websocket.close() # do some cleanup if isinstance((driver := get_driver()), ASGIMixin): driver.setup_websocket_server( WebSocketServerSetup( path=URL(\\\"/ws\\\"), name=\\\"ws\\\", handle_func=ws_handler, ) )\",\"对于 WebSocket 的详细信息，可以参考 API 文档。\"]},\"98\":{\"h\":\"使用 ASGI 应用添加路由\"},\"99\":{\"h\":\"获取 ASGI 应用\",\"t\":[\"NoneBot 服务端类型的驱动器具有两个属性 server_app 和 asgi，分别对应驱动框架应用和 ASGI 应用。通常情况下，这两个应用是同一个对象。我们可以通过 get_app() 方法快速获取：\",\"import nonebot app = nonebot.get_app() asgi = nonebot.get_asgi()\"]},\"100\":{\"h\":\"添加路由规则\",\"t\":[\"在获取到了 ASGI 应用后，我们就可以直接使用 ASGI 应用框架提供的功能来添加路由规则了。这里我们以 FastAPI 为例，演示如何添加路由规则。\",\"在下面的代码中，我们添加了一个 GET 类型的 /api 路由，具体方法参考 FastAPI 文档。\",\"import nonebot from fastapi import FastAPI app: FastAPI = nonebot.get_app() @app.get(\\\"/api\\\") async def custom_api(): return {\\\"message\\\": \\\"Hello, world!\\\"}\"]},\"101\":{\"h\":\"钩子函数\",\"t\":[\"钩子编程（hooking），也称作“挂钩”，是计算机程序设计术语，指通过拦截软件模块间的函数调用、消息传递、事件传递来修改或扩展操作系统、应用程序或其他软件组件的行为的各种技术。处理被拦截的函数调用、事件、消息的代码，被称为钩子（hook）。\",\"在 NoneBot 中有一系列预定义的钩子函数，可以分为两类：全局钩子函数和事件处理钩子函数，这些钩子函数可以用装饰器的形式来使用。\"]},\"102\":{\"h\":\"全局钩子函数\",\"t\":[\"全局钩子函数是指 NoneBot 针对其本身运行过程的钩子函数。\",\"这些钩子函数是由驱动器来运行的，故需要先获得全局驱动器。\"]},\"103\":{\"h\":\"启动准备\",\"t\":[\"这个钩子函数会在 NoneBot 启动时运行。很多时候，我们并不希望在模块被导入时就执行一些耗时操作，如：连接数据库，这时候我们可以在这个钩子函数中进行这些操作。\",\"from nonebot import get_driver driver = get_driver() @driver.on_startup async def do_something(): pass\"]},\"104\":{\"h\":\"终止处理\",\"t\":[\"这个钩子函数会在 NoneBot 终止时运行。我们可以在这个钩子函数中进行一些清理工作，如：关闭数据库连接。\",\"from nonebot import get_driver driver = get_driver() @driver.on_shutdown async def do_something(): pass\"]},\"105\":{\"h\":\"Bot 连接处理\",\"t\":[\"这个钩子函数会在任何协议适配器连接 Bot 对象至 NoneBot 时运行。支持依赖注入，可以直接注入 Bot 对象。\",\"from nonebot import get_driver driver = get_driver() @driver.on_bot_connect async def do_something(bot: Bot): pass\"]},\"106\":{\"h\":\"Bot 断开处理\",\"t\":[\"这个钩子函数会在 Bot 断开与 NoneBot 的连接时运行。支持依赖注入，可以直接注入 Bot 对象。\",\"from nonebot import get_driver driver = get_driver() @driver.on_bot_disconnect async def do_something(bot: Bot): pass\"]},\"107\":{\"h\":\"事件处理钩子函数\",\"t\":[\"这些钩子函数指的是影响 NoneBot 进行事件处理的函数, 这些函数可以跟普通的事件处理函数一样接受相应的参数。\"]},\"108\":{\"h\":\"事件预处理\",\"t\":[\"这个钩子函数会在 NoneBot 接收到新的事件时运行。支持依赖注入，可以注入 Bot 对象、事件、会话状态。在这个钩子函数内抛出 nonebot.exception.IgnoredException 会使 NoneBot 忽略该事件。\",\"from nonebot.exception import IgnoredException from nonebot.message import event_preprocessor @event_preprocessor async def do_something(event: Event): if not event.is_tome(): raise IgnoredException(\\\"some reason\\\")\"]},\"109\":{\"h\":\"事件后处理\",\"t\":[\"这个钩子函数会在 NoneBot 处理事件完成后运行。支持依赖注入，可以注入 Bot 对象、事件、会话状态。\",\"from nonebot.message import event_postprocessor @event_postprocessor async def do_something(event: Event): pass\"]},\"110\":{\"h\":\"运行预处理\",\"t\":[\"这个钩子函数会在 NoneBot 运行事件响应器前运行。支持依赖注入，可以注入 Bot 对象、事件、事件响应器、会话状态。在这个钩子函数内抛出 nonebot.exception.IgnoredException 也会使 NoneBot 忽略本次运行。\",\"from nonebot.message import run_preprocessor from nonebot.exception import IgnoredException @run_preprocessor async def do_something(event: Event, matcher: Matcher): if not event.is_tome(): raise IgnoredException(\\\"some reason\\\")\"]},\"111\":{\"h\":\"运行后处理\",\"t\":[\"这个钩子函数会在 NoneBot 运行事件响应器后运行。支持依赖注入，可以注入 Bot 对象、事件、事件响应器、会话状态、运行中产生的异常。\",\"from nonebot.message import run_postprocessor @run_postprocessor async def do_something(event: Event, matcher: Matcher, exception: Optional[Exception]): pass\"]},\"112\":{\"h\":\"平台接口调用钩子\",\"t\":[\"这个钩子函数会在 Bot 对象调用平台接口时运行。在这个钩子函数中，我们可以通过引起 MockApiException 异常来阻止 Bot 对象调用平台接口并返回指定的结果。\",\"from nonebot.adapters import Bot from nonebot.exception import MockApiException @Bot.on_calling_api async def handle_api_call(bot: Bot, api: str, data: Dict[str, Any]): if api == \\\"send_msg\\\": raise MockApiException(result={\\\"message_id\\\": 123})\"]},\"113\":{\"h\":\"平台接口调用后钩子\",\"t\":[\"这个钩子函数会在 Bot 对象调用平台接口后运行。在这个钩子函数中，我们可以通过引起 MockApiException 异常来忽略平台接口返回的结果并返回指定的结果。\",\"from nonebot.adapters import Bot from nonebot.exception import MockApiException @Bot.on_called_api async def handle_api_result( bot: Bot, exception: Optional[Exception], api: str, data: Dict[str, Any], result: Any ): if not exception and api == \\\"send_msg\\\": raise MockApiException(result={**result, \\\"message_id\\\": 123})\"]},\"114\":{\"h\":\"会话更新\",\"t\":[\"在 NoneBot 中，在某个事件响应器对事件响应后，即是进入了会话状态，会话状态会持续到整个事件响应流程结束。会话过程中，机器人可以与用户进行多次交互。每次需要等待用户事件时，NoneBot 将会复制一个新的临时事件响应器，并更新该事件响应器使其响应当前会话主体的消息，这个过程称为会话更新。\",\"会话更新分为两部分：更新事件响应器类型和更新事件触发权限。\"]},\"115\":{\"h\":\"更新事件响应器类型\",\"t\":[\"通常情况下，与机器人用户进行的会话都是通过消息事件进行的，因此会话更新后的默认响应事件类型为 message。如果希望接收一个特定类型的消息，比如 notice 等，我们需要自定义响应事件类型更新函数。响应事件类型更新函数是一个 Dependent，可以使用依赖注入。\",\"foo = on_message() @foo.type_updater async def _() -> str: return \\\"notice\\\"\",\"在注册了上述响应事件类型更新函数后，当我们需要等待用户事件时，将只会响应 notice 类型的事件。如果希望在会话过程中的不同阶段响应不同类型的事件，我们就需要使用更复杂的逻辑来更新响应事件类型（如：根据会话状态），这里将不再展示。\"]},\"116\":{\"h\":\"更新事件触发权限\",\"t\":[\"会话通常是由机器人与用户进行的一对一交互，因此会话更新后的默认触发权限为当前事件的会话 ID。这个会话 ID 由协议适配器生成，通常由用户 ID 和群 ID 等组成。如果希望实现更复杂的会话功能（如：多用户同时参与的会话），我们需要自定义触发权限更新函数。触发权限更新函数是一个 Dependent，可以使用依赖注入。\",\"from nonebot.permission import User foo = on_message() @foo.permission_updater async def _(event: Event, matcher: Matcher) -> Permission: return Permission(User.from_event(event, perm=matcher.permission))\",\"上述权限更新函数是默认的权限更新函数，它将会话的触发权限更新为当前事件的会话 ID。如果我们希望响应多个用户的消息，我们可以如下修改：\",\"from nonebot.permission import USER foo = on_message() @foo.permission_updater async def _(matcher: Matcher) -> Permission: return USER(\\\"session1\\\", \\\"session2\\\", perm=matcher.permission)\",\"请注意，此处为全大写字母的 USER 权限，它可以匹配多个会话 ID。通过这种方式，我们可以实现多用户同时参与的会话。\",\"我们已经了解了如何控制会话的更新，相信你已经能够实现更复杂的会话功能了，例如多人小游戏等等。欢迎将你的作品分享到插件商店。\"]},\"117\":{\"h\":\"日志\",\"t\":[\"无论是在开发还是在生产环境中，日志都是一个重要的功能，可以帮助我们了解运行状况、排查问题等。虽然我们可以使用 print 来将需要的信息输出到控制台，但是这种方式难以控制，而且不利于日志的归档、分析等。NoneBot 使用优秀的 Loguru 库来进行日志记录。\"]},\"118\":{\"h\":\"记录日志\",\"t\":[\"我们可以从 NoneBot 中导入 logger 对象，然后使用 logger 对象的方法来记录日志。\",\"from nonebot import logger logger.trace(\\\"This is a trace message\\\") logger.debug(\\\"This is a debug message\\\") logger.info(\\\"This is an info message\\\") logger.success(\\\"This is a success message\\\") logger.warning(\\\"This is a warning message\\\") logger.error(\\\"This is an error message\\\") logger.critical(\\\"This is a critical message\\\")\",\"我们仅需一行代码即可记录对应级别的日志。日志可以通过配置 LOG_LEVEL 配置项来过滤输出等级，控制台中仅会输出大于等于 LOG_LEVEL 的日志。默认的 LOG_LEVEL 为 INFO，即只会输出 INFO、SUCCESS、WARNING、ERROR、CRITICAL 级别的日志。\",\"如果需要记录 Exception traceback 日志，可以向 logger 添加 exception 选项：\",\"try: 1 / 0 except ZeroDivisionError: logger.opt(exception=True).error(\\\"ZeroDivisionError\\\")\",\"如果需要输出彩色日志，可以向 logger 添加 colors 选项：\",\"logger.opt(colors=True).warning(\\\"We got a <red>BIG</red> problem\\\")\",\"更多日志记录方法请参考 Loguru 文档。\"]},\"119\":{\"h\":\"自定义日志输出\",\"t\":[\"NoneBot 在启动时会添加一个默认的日志处理器，该处理器会将日志输出到stdout，并且根据 LOG_LEVEL 配置项过滤日志等级。\",\"默认的日志格式为：\",\"<g>{time:MM-DD HH:mm:ss}</g> [<lvl>{level}</lvl>] <c><u>{name}</u></c> | {message}\",\"我们可以从 nonebot.log 模块导入以使用 NoneBot 的默认格式和过滤器：\",\"from nonebot.log import default_format, default_filter\",\"如果需要自定义日志格式，我们需要移除 NoneBot 默认的日志处理器并添加新的日志处理器。例如，在机器人入口文件中 nonebot.init 之前添加以下内容：\",\"from nonebot.log import logger_id # 移除 NoneBot 默认的日志处理器 logger.remove(logger_id) # 添加新的日志处理器 logger.add( sys.stdout, level=0, diagnose=True, format=\\\"<g>{time:MM-DD HH:mm:ss}</g> [<lvl>{level}</lvl>] <c><u>{name}</u></c> | {message}\\\", filter=default_filter )\",\"如果想要输出日志到文件，我们可以使用 logger.add 方法添加文件处理器：\",\"logger.add(\\\"error.log\\\", level=\\\"ERROR\\\", format=default_format, rotation=\\\"1 week\\\")\",\"更多日志处理器的使用方法请参考 Loguru 文档。\"]},\"120\":{\"h\":\"重定向 logging 日志\",\"t\":[\"logging 是 Python 标准库中的日志模块，NoneBot 提供了一个 logging handler 用于将 logging 日志重定向到 loguru 处理。\",\"from nonebot.log import LoguruHandler # root logger 添加 LoguruHandler logging.basicConfig(handlers=[LoguruHandler()]) # 或者为其他 logging.Logger 添加 LoguruHandler logger.addHandler(LoguruHandler())\"]},\"121\":{\"h\":\"事件类型与重载\",\"t\":[\"在之前的示例中，我们已经了解了如何获取事件信息以及使用平台接口。但是，事件信息通常不仅仅包含消息这一个内容，还有其他平台提供的信息，例如消息发送时间、消息发送者等等。同时，在使用平台接口时，我们需要确保使用的平台接口与所要发送的平台类型一致，对不同类型的事件需要做出不同的处理。在本章节中，我们将介绍如何获取事件更多的信息以及根据事件类型进行不同的处理。\"]},\"122\":{\"h\":\"事件类型\",\"t\":[\"在 NoneBot 中，事件均是 nonebot.adapters.Event 基类的子类型，基类对一些必要的属性进行了抽象，子类型则根据不同的平台进行了实现。在自定义权限一节中，我们就使用了 Event 的抽象方法 get_user_id 来获取事件发送者 ID，这个方法由协议适配器进行了实现，返回机器人用户对应的平台 ID。更多的基类抽象方法可以在使用适配器中查看。\",\"既然事件是基类的子类型，我们实际可以获得的信息通常多于基类抽象方法所提供的。如果我们不满足于基类能获得的信息，我们可以小小的修改一下事件处理函数的事件参数类型注解，使其变为子类型，这样我们就可以通过协议适配器定义的子类型来获取更多的信息。我们以 Console 协议适配器为例：\",\"from nonebot.adapters.console import MessageEvent @weather.got(\\\"location\\\", prompt=\\\"请输入地名\\\") async def got_location(event: MessageEvent, location: str = ArgPlainText()): await weather.finish(f\\\"{event.time.strftime('%Y-%m-%d')} {location} 的天气是...\\\")\",\"在上面的代码中，我们获取了 Console 协议适配器的消息事件提供的发送时间 time 属性。\",\"注意\",\"如果基类就能满足你的需求，那么就不要修改事件参数类型注解，这样可以使你的代码更加通用，可以在更多平台上运行。如何根据不同平台事件类型进行不同的处理，我们将在重载一节中介绍。\"]},\"123\":{\"h\":\"重载\",\"t\":[\"我们在编写机器人时，常常会遇到这样一个问题：如何对私聊和群聊消息进行不同的处理？如何对不同平台的事件进行不同的处理？针对这些问题，NoneBot 提供了一个便捷而高效的解决方案 ── 重载。简单来说，依赖函数会根据其参数的类型注解来决定是否执行，忽略不符合其参数类型注解的情况。这样，我们就可以通过修改事件参数类型注解来实现对不同事件的处理，或者修改 Bot 参数类型注解来实现使用不同平台的接口。我们以 OneBot 协议适配器为例：\",\"from nonebot.adapters.onebot.v11 import PrivateMessageEvent, GroupMessageEvent @matcher.handle() async def handle_private(event: PrivateMessageEvent): await matcher.finish(\\\"私聊消息\\\") @matcher.handle() async def handle_group(event: GroupMessageEvent): await matcher.finish(\\\"群聊消息\\\")\",\"这样，机器人用户就会在私聊和群聊中分别收到不同的回复。同样的，我们也可以通过修改 Bot 参数类型注解来实现使用不同平台的接口：\",\"from nonebot.adapters.console import Bot as ConsoleBot from nonebot.adapters.onebot.v11 import Bot as OneBot @matcher.handle() async def handle_console(bot: ConsoleBot): await bot.bell() @matcher.handle() async def handle_onebot(bot: OneBot): await bot.send_group_message(group_id=123123, message=\\\"OneBot\\\")\",\"注意\",\"重载机制对所有的参数类型注解都有效，因此，依赖注入也可以使用这个特性来对不同的返回值进行处理。\",\"但 Bot、Event 和 Matcher 三者的参数类型注解具有最高检查优先级，如果三者任一类型注解不匹配，那么其他依赖注入将不会执行（如：Depends）。\",\"提示\",\"如何更好地编写一个跨平台的插件，我们将在最佳实践中介绍。\"]},\"124\":{\"h\":\"响应规则\",\"t\":[\"机器人在实际应用中，往往会接收到多种多样的事件类型，NoneBot 通过响应规则来控制事件的处理。\",\"在指南中，我们为 weather 命令添加了一个 rule=to_me() 参数，这个参数就是一个响应规则，确保只有在私聊或者 @bot 时才会响应。\",\"响应规则是一个 Rule 对象，它由一系列的 RuleChecker 函数组成，每个 RuleChecker 函数都会检查事件是否符合条件，如果所有的检查都通过，则事件会被处理。\"]},\"125\":{\"h\":\"RuleChecker\",\"t\":[\"RuleChecker 是一个返回值为 bool 类型的依赖函数，即 RuleChecker 支持依赖注入。我们可以根据上一节中添加的配置项，在 weather 插件目录中编写一个响应规则：\",\"from nonebot import get_plugin_config from .config import Config plugin_config = get_plugin_config(Config) async def is_enable() -> bool: return plugin_config.weather_plugin_enabled weather = on_command(\\\"天气\\\", rule=is_enable)\",\"在上面的代码中，我们定义了一个函数 is_enable，它会检查配置项 weather_plugin_enabled 是否为 True。这个函数 is_enable 即为一个 RuleChecker。\"]},\"126\":{\"h\":\"Rule\",\"t\":[\"Rule 是若干个 RuleChecker 的集合，它会并发调用每个 RuleChecker，只有当所有 RuleChecker 检查通过时匹配成功。例如：我们可以组合两个 RuleChecker，一个用于检查插件是否启用，一个用于检查用户是否在黑名单中：\",\"from nonebot.rule import Rule from nonebot.adapters import Event async def is_enable() -> bool: return plugin_config.weather_plugin_enabled async def is_blacklisted(event: Event) -> bool: return event.get_user_id() not in BLACKLIST rule = Rule(is_enable, is_blacklisted) weather = on_command(\\\"天气\\\", rule=rule)\"]},\"127\":{\"h\":\"合并响应规则\",\"t\":[\"在定义响应规则时，我们可以将规则进行细分，来更好地复用规则。而在使用时，我们需要合并多个规则。除了使用 Rule 对象来组合多个 RuleChecker 外，我们还可以对 Rule 对象进行合并。在原 weather 插件中，我们可以将 rule=to_me() 与 rule=is_enable 使用 & 运算符合并：\",\"from nonebot.rule import to_me from nonebot import get_plugin_config from .config import Config plugin_config = get_plugin_config(Config) async def is_enable() -> bool: return plugin_config.weather_plugin_enabled weather = on_command( \\\"天气\\\", rule=to_me() & is_enable, aliases={\\\"weather\\\", \\\"查天气\\\"}, priority=plugin_config.weather_command_priority, block=True, )\",\"这样，weather 命令就只会在插件启用且在私聊或者 @bot 时才会响应。\",\"合并响应规则可以有多种形式，例如：\",\"rule1 = Rule(foo_checker) rule2 = Rule(bar_checker) rule = rule1 & rule2 rule = rule1 & bar_checker rule = foo_checker & rule2\",\"同时，我们也无需担心合并了一个 None 值，Rule 会忽略 None 值。\",\"assert (rule & None) is rule\"]},\"128\":{\"h\":\"主动使用响应规则\",\"t\":[\"除了在事件响应器中使用响应规则外，我们也可以主动使用响应规则来判断事件是否符合条件。例如：\",\"rule = Rule(some_checker) result: bool = await rule(bot, event, state)\",\"我们只需要传入 Bot 对象、事件和会话状态，Rule 会并发调用所有 RuleChecker 进行检查，并返回结果。\"]},\"129\":{\"h\":\"内置响应规则\",\"t\":[\"NoneBot 内置了一些常用的响应规则，可以直接通过事件响应器辅助函数或者自行合并其他规则使用。内置响应规则列表可以参考事件响应器进阶\"]},\"130\":{\"h\":\"会话状态\",\"t\":[\"在事件处理流程中，和用户交互的过程即是会话。在会话中，我们可能需要记录一些信息，例如用户的重试次数等等，以便在会话中的不同阶段进行判断和处理。这些信息都可以存储于会话状态中。\",\"NoneBot 中的会话状态是一个字典，可以通过类型 T_State 来获取。字典内可以存储任意类型的数据，但是要注意的是，NoneBot 本身会在会话状态中存储一些信息，因此不要使用 NoneBot 使用的键名。\",\"from nonebot.typing import T_State @matcher.got(\\\"key\\\", prompt=\\\"请输入密码\\\") async def _(state: T_State, key: str = ArgPlainText()): if key != \\\"some password\\\": try_count = state.get(\\\"try_count\\\", 1) if try_count >= 3: await matcher.finish(\\\"密码错误次数过多\\\") else: state[\\\"try_count\\\"] = try_count + 1 await matcher.reject(\\\"密码错误，请重新输入\\\") await matcher.finish(\\\"密码正确\\\")\",\"会话状态的生命周期与事件处理流程相同，在期间的任何一个事件处理函数都可以进行读写。\",\"from nonebot.typing import T_State @matcher.handle() async def _(state: T_State): state[\\\"key\\\"] = \\\"value\\\" @matcher.handle() async def _(state: T_State): await matcher.finish(state[\\\"key\\\"])\",\"会话状态还可以用于发送动态消息，消息模板在发送时会使用会话状态字典进行渲染。消息模板的使用方法已经在消息处理中介绍过，这里不再赘述。\",\"from nonebot.typing import T_State from nonebot.adapters import MessageTemplate @matcher.handle() async def _(state: T_State): state[\\\"username\\\"] = \\\"user\\\" @matcher.got(\\\"password\\\", prompt=MessageTemplate(\\\"请输入 {username} 的密码\\\")) async def _(): await matcher.finish(MessageTemplate(\\\"密码为 {password}\\\"))\"]},\"131\":{\"h\":\"下一步\",\"t\":[\"至此，我们已经了解了 NoneBot 的大多数功能用法，相信你已经可以独自写出一个插件了。现在你可以选择：\",\"即刻开始插件编写！\",\"更深入地了解 NoneBot 的更多功能和原理！\"]},\"132\":{\"h\":\"数据存储\",\"t\":[\"在使用插件的过程中，难免会需要存储一些持久化数据，例如用户的个人信息、群组的信息等。除了使用数据库等第三方存储之外，还可以使用本地文件来自行管理数据。NoneBot 提供了 nonebot-plugin-localstore 插件，可用于获取正确的数据存储路径并写入数据。\"]},\"133\":{\"h\":\"安装插件\",\"t\":[\"在使用前请先安装 nonebot-plugin-localstore 插件至项目环境中，可参考获取商店插件来了解并选择安装插件的方式。如：\",\"在项目目录下执行以下命令：\",\"nb plugin install nonebot-plugin-localstore\"]},\"134\":{\"h\":\"使用插件\",\"t\":[\"nonebot-plugin-localstore 插件兼容 Windows、Linux 和 macOS 等操作系统，使用时无需关心操作系统的差异。同时插件提供 nb-cli 脚本，可以使用 nb localstore 命令来检查数据存储路径。\",\"在使用本插件前同样需要使用 require 方法进行加载并导入需要使用的方法，可参考 跨插件访问 一节进行了解，如：\",\"from nonebot import require require(\\\"nonebot_plugin_localstore\\\") import nonebot_plugin_localstore as store # 获取插件缓存目录 cache_dir = store.get_plugin_cache_dir() # 获取插件缓存文件 cache_file = store.get_plugin_cache_file(\\\"file_name\\\") # 获取插件数据目录 data_dir = store.get_plugin_data_dir() # 获取插件数据文件 data_file = store.get_plugin_data_file(\\\"file_name\\\") # 获取插件配置目录 config_dir = store.get_plugin_config_dir() # 获取插件配置文件 config_file = store.get_plugin_config_file(\\\"file_name\\\")\",\"警告\",\"在 Windows 和 macOS 系统下，插件的数据目录和配置目录是同一个目录，因此在使用时需要注意避免文件名冲突。\",\"插件提供的方法均返回一个 pathlib.Path 路径，可以参考 pathlib 文档来了解如何使用。常用的方法有：\",\"from pathlib import Path data_file = store.get_plugin_data_file(\\\"file_name\\\") # 写入文件内容 data_file.write_text(\\\"Hello World!\\\") # 读取文件内容 data = data_file.read_text()\",\"提示\",\"对于嵌套插件，子插件的存储目录将位于父插件存储目录下。\"]},\"135\":{\"h\":\"配置项\"},\"136\":{\"h\":\"localstore_use_cwd\",\"t\":[\"使用当前工作目录作为数据存储目录，以下数据目录配置项默认值将会对应变更\",\"默认值：False\",\"LOCALSTORE_USE_CWD=true\"]},\"137\":{\"h\":\"localstore_cache_dir\",\"t\":[\"自定义缓存目录\",\"默认值：\",\"当 localstore_use_cwd 为 True 时，缓存目录为 <current_working_directory>/cache，否则：\",\"macOS: ~/Library/Caches/nonebot2\",\"Unix: ~/.cache/nonebot2 (XDG default)\",\"Windows: C:\\\\Users\\\\<username>\\\\AppData\\\\Local\\\\nonebot2\\\\Cache\",\"LOCALSTORE_CACHE_DIR=/tmp/cache\"]},\"138\":{\"h\":\"localstore_data_dir\",\"t\":[\"自定义数据目录\",\"默认值：\",\"当 localstore_use_cwd 为 True 时，数据目录为 <current_working_directory>/data，否则：\",\"macOS: ~/Library/Application Support/nonebot2\",\"Unix: ~/.local/share/nonebot2 or in $XDG_DATA_HOME, if defined\",\"Win XP (not roaming): C:\\\\Documents and Settings\\\\<username>\\\\Application Data\\\\nonebot2\",\"Win 7 (not roaming): C:\\\\Users\\\\<username>\\\\AppData\\\\Local\\\\nonebot2\",\"LOCALSTORE_DATA_DIR=/tmp/data\"]},\"139\":{\"h\":\"localstore_config_dir\",\"t\":[\"自定义配置目录\",\"默认值：\",\"当 localstore_use_cwd 为 True 时，配置目录为 <current_working_directory>/config，否则：\",\"macOS: same as user_data_dir\",\"Unix: ~/.config/nonebot2\",\"Win XP (roaming): C:\\\\Documents and Settings\\\\<username>\\\\Local Settings\\\\Application Data\\\\nonebot2\",\"Win 7 (roaming): C:\\\\Users\\\\<username>\\\\AppData\\\\Roaming\\\\nonebot2\",\"LOCALSTORE_CONFIG_DIR=/tmp/config\"]},\"140\":{\"h\":\"localstore_plugin_cache_dir\",\"t\":[\"自定义插件缓存目录\",\"默认值：{}\",\"LOCALSTORE_PLUGIN_CACHE_DIR=' { \\\"plugin_id\\\": \\\"/tmp/plugin_cache\\\" } '\"]},\"141\":{\"h\":\"localstore_plugin_data_dir\",\"t\":[\"自定义插件数据目录\",\"默认值：{}\",\"LOCALSTORE_PLUGIN_DATA_DIR=' { \\\"plugin_id\\\": \\\"/tmp/plugin_data\\\" } '\"]},\"142\":{\"h\":\"localstore_plugin_config_dir\",\"t\":[\"自定义插件配置目录\",\"默认值：{}\",\"LOCALSTORE_PLUGIN_CONFIG_DIR=' { \\\"plugin_id\\\": \\\"/tmp/plugin_config\\\" } '\"]},\"143\":{\"h\":\"错误跟踪\",\"t\":[\"在应用实际运行过程中，可能会出现各种各样的错误。可能是由于代码逻辑错误，也可能是由于用户输入错误，甚至是由于第三方服务的错误。这些错误都会导致应用的运行出现问题，这时候就需要对错误进行跟踪，以便及时发现问题并进行修复。NoneBot 提供了 nonebot-plugin-sentry 插件，支持 sentry 平台，可以方便地进行错误跟踪。\"]},\"144\":{\"h\":\"安装插件\",\"t\":[\"在使用前请先安装 nonebot-plugin-sentry 插件至项目环境中，可参考获取商店插件来了解并选择安装插件的方式。如：\",\"在项目目录下执行以下命令：\",\"nb plugin install nonebot-plugin-sentry\"]},\"145\":{\"h\":\"使用插件\",\"t\":[\"在安装完成之后，仅需要对插件进行简单的配置即可使用。\"]},\"146\":{\"h\":\"获取 sentry DSN\",\"t\":[\"前往 sentry 平台，注册并创建一个新的项目，然后在项目设置中找到 Client Keys (DSN)，复制其中的 DSN 值。\"]},\"147\":{\"h\":\"配置插件\",\"t\":[\"注意\",\"错误跟踪通常在生产环境中使用，因此开发环境中 sentry_dsn 留空即会停用插件。\",\"在项目 dotenv 配置文件中添加以下配置即可使用：\",\"SENTRY_DSN=<your_sentry_dsn>\"]},\"148\":{\"h\":\"配置项\",\"t\":[\"配置项具体含义参考 Sentry Docs。\",\"sentry_dsn: str\",\"sentry_debug: bool = False\",\"sentry_release: str | None = None\",\"sentry_release: str | None = None\",\"sentry_environment: str | None = nonebot env\",\"sentry_server_name: str | None = None\",\"sentry_sample_rate: float = 1.\",\"sentry_max_breadcrumbs: int = 100\",\"sentry_attach_stacktrace: bool = False\",\"sentry_send_default_pii: bool = False\",\"sentry_in_app_include: List[str] = Field(default_factory=list)\",\"sentry_in_app_exclude: List[str] = Field(default_factory=list)\",\"sentry_request_bodies: str = \\\"medium\\\"\",\"sentry_with_locals: bool = True\",\"sentry_ca_certs: str | None = None\",\"sentry_before_send: Callable[[Any, Any], Any | None] | None = None\",\"sentry_before_breadcrumb: Callable[[Any, Any], Any | None] | None = None\",\"sentry_transport: Any | None = None\",\"sentry_http_proxy: str | None = None\",\"sentry_https_proxy: str | None = None\",\"sentry_shutdown_timeout: int = 2\"]},\"149\":{\"h\":\"定时任务\",\"t\":[\"APScheduler (Advanced Python Scheduler) 是一个 Python 第三方库，其强大的定时任务功能被广泛应用于各个场景。在 NoneBot 中，定时任务作为一个额外功能，依赖于基于 APScheduler 开发的 nonebot-plugin-apscheduler 插件进行支持。\"]},\"150\":{\"h\":\"安装插件\",\"t\":[\"在使用前请先安装 nonebot-plugin-apscheduler 插件至项目环境中，可参考获取商店插件来了解并选择安装插件的方式。如：\",\"在项目目录下执行以下命令：\",\"nb plugin install nonebot-plugin-apscheduler\"]},\"151\":{\"h\":\"使用插件\",\"t\":[\"nonebot-plugin-apscheduler 本质上是对 APScheduler 进行了封装以适用于 NoneBot 开发，因此其使用方式与 APScheduler 本身并无显著区别。在此我们会简要介绍其调用方法，更多的使用方面的功能请参考APScheduler 官方文档。\"]},\"152\":{\"h\":\"导入调度器\",\"t\":[\"由于 nonebot_plugin_apscheduler 作为插件，因此需要在使用前对其进行加载并导入其中的 scheduler 调度器来创建定时任务。使用 require 方法可轻松完成这一过程，可参考 跨插件访问 一节进行了解。\",\"from nonebot import require require(\\\"nonebot_plugin_apscheduler\\\") from nonebot_plugin_apscheduler import scheduler\"]},\"153\":{\"h\":\"添加定时任务\",\"t\":[\"在 APScheduler 官方文档 中提供了以下两种直接添加任务的方式：\",\"from nonebot import require require(\\\"nonebot_plugin_apscheduler\\\") from nonebot_plugin_apscheduler import scheduler # 基于装饰器的方式 @scheduler.scheduled_job(\\\"cron\\\", hour=\\\"*/2\\\", id=\\\"job_0\\\", args=[1], kwargs={arg2: 2}) async def run_every_2_hour(arg1: int, arg2: int): pass # 基于 add_job 方法的方式 def run_every_day(arg1: int, arg2: int): pass scheduler.add_job( run_every_day, \\\"interval\\\", days=1, id=\\\"job_1\\\", args=[1], kwargs={arg2: 2} )\",\"注意\",\"由于 APScheduler 的定时任务并不是由事件响应器所触发的事件，因此其任务函数无法同事件处理函数一样通过依赖注入获取上下文信息，也无法通过事件响应器对象的方法进行任何操作，因此我们需要使用调用平台 API的方式来获取信息或收发消息。\",\"相对于事件处理依赖而言，编写定时任务更像是编写普通的函数，需要我们自行获取信息以及发送信息，请不要将事件处理依赖的特殊语法用于定时任务！\",\"关于 APScheduler 的更多使用方法，可以参考 APScheduler 官方文档 进行了解。\"]},\"154\":{\"h\":\"配置项\"},\"155\":{\"h\":\"apscheduler_autostart\",\"t\":[\"类型: bool\",\"默认值: True\",\"是否自动启动 scheduler ，若不启动需要自行调用 scheduler.start()。\"]},\"156\":{\"h\":\"apscheduler_log_level\",\"t\":[\"类型: int\",\"默认值: 30\",\"apscheduler 输出的日志等级\",\"WARNING = 30 (默认)\",\"INFO = 20\",\"DEBUG = 10 (只有在开启 nonebot 的 debug 模式才会显示 debug 日志)\"]},\"157\":{\"h\":\"apscheduler_config\",\"t\":[\"类型: dict\",\"默认值: { \\\"apscheduler.timezone\\\": \\\"Asia/Shanghai\\\" }\",\"apscheduler 的相关配置。参考配置调度器, 配置参数\",\"配置需要包含 apscheduler. 作为前缀，例如 apscheduler.timezone。\"]},\"158\":{\"h\":\"参与讨论\",\"t\":[\"如果在安装或者开发 NoneBot 过程中遇到了任何问题，或者有新奇的点子，欢迎参与我们的社区讨论：\",\"点击下方链接前往 GitHub，前往 Issues 页面，在 New Issue Template 中选择 Question\",\"NoneBot：\",\"通过 QQ 群（点击下方链接直达）\",\"通过 QQ 频道\",\"通过 Discord 服务器（点击下方链接直达）\"]},\"159\":{\"h\":\"贡献指南\"},\"160\":{\"h\":\"Code of Conduct\",\"t\":[\"请参阅 Code of Conduct。\"]},\"161\":{\"h\":\"参与开发\",\"t\":[\"请参阅 Contributing。\"]},\"162\":{\"h\":\"鸣谢\",\"t\":[\"感谢以下开发者对 NoneBot2 作出的贡献：\"]},\"163\":{\"h\":\"编写适配器\",\"t\":[\"在编写适配器之前，我们需要先了解适配器的功能与组成，适配器通常由 Adapter、Bot、Event 和 Message 四个部分组成，在编写适配器时，我们需要继承 NoneBot 中的基类，并根据实际平台来编写每个部分功能。\"]},\"164\":{\"h\":\"组织结构\",\"t\":[\"NoneBot 适配器项目通常以 nonebot-adapter-{adapter-name} 作为项目名，并以命名空间包的形式编写，即在 nonebot/adapters/{adapter-name} 目录中编写实际代码，例如：\",\"📦 nonebot-adapter-{adapter-name} ├── 📂 nonebot │ ├── 📂 adapters │ │ ├── 📂 {adapter-name} │ │ │ ├── 📜 __init__.py │ │ │ ├── 📜 adapter.py │ │ │ ├── 📜 bot.py │ │ │ ├── 📜 config.py │ │ │ ├── 📜 event.py │ │ │ └── 📜 message.py ├── 📜 pyproject.toml └── 📜 README.md\",\"提示\",\"上述的项目结构仅作推荐，不做强制要求，保证实际可用性即可。\"]},\"165\":{\"h\":\"使用 NB-CLI 创建项目\",\"t\":[\"我们可以使用脚手架快速创建项目：\",\"nb adapter create\",\"按照指引，输入适配器名称以及存储位置，即可创建一个带有基本结构的适配器项目。\"]},\"166\":{\"h\":\"组成部分\",\"t\":[\"提示\",\"本章节的代码中提到的 Adapter、Bot、Event 和 Message 等，均为下文中适配器所编写的类，而非 NoneBot 中的基类。\"]},\"167\":{\"h\":\"Log\",\"t\":[\"适配器在处理时通常需要打印日志，但直接使用 NoneBot 的默认 logger 不方便区分适配器输出和其它日志。因此我们可以使用 NoneBot 提供的 logger_wrapper 方法，自定义一个 log 函数用于快捷打印适配器日志：\",\"from nonebot.utils import logger_wrapper log = logger_wrapper(\\\"your_adapter_name\\\")\",\"这个 log 函数会在默认 logger 中添加适配器名称前缀，它接收三个参数：日志等级、日志内容以及可选的异常，具体用法如下：\",\"from .log import log log(\\\"DEBUG\\\", \\\"A DEBUG log.\\\") log(\\\"INFO\\\", \\\"A INFO log.\\\") try: ... except Exception as e: log(\\\"ERROR\\\", \\\"something error.\\\", e)\"]},\"168\":{\"h\":\"Config\",\"t\":[\"通常适配器需要一些配置项，例如平台连接密钥等。适配器的配置方法与插件配置类似，例如：\",\"from pydantic import BaseModel class Config(BaseModel): xxx_id: str xxx_token: str\",\"配置项的读取将在下方 Adapter 中介绍。\"]},\"169\":{\"h\":\"Adapter\",\"t\":[\"Adapter 负责转换事件、调用接口，以及正确创建 Bot 对象并注册到 NoneBot 中。在编写平台相关内容之前，我们需要继承基类，并实现适配器的基本信息：\",\"from typing import Any from typing_extensions import override from nonebot.drivers import Driver from nonebot import get_plugin_config from nonebot.adapters import Adapter as BaseAdapter from .config import Config class Adapter(BaseAdapter): @override def __init__(self, driver: Driver, **kwargs: Any): super().__init__(driver, **kwargs) # 读取适配器所需的配置项 self.adapter_config: Config = get_plugin_config(Config) @classmethod @override def get_name(cls) -> str: \\\"\\\"\\\"适配器名称\\\"\\\"\\\" return \\\"your_adapter_name\\\"\"]},\"170\":{\"h\":\"与平台交互\",\"t\":[\"NoneBot 提供了多种 Driver 来帮助适配器进行网络通信，主要分为客户端和服务端两种类型。我们需要根据平台文档和特性选择合适的通信方式，并编写相关方法用于初始化适配器，与平台建立连接和进行交互：\"]},\"171\":{\"h\":\"客户端通信方式\",\"t\":[\"import asyncio from typing_extensions import override from nonebot import get_plugin_config from nonebot.exception import WebSocketClosed from nonebot.drivers import Request, WebSocketClientMixin class Adapter(BaseAdapter): @override def __init__(self, driver: Driver, **kwargs: Any): super().__init__(driver, **kwargs) self.adapter_config: Config = get_plugin_config(Config) self.task: Optional[asyncio.Task] = None # 存储 ws 任务 self.setup() def setup(self) -> None: if not isinstance(self.driver, WebSocketClientMixin): # 判断用户配置的Driver类型是否符合适配器要求，不符合时应抛出异常 raise RuntimeError( f\\\"Current driver {self.config.driver} doesn't support websocket client connections!\\\" f\\\"{self.get_name()} Adapter need a WebSocket Client Driver to work.\\\" ) # 在 NoneBot 启动和关闭时进行相关操作 self.driver.on_startup(self.startup) self.driver.on_shutdown(self.shutdown) async def startup(self) -> None: \\\"\\\"\\\"定义启动时的操作，例如和平台建立连接\\\"\\\"\\\" self.task = asyncio.create_task(self._forward_ws()) # 建立 ws 连接 async def _forward_ws(self): request = Request( method=\\\"GET\\\", url=\\\"your_platform_websocket_url\\\", headers={\\\"token\\\": \\\"...\\\"}, # 鉴权请求头 ) while True: try: async with self.websocket(request) as ws: try: # 处理 websocket ... except WebSocketClosed as e: log( \\\"ERROR\\\", \\\"<r><bg #f8bbd0>WebSocket Closed</bg #f8bbd0></r>\\\", e, ) except Exception as e: log( \\\"ERROR\\\", \\\"<r><bg #f8bbd0>Error while process data from \\\" \\\"websocket platform_websocket_url. \\\" \\\"Trying to reconnect...</bg #f8bbd0></r>\\\", e, ) finally: # 这里要断开 Bot 连接 except Exception as e: # 尝试重连 log( \\\"ERROR\\\", \\\"<r><bg #f8bbd0>Error while setup websocket to \\\" \\\"platform_websocket_url. Trying to reconnect...</bg #f8bbd0></r>\\\", e, ) await asyncio.sleep(3) # 重连间隔 async def shutdown(self) -> None: \\\"\\\"\\\"定义关闭时的操作，例如停止任务、断开连接\\\"\\\"\\\" # 断开 ws 连接 if self.task is not None and not self.task.done(): self.task.cancel()\"]},\"172\":{\"h\":\"服务端通信方式\",\"t\":[\"from nonebot import get_plugin_config from nonebot.drivers import ( Request, ASGIMixin, WebSocket, HTTPServerSetup, WebSocketServerSetup ) class Adapter(BaseAdapter): @override def __init__(self, driver: Driver, **kwargs: Any): super().__init__(driver, **kwargs) self.adapter_config: Config = get_plugin_config(Config) self.setup() def setup(self) -> None: if not isinstance(self.driver, ASGIMixin): raise RuntimeError( f\\\"Current driver {self.config.driver} doesn't support asgi server!\\\" f\\\"{self.get_name()} Adapter need a asgi server driver to work.\\\" ) # 建立服务端路由 # HTTP Webhook 路由 http_setup = HTTPServerSetup( URL(\\\"your_webhook_url\\\"), # 路由地址 \\\"POST\\\", # 接收的方法 \\\"WEBHOOK name\\\", # 路由名称 self._handle_http, # 处理函数 ) self.setup_http_server(http_setup) # 反向 Websocket 路由 ws_setup = WebSocketServerSetup( URL(\\\"your_websocket_url\\\"), # 路由地址 \\\"WebSocket name\\\", # 路由名称 self._handle_ws, # 处理函数 ) self.setup_websocket_server(ws_setup) async def _handle_http(self, request: Request) -> Response: \\\"\\\"\\\"HTTP 路由处理函数，只有一个类型为 Request 的参数，且返回值类型为 Response\\\"\\\"\\\" ... return Response( status_code=200, # 状态码 headers={\\\"something\\\": \\\"something\\\"}, # 响应头 content=\\\"xxx\\\", # 响应内容 ) async def _handle_ws(self, websocket: WebSocket) -> Any: \\\"\\\"\\\"WebSocket 路由处理函数，只有一个类型为 WebSocket 的参数\\\"\\\"\\\" ...\",\"更多通信交互方式可以参考以下适配器：\",\"OneBot - WebSocket 客户端、WebSocket 服务端、HTTP WEBHOOK、HTTP POST\",\"QQGuild - WebSocket 服务端\",\"Telegram - HTTP WEBHOOK\"]},\"173\":{\"h\":\"建立 Bot 连接\",\"t\":[\"在与平台建立连接后，我们需要将 Bot 实例化，并调用适配器提供的的 bot_connect 方法告知 NoneBot 建立了 Bot 连接。在与平台断开连接或出现某些异常进行重连时，我们需要调用 bot_disconnect 方法告知 NoneBot 断开了 Bot 连接。\",\"from .bot import Bot class Adapter(BaseAdapter): def _handle_connect(self): bot_id = ... # 通过配置或者平台 API 等方式，获取到 Bot 的 ID bot = Bot(self, self_id=bot_id) # 实例化 Bot self.bot_connect(bot) # 建立 Bot 连接 def _handle_disconnect(self): self.bot_disconnect(bot) # 断开 Bot 连接\"]},\"174\":{\"h\":\"转换 Event 事件\",\"t\":[\"在接收到来自平台的事件数据后，我们需要将其转为适配器的 Event，并调用 Bot 的 handle_event 方法来让 Bot 对事件进行处理：\",\"import asyncio from typing import Any, Dict from nonebot.compat import type_validate_python from .bot import Bot from .event import Event from .log import log class Adapter(BaseAdapter): @classmethod def payload_to_event(cls, payload: Dict[str, Any]) -> Event: \\\"\\\"\\\"根据平台事件的特性，转换平台 payload 为具体 Event Event 模型继承自 pydantic.BaseModel，具体请参考 pydantic 文档 \\\"\\\"\\\" # 做一层异常处理，以应对平台事件数据的变更 try: return type_validate_python(your_event_class, payload) except Exception as e: # 无法正常解析为具体 Event 时，给出日志提示 log( \\\"WARNING\\\", f\\\"Parse event error: {str(payload)}\\\", ) # 也可以尝试转为基础 Event 进行处理 return type_validate_python(Event, payload) async def _forward(self, bot: Bot): payload: Dict[str, Any] # 接收到的事件数据 event = self.payload_to_event(payload) # 让 bot 对事件进行处理 asyncio.create_task(bot.handle_event(event))\"]},\"175\":{\"h\":\"调用平台 API\",\"t\":[\"我们需要实现 Adapter 的 _call_api 方法，使开发者能够调用平台提供的 API。如果通过 WebSocket 通信可以通过 send 方法来发送数据，如果采用 HTTP 请求，则需要通过 NoneBot 提供的 Request 对象，调用 driver 的 request 方法来发送请求。\",\"from typing import Any from typing_extensions import override from nonebot.drivers import Request, WebSocket from .bot import Bot class Adapter(BaseAdapter): @override async def _call_api(self, bot: Bot, api: str, **data: Any) -> Any: log(\\\"DEBUG\\\", f\\\"Calling API <y>{api}</y>\\\") # 给予日志提示 platform_data = your_handle_data_method(data) # 自行将数据转为平台所需要的格式 # 采用 HTTP 请求的方式，需要构造一个 Request 对象 request = Request( method=\\\"GET\\\", # 请求方法 url=api, # 接口地址 headers=..., # 请求头，通常需要包含鉴权信息 params=platform_data, # 自行处理数据的传输形式 # json=platform_data, # data=platform_data, ) # 发送请求，返回结果 return await self.driver.request(request) # 采用 WebSocket 通信的方式，可以直接调用 send 方法发送数据 # 通过某种方式获取到 bot 对应的 websocket 对象 ws: WebSocket = your_get_websocket_method(bot.self_id) await ws.send_text(platform_data) # 发送 str 类型的数据 await ws.send_bytes(platform_data) # 发送 bytes 类型的数据 await ws.send(platform_data) # 是以上两种方式的合体 # 接收并返回结果，同样的，也有 str 和 bytes 的区别 return await ws.receive_text() return await ws.receive_bytes() return await ws.receive()\",\"调用平台 API 实现方式具体可以参考以下适配器：\",\"Websocket:\",\"OneBot V11\",\"OneBot V12\",\"HTTP:\",\"QQ 频道\",\"Telegram\",\"飞书\"]},\"176\":{\"h\":\"Bot\",\"t\":[\"Bot 是机器人开发者能够直接获取并使用的核心对象，负责存储平台机器人相关信息，并提供回复事件、调用 API 的上层方法。我们需要继承基类 Bot，并实现相关方法：\",\"from typing import TYPE_CHECKING, Any, Union from typing_extensions import override from nonebot.message import handle_event from nonebot.adapters import Bot as BaseBot from .event import Event from .message import Message, MessageSegment if TYPE_CHECKING: from .adapter import Adapter class Bot(BaseBot): \\\"\\\"\\\" your_adapter_name 协议 Bot 适配。 \\\"\\\"\\\" @override def __init__(self, adapter: Adapter, self_id: str, **kwargs: Any): super().__init__(adapter, self_id) self.adapter: Adapter = adapter # 一些有关 Bot 的信息也可以在此定义和存储 async def handle_event(self, event: Event): # 根据需要，对事件进行某些预处理，例如： # 检查事件是否和机器人有关操作，去除事件消息首尾的 @bot # 检查事件是否有回复消息，调用平台 API 获取原始消息的消息内容 ... # 调用 handle_event 让 NoneBot 对事件进行处理 await handle_event(self, event) @override async def send( self, event: Event, message: Union[str, Message, MessageSegment], **kwargs: Any, ) -> Any: # 根据平台实现 Bot 回复事件的方法 # 将消息处理为平台所需的格式后，调用发送消息接口进行发送，例如： data = message_to_platform_data(message) await self.send_message( data=data, ... )\"]},\"177\":{\"h\":\"Event\",\"t\":[\"Event 是 NoneBot 中的事件主体对象，所有平台消息在进入处理流程前需要转换为 NoneBot 事件。我们需要继承基类 Event，并实现相关方法：\",\"from typing_extensions import override from nonebot.compat import model_dump from nonebot.adapters import Event as BaseEvent class Event(BaseEvent): @override def get_event_name(self) -> str: # 返回事件的名称，用于日志打印 return \\\"event name\\\" @override def get_event_description(self) -> str: # 返回事件的描述，用于日志打印，请注意转义 loguru tag return escape_tag(repr(model_dump(self))) @override def get_message(self): # 获取事件消息的方法，根据事件具体实现，如果事件非消息类型事件，则抛出异常 raise ValueError(\\\"Event has no message!\\\") @override def get_user_id(self) -> str: # 获取用户 ID 的方法，根据事件具体实现，如果事件没有用户 ID，则抛出异常 raise ValueError(\\\"Event has no context!\\\") @override def get_session_id(self) -> str: # 获取事件会话 ID 的方法，根据事件具体实现，如果事件没有相关 ID，则抛出异常 raise ValueError(\\\"Event has no context!\\\") @override def is_tome(self) -> bool: # 判断事件是否和机器人有关 return False\",\"然后根据平台消息的类型，编写各种不同的事件，并且注意要根据事件类型实现 get_type 方法，具体请参考事件类型。消息类型事件还应重写 get_message 和 get_user_id 等方法，例如：\",\"from .message import Message class HeartbeatEvent(Event): \\\"\\\"\\\"心跳时间，通常为元事件\\\"\\\"\\\" @override def get_type(self) -> str: return \\\"meta_event\\\" class MessageEvent(Event): \\\"\\\"\\\"消息事件\\\"\\\"\\\" message_id: str user_id: str @override def get_type(self) -> str: return \\\"message\\\" @override def get_message(self) -> Message: # 返回事件消息对应的 NoneBot Message 对象 return self.message @override def get_user_id(self) -> str: return self.user_id class JoinRoomEvent(Event): \\\"\\\"\\\"加入房间事件，通常为通知事件\\\"\\\"\\\" user_id: str room_id: str @override def get_type(self) -> str: return \\\"notice\\\" class ApplyAddFriendEvent(Event): \\\"\\\"\\\"申请添加好友事件，通常为请求事件\\\"\\\"\\\" user_id: str @override def get_type(self) -> str: return \\\"request\\\"\"]},\"178\":{\"h\":\"Message\",\"t\":[\"Message 负责正确序列化消息，以便机器人插件处理。我们需要继承 MessageSegment 和 Message 两个类，并实现相关方法：\",\"from typing import Type, Iterable from typing_extensions import override from nonebot.utils import escape_tag from nonebot.adapters import Message as BaseMessage from nonebot.adapters import MessageSegment as BaseMessageSegment class MessageSegment(BaseMessageSegment[\\\"Message\\\"]): @classmethod @override def get_message_class(cls) -> Type[\\\"Message\\\"]: # 返回适配器的 Message 类型本身 return Message @override def __str__(self) -> str: # 返回该消息段的纯文本表现形式，通常在日志中展示 return \\\"text of MessageSegment\\\" @override def is_text(self) -> bool: # 判断该消息段是否为纯文本 return self.type == \\\"text\\\" class Message(BaseMessage[MessageSegment]): @classmethod @override def get_segment_class(cls) -> Type[MessageSegment]: # 返回适配器的 MessageSegment 类型本身 return MessageSegment @staticmethod @override def _construct(msg: str) -> Iterable[MessageSegment]: # 实现从字符串中构造消息数组，如无字符串嵌入格式可直接返回文本类型 MessageSegment ...\",\"然后根据平台具体的消息类型，来实现各种 MessageSegment 消息段，具体可以参考以下适配器：\",\"OneBot\",\"QQGuild\",\"Telegram\"]},\"179\":{\"h\":\"适配器测试\",\"t\":[\"关于适配器测试相关内容在这里不再展开，开发者可以根据需要进行合适的测试。这里为开发者提供几个常见问题的解决方法：\",\"在测试中无法导入 editable 模式安装的适配器代码。在 pytest 的 conftest.py 内添加如下代码：\",\"from pathlib import Path import nonebot.adapters nonebot.adapters.__path__.append( # type: ignore str((Path(__file__).parent.parent / \\\"nonebot\\\" / \\\"adapters\\\").resolve()) )\",\"需要计算适配器测试覆盖率，请在 pyproject.toml 中添加 pytest 配置：\",\"[tool.pytest.ini_options] addopts = \\\"--cov nonebot/adapters/{adapter-name} --cov-report term-missing\\\"\"]},\"180\":{\"h\":\"后续工作\",\"t\":[\"在完成适配器代码的编写后，如果想要将适配器发布到 NoneBot 商店，我们需要将适配器发布到 PyPI 中，然后前往商店页面，切换到适配器页签，点击发布适配器按钮，填写适配器相关信息并提交。\",\"另外建议编写适配器文档或者一些插件开发示例，以便其他开发者使用我们的适配器。\"]},\"181\":{\"h\":\"暑期 2021\",\"t\":[\"开源软件供应链点亮计划 - 暑期 2021 是中国科学院软件研究所与 openEuler 社区共同举办的一项面向高校学生的暑期活动，旨在鼓励在校学生积极参与开源软件的开发维护，促进优秀开源软件社区的蓬勃发展。关于具体的活动规划、报名方式，请查看该活动的 官网 和 帮助文档。\",\"NoneBot 社区有幸作为开源社区参与了本次活动，下面列出了目前我们已经发布的项目，欢迎感兴趣的同学在上面给出的活动官网报名，或通过 contact@nonebot.dev 联系我们。\"]},\"182\":{\"h\":\"NoneBot v1\"},\"183\":{\"h\":\"更新 NoneBot v1 文档中的“指南”部分\",\"t\":[\"由于 NoneBot v1 和 aiocqhttp 最初基于的 QQ 机器人平台不再提供服务，CQHTTP 接口也转型且改名为 OneBot 标准，目前 NoneBot v1 文档的“指南”部分和 aiocqhttp 文档有部分过时内容需要更新。我们希望将其中与旧的机器人平台相关的内容改为基于 go-cqhttp 或通用的 OneBot 表述，同时对 NoneBot v1 的 awesome-bot 示例做一次全面检查，修改其中可能已经不可用的部分。\",\"难度：低\",\"导师：@cleoold\",\"产出要求\",\"修改“指南”文档和 aiocqhttp 文档中与旧的 QQ 机器人平台相关的部分\",\"检查 awesome-bot 示例是否有已经过时/不可用的地方，并更新/修复\",\"修改“图灵机器人”案例，使用其它 AI 聊天 API 提供商（需先做简单调研）\",\"技术要求\",\"熟悉 Python 编程语言及 asyncio 机制\",\"了解 Git 基本用法\",\"了解聊天机器人基本开发过程\",\"了解 VuePress 更佳\"]},\"184\":{\"h\":\"NoneBot v1 API 文档自动生成\",\"t\":[\"目前 NoneBot v1 的文档中“API”部分是手动编写的，在更新代码接口的同时需要手动更新文档，可能造成文档与代码不匹配，形成额外的维护成本。我们希望将 API 文档改为直接编写在 Python docstring 中，通过工具自动生成 API 文档。\",\"难度：中\",\"导师：@cleoold\",\"产出要求\",\"调研市面上常见的 Python API 文档生成工具\",\"在代码中补充 API 文档\",\"编写或应用开源工具自动生成 API 文档\",\"配置 GitHub Actions 或其它 CI 自动化构建和部署 API 文档\",\"技术要求\",\"熟悉 Python 编程语言及 asyncio 和 Type Hints\",\"了解 Git 基本用法\",\"了解 Sphinx 等文档生成工具更佳\",\"了解 GitHub Actions 等 CI 工具更佳\"]},\"185\":{\"h\":\"NoneBot v2\"},\"186\":{\"h\":\"NoneBot v2 自动化测试框架“NoneBug”\",\"t\":[\"在聊天机器人的开发过程中，一套自动化的测试机制是非常重要的，特别是对于 NoneBot 2 这类为大型机器人开发而设计的项目来说，需要手动测试每一个边际条件是非常痛苦的。我们希望能够开发一款基于 NoneBot 2 插件机制的自动化测试框架，为 NoneBot 2 用户提供一套易用便捷、高度灵活的自动化测试框架。\",\"难度：高\",\"导师：@yanyongyu\",\"产出要求\",\"调研现有的 Python 和其它语言集成测试框架\",\"设计 NoneBug 的用户 API 和实现方式\",\"实现 NoneBug 自动化测试框架\",\"编写详细的使用文档\",\"技术要求\",\"熟悉 Python 编程语言及 asyncio 和 Type Hints\",\"了解 Git 基本用法\",\"了解 NoneBot v2 的基本原理和使用方式\",\"了解主流的 Python 自动化测试框架\"]},\"187\":{\"h\":\"NoneBot v2 Telegram 适配器\",\"t\":[\"目前 NoneBot v2 已支持 OneBot、Mirai HTTP API、钉钉协议，社区反馈有更多的平台需求，希望能在 NoneBot v2 获得更多的跨平台支持，提高机器人的便携性。同时，我们也希望随着新平台加入，提升现有 NoneBot v2 核心代码的平台通用性。Telegram 是一款较为广泛使用的安全即时聊天软件，同时其官方提供了丰富的聊天机器人 API，因此我们希望为 NoneBot v2 编写一个 Telegram 适配器来支持 Telegram 机器人的开发。\",\"难度：中\",\"导师：@yanyongyu\",\"产出要求\",\"调研 Telegram Bot API 以及 WebHook 等官方接口\",\"编写 Telegram 适配器并能够使用\",\"代码遵守项目 Contributing 规范\",\"技术要求\",\"熟悉 Python 编程语言及 asyncio 和 Type Hints\",\"了解 Git 基本用法\",\"了解 Web 开发相关知识\",\"了解 Sphinx 等文档生成工具更佳\"]},\"188\":{\"h\":\"NoneBot v2 飞书适配器\",\"t\":[\"目前 NoneBot v2 已支持 OneBot、Mirai HTTP API、钉钉协议，社区反馈有更多的平台需求，希望能在 NoneBot v2 获得更多的跨平台支持，提高机器人的便携性。同时，我们也希望随着新平台加入，提升现有 NoneBot v2 核心代码的平台通用性。飞书是目前企业用户广泛使用的即时聊天和协作软件，其官方提供了丰富的聊天机器人 API，因此我们希望为 NoneBot v2 编写一个飞书适配器来支持飞书机器人的开发。\",\"难度：中\",\"导师：@yanyongyu\",\"产出要求\",\"调研飞书机器人 API 以及 WebHook 等官方接口\",\"编写飞书适配器并能够使用\",\"代码遵守项目 Contributing 规范\",\"技术要求\",\"熟悉 Python 编程语言及 asyncio 和 Type Hints\",\"了解 Git 基本用法\",\"了解 Web 开发相关知识\",\"了解 Sphinx 等文档生成工具更佳\"]},\"189\":{\"h\":\"OneBot\"},\"190\":{\"h\":\"设计 OneBot v12 接口标准\",\"t\":[\"目前的 OneBot 标准的 v11 版本仍然与 QQ 平台有较多耦合，我们希望在 v12 去掉与 QQ 耦合的历史包袱，形成一个通用的、可扩展的、易于使用的同时易于实现的聊天机器人接口标准。\",\"难度：中\",\"导师：@richardchien\",\"产出要求\",\"调研各聊天机器人平台的官方/非官方接口特点\",\"通用化 OneBot 核心 API，分离 QQ 特定的 API，去掉无用 API\",\"优化现有的通信、消息表示机制\",\"补充 QQ 特定的缺失 API\",\"文档需符合风格指南\",\"技术要求\",\"熟悉至少两个聊天平台的聊天机器人开发\",\"了解 Git 基本用法\",\"了解使用不同语言编写聊天机器人时的常用实践\",\"对文档的优雅性与美观性有追求更佳\"]},\"191\":{\"h\":\"实现 Rust 版 libonebot\",\"t\":[\"目前最常用的 OneBot 实现包括 go-cqhttp、onebot-kotlin、node-onebot 等，这些实现都各自重复实现了 Web 通信、消息解析、配置读写等功能，当社区中的开发者想针对一个新的聊天平台实现 OneBot 时，他们往往同样需要再次实现类似逻辑。我们希望使用 Rust 编写一个 libonebot 模块，该模块实现所有 OneBot 实现所共享的功能，从而方便其他开发者们使用 Rust 快速编写具体的 OneBot 实现。同时，我们希望借此项目在聊天机器人社区中推广 Rust 编程语言。\",\"注：这里的逻辑是 libonebot + 针对某聊天平台的对接代码 = 某聊天平台的 OneBot 实现，libonebot 要做的是让 OneBot 实现的开发者只需编写针对特定聊天平台的对接代码，而无需关心 OneBot 标准定义的通信方式、消息格式等。\",\"难度：高\",\"导师：@richardchien\",\"产出要求\",\"实现所有 OneBot 实现所共享的功能，包括 Web 通信、消息解析、配置读写等\",\"充分考虑同时兼容 OneBot v11 和 v12 接口\",\"能够根据用户（OneBot 实现的开发者）所实现的接口自动实现类似 get_available_apis 等接口\",\"编写详细的使用文档\",\"如果可能，与 v12 设计项目联动，实现第一手 v12 支持\",\"技术要求\",\"熟悉聊天机器人开发\",\"熟悉 Rust Web 开发\"]},\"192\":{\"h\":\"实现自选语言版 libonebot\",\"t\":[\"目前最常用的 OneBot 实现包括 go-cqhttp、onebot-kotlin、node-onebot 等，这些实现都各自重复实现了 Web 通信、消息解析、配置读写等功能，当社区中的开发者想针对一个新的聊天平台实现 OneBot 时，他们往往同样需要再次实现类似逻辑。我们希望使用 Python、Go、Kotlin、Node、PHP、C#.NET 等主流语言（任选一个）编写 libonebot 模块，该模块实现所有 OneBot 实现所共享的功能，从而方便其他开发者们使用对应语言快速编写具体的 OneBot 实现。\",\"注：这里的逻辑是 libonebot + 针对某聊天平台的对接代码 = 某聊天平台的 OneBot 实现，libonebot 要做的是让 OneBot 实现的开发者只需编写针对特定聊天平台的对接代码，而无需关心 OneBot 标准定义的通信方式、消息格式等。\",\"难度：中\",\"导师：@richardchien\",\"产出要求\",\"实现所有 OneBot 实现所共享的功能，包括 Web 通信、消息解析、配置读写等\",\"充分考虑同时兼容 OneBot v11 和 v12 接口\",\"编写详细的使用文档\",\"如果可能，实现更多附加特性，如根据用户（OneBot 实现的开发者）所实现的接口自动实现类似 get_available_apis 等接口、实现第一手 v12 支持等\",\"技术要求\",\"熟悉聊天机器人开发\",\"熟悉所选语言的 Web 开发\"]},\"193\":{\"h\":\"暑期 2022\",\"t\":[\"开源之夏 - 暑期 2022 是由开源软件供应链点亮计划发起、由中国科学院软件研究所与 openEuler 社区主办的一项面向高校学生的暑期活动，类似 Google Summer of Code（GSoC），旨在鼓励在校学生积极参与开源软件的开发维护，促进优秀开源软件社区的蓬勃发展。关于具体的活动规划、报名方式，请查看该活动的 官网 和 帮助文档。\",\"NoneBot 社区有幸作为开源社区 参与 了本次活动，下面列出了目前我们已经发布的项目，欢迎感兴趣的同学加入 QQ 群 737131827 或通过 contact@nonebot.dev 联系我们。\"]},\"194\":{\"h\":\"NoneBot2 命令行 CLI 交互体验升级\",\"t\":[\"NoneBot2 为用户提供了命令行脚手架 ──nb-cli，辅助用户更好地上手项目以及进行开发。nb-cli 主要包括：创建项目、运行项目、安装与卸载插件、部署项目等功能。随着 NoneBot2 Beta 版本的发布，脚手架功能存在一定的定位不明确、功能体验不佳。本项目旨在重新设计 nb-cli 功能框架，完善功能，优化用户体验。\",\"难度：进阶\",\"导师：@yanyongyu\",\"产出要求\",\"设计 nb-cli 功能框架 \",\"明确各功能模块\",\"设计用户交互模式\",\"完成 nb-cli 主要功能代码 \",\"项目管理\",\"插件管理\",\"其它\",\"同步更新使用文档\",\"技术要求\",\"熟悉 Python 命令行交互代码编写\",\"熟悉 NoneBot2 框架功能\",\"熟悉 NoneBot2 项目组织方式\",\"成果仓库\",\"https://github.com/nonebot/nb-cli\",\"https://github.com/nonebot/nonebot2\"]},\"195\":{\"h\":\"NoneBot2 命令行即时交互通信设计与实现\",\"t\":[\"NoneBot2 在早期提供了基于网页的 nonebot-plugin-test 插件，无需平台适配接入即可对机器人进行测试，方便了开发者直观的感受机器人文本交互功能。我们希望提供一款基于命令行的适配器/驱动器，用于无平台适配接入、可以运行机器人的场景进行功能体验或测试。\",\"难度：进阶\",\"导师：@mnixry\",\"产出要求\",\"设计命令行与 NoneBot2 通信模式 \",\"直接调用/HTTP/WebSocket\",\"设计命令行交互界面\",\"实现相应适配器/驱动器\",\"同步更新使用说明文档\",\"技术要求\",\"熟悉 Python 命令行交互代码编写\",\"熟悉 NoneBot2 框架功能\",\"熟悉 NoneBot2 项目组织方式\",\"成果仓库\",\"https://github.com/nonebot/adapter-console\"]},\"196\":{\"h\":\"NoneBot2 用户上手与深入教程设计\",\"t\":[\"NoneBot2 为用户提供了详细的文档介绍，辅助用户更好的上手项目以及进行开发。文档分为基础与进阶两个部分。基础部分帮助新用户快速上手开发，主要包括：安装 NoneBot2、使用脚手架、创建配置项目、使用适配器、加载插件、定义消息事件、处理消息事件、调用平台 API 等。进阶部分向已经熟悉开发流程的用户介绍更多高级技巧，主要包括：NoneBot2 工作原理、定时任务、权限控制、钩子函数、跨插件访问、单元测试、发布插件等。目前文档对于用户而言过于费解，导致用户难以理解 NoneBot2 开发。本项目旨在优化文档内容，使其更加通俗易懂，不让文档成为用户上手的阻碍，同时完善进阶内容，让有更复杂需求的用户，同样能从文档中受益。\",\"相关 issue：\",\"https://github.com/nonebot/nonebot2/issues/793\",\"https://github.com/nonebot/nonebot2/issues/295\",\"难度：进阶\",\"导师：@SK-415\",\"产出要求\",\"文档通俗易懂 \",\"附有适当的图片指引（如 asciinema）\",\"内容完整，由浅入深\",\"适当的界面美化，合理分配布局\",\"技术要求\",\"熟悉文档结构组织与语言表达\",\"熟悉 NoneBot2 框架功能\",\"熟悉 NoneBot2 项目组织方式\",\"成果仓库\",\"https://github.com/nonebot/nonebot2\"]},\"197\":{\"h\":\"暑期 2023\",\"t\":[\"开源之夏 - 暑期 2023 是由开源软件供应链点亮计划发起、由中国科学院软件研究所与 openEuler 社区主办的一项面向高校学生的暑期活动，类似 Google Summer of Code（GSoC），旨在鼓励在校学生积极参与开源软件的开发维护，促进优秀开源软件社区的蓬勃发展。关于具体的活动规划、报名方式，请查看该活动的 官网 和 帮助文档。\",\"NoneBot 社区有幸作为开源社区 参与 了本次活动，下面列出了目前我们已经发布的项目，欢迎感兴趣的同学通过 contact@nonebot.dev 联系我们。\"]},\"198\":{\"h\":\"NoneBot 项目管理图形化面板\",\"t\":[\"NoneBot 目前提供了开箱即用的命令行脚手架来帮助初次使用的用户更快的上手编写应用。但是，对于未有一定开发经验的用户，命令行的使用仍具有一定的困难。此外，其他项目如 koishi、vue 等，均可通过图形化界面的形式为用户提供更便捷的项目开发。因此，我们希望借助现有命令行脚手架的可扩展特性，提供一个项目管理面板服务，以网页的形式帮助用户开发 NoneBot 应用。\",\"难度：进阶\",\"导师：@mnixry\",\"产出要求\",\"设计并实现项目管理面板相关功能 \",\"创建与管理项目\",\"配置与运行项目\",\"NoneBot 插件管理\",\"实现相应 nb-cli 插件提供面板服务\",\"代码符合 NoneBot Contributing 规范\",\"技术要求\",\"熟悉 nb-cli 相关功能\",\"熟悉 NoneBot 框架功能\",\"熟悉前后端相关实现方式\",\"成果仓库\",\"https://github.com/nonebot/cli-plugin-webui\"]},\"199\":{\"h\":\"NoneBot Discord 适配器\",\"t\":[\"NoneBot 作为一个跨平台聊天机器人框架，目前已有 OneBot、飞书、Telegram、QQ 频道等诸多平台的适配支持。作为众多用户期待的平台适配之一，我们希望借此机会接入 Discord 聊天机器人。\",\"难度：进阶\",\"导师：@iyume\",\"产出要求\",\"调研 Discord Bot 相关功能与接口\",\"设计与编写 NoneBot Discord 适配器\",\"代码符合 NoneBot Contributing 规范\",\"技术要求\",\"熟悉 NoneBot 框架功能\",\"熟悉 NoneBot 各模块职责与适配器编写\",\"成果仓库\",\"https://github.com/nonebot/adapter-discord\"]},\"200\":{\"h\":\"NoneBot 数据库支持插件\",\"t\":[\"NoneBot 的插件系统为用户实现应用提供了极高的便捷性，但因此也增加了插件统一管理的难度。目前，我们发现许多用户发布的插件中存在文件存储结构化数据、数据存放散乱等现象，同时插件间也可能产生冲突。因此，我们希望提供一个统一的数据存储与管理方式，便于用户读写应用数据。\",\"难度：进阶\",\"导师：@yanyongyu\",\"产出要求\",\"设计并实现 ORM 插件 \",\"提供关系模型定义功能\",\"提供模型迁移与管理功能\",\"能较好的支持 Python 类型检查与推导\",\"编写相应的用户使用文档\",\"代码符合 NoneBot Contributing 规范\",\"技术要求\",\"熟悉 NoneBot 框架功能与插件编写\",\"熟悉 SQLAlchemy 等 ORM 框架 \",\"熟悉 SQLAlchemy ORM\",\"熟悉 alembic 等迁移工具\",\"熟悉 nb-cli 插件编写\",\"成果仓库\",\"https://github.com/nonebot/plugin-orm\"]},\"201\":{\"h\":\"暑期 2024\",\"t\":[\"开源之夏 - 暑期 2024 是中国科学院软件研究所发起的开源软件供应链点亮计划系列暑期活动，旨在鼓励高校学生积极参与开源软件的开发维护，促进优秀开源软件社区的蓬勃发展。活动联合各大开源社区，针对重要开源软件的开发与维护提供项目开发任务，并向全球高校学生开放报名。关于具体的活动规划、报名方式，请查看该活动的 官网 和 帮助文档。\",\"NoneBot 社区有幸作为开源社区 参与 了本次活动，下面列出了目前我们已经发布的项目，欢迎感兴趣的同学通过 contact@nonebot.dev 联系我们。\"]},\"202\":{\"h\":\"NonePress 官网组件库更新与优化\",\"t\":[\"NoneBot 官网目前采用基于 TailwindCSS 自研的 NonePress 组件库及 Docusaurus 框架进行构建。由于相关依赖版本迭代迅速，目前官网组件库已产生了较大的版本落后。本项目希望在跟进框架新版本的基础上，对文档整体视觉体验进行重新设计，提升页面的无障碍访问性，基于 React Hydrate 特性实现完整的静态网站生成（SSG）以提升搜索引擎优化（SEO）水平。在解决以上问题的基础上，可对网页的开发以及生产构建性能做相应的优化提升，例如在生产构建使用自有的 webpack loader、替换现有的热重载逻辑以减少开发环境启动耗时等。\",\"难度：进阶\",\"导师：@yanyongyu\",\"产出要求\",\"基于 Docusaurus v3 重构 NonePress 组件库及相关插件 \",\"升级相关依赖并重新打造 Docusaurus theme（布局与组件）\",\"根据需求实现/修改 Docusaurus 插件使得官网内容构建正常\",\"能够提升页面渲染性能与 MDX 相关能力\",\"升级官网采用新版组件库 \",\"Algolia 索引与 SEO 正常\",\"桌面端与移动端显示正常\",\"优化官网开发与生产构建体验\",\"（可选）优化官网部分页面 \",\"优化官网过长的 changelog\",\"优化官网插件商店的展示细节\",\"技术要求\",\"熟练掌握 TS、PostCSS、TSX、MDX等相关技术\",\"掌握 React、Docusaurus、tailwind css 等框架\",\"熟悉静态网站生成 SSG、SEO 优化与 Algolia 索引原理等\",\"成果仓库\",\"https://github.com/nonebot/docusaurus-theme-nonepress\"]},\"203\":{\"h\":\"NoneFlow 社区自动化工作流管理优化\",\"t\":[\"NoneFlow 在 NoneBot 社区中承担着重要的角色，它由 NoneBot 框架基于 GitHub APP 编写而成，能够自动化的完成许多复杂流程的处理，如：用户请求提交插件到商店时进行自动化检测，并在人工审核通过后自动存储至 registry；定时自动更新 registry 内插件信息，跟进插件新版本情况等。但是，在长期的使用中发现了一些问题和不足的地方，例如：项目本身结构复杂耦合，添加新自动化流程与维护现有流程困难；目前采用了 GitHub 用户名作为插件作者名，但已有不少插件作者改名；插件存储至 registry 并定时更新，缺少统计相关信息以帮助商店更好的展示当前插件状态；插件作者想要修改插件信息时无法便捷的找到操作方式等。本项目希望针对以上问题与不足的地方进行修复与优化，提升用户体验。\",\"难度：进阶\",\"导师：@uy/sun\",\"产出要求\",\"重构现有工作流处理结构 \",\"整合现有 Issue、Pull Request、Git 相关操作\",\"提供用户修改信息的处理方式\",\"正确处理 PR 的 Open、Close、Draft 状态\",\"修复流程中存在的问题 \",\"插件作者名正确展示\",\"registry 定时更新中需要插件测试环境隔离\",\"在 registry 定时更新的同时提供统计数据\",\"技术要求\",\"掌握 GitHub APP 开发 \",\"熟悉 GitHub REST API、GraphQL 等\",\"熟悉 GitHub APP 权限限制\",\"熟悉 NoneBot 框架与 Python 相关技术\",\"熟悉 Git、GitHub Action、GitHub 工作流\",\"成果仓库\",\"https://github.com/nonebot/noneflow\"]},\"204\":{\"h\":\"NoneBlockly 低代码框架开发\",\"t\":[\"经过深入分析社区反馈，我们发现部分新手因不熟悉编程概念或框架本身而遇到问题。为了解决初学者在使用面向开发者的聊天机器人框架 NoneBot 时遇到的挑战，我们计划引入 Blockly 提供低代码编程支持。通过减少常见的编码错误和降低入门门槛，使框架对初学者更加友好，从而提升用户体验并有助于 NoneBot 生态的成长。本项目将基于 Blockly 实现 NoneBot 插件的低代码编写，使得用户能够快速搭建聊天机器人。\",\"难度：进阶\",\"导师：@mnixry\",\"产出要求\",\"实现 NoneBlockly 低代码开发框架 \",\"能够基于 Alconna 编写跨平台插件\",\"确保插件对 Python 和 NoneBot 版本的兼容性\",\"支持对多种类型 NoneBot 事件的响应\",\"支持对 NoneBot 消息对象的便捷操作\",\"集成 localstore 文件存储、apscheduler 定时任务、网络请求等常用功能\",\"对接 NB-CLI 脚手架，通过脚手架扩展使用低代码框架\",\"技术要求\",\"掌握 Python 与 NoneBot 框架的使用 \",\"熟悉 NoneBot 插件的开发，包括事件响应与消息处理等\",\"熟悉 NoneBot 生态组件（Alconna、localstore、apscheduler等）的使用\",\"了解 NB-CLI 脚手架的扩展开发\",\"熟悉 Blockly 低代码框架的使用和开发\",\"成果仓库\",\"https://github.com/nonebot/noneblockly\"]},\"205\":{\"h\":\"手动创建项目\",\"t\":[\"在快速上手中，我们已经介绍了如何安装和使用 nb-cli 创建一个项目。在本章节中，我们将简要介绍如何在不使用 nb-cli 的方式创建一个机器人项目的最小实例并启动。如果你想要了解 NoneBot 的启动流程，也可以阅读本章节。\",\"警告\",\"我们十分不推荐直接创建机器人项目，请优先考虑使用 nb-cli 进行项目创建。\",\"一个机器人项目的最小实例中至少需要包含以下内容:\",\"入口文件：初始化并运行机器人的 Python 文件\",\"配置文件：存储机器人启动所需的配置\",\"插件：为机器人提供具体的功能\",\"下面我们创建一个项目文件夹，来存放项目所需文件，以下步骤均在该文件夹中进行。\"]},\"206\":{\"h\":\"安装依赖\",\"t\":[\"在创建项目前，我们首先需要将项目所需依赖安装至环境中。\",\"（可选）创建虚拟环境，以 venv 为例\",\"python -m venv .venv --prompt nonebot2 # windows .venv\\\\Scripts\\\\activate # linux/macOS source .venv/bin/activate\",\"安装 nonebot2 以及驱动器\",\"pip install 'nonebot2[fastapi]'\",\"驱动器包名可以在 驱动器商店 中找到。\",\"安装适配器\",\"pip install nonebot-adapter-console\",\"适配器包名可以在 适配器商店 中找到。\"]},\"207\":{\"h\":\"创建配置文件\",\"t\":[\"配置文件用于存放 NoneBot 运行所需要的配置项，使用 pydantic 以及 python-dotenv 来读取配置。配置项需符合 dotenv 格式，复杂类型数据需使用 JSON 格式填写。具体可选配置方式以及配置项详情参考配置。\",\"在项目文件夹中创建一个 .env 文本文件，并写入以下内容:\",\"HOST=0.0.0.0 # 配置 NoneBot 监听的 IP / 主机名 PORT=8080 # 配置 NoneBot 监听的端口 COMMAND_START=[\\\"/\\\"] # 配置命令起始字符 COMMAND_SEP=[\\\".\\\"] # 配置命令分割字符\"]},\"208\":{\"h\":\"创建入口文件\",\"t\":[\"入口文件（ Entrypoint ）顾名思义，是用来初始化并运行机器人的 Python 文件。入口文件需要完成框架的初始化、注册适配器、加载插件等工作。\",\"提示\",\"如果你使用 nb-cli 创建项目，入口文件不会被创建，该文件功能会被 nb run 命令代替。\",\"在项目文件夹中创建一个 bot.py 文件，并写入以下内容:\",\"import nonebot from nonebot.adapters.console import Adapter as ConsoleAdapter # 避免重复命名 # 初始化 NoneBot nonebot.init() # 注册适配器 driver = nonebot.get_driver() driver.register_adapter(ConsoleAdapter) # 在这里加载插件 nonebot.load_builtin_plugins(\\\"echo\\\") # 内置插件 # nonebot.load_plugin(\\\"thirdparty_plugin\\\") # 第三方插件 # nonebot.load_plugins(\\\"awesome_bot/plugins\\\") # 本地插件 if __name__ == \\\"__main__\\\": nonebot.run()\",\"我们暂时不需要了解其中内容的含义，这些将会在稍后的章节中逐一介绍。在创建完成以上文件并确认已安装所需适配器和插件后，即可运行机器人。\"]},\"209\":{\"h\":\"运行机器人\",\"t\":[\"在项目文件夹中，使用配置好环境的 Python 解释器运行入口文件（如果使用虚拟环境，请先激活虚拟环境）:\",\"python bot.py\",\"如果你后续使用了 nb-cli ，你仍可以使用 nb run 命令来运行机器人，nb-cli 会自动检测入口文件 bot.py 是否存在并运行。同时，你也可以使用 nb run --reload 来自动检测代码的更改并自动重新运行入口文件。\"]},\"210\":{\"h\":\"插件编写准备\",\"t\":[\"在正式编写插件之前，我们需要先了解一下插件的概念。\"]},\"211\":{\"h\":\"插件结构\",\"t\":[\"在 NoneBot 中，插件即是 Python 的一个模块（module）。NoneBot 会在导入时对这些模块做一些特殊的处理使得他们成为一个插件。插件间应尽量减少耦合，可以进行有限制的相互调用，NoneBot 能够正确解析插件间的依赖关系。\"]},\"212\":{\"h\":\"单文件插件\",\"t\":[\"一个普通的 .py 文件即可以作为一个插件，例如创建一个 foo.py 文件：\",\"📂 plugins └── 📜 foo.py\",\"这个时候模块 foo 已经可以被称为一个插件了，尽管它还什么都没做。\"]},\"213\":{\"h\":\"包插件\",\"t\":[\"一个包含 __init__.py 的文件夹即是一个常规 Python 包 package，例如创建一个 foo 文件夹：\",\"📂 plugins └── 📂 foo └── 📜 __init__.py\",\"这个时候包 foo 同样是一个合法的插件，插件内容可以在 __init__.py 文件中编写。\"]},\"214\":{\"h\":\"创建插件\",\"t\":[\"注意\",\"如果在之前的快速上手章节中已经使用 bootstrap 模板创建了项目，那么你需要做出如下修改：\",\"在项目目录中创建一个两层文件夹 awesome_bot/plugins\",\"📦 awesome-bot ├── 📂 awesome_bot │ └── 📂 plugins ├── 📜 pyproject.toml └── 📜 README.md\",\"修改 pyproject.toml 文件中的 nonebot 配置项，在 plugin_dirs 中添加 awesome_bot/plugins\",\"[tool.nonebot] plugin_dirs = [\\\"awesome_bot/plugins\\\"]\",\"注意\",\"如果在之前的创建项目章节中手动创建了相关文件，那么你需要做出如下修改：\",\"在项目目录中创建一个两层文件夹 awesome_bot/plugins\",\"📦 awesome-bot ├── 📂 awesome_bot │ └── 📂 plugins └── 📜 bot.py\",\"修改 bot.py 文件中的加载插件部分，取消注释或者添加如下代码\",\"# 在这里加载插件 nonebot.load_builtin_plugins(\\\"echo\\\") # 内置插件 nonebot.load_plugins(\\\"awesome_bot/plugins\\\") # 本地插件\",\"创建插件可以通过 nb-cli 命令从完整模板创建，也可以手动新建空白文件。通过以下命令创建一个名为 weather 的插件：\",\"$ nb plugin create [?] 插件名称: weather [?] 使用嵌套插件? (y/N) N [?] 输出目录: awesome_bot/plugins\",\"nb-cli 会在 awesome_bot/plugins 目录下创建一个名为 weather 的文件夹，其中包含的文件将在稍后章节中用到。\",\"📦 awesome-bot ├── 📂 awesome_bot │ └── 📂 plugins | └── 📂 foo | ├── 📜 __init__.py | └── 📜 config.py ├── 📜 pyproject.toml └── 📜 README.md\"]},\"215\":{\"h\":\"加载插件\",\"t\":[\"警告\",\"请勿在插件被加载前 import 插件模块，这会导致 NoneBot 无法将其转换为插件而出现意料之外的情况。\",\"加载插件是在机器人入口文件中完成的，需要在框架初始化之后，运行之前进行。\",\"请注意，加载的插件模块名称（插件文件名或文件夹名）不能相同，且每一个插件只能被加载一次，重复加载将会导致异常。\",\"如果你使用 nb-cli 管理插件，那么你可以跳过这一节，nb-cli 将会自动处理加载。\",\"如果你使用自定义的入口文件bot.py，那么你需要在 bot.py 中加载插件。\",\"import nonebot nonebot.init() # 加载插件 nonebot.run()\",\"加载插件的方式有多种，但在底层的加载逻辑是一致的。以下是为加载插件提供的几种方式：\"]},\"216\":{\"h\":\"\",\"t\":[\"通过点分割模块名称或使用 pathlib 的 Path 对象来加载插件。通常用于加载第三方插件或者项目插件。例如：\",\"from pathlib import Path nonebot.load_plugin(\\\"path.to.your.plugin\\\") # 加载第三方插件 nonebot.load_plugin(Path(\\\"./path/to/your/plugin.py\\\")) # 加载项目插件\",\"注意\",\"请注意，本地插件的路径应该为相对机器人 入口文件（通常为 bot.py） 可导入的，例如在项目 plugins 目录下。\"]},\"217\":{\"h\":\"\",\"t\":[\"加载传入插件目录中的所有插件，通常用于加载一系列本地编写的项目插件。例如：\",\"nonebot.load_plugins(\\\"src/plugins\\\", \\\"path/to/your/plugins\\\")\",\"注意\",\"请注意，插件目录应该为相对机器人 入口文件（通常为 bot.py） 可导入的，例如在项目 plugins 目录下。\"]},\"218\":{\"h\":\"\",\"t\":[\"这种加载方式是以上两种方式的混合，加载所有传入的插件模块名称，以及所有给定目录下的插件。例如：\",\"nonebot.load_all_plugins([\\\"path.to.your.plugin\\\"], [\\\"path/to/your/plugins\\\"])\"]},\"219\":{\"h\":\"\",\"t\":[\"通过 JSON 文件加载插件，是 load_all_plugins 的 JSON 变种。通过读取 JSON 文件中的 plugins 字段和 plugin_dirs 字段进行加载。例如：\",\"{ \\\"plugins\\\": [\\\"path.to.your.plugin\\\"], \\\"plugin_dirs\\\": [\\\"path/to/your/plugins\\\"] }\",\"nonebot.load_from_json(\\\"plugin_config.json\\\", encoding=\\\"utf-8\\\")\",\"提示\",\"如果 JSON 配置文件中的字段无法满足你的需求，可以使用 load_all_plugins 方法自行读取配置来加载插件。\"]},\"220\":{\"h\":\"\",\"t\":[\"通过 TOML 文件加载插件，是 load_all_plugins 的 TOML 变种。通过读取 TOML 文件中的 [tool.nonebot] Table 中的 plugins 和 plugin_dirs Array 进行加载。例如：\",\"[tool.nonebot] plugins = [\\\"path.to.your.plugin\\\"] plugin_dirs = [\\\"path/to/your/plugins\\\"]\",\"nonebot.load_from_toml(\\\"plugin_config.toml\\\", encoding=\\\"utf-8\\\")\",\"提示\",\"如果 TOML 配置文件中的字段无法满足你的需求，可以使用 load_all_plugins 方法自行读取配置来加载插件。\"]},\"221\":{\"h\":\"\",\"t\":[\"加载一个内置插件，传入的插件名必须为 NoneBot 内置插件。该方法是 load_plugin 的封装。例如：\",\"nonebot.load_builtin_plugin(\\\"echo\\\")\"]},\"222\":{\"h\":\"\",\"t\":[\"加载传入插件列表中的所有内置插件。例如：\",\"nonebot.load_builtin_plugins(\\\"echo\\\", \\\"single_session\\\")\"]},\"223\":{\"h\":\"其他加载方式\",\"t\":[\"有关其他插件加载的方式，可参考跨插件访问和嵌套插件。\"]},\"224\":{\"h\":\"机器人的构成\",\"t\":[\"了解机器人的基本构成有助于你更好地使用 NoneBot，本章节将介绍 NoneBot 中的基本组成部分，稍后的文档中将会使用到这些概念。\",\"使用 NoneBot 框架搭建的机器人具有以下几个基本组成部分：\",\"NoneBot 机器人框架主体：负责连接各个组成部分，提供基本的机器人功能\",\"驱动器 Driver：客户端/服务端的功能实现，负责接收和发送消息（通常为 HTTP 通信）\",\"适配器 Adapter：驱动器的上层，负责将平台消息与 NoneBot 事件/操作系统的消息格式相互转换\",\"插件 Plugin：机器人的功能实现，通常为负责处理事件并进行一系列的操作\",\"除 NoneBot 机器人框架主体外，其他部分均可按需选择、互相搭配，但由于平台的兼容性问题，部分插件可能仅在某些特定平台上可用（这由插件编写者决定）。\",\"在接下来的章节中，我们将重点介绍机器人功能实现，即插件 Plugin 部分。\"]},\"225\":{\"h\":\"事件响应器\",\"t\":[\"事件响应器（Matcher）是对接收到的事件进行响应的基本单元，所有的事件响应器都继承自 Matcher 基类。\",\"在 NoneBot 中，事件响应器可以通过一系列特定的规则筛选出具有某种特征的事件，并按照特定的流程交由预定义的事件处理依赖进行处理。例如，在快速上手中，我们使用了内置插件 echo ，它定义的事件响应器能响应机器人用户发送的“/echo hello world”消息，提取“hello world”信息并作为回复消息发送。\"]},\"226\":{\"h\":\"事件响应器辅助函数\",\"t\":[\"NoneBot 中所有事件响应器均继承自 Matcher 基类，但直接使用 Matcher.new() 方法创建事件响应器过于繁琐且不能记录插件信息。因此，NoneBot 中提供了一系列“事件响应器辅助函数”（下称“辅助函数”）来辅助我们用最简的方式创建带有不同规则预设的事件响应器，提高代码可读性和书写效率。通常情况下，我们只需要使用辅助函数即可完成事件响应器的创建。\",\"在 NoneBot 中，辅助函数以 on() 或 on_<type/rule>() 形式出现（例如 on_command()），调用后根据不同的参数返回一个 Type[Matcher] 类型的新事件响应器。\",\"目前 NoneBot 提供了多种功能各异的辅助函数、具有共同命令名称前缀的命令组以及具有共同参数的响应器组，均可以从 nonebot 模块直接导入使用，具体内容参考事件响应器进阶。\"]},\"227\":{\"h\":\"创建事件响应器\",\"t\":[\"在上一节创建插件中，我们创建了一个 weather 插件，现在我们来实现他的功能。\",\"我们直接使用 on_command() 辅助函数来创建一个事件响应器：\",\"from nonebot import on_command weather = on_command(\\\"天气\\\")\",\"这样，我们就获得一个名为 weather 的事件响应器了，这个事件响应器会对 /天气 开头的消息进行响应。\",\"提示\",\"如果一条消息中包含“@机器人”或以“机器人的昵称”开始，例如 @bot /天气 时，协议适配器会将 event.is_tome() 判断为 True ，同时也会自动去除 @bot，即事件响应器收到的信息内容为 /天气，方便进行命令匹配。\"]},\"228\":{\"h\":\"为事件响应器添加参数\",\"t\":[\"在辅助函数中，我们可以添加一些参数来对事件响应器进行更加精细的调整，例如事件响应器的优先级、匹配规则等。例如：\",\"from nonebot import on_command from nonebot.rule import to_me weather = on_command(\\\"天气\\\", rule=to_me(), aliases={\\\"weather\\\", \\\"查天气\\\"}, priority=10, block=True)\",\"这样，我们就获得了一个可以响应 天气、weather、查天气 三个命令的响应规则，需要私聊或 @bot 时才会响应，优先级为 10（越小越优先），阻断事件向后续优先级传播的事件响应器了。这些内容的意义和使用方法将会在后续的章节中一一介绍。\",\"提示\",\"需要注意的是，不同的辅助函数有不同的可选参数，在使用之前可以参考事件响应器进阶 - 基本辅助函数或 API 文档。\"]},\"229\":{\"h\":\"处理消息\",\"t\":[\"在不同平台中，一条消息可能会有承载有各种不同的表现形式，它可能是一段纯文本、一张图片、一段语音、一篇富文本文章，也有可能是多种类型的组合等等。\",\"在 NoneBot 中，为确保消息的正常处理与跨平台兼容性，采用了扁平化的消息序列形式，即 Message 对象。消息序列是 NoneBot 中的消息载体，无论是接收还是发送的消息，都采用消息序列的形式进行处理。\"]},\"230\":{\"h\":\"认识消息类型\"},\"231\":{\"h\":\"消息序列\",\"t\":[\"在 NoneBot 中，消息序列 Message 的主要作用是用于表达“一串消息”。由于消息序列继承自 List[MessageSegment]，所以 Message 的本质是由若干消息段所组成的序列。因此，消息序列的使用方法与 List 有很多相似之处，例如切片、索引、拼接等。\",\"在上一节的使用依赖注入中，我们已经通过依赖注入 CommandArg() 获取了命令的参数，它的类型即是消息序列。我们使用了消息序列的 extract_plain_text() 方法来获取消息序列中的纯文本内容。\"]},\"232\":{\"h\":\"消息段\",\"t\":[\"顾名思义，消息段 MessageSegment 是一段消息。由于消息序列的本质是由若干消息段所组成的序列，消息段可以被认为是构成消息序列的最小单位。简单来说，消息序列类似于一个自然段，而消息段则是组成自然段的一句话。同时，作为特殊消息载体的存在，绝大多数的平台都有着独特的消息类型，这些独特的内容均需要由对应的协议适配器所提供，以适应不同平台中的消息模式。这也意味着，你需要导入对应的协议适配器中的消息序列和消息段后才能使用其特殊的工厂方法。\",\"注意\",\"消息段的类型是由协议适配器提供的，因此你需要参考协议适配器的文档并导入对应的消息段后才能使用其特殊的消息类型。\",\"在上一节的使用依赖注入中，我们导入的为 nonebot.adapters.Message 抽象基类，因此我们无法使用平台特有的消息类型。仅能使用 str 作为纯文本消息回复。\"]},\"233\":{\"h\":\"使用消息序列\",\"t\":[\"注意\",\"在以下的示例中，为了更好的理解多种类型的消息组成方式，我们将使用 Console 协议适配器来演示消息序列的使用方法。在实际使用中，你需要确保你使用的消息序列类型与你所要发送的平台类型一致。\",\"通常情况下，适配器在接收到消息时，会将消息转换为消息序列，可以通过依赖注入 EventMessage，或者使用 event.get_message() 获取。\",\"由于消息序列是 List[MessageSegment] 的子类，所以你总是可以用和操作 List 类似的方式来处理消息序列。例如：\",\">>> from nonebot.adapters.console import Message, MessageSegment >>> message = Message([ MessageSegment(type=\\\"text\\\", data={\\\"text\\\":\\\"hello\\\"}), MessageSegment(type=\\\"markdown\\\", data={\\\"markup\\\":\\\"**world**\\\"}), ]) >>> for segment in message: ... print(segment.type, segment.data) ... text {'text': 'hello'} markdown {'markup': '**world**'} >>> len(message) 2\"]},\"234\":{\"h\":\"构造消息序列\",\"t\":[\"在使用事件响应器操作发送消息时，既可以使用 str 作为消息，也可以使用 Message、MessageSegment 或者 MessageTemplate。那么，我们就需要先构造一个消息序列。消息序列可以通过多种方式构造：\"]},\"235\":{\"h\":\"直接构造\",\"t\":[\"Message 类可以直接实例化，支持 str、MessageSegment、Iterable[MessageSegment] 或适配器自定义类型的参数。\",\"from nonebot.adapters.console import Message, MessageSegment # str Message(\\\"Hello, world!\\\") # MessageSegment Message(MessageSegment.text(\\\"Hello, world!\\\")) # List[MessageSegment] Message([MessageSegment.text(\\\"Hello, world!\\\")])\"]},\"236\":{\"h\":\"运算构造\",\"t\":[\"Message 对象可以通过 str、MessageSegment 相加构造，详情请参考拼接消息。\"]},\"237\":{\"h\":\"从字典数组构造\",\"t\":[\"Message 对象支持 Pydantic 自定义类型构造，可以使用 Pydantic 的 TypeAdapter 方法进行构造。\",\"from pydantic import TypeAdapter from nonebot.adapters.console import Message, MessageSegment # 由字典构造消息段 TypeAdapter(MessageSegment).validate_python( {\\\"type\\\": \\\"text\\\", \\\"data\\\": {\\\"text\\\": \\\"text\\\"}} ) == MessageSegment.text(\\\"text\\\") # 由字典数组构造消息序列 TypeAdapter(Message).validate_python( [MessageSegment.text(\\\"text\\\"), {\\\"type\\\": \\\"text\\\", \\\"data\\\": {\\\"text\\\": \\\"text\\\"}}], ) == Message([MessageSegment.text(\\\"text\\\"), MessageSegment.text(\\\"text\\\")])\"]},\"238\":{\"h\":\"获取消息纯文本\",\"t\":[\"由于消息中存在各种类型的消息段，因此 str(message) 通常不能得到消息的纯文本，而是一个消息序列的字符串表示。\",\"NoneBot 为消息段定义了一个方法 is_text() ，可以用于判断消息段是否为纯文本；也可以使用 message.extract_plain_text() 方法获取消息纯文本。\",\"from nonebot.adapters.console import Message, MessageSegment # 判断消息段是否为纯文本 MessageSegment.text(\\\"text\\\").is_text() == True # 提取消息纯文本字符串 Message( [MessageSegment.text(\\\"text\\\"), MessageSegment.markdown(\\\"**markup**\\\")] ).extract_plain_text() == \\\"text\\\"\"]},\"239\":{\"h\":\"遍历\",\"t\":[\"消息序列继承自 List[MessageSegment] ，因此可以使用 for 循环遍历消息段。\",\"for segment in message: ...\"]},\"240\":{\"h\":\"比较\",\"t\":[\"消息和消息段都可以使用 == 或 != 运算符比较是否相同。\",\"MessageSegment.text(\\\"text\\\") != MessageSegment.text(\\\"foo\\\") some_message == Message([MessageSegment.text(\\\"text\\\")])\"]},\"241\":{\"h\":\"检查消息段\",\"t\":[\"我们可以通过 in 运算符或消息序列的 has 方法来：\",\"# 是否存在消息段 MessageSegment.text(\\\"text\\\") in message # 是否存在指定类型的消息段 \\\"text\\\" in message\",\"我们还可以使用消息序列的 only 方法来检查消息中是否仅包含指定的消息段。\",\"# 是否都为指定消息段 message.only(MessageSegment.text(\\\"test\\\")) # 是否仅包含指定类型的消息段 message.only(\\\"text\\\")\"]},\"242\":{\"h\":\"过滤、索引与切片\",\"t\":[\"消息序列对列表的索引与切片进行了增强，在原有列表 int 索引与 slice 切片的基础上，支持 type 过滤索引与切片。\",\"from nonebot.adapters.console import Message, MessageSegment message = Message( [ MessageSegment.text(\\\"test\\\"), MessageSegment.markdown(\\\"test2\\\"), MessageSegment.markdown(\\\"test3\\\"), MessageSegment.text(\\\"test4\\\"), ] ) # 索引 message[0] == MessageSegment.text(\\\"test\\\") # 切片 message[0:2] == Message( [MessageSegment.text(\\\"test\\\"), MessageSegment.markdown(\\\"test2\\\")] ) # 类型过滤 message[\\\"markdown\\\"] == Message( [MessageSegment.markdown(\\\"test2\\\"), MessageSegment.markdown(\\\"test3\\\")] ) # 类型索引 message[\\\"markdown\\\", 0] == MessageSegment.markdown(\\\"test2\\\") # 类型切片 message[\\\"markdown\\\", 0:2] == Message( [MessageSegment.markdown(\\\"test2\\\"), MessageSegment.markdown(\\\"test3\\\")] )\",\"我们也可以通过消息序列的 include、exclude 方法进行类型过滤。\",\"message.include(\\\"text\\\", \\\"markdown\\\") message.exclude(\\\"text\\\")\",\"同样的，消息序列对列表的 index、count 方法也进行了增强，可以用于索引指定类型的消息段。\",\"# 指定类型首个消息段索引 message.index(\\\"markdown\\\") == 1 # 指定类型消息段数量 message.count(\\\"markdown\\\") == 2\",\"此外，消息序列添加了一个 get 方法，可以用于获取指定类型指定个数的消息段。\",\"# 获取指定类型指定个数的消息段 message.get(\\\"markdown\\\", 1) == Message([MessageSegment.markdown(\\\"test2\\\")])\"]},\"243\":{\"h\":\"拼接消息\",\"t\":[\"str、Message、MessageSegment 对象之间可以直接相加，相加均会返回一个新的 Message 对象。\",\"# 消息序列与消息段相加 Message([MessageSegment.text(\\\"text\\\")]) + MessageSegment.text(\\\"text\\\") # 消息序列与字符串相加 Message([MessageSegment.text(\\\"text\\\")]) + \\\"text\\\" # 消息序列与消息序列相加 Message([MessageSegment.text(\\\"text\\\")]) + Message([MessageSegment.text(\\\"text\\\")]) # 字符串与消息序列相加 \\\"text\\\" + Message([MessageSegment.text(\\\"text\\\")]) # 消息段与消息段相加 MessageSegment.text(\\\"text\\\") + MessageSegment.text(\\\"text\\\") # 消息段与字符串相加 MessageSegment.text(\\\"text\\\") + \\\"text\\\" # 消息段与消息序列相加 MessageSegment.text(\\\"text\\\") + Message([MessageSegment.text(\\\"text\\\")]) # 字符串与消息段相加 \\\"text\\\" + MessageSegment.text(\\\"text\\\")\",\"如果需要在当前消息序列后直接拼接新的消息段，可以使用 Message.append、Message.extend 方法，或者使用自加。\",\"msg = Message([MessageSegment.text(\\\"text\\\")]) # 自加 msg += \\\"text\\\" msg += MessageSegment.text(\\\"text\\\") msg += Message([MessageSegment.text(\\\"text\\\")]) # 附加 msg.append(\\\"text\\\") msg.append(MessageSegment.text(\\\"text\\\")) # 扩展 msg.extend([MessageSegment.text(\\\"text\\\")])\",\"我们也可以通过消息段或消息序列的 join 方法来拼接一串消息：\",\"seg = MessageSegment.text(\\\"text\\\") msg = seg.join( [ MessageSegment.text(\\\"first\\\"), Message( [ MessageSegment.text(\\\"second\\\"), MessageSegment.text(\\\"third\\\"), ] ) ] ) msg == Message( [ MessageSegment.text(\\\"first\\\"), MessageSegment.text(\\\"text\\\"), MessageSegment.text(\\\"second\\\"), MessageSegment.text(\\\"third\\\"), ] )\"]},\"244\":{\"h\":\"使用消息模板\",\"t\":[\"为了提供安全可靠的跨平台模板字符，我们提供了一个消息模板功能来构建消息序列\",\"它在以下常见场景中尤其有用：\",\"多行富文本编排（包含图片，文字以及表情等）\",\"客制化（由 Bot 最终用户提供消息模板时）\",\"在事实上，它的用法和 str.format 极为相近，所以你在使用的时候，总是可以参考Python 文档来达到你想要的效果，这里给出几个简单的例子。\",\"默认情况下，消息模板采用 str 纯文本形式的格式化：\",\">>> from nonebot.adapters import MessageTemplate >>> MessageTemplate(\\\"{} {}\\\").format(\\\"hello\\\", \\\"world\\\") 'hello world'\",\"如果 Message.template 构建消息模板，那么消息模板将采用消息序列形式的格式化，此时的消息将会是平台特定的：\",\"注意\",\"使用 Message.template 构建消息模板时，应注意消息序列为平台适配器提供的类型，不能使用 nonebot.adapters.Message 基类作为模板构建。使用基类构建模板与使用 str 构建模板的效果是一样的，因此请使用上述的 MessageTemplate 类直接构建模板。：\",\">>> from nonebot.adapters.console import Message, MessageSegment >>> Message.template(\\\"{} {}\\\").format(\\\"hello\\\", \\\"world\\\") Message( MessageSegment.text(\\\"hello\\\"), MessageSegment.text(\\\" \\\"), MessageSegment.text(\\\"world\\\") )\",\"消息模板支持使用消息段进行格式化：\",\">>> from nonebot.adapters.console import Message, MessageSegment >>> Message.template(\\\"{}{}\\\").format(MessageSegment.markdown(\\\"**markup**\\\"), \\\"world\\\") Message( MessageSegment(type='markdown', data={'markup': '**markup**'}), MessageSegment(type='text', data={'text': 'world'}) )\",\"消息模板同样支持使用消息序列作为模板：\",\">>> from nonebot.adapters.console import Message, MessageSegment >>> Message.template( ... MessageSegment.text(\\\"{user_id}\\\") + MessageSegment.emoji(\\\"tada\\\") + ... MessageSegment.text(\\\"{message}\\\") ... ).format_map({\\\"user_id\\\": 123456, \\\"message\\\": \\\"hello world\\\"}) Message( MessageSegment(type='text', data={'text': '123456'}), MessageSegment(type='emoji', data={'emoji': 'tada'}), MessageSegment(type='text', data={'text': 'hello world'}) )\",\"注意\",\"只有消息序列中的文本类型消息段才能被格式化，其他类型的消息段将会原样添加。\",\"消息模板支持使用拓展控制符来控制消息段类型：\",\">>> from nonebot.adapters.console import Message, MessageSegment >>> Message.template(\\\"{name:emoji}\\\").format(name='tada') Message(MessageSegment(type='emoji', data={'name': 'tada'}))\"]},\"245\":{\"h\":\"Alconna 本体\",\"t\":[\"Alconna 隶属于 ArcletProject，是一个简单、灵活、高效的命令参数解析器, 并且不局限于解析命令式字符串。\",\"我们通过一个例子来讲解 Alconna 的核心 —— Args, Subcommand, Option：\",\"from arclet.alconna import Alconna, Args, Subcommand, Option alc = Alconna( \\\"pip\\\", Subcommand( \\\"install\\\", Args[\\\"package\\\", str], Option(\\\"-r|--requirement\\\", Args[\\\"file\\\", str]), Option(\\\"-i|--index-url\\\", Args[\\\"url\\\", str]), ) ) res = alc.parse(\\\"pip install nonebot2 -i URL\\\") print(res) # matched=True, header_match=(origin='pip' result='pip' matched=True groups={}), subcommands={'install': (value=Ellipsis args={'package': 'nonebot2'} options={'index-url': (value=None args={'url': 'URL'})} subcommands={})}, other_args={'package': 'nonebot2', 'url': 'URL'} print(res.all_matched_args) # {'package': 'nonebot2', 'url': 'URL'}\",\"这段代码通过Alconna创捷了一个接受主命令名为pip, 子命令为install且子命令接受一个 Args 参数package和二个 Option 参数-r和-i的命令参数解析器, 通过parse方法返回解析结果 Arparma 的实例。\"]},\"246\":{\"h\":\"命令头\",\"t\":[\"命令头是指命令的前缀 (Prefix) 与命令名 (Command) 的组合，例如 !help 中的 ! 与 help。\",\"前缀\",\"命令名\",\"匹配内容\",\"说明\",\"-\",\"\\\"foo\\\"\",\"\\\"foo\\\"\",\"无前缀的纯文字头\",\"-\",\"123\",\"123\",\"无前缀的元素头\",\"-\",\"\\\"re:\\\\d{2}\\\"\",\"\\\"32\\\"\",\"无前缀的正则头\",\"-\",\"int\",\"123 或 \\\"456\\\"\",\"无前缀的类型头\",\"[int, bool]\",\"-\",\"True 或 123\",\"无名的元素类头\",\"[\\\"foo\\\", \\\"bar\\\"]\",\"-\",\"\\\"foo\\\" 或 \\\"bar\\\"\",\"无名的纯文字头\",\"[\\\"foo\\\", \\\"bar\\\"]\",\"\\\"baz\\\"\",\"\\\"foobaz\\\" 或 \\\"barbaz\\\"\",\"纯文字头\",\"[int, bool]\",\"\\\"foo\\\"\",\"[123, \\\"foo\\\"] 或 [False, \\\"foo\\\"]\",\"类型头\",\"[123, 4567]\",\"\\\"foo\\\"\",\"[123, \\\"foo\\\"] 或 [4567, \\\"foo\\\"]\",\"元素头\",\"[nepattern.NUMBER]\",\"\\\"bar\\\"\",\"[123, \\\"bar\\\"] 或 [123.456, \\\"bar\\\"]\",\"表达式头\",\"[123, \\\"foo\\\"]\",\"\\\"bar\\\"\",\"[123, \\\"bar\\\"] 或 \\\"foobar\\\" 或 [\\\"foo\\\", \\\"bar\\\"]\",\"混合头\",\"[(int, \\\"foo\\\"), (456, \\\"bar\\\")]\",\"\\\"baz\\\"\",\"[123, \\\"foobaz\\\"] 或 [456, \\\"foobaz\\\"] 或 [456, \\\"barbaz\\\"]\",\"对头\",\"对于无前缀的类型头，此时会将传入的值尝试转为 BasePattern，例如 int 会转为 nepattern.INTEGER。如此该命令头会匹配对应的类型， 例如 int 会匹配 123 或 \\\"456\\\"，但不会匹配 \\\"foo\\\"。解析后，Alconna 会将命令头匹配到的值转为对应的类型，例如 int 会将 \\\"123\\\" 转为 123。\",\"提示\",\"正则内容只在命令名上生效，前缀中的正则会被转义\",\"除了通过传入 re:xxx 来使用正则表达式外，Alconna 还提供了一种更加简洁的方式来使用正则表达式，称为 Bracket Header：\",\"from alconna import Alconna alc = Alconna(\\\".rd{roll:int}\\\") assert alc.parse(\\\".rd123\\\").header[\\\"roll\\\"] == 123\",\"Bracket Header 类似 python 里的 f-string 写法，通过 \\\"{}\\\" 声明匹配类型\",\"\\\"{}\\\" 中的内容为 \\\"name:type or pat\\\"：\",\"\\\"{}\\\", \\\"{:}\\\" ⇔ \\\"(.+)\\\", 占位符\",\"\\\"{foo}\\\" ⇔ \\\"(?P&lt;foo&gt;.+)\\\"\",\"\\\"{:\\\\d+}\\\" ⇔ \\\"(\\\\d+)\\\"\",\"\\\"{foo:int}\\\" ⇔ \\\"(?P&lt;foo&gt;\\\\d+)\\\"，其中 \\\"int\\\" 部分若能转为 BasePattern 则读取里面的表达式\"]},\"247\":{\"h\":\"参数声明(Args)\",\"t\":[\"Args 是用于声明命令参数的组件， 可以通过以下几种方式构造 Args ：\",\"Args[key, var, default][key1, var1, default1][...]\",\"Args[(key, var, default)]\",\"Args.key[var, default]\",\"其中，key 一定是字符串，而 var 一般为参数的类型，default 为具体的值或者 arclet.alconna.args.Field\",\"其与函数签名类似，但是允许含有默认值的参数在前；同时支持 keyword-only 参数不依照构造顺序传入 （但是仍需要在非 keyword-only 参数之后）。\"]},\"248\":{\"h\":\"key\",\"t\":[\"key 的作用是用以标记解析出来的参数并存放于 Arparma 中，以方便用户调用。\",\"其有三种为 Args 注解的标识符: ?、/、 !, 标识符与 key 之间建议以 ; 分隔：\",\"! 标识符表示该处传入的参数应不是规定的类型，或不在指定的值中。\",\"? 标识符表示该参数为可选参数，会在无参数匹配时跳过。\",\"/ 标识符表示该参数的类型注解需要隐藏。\",\"另外，对于参数的注释也可以标记在 key 中，其与 key 或者标识符 以 # 分割：foo#这是注释;? 或 foo?#这是注释\",\"提示\",\"Args 中的 key 在实际命令中并不需要传入（keyword 参数除外）：\",\"from arclet.alconna import Alconna, Args alc = Alconna(\\\"test\\\", Args[\\\"foo\\\", str]) alc.parse(\\\"test --foo abc\\\") # 错误 alc.parse(\\\"test abc\\\") # 正确\",\"若需要 test --foo abc，你应该使用 Option：\",\"from arclet.alconna import Alconna, Args, Option alc = Alconna(\\\"test\\\", Option(\\\"--foo\\\", Args[\\\"foo\\\", str]))\"]},\"249\":{\"h\":\"var\",\"t\":[\"var 负责命令参数的类型检查与类型转化\",\"Args 的var表面上看需要传入一个 type，但实际上它需要的是一个 nepattern.BasePattern 的实例：\",\"from arclet.alconna import Args from nepattern import BasePattern # 表示 foo 参数需要匹配一个 @number 样式的字符串 args = Args[\\\"foo\\\", BasePattern(\\\"@\\\\d+\\\")]\",\"pip 示例中可以传入 str 是因为 str 已经注册在了 nepattern.global_patterns 中，因此会替换为 nepattern.global_patterns[str]\",\"nepattern.global_patterns默认支持的类型有：\",\"str: 匹配任意字符串\",\"int: 匹配整数\",\"float: 匹配浮点数\",\"bool: 匹配 True 与 False 以及他们小写形式\",\"hex: 匹配 0x 开头的十六进制字符串\",\"url: 匹配网址\",\"email: 匹配 xxxx@xxx 的字符串\",\"ipv4: 匹配 xxx.xxx.xxx.xxx 的字符串\",\"list: 匹配类似 [\\\"foo\\\",\\\"bar\\\",\\\"baz\\\"] 的字符串\",\"dict: 匹配类似 {\\\"foo\\\":\\\"bar\\\",\\\"baz\\\":\\\"qux\\\"} 的字符串\",\"datetime: 传入一个 datetime 支持的格式字符串，或时间戳\",\"Any: 匹配任意类型\",\"AnyString: 匹配任意类型，转为 str\",\"Number: 匹配 int 与 float，转为 int\",\"同时可以使用 typing 中的类型：\",\"Literal[X]: 匹配其中的任意一个值\",\"Union[X, Y]: 匹配其中的任意一个类型\",\"Optional[xxx]: 会自动将默认值设为 None，并在解析失败时使用默认值\",\"List[X]: 匹配一个列表，其中的元素为 X 类型\",\"Dict[X, Y]: 匹配一个字典，其中的 key 为 X 类型，value 为 Y 类型\",\"...\",\"提示\",\"几类特殊的传入标记：\",\"\\\"foo\\\": 匹配字符串 \\\"foo\\\" (若没有某个 BasePattern 与之关联)\",\"RawStr(\\\"foo\\\"): 匹配字符串 \\\"foo\\\" (即使有 BasePattern 与之关联也不会被替换)\",\"\\\"foo|bar|baz\\\": 匹配 \\\"foo\\\" 或 \\\"bar\\\" 或 \\\"baz\\\"\",\"[foo, bar, Baz, ...]: 匹配其中的任意一个值或类型\",\"Callable[[X], Y]: 匹配一个参数为 X 类型的值，并返回通过该函数调用得到的 Y 类型的值\",\"\\\"re:xxx\\\": 匹配一个正则表达式 xxx，会返回 Match[0]\",\"\\\"rep:xxx\\\": 匹配一个正则表达式 xxx，会返回 re.Match 对象\",\"{foo: bar, baz: qux}: 匹配字典中的任意一个键, 并返回对应的值 (特殊的键 ... 会匹配任意的值)\",\"...\",\"特别的，你可以不传入 var，此时会使用 key 作为 var, 匹配 key 字符串。\"]},\"250\":{\"h\":\"MultiVar 与 KeyWordVar\",\"t\":[\"MultiVar 是一个特殊的标注，用于告知解析器该参数可以接受多个值，类似于函数中的 *args，其构造方法形如 MultiVar(str)。\",\"同样的还有 KeyWordVar，类似于函数中的 *, name: type，其构造方法形如 KeyWordVar(str)，用于告知解析器该参数为一个 keyword-only 参数。\",\"提示\",\"MultiVar 与 KeyWordVar 组合时，代表该参数为一个可接受多个 key-value 的参数，类似于函数中的 **kwargs，其构造方法形如 MultiVar(KeyWordVar(str))\",\"MultiVar 与 KeyWordVar 也可以传入 default 参数，用于指定默认值\",\"MultiVar 不能在 KeyWordVar 之后传入\"]},\"251\":{\"h\":\"default\",\"t\":[\"default 传入的是该参数的默认值或者 Field，以携带对于该参数的更多信息。\",\"默认情况下 (即不声明) default 的值为特殊值 Empty。这也意味着你可以将默认值设置为 None 表示默认值为空值。\",\"Field 构造需要的参数说明如下：\",\"default: 参数单元的默认值\",\"alias: 参数单元默认值的别名\",\"completion: 参数单元的补全说明生成函数\",\"unmatch_tips: 参数单元的错误提示生成函数，其接收一个表示匹配失败的元素的参数\",\"missing_tips: 参数单元的缺失提示生成函数\"]},\"252\":{\"h\":\"选项与子命令(Option & Subcommand)\",\"t\":[\"Option 和 Subcommand 可以传入一组 alias，如 Option(\\\"--foo|-F|--FOO|-f\\\")，Subcommand(\\\"foo\\\", alias=[\\\"F\\\"])\",\"传入别名后，选项与子命令会选择其中长度最长的作为其名称。若传入为 \\\"--foo|-f\\\"，则命令名称为 \\\"--foo\\\"\",\"特别提醒!!!\",\"Option 的名字或别名没有要求必须在前面写上 -\",\"Option 与 Subcommand 的唯一区别在于 Subcommand 可以传入自己的 Option 与 Subcommand\",\"他们拥有如下共同参数：\",\"help_text: 传入该组件的帮助信息\",\"dest: 被指定为解析完成时标注匹配结果的标识符，不传入时默认为选项或子命令的名称 (name)\",\"requires: 一段指定顺序的字符串列表，作为唯一的前置序列与命令嵌套替换 对于命令 test foo bar baz qux <a:int> 来讲，因为foo bar baz 仅需要判断是否相等, 所以可以这么编写：\",\"Alconna(\\\"test\\\", Option(\\\"qux\\\", Args.a[int], requires=[\\\"foo\\\", \\\"bar\\\", \\\"baz\\\"]))\",\"default: 默认值，在该组件未被解析时使用使用该值替换。 特别的，使用 OptionResult 或 SubcomanndResult 可以设置包括参数字典在内的默认值：\",\"from arclet.alconna import Option, OptionResult opt1 = Option(\\\"--foo\\\", default=False) opt2 = Option(\\\"--foo\\\", default=OptionResult(value=False, args={\\\"bar\\\": 1}))\"]},\"253\":{\"h\":\"Action\",\"t\":[\"Option 可以特别设置传入一类 Action，作为解析操作\",\"Action 分为三类：\",\"store: 无 Args 时， 仅存储一个值， 默认为 Ellipsis； 有 Args 时， 后续的解析结果会覆盖之前的值\",\"append: 无 Args 时， 将多个值存为列表， 默认为 Ellipsis； 有 Args 时， 每个解析结果会追加到列表中, 当存在默认值并且不为列表时， 会自动将默认值变成列表， 以保证追加的正确性\",\"count: 无 Args 时， 计数器加一； 有 Args 时， 表现与 STORE 相同, 当存在默认值并且不为数字时， 会自动将默认值变成 1， 以保证计数器的正确性。\",\"Alconna 提供了预制的几类 Action：\",\"store(默认)，store_value，store_true，store_false\",\"append，append_value\",\"count\"]},\"254\":{\"h\":\"解析结果(Arparma)\",\"t\":[\"Alconna.parse 会返回由 Arparma 承载的解析结果\",\"Arparma 有如下属性：\",\"调试类\",\"matched: 是否匹配成功\",\"error_data: 解析失败时剩余的数据\",\"error_info: 解析失败时的异常内容\",\"origin: 原始命令，可以类型标注\",\"分析类\",\"header_match: 命令头部的解析结果，包括原始头部、解析后头部、解析结果与可能的正则匹配组\",\"main_args: 命令的主参数的解析结果\",\"options: 命令所有选项的解析结果\",\"subcommands: 命令所有子命令的解析结果\",\"other_args: 除主参数外的其他解析结果\",\"all_matched_args: 所有 Args 的解析结果\",\"Arparma 同时提供了便捷的查询方法 query[type]()，会根据传入的 path 查找参数并返回\",\"path 支持如下:\",\"main_args, options, ...: 返回对应的属性\",\"args: 返回 all_matched_args\",\"main_args.xxx, options.xxx, ...: 返回字典中 xxx键对应的值\",\"args.xxx: 返回 all_matched_args 中 xxx键对应的值\",\"options.foo, foo: 返回选项 foo 的解析结果 (OptionResult)\",\"options.foo.value, foo.value: 返回选项 foo 的解析值\",\"options.foo.args, foo.args: 返回选项 foo 的解析参数字典\",\"options.foo.args.bar, foo.bar: 返回选项 foo 的参数字典中 bar 键对应的值 ...\"]},\"255\":{\"h\":\"元数据(CommandMeta)\",\"t\":[\"Alconna 的元数据相当于其配置，拥有以下条目：\",\"description: 命令的描述\",\"usage: 命令的用法\",\"example: 命令的使用样例\",\"author: 命令的作者\",\"fuzzy_match: 命令是否开启模糊匹配\",\"fuzzy_threshold: 模糊匹配阈值\",\"raise_exception: 命令是否抛出异常\",\"hide: 命令是否对 manager 隐藏\",\"hide_shortcut: 命令的快捷指令是否在 help 信息中隐藏\",\"keep_crlf: 命令解析时是否保留换行字符\",\"compact: 命令是否允许第一个参数紧随头部\",\"strict: 命令是否严格匹配，若为 False 则未知参数将作为名为 $extra 的参数\",\"context_style: 命令上下文插值的风格，None 为关闭，bracket 为 {...}，parentheses 为 $(...)\",\"extra: 命令的自定义额外信息\",\"元数据一定使用 meta=... 形式传入：\",\"from arclet.alconna import Alconna, CommandMeta alc = Alconna(..., meta=CommandMeta(\\\"foo\\\", example=\\\"bar\\\"))\"]},\"256\":{\"h\":\"命名空间配置\",\"t\":[\"命名空间配置 （以下简称命名空间） 相当于 Alconna 的默认配置，其优先度低于 CommandMeta。\",\"Alconna 默认使用 \\\"Alconna\\\" 命名空间。\",\"命名空间有以下几个属性：\",\"name: 命名空间名称\",\"prefixes: 默认前缀配置\",\"separators: 默认分隔符配置\",\"formatter_type: 默认格式化器类型\",\"fuzzy_match: 默认是否开启模糊匹配\",\"raise_exception: 默认是否抛出异常\",\"builtin_option_name: 默认的内置选项名称(--help, --shortcut, --comp)\",\"disable_builtin_options: 默认禁用的内置选项(--help, --shortcut, --comp)\",\"enable_message_cache: 默认是否启用消息缓存\",\"compact: 默认是否开启紧凑模式\",\"strict: 命令是否严格匹配\",\"context_style: 命令上下文插值的风格\",\"...\"]},\"257\":{\"h\":\"新建命名空间并替换\",\"t\":[\"from arclet.alconna import Alconna, namespace, Namespace, Subcommand, Args, config ns = Namespace(\\\"foo\\\", prefixes=[\\\"/\\\"]) # 创建 \\\"foo\\\"命名空间配置, 它要求创建的Alconna的主命令前缀必须是/ alc = Alconna(\\\"pip\\\", Subcommand(\\\"install\\\", Args[\\\"package\\\", str]), namespace=ns) # 在创建Alconna时候传入命名空间以替换默认命名空间 # 可以通过with方式创建命名空间 with namespace(\\\"bar\\\") as np1: np1.prefixes = [\\\"!\\\"] # 以上下文管理器方式配置命名空间，此时配置会自动注入上下文内创建的命令 np1.formatter_type = ShellTextFormatter # 设置此命名空间下的命令的 formatter 默认为 ShellTextFormatter np1.builtin_option_name[\\\"help\\\"] = {\\\"帮助\\\", \\\"-h\\\"} # 设置此命名空间下的命令的帮助选项名称 # 你还可以使用config来管理所有命名空间并切换至任意命名空间 config.namespaces[\\\"foo\\\"] = ns # 将命名空间挂载到 config 上 alc = Alconna(\\\"pip\\\", Subcommand(\\\"install\\\", Args[\\\"package\\\", str]), namespace=config.namespaces[\\\"foo\\\"]) # 也是同样可以切换到\\\"foo\\\"命名空间\"]},\"258\":{\"h\":\"修改默认的命名空间\",\"t\":[\"from arclet.alconna import config, namespace, Namespace config.default_namespace.prefixes = [...] # 直接修改默认配置 np = Namespace(\\\"xxx\\\", prefixes=[...]) config.default_namespace = np # 更换默认的命名空间 with namespace(config.default_namespace.name) as np: np.prefixes = [...]\"]},\"259\":{\"h\":\"快捷指令\",\"t\":[\"快捷命令可以做到标识一段命令, 并且传递参数给原命令\",\"一般情况下你可以通过 Alconna.shortcut 进行快捷指令操作 (创建，删除)\",\"shortcut 的第一个参数为快捷指令名称，第二个参数为 ShortcutArgs，作为快捷指令的配置：\",\"class ShortcutArgs(TypedDict): \\\"\\\"\\\"快捷指令参数\\\"\\\"\\\" command: NotRequired[str] \\\"\\\"\\\"快捷指令的命令\\\"\\\"\\\" args: NotRequired[list[Any]] \\\"\\\"\\\"快捷指令的附带参数\\\"\\\"\\\" fuzzy: NotRequired[bool] \\\"\\\"\\\"是否允许命令后随参数\\\"\\\"\\\" prefix: NotRequired[bool] \\\"\\\"\\\"是否调用时保留指令前缀\\\"\\\"\\\" wrapper: NotRequired[ShortcutRegWrapper] \\\"\\\"\\\"快捷指令的正则匹配结果的额外处理函数\\\"\\\"\\\" humanized: NotRequired[str] \\\"\\\"\\\"快捷指令的人类可读描述\\\"\\\"\\\"\"]},\"260\":{\"h\":\"args的使用\",\"t\":[\"from arclet.alconna import Alconna, Args alc = Alconna(\\\"setu\\\", Args[\\\"count\\\", int]) alc.shortcut(\\\"涩图(\\\\d+)张\\\", {\\\"args\\\": [\\\"{0}\\\"]}) # 'Alconna::setu 的快捷指令: \\\"涩图(\\\\\\\\d+)张\\\" 添加成功' alc.parse(\\\"涩图3张\\\").query(\\\"count\\\") # 3\"]},\"261\":{\"h\":\"command的使用\",\"t\":[\"from arclet.alconna import Alconna, Args alc = Alconna(\\\"eval\\\", Args[\\\"content\\\", str]) alc.shortcut(\\\"echo\\\", {\\\"command\\\": \\\"eval print(\\\\\\\\'{*}\\\\\\\\')\\\"}) # 'Alconna::eval 的快捷指令: \\\"echo\\\" 添加成功' alc.shortcut(\\\"echo\\\", delete=True) # 删除快捷指令 # 'Alconna::eval 的快捷指令: \\\"echo\\\" 删除成功' @alc.bind() # 绑定一个命令执行器, 若匹配成功则会传入参数, 自动执行命令执行器 def cb(content: str): eval(content, {}, {}) alc.parse('eval print(\\\\\\\\\\\"hello world\\\\\\\\\\\")') # hello world alc.parse(\\\"echo hello world!\\\") # hello world!\",\"当 fuzzy 为 False 时，第一个例子中传入 \\\"涩图1张 abc\\\" 之类的快捷指令将视为解析失败\",\"快捷指令允许三类特殊的 placeholder：\",\"{%X}: 如 setu {%0}，表示此处填入快捷指令后随的第 X 个参数。\",\"例如，若快捷指令为 涩图, 配置为 {\\\"command\\\": \\\"setu {%0}\\\"}, 则指令 涩图 1 相当于 setu 1\",\"{*}: 表示此处填入所有后随参数，并且可以通过 {*X} 的方式指定组合参数之间的分隔符。\",\"{X}: 表示此处填入可能的正则匹配的组：\",\"若 command 中存在匹配组 (xxx)，则 {X} 表示第 X 个匹配组的内容\",\"若 command 中存储匹配组 (?P<xxx>...), 则 {X} 表示 名字 为 X 的匹配结果\",\"除此之外, 通过 Alconna 内置选项 --shortcut 可以动态操作快捷指令\",\"例如：\",\"cmd --shortcut <key> <cmd> 来增加一个快捷指令\",\"cmd --shortcut list 来列出当前指令的所有快捷指令\",\"cmd --shortcut delete key 来删除一个快捷指令\",\"from arclet.alconna import Alconna, Args alc = Alconna(\\\"eval\\\", Args[\\\"content\\\", str]) alc.shortcut(\\\"echo\\\", {\\\"command\\\": \\\"eval print(\\\\\\\\'{*}\\\\\\\\')\\\"}) alc.parse(\\\"eval --shortcut list\\\") # 'echo'\"]},\"262\":{\"h\":\"紧凑命令\",\"t\":[\"Alconna, Option 与 Subcommand 可以设置 compact=True 使得解析命令时允许名称与后随参数之间没有分隔：\",\"from arclet.alconna import Alconna, Option, CommandMeta, Args alc = Alconna(\\\"test\\\", Args[\\\"foo\\\", int], Option(\\\"BAR\\\", Args[\\\"baz\\\", str], compact=True), meta=CommandMeta(compact=True)) assert alc.parse(\\\"test123 BARabc\\\").matched\",\"这使得我们可以实现如下命令：\",\"from arclet.alconna import Alconna, Option, Args, append alc = Alconna(\\\"gcc\\\", Option(\\\"--flag|-F\\\", Args[\\\"content\\\", str], action=append, compact=True)) print(alc.parse(\\\"gcc -Fabc -Fdef -Fxyz\\\").query[list](\\\"flag.content\\\")) # ['abc', 'def', 'xyz']\",\"当 Option 的 action 为 count 时，其自动支持 compact 特性：\",\"from arclet.alconna import Alconna, Option, count alc = Alconna(\\\"pp\\\", Option(\\\"--verbose|-v\\\", action=count, default=0)) print(alc.parse(\\\"pp -vvv\\\").query[int](\\\"verbose.value\\\")) # 3\"]},\"263\":{\"h\":\"模糊匹配\",\"t\":[\"模糊匹配会应用在任意需要进行名称判断的地方，如 命令名称，选项名称 和 参数名称 (如指定需要传入参数名称)。\",\"from arclet.alconna import Alconna, CommandMeta alc = Alconna(\\\"test_fuzzy\\\", meta=CommandMeta(fuzzy_match=True)) alc.parse(\\\"test_fuzy\\\") # test_fuzy is not matched. Do you mean \\\"test_fuzzy\\\"?\"]},\"264\":{\"h\":\"半自动补全\",\"t\":[\"半自动补全为用户提供了推荐后续输入的功能\",\"补全默认通过 --comp 或 -cp 或 ? 触发：（命名空间配置可修改名称）\",\"from arclet.alconna import Alconna, Args, Option alc = Alconna(\\\"test\\\", Args[\\\"abc\\\", int]) + Option(\\\"foo\\\") + Option(\\\"bar\\\") alc.parse(\\\"test --comp\\\") ''' output 以下是建议的输入： * <abc: int> * --help * -h * -sct * --shortcut * foo * bar '''\"]},\"265\":{\"h\":\"Duplication\",\"t\":[\"Duplication 用来提供更好的自动补全，类似于 ArgParse 的 Namespace\",\"普通情况下使用，需要利用到 ArgsStub、OptionStub 和 SubcommandStub 三个部分\",\"以pip为例，其对应的 Duplication 应如下构造:\",\"from arclet.alconna import Alconna, Args, Option, OptionResult, Duplication, SubcommandStub, Subcommand, count class MyDup(Duplication): verbose: OptionResult install: SubcommandStub alc = Alconna( \\\"pip\\\", Subcommand( \\\"install\\\", Args[\\\"package\\\", str], Option(\\\"-r|--requirement\\\", Args[\\\"file\\\", str]), Option(\\\"-i|--index-url\\\", Args[\\\"url\\\", str]), ), Option(\\\"-v|--version\\\"), Option(\\\"-v|--verbose\\\", action=count), ) res = alc.parse(\\\"pip -v install ...\\\") # 不使用duplication获得的提示较少 print(res.query(\\\"install\\\")) # (value=Ellipsis args={'package': '...'} options={} subcommands={}) result = alc.parse(\\\"pip -v install ...\\\", duplication=MyDup) print(result.install) # SubcommandStub(_origin=Subcommand('install', args=Args('package': str)), _value=Ellipsis, available=True, args=ArgsStub(_origin=Args('package': str), _value={'package': '...'}, available=True), dest='install', options=[OptionStub(_origin=Option('requirement', args=Args('file': str)), _value=None, available=False, args=ArgsStub(_origin=Args('file': str), _value={}, available=False), dest='requirement', aliases=['r', 'requirement'], name='requirement'), OptionStub(_origin=Option('index-url', args=Args('url': str)), _value=None, available=False, args=ArgsStub(_origin=Args('url': str), _value={}, available=False), dest='index-url', aliases=['index-url', 'i'], name='index-url')], subcommands=[], name='install')\",\"Duplication 也可以如 Namespace 一样直接标明参数名称和类型：\",\"from typing import Optional from arclet.alconna import Duplication class MyDup(Duplication): package: str file: Optional[str] = None url: Optional[str] = None\"]},\"266\":{\"h\":\"上下文插值\",\"t\":[\"当 context_style 条目被设置后，传入的命令中符合上下文插值的字段会被自动替换成当前上下文中的信息。\",\"上下文可以在 parse 中传入：\",\"from arclet.alconna import Alconna, Args, CommandMeta alc = Alconna(\\\"test\\\", Args[\\\"foo\\\", int], meta=CommandMeta(context_style=\\\"parentheses\\\")) alc.parse(\\\"test $(bar)\\\", {\\\"bar\\\": 123}) # {\\\"foo\\\": 123}\",\"context_style 的值分两种：\",\"\\\"bracket\\\": 插值格式为 {...}，例如 {foo}\",\"\\\"parentheses\\\": 插值格式为 $(...)，例如 $(bar)\"]},\"267\":{\"h\":\"配置项\"},\"268\":{\"h\":\"alconna_auto_send_output\",\"t\":[\"类型: bool\",\"默认值: False\",\"是否全局启用输出信息自动发送，不启用则会在触发特殊内置选项后仍然将解析结果传递至响应器。\"]},\"269\":{\"h\":\"alconna_use_command_start\",\"t\":[\"类型: bool\",\"默认值: False\",\"是否读取 Nonebot 的配置项 COMMAND_START 来作为全局的 Alconna 命令前缀\"]},\"270\":{\"h\":\"alconna_auto_completion\",\"t\":[\"类型: bool\",\"默认值: False\",\"是否全局启用命令自动补全，启用后会在参数缺失或触发 --comp 选项时自自动启用交互式补全。\"]},\"271\":{\"h\":\"alconna_use_origin\",\"t\":[\"类型: bool\",\"默认值: False\",\"是否全局使用原始消息 (即未经过 to_me 等处理的)，该选项会影响到 Alconna 的匹配行为。\"]},\"272\":{\"h\":\"alconna_use_command_sep\",\"t\":[\"类型: bool\",\"默认值: False\",\"是否读取 Nonebot 的配置项 COMMAND_SEP 来作为全局的 Alconna 命令分隔符。\"]},\"273\":{\"h\":\"alconna_global_extensions\",\"t\":[\"类型: List[str]\",\"默认值: []\",\"全局加载的扩展，路径以 . 分隔，如 foo.bar.baz:DemoExtension。\"]},\"274\":{\"h\":\"alconna_context_style\",\"t\":[\"类型: Optional[Literal[\\\"bracket\\\", \\\"parentheses\\\"]]\",\"默认值: None\",\"全局命令上下文插值的风格，None 为关闭，bracket 为 {...}，parentheses 为 $(...)。\"]},\"275\":{\"h\":\"alconna_enable_saa_patch\",\"t\":[\"类型: bool\",\"默认值: False\",\"是否启用 SAA 补丁。\"]},\"276\":{\"h\":\"alconna_apply_filehost\",\"t\":[\"类型: bool\",\"默认值: False\",\"是否启用文件托管。\"]},\"277\":{\"h\":\"alconna_apply_fetch_targets\",\"t\":[\"类型: bool\",\"默认值: False\",\"是否启动时拉取一次发送对象列表。\"]},\"278\":{\"h\":\"用户指南\",\"t\":[\"nonebot-plugin-orm 功能强大且复杂，使用上有一定难度。 不过，对于用户而言，只需要掌握部分功能即可。\",\"注意\",\"请注意区分插件的项目名（如：nonebot-plugin-wordcloud）和模块名（如：nonebot_plugin_wordcloud）。nonebot-plugin-orm 中统一使用插件模块名。参见 插件命名规范。\"]},\"279\":{\"h\":\"示例\"},\"280\":{\"h\":\"创建新机器人\",\"t\":[\"我们想要创建一个机器人，并安装 nonebot-plugin-wordcloud 插件，只需要执行以下命令：\",\"nb init # 初始化项目文件夹 pip install nonebot-plugin-orm[sqlite] # 安装 nonebot-plugin-orm，并附带 SQLite 支持 nb plugin install nonebot-plugin-wordcloud # 安装插件 # nb orm heads # 查看有什么插件使用到了数据库（可选） nb orm upgrade # 升级数据库 # nb orm check # 检查一下数据库模式是否与模型定义一致（可选） nb run # 启动机器人\"]},\"281\":{\"h\":\"卸载插件\",\"t\":[\"我们已经安装了 nonebot-plugin-wordcloud 插件，但是现在想要卸载它，并且删除它的数据，只需要执行以下命令：\",\"nb plugin uninstall nonebot-plugin-wordcloud # 卸载插件 # nb orm heads # 查看有什么插件使用到了数据库。（可选） nb orm downgrade nonebot_plugin_wordcloud@base # 降级数据库，删除数据 # nb orm check # 检查一下数据库模式是否与模型定义一致（可选）\"]},\"282\":{\"h\":\"CLI\",\"t\":[\"接下来，让我们了解下示例中出现的 CLI 命令的含义：\"]},\"283\":{\"h\":\"heads\",\"t\":[\"显示所有的分支头。一般一个分支对应一个插件。\",\"nb orm heads\",\"输出格式为 <迁移 ID> (<插件模块名>) (<头部类型>)：\",\"46327b837dd8 (nonebot_plugin_chatrecorder) (head) 9492159f98f7 (nonebot_plugin_user) (head) 71a72119935f (nonebot_plugin_session_orm) (effective head) ade8cdca5470 (nonebot_plugin_wordcloud) (head)\"]},\"284\":{\"h\":\"upgrade\",\"t\":[\"升级数据库。每次安装新的插件或更新插件版本后，都需要执行此命令。\",\"nb orm upgrade <插件模块名>@<迁移 ID>\",\"其中，<插件模块名>@<迁移 ID> 是可选参数。如果不指定，则会将所有分支升级到最新版本，这也是最常见的用法：\",\"nb orm upgrade\"]},\"285\":{\"h\":\"downgrade\",\"t\":[\"降级数据库。当需要回滚插件版本或删除插件时，可以执行此命令。\",\"nb orm downgrade <插件模块名>@<迁移 ID>\",\"其中，<迁移 ID> 也可以是 base，即回滚到初始状态。常用于卸载插件后删除其数据：\",\"nb orm downgrade <插件模块名>@base\"]},\"286\":{\"h\":\"check\",\"t\":[\"检查数据库模式是否与模型定义一致。机器人启动前会自动运行此命令（ALEMBIC_STARTUP_CHECK=true 时），并在检查失败时阻止启动。\",\"nb orm check\"]},\"287\":{\"h\":\"配置\"},\"288\":{\"h\":\"sqlalchemy_database_url\",\"t\":[\"默认数据库连接 URL。参见 数据库驱动和后端 和 引擎配置 — SQLAlchemy 2.0 文档。\",\"SQLALCHEMY_DATABASE_URL=dialect+driver://username:password@host:port/database\"]},\"289\":{\"h\":\"sqlalchemy_bind\",\"t\":[\"bind keys（一般为插件模块名）到数据库连接 URL、create_async_engine() 参数字典或 AsyncEngine 实例的字典。 例如，我们想要让 nonebot-plugin-wordcloud 插件使用一个 SQLite 数据库，并开启 Echo 选项 便于 debug，而其他插件使用默认的 PostgreSQL 数据库，可以这样配置：\",\"SQLALCHEMY_BINDS='{ \\\"\\\": \\\"postgresql+psycopg://scott:tiger@localhost/mydatabase\\\", \\\"nonebot_plugin_wordcloud\\\": { \\\"url\\\": \\\"sqlite+aiosqlite://\\\", \\\"echo\\\": true } }'\"]},\"290\":{\"h\":\"sqlalchemy_engine_options\",\"t\":[\"create_async_engine() 默认参数字典。\",\"SQLALCHEMY_ENGINE_OPTIONS='{ \\\"pool_size\\\": 5, \\\"max_overflow\\\": 10, \\\"pool_timeout\\\": 30, \\\"pool_recycle\\\": 3600, \\\"echo\\\": true }'\"]},\"291\":{\"h\":\"sqlalchemy_echo\",\"t\":[\"开启 Echo 选项 和 Echo Pool 选项 便于 debug。\",\"SQLALCHEMY_ECHO=true\",\"注意\",\"以上配置之间有覆盖关系，遵循特殊优先于一般的原则，具体为 sqlalchemy_database_url > sqlalchemy_bind > sqlalchemy_echo > sqlalchemy_engine_options。 但覆盖顺序并非显而易见，出于清晰考虑，请只配置必要的选项。\"]},\"292\":{\"h\":\"模拟网络通信\",\"t\":[\"NoneBot 驱动器提供了多种方法来帮助适配器进行网络通信，主要包括客户端和服务端两种类型。模拟网络通信可以帮助我们更加接近实际机器人应用场景，进行更加真实的集成测试。同时，通过这种途径，我们还可以完成对适配器的测试。\",\"NoneBot 中的网络通信主要包括以下几种：\",\"HTTP 服务端（WebHook）\",\"WebSocket 服务端\",\"HTTP 客户端\",\"WebSocket 客户端\",\"下面我们将分别介绍如何使用 NoneBug 来模拟这几种通信方式。\"]},\"293\":{\"h\":\"测试 HTTP 服务端\",\"t\":[\"当 NoneBot 作为 ASGI 服务端应用时，我们可以定义一系列的路由来处理 HTTP 请求，适配器同样也可以通过定义路由来响应机器人相关的网络通信。下面假设我们使用了一个适配器 fake ，它定义了一个路由 /fake/http ，用于接收平台 WebHook 并处理。实际应用测试时，应将该路由地址替换为真实适配器注册的路由地址。\",\"我们首先需要获取测试用模拟客户端：\",\"from nonebug import App @pytest.mark.asyncio async def test_http_server(app: App): async with app.test_server() as ctx: client = ctx.get_client()\",\"默认情况下，app.test_server() 会通过 nonebot.get_asgi 获取测试对象，我们也可以通过参数指定 ASGI 应用：\",\"async with app.test_server(asgi=asgi_app) as ctx: ...\",\"获取到模拟客户端后，即可像 requests、httpx 等库类似的方法进行使用：\",\"import nonebot from nonebug import App from nonebot.adapters.fake import Adapter @pytest.mark.asyncio async def test_http_server(app: App): adapter = nonebot.get_adapter(Adapter) async with app.test_server() as ctx: client = ctx.get_client() response = await client.post(\\\"/fake/http\\\", json={\\\"bot_id\\\": \\\"fake\\\"}) assert response.status_code == 200 assert response.json() == {\\\"status\\\": \\\"success\\\"} assert \\\"fake\\\" in nonebot.get_bots() adapter.bot_disconnect(nonebot.get_bot(\\\"fake\\\"))\",\"在上面的测试中，我们向 /fake/http 发送了一个模拟 POST 请求，适配器将会对该请求进行处理，我们可以通过检查请求返回是否正确、Bot 对象是否创建等途径来验证机器人是否正确运行。在完成测试后，我们通常需要对 Bot 对象进行清理，以避免对其他测试产生影响。\"]},\"294\":{\"h\":\"测试 WebSocket 服务端\",\"t\":[\"当 NoneBot 作为 ASGI 服务端应用时，我们还可以定义一系列的路由来处理 WebSocket 通信。下面假设我们使用了一个适配器 fake ，它定义了一个路由 /fake/ws ，用于处理平台 WebSocket 连接信息。实际应用测试时，应将该路由地址替换为真实适配器注册的路由地址。\",\"我们同样需要通过 app.test_server() 获取测试用模拟客户端，这里就不再赘述。在获取到模拟客户端后，我们可以通过 client.websocket_connect 方法来模拟 WebSocket 连接：\",\"import nonebot from nonebug import App from nonebot.adapters.fake import Adapter @pytest.mark.asyncio async def test_ws_server(app: App): adapter = nonebot.get_adapter(Adapter) async with app.test_server() as ctx: client = ctx.get_client() async with client.websocket_connect(\\\"/fake/ws\\\") as ws: await ws.send_json({\\\"bot_id\\\": \\\"fake\\\"}) response = await ws.receive_json() assert response == {\\\"status\\\": \\\"success\\\"} assert \\\"fake\\\" in nonebot.get_bots()\",\"在上面的测试中，我们向 /fake/ws 进行了 WebSocket 模拟通信，通过发送消息与机器人进行交互，然后检查机器人发送的信息是否正确。\"]},\"295\":{\"h\":\"测试 HTTP 客户端\",\"t\":[\"暂不支持\"]},\"296\":{\"h\":\"测试 WebSocket 客户端\",\"t\":[\"暂不支持\"]},\"297\":{\"h\":\"开发者指南\",\"t\":[\"开发者指南内容较多，故分为了一个示例以及数个专题。 阅读（并且最好跟随实践）示例后，你将会对使用 nonebot-plugin-orm 开发插件有一个基本的认识。 如果想要更深入地学习关于 SQLAlchemy 和 Alembic 的知识，或者在使用过程中遇到了问题，可以查阅专题以及其官方文档。\"]},\"298\":{\"h\":\"示例\"},\"299\":{\"h\":\"模型定义\",\"t\":[\"首先，我们需要设计存储的数据的结构。 例如天气插件，需要存储什么地方 (location) 的天气是什么 (weather)。 其中，一个地方只会有一种天气，而不同地方可能有相同的天气。 所以，我们可以设计出如下的模型：\",\"from nonebot_plugin_orm import Model from sqlalchemy.orm import Mapped, mapped_column class Weather(Model): location: Mapped[str] = mapped_column(primary_key=True) weather: Mapped[str]\",\"其中，primary_key=True 意味着此列 (location) 是主键，即内容是唯一的且非空的。 每一个模型必须有至少一个主键。\",\"我们可以用以下代码检查模型生成的数据库模式是否正确：\",\"from sqlalchemy.schema import CreateTable print(CreateTable(Weather.__table__))\",\"CREATE TABLE weather_weather ( location VARCHAR NOT NULL, weather VARCHAR NOT NULL, CONSTRAINT pk_weather_weather PRIMARY KEY (location) )\",\"可以注意到表名是 weather_weather 而不是 Weather 或者 weather。 这是因为 nonebot-plugin-orm 会自动为模型生成一个表名，规则是：<插件模块名>_<类名小写>。\",\"你也可以通过指定 __tablename__ 属性来自定义表名：\",\"class Weather(Model): __tablename__ = \\\"weather\\\" ...\",\"CREATE TABLE weather ( ... )\",\"但是，并不推荐你这么做，因为这可能会导致不同插件间的表名重复，引发冲突。 特别是当你会发布插件时，你并不知道其他插件会不会使用相同的表名。\"]},\"300\":{\"h\":\"首次迁移\",\"t\":[\"我们成功定义了模型，现在启动机器人试试吧：\",\"$ nb run 01-02 15:04:05 [SUCCESS] nonebot | NoneBot is initializing... 01-02 15:04:05 [ERROR] nonebot_plugin_orm | 启动检查失败 01-02 15:04:05 [ERROR] nonebot | Application startup failed. Exiting. Traceback (most recent call last): ... click.exceptions.UsageError: 检测到新的升级操作: [('add_table', Table('weather', MetaData(), Column('location', String(), table=<weather>, primary_key=True, nullable=False), Column('weather', String(), table=<weather>, nullable=False), schema=None))]\",\"咦，发生了什么？nonebot-plugin-orm 试图阻止我们启动机器人。 原来是我们定义了模型，但是数据库中并没有对应的表，这会导致插件不能正常运行。 所以，我们需要迁移数据库。\",\"首先，我们需要创建一个迁移脚本：\",\"nb orm revision -m \\\"first revision\\\" --branch-label weather\",\"其中，-m 参数是迁移脚本的描述，--branch-label 参数是迁移脚本的分支，一般为插件模块名。 执行命令过后，出现了一个 weather/migrations 目录，其中有一个 xxxxxxxxxxxx_first_revision.py 文件：\",\"weather ├── __init__.py ├── config.py └── migrations └── xxxxxxxxxxxx_first_revision.py\",\"这就是我们创建的迁移脚本，它记录了数据库模式的变化。 我们可以查看一下它的内容：\",\"\\\"\\\"\\\"first revision 迁移 ID: xxxxxxxxxxxx 父迁移: 创建时间: 2006-01-02 15:04:05.999999 \\\"\\\"\\\" from __future__ import annotations from collections.abc import Sequence import sqlalchemy as sa from alembic import op revision: str = \\\"xxxxxxxxxxxx\\\" down_revision: str | Sequence[str] | None = None branch_labels: str | Sequence[str] | None = (\\\"weather\\\",) depends_on: str | Sequence[str] | None = None def upgrade(name: str = \\\"\\\") -> None: if name: return # ### commands auto generated by Alembic - please adjust! ### op.create_table( \\\"weather_weather\\\", sa.Column(\\\"location\\\", sa.String(), nullable=False), sa.Column(\\\"weather\\\", sa.String(), nullable=False), sa.PrimaryKeyConstraint(\\\"location\\\", name=op.f(\\\"pk_weather_weather\\\")), info={\\\"bind_key\\\": \\\"weather\\\"}, ) # ### end Alembic commands ### def downgrade(name: str = \\\"\\\") -> None: if name: return # ### commands auto generated by Alembic - please adjust! ### op.drop_table(\\\"weather_weather\\\") # ### end Alembic commands ###\",\"可以注意到脚本的主体部分（其余是模版代码，请勿修改）是：\",\"# ### commands auto generated by Alembic - please adjust! ### op.create_table( # CREATE TABLE \\\"weather_weather\\\", # weather_weather sa.Column(\\\"location\\\", sa.String(), nullable=False), # location VARCHAR NOT NULL, sa.Column(\\\"weather\\\", sa.String(), nullable=False), # weather VARCHAR NOT NULL, sa.PrimaryKeyConstraint(\\\"location\\\", name=op.f(\\\"pk_weather_weather\\\")), # CONSTRAINT pk_weather_weather PRIMARY KEY (location) info={\\\"bind_key\\\": \\\"weather\\\"}, ) # ### end Alembic commands ###\",\"# ### commands auto generated by Alembic - please adjust! ### op.drop_table(\\\"weather_weather\\\") # DROP TABLE weather_weather; # ### end Alembic commands ###\",\"虽然我们不是很懂这些代码的意思，但是可以注意到它们几乎与 SQL 语句 (DDL) 一一对应。 显然，它们是用来创建和删除表的。\",\"我们还可以注意到，upgrade() 和 downgrade() 函数中的代码是互逆的。 也就是说，执行一次 upgrade() 函数，再执行一次 downgrade() 函数后，数据库的模式就会回到原来的状态。\",\"这就是迁移脚本的作用：记录数据库模式的变化，以便我们在不同的环境中（例如开发环境和生产环境）可复现地、可逆地同步数据库模式，正如 git 对我们的代码做的事情那样。\",\"对了，不要忘记还有一段注释：commands auto generated by Alembic - please adjust!。 它在提醒我们，这些代码是由 Alembic 自动生成的，我们应该检查它们，并且根据需要进行调整。\",\"注意\",\"迁移脚本冗长且繁琐，我们一般不会手写它们，而是由 Alembic 自动生成。 一般情况下，Alembic 足够智能，可以正确地生成迁移脚本。 但是，在复杂或有歧义的情况下，我们可能需要手动调整迁移脚本。 所以，永远要检查迁移脚本，并且在开发环境中测试！\",\"迁移脚本中任何一处错误都足以使数据付之东流！\",\"确定迁移脚本正确后，我们就可以执行迁移脚本，将数据库模式同步到数据库中：\",\"nb orm upgrade\",\"现在，我们可以正常启动机器人了。\",\"开发过程中，我们可能会频繁地修改模型，这意味着我们需要频繁地创建并执行迁移脚本，非常繁琐。 实际上，此时我们不在乎数据安全，只需要数据库模式与模型定义一致即可。 所以，我们可以关闭 nonebot-plugin-orm 的启动检查：\",\"ALEMBIC_STARTUP_CHECK=false\",\"现在，每次启动机器人时，数据库模式会自动与模型定义同步，无需手动迁移。\"]},\"301\":{\"h\":\"会话管理\",\"t\":[\"我们已经成功定义了模型，并且迁移了数据库，现在可以开始使用数据库了……吗？ 并不能，因为模型只是数据结构的定义，并不能通过它操作数据（如果你曾经使用过 Tortoise ORM，可能会知道 await Weather.get(location=\\\"上海\\\") 这样的面向对象编程。 但是 SQLAlchemy 不同，选择了命令式编程）。 我们需要使用会话操作数据：\",\"from nonebot import on_command from nonebot.adapters import Message from nonebot.params import CommandArg from nonebot_plugin_orm import async_scoped_session weather = on_command(\\\"天气\\\") @weather.handle() async def _(session: async_scoped_session, args: Message = CommandArg()): location = args.extract_plain_text() if wea := await session.get(Weather, location): await weather.finish(f\\\"今天{location}的天气是{wea.weather}\\\") await weather.finish(f\\\"未查询到{location}的天气\\\")\",\"我们通过 session: async_scoped_session 依赖注入获得了一个会话，然后使用 await session.get(Weather, location) 查询数据库。async_scoped_session 是一个有作用域限制的会话，作用域为当前事件、当前事件响应器。 会话产生的模型实例（例如此处的 wea := await session.get(Weather, location)）作用域与会话相同。\",\"注意\",\"此处提到的“会话”指的是 ORM 会话，而非 NoneBot 会话，两者的生命周期也是不同的（NoneBot 会话的生命周期中可能包含多个事件，不同的事件也会有不同的事件响应器）。 具体而言，就是不要将 ORM 会话和模型实例存储在 NoneBot 会话状态中：\",\"from nonebot.params import ArgPlainText from nonebot.typing import T_State @weather.got(\\\"location\\\", prompt=\\\"请输入地名\\\") async def _(state: T_State, session: async_scoped_session, location: str = ArgPlainText()): wea = await session.get(Weather, location) if not wea: await weather.finish(f\\\"未查询到{location}的天气\\\") state[\\\"weather\\\"] = wea # 不要这么做，除非你知道自己在做什么\",\"当然非要这么做也不是不可以：\",\"@weather.handle() async def _(state: T_State, session: async_scoped_session): # 通过 await session.merge(state[\\\"weather\\\"]) 获得了此 ORM 会话中的相应模型实例， # 而非直接使用会话状态中的模型实例， # 因为先前的 ORM 会话已经关闭了。 wea = await session.merge(state[\\\"weather\\\"]) await weather.finish(f\\\"今天{state['location']}的天气是{wea.weather}\\\")\",\"当有数据更改时，我们需要提交事务，也要注意会话作用域问题：\",\"from nonebot.params import Depends async def get_weather( session: async_scoped_session, args: Message = CommandArg() ) -> Weather: location = args.extract_plain_text() if not (wea := await session.get(Weather, location)): wea = Weather(location=location, weather=\\\"未知\\\") session.add(wea) # await session.commit() # 不应该在其他地方提交事务 return wea @weather.handle() async def _(session: async_scoped_session, wea: Weather = Depends(get_weather)): await weather.send(f\\\"今天的天气是{wea.weather}\\\") await session.commit() # 而应该在事件响应器结束前提交事务\",\"当然我们也可以获得一个新的会话，不过此时就要手动管理会话了：\",\"from nonebot_plugin_orm import get_session async def get_weather(location: str) -> str: session = get_session() async with session.begin(): wea = await session.get(Weather, location) if not wea: wea = Weather(location=location, weather=\\\"未知\\\") session.add(wea) return wea.weather @weather.handle() async def _(args: Message = CommandArg()): wea = await get_weather(args.extract_plain_text()) await weather.send(f\\\"今天的天气是{wea}\\\")\"]},\"302\":{\"h\":\"依赖注入\",\"t\":[\"在上面的示例中，我们都是通过会话获得数据的。 不过，我们也可以通过依赖注入获得数据：\",\"from sqlalchemy import select from nonebot.params import Depends from nonebot_plugin_orm import SQLDepends def extract_arg_plain_text(args: Message = CommandArg()) -> str: return args.extract_plain_text() @weather.handle() async def _( wea: Weather = SQLDepends( select(Weather).where(Weather.location == Depends(extract_arg_plain_text)) ), ): await weather.send(f\\\"今天的天气是{wea.weather}\\\")\",\"其中，SQLDepends 是一个特殊的依赖注入，它会根据类型标注和 SQL 语句提供数据，SQL 语句中也可以有子依赖。\",\"不同的类型标注也会获得不同形式的数据：\",\"from collections.abc import Sequence @weather.handle() async def _( weas: Sequence[Weather] = SQLDepends( select(Weather).where(Weather.weather == Depends(extract_arg_plain_text)) ), ): await weather.send(f\\\"今天的天气是{weas[0].weather}的城市有{'，'.join(wea.location for wea in weas)}\\\")\",\"支持的类型标注请参见 依赖注入。\",\"我们也可以像 类作为依赖 那样，在类属性中声明子依赖：\",\"from collections.abc import Sequence class Weather(Model): location: Mapped[str] = mapped_column(primary_key=True) weather: Mapped[str] = Depends(extract_arg_plain_text) # weather: Annotated[Mapped[str], Depends(extract_arg_plain_text)] # Annotated 支持 @weather.handle() async def _(weas: Sequence[Weather]): await weather.send( f\\\"今天的天气是{weas[0].weather}的城市有{'，'.join(wea.location for wea in weas)}\\\" )\"]},\"303\":{\"h\":\"依赖注入\",\"t\":[\"nonebot-plugin-orm 提供了强大且灵活的依赖注入，可以方便地帮助你获取数据库会话和查询数据。\"]},\"304\":{\"h\":\"数据库会话\"},\"305\":{\"h\":\"AsyncSession\",\"t\":[\"新数据库会话，常用于有独立的数据库操作逻辑的插件。\",\"from nonebot import on_message from nonebot.params import Depends from nonebot_plugin_orm import AsyncSession, Model, async_scoped_session from sqlalchemy.orm import Mapped, mapped_column message = on_message() class Message(Model): id: Mapped[int] = mapped_column(primary_key=True, autoincrement=True) async def get_message(session: AsyncSession) -> Message: # 等价于 session = get_session() async with session: msg = Message() session.add(msg) await session.commit() await session.refresh(msg) return msg @message.handle() async def _(session: async_scoped_session, msg: Message = Depends(get_message)): await session.rollback() # 无法回退 get_message() 中的更改 await message.send(str(msg.id)) # msg 被存储，msg.id 递增\"]},\"306\":{\"h\":\"async_scoped_session\",\"t\":[\"数据库作用域会话，常用于事件响应器和有与响应逻辑相关的数据库操作逻辑的插件。\",\"from nonebot import on_message from nonebot.params import Depends from nonebot_plugin_orm import Model, async_scoped_session from sqlalchemy.orm import Mapped, mapped_column message = on_message() class Message(Model): id: Mapped[int] = mapped_column(primary_key=True, autoincrement=True) async def get_message(session: async_scoped_session) -> Message: # 等价于 session = get_scoped_session() msg = Message() session.add(msg) await session.flush() await session.refresh(msg) return msg @message.handle() async def _(session: async_scoped_session, msg: Message = Depends(get_message)): await session.rollback() # 可以回退 get_message() 中的更改 await message.send(str(msg.id)) # msg 没有被存储，msg.id 不变\"]},\"307\":{\"h\":\"查询数据\"},\"308\":{\"h\":\"Model\",\"t\":[\"支持类作为依赖。\",\"from typing import Annotated from nonebot.params import Depends from nonebot_plugin_orm import Model from sqlalchemy.orm import Mapped, mapped_column def get_id() -> int: ... class Message(Model): id: Annotated[Mapped[int], Depends(get_id)] = mapped_column( primary_key=True, autoincrement=True ) async def _(msg: Message): # 等价于 msg = ( # await (await session.stream(select(Message).where(Message.id == get_id()))) # .scalars() # .one_or_none() # ) ...\"]},\"309\":{\"h\":\"SQLDepends\",\"t\":[\"参数为一个 SQL 语句，决定依赖注入的内容，SQL 语句中可以使用子依赖。\",\"from nonebot.params import Depends from nonebot_plugin_orm import Model, SQLDepends from sqlalchemy import select def get_id() -> int: ... async def _( model: Model = SQLDepends(select(Model).where(Model.id == Depends(get_id))), ): ...\",\"参数可以是任意 SQL 语句，但不建议使用 select 以外的语句，因为语句可能没有返回值（returning 除外），而且代码不清晰。\"]},\"310\":{\"h\":\"类型标注\",\"t\":[\"类型标注决定依赖注入的数据结构，主要影响以下几个层面：\",\"迭代器（session.execute()）或异步迭代器（session.stream()）\",\"标量（session.execute().scalars()）或元组（session.execute()）\",\"一个（session.execute().one_or_none()，注意 None 时可能触发 重载）或全部（session.execute() / session.execute().all()）\",\"连续（session().execute()）或分块（session.execute().partitions()）\",\"具体如下（可以使用父类型作为类型标注）：\",\"async def _(rows_partitions: AsyncIterator[Sequence[Tuple[Model, ...]]]): # 等价于 rows_partitions = await (await session.stream(sql).partitions()) async for partition in rows_partitions: for row in partition: print(row[0], row[1], ...)\",\"async def _(model_partitions: AsyncIterator[Sequence[Model]]): # 等价于 model_partitions = await (await session.stream(sql).scalars().partitions()) async for partition in model_partitions: for model in partition: print(model)\",\"async def _(row_partitions: Iterator[Sequence[Tuple[Model, ...]]]): # 等价于 row_partitions = await session.execute(sql).partitions() for partition in rows_partitions: for row in partition: print(row[0], row[1], ...)\",\"async def _(model_partitions: Iterator[Sequence[Model]]): # 等价于 model_partitions = await (await session.execute(sql).scalars().partitions()) for partition in model_partitions: for model in partition: print(model)\",\"async def _(rows: sa_async.AsyncResult[Tuple[Model, ...]]): # 等价于 rows = await session.stream(sql) async for row in rows: print(row[0], row[1], ...)\",\"async def _(models: sa_async.AsyncScalarResult[Model]): # 等价于 models = await session.stream(sql).scalars() async for model in models: print(model)\",\"async def _(rows: sa.Result[Tuple[Model, ...]]): # 等价于 rows = await session.execute(sql) for row in rows: print(row[0], row[1], ...)\",\"async def _(models: sa.ScalarResult[Model]): # 等价于 models = await session.execute(sql).scalars() for model in models: print(model)\",\"async def _(rows: Sequence[Tuple[Model, ...]]): # 等价于 rows = await (await session.stream(sql).all()) for row in rows: print(row[0], row[1], ...)\",\"async def _(models: Sequence[Model]): # 等价于 models = await (await session.stream(sql).scalars().all()) for model in models: print(model)\",\"async def _(row: Tuple[Model, ...]): # 等价于 row = await (await session.stream(sql).one_or_none()) print(row[0], row[1], ...)\",\"async def _(model: Model): # 等价于 model = await (await session.stream(sql).scalars().one_or_none()) print(model)\"]},\"311\":{\"h\":\"测试\",\"t\":[\"百思不如一试，测试是发现问题的最佳方式。\",\"不同的用户会有不同的配置，为了提高项目的兼容性，我们需要在不同数据库后端上测试。 手动进行大量的、重复的测试不可靠，也不现实，因此我们推荐使用 GitHub Actions 进行自动化测试：\",\"name: Test on: push: branches: - main jobs: test: runs-on: ubuntu-latest strategy: matrix: db: - sqlite+aiosqlite:///db.sqlite3 - postgresql+psycopg://postgres:postgres@localhost:5432/postgres - mysql+aiomysql://mysql:mysql@localhost:3306/mymysql fail-fast: false env: SQLALCHEMY_DATABASE_URL: ${{ matrix.db }} services: postgresql: image: ${{ startsWith(matrix.db, 'postgresql') && 'postgres' || '' }} env: POSTGRES_USER: postgres POSTGRES_PASSWORD: postgres POSTGRES_DB: postgres ports: - 5432:5432 mysql: image: ${{ startsWith(matrix.db, 'mysql') && 'mysql' || '' }} env: MYSQL_ROOT_PASSWORD: mysql MYSQL_USER: mysql MYSQL_PASSWORD: mysql MYSQL_DATABASE: mymysql ports: - 3306:3306 steps: - uses: actions/checkout@v4 - uses: actions/setup-python@v5 - name: Install dependencies run: pip install -r requirements.txt - name: Run migrations run: pipx run nb-cli orm upgrade - name: Run tests run: pytest\",\"如果项目还需要考虑跨平台和跨 Python 版本兼容，测试矩阵中还需要增加这两个维度。 但是，我们没必要在所有平台和 Python 版本上运行所有数据库的测试，因为很显然，PostgreSQL 和 MySQL 这类独立的数据库后端不会受平台和 Python 影响，而且 Github Actions 的非 Linux 平台不支持运行独立服务：\",\"Python 3.9\",\"Python 3.10\",\"Python 3.11\",\"Python 3.12\",\"Linux\",\"SQLite\",\"SQLite\",\"SQLite\",\"SQLite / PostgreSQL / MySQL\",\"Windows\",\"SQLite\",\"SQLite\",\"SQLite\",\"SQLite\",\"macOS\",\"SQLite\",\"SQLite\",\"SQLite\",\"SQLite\",\"name: Test on: push: branches: - main jobs: test: runs-on: ${{ matrix.os }} strategy: matrix: os: [ubuntu-latest, windows-latest, macos-latest] python-version: [\\\"3.9\\\", \\\"3.10\\\", \\\"3.11\\\", \\\"3.12\\\"] db: [\\\"sqlite+aiosqlite:///db.sqlite3\\\"] include: - os: ubuntu-latest python-version: \\\"3.12\\\" db: postgresql+psycopg://postgres:postgres@localhost:5432/postgres - os: ubuntu-latest python-version: \\\"3.12\\\" db: mysql+aiomysql://mysql:mysql@localhost:3306/mymysql fail-fast: false env: SQLALCHEMY_DATABASE_URL: ${{ matrix.db }} services: postgresql: image: ${{ startsWith(matrix.db, 'postgresql') && 'postgres' || '' }} env: POSTGRES_USER: postgres POSTGRES_PASSWORD: postgres POSTGRES_DB: postgres ports: - 5432:5432 mysql: image: ${{ startsWith(matrix.db, 'mysql') && 'mysql' || '' }} env: MYSQL_ROOT_PASSWORD: mysql MYSQL_USER: mysql MYSQL_PASSWORD: mysql MYSQL_DATABASE: mymysql ports: - 3306:3306 steps: - uses: actions/checkout@v4 - uses: actions/setup-python@v5 with: python-version: ${{ matrix.python-version }} - name: Install dependencies run: pip install -r requirements.txt - name: Run migrations run: pipx run nb-cli orm upgrade - name: Run tests run: pytest\"]},\"312\":{\"h\":\"\",\"t\":[\"{ \\\"position\\\": 15 }\"]},\"313\":{\"h\":\"\",\"t\":[\"{ \\\"position\\\": 13 }\"]},\"314\":{\"h\":\"\",\"t\":[\"{ \\\"position\\\": 14 }\"]},\"315\":{\"h\":\"\",\"t\":[\"{ \\\"position\\\": 12 }\"]},\"316\":{\"h\":\"\",\"t\":[\"{ \\\"label\\\": \\\"Alconna 命令解析拓展\\\", \\\"position\\\": 6 }\"]},\"317\":{\"h\":\"\",\"t\":[\"{ \\\"label\\\": \\\"数据库\\\", \\\"position\\\": 7 }\"]},\"318\":{\"h\":\"\",\"t\":[\"{ \\\"label\\\": \\\"单元测试\\\", \\\"position\\\": 5 }\"]},\"319\":{\"h\":\"\",\"t\":[\"{ \\\"label\\\": \\\"开发者指南\\\", \\\"position\\\": 3 }\"]},\"320\":{\"h\":\"\",\"t\":[\"404 Not Found\"]},\"321\":{\"h\":\"Advanced\"},\"322\":{\"h\":\"Appendices\"},\"323\":{\"h\":\"Best Practice\"},\"324\":{\"h\":\"Community\"},\"325\":{\"h\":\"Developer\"},\"326\":{\"h\":\"Ospp\"},\"327\":{\"h\":\"Tutorial\"},\"328\":{\"h\":\"Alconna\"},\"329\":{\"h\":\"Database\"},\"330\":{\"h\":\"Testing\"},\"331\":{\"h\":\"Adapters\"},\"332\":{\"h\":\"Api\"},\"333\":{\"h\":\"Dependencies\"},\"334\":{\"h\":\"Drivers\"},\"335\":{\"h\":\"Plugin\"}},\"dirtCount\":0,\"index\":[[\"6\",{\"1\":{\"316\":1}}],[\"6+\",{\"1\":{\"34\":1}}],[\"影响\",{\"1\":{\"311\":1}}],[\"手动进行大量的\",{\"1\":{\"311\":1}}],[\"手动创建项目\",{\"0\":{\"205\":1}}],[\"百思不如一试\",{\"1\":{\"311\":1}}],[\"连续\",{\"1\":{\"310\":1}}],[\"连接信息\",{\"1\":{\"294\":1}}],[\"连接处理\",{\"0\":{\"105\":1}}],[\"连接数据库\",{\"1\":{\"103\":1}}],[\"连接请求\",{\"1\":{\"54\":1,\"55\":1}}],[\"连接请求地址以及对\",{\"1\":{\"29\":1}}],[\"连接上下文\",{\"1\":{\"29\":1}}],[\"连接\",{\"0\":{\"173\":1},\"1\":{\"29\":1,\"171\":3,\"173\":4,\"294\":1}}],[\"迭代器\",{\"1\":{\"310\":1}}],[\"决定依赖注入的内容\",{\"1\":{\"309\":1}}],[\"没有被存储\",{\"1\":{\"306\":1}}],[\"没什么用\",{\"1\":{\"86\":1}}],[\"递增\",{\"1\":{\"305\":1}}],[\"新数据库会话\",{\"1\":{\"305\":1}}],[\"新建命名空间并替换\",{\"0\":{\"257\":1}}],[\"那样\",{\"1\":{\"302\":1}}],[\"那么消息模板将采用消息序列形式的格式化\",{\"1\":{\"244\":1}}],[\"那么\",{\"1\":{\"234\":1}}],[\"那么你需要在\",{\"1\":{\"215\":1}}],[\"那么你需要做出如下修改\",{\"1\":{\"214\":2}}],[\"那么你可以跳过这一节\",{\"1\":{\"215\":1}}],[\"那么其他依赖注入将不会执行\",{\"1\":{\"123\":1}}],[\"那么就不要修改事件参数类型注解\",{\"1\":{\"122\":1}}],[\"那么我们就可以向驱动器添加路由规则\",{\"1\":{\"94\":1}}],[\"未知\",{\"1\":{\"301\":2}}],[\"未查询到\",{\"1\":{\"301\":2}}],[\"就是不要将\",{\"1\":{\"301\":1}}],[\"就可以正常使用\",{\"1\":{\"0\":1}}],[\"两者的生命周期也是不同的\",{\"1\":{\"301\":1}}],[\"两个类\",{\"1\":{\"178\":1}}],[\"今天的天气是\",{\"1\":{\"301\":2,\"302\":3}}],[\"今天\",{\"1\":{\"301\":2}}],[\"吗\",{\"1\":{\"301\":1}}],[\"确定迁移脚本正确后\",{\"1\":{\"300\":1}}],[\"确保插件对\",{\"1\":{\"204\":1}}],[\"确保只有在私聊或者\",{\"1\":{\"124\":1}}],[\"确保依赖的外部插件已经被声明或加载\",{\"1\":{\"92\":1}}],[\"确保代码可以被编辑器正确解析\",{\"1\":{\"8\":1}}],[\"永远要检查迁移脚本\",{\"1\":{\"300\":1}}],[\"足够智能\",{\"1\":{\"300\":1}}],[\"记录数据库模式的变化\",{\"1\":{\"300\":1}}],[\"记录日志\",{\"0\":{\"118\":1}}],[\"再执行一次\",{\"1\":{\"300\":1}}],[\"执行一次\",{\"1\":{\"300\":1}}],[\"执行命令过后\",{\"1\":{\"300\":1}}],[\"显然\",{\"1\":{\"300\":1}}],[\"显示所有的分支头\",{\"1\":{\"283\":1}}],[\"语句中可以使用子依赖\",{\"1\":{\"309\":1}}],[\"语句中也可以有子依赖\",{\"1\":{\"302\":1}}],[\"语句提供数据\",{\"1\":{\"302\":1}}],[\"语句\",{\"1\":{\"300\":1,\"309\":2}}],[\"语句导入插件\",{\"1\":{\"92\":1}}],[\"虽然我们不是很懂这些代码的意思\",{\"1\":{\"300\":1}}],[\"虽然我们可以使用\",{\"1\":{\"117\":1}}],[\"父迁移\",{\"1\":{\"300\":1}}],[\"迁移脚本中任何一处错误都足以使数据付之东流\",{\"1\":{\"300\":1}}],[\"迁移脚本冗长且繁琐\",{\"1\":{\"300\":1}}],[\"迁移\",{\"1\":{\"300\":1}}],[\"出现了一个\",{\"1\":{\"300\":1}}],[\"出于清晰考虑\",{\"1\":{\"291\":1}}],[\"试图阻止我们启动机器人\",{\"1\":{\"300\":1}}],[\"咦\",{\"1\":{\"300\":1}}],[\"检测到新的升级操作\",{\"1\":{\"300\":1}}],[\"检查数据库模式是否与模型定义一致\",{\"1\":{\"286\":1}}],[\"检查一下数据库模式是否与模型定义一致\",{\"1\":{\"280\":1,\"281\":1}}],[\"检查消息段\",{\"0\":{\"241\":1}}],[\"检查事件是否有回复消息\",{\"1\":{\"176\":1}}],[\"检查事件是否和机器人有关操作\",{\"1\":{\"176\":1}}],[\"检查通过时匹配成功\",{\"1\":{\"126\":1}}],[\"检查依赖的插件是否已经被加载\",{\"1\":{\"93\":1}}],[\"检查\",{\"1\":{\"3\":1,\"183\":1}}],[\"首次迁移\",{\"0\":{\"300\":1}}],[\"首先\",{\"1\":{\"299\":1,\"300\":1}}],[\"引发冲突\",{\"1\":{\"299\":1}}],[\"引擎配置\",{\"1\":{\"288\":1}}],[\"意味着此列\",{\"1\":{\"299\":1}}],[\"意思是\",{\"1\":{\"7\":1}}],[\"阅读\",{\"1\":{\"297\":1}}],[\"故分为了一个示例以及数个专题\",{\"1\":{\"297\":1}}],[\"故需要先获得全局驱动器\",{\"1\":{\"102\":1}}],[\"暂不支持\",{\"1\":{\"295\":1,\"296\":1}}],[\"测试矩阵中还需要增加这两个维度\",{\"1\":{\"311\":1}}],[\"测试是发现问题的最佳方式\",{\"1\":{\"311\":1}}],[\"测试\",{\"0\":{\"293\":1,\"294\":1,\"295\":1,\"296\":1,\"311\":1}}],[\"遵循特殊优先于一般的原则\",{\"1\":{\"291\":1}}],[\"到数据库连接\",{\"1\":{\"289\":1}}],[\"都需要执行此命令\",{\"1\":{\"284\":1}}],[\"都采用消息序列的形式进行处理\",{\"1\":{\"229\":1}}],[\"降级数据库\",{\"1\":{\"281\":1,\"285\":1}}],[\"卸载插件\",{\"0\":{\"281\":1},\"1\":{\"281\":1}}],[\"全局命令上下文插值的风格\",{\"1\":{\"274\":1}}],[\"全局加载的扩展\",{\"1\":{\"273\":1}}],[\"全局钩子函数是指\",{\"1\":{\"102\":1}}],[\"全局钩子函数\",{\"0\":{\"102\":1}}],[\"全局钩子函数和事件处理钩子函数\",{\"1\":{\"101\":1}}],[\"启用后会在参数缺失或触发\",{\"1\":{\"270\":1}}],[\"启动检查失败\",{\"1\":{\"300\":1}}],[\"启动机器人\",{\"1\":{\"280\":1}}],[\"启动和关闭时进行相关操作\",{\"1\":{\"171\":1}}],[\"启动时运行\",{\"1\":{\"103\":1}}],[\"启动准备\",{\"0\":{\"103\":1}}],[\"启动\",{\"1\":{\"40\":1,\"48\":1}}],[\"插值格式为\",{\"1\":{\"266\":2}}],[\"插件命名规范\",{\"1\":{\"278\":1}}],[\"插件目录应该为相对机器人\",{\"1\":{\"217\":1}}],[\"插件目录中编写一个响应规则\",{\"1\":{\"125\":1}}],[\"插件文件名或文件夹名\",{\"1\":{\"215\":1}}],[\"插件内容可以在\",{\"1\":{\"213\":1}}],[\"插件间应尽量减少耦合\",{\"1\":{\"211\":1}}],[\"插件即是\",{\"1\":{\"211\":1}}],[\"插件结构\",{\"0\":{\"211\":1}}],[\"插件作者名正确展示\",{\"1\":{\"203\":1}}],[\"插件作者想要修改插件信息时无法便捷的找到操作方式等\",{\"1\":{\"203\":1}}],[\"插件存储至\",{\"1\":{\"203\":1}}],[\"插件使用一个\",{\"1\":{\"289\":1}}],[\"插件使用方法\",{\"1\":{\"86\":1}}],[\"插件使得官网内容构建正常\",{\"1\":{\"202\":1}}],[\"插件编写准备\",{\"0\":{\"210\":1}}],[\"插件编写\",{\"1\":{\"200\":1}}],[\"插件提供面板服务\",{\"1\":{\"198\":1}}],[\"插件提供的方法均返回一个\",{\"1\":{\"134\":1}}],[\"插件管理\",{\"1\":{\"194\":1,\"198\":1}}],[\"插件管理器\",{\"1\":{\"87\":1}}],[\"插件机制的自动化测试框架\",{\"1\":{\"186\":1}}],[\"插件进行支持\",{\"1\":{\"149\":1}}],[\"插件兼容\",{\"1\":{\"134\":1}}],[\"插件至项目环境中\",{\"1\":{\"133\":1,\"144\":1,\"150\":1}}],[\"插件依赖声明\",{\"0\":{\"93\":1}}],[\"插件跟踪\",{\"0\":{\"92\":1}}],[\"插件化系统的设计使得插件之间可以功能独立\",{\"1\":{\"91\":1}}],[\"插件就会加载\",{\"1\":{\"90\":1}}],[\"插件的开发\",{\"1\":{\"204\":1}}],[\"插件的低代码编写\",{\"1\":{\"204\":1}}],[\"插件的数据目录和配置目录是同一个目录\",{\"1\":{\"134\":1}}],[\"插件的子插件集合\",{\"1\":{\"87\":1}}],[\"插件的父插件\",{\"1\":{\"87\":1}}],[\"插件的配置类\",{\"1\":{\"86\":1}}],[\"插件中\",{\"1\":{\"127\":1}}],[\"插件中定义的事件响应器\",{\"1\":{\"87\":1}}],[\"插件中的事件响应器\",{\"1\":{\"86\":1}}],[\"插件对象\",{\"1\":{\"87\":1}}],[\"插件索引名称\",{\"1\":{\"86\":1,\"87\":1}}],[\"插件项目主页\",{\"1\":{\"86\":1}}],[\"插件类别\",{\"1\":{\"86\":1}}],[\"插件描述\",{\"1\":{\"86\":1}}],[\"插件名称\",{\"1\":{\"86\":1,\"89\":1,\"214\":1}}],[\"插件父子关系等\",{\"1\":{\"86\":1}}],[\"插件模块路径\",{\"1\":{\"87\":1}}],[\"插件模块名称\",{\"1\":{\"86\":1}}],[\"插件模块\",{\"1\":{\"86\":1,\"87\":1,\"215\":1}}],[\"插件元数据\",{\"0\":{\"86\":1},\"1\":{\"86\":1,\"87\":1}}],[\"插件信息\",{\"0\":{\"85\":1}}],[\"插件\",{\"1\":{\"10\":1,\"86\":1,\"132\":1,\"143\":1,\"195\":1,\"200\":1,\"205\":1,\"224\":1,\"227\":1,\"280\":1,\"281\":1}}],[\"插件视图搜索并安装\",{\"1\":{\"10\":1}}],[\"插件系统通过\",{\"1\":{\"92\":1}}],[\"插件系统内部索引\",{\"1\":{\"86\":1}}],[\"插件系统获取收集到的信息\",{\"1\":{\"86\":1}}],[\"插件系统是\",{\"1\":{\"5\":1}}],[\"插件系统\",{\"0\":{\"5\":1}}],[\"条目被设置后\",{\"1\":{\"266\":1}}],[\"普通情况下使用\",{\"1\":{\"265\":1}}],[\"触发\",{\"1\":{\"264\":1}}],[\"触发权限更新函数是一个\",{\"1\":{\"116\":1}}],[\"补丁\",{\"1\":{\"275\":1}}],[\"补全默认通过\",{\"1\":{\"264\":1}}],[\"补充\",{\"1\":{\"190\":1}}],[\"半自动补全为用户提供了推荐后续输入的功能\",{\"1\":{\"264\":1}}],[\"半自动补全\",{\"0\":{\"264\":1}}],[\"紧凑命令\",{\"0\":{\"262\":1}}],[\"名字\",{\"1\":{\"261\":1}}],[\"个匹配组的内容\",{\"1\":{\"261\":1}}],[\"个参数\",{\"1\":{\"261\":1}}],[\"个套接字\",{\"1\":{\"40\":1}}],[\"绑定一个命令执行器\",{\"1\":{\"261\":1}}],[\"张\",{\"1\":{\"260\":2}}],[\"涩图1张\",{\"1\":{\"261\":1}}],[\"涩图3张\",{\"1\":{\"260\":1}}],[\"涩图\",{\"1\":{\"260\":2,\"261\":2}}],[\"第一个例子中传入\",{\"1\":{\"261\":1}}],[\"第二个参数为\",{\"1\":{\"259\":1}}],[\"第三方插件\",{\"1\":{\"208\":1}}],[\"第三方库\",{\"1\":{\"149\":1}}],[\"第三方响应规则\",{\"0\":{\"83\":1}}],[\"删除数据\",{\"1\":{\"281\":1}}],[\"删除成功\",{\"1\":{\"261\":1}}],[\"删除快捷指令\",{\"1\":{\"261\":1}}],[\"删除\",{\"1\":{\"259\":1}}],[\"快捷命令可以做到标识一段命令\",{\"1\":{\"259\":1}}],[\"快捷指令允许三类特殊的\",{\"1\":{\"261\":1}}],[\"快捷指令的人类可读描述\",{\"1\":{\"259\":1}}],[\"快捷指令的正则匹配结果的额外处理函数\",{\"1\":{\"259\":1}}],[\"快捷指令的附带参数\",{\"1\":{\"259\":1}}],[\"快捷指令的命令\",{\"1\":{\"259\":1}}],[\"快捷指令参数\",{\"1\":{\"259\":1}}],[\"快捷指令\",{\"0\":{\"259\":1}}],[\"快速编写具体的\",{\"1\":{\"191\":1}}],[\"命名空间名称\",{\"1\":{\"256\":1}}],[\"命名空间有以下几个属性\",{\"1\":{\"256\":1}}],[\"命名空间\",{\"1\":{\"256\":1,\"257\":1}}],[\"命名空间配置可修改名称\",{\"1\":{\"264\":1}}],[\"命名空间配置\",{\"0\":{\"256\":1},\"1\":{\"256\":1,\"257\":1}}],[\"命令分隔符\",{\"1\":{\"272\":1}}],[\"命令前缀\",{\"1\":{\"269\":1}}],[\"命令上下文插值的风格\",{\"1\":{\"255\":1,\"256\":1}}],[\"命令是否严格匹配\",{\"1\":{\"255\":1,\"256\":1}}],[\"命令是否允许第一个参数紧随头部\",{\"1\":{\"255\":1}}],[\"命令是否对\",{\"1\":{\"255\":1}}],[\"命令是否抛出异常\",{\"1\":{\"255\":1}}],[\"命令是否开启模糊匹配\",{\"1\":{\"255\":1}}],[\"命令的含义\",{\"1\":{\"282\":1}}],[\"命令的自定义额外信息\",{\"1\":{\"255\":1}}],[\"命令的快捷指令是否在\",{\"1\":{\"255\":1}}],[\"命令的作者\",{\"1\":{\"255\":1}}],[\"命令的使用样例\",{\"1\":{\"255\":1}}],[\"命令的用法\",{\"1\":{\"255\":1}}],[\"命令的描述\",{\"1\":{\"255\":1}}],[\"命令的主参数的解析结果\",{\"1\":{\"254\":1}}],[\"命令所有子命令的解析结果\",{\"1\":{\"254\":1}}],[\"命令所有选项的解析结果\",{\"1\":{\"254\":1}}],[\"命令名称\",{\"1\":{\"263\":1}}],[\"命令名\",{\"1\":{\"246\":1}}],[\"命令头部的解析结果\",{\"1\":{\"254\":1}}],[\"命令头是指命令的前缀\",{\"1\":{\"246\":1}}],[\"命令头\",{\"0\":{\"246\":1}}],[\"命令从完整模板创建\",{\"1\":{\"214\":1}}],[\"命令来运行机器人\",{\"1\":{\"209\":1}}],[\"命令来检查数据存储路径\",{\"1\":{\"134\":1}}],[\"命令代替\",{\"1\":{\"208\":1}}],[\"命令行的使用仍具有一定的困难\",{\"1\":{\"198\":1}}],[\"命令行即时交互通信设计与实现\",{\"0\":{\"195\":1}}],[\"命令行交互代码编写\",{\"1\":{\"194\":1,\"195\":1}}],[\"命令行\",{\"0\":{\"194\":1}}],[\"命令行工具以及参数\",{\"1\":{\"40\":1,\"48\":1}}],[\"命令就只会在插件启用且在私聊或者\",{\"1\":{\"127\":1}}],[\"命令添加了一个\",{\"1\":{\"124\":1}}],[\"命令创建插件时\",{\"1\":{\"89\":1}}],[\"命令解析时是否保留换行字符\",{\"1\":{\"255\":1}}],[\"命令解析拓展\",{\"1\":{\"84\":1,\"316\":1}}],[\"命令解析后的结果可以通过\",{\"1\":{\"75\":1}}],[\"命令\",{\"1\":{\"81\":2}}],[\"命令别名\",{\"1\":{\"81\":1}}],[\"命令并且带有\",{\"1\":{\"76\":1}}],[\"命令形式的消息\",{\"1\":{\"76\":1}}],[\"信息中隐藏\",{\"1\":{\"255\":1}}],[\"信息并作为回复消息发送\",{\"1\":{\"225\":1}}],[\"隐藏\",{\"1\":{\"255\":1}}],[\"元数据一定使用\",{\"1\":{\"255\":1}}],[\"元数据\",{\"0\":{\"255\":1}}],[\"元素头\",{\"1\":{\"246\":1}}],[\"键对应的值\",{\"1\":{\"254\":1}}],[\"查询数据\",{\"0\":{\"307\":1}}],[\"查询数据库\",{\"1\":{\"301\":1}}],[\"查看有什么插件使用到了数据库\",{\"1\":{\"280\":1,\"281\":1}}],[\"查找参数并返回\",{\"1\":{\"254\":1}}],[\"查天气\",{\"1\":{\"127\":1,\"228\":2}}],[\"原来是我们定义了模型\",{\"1\":{\"300\":1}}],[\"原始命令\",{\"1\":{\"254\":1}}],[\"原本正常运行的代码报错\",{\"1\":{\"40\":1}}],[\"承载的解析结果\",{\"1\":{\"254\":1}}],[\"计数器加一\",{\"1\":{\"253\":1}}],[\"因为很显然\",{\"1\":{\"311\":1}}],[\"因为语句可能没有返回值\",{\"1\":{\"309\":1}}],[\"因为先前的\",{\"1\":{\"301\":1}}],[\"因为模型只是数据结构的定义\",{\"1\":{\"301\":1}}],[\"因为这可能会导致不同插件间的表名重复\",{\"1\":{\"299\":1}}],[\"因为foo\",{\"1\":{\"252\":1}}],[\"因此会替换为\",{\"1\":{\"249\":1}}],[\"因此会话更新后的默认触发权限为当前事件的会话\",{\"1\":{\"116\":1}}],[\"因此会话更新后的默认响应事件类型为\",{\"1\":{\"115\":1}}],[\"因此请使用上述的\",{\"1\":{\"244\":1}}],[\"因此可以使用\",{\"1\":{\"239\":1}}],[\"因此你需要参考协议适配器的文档并导入对应的消息段后才能使用其特殊的消息类型\",{\"1\":{\"232\":1}}],[\"因此我们推荐使用\",{\"1\":{\"311\":1}}],[\"因此我们无法使用平台特有的消息类型\",{\"1\":{\"232\":1}}],[\"因此我们希望为\",{\"1\":{\"187\":1,\"188\":1}}],[\"因此我们可以使用\",{\"1\":{\"167\":1}}],[\"因此我们需要使用调用平台\",{\"1\":{\"153\":1}}],[\"因此我们不能在\",{\"1\":{\"92\":1}}],[\"因此其任务函数无法同事件处理函数一样通过依赖注入获取上下文信息\",{\"1\":{\"153\":1}}],[\"因此其使用方式与\",{\"1\":{\"151\":1}}],[\"因此需要在使用前对其进行加载并导入其中的\",{\"1\":{\"152\":1}}],[\"因此开发环境中\",{\"1\":{\"147\":1}}],[\"因此在使用时需要注意避免文件名冲突\",{\"1\":{\"134\":1}}],[\"因此不要使用\",{\"1\":{\"130\":1}}],[\"因此\",{\"1\":{\"30\":1,\"57\":1,\"86\":1,\"123\":1,\"198\":1,\"200\":1,\"226\":1,\"231\":1,\"238\":1}}],[\"被存储\",{\"1\":{\"305\":1}}],[\"被指定为解析完成时标注匹配结果的标识符\",{\"1\":{\"252\":1}}],[\"被称为钩子\",{\"1\":{\"101\":1}}],[\"几类特殊的传入标记\",{\"1\":{\"249\":1}}],[\"样式的字符串\",{\"1\":{\"249\":1}}],[\"错误\",{\"1\":{\"248\":1}}],[\"错误跟踪通常在生产环境中使用\",{\"1\":{\"147\":1}}],[\"错误跟踪\",{\"0\":{\"143\":1}}],[\"另外\",{\"1\":{\"248\":1}}],[\"另外建议编写适配器文档或者一些插件开发示例\",{\"1\":{\"180\":1}}],[\"之类的快捷指令将视为解析失败\",{\"1\":{\"261\":1}}],[\"之后传入\",{\"1\":{\"250\":1}}],[\"之间建议以\",{\"1\":{\"248\":1}}],[\"之前添加以下内容\",{\"1\":{\"119\":1}}],[\"之前进行\",{\"1\":{\"62\":1}}],[\"占位符\",{\"1\":{\"246\":1}}],[\"⇔\",{\"1\":{\"246\":4}}],[\"声明匹配类型\",{\"1\":{\"246\":1}}],[\"写法\",{\"1\":{\"246\":1}}],[\"写入文件内容\",{\"1\":{\"134\":1}}],[\"里的\",{\"1\":{\"246\":1}}],[\"称为\",{\"1\":{\"246\":1}}],[\"转为\",{\"1\":{\"246\":1,\"249\":2}}],[\"转换平台\",{\"1\":{\"174\":1}}],[\"转换\",{\"0\":{\"174\":1}}],[\"解析失败时的异常内容\",{\"1\":{\"254\":1}}],[\"解析失败时剩余的数据\",{\"1\":{\"254\":1}}],[\"解析结果与可能的正则匹配组\",{\"1\":{\"254\":1}}],[\"解析结果\",{\"0\":{\"254\":1}}],[\"解析后头部\",{\"1\":{\"254\":1}}],[\"解析后\",{\"1\":{\"246\":1}}],[\"解释器运行入口文件\",{\"1\":{\"209\":1}}],[\"混合头\",{\"1\":{\"246\":1}}],[\"表现与\",{\"1\":{\"253\":1}}],[\"表示第\",{\"1\":{\"261\":1}}],[\"表示此处填入可能的正则匹配的组\",{\"1\":{\"261\":1}}],[\"表示此处填入所有后随参数\",{\"1\":{\"261\":1}}],[\"表示此处填入快捷指令后随的第\",{\"1\":{\"261\":1}}],[\"表示默认值为空值\",{\"1\":{\"251\":1}}],[\"表示\",{\"1\":{\"249\":1,\"261\":1}}],[\"表达式头\",{\"1\":{\"246\":1}}],[\"表述\",{\"1\":{\"183\":1}}],[\"纯文字头\",{\"1\":{\"246\":1}}],[\"纯文本形式的格式化\",{\"1\":{\"244\":1}}],[\"隶属于\",{\"1\":{\"245\":1}}],[\"应将该路由地址替换为真实适配器注册的路由地址\",{\"1\":{\"293\":1,\"294\":1}}],[\"应如下构造\",{\"1\":{\"265\":1}}],[\"应注意消息序列为平台适配器提供的类型\",{\"1\":{\"244\":1}}],[\"应用程序或其他软件组件的行为的各种技术\",{\"1\":{\"101\":1}}],[\"应用后\",{\"1\":{\"100\":1}}],[\"应用添加路由\",{\"0\":{\"98\":1}}],[\"应用添加路由规则\",{\"1\":{\"94\":1}}],[\"应用添加任何服务端相关功能\",{\"1\":{\"29\":1}}],[\"应用路径\",{\"1\":{\"40\":1,\"48\":1}}],[\"应用\",{\"0\":{\"99\":1},\"1\":{\"34\":1,\"94\":1,\"99\":1,\"198\":1,\"293\":1}}],[\"应用框架提供的功能来添加路由规则了\",{\"1\":{\"100\":1}}],[\"应用框架提供的特性与功能\",{\"1\":{\"94\":1}}],[\"应用框架\",{\"1\":{\"29\":1}}],[\"构造需要的参数说明如下\",{\"1\":{\"251\":1}}],[\"构造消息序列\",{\"0\":{\"234\":1}}],[\"构建模板的效果是一样的\",{\"1\":{\"244\":1}}],[\"构建消息模板时\",{\"1\":{\"244\":1}}],[\"构建消息模板\",{\"1\":{\"244\":1}}],[\"总是可以参考python\",{\"1\":{\"244\":1}}],[\"极为相近\",{\"1\":{\"244\":1}}],[\"客制化\",{\"1\":{\"244\":1}}],[\"客户端\",{\"0\":{\"295\":1,\"296\":1},\"1\":{\"172\":1,\"224\":1,\"292\":2}}],[\"客户端通信方式\",{\"0\":{\"171\":1}}],[\"客户端驱动器\",{\"1\":{\"54\":1,\"55\":1,\"56\":1}}],[\"客户端驱动器模块中还会提供一个\",{\"1\":{\"30\":1}}],[\"客户端型驱动器可以分为以下两种\",{\"1\":{\"29\":1}}],[\"客户端连接等情形\",{\"1\":{\"29\":1}}],[\"多行富文本编排\",{\"1\":{\"244\":1}}],[\"多用户同时参与的会话\",{\"1\":{\"116\":1}}],[\"多用于使用\",{\"1\":{\"29\":2}}],[\"扩展\",{\"1\":{\"243\":1}}],[\"附加\",{\"1\":{\"243\":1}}],[\"附有适当的图片指引\",{\"1\":{\"196\":1}}],[\"拼接消息\",{\"0\":{\"243\":1}}],[\"拼接等\",{\"1\":{\"231\":1}}],[\"切片\",{\"1\":{\"242\":1}}],[\"切片的基础上\",{\"1\":{\"242\":1}}],[\"切换到适配器页签\",{\"1\":{\"180\":1}}],[\"过滤索引与切片\",{\"1\":{\"242\":1}}],[\"过滤\",{\"0\":{\"242\":1}}],[\"过程中遇到了任何问题\",{\"1\":{\"158\":1}}],[\"比较\",{\"0\":{\"240\":1}}],[\"比如\",{\"1\":{\"7\":1,\"115\":1}}],[\"循环遍历消息段\",{\"1\":{\"239\":1}}],[\"遍历\",{\"0\":{\"239\":1}}],[\"既可以使用\",{\"1\":{\"234\":1}}],[\"既然事件是基类的子类型\",{\"1\":{\"122\":1}}],[\"既然驱动器可以作为服务端运行\",{\"1\":{\"94\":1}}],[\"抽象基类\",{\"1\":{\"232\":1}}],[\"抽象类\",{\"1\":{\"58\":1}}],[\"抽象类继承自\",{\"1\":{\"58\":1}}],[\"绝大多数的平台都有着独特的消息类型\",{\"1\":{\"232\":1}}],[\"认识消息类型\",{\"0\":{\"230\":1}}],[\"越小越优先\",{\"1\":{\"228\":1}}],[\"越先被触发\",{\"1\":{\"65\":1}}],[\"优先级为\",{\"1\":{\"228\":1}}],[\"优化与\",{\"1\":{\"202\":1}}],[\"优化官网插件商店的展示细节\",{\"1\":{\"202\":1}}],[\"优化官网过长的\",{\"1\":{\"202\":1}}],[\"优化官网部分页面\",{\"1\":{\"202\":1}}],[\"优化官网开发与生产构建体验\",{\"1\":{\"202\":1}}],[\"优化用户体验\",{\"1\":{\"194\":1}}],[\"优化现有的通信\",{\"1\":{\"190\":1}}],[\"形式传入\",{\"1\":{\"255\":1}}],[\"形式出现\",{\"1\":{\"226\":1}}],[\"形成一个通用的\",{\"1\":{\"190\":1}}],[\"形成额外的维护成本\",{\"1\":{\"184\":1}}],[\"辅助函数来创建一个事件响应器\",{\"1\":{\"227\":1}}],[\"辅助函数以\",{\"1\":{\"226\":1}}],[\"辅助函数\",{\"1\":{\"226\":1}}],[\"辅助用户更好的上手项目以及进行开发\",{\"1\":{\"196\":1}}],[\"辅助用户更好地上手项目以及进行开发\",{\"1\":{\"194\":1}}],[\"互相搭配\",{\"1\":{\"224\":1}}],[\"操作系统的消息格式相互转换\",{\"1\":{\"224\":1}}],[\"稍后的文档中将会使用到这些概念\",{\"1\":{\"224\":1}}],[\"传入该组件的帮助信息\",{\"1\":{\"252\":1}}],[\"传入别名后\",{\"1\":{\"252\":1}}],[\"传入的命令中符合上下文插值的字段会被自动替换成当前上下文中的信息\",{\"1\":{\"266\":1}}],[\"传入的是该参数的默认值或者\",{\"1\":{\"251\":1}}],[\"传入的插件名必须为\",{\"1\":{\"221\":1}}],[\"传入一个\",{\"1\":{\"249\":1}}],[\"传递给\",{\"1\":{\"45\":1,\"53\":1}}],[\"8\",{\"1\":{\"219\":1,\"220\":1}}],[\"字符串\",{\"1\":{\"249\":1}}],[\"字符串与消息段相加\",{\"1\":{\"243\":1}}],[\"字符串与消息序列相加\",{\"1\":{\"243\":1}}],[\"字段进行加载\",{\"1\":{\"219\":1}}],[\"字段和\",{\"1\":{\"219\":1}}],[\"字典内可以存储任意类型的数据\",{\"1\":{\"130\":1}}],[\"字典的键名来达成收集某些特殊信息的目的\",{\"1\":{\"86\":1}}],[\"变种\",{\"1\":{\"219\":1,\"220\":1}}],[\"管理插件\",{\"1\":{\"215\":1}}],[\"取消注释或者添加如下代码\",{\"1\":{\"214\":1}}],[\"包含图片\",{\"1\":{\"244\":1}}],[\"包\",{\"1\":{\"213\":1}}],[\"包插件\",{\"0\":{\"213\":1}}],[\"包括原始头部\",{\"1\":{\"254\":1}}],[\"包括事件响应与消息处理等\",{\"1\":{\"204\":1}}],[\"包括\",{\"1\":{\"191\":1,\"192\":1}}],[\"包括插件的索引名称\",{\"1\":{\"86\":1}}],[\"包括但不限于\",{\"1\":{\"40\":1}}],[\"尽管它还什么都没做\",{\"1\":{\"212\":1}}],[\"单文件插件\",{\"0\":{\"212\":1}}],[\"单元测试\",{\"1\":{\"196\":1,\"318\":1}}],[\"你并不知道其他插件会不会使用相同的表名\",{\"1\":{\"299\":1}}],[\"你也可以通过指定\",{\"1\":{\"299\":1}}],[\"你也可以使用\",{\"1\":{\"209\":1}}],[\"你将会对使用\",{\"1\":{\"297\":1}}],[\"你还可以使用config来管理所有命名空间并切换至任意命名空间\",{\"1\":{\"257\":1}}],[\"你应该使用\",{\"1\":{\"248\":1}}],[\"你需要确保你使用的消息序列类型与你所要发送的平台类型一致\",{\"1\":{\"233\":1}}],[\"你需要导入对应的协议适配器中的消息序列和消息段后才能使用其特殊的工厂方法\",{\"1\":{\"232\":1}}],[\"你仍可以使用\",{\"1\":{\"209\":1}}],[\"你可以不传入\",{\"1\":{\"249\":1}}],[\"你可以在\",{\"1\":{\"90\":1}}],[\"你可以通过直接继承\",{\"1\":{\"60\":1}}],[\"你可能就需要考虑相关库对事件循环的支持\",{\"1\":{\"40\":1}}],[\"初始化项目文件夹\",{\"1\":{\"280\":1}}],[\"初始化\",{\"1\":{\"208\":1}}],[\"初始化并运行机器人的\",{\"1\":{\"205\":1}}],[\"避免重复命名\",{\"1\":{\"208\":1}}],[\"顾名思义\",{\"1\":{\"208\":1,\"232\":1}}],[\"监听的端口\",{\"1\":{\"207\":1}}],[\"监听的\",{\"1\":{\"207\":1}}],[\"复杂类型数据需使用\",{\"1\":{\"207\":1}}],[\"复制其中的\",{\"1\":{\"146\":1}}],[\"格式填写\",{\"1\":{\"207\":1}}],[\"格式\",{\"1\":{\"207\":1}}],[\"入口文件不会被创建\",{\"1\":{\"208\":1}}],[\"入口文件需要完成框架的初始化\",{\"1\":{\"208\":1}}],[\"入口文件\",{\"1\":{\"205\":1,\"208\":1,\"216\":1,\"217\":1}}],[\"网络请求等常用功能\",{\"1\":{\"204\":1}}],[\"集成\",{\"1\":{\"204\":1}}],[\"生态组件\",{\"1\":{\"204\":1}}],[\"生态的成长\",{\"1\":{\"204\":1}}],[\"生态中就有一类插件\",{\"1\":{\"91\":1}}],[\"经过深入分析社区反馈\",{\"1\":{\"204\":1}}],[\"状态\",{\"1\":{\"203\":1}}],[\"状态码\",{\"1\":{\"172\":1}}],[\"整合现有\",{\"1\":{\"203\":1}}],[\"缺少统计相关信息以帮助商店更好的展示当前插件状态\",{\"1\":{\"203\":1}}],[\"跟进插件新版本情况等\",{\"1\":{\"203\":1}}],[\"跟踪插件前进行模块\",{\"1\":{\"92\":1}}],[\"索引\",{\"1\":{\"231\":1,\"242\":1}}],[\"索引原理等\",{\"1\":{\"202\":1}}],[\"索引与切片\",{\"0\":{\"242\":1}}],[\"索引与\",{\"1\":{\"202\":1,\"242\":1}}],[\"掌握\",{\"1\":{\"202\":1,\"203\":1,\"204\":1}}],[\"熟练掌握\",{\"1\":{\"202\":1}}],[\"熟悉静态网站生成\",{\"1\":{\"202\":1}}],[\"熟悉前后端相关实现方式\",{\"1\":{\"198\":1}}],[\"熟悉文档结构组织与语言表达\",{\"1\":{\"196\":1}}],[\"熟悉所选语言的\",{\"1\":{\"192\":1}}],[\"熟悉聊天机器人开发\",{\"1\":{\"191\":1,\"192\":1}}],[\"熟悉至少两个聊天平台的聊天机器人开发\",{\"1\":{\"190\":1}}],[\"熟悉\",{\"1\":{\"183\":1,\"184\":1,\"186\":1,\"187\":1,\"188\":1,\"191\":1,\"194\":3,\"195\":3,\"196\":2,\"198\":2,\"199\":2,\"200\":5,\"203\":4,\"204\":3}}],[\"桌面端与移动端显示正常\",{\"1\":{\"202\":1}}],[\"升级数据库\",{\"1\":{\"280\":1,\"284\":1}}],[\"升级官网采用新版组件库\",{\"1\":{\"202\":1}}],[\"升级相关依赖并重新打造\",{\"1\":{\"202\":1}}],[\"布局与组件\",{\"1\":{\"202\":1}}],[\"替换现有的热重载逻辑以减少开发环境启动耗时等\",{\"1\":{\"202\":1}}],[\"替代方案\",{\"1\":{\"40\":1,\"48\":1}}],[\"水平\",{\"1\":{\"202\":1}}],[\"活动联合各大开源社区\",{\"1\":{\"201\":1}}],[\"旨在鼓励高校学生积极参与开源软件的开发维护\",{\"1\":{\"201\":1}}],[\"旨在鼓励在校学生积极参与开源软件的开发维护\",{\"1\":{\"181\":1,\"193\":1,\"197\":1}}],[\"便于\",{\"1\":{\"289\":1,\"291\":1}}],[\"便于用户读写应用数据\",{\"1\":{\"200\":1}}],[\"便于维护和管理\",{\"1\":{\"5\":1}}],[\"各模块职责与适配器编写\",{\"1\":{\"199\":1}}],[\"各司其职\",{\"1\":{\"91\":1}}],[\"均可以从\",{\"1\":{\"226\":1}}],[\"均可通过图形化界面的形式为用户提供更便捷的项目开发\",{\"1\":{\"198\":1}}],[\"均为下文中适配器所编写的类\",{\"1\":{\"166\":1}}],[\"合理分配布局\",{\"1\":{\"196\":1}}],[\"合并响应规则可以有多种形式\",{\"1\":{\"127\":1}}],[\"合并响应规则\",{\"0\":{\"127\":1}}],[\"适当的界面美化\",{\"1\":{\"196\":1}}],[\"适配\",{\"1\":{\"176\":1}}],[\"适配器将会对该请求进行处理\",{\"1\":{\"293\":1}}],[\"适配器同样也可以通过定义路由来响应机器人相关的网络通信\",{\"1\":{\"293\":1}}],[\"适配器在接收到消息时\",{\"1\":{\"233\":1}}],[\"适配器在处理时通常需要打印日志\",{\"1\":{\"167\":1}}],[\"适配器商店\",{\"1\":{\"206\":1}}],[\"适配器包名可以在\",{\"1\":{\"206\":1}}],[\"适配器并能够使用\",{\"1\":{\"187\":1}}],[\"适配器来支持\",{\"1\":{\"187\":1}}],[\"适配器测试\",{\"0\":{\"179\":1}}],[\"适配器名称\",{\"1\":{\"169\":1}}],[\"适配器的配置方法与插件配置类似\",{\"1\":{\"168\":1}}],[\"适配器的所有事件模型均继承自\",{\"1\":{\"17\":1}}],[\"适配器项目通常以\",{\"1\":{\"164\":1}}],[\"适配器为例\",{\"1\":{\"14\":1}}],[\"适配器通常由\",{\"1\":{\"163\":1}}],[\"适配器通常由四个部分组成\",{\"1\":{\"13\":1}}],[\"适配器通常有两种功能\",{\"1\":{\"13\":1}}],[\"适配器功能与组成\",{\"0\":{\"13\":1}}],[\"适配器\",{\"0\":{\"187\":1,\"199\":1},\"1\":{\"12\":1,\"199\":1,\"224\":1}}],[\"404\",{\"1\":{\"320\":1}}],[\"46327b837dd8\",{\"1\":{\"283\":1}}],[\"4567\",{\"1\":{\"246\":2}}],[\"456\",{\"1\":{\"246\":6}}],[\"415\",{\"1\":{\"196\":1}}],[\"484\",{\"1\":{\"3\":1}}],[\"工作流\",{\"1\":{\"203\":1}}],[\"工作原理\",{\"1\":{\"196\":1}}],[\"工具更佳\",{\"1\":{\"184\":1}}],[\"工具进行类型检查\",{\"1\":{\"8\":1}}],[\"方便进行命令匹配\",{\"1\":{\"227\":1}}],[\"方便了开发者直观的感受机器人文本交互功能\",{\"1\":{\"195\":1}}],[\"方法也进行了增强\",{\"1\":{\"242\":1}}],[\"方法进行类型过滤\",{\"1\":{\"242\":1}}],[\"方法进行构造\",{\"1\":{\"237\":1}}],[\"方法进行加载并导入需要使用的方法\",{\"1\":{\"134\":1}}],[\"方法创建事件响应器过于繁琐且不能记录插件信息\",{\"1\":{\"226\":1}}],[\"方法自行读取配置来加载插件\",{\"1\":{\"219\":1,\"220\":1}}],[\"方法发送数据\",{\"1\":{\"175\":1}}],[\"方法告知\",{\"1\":{\"173\":2}}],[\"方法\",{\"1\":{\"167\":1,\"175\":1,\"177\":1,\"242\":1,\"243\":1}}],[\"方法的方式\",{\"1\":{\"153\":1}}],[\"方法可轻松完成这一过程\",{\"1\":{\"152\":1}}],[\"方法添加文件处理器\",{\"1\":{\"119\":1}}],[\"方法快速获取\",{\"1\":{\"99\":1}}],[\"方法动态阻止事件传播\",{\"1\":{\"66\":1}}],[\"方法设置存储提供者\",{\"1\":{\"59\":1}}],[\"方法获取消息纯文本\",{\"1\":{\"238\":1}}],[\"方法获取全局驱动器实例\",{\"1\":{\"31\":1}}],[\"方法获取指定\",{\"1\":{\"16\":1}}],[\"方法获取\",{\"1\":{\"16\":1}}],[\"方法来模拟\",{\"1\":{\"294\":1}}],[\"方法来拼接一串消息\",{\"1\":{\"243\":1}}],[\"方法来检查消息中是否仅包含指定的消息段\",{\"1\":{\"241\":1}}],[\"方法来\",{\"1\":{\"241\":1}}],[\"方法来获取消息序列中的纯文本内容\",{\"1\":{\"231\":1}}],[\"方法来获取已注册的适配器\",{\"1\":{\"15\":1}}],[\"方法来发送请求\",{\"1\":{\"175\":1}}],[\"方法来发送数据\",{\"1\":{\"175\":1}}],[\"方法来让\",{\"1\":{\"174\":1}}],[\"方法来注册多个适配器\",{\"1\":{\"14\":1}}],[\"方法将适配器注册到驱动器中即可\",{\"1\":{\"14\":1}}],[\"成果仓库\",{\"1\":{\"194\":1,\"195\":1,\"196\":1,\"198\":1,\"199\":1,\"200\":1,\"202\":1,\"203\":1,\"204\":1}}],[\"项目本身结构复杂耦合\",{\"1\":{\"203\":1}}],[\"项目组织方式\",{\"1\":{\"194\":1,\"195\":1,\"196\":1}}],[\"项目管理图形化面板\",{\"0\":{\"198\":1}}],[\"项目管理\",{\"1\":{\"194\":1}}],[\"明确各功能模块\",{\"1\":{\"194\":1}}],[\"进阶部分向已经熟悉开发流程的用户介绍更多高级技巧\",{\"1\":{\"196\":1}}],[\"进阶\",{\"1\":{\"194\":1,\"195\":1,\"196\":1,\"198\":1,\"199\":1,\"200\":1,\"202\":1,\"203\":1,\"204\":1}}],[\"进行自动化测试\",{\"1\":{\"311\":1}}],[\"进行更加真实的集成测试\",{\"1\":{\"292\":1}}],[\"进行快捷指令操作\",{\"1\":{\"259\":1}}],[\"进行加载\",{\"1\":{\"220\":1}}],[\"进行项目创建\",{\"1\":{\"205\":1}}],[\"进行处理\",{\"1\":{\"174\":1}}],[\"进行了\",{\"1\":{\"294\":1}}],[\"进行了解\",{\"1\":{\"153\":1}}],[\"进行了封装以适用于\",{\"1\":{\"151\":1}}],[\"进行检查\",{\"1\":{\"128\":1}}],[\"进行事件处理的函数\",{\"1\":{\"107\":1}}],[\"脚手架的扩展开发\",{\"1\":{\"204\":1}}],[\"脚手架\",{\"1\":{\"204\":1}}],[\"脚手架功能存在一定的定位不明确\",{\"1\":{\"194\":1}}],[\"脚本\",{\"1\":{\"134\":1}}],[\"随着\",{\"1\":{\"194\":1}}],[\"部署项目等功能\",{\"1\":{\"194\":1}}],[\"部分若能转为\",{\"1\":{\"246\":1}}],[\"部分插件可能仅在某些特定平台上可用\",{\"1\":{\"224\":1}}],[\"部分是手动编写的\",{\"1\":{\"184\":1}}],[\"部分和\",{\"1\":{\"183\":1}}],[\"部分\",{\"0\":{\"183\":1},\"1\":{\"224\":1}}],[\"安装适配器\",{\"1\":{\"206\":1}}],[\"安装依赖\",{\"0\":{\"206\":1}}],[\"安装\",{\"1\":{\"196\":1,\"206\":1,\"280\":1}}],[\"安装与卸载插件\",{\"1\":{\"194\":1}}],[\"安装插件\",{\"0\":{\"133\":1,\"144\":1,\"150\":1},\"1\":{\"280\":1}}],[\"交互体验升级\",{\"0\":{\"194\":1}}],[\"了本次活动\",{\"1\":{\"193\":1,\"197\":1,\"201\":1}}],[\"了解机器人的基本构成有助于你更好地使用\",{\"1\":{\"224\":1}}],[\"了解使用不同语言编写聊天机器人时的常用实践\",{\"1\":{\"190\":1}}],[\"了解主流的\",{\"1\":{\"186\":1}}],[\"了解聊天机器人基本开发过程\",{\"1\":{\"183\":1}}],[\"了解\",{\"1\":{\"183\":2,\"184\":3,\"186\":2,\"187\":3,\"188\":3,\"190\":1,\"204\":1}}],[\"任选一个\",{\"1\":{\"192\":1}}],[\"任务\",{\"1\":{\"171\":1}}],[\"充分考虑同时兼容\",{\"1\":{\"191\":1,\"192\":1}}],[\"要做的是让\",{\"1\":{\"191\":1,\"192\":1}}],[\"要监听的文件列表\",{\"1\":{\"43\":1,\"51\":1}}],[\"某聊天平台的\",{\"1\":{\"191\":1,\"192\":1}}],[\"版本上运行所有数据库的测试\",{\"1\":{\"311\":1}}],[\"版本兼容\",{\"1\":{\"311\":1}}],[\"版本的兼容性\",{\"1\":{\"204\":1}}],[\"版本的发布\",{\"1\":{\"194\":1}}],[\"版本仍然与\",{\"1\":{\"190\":1}}],[\"版\",{\"0\":{\"191\":1}}],[\"核心\",{\"1\":{\"190\":1}}],[\"核心代码的平台通用性\",{\"1\":{\"187\":1,\"188\":1}}],[\"非常繁琐\",{\"1\":{\"300\":1}}],[\"非常相似的接口和使用方法\",{\"1\":{\"46\":1}}],[\"非官方接口特点\",{\"1\":{\"190\":1}}],[\"易于使用的同时易于实现的聊天机器人接口标准\",{\"1\":{\"190\":1}}],[\"易于维护\",{\"1\":{\"88\":1}}],[\"耦合的历史包袱\",{\"1\":{\"190\":1}}],[\"去掉无用\",{\"1\":{\"190\":1}}],[\"去掉与\",{\"1\":{\"190\":1}}],[\"去除事件消息首尾的\",{\"1\":{\"176\":1}}],[\"规则是\",{\"1\":{\"299\":1}}],[\"规则的\",{\"1\":{\"66\":1}}],[\"规范\",{\"1\":{\"187\":1,\"188\":1,\"198\":1,\"199\":1,\"200\":1}}],[\"代码符合\",{\"1\":{\"198\":1,\"199\":1,\"200\":1}}],[\"代码遵守项目\",{\"1\":{\"187\":1,\"188\":1}}],[\"代表该参数为一个可接受多个\",{\"1\":{\"250\":1}}],[\"代表使用内置驱动器\",{\"1\":{\"30\":1}}],[\"代表驱动器混入类名\",{\"1\":{\"30\":1}}],[\"代表驱动器类名\",{\"1\":{\"30\":1}}],[\"代表驱动器模块路径\",{\"1\":{\"30\":1}}],[\"获得了此\",{\"1\":{\"301\":1}}],[\"获得更多的跨平台支持\",{\"1\":{\"187\":1,\"188\":1}}],[\"获取测试用模拟客户端\",{\"1\":{\"294\":1}}],[\"获取测试对象\",{\"1\":{\"293\":1}}],[\"获取指定类型指定个数的消息段\",{\"1\":{\"242\":1}}],[\"获取消息纯文本\",{\"0\":{\"238\":1}}],[\"获取了命令的参数\",{\"1\":{\"231\":1}}],[\"获取用户\",{\"1\":{\"177\":1}}],[\"获取事件会话\",{\"1\":{\"177\":1}}],[\"获取事件消息的方法\",{\"1\":{\"177\":1}}],[\"获取事件通用信息\",{\"0\":{\"17\":1}}],[\"获取原始消息的消息内容\",{\"1\":{\"176\":1}}],[\"获取到模拟客户端后\",{\"1\":{\"293\":1}}],[\"获取到\",{\"1\":{\"173\":1}}],[\"获取插件配置文件\",{\"1\":{\"134\":1}}],[\"获取插件配置目录\",{\"1\":{\"134\":1}}],[\"获取插件数据文件\",{\"1\":{\"134\":1}}],[\"获取插件数据目录\",{\"1\":{\"134\":1}}],[\"获取插件缓存文件\",{\"1\":{\"134\":1}}],[\"获取插件缓存目录\",{\"1\":{\"134\":1}}],[\"获取插件信息\",{\"0\":{\"87\":1}}],[\"获取驱动器\",{\"0\":{\"31\":1}}],[\"获取\",{\"0\":{\"16\":1,\"99\":1,\"146\":1},\"1\":{\"233\":1}}],[\"获取已注册的适配器\",{\"0\":{\"15\":1}}],[\"希望能在\",{\"1\":{\"187\":1,\"188\":1}}],[\"钉钉协议\",{\"1\":{\"187\":1,\"188\":1}}],[\"已经注册在了\",{\"1\":{\"249\":1}}],[\"已经可以被称为一个插件了\",{\"1\":{\"212\":1}}],[\"已支持\",{\"1\":{\"187\":1,\"188\":1}}],[\"已有插件\",{\"0\":{\"90\":1}}],[\"机制\",{\"1\":{\"183\":1}}],[\"机器人启动前会自动运行此命令\",{\"1\":{\"286\":1}}],[\"机器人框架主体外\",{\"1\":{\"224\":1}}],[\"机器人框架主体\",{\"1\":{\"224\":1}}],[\"机器人的功能实现\",{\"1\":{\"224\":1}}],[\"机器人的构成\",{\"0\":{\"224\":1}}],[\"机器人的开发\",{\"1\":{\"187\":1}}],[\"机器人的昵称\",{\"1\":{\"26\":1,\"227\":1}}],[\"机器人平台相关的部分\",{\"1\":{\"183\":1}}],[\"机器人平台不再提供服务\",{\"1\":{\"183\":1}}],[\"机器人在实际应用中\",{\"1\":{\"124\":1}}],[\"机器人用户就会在私聊和群聊中分别收到不同的回复\",{\"1\":{\"123\":1}}],[\"机器人用户权限检查以及认证\",{\"1\":{\"7\":1}}],[\"机器人可以与用户进行多次交互\",{\"1\":{\"114\":1}}],[\"机器人\",{\"1\":{\"26\":1,\"227\":1}}],[\"技术要求\",{\"1\":{\"183\":1,\"184\":1,\"186\":1,\"187\":1,\"188\":1,\"190\":1,\"191\":1,\"192\":1,\"194\":1,\"195\":1,\"196\":1,\"198\":1,\"199\":1,\"200\":1,\"202\":1,\"203\":1,\"204\":1}}],[\"需先做简单调研\",{\"1\":{\"183\":1}}],[\"需要存储什么地方\",{\"1\":{\"299\":1}}],[\"需要利用到\",{\"1\":{\"265\":1}}],[\"需要私聊或\",{\"1\":{\"228\":1}}],[\"需要在框架初始化之后\",{\"1\":{\"215\":1}}],[\"需要在机器人入口文件提供\",{\"1\":{\"40\":1,\"48\":1}}],[\"需要手动测试每一个边际条件是非常痛苦的\",{\"1\":{\"186\":1}}],[\"需要计算适配器测试覆盖率\",{\"1\":{\"179\":1}}],[\"需要构造一个\",{\"1\":{\"175\":1}}],[\"需要我们自行获取信息以及发送信息\",{\"1\":{\"153\":1}}],[\"需要注意的是\",{\"1\":{\"0\":1,\"228\":1}}],[\"聊天机器人\",{\"1\":{\"199\":1}}],[\"聊天机器人框架\",{\"1\":{\"0\":1}}],[\"聊天\",{\"1\":{\"183\":1}}],[\"案例\",{\"1\":{\"183\":1}}],[\"图灵机器人\",{\"1\":{\"183\":1}}],[\"修复流程中存在的问题\",{\"1\":{\"203\":1}}],[\"修复\",{\"1\":{\"183\":1}}],[\"修改默认的命名空间\",{\"0\":{\"258\":1}}],[\"修改其中可能已经不可用的部分\",{\"1\":{\"183\":1}}],[\"修改\",{\"1\":{\"10\":1,\"183\":2,\"202\":1,\"214\":2}}],[\"产出要求\",{\"1\":{\"183\":1,\"184\":1,\"186\":1,\"187\":1,\"188\":1,\"190\":1,\"191\":1,\"192\":1,\"194\":1,\"195\":1,\"196\":1,\"198\":1,\"199\":1,\"200\":1,\"202\":1,\"203\":1,\"204\":1}}],[\"导致用户难以理解\",{\"1\":{\"196\":1}}],[\"导师\",{\"1\":{\"183\":1,\"184\":1,\"186\":1,\"187\":1,\"188\":1,\"190\":1,\"191\":1,\"192\":1,\"194\":1,\"195\":1,\"196\":1,\"198\":1,\"199\":1,\"200\":1,\"202\":1,\"203\":1,\"204\":1}}],[\"导入调度器\",{\"0\":{\"152\":1}}],[\"低代码框架的使用和开发\",{\"1\":{\"204\":1}}],[\"低代码框架开发\",{\"0\":{\"204\":1}}],[\"低代码开发框架\",{\"1\":{\"204\":1}}],[\"低\",{\"1\":{\"183\":1}}],[\"难度\",{\"1\":{\"183\":1,\"184\":1,\"186\":1,\"187\":1,\"188\":1,\"190\":1,\"191\":1,\"192\":1,\"194\":1,\"195\":1,\"196\":1,\"198\":1,\"199\":1,\"200\":1,\"202\":1,\"203\":1,\"204\":1}}],[\"难免会需要存储一些持久化数据\",{\"1\":{\"132\":1}}],[\"示例后\",{\"1\":{\"297\":1}}],[\"示例\",{\"0\":{\"279\":1,\"298\":1}}],[\"示例中可以传入\",{\"1\":{\"249\":1}}],[\"示例是否有已经过时\",{\"1\":{\"183\":1}}],[\"示例做一次全面检查\",{\"1\":{\"183\":1}}],[\"示例插件\",{\"1\":{\"86\":1}}],[\"目前采用了\",{\"1\":{\"203\":1}}],[\"目前官网组件库已产生了较大的版本落后\",{\"1\":{\"202\":1}}],[\"目前已有\",{\"1\":{\"199\":1}}],[\"目前提供了开箱即用的命令行脚手架来帮助初次使用的用户更快的上手编写应用\",{\"1\":{\"198\":1}}],[\"目前文档对于用户而言过于费解\",{\"1\":{\"196\":1}}],[\"目前最常用的\",{\"1\":{\"191\":1,\"192\":1}}],[\"目前的\",{\"1\":{\"190\":1}}],[\"目前\",{\"1\":{\"183\":1,\"184\":1,\"187\":1,\"188\":1,\"200\":1,\"226\":1}}],[\"目录\",{\"1\":{\"300\":1}}],[\"目录下\",{\"1\":{\"216\":1,\"217\":1}}],[\"目录下创建一个名为\",{\"1\":{\"214\":1}}],[\"目录下的所有插件\",{\"1\":{\"90\":1}}],[\"目录中编写实际代码\",{\"1\":{\"164\":1}}],[\"最终用户提供消息模板时\",{\"1\":{\"244\":1}}],[\"最初基于的\",{\"1\":{\"183\":1}}],[\"最多只支持\",{\"1\":{\"40\":1}}],[\"指的是\",{\"1\":{\"301\":1}}],[\"指定类型消息段数量\",{\"1\":{\"242\":1}}],[\"指定类型首个消息段索引\",{\"1\":{\"242\":1}}],[\"指南\",{\"0\":{\"183\":1},\"1\":{\"183\":2}}],[\"指通过拦截软件模块间的函数调用\",{\"1\":{\"101\":1}}],[\"联系我们\",{\"1\":{\"181\":1,\"193\":1,\"197\":1,\"201\":1}}],[\"社区中承担着重要的角色\",{\"1\":{\"203\":1}}],[\"社区自动化工作流管理优化\",{\"0\":{\"203\":1}}],[\"社区有幸作为开源社区\",{\"1\":{\"193\":1,\"197\":1,\"201\":1}}],[\"社区有幸作为开源社区参与了本次活动\",{\"1\":{\"181\":1}}],[\"社区主办的一项面向高校学生的暑期活动\",{\"1\":{\"193\":1,\"197\":1}}],[\"社区反馈有更多的平台需求\",{\"1\":{\"187\":1,\"188\":1}}],[\"社区共同举办的一项面向高校学生的暑期活动\",{\"1\":{\"181\":1}}],[\"官网目前采用基于\",{\"1\":{\"202\":1}}],[\"官网组件库更新与优化\",{\"0\":{\"202\":1}}],[\"官网\",{\"1\":{\"181\":1,\"193\":1,\"197\":1,\"201\":1}}],[\"官方文档\",{\"1\":{\"151\":1,\"153\":2}}],[\"官方支持的适配器和社区贡献的适配器均可在商店中查看\",{\"1\":{\"27\":1}}],[\"报名方式\",{\"1\":{\"181\":1,\"193\":1,\"197\":1,\"201\":1}}],[\"促进优秀开源软件社区的蓬勃发展\",{\"1\":{\"181\":1,\"193\":1,\"197\":1,\"201\":1}}],[\"暑期\",{\"0\":{\"181\":1,\"193\":1,\"197\":1,\"201\":1},\"1\":{\"181\":1,\"193\":1,\"197\":1,\"201\":1}}],[\"填写适配器相关信息并提交\",{\"1\":{\"180\":1}}],[\"商店\",{\"1\":{\"180\":1}}],[\"后续的解析结果会覆盖之前的值\",{\"1\":{\"253\":1}}],[\"后续工作\",{\"0\":{\"180\":1}}],[\"后者直接使用\",{\"1\":{\"94\":1}}],[\"后者\",{\"1\":{\"40\":1}}],[\"内插件信息\",{\"1\":{\"203\":1}}],[\"内容完整\",{\"1\":{\"196\":1}}],[\"内添加如下代码\",{\"1\":{\"179\":1}}],[\"内置选项\",{\"1\":{\"261\":1}}],[\"内置插件\",{\"1\":{\"208\":1,\"214\":1,\"221\":1}}],[\"内置响应规则列表可以参考事件响应器进阶\",{\"1\":{\"129\":1}}],[\"内置响应规则\",{\"0\":{\"70\":1,\"129\":1}}],[\"内置了一些常用的响应规则\",{\"1\":{\"129\":1}}],[\"内置了四种常用事件类型\",{\"1\":{\"62\":1}}],[\"内置了多个驱动器适配\",{\"1\":{\"30\":1}}],[\"内置的事件响应器中\",{\"1\":{\"66\":1}}],[\"内置的响应规则\",{\"1\":{\"60\":1}}],[\"内置的空驱动器\",{\"1\":{\"33\":1}}],[\"内置驱动器\",{\"0\":{\"32\":1}}],[\"申请添加好友事件\",{\"1\":{\"177\":1}}],[\"加载传入插件列表中的所有内置插件\",{\"1\":{\"222\":1}}],[\"加载传入插件目录中的所有插件\",{\"1\":{\"217\":1}}],[\"加载一个内置插件\",{\"1\":{\"221\":1}}],[\"加载所有传入的插件模块名称\",{\"1\":{\"218\":1}}],[\"加载项目插件\",{\"1\":{\"216\":1}}],[\"加载第三方插件\",{\"1\":{\"216\":1}}],[\"加载的插件模块名称\",{\"1\":{\"215\":1}}],[\"加载插件的方式有多种\",{\"1\":{\"215\":1}}],[\"加载插件的方法来加载子插件\",{\"1\":{\"88\":1}}],[\"加载插件是在机器人入口文件中完成的\",{\"1\":{\"215\":1}}],[\"加载插件等工作\",{\"1\":{\"208\":1}}],[\"加载插件\",{\"0\":{\"215\":1},\"1\":{\"196\":1,\"215\":1}}],[\"加入房间事件\",{\"1\":{\"177\":1}}],[\"心跳时间\",{\"1\":{\"177\":1}}],[\"判断消息段是否为纯文本\",{\"1\":{\"238\":1}}],[\"判断为\",{\"1\":{\"227\":1}}],[\"判断该消息段是否为纯文本\",{\"1\":{\"178\":1}}],[\"判断事件是否和机器人有关\",{\"1\":{\"177\":1}}],[\"判断用户配置的driver类型是否符合适配器要求\",{\"1\":{\"171\":1}}],[\"回复事件的方法\",{\"1\":{\"176\":1}}],[\"协议\",{\"1\":{\"176\":1}}],[\"协议适配器来演示消息序列的使用方法\",{\"1\":{\"233\":1}}],[\"协议适配器会将\",{\"1\":{\"227\":1}}],[\"协议适配器会将事件合理地分类至这四种类型中\",{\"1\":{\"62\":1}}],[\"协议适配器的消息事件提供的发送时间\",{\"1\":{\"122\":1}}],[\"协议适配器为例\",{\"1\":{\"122\":1,\"123\":1}}],[\"协议适配器自定义\",{\"1\":{\"29\":2}}],[\"飞书是目前企业用户广泛使用的即时聊天和协作软件\",{\"1\":{\"188\":1}}],[\"飞书适配器\",{\"0\":{\"188\":1}}],[\"飞书\",{\"1\":{\"175\":1,\"199\":1}}],[\"采用了扁平化的消息序列形式\",{\"1\":{\"229\":1}}],[\"采用了一套自行定义的依赖注入系统\",{\"1\":{\"6\":1}}],[\"采用\",{\"1\":{\"175\":2}}],[\"给予日志提示\",{\"1\":{\"175\":1}}],[\"给出日志提示\",{\"1\":{\"174\":1}}],[\"让我们了解下示例中出现的\",{\"1\":{\"282\":1}}],[\"让有更复杂需求的用户\",{\"1\":{\"196\":1}}],[\"让\",{\"1\":{\"174\":1,\"176\":1}}],[\"无需手动迁移\",{\"1\":{\"300\":1}}],[\"无需平台适配接入即可对机器人进行测试\",{\"1\":{\"195\":1}}],[\"无\",{\"1\":{\"253\":3}}],[\"无名的纯文字头\",{\"1\":{\"246\":1}}],[\"无名的元素类头\",{\"1\":{\"246\":1}}],[\"无前缀的类型头\",{\"1\":{\"246\":1}}],[\"无前缀的正则头\",{\"1\":{\"246\":1}}],[\"无前缀的元素头\",{\"1\":{\"246\":1}}],[\"无前缀的纯文字头\",{\"1\":{\"246\":1}}],[\"无论是接收还是发送的消息\",{\"1\":{\"229\":1}}],[\"无论是在开发还是在生产环境中\",{\"1\":{\"117\":1}}],[\"无法回退\",{\"1\":{\"305\":1}}],[\"无法将其转换为插件而出现意料之外的情况\",{\"1\":{\"215\":1}}],[\"无法正常解析为具体\",{\"1\":{\"174\":1}}],[\"做一层异常处理\",{\"1\":{\"174\":1}}],[\"根据需求实现\",{\"1\":{\"202\":1}}],[\"根据需要\",{\"1\":{\"176\":1}}],[\"根据事件具体实现\",{\"1\":{\"177\":3}}],[\"根据平台实现\",{\"1\":{\"176\":1}}],[\"根据平台事件的特性\",{\"1\":{\"174\":1}}],[\"根据会话状态\",{\"1\":{\"115\":1}}],[\"且每一个插件只能被加载一次\",{\"1\":{\"215\":1}}],[\"且返回值类型为\",{\"1\":{\"172\":1}}],[\"且打印的异常堆栈信息和\",{\"1\":{\"40\":1}}],[\"反向\",{\"1\":{\"172\":1}}],[\"尝试重连\",{\"1\":{\"171\":1}}],[\"鉴权请求头\",{\"1\":{\"171\":1}}],[\"建立了\",{\"1\":{\"173\":1}}],[\"建立服务端路由\",{\"1\":{\"172\":1}}],[\"建立\",{\"0\":{\"173\":1},\"1\":{\"171\":1,\"173\":1}}],[\"存储机器人启动所需的配置\",{\"1\":{\"205\":1}}],[\"存储\",{\"1\":{\"171\":1}}],[\"读取适配器所需的配置项\",{\"1\":{\"169\":1}}],[\"读取文件内容\",{\"1\":{\"134\":1}}],[\"输入适配器名称以及存储位置\",{\"1\":{\"165\":1}}],[\"输出格式为\",{\"1\":{\"283\":1}}],[\"输出的日志等级\",{\"1\":{\"156\":1}}],[\"输出目录\",{\"1\":{\"89\":1,\"214\":1}}],[\"按照指引\",{\"1\":{\"165\":1}}],[\"保证实际可用性即可\",{\"1\":{\"164\":1}}],[\"组合时\",{\"1\":{\"250\":1}}],[\"组合而成\",{\"1\":{\"23\":1}}],[\"组件库及相关插件\",{\"1\":{\"202\":1}}],[\"组件库及\",{\"1\":{\"202\":1}}],[\"组成部分\",{\"0\":{\"166\":1}}],[\"组织结构\",{\"0\":{\"164\":1}}],[\"四个部分组成\",{\"1\":{\"163\":1}}],[\"作用域与会话相同\",{\"1\":{\"301\":1}}],[\"作用域为当前事件\",{\"1\":{\"301\":1}}],[\"作出的贡献\",{\"1\":{\"162\":1}}],[\"作为快捷指令的配置\",{\"1\":{\"259\":1}}],[\"作为解析操作\",{\"1\":{\"253\":1}}],[\"作为唯一的前置序列与命令嵌套替换\",{\"1\":{\"252\":1}}],[\"作为\",{\"1\":{\"249\":1,\"293\":1,\"294\":1}}],[\"作为消息\",{\"1\":{\"234\":1}}],[\"作为纯文本消息回复\",{\"1\":{\"232\":1}}],[\"作为特殊消息载体的存在\",{\"1\":{\"232\":1}}],[\"作为众多用户期待的平台适配之一\",{\"1\":{\"199\":1}}],[\"作为一个跨平台聊天机器人框架\",{\"1\":{\"199\":1}}],[\"作为项目名\",{\"1\":{\"164\":1}}],[\"作为前缀\",{\"1\":{\"157\":1}}],[\"作为插件\",{\"1\":{\"152\":1}}],[\"作为命令解析器\",{\"1\":{\"84\":1}}],[\"作为最高优先级同样存储于该字典中\",{\"1\":{\"57\":1}}],[\"感谢以下开发者对\",{\"1\":{\"162\":1}}],[\"鸣谢\",{\"0\":{\"162\":1}}],[\"贡献指南\",{\"0\":{\"159\":1}}],[\"qqguild\",{\"1\":{\"172\":1,\"178\":1}}],[\"qq\",{\"1\":{\"158\":2,\"175\":1,\"183\":2,\"190\":4,\"193\":1,\"199\":1}}],[\"query\",{\"1\":{\"254\":1,\"260\":1,\"262\":2,\"265\":1}}],[\"question\",{\"1\":{\"158\":1}}],[\"qux\",{\"1\":{\"249\":2,\"252\":2}}],[\"quart\",{\"0\":{\"46\":1,\"47\":1},\"1\":{\"46\":2,\"53\":1}}],[\"页面\",{\"1\":{\"158\":1}}],[\"点击发布适配器按钮\",{\"1\":{\"180\":1}}],[\"点击下方链接直达\",{\"1\":{\"158\":2}}],[\"点击下方链接前往\",{\"1\":{\"158\":1}}],[\"点击左下角\",{\"1\":{\"11\":1}}],[\"若\",{\"1\":{\"261\":2}}],[\"若快捷指令为\",{\"1\":{\"261\":1}}],[\"若匹配成功则会传入参数\",{\"1\":{\"261\":1}}],[\"若为\",{\"1\":{\"255\":1}}],[\"若传入为\",{\"1\":{\"252\":1}}],[\"若没有某个\",{\"1\":{\"249\":1}}],[\"若需要\",{\"1\":{\"248\":1}}],[\"若不启动需要自行调用\",{\"1\":{\"155\":1}}],[\"若插件可以保证兼容所有适配器\",{\"1\":{\"86\":1}}],[\"关于具体的活动规划\",{\"1\":{\"181\":1,\"193\":1,\"197\":1,\"201\":1}}],[\"关于适配器测试相关内容在这里不再展开\",{\"1\":{\"179\":1}}],[\"关于\",{\"1\":{\"153\":1}}],[\"关闭数据库连接\",{\"1\":{\"104\":1}}],[\"keep\",{\"1\":{\"255\":1}}],[\"key=true\",{\"1\":{\"299\":2,\"300\":1,\"302\":1,\"305\":1,\"306\":1,\"308\":1}}],[\"key1\",{\"1\":{\"247\":1}}],[\"keys\",{\"1\":{\"146\":1,\"289\":1}}],[\"key\",{\"0\":{\"248\":1},\"1\":{\"130\":5,\"247\":4,\"248\":5,\"249\":3,\"250\":1,\"261\":1,\"299\":1,\"300\":3}}],[\"keywordvar\",{\"0\":{\"250\":1},\"1\":{\"250\":6}}],[\"keyword\",{\"1\":{\"74\":5,\"247\":2,\"248\":1,\"250\":1}}],[\"koishi\",{\"1\":{\"198\":1}}],[\"kotlin\",{\"1\":{\"191\":1,\"192\":2}}],[\"kwargs\",{\"1\":{\"169\":2,\"171\":2,\"172\":2,\"176\":2,\"250\":1}}],[\"kwargs=\",{\"1\":{\"153\":2}}],[\"调试类\",{\"1\":{\"254\":1}}],[\"调研各聊天机器人平台的官方\",{\"1\":{\"190\":1}}],[\"调研飞书机器人\",{\"1\":{\"188\":1}}],[\"调研\",{\"1\":{\"187\":1,\"199\":1}}],[\"调研现有的\",{\"1\":{\"186\":1}}],[\"调研市面上常见的\",{\"1\":{\"184\":1}}],[\"调用后根据不同的参数返回一个\",{\"1\":{\"226\":1}}],[\"调用发送消息接口进行发送\",{\"1\":{\"176\":1}}],[\"调用\",{\"1\":{\"175\":1,\"176\":2}}],[\"调用平台\",{\"0\":{\"175\":1},\"1\":{\"175\":1,\"176\":1,\"196\":1}}],[\"调用平台接口是指将机器人插件调用平台接口的数据转换为平台指定的格式\",{\"1\":{\"13\":1}}],[\"调用接口\",{\"1\":{\"169\":1}}],[\"调度器来创建定时任务\",{\"1\":{\"152\":1}}],[\"留空即会停用插件\",{\"1\":{\"147\":1}}],[\"甚至是由于第三方服务的错误\",{\"1\":{\"143\":1}}],[\"71a72119935f\",{\"1\":{\"283\":1}}],[\"793\",{\"1\":{\"196\":1}}],[\"737131827\",{\"1\":{\"193\":1}}],[\"7\",{\"1\":{\"138\":1,\"139\":1,\"317\":1}}],[\"xyz\",{\"1\":{\"262\":1}}],[\"x\",{\"1\":{\"249\":8,\"261\":8}}],[\"xxx键对应的值\",{\"1\":{\"254\":2}}],[\"xxxxxxxxxxxx\",{\"1\":{\"300\":4}}],[\"xxxx\",{\"1\":{\"249\":1}}],[\"xxx\",{\"1\":{\"168\":2,\"172\":1,\"246\":1,\"249\":10,\"254\":3,\"258\":1,\"261\":1}}],[\"xp\",{\"1\":{\"138\":1,\"139\":1}}],[\"xdg\",{\"1\":{\"137\":1}}],[\"数据库作用域会话\",{\"1\":{\"306\":1}}],[\"数据库会话\",{\"0\":{\"304\":1}}],[\"数据库模式会自动与模型定义同步\",{\"1\":{\"300\":1}}],[\"数据库的模式就会回到原来的状态\",{\"1\":{\"300\":1}}],[\"数据库\",{\"1\":{\"289\":2,\"317\":1}}],[\"数据库驱动和后端\",{\"1\":{\"288\":1}}],[\"数据库支持插件\",{\"0\":{\"200\":1}}],[\"数据存放散乱等现象\",{\"1\":{\"200\":1}}],[\"数据存储\",{\"0\":{\"132\":1}}],[\"数据存储插件等\",{\"1\":{\"91\":1}}],[\"数据目录为\",{\"1\":{\"138\":1}}],[\"否则\",{\"1\":{\"137\":1,\"138\":1,\"139\":1}}],[\"否则会产生异常\",{\"1\":{\"24\":1}}],[\"缓存目录为\",{\"1\":{\"137\":1}}],[\"子命令为install且子命令接受一个\",{\"1\":{\"245\":1}}],[\"子插件的存储目录将位于父插件存储目录下\",{\"1\":{\"134\":1}}],[\"子类型则根据不同的平台进行了实现\",{\"1\":{\"122\":1}}],[\"子类\",{\"1\":{\"30\":2}}],[\"路径以\",{\"1\":{\"273\":1}}],[\"路径\",{\"1\":{\"134\":1}}],[\"路由地址\",{\"1\":{\"172\":2}}],[\"路由处理函数\",{\"1\":{\"96\":1,\"97\":1,\"172\":2}}],[\"路由名称\",{\"1\":{\"96\":1,\"97\":1,\"172\":2}}],[\"路由路径\",{\"1\":{\"96\":1,\"97\":1}}],[\"路由\",{\"0\":{\"96\":1,\"97\":1},\"1\":{\"100\":1,\"172\":2}}],[\"群\",{\"1\":{\"158\":1,\"193\":1}}],[\"群组的信息等\",{\"1\":{\"132\":1}}],[\"群聊消息\",{\"1\":{\"123\":1}}],[\"至此\",{\"1\":{\"131\":1}}],[\"密码为\",{\"1\":{\"130\":1}}],[\"密码正确\",{\"1\":{\"130\":1}}],[\"密码错误\",{\"1\":{\"130\":1}}],[\"密码错误次数过多\",{\"1\":{\"130\":1}}],[\"本体\",{\"0\":{\"245\":1}}],[\"本章节将介绍\",{\"1\":{\"224\":1}}],[\"本章节的代码中提到的\",{\"1\":{\"166\":1}}],[\"本地插件的路径应该为相对机器人\",{\"1\":{\"216\":1}}],[\"本地插件\",{\"1\":{\"208\":1,\"214\":1}}],[\"本项目将基于\",{\"1\":{\"204\":1}}],[\"本项目希望针对以上问题与不足的地方进行修复与优化\",{\"1\":{\"203\":1}}],[\"本项目希望在跟进框架新版本的基础上\",{\"1\":{\"202\":1}}],[\"本项目旨在优化文档内容\",{\"1\":{\"196\":1}}],[\"本项目旨在重新设计\",{\"1\":{\"194\":1}}],[\"本身并无显著区别\",{\"1\":{\"151\":1}}],[\"本身会在会话状态中存储一些信息\",{\"1\":{\"130\":1}}],[\"本质上是对\",{\"1\":{\"151\":1}}],[\"本驱动器仅支持\",{\"1\":{\"54\":1,\"55\":1}}],[\"主机名\",{\"1\":{\"207\":1}}],[\"主动使用响应规则\",{\"0\":{\"128\":1}}],[\"主要影响以下几个层面\",{\"1\":{\"310\":1}}],[\"主要功能代码\",{\"1\":{\"194\":1}}],[\"主要包括客户端和服务端两种类型\",{\"1\":{\"292\":1}}],[\"主要包括\",{\"1\":{\"194\":1,\"196\":2}}],[\"主要分为客户端和服务端两种类型\",{\"1\":{\"170\":1}}],[\"主要驱动器可以为客户端或服务端类型\",{\"1\":{\"30\":1}}],[\"主要负责数据收发\",{\"1\":{\"28\":1}}],[\"值\",{\"1\":{\"127\":2,\"146\":1}}],[\"运算符或消息序列的\",{\"1\":{\"241\":1}}],[\"运算符比较是否相同\",{\"1\":{\"240\":1}}],[\"运算符合并\",{\"1\":{\"127\":1}}],[\"运算构造\",{\"0\":{\"236\":1}}],[\"运行之前进行\",{\"1\":{\"215\":1}}],[\"运行机器人\",{\"0\":{\"209\":1}}],[\"运行所需要的配置项\",{\"1\":{\"207\":1}}],[\"运行项目\",{\"1\":{\"194\":1}}],[\"运行中产生的异常\",{\"1\":{\"111\":1}}],[\"运行事件响应器后运行\",{\"1\":{\"111\":1}}],[\"运行事件响应器前运行\",{\"1\":{\"110\":1}}],[\"运行后处理\",{\"0\":{\"111\":1}}],[\"运行预处理\",{\"0\":{\"110\":1}}],[\"运行时\",{\"1\":{\"40\":1}}],[\"天气\",{\"1\":{\"125\":1,\"126\":1,\"127\":1,\"227\":4,\"228\":2,\"301\":1}}],[\"每一个模型必须有至少一个主键\",{\"1\":{\"299\":1}}],[\"每次启动机器人时\",{\"1\":{\"300\":1}}],[\"每次安装新的插件或更新插件版本后\",{\"1\":{\"284\":1}}],[\"每次需要等待用户事件时\",{\"1\":{\"114\":1}}],[\"每个解析结果会追加到列表中\",{\"1\":{\"253\":1}}],[\"每个\",{\"1\":{\"124\":1}}],[\"往往会接收到多种多样的事件类型\",{\"1\":{\"124\":1}}],[\"三个部分\",{\"1\":{\"265\":1}}],[\"三个命令的响应规则\",{\"1\":{\"228\":1}}],[\"三个命令\",{\"1\":{\"81\":1}}],[\"三者的参数类型注解具有最高检查优先级\",{\"1\":{\"123\":1}}],[\"私聊消息\",{\"1\":{\"123\":1}}],[\"私聊和群聊消息事件的规则\",{\"1\":{\"79\":1}}],[\"──nb\",{\"1\":{\"194\":1}}],[\"──\",{\"1\":{\"123\":1}}],[\"针对重要开源软件的开发与维护提供项目开发任务\",{\"1\":{\"201\":1}}],[\"针对某聊天平台的对接代码\",{\"1\":{\"191\":1,\"192\":1}}],[\"针对这些问题\",{\"1\":{\"123\":1}}],[\"针对其本身运行过程的钩子函数\",{\"1\":{\"102\":1}}],[\"常用于事件响应器和有与响应逻辑相关的数据库操作逻辑的插件\",{\"1\":{\"306\":1}}],[\"常用于有独立的数据库操作逻辑的插件\",{\"1\":{\"305\":1}}],[\"常用于卸载插件后删除其数据\",{\"1\":{\"285\":1}}],[\"常用的方法有\",{\"1\":{\"134\":1}}],[\"常常会遇到这样一个问题\",{\"1\":{\"123\":1}}],[\"常见的驱动器配置如下\",{\"1\":{\"30\":1}}],[\"重复的测试不可靠\",{\"1\":{\"311\":1}}],[\"重复加载将会导致异常\",{\"1\":{\"215\":1}}],[\"重构现有工作流处理结构\",{\"1\":{\"203\":1}}],[\"重构\",{\"1\":{\"202\":1}}],[\"重连间隔\",{\"1\":{\"171\":1}}],[\"重定向\",{\"0\":{\"120\":1}}],[\"重载机制对所有的参数类型注解都有效\",{\"1\":{\"123\":1}}],[\"重载\",{\"0\":{\"123\":1},\"1\":{\"123\":1,\"310\":1}}],[\"重载延迟\",{\"1\":{\"42\":1,\"50\":1}}],[\"重载监控文件夹列表\",{\"1\":{\"41\":1,\"49\":1}}],[\"移除\",{\"1\":{\"119\":1}}],[\"模型定义\",{\"0\":{\"299\":1}}],[\"模型继承自\",{\"1\":{\"174\":1}}],[\"模拟通信\",{\"1\":{\"294\":1}}],[\"模拟网络通信可以帮助我们更加接近实际机器人应用场景\",{\"1\":{\"292\":1}}],[\"模拟网络通信\",{\"0\":{\"292\":1}}],[\"模糊匹配会应用在任意需要进行名称判断的地方\",{\"1\":{\"263\":1}}],[\"模糊匹配\",{\"0\":{\"263\":1}}],[\"模糊匹配阈值\",{\"1\":{\"255\":1}}],[\"模板创建了项目\",{\"1\":{\"214\":1}}],[\"模块直接导入使用\",{\"1\":{\"226\":1}}],[\"模块\",{\"1\":{\"191\":1,\"192\":1}}],[\"模块导入以使用\",{\"1\":{\"119\":1}}],[\"模式安装的适配器代码\",{\"1\":{\"179\":1}}],[\"模式才会显示\",{\"1\":{\"156\":1}}],[\"模式来确保匹配开头\",{\"1\":{\"77\":1}}],[\"05\",{\"1\":{\"300\":4}}],[\"04\",{\"1\":{\"300\":4}}],[\"02\",{\"1\":{\"300\":4}}],[\"01\",{\"1\":{\"300\":4}}],[\"0x\",{\"1\":{\"249\":1}}],[\"0\",{\"1\":{\"118\":1,\"153\":1,\"207\":3,\"242\":4,\"249\":1,\"260\":1,\"261\":2,\"288\":1,\"302\":2,\"310\":6}}],[\"级别的日志\",{\"1\":{\"118\":1}}],[\"控制台中仅会输出大于等于\",{\"1\":{\"118\":1}}],[\"库来进行日志记录\",{\"1\":{\"117\":1}}],[\"分析类\",{\"1\":{\"254\":1}}],[\"分析等\",{\"1\":{\"117\":1}}],[\"分为三类\",{\"1\":{\"253\":1}}],[\"分割\",{\"1\":{\"248\":1}}],[\"分隔\",{\"1\":{\"248\":1,\"273\":1}}],[\"分离\",{\"1\":{\"190\":1}}],[\"分别对应驱动框架应用和\",{\"1\":{\"99\":1}}],[\"分别对应元事件\",{\"1\":{\"62\":1}}],[\"分别用于定义\",{\"1\":{\"95\":1}}],[\"分别是接收事件和调用平台接口\",{\"1\":{\"13\":1}}],[\"排查问题等\",{\"1\":{\"117\":1}}],[\"日志内容以及可选的异常\",{\"1\":{\"167\":1}}],[\"日志等级\",{\"1\":{\"167\":1}}],[\"日志重定向到\",{\"1\":{\"120\":1}}],[\"日志可以通过配置\",{\"1\":{\"118\":1}}],[\"日志都是一个重要的功能\",{\"1\":{\"117\":1}}],[\"日志\",{\"0\":{\"117\":1,\"120\":1},\"1\":{\"118\":1,\"156\":1}}],[\"权限限制\",{\"1\":{\"203\":1}}],[\"权限\",{\"1\":{\"116\":1}}],[\"权限控制\",{\"1\":{\"62\":1,\"196\":1}}],[\"权限控制等功能\",{\"1\":{\"60\":1}}],[\"上海\",{\"1\":{\"301\":1}}],[\"上下文可以在\",{\"1\":{\"266\":1}}],[\"上下文插值\",{\"0\":{\"266\":1}}],[\"上\",{\"1\":{\"257\":1}}],[\"上述的项目结构仅作推荐\",{\"1\":{\"164\":1}}],[\"上述权限更新函数是默认的权限更新函数\",{\"1\":{\"116\":1}}],[\"上报地址以及对上报数据处理的回调函数\",{\"1\":{\"29\":1}}],[\"忽略不符合其参数类型注解的情况\",{\"1\":{\"123\":1}}],[\"忽略本次运行\",{\"1\":{\"110\":1}}],[\"忽略该事件\",{\"1\":{\"108\":1}}],[\"断开了\",{\"1\":{\"173\":1}}],[\"断开\",{\"1\":{\"171\":1,\"173\":1}}],[\"断开连接\",{\"1\":{\"171\":1}}],[\"断开与\",{\"1\":{\"106\":1}}],[\"断开处理\",{\"0\":{\"106\":1}}],[\"终止时运行\",{\"1\":{\"104\":1}}],[\"终止处理\",{\"0\":{\"104\":1}}],[\"很多时候\",{\"1\":{\"103\":1}}],[\"处理消息\",{\"0\":{\"229\":1}}],[\"处理消息事件\",{\"1\":{\"196\":1}}],[\"处理函数\",{\"1\":{\"172\":2}}],[\"处理\",{\"1\":{\"120\":1,\"171\":1}}],[\"处理事件完成后运行\",{\"1\":{\"109\":1}}],[\"处理事件的核心\",{\"1\":{\"57\":1}}],[\"处理被拦截的函数调用\",{\"1\":{\"101\":1}}],[\"挂钩\",{\"1\":{\"101\":1}}],[\"钩子编程\",{\"1\":{\"101\":1}}],[\"钩子函数\",{\"0\":{\"101\":1},\"1\":{\"196\":1}}],[\"演示如何添加路由规则\",{\"1\":{\"100\":1}}],[\"发生了什么\",{\"1\":{\"300\":1}}],[\"发布插件等\",{\"1\":{\"196\":1}}],[\"发布插件必填\",{\"1\":{\"86\":2}}],[\"发送了一个模拟\",{\"1\":{\"293\":1}}],[\"发送\",{\"1\":{\"175\":2}}],[\"发送请求\",{\"1\":{\"175\":1}}],[\"发送所有接收到的数据\",{\"1\":{\"97\":1}}],[\"返回选项\",{\"1\":{\"254\":4}}],[\"返回字典中\",{\"1\":{\"254\":1}}],[\"返回对应的属性\",{\"1\":{\"254\":1}}],[\"返回该消息段的纯文本表现形式\",{\"1\":{\"178\":1}}],[\"返回适配器的\",{\"1\":{\"178\":2}}],[\"返回事件消息对应的\",{\"1\":{\"177\":1}}],[\"返回事件的描述\",{\"1\":{\"177\":1}}],[\"返回事件的名称\",{\"1\":{\"177\":1}}],[\"返回结果\",{\"1\":{\"175\":1}}],[\"返回机器人用户对应的平台\",{\"1\":{\"122\":1}}],[\"返回\",{\"1\":{\"96\":1,\"254\":2}}],[\"兼容层定义了两个数据类\",{\"1\":{\"95\":1}}],[\"兼容同步\",{\"1\":{\"0\":1}}],[\"更换默认的命名空间\",{\"1\":{\"258\":1}}],[\"更佳\",{\"1\":{\"183\":1}}],[\"更新\",{\"0\":{\"183\":1}}],[\"更新事件触发权限\",{\"0\":{\"116\":1}}],[\"更新事件响应器类型\",{\"0\":{\"115\":1}}],[\"更新事件响应器类型和更新事件触发权限\",{\"1\":{\"114\":1}}],[\"更深入地了解\",{\"1\":{\"131\":1}}],[\"更自由\",{\"1\":{\"94\":1}}],[\"更多通信交互方式可以参考以下适配器\",{\"1\":{\"172\":1}}],[\"更多的使用方面的功能请参考apscheduler\",{\"1\":{\"151\":1}}],[\"更多的基类抽象方法可以在使用适配器中查看\",{\"1\":{\"122\":1}}],[\"更多日志处理器的使用方法请参考\",{\"1\":{\"119\":1}}],[\"更多日志记录方法请参考\",{\"1\":{\"118\":1}}],[\"更多关于\",{\"1\":{\"76\":1}}],[\"更多\",{\"0\":{\"27\":1}}],[\"前缀中的正则会被转义\",{\"1\":{\"246\":1}}],[\"前缀\",{\"1\":{\"246\":1}}],[\"前往\",{\"1\":{\"146\":1,\"158\":1}}],[\"前往编辑\",{\"1\":{\"11\":1}}],[\"前者可以在各种服务端型驱动器下运行\",{\"1\":{\"94\":1}}],[\"直接修改默认配置\",{\"1\":{\"258\":1}}],[\"直接构造\",{\"0\":{\"235\":1}}],[\"直接调用\",{\"1\":{\"195\":1}}],[\"直接向\",{\"1\":{\"94\":1}}],[\"直接使用\",{\"1\":{\"92\":1}}],[\"直接使用辅助函数新建一个响应器\",{\"1\":{\"76\":1}}],[\"详情请参考拼接消息\",{\"1\":{\"236\":1}}],[\"详情请阅读最佳实践中的\",{\"1\":{\"84\":1}}],[\"详情可以参考选择驱动器\",{\"1\":{\"94\":1}}],[\"接下来\",{\"1\":{\"282\":1}}],[\"接口\",{\"1\":{\"191\":1,\"192\":1}}],[\"接口标准\",{\"0\":{\"190\":1}}],[\"接口也转型且改名为\",{\"1\":{\"183\":1}}],[\"接口地址\",{\"1\":{\"175\":1}}],[\"接口等功能\",{\"1\":{\"94\":1}}],[\"接收并返回结果\",{\"1\":{\"175\":1}}],[\"接收到的事件数据\",{\"1\":{\"174\":1}}],[\"接收到新的事件时运行\",{\"1\":{\"108\":1}}],[\"接收的方法\",{\"1\":{\"172\":1}}],[\"接收\",{\"1\":{\"29\":1}}],[\"接收事件是指将驱动器收到的事件消息转换为\",{\"1\":{\"13\":1}}],[\"从字典数组构造\",{\"0\":{\"237\":1}}],[\"从而提升用户体验并有助于\",{\"1\":{\"204\":1}}],[\"从而方便其他开发者们使用对应语言快速编写具体的\",{\"1\":{\"192\":1}}],[\"从而方便其他开发者们使用\",{\"1\":{\"191\":1}}],[\"从而实现自定义的\",{\"1\":{\"94\":1}}],[\"从默认的\",{\"1\":{\"40\":1}}],[\"会通过\",{\"1\":{\"293\":1}}],[\"会根据传入的\",{\"1\":{\"254\":1}}],[\"会返回由\",{\"1\":{\"254\":1}}],[\"会返回\",{\"1\":{\"249\":2}}],[\"会自动为模型生成一个表名\",{\"1\":{\"299\":1}}],[\"会自动将默认值变成\",{\"1\":{\"253\":1}}],[\"会自动将默认值变成列表\",{\"1\":{\"253\":1}}],[\"会自动将默认值设为\",{\"1\":{\"249\":1}}],[\"会自动检测入口文件\",{\"1\":{\"209\":1}}],[\"会将\",{\"1\":{\"246\":1}}],[\"会将命令头匹配到的值转为对应的类型\",{\"1\":{\"246\":1}}],[\"会将消息转换为消息序列\",{\"1\":{\"233\":1}}],[\"会匹配任意的值\",{\"1\":{\"249\":1}}],[\"会匹配\",{\"1\":{\"246\":1}}],[\"会转为\",{\"1\":{\"246\":1}}],[\"会在无参数匹配时跳过\",{\"1\":{\"248\":1}}],[\"会在\",{\"1\":{\"214\":1}}],[\"会在导入时对这些模块做一些特殊的处理使得他们成为一个插件\",{\"1\":{\"211\":1}}],[\"会在加载当前插件时\",{\"1\":{\"93\":1}}],[\"会并发调用所有\",{\"1\":{\"128\":1}}],[\"会忽略\",{\"1\":{\"127\":1}}],[\"会话已经关闭了\",{\"1\":{\"301\":1}}],[\"会话中的相应模型实例\",{\"1\":{\"301\":1}}],[\"会话和模型实例存储在\",{\"1\":{\"301\":1}}],[\"会话的生命周期中可能包含多个事件\",{\"1\":{\"301\":1}}],[\"会话\",{\"1\":{\"301\":3}}],[\"会话产生的模型实例\",{\"1\":{\"301\":1}}],[\"会话管理\",{\"0\":{\"301\":1}}],[\"会话通常是由机器人与用户进行的一对一交互\",{\"1\":{\"116\":1}}],[\"会话过程中\",{\"1\":{\"114\":1}}],[\"会话更新分为两部分\",{\"1\":{\"114\":1}}],[\"会话更新\",{\"0\":{\"114\":1}}],[\"会话状态中\",{\"1\":{\"301\":1}}],[\"会话状态还可以用于发送动态消息\",{\"1\":{\"130\":1}}],[\"会话状态的生命周期与事件处理流程相同\",{\"1\":{\"130\":1}}],[\"会话状态会持续到整个事件响应流程结束\",{\"1\":{\"114\":1}}],[\"会话状态\",{\"0\":{\"130\":1},\"1\":{\"108\":1,\"109\":1,\"110\":1,\"111\":1}}],[\"会使\",{\"1\":{\"108\":1}}],[\"会尝试优先加载依赖的插件\",{\"1\":{\"93\":1}}],[\"会正确识别这些插件的父子关系\",{\"1\":{\"90\":1}}],[\"外\",{\"1\":{\"127\":1}}],[\"外部插件之前\",{\"1\":{\"92\":1}}],[\"外的其他消息段\",{\"1\":{\"84\":1}}],[\"简单来说\",{\"1\":{\"92\":1,\"123\":1,\"232\":1}}],[\"此处提到的\",{\"1\":{\"301\":1}}],[\"此处为全大写字母的\",{\"1\":{\"116\":1}}],[\"此时我们不在乎数据安全\",{\"1\":{\"300\":1}}],[\"此时配置会自动注入上下文内创建的命令\",{\"1\":{\"257\":1}}],[\"此时会使用\",{\"1\":{\"249\":1}}],[\"此时会将传入的值尝试转为\",{\"1\":{\"246\":1}}],[\"此时的消息将会是平台特定的\",{\"1\":{\"244\":1}}],[\"此时\",{\"1\":{\"92\":1}}],[\"此外\",{\"1\":{\"75\":1,\"198\":1,\"242\":1}}],[\"也不现实\",{\"1\":{\"311\":1}}],[\"也要注意会话作用域问题\",{\"1\":{\"301\":1}}],[\"也就是说\",{\"1\":{\"300\":1}}],[\"也是同样可以切换到\",{\"1\":{\"257\":1}}],[\"也有可能是多种类型的组合等等\",{\"1\":{\"229\":1}}],[\"也有\",{\"1\":{\"175\":1}}],[\"也无法通过事件响应器对象的方法进行任何操作\",{\"1\":{\"153\":1}}],[\"也会使\",{\"1\":{\"110\":1}}],[\"也称作\",{\"1\":{\"101\":1}}],[\"也能正确跟踪插件\",{\"1\":{\"92\":1}}],[\"也可能是由于用户输入错误\",{\"1\":{\"143\":1}}],[\"也可用于快速创建各适配器下的消息段\",{\"1\":{\"84\":1}}],[\"也可以是\",{\"1\":{\"285\":1}}],[\"也可以如\",{\"1\":{\"265\":1}}],[\"也可以传入\",{\"1\":{\"250\":1}}],[\"也可以使用\",{\"1\":{\"234\":1,\"238\":1}}],[\"也可以手动新建空白文件\",{\"1\":{\"214\":1}}],[\"也可以阅读本章节\",{\"1\":{\"205\":1}}],[\"也可以尝试转为基础\",{\"1\":{\"174\":1}}],[\"也可以在子插件信息中看到它们的父插件信息\",{\"1\":{\"90\":1}}],[\"也可以通过插件索引名称获取插件对象\",{\"1\":{\"87\":1}}],[\"也可以直接使用辅助函数新建一个响应器\",{\"1\":{\"71\":1,\"72\":1,\"73\":1,\"74\":1,\"75\":1,\"77\":1}}],[\"也可以挂载其他\",{\"1\":{\"34\":1}}],[\"由\",{\"1\":{\"244\":1}}],[\"由字典数组构造消息序列\",{\"1\":{\"237\":1}}],[\"由字典构造消息段\",{\"1\":{\"237\":1}}],[\"由浅入深\",{\"1\":{\"196\":1}}],[\"由中国科学院软件研究所与\",{\"1\":{\"193\":1,\"197\":1}}],[\"由协议适配器生成\",{\"1\":{\"116\":1}}],[\"由于消息中存在各种类型的消息段\",{\"1\":{\"238\":1}}],[\"由于消息序列是\",{\"1\":{\"233\":1}}],[\"由于消息序列的本质是由若干消息段所组成的序列\",{\"1\":{\"232\":1}}],[\"由于消息序列继承自\",{\"1\":{\"231\":1}}],[\"由于相关依赖版本迭代迅速\",{\"1\":{\"202\":1}}],[\"由于这些插件已经被声明\",{\"1\":{\"92\":1}}],[\"由于\",{\"1\":{\"92\":1,\"152\":1,\"153\":1,\"183\":1}}],[\"由适配器实现的判断\",{\"1\":{\"26\":1}}],[\"由适配器填写\",{\"1\":{\"16\":1}}],[\"定时更新的同时提供统计数据\",{\"1\":{\"203\":1}}],[\"定时更新中需要插件测试环境隔离\",{\"1\":{\"203\":1}}],[\"定时自动更新\",{\"1\":{\"203\":1}}],[\"定时任务作为一个额外功能\",{\"1\":{\"149\":1}}],[\"定时任务\",{\"0\":{\"149\":1},\"1\":{\"196\":1,\"204\":1}}],[\"定时任务插件\",{\"1\":{\"91\":1}}],[\"定义消息事件\",{\"1\":{\"196\":1}}],[\"定义关闭时的操作\",{\"1\":{\"171\":1}}],[\"定义启动时的操作\",{\"1\":{\"171\":1}}],[\"定义中是否包含适配器路由的\",{\"1\":{\"39\":1}}],[\"定义\",{\"1\":{\"36\":1}}],[\"定义地址\",{\"1\":{\"36\":1}}],[\"定义的事件模型\",{\"1\":{\"13\":1}}],[\"跨插件访问\",{\"0\":{\"91\":1},\"1\":{\"134\":1,\"152\":1,\"196\":1}}],[\"跨平台\",{\"1\":{\"0\":1}}],[\"join\",{\"1\":{\"243\":2,\"302\":2}}],[\"joinroomevent\",{\"1\":{\"177\":1}}],[\"joinpath\",{\"1\":{\"90\":1}}],[\"jobs\",{\"1\":{\"311\":2}}],[\"job\",{\"1\":{\"153\":5}}],[\"json=\",{\"1\":{\"293\":1}}],[\"json=platform\",{\"1\":{\"175\":1}}],[\"json\",{\"1\":{\"36\":2,\"39\":1,\"207\":1,\"219\":6,\"293\":1,\"294\":2}}],[\"想要在其中嵌套加载子插件\",{\"1\":{\"90\":1}}],[\"you\",{\"1\":{\"263\":1}}],[\"your\",{\"1\":{\"167\":1,\"169\":1,\"171\":1,\"172\":2,\"174\":1,\"175\":2,\"176\":1,\"216\":2,\"217\":1,\"218\":2,\"219\":2,\"220\":2}}],[\"yanyongyu\",{\"1\":{\"186\":1,\"187\":1,\"188\":1,\"194\":1,\"200\":1,\"202\":1}}],[\"y>\",{\"1\":{\"175\":1}}],[\"y\",{\"1\":{\"89\":2,\"122\":1,\"214\":1,\"249\":5}}],[\"$extra\",{\"1\":{\"255\":1}}],[\"$xdg\",{\"1\":{\"138\":1}}],[\"$\",{\"1\":{\"89\":1,\"214\":1,\"255\":1,\"266\":3,\"274\":1,\"300\":1,\"311\":8}}],[\"嵌套插件\",{\"0\":{\"88\":1}}],[\"请勿修改\",{\"1\":{\"300\":1}}],[\"请勿在插件被加载前\",{\"1\":{\"215\":1}}],[\"请只配置必要的选项\",{\"1\":{\"291\":1}}],[\"请先激活虚拟环境\",{\"1\":{\"209\":1}}],[\"请优先考虑使用\",{\"1\":{\"205\":1}}],[\"请查看该活动的\",{\"1\":{\"181\":1,\"193\":1,\"197\":1,\"201\":1}}],[\"请在\",{\"1\":{\"179\":1}}],[\"请参阅\",{\"1\":{\"160\":1,\"161\":1}}],[\"请不要将事件处理依赖的特殊语法用于定时任务\",{\"1\":{\"153\":1}}],[\"请重新输入\",{\"1\":{\"130\":1}}],[\"请输入\",{\"1\":{\"130\":1}}],[\"请输入密码\",{\"1\":{\"130\":1}}],[\"请输入地名\",{\"1\":{\"122\":1,\"301\":1}}],[\"请注意区分插件的项目名\",{\"1\":{\"278\":1}}],[\"请注意转义\",{\"1\":{\"177\":1}}],[\"请注意\",{\"1\":{\"86\":1,\"116\":1,\"215\":1,\"216\":1,\"217\":1}}],[\"请求头\",{\"1\":{\"175\":1}}],[\"请求的方式\",{\"1\":{\"175\":1}}],[\"请求方法\",{\"1\":{\"96\":1,\"175\":1}}],[\"请求处理的回调函数\",{\"1\":{\"29\":1}}],[\"请求\",{\"1\":{\"29\":1,\"54\":1,\"55\":1,\"62\":1,\"175\":1,\"293\":2}}],[\"一一对应\",{\"1\":{\"300\":1}}],[\"一样直接标明参数名称和类型\",{\"1\":{\"265\":1}}],[\"一般情况下\",{\"1\":{\"300\":1}}],[\"一般情况下你可以通过\",{\"1\":{\"259\":1}}],[\"一般为插件模块名\",{\"1\":{\"289\":1,\"300\":1}}],[\"一般为参数的类型\",{\"1\":{\"247\":1}}],[\"一般一个分支对应一个插件\",{\"1\":{\"283\":1}}],[\"一段指定顺序的字符串列表\",{\"1\":{\"252\":1}}],[\"一段语音\",{\"1\":{\"229\":1}}],[\"一定是字符串\",{\"1\":{\"247\":1}}],[\"一串消息\",{\"1\":{\"231\":1}}],[\"一篇富文本文章\",{\"1\":{\"229\":1}}],[\"一张图片\",{\"1\":{\"229\":1}}],[\"一条消息可能会有承载有各种不同的表现形式\",{\"1\":{\"229\":1}}],[\"一套自动化的测试机制是非常重要的\",{\"1\":{\"186\":1}}],[\"一些有关\",{\"1\":{\"176\":1}}],[\"一些使用了\",{\"1\":{\"40\":1}}],[\"一节进行了解\",{\"1\":{\"134\":1,\"152\":1}}],[\"一个\",{\"1\":{\"310\":1}}],[\"一个地方只会有一种天气\",{\"1\":{\"299\":1}}],[\"一个包含\",{\"1\":{\"213\":1}}],[\"一个普通的\",{\"1\":{\"212\":1}}],[\"一个机器人项目的最小实例中至少需要包含以下内容\",{\"1\":{\"205\":1}}],[\"一个用于检查用户是否在黑名单中\",{\"1\":{\"126\":1}}],[\"一个用于检查插件是否启用\",{\"1\":{\"126\":1}}],[\"一个字典\",{\"1\":{\"86\":1}}],[\"向机器人用户提供功能\",{\"1\":{\"86\":1}}],[\"除外\",{\"1\":{\"309\":1}}],[\"除非你知道自己在做什么\",{\"1\":{\"301\":1}}],[\"除主参数外的其他解析结果\",{\"1\":{\"254\":1}}],[\"除\",{\"1\":{\"224\":1}}],[\"除此之外\",{\"1\":{\"86\":1,\"261\":1}}],[\"除了通过传入\",{\"1\":{\"246\":1}}],[\"除了在事件响应器中使用响应规则外\",{\"1\":{\"128\":1}}],[\"除了使用数据库等第三方存储之外\",{\"1\":{\"132\":1}}],[\"除了使用\",{\"1\":{\"127\":1}}],[\"除了\",{\"1\":{\"69\":1}}],[\"└──\",{\"1\":{\"86\":4,\"164\":2,\"212\":1,\"213\":2,\"214\":8,\"300\":2}}],[\"│\",{\"1\":{\"86\":1,\"164\":21,\"214\":3}}],[\"📜\",{\"1\":{\"86\":4,\"164\":8,\"212\":1,\"213\":1,\"214\":7}}],[\"📂\",{\"1\":{\"86\":3,\"164\":3,\"212\":1,\"213\":2,\"214\":7}}],[\"📦\",{\"1\":{\"86\":1,\"164\":1,\"214\":3}}],[\"├──\",{\"1\":{\"86\":3,\"164\":9,\"214\":6,\"300\":2}}],[\"假设我们有一个插件\",{\"1\":{\"86\":1,\"93\":1}}],[\"现在可以开始使用数据库了\",{\"1\":{\"301\":1}}],[\"现在启动机器人试试吧\",{\"1\":{\"300\":1}}],[\"现在我们来实现他的功能\",{\"1\":{\"227\":1}}],[\"现在你可以选择\",{\"1\":{\"131\":1}}],[\"现在\",{\"1\":{\"86\":1,\"300\":2}}],[\"而且\",{\"1\":{\"311\":1}}],[\"而且代码不清晰\",{\"1\":{\"309\":1}}],[\"而且不利于日志的归档\",{\"1\":{\"117\":1}}],[\"而应该在事件响应器结束前提交事务\",{\"1\":{\"301\":1}}],[\"而是由\",{\"1\":{\"300\":1}}],[\"而是一个消息序列的字符串表示\",{\"1\":{\"238\":1}}],[\"而不是\",{\"1\":{\"299\":1}}],[\"而不同地方可能有相同的天气\",{\"1\":{\"299\":1}}],[\"而其他插件使用默认的\",{\"1\":{\"289\":1}}],[\"而\",{\"1\":{\"247\":1}}],[\"而消息段则是组成自然段的一句话\",{\"1\":{\"232\":1}}],[\"而无需关心\",{\"1\":{\"191\":1,\"192\":1}}],[\"而在使用时\",{\"1\":{\"127\":1}}],[\"而插件使用者或者机器人用户想要看到的是插件使用方法等帮助信息\",{\"1\":{\"86\":1}}],[\"而非直接使用会话状态中的模型实例\",{\"1\":{\"301\":1}}],[\"而非\",{\"1\":{\"77\":1,\"166\":1,\"301\":1}}],[\"章节\",{\"1\":{\"84\":1}}],[\"实际上\",{\"1\":{\"300\":1}}],[\"实际应用测试时\",{\"1\":{\"293\":1,\"294\":1}}],[\"实现相应\",{\"1\":{\"198\":1}}],[\"实现相应适配器\",{\"1\":{\"195\":1}}],[\"实现更多附加特性\",{\"1\":{\"192\":1}}],[\"实现自选语言版\",{\"0\":{\"192\":1}}],[\"实现第一手\",{\"1\":{\"191\":1,\"192\":1}}],[\"实现的开发者\",{\"1\":{\"191\":1,\"192\":1}}],[\"实现的开发者只需编写针对特定聊天平台的对接代码\",{\"1\":{\"191\":1,\"192\":1}}],[\"实现所有\",{\"1\":{\"191\":1,\"192\":1}}],[\"实现所共享的功能\",{\"1\":{\"191\":2,\"192\":2}}],[\"实现包括\",{\"1\":{\"191\":1,\"192\":1}}],[\"实现\",{\"0\":{\"191\":1},\"1\":{\"186\":1,\"191\":2,\"192\":2,\"204\":2}}],[\"实现从字符串中构造消息数组\",{\"1\":{\"178\":1}}],[\"实现方式具体可以参考以下适配器\",{\"1\":{\"175\":1}}],[\"实现了跨平台接收和发送消息的功能\",{\"1\":{\"84\":1}}],[\"实例的字典\",{\"1\":{\"289\":1}}],[\"实例化\",{\"1\":{\"173\":2}}],[\"实例后调用方法\",{\"1\":{\"66\":1}}],[\"标量\",{\"1\":{\"310\":1}}],[\"标识符表示该参数的类型注解需要隐藏\",{\"1\":{\"248\":1}}],[\"标识符表示该参数为可选参数\",{\"1\":{\"248\":1}}],[\"标识符表示该处传入的参数应不是规定的类型\",{\"1\":{\"248\":1}}],[\"标识符与\",{\"1\":{\"248\":1}}],[\"标准定义的通信方式\",{\"1\":{\"191\":1,\"192\":1}}],[\"标准的\",{\"1\":{\"190\":1}}],[\"标准\",{\"1\":{\"183\":1}}],[\"标准库中的日志模块\",{\"1\":{\"120\":1}}],[\"标准库进行\",{\"1\":{\"76\":1}}],[\"标注可用于在\",{\"1\":{\"84\":1}}],[\"高\",{\"1\":{\"186\":1,\"191\":1}}],[\"高度灵活的自动化测试框架\",{\"1\":{\"186\":1}}],[\"高效的命令参数解析器\",{\"1\":{\"84\":1,\"245\":1}}],[\"高性能的异步\",{\"1\":{\"34\":1}}],[\"灵活\",{\"1\":{\"84\":1,\"245\":1}}],[\"设计并实现\",{\"1\":{\"200\":1}}],[\"设计并实现项目管理面板相关功能\",{\"1\":{\"198\":1}}],[\"设计与编写\",{\"1\":{\"199\":1}}],[\"设计命令行交互界面\",{\"1\":{\"195\":1}}],[\"设计命令行与\",{\"1\":{\"195\":1}}],[\"设计用户交互模式\",{\"1\":{\"194\":1}}],[\"设计项目联动\",{\"1\":{\"191\":1}}],[\"设计\",{\"0\":{\"190\":1},\"1\":{\"186\":1,\"194\":1}}],[\"设定的前缀\",{\"1\":{\"81\":1}}],[\"设置此命名空间下的命令的帮助选项名称\",{\"1\":{\"257\":1}}],[\"设置此命名空间下的命令的\",{\"1\":{\"257\":1}}],[\"设置存储提供者\",{\"0\":{\"59\":1}}],[\"设置视图搜索配置项\",{\"1\":{\"10\":1}}],[\"他们拥有如下共同参数\",{\"1\":{\"252\":1}}],[\"他们往往同样需要再次实现类似逻辑\",{\"1\":{\"191\":1,\"192\":1}}],[\"他们具有相同的优先级\",{\"1\":{\"81\":1}}],[\"他可以作为驱动器单独运行\",{\"1\":{\"30\":1}}],[\"+=\",{\"1\":{\"243\":3}}],[\"+\",{\"1\":{\"77\":2,\"130\":1,\"191\":1,\"192\":1,\"243\":8,\"244\":2,\"246\":2,\"264\":2}}],[\"+<module>\",{\"1\":{\"30\":1}}],[\"zerodivisionerror\",{\"1\":{\"118\":2}}],[\"z\",{\"1\":{\"77\":2}}],[\"^xxx\",{\"1\":{\"77\":1}}],[\"正如\",{\"1\":{\"300\":1}}],[\"正确\",{\"1\":{\"248\":1}}],[\"正确处理\",{\"1\":{\"203\":1}}],[\"正确创建\",{\"1\":{\"13\":1}}],[\"正常\",{\"1\":{\"202\":1}}],[\"正则内容只在命令名上生效\",{\"1\":{\"246\":1}}],[\"正则匹配后的结果可以通过\",{\"1\":{\"77\":1}}],[\"正则表达式匹配使用\",{\"1\":{\"77\":1}}],[\"选项时自自动启用交互式补全\",{\"1\":{\"270\":1}}],[\"选项名称\",{\"1\":{\"263\":1}}],[\"选项与子命令会选择其中长度最长的作为其名称\",{\"1\":{\"252\":1}}],[\"选项与子命令\",{\"0\":{\"252\":1}}],[\"选项与默认\",{\"1\":{\"76\":1}}],[\"选项\",{\"1\":{\"118\":2,\"289\":1,\"291\":2}}],[\"选项直接创建一个嵌套插件\",{\"1\":{\"89\":1}}],[\"选择了命令式编程\",{\"1\":{\"301\":1}}],[\"选择直接通过模板创建一个嵌套插件\",{\"1\":{\"89\":1}}],[\"选择驱动器\",{\"0\":{\"28\":1}}],[\"帮助文档\",{\"1\":{\"181\":1,\"193\":1,\"197\":1,\"201\":1}}],[\"帮助选项的规则\",{\"1\":{\"76\":1}}],[\"帮助\",{\"1\":{\"75\":3,\"81\":3,\"257\":1}}],[\"匹配字典中的任意一个键\",{\"1\":{\"249\":1}}],[\"匹配字符串\",{\"1\":{\"249\":2}}],[\"匹配一个正则表达式\",{\"1\":{\"249\":2}}],[\"匹配一个参数为\",{\"1\":{\"249\":1}}],[\"匹配一个字典\",{\"1\":{\"249\":1}}],[\"匹配一个列表\",{\"1\":{\"249\":1}}],[\"匹配其中的任意一个类型\",{\"1\":{\"249\":1}}],[\"匹配其中的任意一个值或类型\",{\"1\":{\"249\":1}}],[\"匹配其中的任意一个值\",{\"1\":{\"249\":1}}],[\"匹配任意类型\",{\"1\":{\"249\":2}}],[\"匹配任意字符串\",{\"1\":{\"249\":1}}],[\"匹配类似\",{\"1\":{\"249\":2}}],[\"匹配网址\",{\"1\":{\"249\":1}}],[\"匹配浮点数\",{\"1\":{\"249\":1}}],[\"匹配整数\",{\"1\":{\"249\":1}}],[\"匹配内容\",{\"1\":{\"246\":1}}],[\"匹配规则等\",{\"1\":{\"228\":1}}],[\"匹配\",{\"1\":{\"75\":2,\"249\":7}}],[\"时可能触发\",{\"1\":{\"310\":1}}],[\"时遇到的挑战\",{\"1\":{\"204\":1}}],[\"时才会响应\",{\"1\":{\"124\":1,\"127\":1,\"228\":1}}],[\"时运行\",{\"1\":{\"105\":1}}],[\"时\",{\"1\":{\"75\":1,\"96\":1,\"137\":1,\"138\":1,\"139\":1,\"174\":1,\"191\":1,\"192\":1,\"227\":1,\"253\":6,\"261\":1,\"262\":1,\"286\":1}}],[\"时更容易上手\",{\"1\":{\"4\":1}}],[\"当然我们也可以获得一个新的会话\",{\"1\":{\"301\":1}}],[\"当然非要这么做也不是不可以\",{\"1\":{\"301\":1}}],[\"当有数据更改时\",{\"1\":{\"301\":1}}],[\"当需要回滚插件版本或删除插件时\",{\"1\":{\"285\":1}}],[\"当存在默认值并且不为数字时\",{\"1\":{\"253\":1}}],[\"当存在默认值并且不为列表时\",{\"1\":{\"253\":1}}],[\"当社区中的开发者想针对一个新的聊天平台实现\",{\"1\":{\"191\":1,\"192\":1}}],[\"当\",{\"1\":{\"137\":1,\"138\":1,\"139\":1,\"261\":1,\"262\":1,\"266\":1,\"293\":1,\"294\":1}}],[\"当我们需要等待用户事件时\",{\"1\":{\"115\":1}}],[\"当我们配置了\",{\"1\":{\"75\":1}}],[\"当请求方法为\",{\"1\":{\"96\":1}}],[\"当前事件响应器\",{\"1\":{\"301\":1}}],[\"当前有效类别有\",{\"1\":{\"86\":1}}],[\"当前所有适配器已连接的\",{\"1\":{\"16\":1}}],[\"来模拟这几种通信方式\",{\"1\":{\"292\":1}}],[\"来作为全局的\",{\"1\":{\"269\":1,\"272\":1}}],[\"来删除一个快捷指令\",{\"1\":{\"261\":1}}],[\"来列出当前指令的所有快捷指令\",{\"1\":{\"261\":1}}],[\"来增加一个快捷指令\",{\"1\":{\"261\":1}}],[\"来讲\",{\"1\":{\"252\":1}}],[\"来使用正则表达式外\",{\"1\":{\"246\":1}}],[\"来辅助我们用最简的方式创建带有不同规则预设的事件响应器\",{\"1\":{\"226\":1}}],[\"来自动检测代码的更改并自动重新运行入口文件\",{\"1\":{\"209\":1}}],[\"来读取配置\",{\"1\":{\"207\":1}}],[\"来存放项目所需文件\",{\"1\":{\"205\":1}}],[\"来实现各种\",{\"1\":{\"178\":1}}],[\"来帮助适配器进行网络通信\",{\"1\":{\"170\":1}}],[\"来获取\",{\"1\":{\"130\":1}}],[\"来获取事件发送者\",{\"1\":{\"122\":1}}],[\"来更好地复用规则\",{\"1\":{\"127\":1}}],[\"来将需要的信息输出到控制台\",{\"1\":{\"117\":1}}],[\"来判断消息是否为命令\",{\"1\":{\"75\":1}}],[\"来看看如何注册适配器\",{\"1\":{\"14\":1}}],[\"完成\",{\"1\":{\"194\":1}}],[\"完善功能\",{\"1\":{\"194\":1}}],[\"完全相同\",{\"1\":{\"73\":1}}],[\"完整实现了类型注解\",{\"1\":{\"3\":1}}],[\"完整的类型注解\",{\"0\":{\"3\":1}}],[\"相当于\",{\"1\":{\"256\":1,\"261\":1}}],[\"相加均会返回一个新的\",{\"1\":{\"243\":1}}],[\"相加构造\",{\"1\":{\"236\":1}}],[\"相关技术\",{\"1\":{\"203\":1}}],[\"相关操作\",{\"1\":{\"203\":1}}],[\"相关能力\",{\"1\":{\"202\":1}}],[\"相关功能与接口\",{\"1\":{\"199\":1}}],[\"相关功能\",{\"1\":{\"198\":1}}],[\"相关\",{\"1\":{\"196\":1}}],[\"相关信息参考\",{\"1\":{\"40\":1}}],[\"相对于事件处理依赖而言\",{\"1\":{\"153\":1}}],[\"相信你已经可以独自写出一个插件了\",{\"1\":{\"131\":1}}],[\"相信你已经能够实现更复杂的会话功能了\",{\"1\":{\"116\":1}}],[\"相同\",{\"1\":{\"71\":1,\"72\":1,\"253\":1}}],[\"深入\",{\"1\":{\"70\":1}}],[\"下面假设我们使用了一个适配器\",{\"1\":{\"293\":1,\"294\":1}}],[\"下面列出了目前我们已经发布的项目\",{\"1\":{\"181\":1,\"193\":1,\"197\":1,\"201\":1}}],[\"下面我们将分别介绍如何使用\",{\"1\":{\"292\":1}}],[\"下面我们将介绍如何为插件添加元数据\",{\"1\":{\"85\":1}}],[\"下面我们创建一个项目文件夹\",{\"1\":{\"205\":1}}],[\"下面我们逐个介绍\",{\"1\":{\"69\":1}}],[\"下一步\",{\"0\":{\"131\":1}}],[\"下称\",{\"1\":{\"0\":1,\"226\":1}}],[\"函数后\",{\"1\":{\"300\":1}}],[\"函数中的代码是互逆的\",{\"1\":{\"300\":1}}],[\"函数会在默认\",{\"1\":{\"167\":1}}],[\"函数用于快捷打印适配器日志\",{\"1\":{\"167\":1}}],[\"函数都会检查事件是否符合条件\",{\"1\":{\"124\":1}}],[\"函数组成\",{\"1\":{\"124\":1}}],[\"函数声明其依赖于插件\",{\"1\":{\"93\":1}}],[\"函数的参数为插件索引名称或者外部插件的模块名称\",{\"1\":{\"93\":1}}],[\"函数的\",{\"1\":{\"75\":1}}],[\"函数\",{\"1\":{\"69\":2,\"87\":1,\"93\":2,\"300\":1}}],[\"函数具有一个\",{\"1\":{\"69\":1}}],[\"创建时间\",{\"1\":{\"300\":1}}],[\"创建新机器人\",{\"0\":{\"280\":1}}],[\"创建\",{\"1\":{\"257\":1,\"259\":1}}],[\"创建事件响应器\",{\"0\":{\"227\":1}}],[\"创建插件可以通过\",{\"1\":{\"214\":1}}],[\"创建插件\",{\"0\":{\"214\":1}}],[\"创建入口文件\",{\"0\":{\"208\":1}}],[\"创建配置文件\",{\"0\":{\"207\":1}}],[\"创建配置项目\",{\"1\":{\"196\":1}}],[\"创建虚拟环境\",{\"1\":{\"206\":1}}],[\"创建一个项目\",{\"1\":{\"205\":1}}],[\"创建与管理项目\",{\"1\":{\"198\":1}}],[\"创建项目\",{\"0\":{\"165\":1},\"1\":{\"194\":1,\"208\":1}}],[\"创建嵌套插件\",{\"0\":{\"89\":1}}],[\"创建通知事件响应器\",{\"1\":{\"69\":1}}],[\"创建请求事件响应器\",{\"1\":{\"69\":1}}],[\"创建消息事件响应器\",{\"1\":{\"69\":1}}],[\"创建元事件响应器\",{\"1\":{\"69\":1}}],[\"创建任何类型的事件响应器\",{\"1\":{\"69\":1}}],[\"该选项会影响到\",{\"1\":{\"271\":1}}],[\"该方法是\",{\"1\":{\"221\":1}}],[\"该方法需要\",{\"1\":{\"66\":1}}],[\"该文件功能会被\",{\"1\":{\"208\":1}}],[\"该模块实现所有\",{\"1\":{\"191\":1,\"192\":1}}],[\"该处理器会将日志输出到stdout\",{\"1\":{\"119\":1}}],[\"该插件同时通过提供\",{\"1\":{\"84\":1}}],[\"该插件同时提供了一系列便捷的消息段标注\",{\"1\":{\"84\":1}}],[\"该插件提供了一类新的事件响应器辅助函数\",{\"1\":{\"84\":1}}],[\"该插件使用\",{\"1\":{\"84\":1}}],[\"该响应器会被自动销毁\",{\"1\":{\"67\":1}}],[\"阻断事件向后续优先级传播的事件响应器了\",{\"1\":{\"228\":1}}],[\"阻断\",{\"0\":{\"66\":1},\"1\":{\"66\":1}}],[\"响应内容\",{\"1\":{\"172\":1}}],[\"响应头\",{\"1\":{\"172\":1}}],[\"响应事件类型更新函数是一个\",{\"1\":{\"115\":1}}],[\"响应器组\",{\"0\":{\"80\":1}}],[\"响应器的默认状态\",{\"1\":{\"69\":1}}],[\"响应器的优先级\",{\"1\":{\"69\":1}}],[\"响应器的优先级越小\",{\"1\":{\"65\":1}}],[\"响应器的过期时间\",{\"1\":{\"69\":1}}],[\"响应器将会初始化默认状态然后开始执行事件处理流程\",{\"1\":{\"68\":1}}],[\"响应优先级\",{\"0\":{\"65\":1},\"1\":{\"65\":1}}],[\"响应规则是一个\",{\"1\":{\"124\":1}}],[\"响应规则一样进行命令匹配\",{\"1\":{\"76\":1}}],[\"响应规则用于匹配事件类型是否为指定类型\",{\"1\":{\"79\":1}}],[\"响应规则用于匹配事件是否与机器人相关\",{\"1\":{\"78\":1}}],[\"响应规则用于匹配消息是否与指定正则表达式匹配\",{\"1\":{\"77\":1}}],[\"响应规则用于匹配消息纯文本部分是否包含指定字符串\",{\"1\":{\"74\":1}}],[\"响应规则用于匹配消息纯文本部分是否与指定字符串\",{\"1\":{\"73\":1}}],[\"响应规则用于匹配消息纯文本部分的结尾是否与指定字符串\",{\"1\":{\"72\":1}}],[\"响应规则用于匹配消息纯文本部分的开头是否与指定字符串\",{\"1\":{\"71\":1}}],[\"响应规则用于匹配类\",{\"1\":{\"76\":1}}],[\"响应规则默认允许消息命令与参数间不加空格\",{\"1\":{\"75\":1}}],[\"响应规则的使用方法可以参考\",{\"1\":{\"70\":1}}],[\"响应规则\",{\"0\":{\"124\":1},\"1\":{\"62\":1,\"69\":1,\"70\":1}}],[\"消息和消息段都可以使用\",{\"1\":{\"240\":1}}],[\"消息序列与消息序列相加\",{\"1\":{\"243\":1}}],[\"消息序列与消息段相加\",{\"1\":{\"243\":1}}],[\"消息序列与字符串相加\",{\"1\":{\"243\":1}}],[\"消息序列添加了一个\",{\"1\":{\"242\":1}}],[\"消息序列对列表的\",{\"1\":{\"242\":1}}],[\"消息序列对列表的索引与切片进行了增强\",{\"1\":{\"242\":1}}],[\"消息序列继承自\",{\"1\":{\"239\":1}}],[\"消息序列可以通过多种方式构造\",{\"1\":{\"234\":1}}],[\"消息序列类似于一个自然段\",{\"1\":{\"232\":1}}],[\"消息序列的使用方法与\",{\"1\":{\"231\":1}}],[\"消息序列\",{\"0\":{\"231\":1},\"1\":{\"231\":1}}],[\"消息序列是\",{\"1\":{\"229\":1}}],[\"消息对象的便捷操作\",{\"1\":{\"204\":1}}],[\"消息格式等\",{\"1\":{\"191\":1,\"192\":1}}],[\"消息解析\",{\"1\":{\"191\":2,\"192\":2}}],[\"消息表示机制\",{\"1\":{\"190\":1}}],[\"消息段与消息序列相加\",{\"1\":{\"243\":1}}],[\"消息段与消息段相加\",{\"1\":{\"243\":1}}],[\"消息段与字符串相加\",{\"1\":{\"243\":1}}],[\"消息段的类型是由协议适配器提供的\",{\"1\":{\"232\":1}}],[\"消息段可以被认为是构成消息序列的最小单位\",{\"1\":{\"232\":1}}],[\"消息段\",{\"0\":{\"232\":1},\"1\":{\"178\":1,\"232\":1}}],[\"消息事件\",{\"1\":{\"177\":1}}],[\"消息类型事件还应重写\",{\"1\":{\"177\":1}}],[\"消息模板支持使用拓展控制符来控制消息段类型\",{\"1\":{\"244\":1}}],[\"消息模板支持使用消息段进行格式化\",{\"1\":{\"244\":1}}],[\"消息模板同样支持使用消息序列作为模板\",{\"1\":{\"244\":1}}],[\"消息模板采用\",{\"1\":{\"244\":1}}],[\"消息模板的使用方法已经在消息处理中介绍过\",{\"1\":{\"130\":1}}],[\"消息模板在发送时会使用会话状态字典进行渲染\",{\"1\":{\"130\":1}}],[\"消息发送者等等\",{\"1\":{\"121\":1}}],[\"消息的代码\",{\"1\":{\"101\":1}}],[\"消息传递\",{\"1\":{\"101\":1}}],[\"消息\",{\"1\":{\"62\":1,\"225\":1}}],[\"消息中包含\",{\"1\":{\"26\":1}}],[\"才会触发该响应器\",{\"1\":{\"62\":1}}],[\"只需要数据库模式与模型定义一致即可\",{\"1\":{\"300\":1}}],[\"只需要执行以下命令\",{\"1\":{\"280\":1,\"281\":1}}],[\"只需要掌握部分功能即可\",{\"1\":{\"278\":1}}],[\"只需要继承并实现\",{\"1\":{\"58\":1}}],[\"只有消息序列中的文本类型消息段才能被格式化\",{\"1\":{\"244\":1}}],[\"只有一个类型为\",{\"1\":{\"172\":2}}],[\"只有在开启\",{\"1\":{\"156\":1}}],[\"只有在接收到的事件类型与该响应器的类型相同时\",{\"1\":{\"62\":1}}],[\"只有当所有\",{\"1\":{\"126\":1}}],[\"只有插件开发者才需要关心这些信息\",{\"1\":{\"86\":1}}],[\"类作为依赖\",{\"1\":{\"302\":1}}],[\"类直接构建模板\",{\"1\":{\"244\":1}}],[\"类可以直接实例化\",{\"1\":{\"235\":1}}],[\"类似于\",{\"1\":{\"265\":1}}],[\"类似于函数中的\",{\"1\":{\"250\":3}}],[\"类似的方式来处理消息序列\",{\"1\":{\"233\":1}}],[\"类似\",{\"1\":{\"193\":1,\"197\":1,\"246\":1}}],[\"类来创建一个新的事件响应器\",{\"1\":{\"60\":1}}],[\"类型标注决定依赖注入的数据结构\",{\"1\":{\"310\":1}}],[\"类型标注\",{\"0\":{\"310\":1}}],[\"类型头\",{\"1\":{\"246\":1}}],[\"类型切片\",{\"1\":{\"242\":1}}],[\"类型索引\",{\"1\":{\"242\":1}}],[\"类型过滤\",{\"1\":{\"242\":1}}],[\"类型检查与推导\",{\"1\":{\"200\":1}}],[\"类型本身\",{\"1\":{\"178\":2}}],[\"类型的值\",{\"1\":{\"249\":2}}],[\"类型的新事件响应器\",{\"1\":{\"226\":1}}],[\"类型的数据\",{\"1\":{\"175\":2}}],[\"类型的依赖函数\",{\"1\":{\"125\":1}}],[\"类型的事件\",{\"1\":{\"115\":1}}],[\"类型的事件响应器都会阻断事件传递\",{\"1\":{\"66\":1}}],[\"类型的\",{\"1\":{\"100\":1}}],[\"类型为\",{\"1\":{\"96\":4,\"97\":3}}],[\"类型或者具体的字符串\",{\"1\":{\"75\":1}}],[\"类型\",{\"1\":{\"33\":1,\"34\":1,\"36\":1,\"37\":1,\"38\":1,\"39\":1,\"40\":1,\"41\":1,\"42\":1,\"43\":1,\"44\":1,\"45\":1,\"46\":1,\"48\":1,\"49\":1,\"50\":1,\"51\":1,\"52\":1,\"53\":1,\"54\":1,\"55\":1,\"56\":1,\"155\":1,\"156\":1,\"157\":1,\"249\":3,\"268\":1,\"269\":1,\"270\":1,\"271\":1,\"272\":1,\"273\":1,\"274\":1,\"275\":1,\"276\":1,\"277\":1}}],[\"与之关联也不会被替换\",{\"1\":{\"249\":1}}],[\"与之关联\",{\"1\":{\"249\":1}}],[\"与命令名\",{\"1\":{\"246\":1}}],[\"与平台建立连接和进行交互\",{\"1\":{\"170\":1}}],[\"与平台交互\",{\"0\":{\"170\":1}}],[\"与\",{\"0\":{\"250\":1},\"1\":{\"127\":1,\"191\":1,\"204\":1,\"246\":1,\"249\":2,\"250\":2,\"252\":2,\"262\":1}}],[\"与机器人用户进行的会话都是通过消息事件进行的\",{\"1\":{\"115\":1}}],[\"与插件索引名称无关\",{\"1\":{\"86\":1}}],[\"与第三方响应规则拓展\",{\"1\":{\"60\":1}}],[\"与群聊\",{\"1\":{\"23\":1}}],[\"例如此处的\",{\"1\":{\"301\":1}}],[\"例如开发环境和生产环境\",{\"1\":{\"300\":1}}],[\"例如天气插件\",{\"1\":{\"299\":1}}],[\"例如切片\",{\"1\":{\"231\":1}}],[\"例如事件响应器的优先级\",{\"1\":{\"228\":1}}],[\"例如在项目\",{\"1\":{\"216\":1,\"217\":1}}],[\"例如在生产构建使用自有的\",{\"1\":{\"202\":1}}],[\"例如创建一个\",{\"1\":{\"212\":1,\"213\":1}}],[\"例如停止任务\",{\"1\":{\"171\":1}}],[\"例如和平台建立连接\",{\"1\":{\"171\":1}}],[\"例如平台连接密钥等\",{\"1\":{\"168\":1}}],[\"例如用户的个人信息\",{\"1\":{\"132\":1}}],[\"例如用户的重试次数等等\",{\"1\":{\"130\":1}}],[\"例如消息发送时间\",{\"1\":{\"121\":1}}],[\"例如多人小游戏等等\",{\"1\":{\"116\":1}}],[\"例如获取当前所有已导入的插件\",{\"1\":{\"87\":1}}],[\"例如插件的名称\",{\"1\":{\"85\":1}}],[\"例如\",{\"1\":{\"57\":1,\"71\":1,\"72\":1,\"73\":1,\"74\":1,\"75\":1,\"76\":1,\"77\":1,\"78\":1,\"79\":1,\"81\":1,\"82\":1,\"96\":1,\"97\":1,\"119\":1,\"126\":1,\"127\":1,\"128\":1,\"157\":1,\"164\":1,\"168\":1,\"176\":2,\"177\":1,\"203\":1,\"216\":1,\"217\":1,\"218\":1,\"219\":1,\"220\":1,\"221\":1,\"222\":1,\"225\":1,\"226\":1,\"227\":1,\"228\":1,\"233\":1,\"246\":4,\"261\":2,\"266\":2,\"289\":1}}],[\"对了\",{\"1\":{\"300\":1}}],[\"对我们的代码做的事情那样\",{\"1\":{\"300\":1}}],[\"对头\",{\"1\":{\"246\":1}}],[\"对接\",{\"1\":{\"204\":1}}],[\"对文档整体视觉体验进行重新设计\",{\"1\":{\"202\":1}}],[\"对文档的优雅性与美观性有追求更佳\",{\"1\":{\"190\":1}}],[\"对应的\",{\"1\":{\"175\":1}}],[\"对事件进行某些预处理\",{\"1\":{\"176\":1}}],[\"对事件进行处理\",{\"1\":{\"174\":2,\"176\":1}}],[\"对事件的处理行为\",{\"1\":{\"57\":1}}],[\"对不同类型的事件需要做出不同的处理\",{\"1\":{\"121\":1}}],[\"对于用户而言\",{\"1\":{\"278\":1}}],[\"对于命令\",{\"1\":{\"252\":1}}],[\"对于参数的注释也可以标记在\",{\"1\":{\"248\":1}}],[\"对于无前缀的类型头\",{\"1\":{\"246\":1}}],[\"对于未有一定开发经验的用户\",{\"1\":{\"198\":1}}],[\"对于嵌套插件\",{\"1\":{\"134\":1}}],[\"对于\",{\"1\":{\"96\":1,\"97\":1}}],[\"对于在项目目录下的插件\",{\"1\":{\"92\":1}}],[\"对象进行清理\",{\"1\":{\"293\":1}}],[\"对象进行合并\",{\"1\":{\"127\":1}}],[\"对象是否创建等途径来验证机器人是否正确运行\",{\"1\":{\"293\":1}}],[\"对象之间可以直接相加\",{\"1\":{\"243\":1}}],[\"对象支持\",{\"1\":{\"237\":1}}],[\"对象来加载插件\",{\"1\":{\"216\":1}}],[\"对象来组合多个\",{\"1\":{\"127\":1}}],[\"对象的方法来记录日志\",{\"1\":{\"118\":1}}],[\"对象调用平台接口后运行\",{\"1\":{\"113\":1}}],[\"对象调用平台接口并返回指定的结果\",{\"1\":{\"112\":1}}],[\"对象调用平台接口时运行\",{\"1\":{\"112\":1}}],[\"对象至\",{\"1\":{\"105\":1}}],[\"对象中存储了插件系统所需要的一系列信息\",{\"1\":{\"86\":1}}],[\"对象或者\",{\"1\":{\"69\":2}}],[\"对象都具有一个\",{\"1\":{\"16\":1}}],[\"对象可以通过\",{\"1\":{\"16\":1,\"236\":1}}],[\"对象\",{\"0\":{\"16\":1},\"1\":{\"16\":2,\"63\":1,\"64\":1,\"67\":1,\"68\":1,\"105\":1,\"106\":1,\"108\":1,\"109\":1,\"110\":1,\"111\":1,\"118\":1,\"124\":1,\"128\":1,\"175\":3,\"177\":1,\"229\":1,\"243\":1,\"249\":1}}],[\"对象并注册到\",{\"1\":{\"13\":1,\"169\":1}}],[\"295\",{\"1\":{\"196\":1}}],[\"2024\",{\"0\":{\"201\":1},\"1\":{\"201\":1}}],[\"2023\",{\"0\":{\"197\":1},\"1\":{\"197\":1}}],[\"2022\",{\"0\":{\"193\":1},\"1\":{\"193\":1}}],[\"2021\",{\"0\":{\"181\":1},\"1\":{\"181\":1}}],[\"20\",{\"1\":{\"156\":1}}],[\"2006\",{\"1\":{\"300\":1}}],[\"200\",{\"1\":{\"96\":2,\"293\":1}}],[\"2\",{\"1\":{\"54\":1,\"148\":1,\"153\":4,\"186\":3,\"233\":1,\"242\":3,\"246\":1,\"288\":1}}],[\"拥有以下条目\",{\"1\":{\"255\":1}}],[\"拥有与\",{\"1\":{\"46\":1}}],[\"拥有大量的开发者为其开发插件\",{\"1\":{\"0\":1}}],[\"generated\",{\"1\":{\"300\":5}}],[\"get\",{\"1\":{\"14\":1,\"15\":5,\"16\":5,\"18\":1,\"19\":1,\"20\":1,\"21\":1,\"22\":1,\"23\":1,\"24\":1,\"25\":1,\"31\":3,\"40\":1,\"48\":1,\"87\":5,\"94\":2,\"96\":4,\"97\":2,\"99\":3,\"100\":3,\"103\":2,\"104\":2,\"105\":2,\"106\":2,\"122\":1,\"125\":2,\"126\":1,\"127\":2,\"130\":1,\"134\":7,\"169\":3,\"171\":4,\"172\":3,\"175\":2,\"177\":14,\"178\":2,\"191\":1,\"192\":1,\"208\":1,\"233\":1,\"242\":2,\"293\":6,\"294\":3,\"301\":13,\"305\":4,\"306\":4,\"308\":3,\"309\":2}}],[\"gcc\",{\"1\":{\"262\":2}}],[\"gt\",{\"1\":{\"246\":2}}],[\"graphql\",{\"1\":{\"203\":1}}],[\"groups=\",{\"1\":{\"245\":1}}],[\"group\",{\"1\":{\"81\":7,\"82\":3,\"123\":3}}],[\"groupmessageevent\",{\"1\":{\"79\":2,\"123\":2}}],[\"gsoc\",{\"1\":{\"193\":1,\"197\":1}}],[\"git\",{\"1\":{\"183\":1,\"184\":1,\"186\":1,\"187\":1,\"188\":1,\"190\":1,\"203\":2,\"300\":1}}],[\"github\",{\"1\":{\"158\":1,\"184\":2,\"194\":2,\"195\":1,\"196\":3,\"198\":1,\"199\":1,\"200\":1,\"202\":1,\"203\":8,\"204\":1,\"311\":2}}],[\"google\",{\"1\":{\"193\":1,\"197\":1}}],[\"go\",{\"1\":{\"183\":1,\"191\":1,\"192\":2}}],[\"got\",{\"1\":{\"118\":1,\"122\":2,\"130\":2,\"301\":1}}],[\"g>\",{\"1\":{\"119\":2}}],[\"global\",{\"0\":{\"273\":1},\"1\":{\"249\":3}}],[\"glob\",{\"1\":{\"43\":1,\"44\":1,\"51\":1,\"52\":1}}],[\"支持类作为依赖\",{\"1\":{\"308\":1}}],[\"支持如下\",{\"1\":{\"254\":1}}],[\"支持的类型标注请参见\",{\"1\":{\"302\":1}}],[\"支持的格式字符串\",{\"1\":{\"249\":1}}],[\"支持的适配器模块名集合\",{\"1\":{\"86\":1}}],[\"支持对\",{\"1\":{\"204\":1}}],[\"支持对多种类型\",{\"1\":{\"204\":1}}],[\"支持等\",{\"1\":{\"192\":1}}],[\"支持依赖注入\",{\"1\":{\"105\":1,\"106\":1,\"108\":1,\"109\":1,\"110\":1,\"111\":1,\"125\":1}}],[\"支持嵌套插件\",{\"1\":{\"88\":1}}],[\"支持\",{\"1\":{\"43\":1,\"44\":1,\"51\":1,\"52\":1,\"76\":1,\"143\":1,\"191\":1,\"235\":1,\"242\":1,\"280\":1,\"302\":1}}],[\"功能强大且复杂\",{\"1\":{\"278\":1}}],[\"功能框架\",{\"1\":{\"194\":2}}],[\"功能体验不佳\",{\"1\":{\"194\":1}}],[\"功能完整\",{\"1\":{\"94\":1}}],[\"功能\",{\"1\":{\"40\":1,\"48\":1}}],[\"功能的实际来源\",{\"1\":{\"40\":1}}],[\"异常来忽略平台接口返回的结果并返回指定的结果\",{\"1\":{\"113\":1}}],[\"异常来阻止\",{\"1\":{\"112\":1}}],[\"异常一般为\",{\"1\":{\"40\":1}}],[\"异步建立\",{\"1\":{\"29\":1}}],[\"异步发送\",{\"1\":{\"29\":1}}],[\"异步优先\",{\"0\":{\"2\":1}}],[\"有如下属性\",{\"1\":{\"254\":1}}],[\"有\",{\"1\":{\"253\":3}}],[\"有很多相似之处\",{\"1\":{\"231\":1}}],[\"有时候我们可能需要在不同插件之间调用功能\",{\"1\":{\"91\":1}}],[\"有三个基本属性\",{\"1\":{\"86\":1}}],[\"有效期\",{\"0\":{\"67\":1}}],[\"有关其他插件加载的方式\",{\"1\":{\"223\":1}}],[\"有关\",{\"1\":{\"40\":1}}],[\"有一种方法可以让你的代码声明它工作和使用所需要的东西\",{\"1\":{\"7\":1}}],[\"所实现的接口自动实现类似\",{\"1\":{\"191\":1,\"192\":1}}],[\"所提供的功能\",{\"1\":{\"93\":1}}],[\"所有\",{\"1\":{\"254\":1}}],[\"所有的事件响应器都继承自\",{\"1\":{\"225\":1}}],[\"所有平台消息在进入处理流程前需要转换为\",{\"1\":{\"177\":1}}],[\"所有标注位于\",{\"1\":{\"84\":1}}],[\"所有非\",{\"1\":{\"66\":1}}],[\"所有驱动器模块都会包含一个\",{\"1\":{\"30\":1}}],[\"所以可以这么编写\",{\"1\":{\"252\":1}}],[\"所以你在使用的时候\",{\"1\":{\"244\":1}}],[\"所以你总是可以用和操作\",{\"1\":{\"233\":1}}],[\"所以\",{\"1\":{\"40\":1,\"231\":1,\"299\":1,\"300\":3}}],[\"平台不支持运行独立服务\",{\"1\":{\"311\":1}}],[\"平台有较多耦合\",{\"1\":{\"190\":1}}],[\"平台\",{\"1\":{\"143\":1,\"146\":1}}],[\"平台接口调用后钩子\",{\"0\":{\"113\":1}}],[\"平台接口调用钩子\",{\"0\":{\"112\":1}}],[\"平台的可使用性不如前者\",{\"1\":{\"40\":1}}],[\"平台上开启该功能有可能会造成预料之外的影响\",{\"1\":{\"40\":1,\"48\":1}}],[\"14\",{\"1\":{\"314\":1}}],[\"13\",{\"1\":{\"313\":1}}],[\"11\",{\"1\":{\"311\":2}}],[\"15\",{\"1\":{\"300\":4,\"312\":1}}],[\"10\",{\"1\":{\"156\":1,\"228\":1,\"290\":1,\"311\":2}}],[\"100\",{\"1\":{\"148\":1}}],[\"1070\",{\"1\":{\"40\":1}}],[\"12\",{\"1\":{\"311\":4,\"315\":1}}],[\"123456\",{\"1\":{\"244\":2}}],[\"123\",{\"1\":{\"112\":1,\"113\":1,\"246\":16,\"266\":2}}],[\"1257\",{\"1\":{\"40\":1}}],[\"1\",{\"1\":{\"54\":2,\"118\":1,\"119\":1,\"130\":2,\"148\":1,\"153\":3,\"242\":2,\"252\":1,\"253\":1,\"261\":2,\"310\":6}}],[\"5432\",{\"1\":{\"311\":6}}],[\"5\",{\"1\":{\"290\":1,\"318\":1}}],[\"512\",{\"1\":{\"40\":1}}],[\"529\",{\"1\":{\"40\":1}}],[\"561\",{\"1\":{\"8\":1}}],[\"强制切换到\",{\"1\":{\"40\":1}}],[\"底层\",{\"1\":{\"40\":1}}],[\"rd123\",{\"1\":{\"246\":1}}],[\"rd\",{\"1\":{\"246\":1}}],[\"r和\",{\"1\":{\"245\":1}}],[\"r|\",{\"1\":{\"245\":1,\"265\":1}}],[\"richardchien\",{\"1\":{\"190\":1,\"191\":1,\"192\":1}}],[\"r>\",{\"1\":{\"171\":3}}],[\"row\",{\"1\":{\"310\":21}}],[\"rows\",{\"1\":{\"310\":13}}],[\"rollback\",{\"1\":{\"305\":1,\"306\":1}}],[\"roll\",{\"1\":{\"246\":2}}],[\"room\",{\"1\":{\"177\":1}}],[\"root\",{\"1\":{\"120\":1,\"311\":2}}],[\"roaming\",{\"1\":{\"138\":2,\"139\":3}}],[\"rotation=\",{\"1\":{\"119\":1}}],[\"robustness\",{\"1\":{\"55\":1}}],[\"rawstr\",{\"1\":{\"249\":1}}],[\"rawcommand\",{\"1\":{\"75\":1}}],[\"rate\",{\"1\":{\"148\":1}}],[\"raise\",{\"1\":{\"108\":1,\"110\":1,\"112\":1,\"113\":1,\"171\":1,\"172\":1,\"177\":3,\"255\":1,\"256\":1}}],[\"r\",{\"1\":{\"77\":3,\"265\":1,\"311\":2}}],[\"rust\",{\"0\":{\"191\":1},\"1\":{\"191\":4}}],[\"rule>\",{\"1\":{\"226\":1}}],[\"rule2\",{\"1\":{\"127\":3}}],[\"rule1\",{\"1\":{\"127\":3}}],[\"rule=rule\",{\"1\":{\"126\":1}}],[\"rule=is\",{\"1\":{\"125\":1,\"127\":1}}],[\"rule=to\",{\"1\":{\"82\":1,\"124\":1,\"127\":2,\"228\":1}}],[\"rulechecker\",{\"0\":{\"125\":1},\"1\":{\"69\":1,\"124\":2,\"125\":3,\"126\":4,\"127\":1,\"128\":1}}],[\"rule\",{\"0\":{\"126\":1},\"1\":{\"64\":2,\"69\":2,\"71\":2,\"72\":2,\"73\":2,\"74\":2,\"75\":5,\"76\":3,\"77\":2,\"78\":2,\"79\":2,\"82\":1,\"124\":1,\"126\":5,\"127\":11,\"128\":4,\"228\":1}}],[\"runs\",{\"1\":{\"311\":2}}],[\"runtimeerror\",{\"1\":{\"171\":1,\"172\":1}}],[\"run\",{\"1\":{\"40\":2,\"48\":2,\"110\":2,\"111\":2,\"153\":3,\"208\":2,\"209\":2,\"215\":1,\"280\":1,\"300\":1,\"311\":12}}],[\"refresh\",{\"1\":{\"305\":1,\"306\":1}}],[\"revision\",{\"1\":{\"300\":7}}],[\"reverse\",{\"1\":{\"29\":1}}],[\"re\",{\"1\":{\"246\":2,\"249\":2}}],[\"rep\",{\"1\":{\"249\":1}}],[\"report\",{\"1\":{\"179\":1}}],[\"repr\",{\"1\":{\"177\":1}}],[\"recent\",{\"1\":{\"300\":1}}],[\"receive\",{\"1\":{\"97\":1,\"175\":3,\"294\":1}}],[\"recycle\",{\"1\":{\"290\":1}}],[\"reconnect\",{\"1\":{\"171\":2}}],[\"release\",{\"1\":{\"148\":2}}],[\"reload\",{\"1\":{\"40\":4,\"48\":3,\"209\":1}}],[\"reject\",{\"1\":{\"130\":1}}],[\"remove\",{\"1\":{\"119\":1}}],[\"react\",{\"1\":{\"202\":2}}],[\"read\",{\"1\":{\"134\":1}}],[\"readme\",{\"1\":{\"86\":1,\"164\":1,\"214\":2}}],[\"reason\",{\"1\":{\"108\":1,\"110\":1}}],[\"returning\",{\"1\":{\"309\":1}}],[\"return\",{\"1\":{\"96\":1,\"100\":1,\"115\":1,\"116\":2,\"125\":1,\"126\":2,\"127\":1,\"169\":1,\"172\":1,\"174\":2,\"175\":4,\"177\":9,\"178\":4,\"300\":2,\"301\":2,\"302\":1,\"305\":1,\"306\":1}}],[\"res\",{\"1\":{\"245\":3,\"265\":2}}],[\"rest\",{\"1\":{\"203\":1}}],[\"result\",{\"1\":{\"113\":3,\"128\":1,\"265\":2,\"310\":1}}],[\"result=\",{\"1\":{\"112\":1,\"113\":1,\"245\":1}}],[\"response\",{\"1\":{\"96\":5,\"172\":3,\"293\":3,\"294\":2}}],[\"resolve\",{\"1\":{\"90\":1,\"179\":1}}],[\"requires=\",{\"1\":{\"252\":1}}],[\"requires\",{\"1\":{\"252\":1}}],[\"requirements\",{\"1\":{\"311\":2}}],[\"requirement\",{\"1\":{\"245\":1,\"265\":5}}],[\"require\",{\"1\":{\"93\":6,\"134\":3,\"152\":3,\"153\":2}}],[\"requests\",{\"1\":{\"293\":1}}],[\"request\",{\"1\":{\"11\":1,\"18\":1,\"62\":1,\"69\":1,\"96\":5,\"148\":1,\"171\":4,\"172\":4,\"175\":8,\"177\":1,\"203\":1}}],[\"registry\",{\"1\":{\"203\":5}}],[\"register\",{\"1\":{\"14\":3,\"208\":1}}],[\"regexdict\",{\"1\":{\"77\":1}}],[\"regexgroup\",{\"1\":{\"77\":1}}],[\"regexstr\",{\"1\":{\"77\":1}}],[\"regex\",{\"1\":{\"77\":5}}],[\"red>\",{\"1\":{\"118\":1}}],[\"redis\",{\"1\":{\"57\":1}}],[\"redoc\",{\"1\":{\"38\":2}}],[\"reimplementation\",{\"1\":{\"46\":1}}],[\"不变\",{\"1\":{\"306\":1}}],[\"不应该在其他地方提交事务\",{\"1\":{\"301\":1}}],[\"不同的用户会有不同的配置\",{\"1\":{\"311\":1}}],[\"不同的类型标注也会获得不同形式的数据\",{\"1\":{\"302\":1}}],[\"不同的事件也会有不同的事件响应器\",{\"1\":{\"301\":1}}],[\"不同的辅助函数有不同的可选参数\",{\"1\":{\"228\":1}}],[\"不同\",{\"1\":{\"301\":1}}],[\"不要这么做\",{\"1\":{\"301\":1}}],[\"不要忘记还有一段注释\",{\"1\":{\"300\":1}}],[\"不要监听的文件列表\",{\"1\":{\"44\":1,\"52\":1}}],[\"不过此时就要手动管理会话了\",{\"1\":{\"301\":1}}],[\"不过\",{\"1\":{\"278\":1,\"302\":1}}],[\"不启用则会在触发特殊内置选项后仍然将解析结果传递至响应器\",{\"1\":{\"268\":1}}],[\"不使用duplication获得的提示较少\",{\"1\":{\"265\":1}}],[\"不传入时默认为选项或子命令的名称\",{\"1\":{\"252\":1}}],[\"不能在\",{\"1\":{\"250\":1}}],[\"不能使用\",{\"1\":{\"244\":1}}],[\"不能相同\",{\"1\":{\"215\":1}}],[\"不让文档成为用户上手的阻碍\",{\"1\":{\"196\":1}}],[\"不可用的地方\",{\"1\":{\"183\":1}}],[\"不可重复\",{\"1\":{\"96\":1,\"97\":1}}],[\"不符合时应抛出异常\",{\"1\":{\"171\":1}}],[\"不方便区分适配器输出和其它日志\",{\"1\":{\"167\":1}}],[\"不做强制要求\",{\"1\":{\"164\":1}}],[\"不为\",{\"1\":{\"67\":1}}],[\"不支持特殊占位表达式\",{\"1\":{\"96\":1,\"97\":1}}],[\"不支持\",{\"1\":{\"54\":1,\"55\":1}}],[\"不支持创建子进程\",{\"1\":{\"40\":1}}],[\"不推荐开启该配置项\",{\"1\":{\"40\":1,\"48\":1}}],[\"不提供任何收发数据功能\",{\"1\":{\"33\":1}}],[\"警告\",{\"1\":{\"40\":1,\"48\":1,\"134\":1,\"205\":1,\"215\":1}}],[\"ospp\",{\"0\":{\"326\":1}}],[\"os\",{\"1\":{\"311\":4}}],[\"overflow\",{\"1\":{\"290\":1}}],[\"override\",{\"1\":{\"169\":3,\"171\":2,\"172\":1,\"175\":2,\"176\":3,\"177\":13,\"178\":6}}],[\"output\",{\"0\":{\"268\":1},\"1\":{\"264\":1}}],[\"other\",{\"1\":{\"245\":1,\"254\":1}}],[\"origin\",{\"0\":{\"271\":1},\"1\":{\"254\":1}}],[\"origin=option\",{\"1\":{\"265\":2}}],[\"origin=args\",{\"1\":{\"265\":3}}],[\"origin=subcommand\",{\"1\":{\"265\":1}}],[\"origin=\",{\"1\":{\"245\":1}}],[\"orm\",{\"1\":{\"200\":4,\"278\":2,\"280\":5,\"281\":3,\"283\":2,\"284\":2,\"285\":2,\"286\":1,\"297\":1,\"299\":3,\"300\":5,\"301\":7,\"302\":1,\"303\":1,\"305\":2,\"306\":2,\"308\":2,\"309\":1,\"311\":2}}],[\"or\",{\"1\":{\"138\":1,\"246\":1,\"308\":1,\"310\":3}}],[\"op\",{\"1\":{\"300\":5}}],[\"open\",{\"1\":{\"203\":1}}],[\"openeuler\",{\"1\":{\"181\":1,\"193\":1,\"197\":1}}],[\"openapi\",{\"1\":{\"36\":2,\"39\":1}}],[\"opt2\",{\"1\":{\"252\":1}}],[\"opt1\",{\"1\":{\"252\":1}}],[\"optionresult\",{\"1\":{\"252\":2,\"254\":1,\"265\":2}}],[\"option\",{\"0\":{\"252\":1},\"1\":{\"245\":5,\"248\":3,\"252\":9,\"253\":1,\"256\":1,\"257\":1,\"262\":8,\"264\":3,\"265\":5}}],[\"optionstub\",{\"1\":{\"265\":3}}],[\"options=\",{\"1\":{\"245\":1,\"265\":2,\"290\":1}}],[\"options\",{\"0\":{\"290\":1},\"1\":{\"179\":1,\"254\":7,\"256\":1,\"291\":1}}],[\"optional\",{\"1\":{\"111\":1,\"113\":1,\"171\":1,\"249\":1,\"265\":3,\"274\":1}}],[\"opt\",{\"1\":{\"118\":2}}],[\"ok\",{\"1\":{\"96\":1}}],[\"of\",{\"0\":{\"160\":1},\"1\":{\"46\":1,\"160\":1,\"178\":1,\"193\":1,\"197\":1}}],[\"one\",{\"1\":{\"308\":1,\"310\":3}}],[\"onebot\",{\"0\":{\"189\":1,\"190\":1},\"1\":{\"79\":2,\"123\":7,\"172\":1,\"175\":2,\"178\":1,\"183\":2,\"187\":1,\"188\":1,\"190\":2,\"191\":12,\"192\":12,\"199\":1}}],[\"only\",{\"1\":{\"241\":3,\"247\":2,\"250\":1}}],[\"on\",{\"1\":{\"34\":1,\"55\":1,\"69\":6,\"71\":2,\"72\":2,\"73\":2,\"74\":2,\"75\":2,\"76\":2,\"77\":2,\"82\":2,\"84\":1,\"103\":1,\"104\":1,\"105\":1,\"106\":1,\"112\":1,\"113\":1,\"115\":1,\"116\":2,\"125\":1,\"126\":1,\"127\":1,\"171\":2,\"226\":3,\"227\":3,\"228\":2,\"300\":1,\"301\":2,\"305\":2,\"306\":2,\"311\":4}}],[\"说明\",{\"1\":{\"36\":1,\"37\":1,\"38\":1,\"39\":1,\"40\":1,\"41\":1,\"42\":1,\"43\":1,\"44\":1,\"45\":1,\"48\":1,\"49\":1,\"50\":1,\"51\":1,\"52\":1,\"53\":1,\"246\":1}}],[\"||\",{\"1\":{\"311\":4}}],[\"|\",{\"1\":{\"36\":1,\"37\":1,\"38\":1,\"41\":1,\"42\":1,\"43\":1,\"44\":1,\"49\":1,\"50\":1,\"51\":1,\"52\":1,\"86\":3,\"87\":2,\"119\":2,\"148\":12,\"214\":3,\"300\":9}}],[\"自加\",{\"1\":{\"243\":1}}],[\"自研的\",{\"1\":{\"202\":1}}],[\"自动执行命令执行器\",{\"1\":{\"261\":1}}],[\"自动化测试框架\",{\"0\":{\"186\":1},\"1\":{\"186\":2}}],[\"自动化构建和部署\",{\"1\":{\"184\":1}}],[\"自动生成的\",{\"1\":{\"300\":1}}],[\"自动生成\",{\"1\":{\"34\":1,\"300\":1}}],[\"自行处理数据的传输形式\",{\"1\":{\"175\":1}}],[\"自行将数据转为平台所需要的格式\",{\"1\":{\"175\":1}}],[\"自定义类型构造\",{\"1\":{\"237\":1}}],[\"自定义一个\",{\"1\":{\"167\":1}}],[\"自定义插件配置目录\",{\"1\":{\"142\":1}}],[\"自定义插件数据目录\",{\"1\":{\"141\":1}}],[\"自定义插件缓存目录\",{\"1\":{\"140\":1}}],[\"自定义配置目录\",{\"1\":{\"139\":1}}],[\"自定义数据目录\",{\"1\":{\"138\":1}}],[\"自定义缓存目录\",{\"1\":{\"137\":1}}],[\"自定义日志输出\",{\"0\":{\"119\":1}}],[\"自定义\",{\"1\":{\"29\":2}}],[\"where\",{\"1\":{\"302\":2,\"308\":1,\"309\":1}}],[\"while\",{\"1\":{\"97\":1,\"171\":3}}],[\"whitespace=\",{\"1\":{\"75\":1}}],[\"whitespace=true\",{\"1\":{\"75\":1}}],[\"whitespace\",{\"1\":{\"75\":2}}],[\"which\",{\"1\":{\"54\":1}}],[\"wrapper\",{\"1\":{\"167\":3,\"259\":1}}],[\"write\",{\"1\":{\"134\":1}}],[\"wordcloud\",{\"1\":{\"278\":2,\"280\":2,\"281\":3,\"283\":1,\"289\":2}}],[\"work\",{\"1\":{\"171\":1,\"172\":1}}],[\"working\",{\"1\":{\"137\":1,\"138\":1,\"139\":1}}],[\"world\",{\"1\":{\"96\":1,\"100\":1,\"134\":1,\"225\":2,\"233\":2,\"235\":3,\"244\":8,\"261\":4}}],[\"weas\",{\"1\":{\"302\":6}}],[\"wea\",{\"1\":{\"301\":21,\"302\":6}}],[\"weather=\",{\"1\":{\"301\":2}}],[\"weather\",{\"1\":{\"122\":2,\"124\":1,\"125\":4,\"126\":2,\"127\":6,\"214\":3,\"227\":3,\"228\":3,\"299\":16,\"300\":29,\"301\":34,\"302\":20}}],[\"week\",{\"1\":{\"119\":1}}],[\"we\",{\"1\":{\"118\":1}}],[\"webpack\",{\"1\":{\"202\":1}}],[\"webui\",{\"1\":{\"198\":1}}],[\"web\",{\"1\":{\"34\":2,\"187\":1,\"188\":1,\"191\":3,\"192\":3}}],[\"webhook\",{\"1\":{\"29\":1,\"172\":5,\"187\":1,\"188\":1,\"292\":1,\"293\":1}}],[\"websocketclientmixin\",{\"1\":{\"171\":2}}],[\"websocketclosed\",{\"1\":{\"97\":1,\"171\":2}}],[\"websocketserversetup\",{\"1\":{\"95\":1,\"97\":3,\"172\":2}}],[\"websockets\",{\"0\":{\"55\":1},\"1\":{\"55\":1}}],[\"websocket\",{\"0\":{\"97\":1,\"294\":1,\"296\":1},\"1\":{\"29\":6,\"54\":1,\"55\":3,\"56\":1,\"95\":1,\"97\":6,\"171\":9,\"172\":12,\"175\":7,\"195\":1,\"292\":2,\"294\":6}}],[\"warning\",{\"1\":{\"118\":4,\"156\":1,\"174\":1}}],[\"ws\",{\"1\":{\"97\":8,\"171\":6,\"172\":4,\"175\":7,\"294\":7}}],[\"wsgi\",{\"1\":{\"34\":1}}],[\"win\",{\"1\":{\"138\":2,\"139\":2}}],[\"windows\",{\"1\":{\"40\":2,\"48\":1,\"134\":2,\"137\":1,\"206\":1,\"311\":2}}],[\"with\",{\"1\":{\"34\":1,\"55\":1,\"97\":1,\"148\":1,\"171\":1,\"257\":1,\"258\":1,\"293\":3,\"294\":2,\"301\":1,\"305\":1,\"311\":1}}],[\"默认参数字典\",{\"1\":{\"290\":1}}],[\"默认数据库连接\",{\"1\":{\"288\":1}}],[\"默认禁用的内置选项\",{\"1\":{\"256\":1}}],[\"默认是否开启紧凑模式\",{\"1\":{\"256\":1}}],[\"默认是否开启模糊匹配\",{\"1\":{\"256\":1}}],[\"默认是否启用消息缓存\",{\"1\":{\"256\":1}}],[\"默认是否抛出异常\",{\"1\":{\"256\":1}}],[\"默认格式化器类型\",{\"1\":{\"256\":1}}],[\"默认分隔符配置\",{\"1\":{\"256\":1}}],[\"默认前缀配置\",{\"1\":{\"256\":1}}],[\"默认情况下\",{\"1\":{\"244\":1,\"251\":1,\"293\":1}}],[\"默认的内置选项名称\",{\"1\":{\"256\":1}}],[\"默认的日志处理器\",{\"1\":{\"119\":1}}],[\"默认的日志处理器并添加新的日志处理器\",{\"1\":{\"119\":1}}],[\"默认的日志格式为\",{\"1\":{\"119\":1}}],[\"默认的\",{\"1\":{\"118\":1}}],[\"默认不会添加\",{\"1\":{\"81\":1}}],[\"默认状态\",{\"0\":{\"68\":1}}],[\"默认使用\",{\"1\":{\"57\":1,\"256\":1}}],[\"默认值\",{\"1\":{\"36\":1,\"37\":1,\"38\":1,\"39\":1,\"40\":1,\"41\":2,\"42\":2,\"43\":2,\"44\":2,\"45\":1,\"48\":1,\"49\":2,\"50\":2,\"51\":2,\"52\":2,\"53\":1,\"136\":1,\"137\":1,\"138\":1,\"139\":1,\"140\":1,\"141\":1,\"142\":1,\"155\":1,\"156\":1,\"157\":1,\"252\":1,\"268\":1,\"269\":1,\"270\":1,\"271\":1,\"272\":1,\"273\":1,\"274\":1,\"275\":1,\"276\":1,\"277\":1}}],[\"默认\",{\"0\":{\"34\":1},\"1\":{\"156\":1,\"253\":1}}],[\"默认为\",{\"1\":{\"30\":2,\"41\":1,\"42\":1,\"43\":1,\"44\":1,\"49\":1,\"50\":1,\"51\":1,\"52\":1,\"71\":1,\"72\":1,\"73\":1,\"75\":1,\"253\":2,\"257\":1}}],[\"具体如下\",{\"1\":{\"310\":1}}],[\"具体而言\",{\"1\":{\"301\":1}}],[\"具体为\",{\"1\":{\"291\":1}}],[\"具体内容参考事件响应器进阶\",{\"1\":{\"226\":1}}],[\"具体可选配置方式以及配置项详情参考配置\",{\"1\":{\"207\":1}}],[\"具体可以参考以下适配器\",{\"1\":{\"178\":1}}],[\"具体请参考事件类型\",{\"1\":{\"177\":1}}],[\"具体请参考\",{\"1\":{\"174\":1}}],[\"具体请参考安装驱动器\",{\"1\":{\"30\":1}}],[\"具体用法如下\",{\"1\":{\"167\":1}}],[\"具体方法参考\",{\"1\":{\"100\":1}}],[\"具体填写见发布插件章节\",{\"1\":{\"86\":1}}],[\"具体信息参考\",{\"1\":{\"40\":1}}],[\"具有共同命令名称前缀的命令组以及具有共同参数的响应器组\",{\"1\":{\"226\":1}}],[\"具有三个属性\",{\"1\":{\"97\":1}}],[\"具有四个属性\",{\"1\":{\"96\":1}}],[\"具有极佳的编写体验\",{\"1\":{\"34\":1}}],[\"具有以下功能\",{\"1\":{\"29\":1}}],[\"具有交互式功能的命令行工具\",{\"1\":{\"4\":1}}],[\"符号作为内置驱动器模块路径的前缀\",{\"1\":{\"30\":1}}],[\"~fastapi\",{\"1\":{\"30\":1}}],[\"~\",{\"1\":{\"30\":1,\"137\":2,\"138\":2,\"139\":1}}],[\"特性\",{\"1\":{\"262\":1}}],[\"特性实现完整的静态网站生成\",{\"1\":{\"202\":1}}],[\"特殊的键\",{\"1\":{\"249\":1}}],[\"特定的缺失\",{\"1\":{\"190\":1}}],[\"特定的\",{\"1\":{\"190\":1}}],[\"特别是当你会发布插件时\",{\"1\":{\"299\":1}}],[\"特别是对于\",{\"1\":{\"186\":1}}],[\"特别提醒\",{\"1\":{\"252\":1}}],[\"特别的\",{\"1\":{\"30\":1,\"249\":1,\"252\":1}}],[\"特色\",{\"0\":{\"1\":1}}],[\"但不建议使用\",{\"1\":{\"309\":1}}],[\"但不会匹配\",{\"1\":{\"246\":1}}],[\"但覆盖顺序并非显而易见\",{\"1\":{\"291\":1}}],[\"但实际上它需要的是一个\",{\"1\":{\"249\":1}}],[\"但由于平台的兼容性问题\",{\"1\":{\"224\":1}}],[\"但在底层的加载逻辑是一致的\",{\"1\":{\"215\":1}}],[\"但已有不少插件作者改名\",{\"1\":{\"203\":1}}],[\"但因此也增加了插件统一管理的难度\",{\"1\":{\"200\":1}}],[\"但直接使用\",{\"1\":{\"167\":1,\"226\":1}}],[\"但\",{\"1\":{\"123\":1}}],[\"但只能在特定类型驱动器下运行\",{\"1\":{\"94\":1}}],[\"但并不能直接使用\",{\"1\":{\"94\":1}}],[\"但当我们使用了外部插件\",{\"1\":{\"92\":1}}],[\"但是可以注意到它们几乎与\",{\"1\":{\"300\":1}}],[\"但是数据库中并没有对应的表\",{\"1\":{\"300\":1}}],[\"但是现在想要卸载它\",{\"1\":{\"281\":1}}],[\"但是仍需要在非\",{\"1\":{\"247\":1}}],[\"但是允许含有默认值的参数在前\",{\"1\":{\"247\":1}}],[\"但是要注意的是\",{\"1\":{\"130\":1}}],[\"但是这种方式难以控制\",{\"1\":{\"117\":1}}],[\"但是\",{\"1\":{\"91\":1,\"121\":1,\"198\":1,\"203\":1,\"299\":1,\"300\":1,\"301\":1,\"311\":1}}],[\"但是我们也可以自定义事件响应器存储\",{\"1\":{\"57\":1}}],[\"但会提供参数列表\",{\"1\":{\"76\":1}}],[\"但需要安装额外依赖才能使用\",{\"1\":{\"30\":1}}],[\"但混入类驱动器只能为客户端类型\",{\"1\":{\"30\":1}}],[\"但服务端型驱动器仅能选择一个\",{\"1\":{\"30\":1}}],[\"<类名小写>\",{\"1\":{\"299\":1}}],[\"<头部类型>\",{\"1\":{\"283\":1}}],[\"<插件模块名>\",{\"1\":{\"283\":1,\"284\":2,\"285\":2,\"299\":1}}],[\"<迁移\",{\"1\":{\"283\":1,\"284\":2,\"285\":2}}],[\"<key>\",{\"1\":{\"261\":1}}],[\"<abc\",{\"1\":{\"264\":1}}],[\"<a\",{\"1\":{\"252\":1}}],[\"<type\",{\"1\":{\"226\":1}}],[\"<y>\",{\"1\":{\"175\":1}}],[\"<r><bg\",{\"1\":{\"171\":3}}],[\"<red>big<\",{\"1\":{\"118\":1}}],[\"<username>\",{\"1\":{\"137\":1,\"138\":2,\"139\":2}}],[\"<cmd>\",{\"1\":{\"261\":1}}],[\"<current\",{\"1\":{\"137\":1,\"138\":1,\"139\":1}}],[\"<c><u>\",{\"1\":{\"119\":2}}],[\"<lvl>\",{\"1\":{\"119\":2}}],[\"<\",{\"1\":{\"119\":6,\"171\":2,\"175\":1}}],[\"<g>\",{\"1\":{\"119\":2}}],[\"<mixin>\",{\"1\":{\"30\":2}}],[\"<module>\",{\"1\":{\"30\":2}}],[\"<driver>\",{\"1\":{\"30\":2}}],[\"添加成功\",{\"1\":{\"260\":1,\"261\":1}}],[\"添加新自动化流程与维护现有流程困难\",{\"1\":{\"203\":1}}],[\"添加新的日志处理器\",{\"1\":{\"119\":1}}],[\"添加定时任务\",{\"0\":{\"153\":1}}],[\"添加\",{\"1\":{\"118\":2,\"120\":2}}],[\"添加路由规则\",{\"0\":{\"100\":1}}],[\"添加路由\",{\"0\":{\"94\":1}}],[\"添加前缀\",{\"1\":{\"81\":1}}],[\"添加自定义路由\",{\"1\":{\"29\":1}}],[\"添加其他编辑器配置推荐\",{\"1\":{\"11\":1}}],[\"服务器\",{\"1\":{\"158\":1}}],[\"服务器等情形\",{\"1\":{\"29\":1}}],[\"服务端应用时\",{\"1\":{\"293\":1,\"294\":1}}],[\"服务端的功能实现\",{\"1\":{\"224\":1}}],[\"服务端的路由规则\",{\"1\":{\"95\":1}}],[\"服务端\",{\"0\":{\"293\":1,\"294\":1},\"1\":{\"172\":2,\"292\":2}}],[\"服务端通信方式\",{\"0\":{\"172\":1}}],[\"服务端类型的驱动器具有两个属性\",{\"1\":{\"99\":1}}],[\"服务端和\",{\"1\":{\"95\":1}}],[\"服务端驱动器\",{\"1\":{\"33\":1,\"34\":1,\"46\":1}}],[\"服务端型驱动器目前有\",{\"1\":{\"29\":1}}],[\"humanized\",{\"1\":{\"259\":1}}],[\"hydrate\",{\"1\":{\"202\":1}}],[\"has\",{\"1\":{\"177\":3,\"241\":1}}],[\"handle\",{\"1\":{\"96\":2,\"97\":3,\"112\":1,\"113\":1,\"123\":8,\"130\":3,\"172\":4,\"173\":2,\"174\":2,\"175\":1,\"176\":4,\"301\":4,\"302\":3,\"305\":1,\"306\":1}}],[\"handlers=\",{\"1\":{\"120\":1}}],[\"handlers\",{\"1\":{\"69\":1}}],[\"handler\",{\"1\":{\"66\":1,\"97\":2,\"120\":1}}],[\"hh\",{\"1\":{\"119\":2}}],[\"host\",{\"1\":{\"288\":1}}],[\"host=0\",{\"1\":{\"207\":1}}],[\"hour\",{\"1\":{\"153\":1}}],[\"hour=\",{\"1\":{\"153\":1}}],[\"home\",{\"1\":{\"138\":1}}],[\"homepage\",{\"1\":{\"86\":1}}],[\"hook\",{\"1\":{\"101\":1}}],[\"hooking\",{\"1\":{\"101\":1}}],[\"hooks\",{\"1\":{\"92\":1}}],[\"h\",{\"1\":{\"76\":1,\"257\":1,\"264\":1}}],[\"hex\",{\"1\":{\"249\":1}}],[\"head\",{\"1\":{\"283\":4}}],[\"heads\",{\"0\":{\"283\":1},\"1\":{\"280\":1,\"281\":1,\"283\":1}}],[\"headers=\",{\"1\":{\"171\":1,\"172\":1,\"175\":1}}],[\"header\",{\"1\":{\"29\":2,\"245\":1,\"246\":3,\"254\":1}}],[\"heartbeatevent\",{\"1\":{\"177\":1}}],[\"help\",{\"1\":{\"75\":7,\"81\":7,\"246\":2,\"252\":1,\"255\":1,\"256\":2,\"257\":1,\"264\":1}}],[\"hello\",{\"1\":{\"74\":3,\"96\":5,\"100\":1,\"134\":1,\"225\":2,\"233\":2,\"235\":3,\"244\":6,\"261\":4}}],[\"hide\",{\"1\":{\"255\":2}}],[\"hi\",{\"1\":{\"74\":3}}],[\"hints\",{\"1\":{\"34\":1,\"184\":1,\"186\":1,\"187\":1,\"188\":1}}],[\"highlight\",{\"1\":{\"94\":1}}],[\"high\",{\"1\":{\"34\":1}}],[\"https\",{\"1\":{\"148\":1,\"194\":2,\"195\":1,\"196\":3,\"198\":1,\"199\":1,\"200\":1,\"202\":1,\"203\":1,\"204\":1}}],[\"httpserversetup\",{\"1\":{\"95\":1,\"96\":3,\"172\":2}}],[\"http\",{\"0\":{\"96\":1,\"293\":1,\"295\":1},\"1\":{\"29\":4,\"54\":5,\"55\":1,\"56\":2,\"95\":1,\"96\":1,\"148\":1,\"172\":10,\"175\":3,\"187\":1,\"188\":1,\"195\":1,\"224\":1,\"292\":2,\"293\":6}}],[\"httpx\",{\"0\":{\"54\":1},\"1\":{\"7\":1,\"54\":1,\"293\":1}}],[\"ubuntu\",{\"1\":{\"311\":4}}],[\"upgrade\",{\"0\":{\"284\":1},\"1\":{\"280\":1,\"284\":2,\"300\":4,\"311\":2}}],[\"updater\",{\"1\":{\"115\":1,\"116\":2}}],[\"unmatch\",{\"1\":{\"251\":1}}],[\"uninstall\",{\"1\":{\"281\":1}}],[\"union\",{\"1\":{\"176\":2,\"249\":1}}],[\"unix\",{\"1\":{\"137\":1,\"138\":1,\"139\":1}}],[\"unimessage\",{\"1\":{\"84\":1}}],[\"utf\",{\"1\":{\"219\":1,\"220\":1}}],[\"utils\",{\"1\":{\"167\":1,\"178\":1}}],[\"uy\",{\"1\":{\"203\":1}}],[\"u><\",{\"1\":{\"119\":2}}],[\"usageerror\",{\"1\":{\"300\":1}}],[\"usage\",{\"1\":{\"255\":1}}],[\"usage=\",{\"1\":{\"86\":1}}],[\"uses\",{\"1\":{\"311\":4}}],[\"use\",{\"0\":{\"136\":1,\"269\":1,\"271\":1,\"272\":1},\"1\":{\"94\":1,\"136\":1,\"137\":1,\"138\":1,\"139\":1}}],[\"users\",{\"1\":{\"137\":1,\"138\":1,\"139\":1}}],[\"username\",{\"1\":{\"130\":2,\"288\":1}}],[\"user\",{\"1\":{\"22\":2,\"116\":5,\"122\":1,\"126\":1,\"130\":1,\"139\":1,\"177\":7,\"244\":2,\"283\":1,\"311\":4}}],[\"uvicorn\",{\"1\":{\"40\":6,\"41\":1,\"42\":1,\"43\":1,\"44\":1,\"48\":1,\"49\":1,\"50\":1,\"51\":1,\"52\":1}}],[\"url=dialect+driver\",{\"1\":{\"288\":1}}],[\"url=api\",{\"1\":{\"175\":1}}],[\"url=\",{\"1\":{\"171\":1}}],[\"url\",{\"0\":{\"288\":1},\"1\":{\"29\":2,\"96\":2,\"97\":2,\"171\":3,\"172\":4,\"245\":10,\"249\":1,\"265\":9,\"288\":1,\"289\":2,\"291\":1,\"311\":2}}],[\"轮询\",{\"1\":{\"29\":1}}],[\"fetch\",{\"0\":{\"277\":1}}],[\"featured\",{\"1\":{\"54\":1}}],[\"fxyz\",{\"1\":{\"262\":1}}],[\"fdef\",{\"1\":{\"262\":1}}],[\"f|\",{\"1\":{\"252\":1}}],[\"f8bbd0>error\",{\"1\":{\"171\":2}}],[\"f8bbd0><\",{\"1\":{\"171\":3}}],[\"f8bbd0>websocket\",{\"1\":{\"171\":1}}],[\"f\",{\"1\":{\"122\":1,\"171\":2,\"172\":2,\"174\":1,\"175\":1,\"246\":1,\"252\":3,\"262\":1,\"300\":2,\"301\":6,\"302\":3}}],[\"first\",{\"1\":{\"243\":2,\"300\":4}}],[\"field\",{\"1\":{\"148\":2,\"247\":1,\"251\":2}}],[\"finish\",{\"1\":{\"122\":1,\"123\":2,\"130\":4,\"301\":4}}],[\"finally\",{\"1\":{\"97\":1,\"171\":1}}],[\"filter=default\",{\"1\":{\"119\":1}}],[\"filter\",{\"1\":{\"119\":2}}],[\"filehost\",{\"0\":{\"276\":1}}],[\"file\",{\"1\":{\"90\":1,\"134\":14,\"179\":1,\"245\":1,\"265\":4}}],[\"future\",{\"1\":{\"300\":1}}],[\"fuzy\",{\"1\":{\"263\":2}}],[\"fuzzy\",{\"1\":{\"255\":2,\"256\":1,\"259\":1,\"261\":1,\"263\":3}}],[\"func=ws\",{\"1\":{\"97\":1}}],[\"func=hello\",{\"1\":{\"96\":1}}],[\"func\",{\"1\":{\"96\":1,\"97\":1}}],[\"function\",{\"1\":{\"93\":1}}],[\"fullmatch\",{\"1\":{\"73\":5}}],[\"fully\",{\"1\":{\"54\":1}}],[\"found\",{\"1\":{\"320\":1}}],[\"foo|\",{\"1\":{\"252\":3}}],[\"foo|bar|baz\",{\"1\":{\"249\":1}}],[\"foobar\",{\"1\":{\"246\":1}}],[\"foobaz\",{\"1\":{\"246\":3}}],[\"foo\",{\"1\":{\"115\":2,\"116\":4,\"127\":2,\"212\":3,\"213\":3,\"214\":1,\"240\":1,\"246\":19,\"248\":7,\"249\":11,\"252\":6,\"254\":12,\"255\":1,\"257\":5,\"262\":1,\"264\":2,\"266\":3,\"273\":1}}],[\"focus\",{\"1\":{\"55\":1}}],[\"formatter\",{\"1\":{\"256\":1,\"257\":2}}],[\"format=default\",{\"1\":{\"119\":1}}],[\"format=\",{\"1\":{\"119\":1}}],[\"format\",{\"1\":{\"119\":2,\"244\":6}}],[\"force\",{\"1\":{\"75\":4}}],[\"for\",{\"1\":{\"34\":1,\"54\":2,\"55\":1,\"56\":1,\"233\":1,\"239\":2,\"302\":2,\"310\":14}}],[\"forward\",{\"1\":{\"29\":1,\"171\":2,\"174\":1}}],[\"flush\",{\"1\":{\"306\":1}}],[\"flag\",{\"1\":{\"262\":1}}],[\"flag|\",{\"1\":{\"262\":1}}],[\"flags=re\",{\"1\":{\"77\":2}}],[\"flask\",{\"1\":{\"46\":3}}],[\"float\",{\"1\":{\"42\":1,\"50\":1,\"148\":1,\"249\":2}}],[\"fail\",{\"1\":{\"311\":2}}],[\"failed\",{\"1\":{\"300\":1}}],[\"fake\",{\"1\":{\"293\":8,\"294\":7}}],[\"fabc\",{\"1\":{\"262\":1}}],[\"factory=list\",{\"1\":{\"148\":2}}],[\"false\",{\"1\":{\"40\":1,\"48\":1,\"71\":1,\"72\":1,\"73\":1,\"75\":1,\"136\":1,\"148\":3,\"177\":1,\"246\":1,\"249\":1,\"253\":1,\"255\":1,\"261\":1,\"268\":1,\"269\":1,\"270\":1,\"271\":1,\"272\":1,\"275\":1,\"276\":1,\"277\":1,\"311\":2}}],[\"fast\",{\"1\":{\"34\":1,\"311\":2}}],[\"fastapi\",{\"0\":{\"34\":1,\"35\":1},\"1\":{\"30\":1,\"34\":3,\"36\":1,\"37\":1,\"38\":1,\"39\":1,\"40\":1,\"45\":1,\"100\":5,\"206\":1}}],[\"framework\",{\"1\":{\"34\":1}}],[\"from\",{\"1\":{\"14\":1,\"15\":1,\"16\":1,\"31\":1,\"58\":1,\"59\":1,\"71\":2,\"72\":2,\"73\":2,\"74\":2,\"75\":2,\"76\":3,\"77\":2,\"78\":1,\"79\":2,\"81\":2,\"82\":2,\"86\":2,\"90\":1,\"92\":1,\"93\":2,\"94\":2,\"96\":2,\"97\":2,\"100\":1,\"103\":1,\"104\":1,\"105\":1,\"106\":1,\"108\":2,\"109\":1,\"110\":2,\"111\":1,\"112\":2,\"113\":2,\"116\":3,\"118\":1,\"119\":2,\"120\":1,\"122\":1,\"123\":3,\"125\":2,\"126\":2,\"127\":3,\"130\":4,\"134\":2,\"152\":2,\"153\":2,\"167\":2,\"168\":1,\"169\":6,\"171\":5,\"172\":2,\"173\":1,\"174\":5,\"175\":4,\"176\":7,\"177\":4,\"178\":5,\"179\":1,\"208\":1,\"216\":1,\"219\":1,\"220\":1,\"227\":1,\"228\":2,\"233\":1,\"235\":1,\"237\":2,\"238\":1,\"242\":1,\"244\":5,\"245\":1,\"246\":1,\"248\":2,\"249\":2,\"252\":1,\"255\":1,\"257\":1,\"258\":1,\"260\":1,\"261\":2,\"262\":3,\"263\":1,\"264\":1,\"265\":3,\"266\":1,\"293\":3,\"294\":2,\"299\":3,\"300\":3,\"301\":8,\"302\":5,\"305\":4,\"306\":4,\"308\":4,\"309\":3}}],[\"如指定需要传入参数名称\",{\"1\":{\"263\":1}}],[\"如此该命令头会匹配对应的类型\",{\"1\":{\"246\":1}}],[\"如根据用户\",{\"1\":{\"192\":1}}],[\"如无字符串嵌入格式可直接返回文本类型\",{\"1\":{\"178\":1}}],[\"如无配置类可不填\",{\"1\":{\"86\":1}}],[\"如何更好地编写一个跨平台的插件\",{\"1\":{\"123\":1}}],[\"如何对不同平台的事件进行不同的处理\",{\"1\":{\"123\":1}}],[\"如何对私聊和群聊消息进行不同的处理\",{\"1\":{\"123\":1}}],[\"如何根据不同平台事件类型进行不同的处理\",{\"1\":{\"122\":1}}],[\"如何安装驱动器请参考安装驱动器\",{\"1\":{\"28\":1}}],[\"如下所示\",{\"1\":{\"86\":1}}],[\"如需从头匹配请使用\",{\"1\":{\"77\":1}}],[\"如\",{\"1\":{\"29\":1,\"30\":1,\"40\":1,\"91\":1,\"103\":1,\"104\":1,\"115\":1,\"116\":1,\"123\":1,\"133\":1,\"134\":1,\"144\":1,\"150\":1,\"196\":1,\"203\":1,\"252\":1,\"261\":1,\"263\":1,\"273\":1,\"278\":2}}],[\"如果项目还需要考虑跨平台和跨\",{\"1\":{\"311\":1}}],[\"如果不指定\",{\"1\":{\"284\":1}}],[\"如果不知道该选择哪个驱动器\",{\"1\":{\"28\":1}}],[\"如果一条消息中包含\",{\"1\":{\"227\":1}}],[\"如果使用虚拟环境\",{\"1\":{\"209\":1}}],[\"如果可能\",{\"1\":{\"191\":1,\"192\":1}}],[\"如果想要更深入地学习关于\",{\"1\":{\"297\":1}}],[\"如果想要将适配器发布到\",{\"1\":{\"180\":1}}],[\"如果想要输出日志到文件\",{\"1\":{\"119\":1}}],[\"如果采用\",{\"1\":{\"175\":1}}],[\"如果通过\",{\"1\":{\"175\":1}}],[\"如果在之前的创建项目章节中手动创建了相关文件\",{\"1\":{\"214\":1}}],[\"如果在之前的快速上手章节中已经使用\",{\"1\":{\"214\":1}}],[\"如果在安装或者开发\",{\"1\":{\"158\":1}}],[\"如果在开启该功能后\",{\"1\":{\"40\":1}}],[\"如果所有的检查都通过\",{\"1\":{\"124\":1}}],[\"如果三者任一类型注解不匹配\",{\"1\":{\"123\":1}}],[\"如果基类就能满足你的需求\",{\"1\":{\"122\":1}}],[\"如果我们不满足于基类能获得的信息\",{\"1\":{\"122\":1}}],[\"如果我们希望响应多个用户的消息\",{\"1\":{\"116\":1}}],[\"如果我们需要多平台支持\",{\"1\":{\"14\":1}}],[\"如果希望实现更复杂的会话功能\",{\"1\":{\"116\":1}}],[\"如果希望在会话过程中的不同阶段响应不同类型的事件\",{\"1\":{\"115\":1}}],[\"如果希望接收一个特定类型的消息\",{\"1\":{\"115\":1}}],[\"如果没有\",{\"1\":{\"93\":1}}],[\"如果没有事先声明或加载插件\",{\"1\":{\"92\":1}}],[\"如果你曾经使用过\",{\"1\":{\"301\":1}}],[\"如果你后续使用了\",{\"1\":{\"209\":1}}],[\"如果你使用自定义的入口文件bot\",{\"1\":{\"215\":1}}],[\"如果你使用\",{\"1\":{\"208\":1,\"215\":1}}],[\"如果你想要了解\",{\"1\":{\"205\":1}}],[\"如果你想要开发自己的适配器\",{\"1\":{\"27\":1}}],[\"如果你已经有一个插件\",{\"1\":{\"90\":1}}],[\"如果未设置\",{\"1\":{\"81\":1}}],[\"如果匹配成功\",{\"1\":{\"76\":1}}],[\"如果需要在当前消息序列后直接拼接新的消息段\",{\"1\":{\"243\":1}}],[\"如果需要自定义日志格式\",{\"1\":{\"119\":1}}],[\"如果需要输出彩色日志\",{\"1\":{\"118\":1}}],[\"如果需要记录\",{\"1\":{\"118\":1}}],[\"如果需要获取所有当前声明的插件名称\",{\"1\":{\"87\":1}}],[\"如果需要获取指定适配器连接的\",{\"1\":{\"16\":1}}],[\"如果需要为\",{\"1\":{\"81\":1}}],[\"如果需要严格匹配命令与参数间的空白符\",{\"1\":{\"75\":1}}],[\"如果\",{\"1\":{\"67\":1,\"219\":1,\"220\":1,\"244\":1}}],[\"如果阻断为\",{\"1\":{\"66\":1}}],[\"如果响应器的优先级相同\",{\"1\":{\"65\":1}}],[\"如果响应规则检查通过\",{\"1\":{\"64\":1}}],[\"如果权限检查通过\",{\"1\":{\"63\":1}}],[\"如果有其他类型的事件需要响应\",{\"1\":{\"62\":1}}],[\"如果类型为空字符串\",{\"1\":{\"62\":1}}],[\"如果为字符串\",{\"1\":{\"75\":1}}],[\"如果为\",{\"1\":{\"36\":1,\"37\":1,\"38\":1,\"67\":1,\"75\":1}}],[\"如果事件没有相关\",{\"1\":{\"177\":1}}],[\"如果事件没有用户\",{\"1\":{\"177\":1}}],[\"如果事件非消息类型事件\",{\"1\":{\"177\":1}}],[\"如果事件不包含消息\",{\"1\":{\"25\":1}}],[\"如果事件包含消息\",{\"1\":{\"24\":1}}],[\"如果省略\",{\"1\":{\"16\":1}}],[\"提高代码可读性和书写效率\",{\"1\":{\"226\":1}}],[\"提高机器人的便携性\",{\"1\":{\"187\":1,\"188\":1}}],[\"提取消息纯文本字符串\",{\"1\":{\"238\":1}}],[\"提取\",{\"1\":{\"225\":1}}],[\"提升用户体验\",{\"1\":{\"203\":1}}],[\"提升页面的无障碍访问性\",{\"1\":{\"202\":1}}],[\"提升现有\",{\"1\":{\"187\":1,\"188\":1}}],[\"提供基本的机器人功能\",{\"1\":{\"224\":1}}],[\"提供低代码编程支持\",{\"1\":{\"204\":1}}],[\"提供用户修改信息的处理方式\",{\"1\":{\"203\":1}}],[\"提供模型迁移与管理功能\",{\"1\":{\"200\":1}}],[\"提供关系模型定义功能\",{\"1\":{\"200\":1}}],[\"提供一个项目管理面板服务\",{\"1\":{\"198\":1}}],[\"提供商\",{\"1\":{\"183\":1}}],[\"提供的加载插件方法前\",{\"1\":{\"92\":1}}],[\"提供的\",{\"1\":{\"36\":1,\"37\":1,\"38\":1,\"39\":1,\"40\":1,\"167\":1,\"175\":1}}],[\"提供了强大且灵活的依赖注入\",{\"1\":{\"303\":1}}],[\"提供了预制的几类\",{\"1\":{\"253\":1}}],[\"提供了多种功能各异的辅助函数\",{\"1\":{\"226\":1}}],[\"提供了多种\",{\"1\":{\"170\":1}}],[\"提供了多种获取插件对象的方法\",{\"1\":{\"87\":1}}],[\"提供了一个便捷而高效的解决方案\",{\"1\":{\"123\":1}}],[\"提供了一个\",{\"1\":{\"120\":1}}],[\"提供了一种方法来确保我们依赖的插件已经被正确加载\",{\"1\":{\"93\":1}}],[\"提供了两种响应器组\",{\"1\":{\"80\":1}}],[\"提供了\",{\"1\":{\"15\":1,\"132\":1,\"143\":1}}],[\"提供了使用便捷\",{\"1\":{\"4\":1}}],[\"提示\",{\"1\":{\"28\":2,\"60\":1,\"70\":1,\"77\":1,\"123\":1,\"134\":1,\"164\":1,\"166\":1,\"208\":1,\"219\":1,\"220\":1,\"227\":1,\"228\":1,\"246\":1,\"248\":1,\"249\":1,\"250\":1}}],[\"驱动器提供了多种方法来帮助适配器进行网络通信\",{\"1\":{\"292\":1}}],[\"驱动器商店\",{\"1\":{\"206\":1}}],[\"驱动器包名可以在\",{\"1\":{\"206\":1}}],[\"驱动器添加路由规则\",{\"1\":{\"94\":1}}],[\"驱动器配置格式采用特殊语法\",{\"1\":{\"30\":1}}],[\"驱动器的上层\",{\"1\":{\"224\":1}}],[\"驱动器的配置方法已经在配置章节中简单进行了介绍\",{\"1\":{\"30\":1}}],[\"驱动器的选择通常与机器人所使用的协议适配器相关\",{\"1\":{\"28\":1}}],[\"驱动器类型大体上可以分为两种\",{\"1\":{\"29\":1}}],[\"驱动器类型\",{\"0\":{\"29\":1}}],[\"驱动器\",{\"1\":{\"28\":1,\"195\":2,\"224\":1}}],[\"欢迎感兴趣的同学通过\",{\"1\":{\"197\":1,\"201\":1}}],[\"欢迎感兴趣的同学加入\",{\"1\":{\"193\":1}}],[\"欢迎感兴趣的同学在上面给出的活动官网报名\",{\"1\":{\"181\":1}}],[\"欢迎参与我们的社区讨论\",{\"1\":{\"158\":1}}],[\"欢迎将你的作品分享到插件商店\",{\"1\":{\"116\":1}}],[\"欢迎通过商店发布你的适配器\",{\"1\":{\"27\":1}}],[\"欢迎提交\",{\"1\":{\"11\":1}}],[\"开启\",{\"1\":{\"291\":1}}],[\"开启该功能后\",{\"1\":{\"40\":1}}],[\"开头的十六进制字符串\",{\"1\":{\"249\":1}}],[\"开头的消息进行响应\",{\"1\":{\"227\":1}}],[\"开头的消息\",{\"1\":{\"75\":2}}],[\"开始\",{\"1\":{\"227\":1}}],[\"开始视为与机器人有关\",{\"1\":{\"26\":1}}],[\"开源之夏\",{\"1\":{\"193\":1,\"197\":1,\"201\":1}}],[\"开源软件供应链点亮计划\",{\"1\":{\"181\":1}}],[\"开发过程中\",{\"1\":{\"300\":1}}],[\"开发插件有一个基本的认识\",{\"1\":{\"297\":1}}],[\"开发者指南内容较多\",{\"1\":{\"297\":1}}],[\"开发者指南\",{\"0\":{\"297\":1},\"1\":{\"319\":1}}],[\"开发者可以根据需要进行合适的测试\",{\"1\":{\"179\":1}}],[\"开发相关知识\",{\"1\":{\"187\":1,\"188\":1}}],[\"开发\",{\"1\":{\"151\":1,\"191\":1,\"192\":1,\"196\":1,\"203\":1}}],[\"开发的\",{\"1\":{\"149\":1}}],[\"开箱即用\",{\"0\":{\"4\":1}}],[\"或分块\",{\"1\":{\"310\":1}}],[\"或全部\",{\"1\":{\"310\":1}}],[\"或元组\",{\"1\":{\"310\":1}}],[\"或异步迭代器\",{\"1\":{\"310\":1}}],[\"或时间戳\",{\"1\":{\"249\":1}}],[\"或不在指定的值中\",{\"1\":{\"248\":1}}],[\"或适配器自定义类型的参数\",{\"1\":{\"235\":1}}],[\"或\",{\"1\":{\"226\":1,\"240\":1,\"246\":12,\"248\":1,\"249\":2,\"252\":1,\"264\":2}}],[\"或其它\",{\"1\":{\"184\":1}}],[\"或通用的\",{\"1\":{\"183\":1}}],[\"或通过\",{\"1\":{\"181\":1,\"193\":1}}],[\"或一系列字符串\",{\"1\":{\"71\":1,\"72\":1,\"73\":1,\"74\":1}}],[\"或以\",{\"1\":{\"26\":1,\"227\":1}}],[\"或者在使用过程中遇到了问题\",{\"1\":{\"297\":1}}],[\"或者标识符\",{\"1\":{\"248\":1}}],[\"或者有新奇的点子\",{\"1\":{\"158\":1}}],[\"或者修改\",{\"1\":{\"123\":1}}],[\"或者为其他\",{\"1\":{\"120\":1}}],[\"或者使用自加\",{\"1\":{\"243\":1}}],[\"或者使用\",{\"1\":{\"89\":1,\"233\":1}}],[\"或者通过模块路径获取插件对象\",{\"1\":{\"87\":1}}],[\"或者通过\",{\"1\":{\"86\":1}}],[\"或者一系列类型\",{\"1\":{\"79\":1}}],[\"或者\",{\"1\":{\"16\":1,\"71\":1,\"72\":1,\"73\":1,\"74\":1,\"75\":1,\"234\":1,\"299\":1}}],[\"或者向项目\",{\"1\":{\"10\":1}}],[\"则\",{\"1\":{\"261\":2}}],[\"则指令\",{\"1\":{\"261\":1}}],[\"则未知参数将作为名为\",{\"1\":{\"255\":1}}],[\"则命令名称为\",{\"1\":{\"252\":1}}],[\"则命令与参数间必须有且与给定字符串一致的空白符\",{\"1\":{\"75\":1}}],[\"则命令与参数间必须有任意个数的空白符\",{\"1\":{\"75\":1}}],[\"则读取里面的表达式\",{\"1\":{\"246\":1}}],[\"则抛出异常\",{\"1\":{\"177\":3}}],[\"则需要通过\",{\"1\":{\"175\":1}}],[\"则事件会被处理\",{\"1\":{\"124\":1}}],[\"则会将所有分支升级到最新版本\",{\"1\":{\"284\":1}}],[\"则会进行进一步的参数解析\",{\"1\":{\"76\":1}}],[\"则会产生异常\",{\"1\":{\"25\":1}}],[\"则在该时间点后\",{\"1\":{\"67\":1}}],[\"则在该响应器被触发后\",{\"1\":{\"66\":1}}],[\"则该响应器在被触发后会被自动销毁\",{\"1\":{\"67\":1}}],[\"则按照响应器的注册顺序进行触发\",{\"1\":{\"65\":1}}],[\"则触发该响应器\",{\"1\":{\"64\":1}}],[\"则执行响应规则检查\",{\"1\":{\"63\":1}}],[\"则响应器将会响应所有类型的事件\",{\"1\":{\"62\":1}}],[\"则不提供\",{\"1\":{\"36\":1,\"37\":1,\"38\":1}}],[\"则可以通过该方法获取\",{\"1\":{\"24\":1}}],[\"频道等诸多平台的适配支持\",{\"1\":{\"199\":1}}],[\"频道\",{\"1\":{\"23\":1,\"158\":1,\"175\":1}}],[\"latest\",{\"1\":{\"311\":6}}],[\"labels\",{\"1\":{\"300\":1}}],[\"label\",{\"1\":{\"300\":2,\"316\":1,\"317\":1,\"318\":1,\"319\":1}}],[\"last\",{\"1\":{\"300\":1}}],[\"languageserver\",{\"1\":{\"10\":1}}],[\"language\",{\"1\":{\"10\":2}}],[\"lt\",{\"1\":{\"246\":2}}],[\"len\",{\"1\":{\"233\":1}}],[\"level=\",{\"1\":{\"119\":1}}],[\"level=0\",{\"1\":{\"119\":1}}],[\"level\",{\"0\":{\"156\":1},\"1\":{\"118\":3,\"119\":3}}],[\"lvl>\",{\"1\":{\"119\":2}}],[\"localhost\",{\"1\":{\"289\":1,\"311\":4}}],[\"locals\",{\"1\":{\"148\":1}}],[\"localstore\",{\"0\":{\"136\":1,\"137\":1,\"138\":1,\"139\":1,\"140\":1,\"141\":1,\"142\":1},\"1\":{\"132\":1,\"133\":2,\"134\":4,\"136\":1,\"137\":2,\"138\":2,\"139\":2,\"140\":1,\"141\":1,\"142\":1,\"204\":2}}],[\"local\",{\"1\":{\"137\":1,\"138\":2,\"139\":1}}],[\"location=location\",{\"1\":{\"301\":2}}],[\"location=\",{\"1\":{\"301\":1}}],[\"location\",{\"1\":{\"122\":4,\"299\":5,\"300\":7,\"301\":15,\"302\":4}}],[\"loader\",{\"1\":{\"202\":1}}],[\"loaded\",{\"1\":{\"87\":1}}],[\"load\",{\"1\":{\"90\":1,\"92\":1,\"208\":3,\"214\":2,\"216\":2,\"217\":1,\"218\":1,\"219\":3,\"220\":3,\"221\":2,\"222\":1}}],[\"logging\",{\"0\":{\"120\":1},\"1\":{\"120\":5}}],[\"logger\",{\"1\":{\"118\":14,\"119\":6,\"120\":3,\"167\":5}}],[\"loguruhandler\",{\"1\":{\"120\":5}}],[\"loguru\",{\"1\":{\"117\":1,\"118\":1,\"119\":1,\"120\":1,\"177\":1}}],[\"log\",{\"0\":{\"156\":1,\"167\":1},\"1\":{\"21\":2,\"118\":3,\"119\":5,\"120\":1,\"167\":10,\"171\":3,\"174\":3,\"175\":1}}],[\"literal\",{\"1\":{\"249\":1,\"274\":1}}],[\"libonebot\",{\"0\":{\"191\":1,\"192\":1},\"1\":{\"191\":3,\"192\":3}}],[\"library\",{\"1\":{\"55\":1,\"86\":1,\"137\":1,\"138\":1}}],[\"linux\",{\"1\":{\"134\":1,\"206\":1,\"311\":2}}],[\"line\",{\"1\":{\"94\":1}}],[\"list\",{\"1\":{\"41\":1,\"43\":1,\"44\":1,\"49\":1,\"51\":1,\"52\":1,\"58\":1,\"148\":2,\"231\":2,\"233\":2,\"235\":1,\"239\":1,\"249\":2,\"259\":1,\"261\":2,\"262\":1,\"273\":1}}],[\"用来提供更好的自动补全\",{\"1\":{\"265\":1}}],[\"用于处理平台\",{\"1\":{\"294\":1}}],[\"用于接收平台\",{\"1\":{\"293\":1}}],[\"用于告知解析器该参数为一个\",{\"1\":{\"250\":1}}],[\"用于告知解析器该参数可以接受多个值\",{\"1\":{\"250\":1}}],[\"用于无平台适配接入\",{\"1\":{\"195\":1}}],[\"用于日志打印\",{\"1\":{\"177\":2}}],[\"用于日志记录\",{\"1\":{\"21\":1}}],[\"用于将\",{\"1\":{\"120\":1}}],[\"用于收集帮助信息等\",{\"1\":{\"85\":1}}],[\"用于指定默认值\",{\"1\":{\"250\":1}}],[\"用于指定是否忽略大小写\",{\"1\":{\"71\":1,\"72\":1,\"73\":1}}],[\"用于指定响应器的默认状态\",{\"1\":{\"68\":1}}],[\"用于指定响应器的过期时间\",{\"1\":{\"67\":1}}],[\"用于指定响应器的优先级\",{\"1\":{\"65\":1}}],[\"用于指定响应器是否为临时响应器\",{\"1\":{\"67\":1}}],[\"用于指定响应器是否阻断事件的传播\",{\"1\":{\"66\":1}}],[\"用于在与其他驱动器配合使用时加载\",{\"1\":{\"30\":1}}],[\"用户指南\",{\"0\":{\"278\":1}}],[\"用户名作为插件作者名\",{\"1\":{\"203\":1}}],[\"用户请求提交插件到商店时进行自动化检测\",{\"1\":{\"203\":1}}],[\"用户上手与深入教程设计\",{\"0\":{\"196\":1}}],[\"用户提供一套易用便捷\",{\"1\":{\"186\":1}}],[\"用户可以向\",{\"1\":{\"29\":1}}],[\"用户无需编写任何代码\",{\"1\":{\"0\":1}}],[\"db\",{\"1\":{\"311\":14}}],[\"duplication=mydup\",{\"1\":{\"265\":1}}],[\"duplication\",{\"0\":{\"265\":1},\"1\":{\"265\":7}}],[\"dump\",{\"1\":{\"177\":2}}],[\"d+\",{\"1\":{\"246\":3,\"249\":1,\"260\":2}}],[\"drop\",{\"1\":{\"300\":3}}],[\"draft\",{\"1\":{\"203\":1}}],[\"drivers\",{\"0\":{\"334\":1},\"1\":{\"94\":1,\"96\":1,\"97\":1,\"169\":1,\"171\":1,\"172\":1,\"175\":1}}],[\"driver=~websockets\",{\"1\":{\"55\":1}}],[\"driver=~httpx\",{\"1\":{\"54\":1}}],[\"driver=~httpx+~websockets\",{\"1\":{\"30\":1}}],[\"driver=~quart\",{\"1\":{\"46\":1}}],[\"driver=~none\",{\"1\":{\"33\":1}}],[\"driver=~aiohttp\",{\"1\":{\"30\":1,\"56\":1}}],[\"driver=~fastapi+~httpx+~websockets\",{\"1\":{\"30\":1}}],[\"driver=~fastapi\",{\"1\":{\"30\":1,\"34\":1}}],[\"driver\",{\"1\":{\"14\":3,\"28\":1,\"30\":2,\"31\":4,\"94\":2,\"96\":4,\"97\":4,\"103\":4,\"104\":4,\"105\":4,\"106\":4,\"169\":4,\"170\":1,\"171\":9,\"172\":7,\"175\":2,\"208\":3,\"224\":1}}],[\"days=1\",{\"1\":{\"153\":1}}],[\"day\",{\"1\":{\"153\":2}}],[\"database\",{\"0\":{\"288\":1,\"329\":1},\"1\":{\"288\":2,\"291\":1,\"311\":4}}],[\"data=\",{\"1\":{\"233\":2,\"244\":6}}],[\"data=data\",{\"1\":{\"176\":1}}],[\"data=platform\",{\"1\":{\"175\":1}}],[\"data\",{\"0\":{\"138\":1,\"141\":1},\"1\":{\"97\":2,\"112\":1,\"113\":1,\"134\":9,\"138\":5,\"139\":2,\"141\":2,\"171\":1,\"175\":10,\"176\":2,\"233\":1,\"237\":2,\"254\":1}}],[\"datetime\",{\"1\":{\"67\":1,\"249\":2}}],[\"dsn>\",{\"1\":{\"147\":1}}],[\"dsn=<your\",{\"1\":{\"147\":1}}],[\"dsn\",{\"0\":{\"146\":1},\"1\":{\"146\":2,\"147\":1,\"148\":1}}],[\"d\",{\"1\":{\"122\":1,\"246\":1}}],[\"ddl\",{\"1\":{\"300\":1}}],[\"dd\",{\"1\":{\"119\":2}}],[\"down\",{\"1\":{\"300\":1}}],[\"downgrade\",{\"0\":{\"285\":1},\"1\":{\"281\":1,\"285\":2,\"300\":3}}],[\"done\",{\"1\":{\"171\":1}}],[\"doesn\",{\"1\":{\"171\":1,\"172\":1}}],[\"docusaurus\",{\"1\":{\"202\":6}}],[\"documents\",{\"1\":{\"138\":1,\"139\":1}}],[\"docstring\",{\"1\":{\"184\":1}}],[\"docs\",{\"1\":{\"148\":1}}],[\"dotenv\",{\"1\":{\"147\":1,\"207\":2}}],[\"do\",{\"1\":{\"97\":1,\"103\":1,\"104\":1,\"105\":1,\"106\":1,\"108\":1,\"109\":1,\"110\":1,\"111\":1,\"263\":1}}],[\"dirs\",{\"1\":{\"214\":2,\"219\":2,\"220\":2}}],[\"dir=\",{\"1\":{\"137\":1,\"138\":1,\"139\":1,\"140\":1,\"141\":1,\"142\":1}}],[\"directory>\",{\"1\":{\"137\":1,\"138\":1,\"139\":1}}],[\"dir\",{\"0\":{\"137\":1,\"138\":1,\"139\":1,\"140\":1,\"141\":1,\"142\":1},\"1\":{\"134\":6,\"139\":1}}],[\"diagnose=true\",{\"1\":{\"119\":1}}],[\"disable\",{\"1\":{\"256\":1}}],[\"discord\",{\"0\":{\"199\":1},\"1\":{\"158\":1,\"199\":4}}],[\"disconnect\",{\"1\":{\"106\":1,\"173\":3,\"293\":1}}],[\"dist\",{\"1\":{\"45\":1,\"53\":1}}],[\"dict\",{\"1\":{\"68\":1,\"112\":1,\"113\":1,\"157\":1,\"174\":3,\"249\":2}}],[\"demoextension\",{\"1\":{\"273\":1}}],[\"delete\",{\"1\":{\"261\":1}}],[\"delete=true\",{\"1\":{\"261\":1}}],[\"dest=\",{\"1\":{\"265\":3}}],[\"dest\",{\"1\":{\"252\":1}}],[\"description=\",{\"1\":{\"86\":1}}],[\"description\",{\"1\":{\"20\":2,\"177\":1,\"255\":1}}],[\"developer\",{\"0\":{\"325\":1}}],[\"dev\",{\"1\":{\"181\":1,\"193\":1,\"197\":1,\"201\":1}}],[\"dependencies\",{\"0\":{\"333\":1},\"1\":{\"311\":2}}],[\"dependent\",{\"1\":{\"115\":1,\"116\":1}}],[\"depends\",{\"1\":{\"123\":1,\"300\":1,\"301\":2,\"302\":5,\"305\":2,\"306\":2,\"308\":2,\"309\":2}}],[\"debug\",{\"1\":{\"118\":2,\"148\":1,\"156\":3,\"167\":2,\"175\":1,\"289\":1,\"291\":1}}],[\"defined\",{\"1\":{\"138\":1}}],[\"def\",{\"1\":{\"96\":1,\"97\":1,\"100\":1,\"103\":1,\"104\":1,\"105\":1,\"106\":1,\"108\":1,\"109\":1,\"110\":1,\"111\":1,\"112\":1,\"113\":1,\"115\":1,\"116\":2,\"122\":1,\"123\":4,\"125\":1,\"126\":2,\"127\":1,\"130\":5,\"153\":2,\"169\":2,\"171\":5,\"172\":4,\"173\":2,\"174\":2,\"175\":1,\"176\":3,\"177\":12,\"178\":5,\"261\":1,\"262\":1,\"293\":2,\"294\":1,\"300\":2,\"301\":7,\"302\":4,\"305\":2,\"306\":2,\"308\":2,\"309\":2,\"310\":12}}],[\"default=0\",{\"1\":{\"262\":1}}],[\"default=optionresult\",{\"1\":{\"252\":1}}],[\"default=false\",{\"1\":{\"252\":1}}],[\"default1\",{\"1\":{\"247\":1}}],[\"default\",{\"0\":{\"251\":1},\"1\":{\"68\":1,\"119\":2,\"137\":1,\"148\":3,\"247\":4,\"250\":1,\"251\":3,\"252\":1,\"258\":3}}],[\"事件的响应\",{\"1\":{\"204\":1}}],[\"事件和会话状态\",{\"1\":{\"128\":1}}],[\"事件均是\",{\"1\":{\"122\":1}}],[\"事件信息通常不仅仅包含消息这一个内容\",{\"1\":{\"121\":1}}],[\"事件后处理\",{\"0\":{\"109\":1}}],[\"事件预处理\",{\"0\":{\"108\":1}}],[\"事件处理钩子函数\",{\"0\":{\"107\":1}}],[\"事件处理函数列表\",{\"1\":{\"69\":1}}],[\"事件\",{\"0\":{\"174\":1},\"1\":{\"101\":1,\"108\":1,\"109\":1,\"110\":1,\"111\":1,\"177\":1,\"224\":1}}],[\"事件传递来修改或扩展操作系统\",{\"1\":{\"101\":1}}],[\"事件将不会再传播给其他下一优先级的响应器\",{\"1\":{\"66\":1}}],[\"事件响应规则\",{\"0\":{\"64\":1},\"1\":{\"64\":1}}],[\"事件响应器辅助函数\",{\"0\":{\"226\":1},\"1\":{\"226\":1}}],[\"事件响应器可以通过一系列特定的规则筛选出具有某种特征的事件\",{\"1\":{\"225\":1}}],[\"事件响应器\",{\"0\":{\"225\":1},\"1\":{\"110\":1,\"111\":1,\"225\":1}}],[\"事件响应器的默认状态\",{\"1\":{\"68\":1}}],[\"事件响应器的有效期分为\",{\"1\":{\"67\":1}}],[\"事件响应器的响应规则会在事件响应器的权限检查通过后进行匹配\",{\"1\":{\"64\":1}}],[\"事件响应器的存储提供者\",{\"1\":{\"58\":1}}],[\"事件响应器的存储类似于会话存储\",{\"1\":{\"57\":1}}],[\"事件响应器类型的检查在所有其他检查\",{\"1\":{\"62\":1}}],[\"事件响应器类型\",{\"0\":{\"62\":1},\"1\":{\"62\":1}}],[\"事件响应器组成\",{\"0\":{\"61\":1}}],[\"事件响应器允许继承\",{\"1\":{\"60\":1}}],[\"事件响应器进阶\",{\"0\":{\"60\":1}}],[\"事件响应器将会转为临时响应器\",{\"1\":{\"57\":1}}],[\"事件响应器是\",{\"1\":{\"57\":1}}],[\"事件响应器存储\",{\"0\":{\"57\":1}}],[\"事件触发权限会在事件响应器的类型检查通过后进行检查\",{\"1\":{\"63\":1}}],[\"事件触发权限\",{\"0\":{\"63\":1},\"1\":{\"63\":1,\"69\":1}}],[\"事件是否与机器人有关\",{\"0\":{\"26\":1}}],[\"事件纯文本消息\",{\"0\":{\"25\":1}}],[\"事件消息\",{\"0\":{\"24\":1}}],[\"事件会话\",{\"0\":{\"23\":1},\"1\":{\"23\":1}}],[\"事件主体\",{\"0\":{\"22\":1},\"1\":{\"22\":1}}],[\"事件日志字符串由事件名称和事件描述组成\",{\"1\":{\"21\":1}}],[\"事件日志字符串\",{\"0\":{\"21\":1}}],[\"事件描述由适配器定义\",{\"1\":{\"20\":1}}],[\"事件描述\",{\"0\":{\"20\":1}}],[\"事件名称由适配器定义\",{\"1\":{\"19\":1}}],[\"事件名称\",{\"0\":{\"19\":1}}],[\"事件类型与重载\",{\"0\":{\"121\":1}}],[\"事件类型通常为\",{\"1\":{\"18\":1}}],[\"事件类型\",{\"0\":{\"18\":1,\"122\":1}}],[\"基础部分帮助新用户快速上手开发\",{\"1\":{\"196\":1}}],[\"基本用法\",{\"1\":{\"183\":1,\"184\":1,\"186\":1,\"187\":1,\"188\":1,\"190\":1}}],[\"基本辅助函数或\",{\"1\":{\"228\":1}}],[\"基本辅助函数\",{\"0\":{\"69\":1}}],[\"基类作为模板构建\",{\"1\":{\"244\":1}}],[\"基类对一些必要的属性进行了抽象\",{\"1\":{\"122\":1}}],[\"基类的子类型\",{\"1\":{\"122\":1}}],[\"基类能提供如下信息\",{\"1\":{\"17\":1}}],[\"基类\",{\"1\":{\"17\":1,\"225\":1,\"226\":1}}],[\"基于装饰器的方式\",{\"1\":{\"153\":1}}],[\"基于\",{\"1\":{\"2\":1,\"84\":1,\"153\":1,\"202\":2}}],[\"通用化\",{\"1\":{\"190\":1}}],[\"通用消息模型\",{\"1\":{\"84\":1}}],[\"通信模式\",{\"1\":{\"195\":1}}],[\"通信\",{\"1\":{\"191\":2,\"192\":2,\"224\":1,\"294\":1}}],[\"通信的方式\",{\"1\":{\"175\":1}}],[\"通信可以通过\",{\"1\":{\"175\":1}}],[\"通知\",{\"1\":{\"62\":1}}],[\"通常不能得到消息的纯文本\",{\"1\":{\"238\":1}}],[\"通常用于加载一系列本地编写的项目插件\",{\"1\":{\"217\":1}}],[\"通常用于加载第三方插件或者项目插件\",{\"1\":{\"216\":1}}],[\"通常用于日志记录\",{\"1\":{\"19\":1,\"20\":1}}],[\"通常在日志中展示\",{\"1\":{\"178\":1}}],[\"通常需要包含鉴权信息\",{\"1\":{\"175\":1}}],[\"通常适配器需要一些配置项\",{\"1\":{\"168\":1}}],[\"通常由用户\",{\"1\":{\"116\":1}}],[\"通常\",{\"1\":{\"86\":1}}],[\"通常情况下\",{\"1\":{\"62\":1,\"99\":1,\"115\":1,\"226\":1,\"233\":1}}],[\"通常将事件目标主体为机器人\",{\"1\":{\"26\":1}}],[\"通常为负责处理事件并进行一系列的操作\",{\"1\":{\"224\":1}}],[\"通常为\",{\"1\":{\"216\":1,\"217\":1,\"224\":1}}],[\"通常为请求事件\",{\"1\":{\"177\":1}}],[\"通常为通知事件\",{\"1\":{\"177\":1}}],[\"通常为元事件\",{\"1\":{\"177\":1}}],[\"通常为事件消息的纯文本内容\",{\"1\":{\"25\":1}}],[\"通常为机器人用户\",{\"1\":{\"22\":1,\"23\":1}}],[\"通常为机器人的帐号\",{\"1\":{\"16\":1}}],[\"通过发送消息与机器人进行交互\",{\"1\":{\"294\":1}}],[\"通过parse方法返回解析结果\",{\"1\":{\"245\":1}}],[\"通过读取\",{\"1\":{\"219\":1,\"220\":1}}],[\"通过点分割模块名称或使用\",{\"1\":{\"216\":1}}],[\"通过以下命令创建一个名为\",{\"1\":{\"214\":1}}],[\"通过脚手架扩展使用低代码框架\",{\"1\":{\"204\":1}}],[\"通过减少常见的编码错误和降低入门门槛\",{\"1\":{\"204\":1}}],[\"通过工具自动生成\",{\"1\":{\"184\":1}}],[\"通过某种方式获取到\",{\"1\":{\"175\":1}}],[\"通过配置或者平台\",{\"1\":{\"173\":1}}],[\"通过响应规则来控制事件的处理\",{\"1\":{\"124\":1}}],[\"通过兼容层添加路由\",{\"0\":{\"95\":1}}],[\"通过这种途径\",{\"1\":{\"292\":1}}],[\"通过这种方式\",{\"1\":{\"88\":1,\"116\":1}}],[\"通过这些属性以及插件元数据\",{\"1\":{\"87\":1}}],[\"通过其他方式发送给机器人用户等\",{\"1\":{\"86\":1}}],[\"通过它可以实现机器人的模块化以及功能扩展\",{\"1\":{\"5\":1}}],[\"通过\",{\"1\":{\"3\":1,\"93\":1,\"94\":1,\"158\":3,\"219\":1,\"220\":1,\"246\":1,\"261\":1,\"301\":1}}],[\"属性来自定义表名\",{\"1\":{\"299\":1}}],[\"属性\",{\"1\":{\"16\":1,\"122\":1}}],[\"属性获取\",{\"1\":{\"16\":1}}],[\"将数据库模式同步到数据库中\",{\"1\":{\"300\":1}}],[\"将命名空间挂载到\",{\"1\":{\"257\":1}}],[\"将多个值存为列表\",{\"1\":{\"253\":1}}],[\"将消息处理为平台所需的格式后\",{\"1\":{\"176\":1}}],[\"将只会响应\",{\"1\":{\"115\":1}}],[\"将会自动处理加载\",{\"1\":{\"215\":1}}],[\"将会复制一个新的临时事件响应器\",{\"1\":{\"114\":1}}],[\"将会返回所有\",{\"1\":{\"16\":1}}],[\"将默认匹配\",{\"1\":{\"81\":1}}],[\"将不会解析参数\",{\"1\":{\"76\":1}}],[\"将事件响应器存储于其他地方\",{\"1\":{\"57\":1}}],[\"将负责做任何需要的事情\",{\"1\":{\"7\":1}}],[\"参见\",{\"1\":{\"278\":1,\"288\":1}}],[\"参与\",{\"1\":{\"193\":1,\"197\":1,\"201\":1}}],[\"参与开发\",{\"0\":{\"161\":1}}],[\"参与讨论\",{\"0\":{\"158\":1}}],[\"参数为一个\",{\"1\":{\"309\":1}}],[\"参数是迁移脚本的分支\",{\"1\":{\"300\":1}}],[\"参数是迁移脚本的描述\",{\"1\":{\"300\":1}}],[\"参数字典或\",{\"1\":{\"289\":1}}],[\"参数名称\",{\"1\":{\"263\":1}}],[\"参数单元的缺失提示生成函数\",{\"1\":{\"251\":1}}],[\"参数单元的错误提示生成函数\",{\"1\":{\"251\":1}}],[\"参数单元的补全说明生成函数\",{\"1\":{\"251\":1}}],[\"参数单元的默认值\",{\"1\":{\"251\":1}}],[\"参数单元默认值的别名\",{\"1\":{\"251\":1}}],[\"参数需要匹配一个\",{\"1\":{\"249\":1}}],[\"参数除外\",{\"1\":{\"248\":1}}],[\"参数之后\",{\"1\":{\"247\":1}}],[\"参数不依照构造顺序传入\",{\"1\":{\"247\":1}}],[\"参数声明\",{\"0\":{\"247\":1}}],[\"参数package和二个\",{\"1\":{\"245\":1}}],[\"参数类型注解来实现使用不同平台的接口\",{\"1\":{\"123\":2}}],[\"参数解析后的结果可以通过\",{\"1\":{\"76\":1}}],[\"参数解析采用\",{\"1\":{\"76\":1}}],[\"参数可以是任意\",{\"1\":{\"309\":1}}],[\"参数可以是\",{\"1\":{\"75\":1}}],[\"参数外\",{\"1\":{\"69\":1}}],[\"参数\",{\"1\":{\"16\":1,\"75\":1,\"76\":1,\"81\":1,\"124\":1,\"245\":1,\"250\":2}}],[\"参考配置调度器\",{\"1\":{\"157\":1}}],[\"参考\",{\"1\":{\"3\":1}}],[\"image\",{\"1\":{\"311\":4}}],[\"import\",{\"1\":{\"14\":2,\"15\":2,\"16\":4,\"31\":1,\"58\":1,\"59\":1,\"71\":2,\"72\":2,\"73\":2,\"74\":2,\"75\":2,\"76\":3,\"77\":2,\"78\":1,\"79\":2,\"81\":2,\"82\":2,\"86\":2,\"87\":4,\"90\":2,\"92\":4,\"93\":2,\"94\":2,\"96\":2,\"97\":2,\"99\":1,\"100\":2,\"103\":1,\"104\":1,\"105\":1,\"106\":1,\"108\":2,\"109\":1,\"110\":2,\"111\":1,\"112\":2,\"113\":2,\"116\":2,\"118\":1,\"119\":2,\"120\":1,\"122\":1,\"123\":3,\"125\":2,\"126\":2,\"127\":3,\"130\":4,\"134\":3,\"152\":2,\"153\":2,\"167\":2,\"168\":1,\"169\":6,\"171\":5,\"172\":2,\"173\":1,\"174\":6,\"175\":4,\"176\":7,\"177\":4,\"178\":5,\"179\":2,\"208\":2,\"215\":2,\"216\":1,\"227\":1,\"228\":2,\"233\":1,\"235\":1,\"237\":2,\"238\":1,\"242\":1,\"244\":5,\"245\":1,\"246\":1,\"248\":2,\"249\":2,\"252\":1,\"255\":1,\"257\":1,\"258\":1,\"260\":1,\"261\":2,\"262\":3,\"263\":1,\"264\":1,\"265\":3,\"266\":1,\"293\":4,\"294\":3,\"299\":3,\"300\":4,\"301\":8,\"302\":5,\"305\":4,\"306\":4,\"308\":4,\"309\":3}}],[\"iterator\",{\"1\":{\"310\":2}}],[\"iterable\",{\"1\":{\"178\":2,\"235\":1}}],[\"i的命令参数解析器\",{\"1\":{\"245\":1}}],[\"i\",{\"1\":{\"245\":1,\"265\":1}}],[\"i|\",{\"1\":{\"245\":1,\"265\":1}}],[\"ipv4\",{\"1\":{\"249\":1}}],[\"ip\",{\"1\":{\"207\":1}}],[\"iyume\",{\"1\":{\"199\":1}}],[\"ignore\",{\"1\":{\"179\":1}}],[\"ignoredexception\",{\"1\":{\"108\":3,\"110\":3}}],[\"ignorecase=false\",{\"1\":{\"71\":2,\"72\":2,\"73\":2}}],[\"ignorecase\",{\"1\":{\"71\":1,\"72\":1,\"73\":1,\"77\":2}}],[\"if\",{\"1\":{\"96\":1,\"97\":1,\"108\":1,\"110\":1,\"112\":1,\"113\":1,\"130\":2,\"138\":1,\"171\":2,\"172\":1,\"176\":1,\"208\":1,\"300\":2,\"301\":4}}],[\"index\",{\"1\":{\"242\":2,\"245\":2,\"265\":5}}],[\"ini\",{\"1\":{\"179\":1}}],[\"initializing\",{\"1\":{\"300\":1}}],[\"init\",{\"1\":{\"86\":2,\"90\":1,\"119\":1,\"164\":1,\"169\":2,\"171\":2,\"172\":2,\"176\":2,\"208\":1,\"213\":3,\"214\":1,\"215\":1,\"280\":1,\"300\":1}}],[\"include\",{\"1\":{\"148\":1,\"242\":2,\"311\":1}}],[\"install\",{\"1\":{\"133\":1,\"144\":1,\"150\":1,\"206\":2,\"245\":3,\"257\":2,\"265\":9,\"280\":2,\"311\":4}}],[\"info=\",{\"1\":{\"300\":2}}],[\"info\",{\"1\":{\"118\":4,\"156\":1,\"167\":2,\"254\":1}}],[\"int>\",{\"1\":{\"252\":1,\"264\":1}}],[\"integer\",{\"1\":{\"246\":1}}],[\"interval\",{\"1\":{\"153\":1}}],[\"int\",{\"1\":{\"58\":1,\"148\":2,\"153\":4,\"156\":1,\"242\":1,\"246\":10,\"249\":3,\"252\":1,\"260\":1,\"262\":2,\"264\":1,\"266\":1,\"305\":1,\"306\":1,\"308\":2,\"309\":1}}],[\"in\",{\"1\":{\"55\":1,\"126\":1,\"138\":1,\"148\":2,\"233\":1,\"239\":1,\"241\":3,\"293\":1,\"294\":1,\"302\":2,\"310\":14}}],[\"issue\",{\"1\":{\"158\":1,\"196\":1,\"203\":1}}],[\"issues\",{\"1\":{\"158\":1,\"196\":2}}],[\"isinstance\",{\"1\":{\"59\":1,\"94\":1,\"96\":1,\"97\":1,\"171\":1,\"172\":1}}],[\"is\",{\"1\":{\"26\":2,\"34\":1,\"46\":1,\"54\":1,\"55\":1,\"79\":3,\"108\":1,\"110\":1,\"118\":7,\"125\":3,\"126\":4,\"127\":3,\"171\":1,\"177\":1,\"178\":1,\"227\":1,\"238\":2,\"263\":1,\"300\":1}}],[\"id>\",{\"1\":{\"283\":1,\"284\":2,\"285\":2}}],[\"id=bot\",{\"1\":{\"173\":1}}],[\"id=\",{\"1\":{\"153\":2}}],[\"id=123123\",{\"1\":{\"123\":1}}],[\"id\",{\"0\":{\"22\":1,\"23\":1},\"1\":{\"16\":9,\"22\":4,\"23\":5,\"112\":1,\"113\":1,\"116\":6,\"119\":2,\"122\":3,\"126\":1,\"140\":1,\"141\":1,\"142\":1,\"168\":1,\"173\":3,\"175\":1,\"176\":2,\"177\":14,\"244\":2,\"293\":1,\"294\":1,\"300\":1,\"305\":3,\"306\":3,\"308\":5,\"309\":3}}],[\"然后检查机器人发送的信息是否正确\",{\"1\":{\"294\":1}}],[\"然后前往商店页面\",{\"1\":{\"180\":1}}],[\"然后根据平台具体的消息类型\",{\"1\":{\"178\":1}}],[\"然后根据平台消息的类型\",{\"1\":{\"177\":1}}],[\"然后在项目设置中找到\",{\"1\":{\"146\":1}}],[\"然后在其基础上配合使用其他驱动器的功能\",{\"1\":{\"30\":1}}],[\"然后使用\",{\"1\":{\"118\":1,\"301\":1}}],[\"然后通过驱动器的\",{\"1\":{\"14\":1}}],[\"然后交由驱动器发送\",{\"1\":{\"13\":1}}],[\"然后交由机器人插件处理\",{\"1\":{\"13\":1}}],[\"==\",{\"1\":{\"112\":1,\"113\":1,\"178\":1,\"208\":1,\"237\":2,\"238\":2,\"240\":2,\"242\":8,\"243\":1,\"246\":1,\"293\":2,\"294\":1,\"302\":2,\"308\":1,\"309\":1}}],[\"=\",{\"1\":{\"14\":1,\"15\":3,\"16\":4,\"18\":1,\"19\":1,\"20\":1,\"21\":1,\"22\":1,\"23\":1,\"24\":1,\"25\":1,\"26\":1,\"31\":1,\"40\":1,\"48\":1,\"71\":2,\"72\":2,\"73\":2,\"74\":2,\"75\":5,\"76\":4,\"77\":2,\"78\":1,\"79\":1,\"81\":7,\"82\":3,\"86\":1,\"87\":4,\"90\":1,\"94\":1,\"96\":1,\"97\":2,\"99\":2,\"100\":1,\"103\":1,\"104\":1,\"105\":1,\"106\":1,\"115\":1,\"116\":2,\"122\":1,\"125\":2,\"126\":2,\"127\":7,\"128\":2,\"130\":6,\"134\":8,\"148\":20,\"156\":3,\"167\":1,\"169\":1,\"171\":4,\"172\":3,\"173\":2,\"174\":1,\"175\":3,\"176\":2,\"179\":1,\"191\":1,\"192\":1,\"208\":1,\"214\":1,\"220\":2,\"227\":1,\"228\":1,\"233\":1,\"240\":2,\"242\":1,\"243\":3,\"245\":2,\"246\":1,\"248\":2,\"249\":1,\"252\":2,\"255\":1,\"257\":7,\"258\":4,\"260\":1,\"261\":2,\"262\":3,\"263\":1,\"264\":1,\"265\":5,\"266\":1,\"293\":4,\"294\":3,\"299\":2,\"300\":6,\"301\":19,\"302\":5,\"305\":5,\"306\":5,\"308\":2,\"309\":1,\"310\":12}}],[\"我们没必要在所有平台和\",{\"1\":{\"311\":1}}],[\"我们都是通过会话获得数据的\",{\"1\":{\"302\":1}}],[\"我们一般不会手写它们\",{\"1\":{\"300\":1}}],[\"我们应该检查它们\",{\"1\":{\"300\":1}}],[\"我们成功定义了模型\",{\"1\":{\"300\":1}}],[\"我们同样需要通过\",{\"1\":{\"294\":1}}],[\"我们向\",{\"1\":{\"293\":1,\"294\":1}}],[\"我们想要让\",{\"1\":{\"289\":1}}],[\"我们想要创建一个机器人\",{\"1\":{\"280\":1}}],[\"我们通过\",{\"1\":{\"301\":1}}],[\"我们通过一个例子来讲解\",{\"1\":{\"245\":1}}],[\"我们通常需要对\",{\"1\":{\"293\":1}}],[\"我们通常直接使用\",{\"1\":{\"92\":1}}],[\"我们提供了一个消息模板功能来构建消息序列\",{\"1\":{\"244\":1}}],[\"我们还可以注意到\",{\"1\":{\"300\":1}}],[\"我们还可以定义一系列的路由来处理\",{\"1\":{\"294\":1}}],[\"我们还可以完成对适配器的测试\",{\"1\":{\"292\":1}}],[\"我们还可以使用消息序列的\",{\"1\":{\"241\":1}}],[\"我们还可以对\",{\"1\":{\"127\":1}}],[\"我们导入的为\",{\"1\":{\"232\":1}}],[\"我们使用了消息序列的\",{\"1\":{\"231\":1}}],[\"我们使用了内置插件\",{\"1\":{\"225\":1}}],[\"我们直接使用\",{\"1\":{\"227\":1}}],[\"我们只需要使用辅助函数即可完成事件响应器的创建\",{\"1\":{\"226\":1}}],[\"我们只需要传入\",{\"1\":{\"128\":1}}],[\"我们暂时不需要了解其中内容的含义\",{\"1\":{\"208\":1}}],[\"我们首先需要获取测试用模拟客户端\",{\"1\":{\"293\":1}}],[\"我们首先需要将项目所需依赖安装至环境中\",{\"1\":{\"206\":1}}],[\"我们首先需要从适配器模块中导入所需要的适配器类\",{\"1\":{\"14\":1}}],[\"我们十分不推荐直接创建机器人项目\",{\"1\":{\"205\":1}}],[\"我们计划引入\",{\"1\":{\"204\":1}}],[\"我们发现部分新手因不熟悉编程概念或框架本身而遇到问题\",{\"1\":{\"204\":1}}],[\"我们发现许多用户发布的插件中存在文件存储结构化数据\",{\"1\":{\"200\":1}}],[\"我们希望提供一个统一的数据存储与管理方式\",{\"1\":{\"200\":1}}],[\"我们希望提供一款基于命令行的适配器\",{\"1\":{\"195\":1}}],[\"我们希望借此机会接入\",{\"1\":{\"199\":1}}],[\"我们希望借此项目在聊天机器人社区中推广\",{\"1\":{\"191\":1}}],[\"我们希望借助现有命令行脚手架的可扩展特性\",{\"1\":{\"198\":1}}],[\"我们希望使用\",{\"1\":{\"191\":1,\"192\":1}}],[\"我们希望在\",{\"1\":{\"190\":1}}],[\"我们希望能够开发一款基于\",{\"1\":{\"186\":1}}],[\"我们希望将\",{\"1\":{\"184\":1}}],[\"我们希望将其中与旧的机器人平台相关的内容改为基于\",{\"1\":{\"183\":1}}],[\"我们可能会频繁地修改模型\",{\"1\":{\"300\":1}}],[\"我们可能需要手动调整迁移脚本\",{\"1\":{\"300\":1}}],[\"我们可能需要记录一些信息\",{\"1\":{\"130\":1}}],[\"我们可以关闭\",{\"1\":{\"300\":1}}],[\"我们可以正常启动机器人了\",{\"1\":{\"300\":1}}],[\"我们可以查看一下它的内容\",{\"1\":{\"300\":1}}],[\"我们可以用以下代码检查模型生成的数据库模式是否正确\",{\"1\":{\"299\":1}}],[\"我们可以设计出如下的模型\",{\"1\":{\"299\":1}}],[\"我们可以定义一系列的路由来处理\",{\"1\":{\"293\":1}}],[\"我们可以添加一些参数来对事件响应器进行更加精细的调整\",{\"1\":{\"228\":1}}],[\"我们可以将\",{\"1\":{\"127\":1}}],[\"我们可以将规则进行细分\",{\"1\":{\"127\":1}}],[\"我们可以将一个大型插件拆分成多个功能子插件\",{\"1\":{\"88\":1}}],[\"我们可以组合两个\",{\"1\":{\"126\":1}}],[\"我们可以根据上一节中添加的配置项\",{\"1\":{\"125\":1}}],[\"我们可以小小的修改一下事件处理函数的事件参数类型注解\",{\"1\":{\"122\":1}}],[\"我们可以从\",{\"1\":{\"118\":1,\"119\":1}}],[\"我们可以实现多用户同时参与的会话\",{\"1\":{\"116\":1}}],[\"我们可以如下修改\",{\"1\":{\"116\":1}}],[\"我们可以在这个钩子函数中进行一些清理工作\",{\"1\":{\"104\":1}}],[\"我们可以在插件\",{\"1\":{\"93\":2}}],[\"我们可以在当前插件中声明依赖的插件\",{\"1\":{\"93\":1}}],[\"我们可以在使用\",{\"1\":{\"89\":1}}],[\"我们可以更好地维护和扩展插件\",{\"1\":{\"91\":1}}],[\"我们可以直接在插件中使用\",{\"1\":{\"88\":1}}],[\"我们可以看到\",{\"1\":{\"86\":1}}],[\"我们可以为插件添加插件元数据\",{\"1\":{\"86\":1}}],[\"我们可以创建一个匹配\",{\"1\":{\"76\":1,\"79\":1}}],[\"我们可以创建一个匹配消息中包含字母并且忽略大小写的规则\",{\"1\":{\"77\":1}}],[\"我们可以创建一个匹配消息中包含\",{\"1\":{\"74\":1}}],[\"我们可以创建一个匹配消息为\",{\"1\":{\"73\":1}}],[\"我们可以创建一个匹配消息结尾为\",{\"1\":{\"72\":1}}],[\"我们可以创建一个匹配消息开头为\",{\"1\":{\"71\":1}}],[\"我们可以通过检查请求返回是否正确\",{\"1\":{\"293\":1}}],[\"我们可以通过引起\",{\"1\":{\"112\":1,\"113\":1}}],[\"我们可以通过以下方式判断\",{\"1\":{\"94\":1}}],[\"我们可以通过两种途径向\",{\"1\":{\"94\":1}}],[\"我们可以通过\",{\"1\":{\"59\":1,\"99\":1,\"241\":1,\"294\":1}}],[\"我们可以通过适配器的\",{\"1\":{\"16\":1}}],[\"我们可以通过适配器的名称或类型来获取指定的适配器实例\",{\"1\":{\"15\":1}}],[\"我们可以方便地进行逐优先级事件传播\",{\"1\":{\"58\":1}}],[\"我们可以使用脚手架快速创建项目\",{\"1\":{\"165\":1}}],[\"我们可以使用\",{\"1\":{\"30\":1,\"119\":1}}],[\"我们定义了一个函数\",{\"1\":{\"125\":1}}],[\"我们为\",{\"1\":{\"124\":1}}],[\"我们在编写机器人时\",{\"1\":{\"123\":1}}],[\"我们将使用\",{\"1\":{\"233\":1}}],[\"我们将重点介绍机器人功能实现\",{\"1\":{\"224\":1}}],[\"我们将简要介绍如何在不使用\",{\"1\":{\"205\":1}}],[\"我们将在最佳实践中介绍\",{\"1\":{\"123\":1}}],[\"我们将在重载一节中介绍\",{\"1\":{\"122\":1}}],[\"我们将介绍如何获取事件更多的信息以及根据事件类型进行不同的处理\",{\"1\":{\"121\":1}}],[\"我们将介绍事件响应器的组成\",{\"1\":{\"60\":1}}],[\"我们获取了\",{\"1\":{\"122\":1}}],[\"我们实际可以获得的信息通常多于基类抽象方法所提供的\",{\"1\":{\"122\":1}}],[\"我们仅需一行代码即可记录对应级别的日志\",{\"1\":{\"118\":1}}],[\"我们已经成功定义了模型\",{\"1\":{\"301\":1}}],[\"我们已经安装了\",{\"1\":{\"281\":1}}],[\"我们已经通过依赖注入\",{\"1\":{\"231\":1}}],[\"我们已经介绍了如何安装和使用\",{\"1\":{\"205\":1}}],[\"我们已经介绍了事件响应器的基本用法以及响应规则\",{\"1\":{\"60\":1}}],[\"我们已经了解了\",{\"1\":{\"131\":1}}],[\"我们已经了解了如何获取事件信息以及使用平台接口\",{\"1\":{\"121\":1}}],[\"我们已经了解了如何控制会话的更新\",{\"1\":{\"116\":1}}],[\"我们就需要先构造一个消息序列\",{\"1\":{\"234\":1}}],[\"我们就需要使用更复杂的逻辑来更新响应事件类型\",{\"1\":{\"115\":1}}],[\"我们就获得了一个可以响应\",{\"1\":{\"228\":1}}],[\"我们就获得一个名为\",{\"1\":{\"227\":1}}],[\"我们就使用了\",{\"1\":{\"122\":1}}],[\"我们就可以执行迁移脚本\",{\"1\":{\"300\":1}}],[\"我们就可以直接使用\",{\"1\":{\"100\":1}}],[\"我们就可以收集所需要的插件信息了\",{\"1\":{\"87\":1}}],[\"我们就可以通过修改事件参数类型注解来实现对不同事件的处理\",{\"1\":{\"123\":1}}],[\"我们就可以通过\",{\"1\":{\"31\":1}}],[\"我们并不希望在模块被导入时就执行一些耗时操作\",{\"1\":{\"103\":1}}],[\"我们添加了一个\",{\"1\":{\"100\":1}}],[\"我们添加一个\",{\"1\":{\"96\":1,\"97\":1}}],[\"我们了解了驱动器的两种类型\",{\"1\":{\"94\":1}}],[\"我们必须在\",{\"1\":{\"92\":1}}],[\"我们不需要对跨插件访问进行特殊处理\",{\"1\":{\"92\":1}}],[\"我们不能在使用\",{\"1\":{\"92\":1}}],[\"我们创建了一个\",{\"1\":{\"227\":1}}],[\"我们创建一个具有相同响应规则的响应器组\",{\"1\":{\"82\":1}}],[\"我们创建\",{\"1\":{\"81\":1}}],[\"我们需要在不同数据库后端上测试\",{\"1\":{\"311\":1}}],[\"我们需要在插件顶层模块\",{\"1\":{\"86\":1}}],[\"我们需要提交事务\",{\"1\":{\"301\":1}}],[\"我们需要使用会话操作数据\",{\"1\":{\"301\":1}}],[\"我们需要创建一个迁移脚本\",{\"1\":{\"300\":1}}],[\"我们需要迁移数据库\",{\"1\":{\"300\":1}}],[\"我们需要设计存储的数据的结构\",{\"1\":{\"299\":1}}],[\"我们需要实现\",{\"1\":{\"175\":1}}],[\"我们需要调用\",{\"1\":{\"173\":1}}],[\"我们需要将适配器发布到\",{\"1\":{\"180\":1}}],[\"我们需要将其转为适配器的\",{\"1\":{\"174\":1}}],[\"我们需要将\",{\"1\":{\"173\":1}}],[\"我们需要根据平台文档和特性选择合适的通信方式\",{\"1\":{\"170\":1}}],[\"我们需要继承基类\",{\"1\":{\"169\":1,\"176\":1,\"177\":1}}],[\"我们需要继承\",{\"1\":{\"163\":1,\"178\":1}}],[\"我们需要先了解一下插件的概念\",{\"1\":{\"210\":1}}],[\"我们需要先了解适配器的功能与组成\",{\"1\":{\"163\":1}}],[\"我们需要先将适配器注册到驱动器中\",{\"1\":{\"14\":1}}],[\"我们需要合并多个规则\",{\"1\":{\"127\":1}}],[\"我们需要确保使用的平台接口与所要发送的平台类型一致\",{\"1\":{\"121\":1}}],[\"我们需要移除\",{\"1\":{\"119\":1}}],[\"我们需要自定义触发权限更新函数\",{\"1\":{\"116\":1}}],[\"我们需要自定义响应事件类型更新函数\",{\"1\":{\"115\":1}}],[\"我们需要注意驱动器是否为服务端类型\",{\"1\":{\"94\":1}}],[\"我们需要注意驱动器的类型\",{\"1\":{\"94\":1}}],[\"我们需要选择一个主要驱动器\",{\"1\":{\"30\":1}}],[\"我们也希望随着新平台加入\",{\"1\":{\"187\":1,\"188\":1}}],[\"我们也无需担心合并了一个\",{\"1\":{\"127\":1}}],[\"我们也可以像\",{\"1\":{\"302\":1}}],[\"我们也可以主动使用响应规则来判断事件是否符合条件\",{\"1\":{\"128\":1}}],[\"我们也可以选择不提供\",{\"1\":{\"76\":1}}],[\"我们也可以通过依赖注入获得数据\",{\"1\":{\"302\":1}}],[\"我们也可以通过参数指定\",{\"1\":{\"293\":1}}],[\"我们也可以通过消息段或消息序列的\",{\"1\":{\"243\":1}}],[\"我们也可以通过消息序列的\",{\"1\":{\"242\":1}}],[\"我们也可以通过修改\",{\"1\":{\"123\":1}}],[\"我们也可以通过\",{\"1\":{\"16\":1,\"85\":1}}],[\"我们也提到了如何使用基类抽象方法来获取事件通用信息\",{\"1\":{\"17\":1}}],[\"我们以\",{\"1\":{\"14\":1,\"122\":1,\"123\":1}}],[\"注解的标识符\",{\"1\":{\"248\":1}}],[\"注\",{\"1\":{\"191\":1,\"192\":1}}],[\"注册并创建一个新的项目\",{\"1\":{\"146\":1}}],[\"注册适配器\",{\"0\":{\"14\":1},\"1\":{\"208\":2}}],[\"注意\",{\"1\":{\"54\":1,\"55\":1,\"122\":1,\"123\":1,\"147\":1,\"153\":1,\"214\":2,\"216\":1,\"217\":1,\"232\":1,\"233\":1,\"244\":2,\"278\":1,\"291\":1,\"300\":1,\"301\":1,\"310\":1}}],[\"注入\",{\"1\":{\"7\":1}}],[\"以外的语句\",{\"1\":{\"309\":1}}],[\"以避免对其他测试产生影响\",{\"1\":{\"293\":1}}],[\"以pip为例\",{\"1\":{\"265\":1}}],[\"以上配置之间有覆盖关系\",{\"1\":{\"291\":1}}],[\"以上下文管理器方式配置命名空间\",{\"1\":{\"257\":1}}],[\"以上版本\",{\"1\":{\"0\":1}}],[\"以保证计数器的正确性\",{\"1\":{\"253\":1}}],[\"以保证追加的正确性\",{\"1\":{\"253\":1}}],[\"以携带对于该参数的更多信息\",{\"1\":{\"251\":1}}],[\"以方便用户调用\",{\"1\":{\"248\":1}}],[\"以适应不同平台中的消息模式\",{\"1\":{\"232\":1}}],[\"以\",{\"1\":{\"206\":1,\"248\":1}}],[\"以下是建议的输入\",{\"1\":{\"264\":1}}],[\"以下是为加载插件提供的几种方式\",{\"1\":{\"215\":1}}],[\"以下简称命名空间\",{\"1\":{\"256\":1}}],[\"以下步骤均在该文件夹中进行\",{\"1\":{\"205\":1}}],[\"以下数据目录配置项默认值将会对应变更\",{\"1\":{\"136\":1}}],[\"以提升搜索引擎优化\",{\"1\":{\"202\":1}}],[\"以网页的形式帮助用户开发\",{\"1\":{\"198\":1}}],[\"以应对平台事件数据的变更\",{\"1\":{\"174\":1}}],[\"以便我们在不同的环境中\",{\"1\":{\"300\":1}}],[\"以便其他开发者使用我们的适配器\",{\"1\":{\"180\":1}}],[\"以便及时发现问题并进行修复\",{\"1\":{\"143\":1}}],[\"以便在会话中的不同阶段进行判断和处理\",{\"1\":{\"130\":1}}],[\"以便机器人插件处理\",{\"1\":{\"13\":1,\"178\":1}}],[\"以事件响应器列表为值的映射\",{\"1\":{\"58\":1}}],[\"以及他们小写形式\",{\"1\":{\"249\":1}}],[\"以及所有给定目录下的插件\",{\"1\":{\"218\":1}}],[\"以及驱动器\",{\"1\":{\"206\":1}}],[\"以及正确创建\",{\"1\":{\"169\":1}}],[\"以及返回体信息\",{\"1\":{\"96\":1}}],[\"以及如何获取插件信息\",{\"1\":{\"85\":1}}],[\"以及\",{\"1\":{\"84\":1,\"187\":1,\"188\":1,\"207\":1}}],[\"以及是否启用该功能\",{\"1\":{\"40\":1}}],[\"以及事件主体对象\",{\"1\":{\"13\":1}}],[\"effective\",{\"1\":{\"283\":1}}],[\"eval\",{\"1\":{\"261\":9}}],[\"every\",{\"1\":{\"153\":3}}],[\"eventmessage\",{\"1\":{\"233\":1}}],[\"event\",{\"0\":{\"174\":1,\"177\":1},\"1\":{\"13\":1,\"17\":1,\"18\":2,\"19\":2,\"20\":2,\"21\":1,\"22\":1,\"23\":1,\"24\":1,\"25\":1,\"26\":1,\"62\":1,\"108\":5,\"109\":4,\"110\":3,\"111\":2,\"116\":4,\"122\":4,\"123\":3,\"126\":4,\"128\":1,\"163\":1,\"164\":1,\"166\":1,\"174\":17,\"176\":11,\"177\":15,\"227\":1,\"233\":1}}],[\"ellipsis\",{\"1\":{\"253\":2}}],[\"else\",{\"1\":{\"130\":1}}],[\"empty\",{\"1\":{\"251\":1}}],[\"email\",{\"1\":{\"249\":1}}],[\"emoji\",{\"1\":{\"244\":5}}],[\"echo=true\",{\"1\":{\"291\":1}}],[\"echo\",{\"0\":{\"291\":1},\"1\":{\"208\":1,\"214\":1,\"221\":1,\"222\":1,\"225\":2,\"261\":7,\"289\":2,\"290\":1,\"291\":3}}],[\"escape\",{\"1\":{\"177\":1,\"178\":1}}],[\"end\",{\"1\":{\"300\":4}}],[\"endswith\",{\"1\":{\"72\":5}}],[\"engine\",{\"0\":{\"290\":1},\"1\":{\"289\":1,\"290\":2,\"291\":1}}],[\"encoding=\",{\"1\":{\"219\":1,\"220\":1}}],[\"entrypoint\",{\"1\":{\"208\":1}}],[\"env\",{\"1\":{\"148\":1,\"207\":1,\"311\":6}}],[\"environment\",{\"1\":{\"148\":1}}],[\"enabled\",{\"1\":{\"125\":2,\"126\":1,\"127\":1}}],[\"enable\",{\"0\":{\"275\":1},\"1\":{\"125\":4,\"126\":2,\"127\":3,\"256\":1}}],[\"error\",{\"1\":{\"118\":4,\"119\":2,\"167\":2,\"171\":3,\"174\":1,\"254\":2,\"300\":2}}],[\"e\",{\"1\":{\"97\":1,\"167\":2,\"171\":6,\"174\":1}}],[\"execute\",{\"1\":{\"310\":12}}],[\"exiting\",{\"1\":{\"300\":1}}],[\"extend\",{\"1\":{\"243\":2}}],[\"extensions\",{\"0\":{\"273\":1},\"1\":{\"169\":1,\"171\":1,\"175\":1,\"176\":1,\"177\":1,\"178\":1}}],[\"extract\",{\"1\":{\"231\":1,\"238\":2,\"301\":3,\"302\":6}}],[\"extra\",{\"1\":{\"86\":2,\"255\":1}}],[\"extra=\",{\"1\":{\"86\":1}}],[\"exclude\",{\"1\":{\"148\":1,\"242\":2}}],[\"exceptions\",{\"1\":{\"300\":1}}],[\"exception=true\",{\"1\":{\"118\":1}}],[\"exception\",{\"1\":{\"97\":1,\"108\":2,\"110\":2,\"111\":2,\"112\":1,\"113\":4,\"118\":2,\"167\":1,\"171\":3,\"174\":1,\"255\":1,\"256\":1}}],[\"except\",{\"1\":{\"97\":1,\"118\":1,\"167\":1,\"171\":3,\"174\":1}}],[\"example=\",{\"1\":{\"255\":1}}],[\"example\",{\"1\":{\"86\":3,\"87\":2,\"255\":1}}],[\"expire\",{\"1\":{\"67\":3,\"69\":1}}],[\"editable\",{\"1\":{\"179\":1}}],[\"edit\",{\"1\":{\"11\":1}}],[\"负责命令参数的类型检查与类型转化\",{\"1\":{\"249\":1}}],[\"负责将平台消息与\",{\"1\":{\"224\":1}}],[\"负责接收和发送消息\",{\"1\":{\"224\":1}}],[\"负责连接各个组成部分\",{\"1\":{\"224\":1}}],[\"负责转换事件\",{\"1\":{\"169\":1}}],[\"负责转换事件和调用接口\",{\"1\":{\"13\":1}}],[\"负责正确序列化消息\",{\"1\":{\"13\":1,\"178\":1}}],[\"负责定义事件内容\",{\"1\":{\"13\":1}}],[\"负责存储平台机器人相关信息\",{\"1\":{\"13\":1,\"176\":1}}],[\"为关闭\",{\"1\":{\"255\":1,\"274\":1}}],[\"为消息段定义了一个方法\",{\"1\":{\"238\":1}}],[\"为确保消息的正常处理与跨平台兼容性\",{\"1\":{\"229\":1}}],[\"为事件响应器添加参数\",{\"0\":{\"228\":1}}],[\"为机器人提供具体的功能\",{\"1\":{\"205\":1}}],[\"为用户提供了详细的文档介绍\",{\"1\":{\"196\":1}}],[\"为用户提供了命令行脚手架\",{\"1\":{\"194\":1}}],[\"为具体的值或者\",{\"1\":{\"247\":1}}],[\"为具体\",{\"1\":{\"174\":1}}],[\"为例\",{\"1\":{\"100\":1,\"206\":1}}],[\"为其他插件编写提供功能\",{\"1\":{\"86\":1}}],[\"为\",{\"1\":{\"75\":2,\"118\":1,\"137\":1,\"138\":1,\"139\":1,\"186\":1,\"249\":2,\"255\":2,\"261\":2,\"262\":1,\"274\":2}}],[\"为四种类型的事件响应器提供了五个基本的辅助函数\",{\"1\":{\"69\":1}}],[\"为了提高项目的兼容性\",{\"1\":{\"311\":1}}],[\"为了提供安全可靠的跨平台模板字符\",{\"1\":{\"244\":1}}],[\"为了更好的理解多种类型的消息组成方式\",{\"1\":{\"233\":1}}],[\"为了更方便的管理一系列功能相近的响应器\",{\"1\":{\"80\":1}}],[\"为了解决初学者在使用面向开发者的聊天机器人框架\",{\"1\":{\"204\":1}}],[\"为了简化内置驱动器模块路径\",{\"1\":{\"30\":1}}],[\"为了实现这两种功能\",{\"1\":{\"13\":1}}],[\"为键的字典\",{\"1\":{\"16\":2}}],[\"为你的代码提供这些必要依赖\",{\"1\":{\"7\":1}}],[\"其余是模版代码\",{\"1\":{\"300\":1}}],[\"其余参数均相同\",{\"1\":{\"69\":1}}],[\"其对应的\",{\"1\":{\"265\":1}}],[\"其自动支持\",{\"1\":{\"262\":1}}],[\"其优先度低于\",{\"1\":{\"256\":1}}],[\"其接收一个表示匹配失败的元素的参数\",{\"1\":{\"251\":1}}],[\"其构造方法形如\",{\"1\":{\"250\":3}}],[\"其与\",{\"1\":{\"248\":1}}],[\"其与函数签名类似\",{\"1\":{\"247\":1}}],[\"其有三种为\",{\"1\":{\"248\":1}}],[\"其它\",{\"1\":{\"194\":1}}],[\"其官方提供了丰富的聊天机器人\",{\"1\":{\"188\":1}}],[\"其强大的定时任务功能被广泛应用于各个场景\",{\"1\":{\"149\":1}}],[\"其中有一个\",{\"1\":{\"300\":1}}],[\"其中的\",{\"1\":{\"249\":1}}],[\"其中的元素为\",{\"1\":{\"249\":1}}],[\"其中包含的文件将在稍后章节中用到\",{\"1\":{\"214\":1}}],[\"其中\",{\"1\":{\"13\":1,\"30\":1,\"93\":1,\"246\":1,\"247\":1,\"284\":1,\"285\":1,\"299\":2,\"300\":1,\"302\":1}}],[\"其他类型的消息段将会原样添加\",{\"1\":{\"244\":1}}],[\"其他部分均可按需选择\",{\"1\":{\"224\":1}}],[\"其他加载方式\",{\"0\":{\"223\":1}}],[\"其他项目如\",{\"1\":{\"198\":1}}],[\"其他插件可以通过约定\",{\"1\":{\"86\":1}}],[\"其他则不会\",{\"1\":{\"66\":1}}],[\"其他\",{\"0\":{\"11\":1}}],[\"是主键\",{\"1\":{\"299\":1}}],[\"是可选参数\",{\"1\":{\"284\":1}}],[\"是因为\",{\"1\":{\"249\":1}}],[\"是用于声明命令参数的组件\",{\"1\":{\"247\":1}}],[\"是用来初始化并运行机器人的\",{\"1\":{\"208\":1}}],[\"是对接收到的事件进行响应的基本单元\",{\"1\":{\"225\":1}}],[\"是中国科学院软件研究所发起的开源软件供应链点亮计划系列暑期活动\",{\"1\":{\"201\":1}}],[\"是中国科学院软件研究所与\",{\"1\":{\"181\":1}}],[\"是由开源软件供应链点亮计划发起\",{\"1\":{\"193\":1,\"197\":1}}],[\"是以上两种方式的合体\",{\"1\":{\"175\":1}}],[\"是若干个\",{\"1\":{\"126\":1}}],[\"是\",{\"1\":{\"120\":1,\"177\":1,\"219\":1,\"220\":1,\"300\":1}}],[\"是计算机程序设计术语\",{\"1\":{\"101\":1}}],[\"是一段消息\",{\"1\":{\"232\":1}}],[\"是一款较为广泛使用的安全即时聊天软件\",{\"1\":{\"187\":1}}],[\"是一类提供了拓展响应规则的插件\",{\"1\":{\"84\":1}}],[\"是一个特殊的依赖注入\",{\"1\":{\"302\":1}}],[\"是一个特殊的标注\",{\"1\":{\"250\":1}}],[\"是一个有作用域限制的会话\",{\"1\":{\"301\":1}}],[\"是一个返回值为\",{\"1\":{\"125\":1}}],[\"是一个插件化的框架\",{\"1\":{\"85\":1}}],[\"是一个简单\",{\"1\":{\"84\":1,\"245\":1}}],[\"是一个布尔值\",{\"1\":{\"66\":1,\"67\":1}}],[\"是一个正整数\",{\"1\":{\"65\":1}}],[\"是一个\",{\"1\":{\"63\":1,\"64\":1,\"67\":1,\"68\":1,\"149\":1}}],[\"是一个类\",{\"1\":{\"46\":1}}],[\"是一个易上手\",{\"1\":{\"34\":1}}],[\"是一个现代\",{\"1\":{\"0\":1}}],[\"是最常用的响应规则\",{\"1\":{\"75\":1}}],[\"是否启动时拉取一次发送对象列表\",{\"1\":{\"277\":1}}],[\"是否启用文件托管\",{\"1\":{\"276\":1}}],[\"是否启用\",{\"1\":{\"275\":1}}],[\"是否全局使用原始消息\",{\"1\":{\"271\":1}}],[\"是否全局启用命令自动补全\",{\"1\":{\"270\":1}}],[\"是否全局启用输出信息自动发送\",{\"1\":{\"268\":1}}],[\"是否读取\",{\"1\":{\"269\":1,\"272\":1}}],[\"是否调用时保留指令前缀\",{\"1\":{\"259\":1}}],[\"是否允许命令后随参数\",{\"1\":{\"259\":1}}],[\"是否匹配成功\",{\"1\":{\"254\":1}}],[\"是否仅包含指定类型的消息段\",{\"1\":{\"241\":1}}],[\"是否都为指定消息段\",{\"1\":{\"241\":1}}],[\"是否存在指定类型的消息段\",{\"1\":{\"241\":1}}],[\"是否存在消息段\",{\"1\":{\"241\":1}}],[\"是否存在并运行\",{\"1\":{\"209\":1}}],[\"是否自动启动\",{\"1\":{\"155\":1}}],[\"是否为\",{\"1\":{\"125\":1}}],[\"是否为临时响应器\",{\"1\":{\"69\":1}}],[\"是否阻断事件传播\",{\"1\":{\"69\":1}}],[\"是否开启\",{\"1\":{\"40\":1,\"48\":1}}],[\"是机器人开发者能够直接获取并使用的核心对象\",{\"1\":{\"176\":1}}],[\"是机器人运行的基石\",{\"1\":{\"28\":1}}],[\"是机器人与平台交互的核心桥梁\",{\"1\":{\"12\":1}}],[\"文字以及表情等\",{\"1\":{\"244\":1}}],[\"文本文件\",{\"1\":{\"207\":1}}],[\"文件加载插件\",{\"1\":{\"219\":1,\"220\":1}}],[\"文件中的加载插件部分\",{\"1\":{\"214\":1}}],[\"文件中的\",{\"1\":{\"214\":1,\"219\":1,\"220\":1}}],[\"文件中编写\",{\"1\":{\"213\":1}}],[\"文件夹\",{\"1\":{\"213\":1}}],[\"文件夹中配置文件添加以下内容\",{\"1\":{\"10\":1}}],[\"文件即可以作为一个插件\",{\"1\":{\"212\":1}}],[\"文件\",{\"1\":{\"205\":1,\"208\":2,\"212\":1,\"300\":1}}],[\"文件存储\",{\"1\":{\"204\":1}}],[\"文档来达到你想要的效果\",{\"1\":{\"244\":1}}],[\"文档来了解如何使用\",{\"1\":{\"134\":1}}],[\"文档通俗易懂\",{\"1\":{\"196\":1}}],[\"文档分为基础与进阶两个部分\",{\"1\":{\"196\":1}}],[\"文档需符合风格指南\",{\"1\":{\"190\":1}}],[\"文档生成工具\",{\"1\":{\"184\":1}}],[\"文档改为直接编写在\",{\"1\":{\"184\":1}}],[\"文档自动生成\",{\"0\":{\"184\":1}}],[\"文档中与旧的\",{\"1\":{\"183\":1}}],[\"文档中的\",{\"0\":{\"183\":1}}],[\"文档和\",{\"1\":{\"183\":1}}],[\"文档有部分过时内容需要更新\",{\"1\":{\"183\":1}}],[\"文档的\",{\"1\":{\"183\":1}}],[\"文档地址\",{\"1\":{\"37\":1,\"38\":1}}],[\"文档等功能\",{\"1\":{\"34\":1}}],[\"文档\",{\"1\":{\"4\":1,\"37\":1,\"38\":1,\"40\":1,\"76\":1,\"96\":1,\"97\":1,\"100\":1,\"118\":1,\"119\":1,\"174\":1,\"184\":4,\"228\":1,\"288\":1}}],[\"branches\",{\"1\":{\"311\":2}}],[\"branch\",{\"1\":{\"300\":3}}],[\"bracket\",{\"1\":{\"246\":2,\"255\":1,\"266\":1,\"274\":2}}],[\"breadcrumb\",{\"1\":{\"148\":1}}],[\"breadcrumbs\",{\"1\":{\"148\":1}}],[\"binds=\",{\"1\":{\"289\":1}}],[\"bind\",{\"0\":{\"289\":1},\"1\":{\"261\":1,\"289\":1,\"291\":1,\"300\":2}}],[\"bin\",{\"1\":{\"206\":1}}],[\"bg\",{\"1\":{\"171\":3}}],[\"best\",{\"0\":{\"323\":1}}],[\"begin\",{\"1\":{\"301\":1}}],[\"beta\",{\"1\":{\"194\":1}}],[\"before\",{\"1\":{\"148\":2}}],[\"bell\",{\"1\":{\"123\":1}}],[\"baz\",{\"1\":{\"246\":2,\"249\":5,\"252\":3,\"262\":1,\"273\":1}}],[\"barabc\",{\"1\":{\"262\":1}}],[\"barbaz\",{\"1\":{\"246\":2}}],[\"bar\",{\"1\":{\"127\":2,\"246\":10,\"249\":5,\"252\":4,\"254\":3,\"255\":1,\"257\":1,\"262\":1,\"264\":2,\"266\":3,\"273\":1}}],[\"base\",{\"1\":{\"281\":1,\"285\":2}}],[\"basepattern\",{\"1\":{\"246\":2,\"249\":5}}],[\"basemessagesegment\",{\"1\":{\"178\":2}}],[\"basemessage\",{\"1\":{\"178\":2}}],[\"basemodel\",{\"1\":{\"168\":2,\"174\":1}}],[\"baseevent\",{\"1\":{\"177\":2}}],[\"basebot\",{\"1\":{\"176\":2}}],[\"baseadapter\",{\"1\":{\"169\":2,\"171\":1,\"172\":1,\"173\":1,\"174\":1,\"175\":1}}],[\"based\",{\"1\":{\"34\":1}}],[\"basicconfig\",{\"1\":{\"120\":1}}],[\"basic\",{\"1\":{\"10\":2}}],[\"blacklist\",{\"1\":{\"126\":1}}],[\"blacklisted\",{\"1\":{\"126\":2}}],[\"blockly\",{\"1\":{\"204\":3}}],[\"block=true\",{\"1\":{\"127\":1,\"228\":1}}],[\"block\",{\"1\":{\"66\":1,\"69\":1}}],[\"b\",{\"1\":{\"93\":5}}],[\"bytes\",{\"1\":{\"175\":4}}],[\"by\",{\"1\":{\"87\":1,\"300\":5}}],[\"builtin\",{\"1\":{\"208\":1,\"214\":1,\"221\":1,\"222\":1,\"256\":2,\"257\":1}}],[\"building\",{\"1\":{\"34\":1,\"55\":1}}],[\"bug\",{\"1\":{\"3\":1}}],[\"bootstrap\",{\"1\":{\"214\":1}}],[\"bool\",{\"1\":{\"26\":1,\"39\":1,\"40\":1,\"48\":1,\"75\":1,\"125\":2,\"126\":2,\"127\":1,\"128\":1,\"148\":4,\"155\":1,\"177\":1,\"178\":1,\"246\":2,\"249\":1,\"259\":2,\"268\":1,\"269\":1,\"270\":1,\"271\":1,\"272\":1,\"275\":1,\"276\":1,\"277\":1}}],[\"bodies\",{\"1\":{\"148\":1}}],[\"body\",{\"1\":{\"29\":1}}],[\"both\",{\"1\":{\"54\":1}}],[\"bots\",{\"1\":{\"16\":6,\"293\":1,\"294\":1}}],[\"bot\",{\"0\":{\"16\":1,\"105\":1,\"106\":1,\"173\":1,\"176\":1},\"1\":{\"13\":2,\"16\":9,\"40\":1,\"48\":1,\"86\":2,\"87\":1,\"89\":1,\"105\":5,\"106\":5,\"108\":1,\"109\":1,\"110\":1,\"111\":1,\"112\":6,\"113\":5,\"123\":9,\"124\":1,\"127\":1,\"128\":2,\"163\":1,\"164\":1,\"166\":1,\"169\":1,\"171\":1,\"173\":18,\"174\":8,\"175\":6,\"176\":8,\"183\":2,\"187\":1,\"199\":1,\"208\":2,\"209\":2,\"214\":15,\"215\":1,\"216\":1,\"217\":1,\"227\":2,\"228\":1,\"244\":1,\"293\":5,\"294\":1}}],[\"mymysql\",{\"1\":{\"311\":4}}],[\"mysql\",{\"1\":{\"311\":26}}],[\"mysql+aiomysql\",{\"1\":{\"311\":2}}],[\"mydatabase\",{\"1\":{\"289\":1}}],[\"mydup\",{\"1\":{\"265\":2}}],[\"multivar\",{\"0\":{\"250\":1},\"1\":{\"250\":6}}],[\"mutablemapping\",{\"1\":{\"58\":1}}],[\"mnixry\",{\"1\":{\"195\":1,\"198\":1,\"204\":1}}],[\"m\",{\"1\":{\"122\":1,\"206\":1,\"300\":2}}],[\"mm\",{\"1\":{\"119\":4}}],[\"most\",{\"1\":{\"300\":1}}],[\"mockapiexception\",{\"1\":{\"112\":3,\"113\":3}}],[\"module\",{\"1\":{\"87\":3,\"211\":1}}],[\"models\",{\"1\":{\"310\":9}}],[\"model\",{\"0\":{\"308\":1},\"1\":{\"177\":2,\"299\":3,\"302\":1,\"305\":2,\"306\":2,\"308\":2,\"309\":5,\"310\":31}}],[\"modern\",{\"1\":{\"34\":1}}],[\"mode\",{\"1\":{\"10\":1}}],[\"matrix\",{\"1\":{\"311\":10}}],[\"match=true\",{\"1\":{\"263\":1}}],[\"match=\",{\"1\":{\"245\":1}}],[\"matched\",{\"1\":{\"245\":1,\"254\":4,\"262\":1,\"263\":1}}],[\"matched=true\",{\"1\":{\"245\":2}}],[\"matcher2\",{\"1\":{\"82\":1}}],[\"matcher1\",{\"1\":{\"82\":1}}],[\"matchergroup\",{\"1\":{\"82\":3}}],[\"matchers\",{\"1\":{\"59\":4}}],[\"matcher\",{\"1\":{\"58\":2,\"59\":1,\"60\":1,\"66\":1,\"71\":1,\"72\":1,\"73\":1,\"74\":1,\"75\":1,\"76\":1,\"77\":1,\"87\":1,\"110\":2,\"111\":2,\"116\":4,\"123\":7,\"130\":10,\"225\":2,\"226\":3}}],[\"matcherprovider\",{\"1\":{\"58\":4}}],[\"match\",{\"1\":{\"77\":1,\"249\":2,\"254\":1,\"255\":1,\"256\":1}}],[\"mapped\",{\"1\":{\"299\":5,\"302\":4,\"305\":4,\"306\":4,\"308\":4}}],[\"map\",{\"1\":{\"244\":1}}],[\"mark\",{\"1\":{\"293\":2,\"294\":1}}],[\"markup\",{\"1\":{\"233\":2,\"238\":1,\"244\":3}}],[\"markdown\",{\"1\":{\"233\":2,\"238\":1,\"242\":16,\"244\":2}}],[\"main\",{\"1\":{\"208\":1,\"254\":3,\"311\":2}}],[\"max\",{\"1\":{\"148\":1,\"290\":1}}],[\"macos\",{\"1\":{\"134\":2,\"137\":1,\"138\":1,\"139\":1,\"206\":1,\"311\":2}}],[\"manager\",{\"1\":{\"87\":1,\"255\":1}}],[\"mdx等相关技术\",{\"1\":{\"202\":1}}],[\"mdx\",{\"1\":{\"202\":1}}],[\"md\",{\"1\":{\"86\":1,\"164\":1,\"214\":2}}],[\"migrations\",{\"1\":{\"300\":2,\"311\":2}}],[\"mirai\",{\"1\":{\"187\":1,\"188\":1}}],[\"missing\",{\"1\":{\"179\":1,\"251\":1}}],[\"microframework\",{\"1\":{\"46\":1}}],[\"mixin\",{\"1\":{\"30\":2}}],[\"merge\",{\"1\":{\"301\":2}}],[\"mean\",{\"1\":{\"263\":1}}],[\"medium\",{\"1\":{\"148\":1}}],[\"me\",{\"1\":{\"78\":3,\"82\":2,\"124\":1,\"127\":3,\"228\":2,\"271\":1}}],[\"method=\",{\"1\":{\"96\":1,\"171\":1,\"175\":1}}],[\"method\",{\"1\":{\"29\":1,\"96\":1,\"175\":2}}],[\"meta=commandmeta\",{\"1\":{\"255\":1,\"262\":1,\"263\":1,\"266\":1}}],[\"meta=\",{\"1\":{\"255\":1}}],[\"metadata\",{\"1\":{\"87\":1,\"300\":1}}],[\"metaevent\",{\"1\":{\"69\":1}}],[\"meta\",{\"1\":{\"18\":1,\"62\":1,\"86\":1,\"177\":1}}],[\"messagesegment\",{\"1\":{\"176\":2,\"178\":11,\"231\":1,\"232\":1,\"233\":4,\"234\":1,\"235\":7,\"236\":1,\"237\":6,\"238\":4,\"239\":1,\"240\":3,\"241\":2,\"242\":14,\"243\":26,\"244\":17}}],[\"messagetemplate\",{\"1\":{\"130\":2,\"234\":1,\"244\":3}}],[\"message=\",{\"1\":{\"123\":1}}],[\"messageevent\",{\"1\":{\"122\":2,\"177\":1}}],[\"message\",{\"0\":{\"178\":1},\"1\":{\"13\":1,\"18\":1,\"24\":3,\"62\":1,\"66\":1,\"69\":1,\"76\":1,\"82\":2,\"100\":1,\"108\":1,\"109\":1,\"110\":1,\"111\":1,\"112\":1,\"113\":1,\"115\":2,\"116\":2,\"118\":7,\"119\":2,\"123\":1,\"163\":1,\"164\":1,\"166\":1,\"176\":8,\"177\":11,\"178\":9,\"229\":1,\"231\":2,\"232\":1,\"233\":6,\"234\":1,\"235\":5,\"236\":1,\"237\":4,\"238\":4,\"239\":1,\"240\":2,\"241\":4,\"242\":17,\"243\":14,\"244\":17,\"256\":1,\"301\":4,\"302\":1,\"305\":12,\"306\":12,\"308\":4}}],[\"msg\",{\"1\":{\"112\":1,\"113\":1,\"178\":1,\"243\":9,\"305\":8,\"306\":8,\"308\":2}}],[\"ms\",{\"1\":{\"10\":2}}],[\">>>\",{\"1\":{\"233\":4,\"244\":10}}],[\">=\",{\"1\":{\"130\":1}}],[\">\",{\"1\":{\"10\":1,\"96\":1,\"115\":1,\"116\":2,\"125\":1,\"126\":2,\"127\":1,\"169\":1,\"171\":3,\"172\":3,\"174\":1,\"175\":1,\"176\":1,\"177\":11,\"178\":5,\"291\":3,\"300\":2,\"301\":2,\"302\":1,\"305\":1,\"306\":1,\"308\":1,\"309\":1}}],[\"搜索配置项\",{\"1\":{\"10\":1}}],[\"v5\",{\"1\":{\"311\":2}}],[\"v4\",{\"1\":{\"311\":2}}],[\"v|\",{\"1\":{\"265\":2}}],[\"vvv\",{\"1\":{\"262\":1}}],[\"varchar\",{\"1\":{\"299\":2,\"300\":2}}],[\"var1\",{\"1\":{\"247\":1}}],[\"var\",{\"0\":{\"249\":1},\"1\":{\"247\":4,\"249\":3}}],[\"validate\",{\"1\":{\"174\":3,\"237\":2}}],[\"value=\",{\"1\":{\"265\":3}}],[\"value=false\",{\"1\":{\"252\":1}}],[\"value=none\",{\"1\":{\"245\":1,\"265\":2}}],[\"value=ellipsis\",{\"1\":{\"245\":1,\"265\":2}}],[\"valueerror\",{\"1\":{\"177\":3}}],[\"value\",{\"1\":{\"130\":1,\"249\":1,\"250\":1,\"253\":2,\"254\":2,\"262\":1}}],[\"version\",{\"1\":{\"265\":1,\"311\":5}}],[\"verbose|\",{\"1\":{\"262\":1}}],[\"verbose\",{\"1\":{\"76\":2,\"262\":1,\"265\":2}}],[\"venv\",{\"1\":{\"206\":5}}],[\"v3\",{\"1\":{\"202\":1}}],[\"vue\",{\"1\":{\"198\":1}}],[\"vuepress\",{\"1\":{\"183\":1}}],[\"v2\",{\"0\":{\"185\":1,\"186\":1,\"187\":1,\"188\":1},\"1\":{\"186\":1,\"187\":4,\"188\":4}}],[\"v1\",{\"0\":{\"182\":1,\"183\":1,\"184\":1},\"1\":{\"183\":3,\"184\":1}}],[\"v12\",{\"0\":{\"190\":1},\"1\":{\"175\":1,\"190\":1,\"191\":3,\"192\":2}}],[\"v11\",{\"1\":{\"79\":2,\"123\":2,\"175\":1,\"190\":1,\"191\":1,\"192\":1}}],[\"v\",{\"1\":{\"76\":3,\"262\":1,\"265\":2}}],[\"vscode\",{\"1\":{\"10\":5}}],[\"visual\",{\"0\":{\"10\":1},\"1\":{\"10\":1}}],[\"配置为\",{\"1\":{\"261\":1}}],[\"配置命令分割字符\",{\"1\":{\"207\":1}}],[\"配置命令起始字符\",{\"1\":{\"207\":1}}],[\"配置文件中的字段无法满足你的需求\",{\"1\":{\"219\":1,\"220\":1}}],[\"配置文件中添加以下配置即可使用\",{\"1\":{\"147\":1}}],[\"配置文件用于存放\",{\"1\":{\"207\":1}}],[\"配置文件\",{\"1\":{\"205\":1}}],[\"配置与运行项目\",{\"1\":{\"198\":1}}],[\"配置读写等\",{\"1\":{\"191\":1,\"192\":1}}],[\"配置读写等功能\",{\"1\":{\"191\":1,\"192\":1}}],[\"配置需要包含\",{\"1\":{\"157\":1}}],[\"配置参数\",{\"1\":{\"157\":1}}],[\"配置插件\",{\"0\":{\"147\":1}}],[\"配置目录为\",{\"1\":{\"139\":1}}],[\"配置项需符合\",{\"1\":{\"207\":1}}],[\"配置项的读取将在下方\",{\"1\":{\"168\":1}}],[\"配置项具体含义参考\",{\"1\":{\"148\":1}}],[\"配置项过滤日志等级\",{\"1\":{\"119\":1}}],[\"配置项来过滤输出等级\",{\"1\":{\"118\":1}}],[\"配置项\",{\"0\":{\"35\":1,\"47\":1,\"135\":1,\"148\":1,\"154\":1,\"267\":1},\"1\":{\"214\":1}}],[\"配置驱动器\",{\"0\":{\"30\":1}}],[\"配置\",{\"0\":{\"287\":1},\"1\":{\"10\":1,\"179\":1,\"184\":1,\"207\":2}}],[\"配置以达到最佳开发体验\",{\"1\":{\"10\":1}}],[\"配合编辑器的类型推导功能\",{\"1\":{\"3\":1}}],[\"tutorial\",{\"0\":{\"327\":1}}],[\"tuple\",{\"1\":{\"81\":2,\"310\":6}}],[\"txt\",{\"1\":{\"311\":2}}],[\"tiger\",{\"1\":{\"289\":1}}],[\"tips\",{\"1\":{\"251\":2}}],[\"timezone\",{\"1\":{\"157\":2}}],[\"time\",{\"1\":{\"67\":3,\"69\":1,\"119\":2,\"122\":2}}],[\"timeout\",{\"1\":{\"29\":2,\"148\":1,\"290\":1}}],[\"tsx\",{\"1\":{\"202\":1}}],[\"ts\",{\"1\":{\"202\":1}}],[\"targets\",{\"0\":{\"277\":1}}],[\"tada\",{\"1\":{\"244\":4}}],[\"table=<weather>\",{\"1\":{\"300\":2}}],[\"tablename\",{\"1\":{\"299\":2}}],[\"table\",{\"1\":{\"220\":1,\"299\":3,\"300\":8}}],[\"tailwind\",{\"1\":{\"202\":1}}],[\"tailwindcss\",{\"1\":{\"202\":1}}],[\"tag\",{\"1\":{\"177\":2,\"178\":1}}],[\"task\",{\"1\":{\"171\":7,\"174\":1}}],[\"tmp\",{\"1\":{\"137\":1,\"138\":1,\"139\":1,\"140\":1,\"141\":1,\"142\":1}}],[\"typing\",{\"1\":{\"130\":3,\"169\":2,\"171\":1,\"174\":1,\"175\":2,\"176\":2,\"177\":1,\"178\":2,\"249\":1,\"265\":1,\"301\":1,\"308\":1}}],[\"typeddict\",{\"1\":{\"259\":1}}],[\"typeadapter\",{\"1\":{\"237\":4}}],[\"type=\",{\"1\":{\"86\":1,\"233\":2,\"244\":6}}],[\"typecheckingmode\",{\"1\":{\"10\":1}}],[\"type\",{\"1\":{\"10\":2,\"18\":2,\"34\":1,\"58\":1,\"62\":1,\"69\":1,\"79\":3,\"86\":1,\"115\":1,\"174\":3,\"176\":2,\"177\":5,\"178\":4,\"179\":1,\"184\":1,\"186\":1,\"187\":1,\"188\":1,\"226\":1,\"233\":1,\"237\":2,\"242\":1,\"246\":1,\"249\":1,\"250\":1,\"254\":1,\"256\":1,\"257\":1}}],[\"t\",{\"1\":{\"130\":8,\"171\":1,\"172\":1,\"301\":3}}],[\"tortoise\",{\"1\":{\"301\":1}}],[\"tool\",{\"1\":{\"179\":1,\"214\":1,\"220\":2}}],[\"token\",{\"1\":{\"168\":1,\"171\":1}}],[\"toml\",{\"1\":{\"86\":1,\"92\":1,\"164\":1,\"179\":1,\"214\":3,\"220\":6}}],[\"tome\",{\"1\":{\"26\":2,\"108\":1,\"110\":1,\"177\":1,\"227\":1}}],[\"to\",{\"1\":{\"78\":3,\"82\":1,\"127\":1,\"171\":4,\"172\":1,\"174\":2,\"176\":1,\"216\":2,\"217\":1,\"218\":2,\"219\":2,\"220\":2,\"228\":1,\"271\":1}}],[\"testing\",{\"0\":{\"330\":1}}],[\"tests\",{\"1\":{\"311\":2}}],[\"test123\",{\"1\":{\"262\":1}}],[\"test4\",{\"1\":{\"242\":1}}],[\"test3\",{\"1\":{\"242\":3}}],[\"test2\",{\"1\":{\"242\":6}}],[\"test\",{\"1\":{\"195\":1,\"241\":1,\"242\":3,\"248\":5,\"252\":2,\"262\":1,\"263\":4,\"264\":2,\"266\":2,\"293\":6,\"294\":3,\"311\":4}}],[\"term\",{\"1\":{\"179\":1}}],[\"telegram\",{\"0\":{\"187\":1},\"1\":{\"172\":1,\"175\":1,\"178\":1,\"187\":5,\"199\":1}}],[\"template\",{\"1\":{\"158\":1,\"244\":6}}],[\"temp\",{\"1\":{\"67\":2,\"69\":1}}],[\"text\",{\"1\":{\"25\":1,\"84\":1,\"134\":2,\"175\":2,\"178\":3,\"231\":1,\"233\":4,\"235\":2,\"237\":14,\"238\":9,\"240\":5,\"241\":5,\"242\":6,\"243\":50,\"244\":11,\"252\":1,\"301\":3,\"302\":6}}],[\"threshold\",{\"1\":{\"255\":1}}],[\"third\",{\"1\":{\"243\":2}}],[\"thirdparty\",{\"1\":{\"208\":1}}],[\"this\",{\"1\":{\"11\":1,\"118\":7}}],[\"theme\",{\"1\":{\"202\":2}}],[\"the\",{\"1\":{\"46\":1}}],[\"transport\",{\"1\":{\"148\":1}}],[\"traceback\",{\"1\":{\"118\":1,\"300\":1}}],[\"trace\",{\"1\":{\"118\":2}}],[\"trying\",{\"1\":{\"171\":2}}],[\"try\",{\"1\":{\"97\":1,\"118\":1,\"130\":5,\"167\":1,\"171\":2,\"174\":1}}],[\"true\",{\"1\":{\"39\":1,\"66\":1,\"67\":1,\"75\":1,\"76\":2,\"97\":1,\"125\":1,\"137\":1,\"138\":1,\"139\":1,\"148\":1,\"155\":1,\"171\":1,\"227\":1,\"238\":1,\"246\":1,\"249\":1,\"253\":1,\"289\":1,\"290\":1}}],[\"trio\",{\"1\":{\"2\":1}}],[\"并不能通过它操作数据\",{\"1\":{\"301\":1}}],[\"并不能\",{\"1\":{\"301\":1}}],[\"并不推荐你这么做\",{\"1\":{\"299\":1}}],[\"并不会将其当作插件进行跟踪\",{\"1\":{\"92\":1}}],[\"并处理\",{\"1\":{\"293\":1}}],[\"并开启\",{\"1\":{\"289\":1}}],[\"并附带\",{\"1\":{\"280\":1}}],[\"并安装\",{\"1\":{\"280\":1}}],[\"并返回对应的值\",{\"1\":{\"249\":1}}],[\"并返回通过该函数调用得到的\",{\"1\":{\"249\":1}}],[\"并返回结果\",{\"1\":{\"128\":1}}],[\"并按照特定的流程交由预定义的事件处理依赖进行处理\",{\"1\":{\"225\":1}}],[\"并写入以下内容\",{\"1\":{\"207\":1,\"208\":1}}],[\"并定时更新\",{\"1\":{\"203\":1}}],[\"并在检查失败时阻止启动\",{\"1\":{\"286\":1}}],[\"并在解析失败时使用默认值\",{\"1\":{\"249\":1}}],[\"并在人工审核通过后自动存储至\",{\"1\":{\"203\":1}}],[\"并在异步机制的基础上进行了一定程度的同步函数兼容\",{\"1\":{\"2\":1}}],[\"并向全球高校学生开放报名\",{\"1\":{\"201\":1}}],[\"并更新\",{\"1\":{\"183\":1}}],[\"并更新该事件响应器使其响应当前会话主体的消息\",{\"1\":{\"114\":1}}],[\"并实现相关方法\",{\"1\":{\"176\":1,\"177\":1,\"178\":1}}],[\"并实现适配器的基本信息\",{\"1\":{\"169\":1}}],[\"并提供回复事件\",{\"1\":{\"176\":1}}],[\"并提供回复事件的方法\",{\"1\":{\"13\":1}}],[\"并调用\",{\"1\":{\"174\":1}}],[\"并调用适配器提供的的\",{\"1\":{\"173\":1}}],[\"并编写相关方法用于初始化适配器\",{\"1\":{\"170\":1}}],[\"并以命名空间包的形式编写\",{\"1\":{\"164\":1}}],[\"并根据实际平台来编写每个部分功能\",{\"1\":{\"163\":1}}],[\"并且迁移了数据库\",{\"1\":{\"301\":1}}],[\"并且在开发环境中测试\",{\"1\":{\"300\":1}}],[\"并且最好跟随实践\",{\"1\":{\"297\":1}}],[\"并且删除它的数据\",{\"1\":{\"281\":1}}],[\"并且可以通过\",{\"1\":{\"261\":1}}],[\"并且传递参数给原命令\",{\"1\":{\"259\":1}}],[\"并且注意要根据事件类型实现\",{\"1\":{\"177\":1}}],[\"并且根据需要进行调整\",{\"1\":{\"300\":1}}],[\"并且根据\",{\"1\":{\"119\":1}}],[\"并且不局限于解析命令式字符串\",{\"1\":{\"84\":1,\"245\":1}}],[\"并结合为辅助函数来方便我们快速创建指定功能的响应器\",{\"1\":{\"69\":1}}],[\"并接收接口返回数据\",{\"1\":{\"13\":1}}],[\"并将其值设置为\",{\"1\":{\"10\":2}}],[\"并启用\",{\"1\":{\"10\":1}}],[\"中统一使用插件模块名\",{\"1\":{\"278\":1}}],[\"中传入\",{\"1\":{\"266\":1}}],[\"中存储匹配组\",{\"1\":{\"261\":1}}],[\"中存在匹配组\",{\"1\":{\"261\":1}}],[\"中提供了一系列\",{\"1\":{\"226\":1}}],[\"中提供了以下两种直接添加任务的方式\",{\"1\":{\"153\":1}}],[\"中所有事件响应器均继承自\",{\"1\":{\"226\":1}}],[\"中加载插件\",{\"1\":{\"215\":1}}],[\"中找到\",{\"1\":{\"206\":2}}],[\"中介绍\",{\"1\":{\"168\":1}}],[\"中选择\",{\"1\":{\"158\":1}}],[\"中导入\",{\"1\":{\"118\":1}}],[\"中有一系列预定义的钩子函数\",{\"1\":{\"101\":1}}],[\"中直接导入插件\",{\"1\":{\"93\":1}}],[\"中使用\",{\"1\":{\"93\":1}}],[\"中添加\",{\"1\":{\"179\":1,\"214\":1}}],[\"中添加适配器名称前缀\",{\"1\":{\"167\":1}}],[\"中添加如下代码\",{\"1\":{\"90\":1}}],[\"中添加插件元数据\",{\"1\":{\"86\":1}}],[\"中包含了多个属性\",{\"1\":{\"87\":1}}],[\"中匹配消息中除\",{\"1\":{\"84\":1}}],[\"中的更改\",{\"1\":{\"305\":1,\"306\":1}}],[\"中的网络通信主要包括以下几种\",{\"1\":{\"292\":1}}],[\"中的类型\",{\"1\":{\"249\":1}}],[\"中的内容为\",{\"1\":{\"246\":1}}],[\"中的消息载体\",{\"1\":{\"229\":1}}],[\"中的基本组成部分\",{\"1\":{\"224\":1}}],[\"中的基类\",{\"1\":{\"163\":1,\"166\":1}}],[\"中的\",{\"1\":{\"220\":1,\"246\":1,\"248\":1}}],[\"中的事件主体对象\",{\"1\":{\"177\":1}}],[\"中的会话状态是一个字典\",{\"1\":{\"130\":1}}],[\"中的客户端和服务端型驱动器可以相互配合使用\",{\"1\":{\"30\":1}}],[\"中的第一个\",{\"1\":{\"16\":1}}],[\"中\",{\"1\":{\"10\":1,\"13\":1,\"84\":1,\"86\":1,\"94\":1,\"114\":1,\"122\":1,\"149\":1,\"169\":1,\"180\":1,\"184\":2,\"187\":1,\"188\":1,\"190\":1,\"192\":1,\"211\":1,\"225\":1,\"226\":1,\"229\":1,\"231\":1,\"248\":2,\"249\":1,\"254\":1}}],[\"ctx\",{\"1\":{\"293\":5,\"294\":2}}],[\"cp\",{\"1\":{\"264\":1}}],[\"cb\",{\"1\":{\"261\":1}}],[\"css\",{\"1\":{\"202\":1}}],[\"chatrecorder\",{\"1\":{\"283\":1}}],[\"changelog\",{\"1\":{\"202\":1}}],[\"checkout\",{\"1\":{\"311\":2}}],[\"check=false\",{\"1\":{\"300\":1}}],[\"check=true\",{\"1\":{\"286\":1}}],[\"check\",{\"0\":{\"286\":1},\"1\":{\"280\":1,\"281\":1,\"286\":1}}],[\"checker\",{\"1\":{\"127\":4,\"128\":1}}],[\"checking\",{\"1\":{\"10\":2,\"176\":2}}],[\"ci\",{\"1\":{\"184\":2}}],[\"cqhttp\",{\"1\":{\"183\":2,\"191\":1,\"192\":1}}],[\"current\",{\"1\":{\"171\":1,\"172\":1}}],[\"custom\",{\"1\":{\"100\":1}}],[\"customprovider\",{\"1\":{\"58\":1,\"59\":2}}],[\"certs\",{\"1\":{\"148\":1}}],[\"c\",{\"1\":{\"137\":1,\"138\":2,\"139\":2,\"192\":1}}],[\"cwd=true\",{\"1\":{\"136\":1}}],[\"cwd\",{\"0\":{\"136\":1},\"1\":{\"137\":1,\"138\":1,\"139\":1}}],[\"c>\",{\"1\":{\"119\":2}}],[\"crlf\",{\"1\":{\"255\":1}}],[\"cron\",{\"1\":{\"153\":1}}],[\"critical\",{\"1\":{\"118\":3}}],[\"createtable\",{\"1\":{\"299\":2}}],[\"create\",{\"1\":{\"89\":2,\"165\":1,\"171\":1,\"174\":1,\"214\":1,\"289\":1,\"290\":1,\"299\":2,\"300\":3}}],[\"ca\",{\"1\":{\"148\":1}}],[\"caches\",{\"1\":{\"137\":1}}],[\"cache\",{\"0\":{\"137\":1,\"140\":1},\"1\":{\"134\":4,\"137\":5,\"140\":2,\"256\":1}}],[\"called\",{\"1\":{\"113\":1}}],[\"call\",{\"1\":{\"112\":1,\"175\":2,\"300\":1}}],[\"calling\",{\"1\":{\"112\":1,\"175\":1}}],[\"callable\",{\"1\":{\"96\":1,\"97\":1,\"148\":2,\"249\":1}}],[\"cancel\",{\"1\":{\"171\":1}}],[\"can\",{\"1\":{\"94\":1}}],[\"cmd\",{\"1\":{\"75\":2,\"76\":3,\"81\":15,\"261\":3}}],[\"cleoold\",{\"1\":{\"183\":1,\"184\":1}}],[\"cleanup\",{\"1\":{\"97\":1}}],[\"cls\",{\"1\":{\"169\":1,\"174\":1,\"178\":2}}],[\"close\",{\"1\":{\"97\":1,\"203\":1}}],[\"closed<\",{\"1\":{\"171\":1}}],[\"closed\",{\"1\":{\"97\":1}}],[\"classmethod\",{\"1\":{\"169\":1,\"174\":1,\"178\":2}}],[\"class\",{\"1\":{\"58\":1,\"168\":1,\"169\":1,\"171\":1,\"172\":1,\"173\":1,\"174\":2,\"175\":1,\"176\":1,\"177\":5,\"178\":4,\"259\":1,\"265\":2,\"299\":2,\"302\":1,\"305\":1,\"306\":1,\"308\":1}}],[\"click\",{\"1\":{\"300\":1}}],[\"clients\",{\"1\":{\"55\":1}}],[\"clientsession\",{\"1\":{\"7\":1}}],[\"client\",{\"1\":{\"54\":1,\"56\":1,\"146\":1,\"171\":2,\"293\":5,\"294\":4}}],[\"cli\",{\"0\":{\"165\":1,\"194\":1,\"282\":1},\"1\":{\"4\":2,\"40\":1,\"48\":1,\"89\":1,\"134\":1,\"194\":6,\"198\":3,\"200\":1,\"204\":2,\"205\":3,\"208\":1,\"209\":2,\"214\":2,\"215\":2,\"282\":1,\"311\":2}}],[\"collections\",{\"1\":{\"300\":1,\"302\":2}}],[\"column\",{\"1\":{\"299\":2,\"300\":6,\"302\":1,\"305\":2,\"306\":2,\"308\":2}}],[\"colors=true\",{\"1\":{\"118\":1}}],[\"colors\",{\"1\":{\"118\":1}}],[\"cov\",{\"1\":{\"179\":2}}],[\"community\",{\"0\":{\"324\":1}}],[\"commit\",{\"1\":{\"301\":2,\"305\":1}}],[\"commands\",{\"1\":{\"300\":9}}],[\"commandstart\",{\"1\":{\"75\":1}}],[\"command的使用\",{\"0\":{\"261\":1}}],[\"commandmeta\",{\"0\":{\"255\":1},\"1\":{\"255\":1,\"256\":1,\"262\":1,\"263\":1,\"266\":1}}],[\"commandgroup\",{\"1\":{\"81\":6}}],[\"commandwhitespace\",{\"1\":{\"75\":1}}],[\"commandarg\",{\"1\":{\"75\":1,\"231\":1,\"301\":4,\"302\":1}}],[\"command\",{\"0\":{\"269\":1,\"272\":1},\"1\":{\"66\":1,\"75\":15,\"76\":7,\"81\":5,\"125\":1,\"126\":1,\"127\":2,\"207\":2,\"226\":1,\"227\":3,\"228\":2,\"246\":1,\"259\":1,\"261\":5,\"269\":1,\"272\":1,\"301\":2}}],[\"comp\",{\"1\":{\"256\":2,\"264\":2,\"270\":1}}],[\"compact=true\",{\"1\":{\"262\":4}}],[\"compact\",{\"1\":{\"255\":1,\"256\":1,\"262\":1}}],[\"compat\",{\"1\":{\"174\":1,\"177\":1}}],[\"completion\",{\"0\":{\"270\":1},\"1\":{\"251\":1}}],[\"com\",{\"1\":{\"194\":2,\"195\":1,\"196\":3,\"198\":1,\"199\":1,\"200\":1,\"202\":1,\"203\":1,\"204\":1}}],[\"count\",{\"1\":{\"130\":5,\"242\":2,\"253\":2,\"260\":2,\"262\":2,\"265\":1}}],[\"conftest\",{\"1\":{\"179\":1}}],[\"config=config\",{\"1\":{\"86\":1}}],[\"config\",{\"0\":{\"139\":1,\"142\":1,\"157\":1,\"168\":1},\"1\":{\"86\":4,\"125\":7,\"126\":1,\"127\":8,\"134\":4,\"139\":4,\"142\":2,\"164\":1,\"168\":1,\"169\":7,\"171\":6,\"172\":6,\"214\":1,\"219\":1,\"220\":1,\"257\":3,\"258\":4,\"300\":1}}],[\"constraint\",{\"1\":{\"299\":1,\"300\":1}}],[\"construct\",{\"1\":{\"178\":1}}],[\"consoleadapter\",{\"1\":{\"208\":2}}],[\"consolebot\",{\"1\":{\"123\":2}}],[\"console\",{\"1\":{\"14\":2,\"15\":3,\"16\":3,\"122\":3,\"123\":2,\"195\":1,\"206\":1,\"208\":1,\"233\":2,\"235\":1,\"237\":1,\"238\":1,\"242\":1,\"244\":4}}],[\"contact\",{\"1\":{\"181\":1,\"193\":1,\"197\":1,\"201\":1}}],[\"contributing\",{\"1\":{\"161\":1,\"187\":1,\"188\":1,\"198\":1,\"199\":1,\"200\":1}}],[\"content\",{\"1\":{\"261\":4,\"262\":2}}],[\"content=\",{\"1\":{\"96\":1,\"172\":1}}],[\"context\",{\"0\":{\"274\":1},\"1\":{\"177\":2,\"255\":1,\"256\":1,\"266\":3}}],[\"contextlib\",{\"1\":{\"97\":1}}],[\"conduct\",{\"0\":{\"160\":1},\"1\":{\"160\":1}}],[\"connections\",{\"1\":{\"171\":1}}],[\"connect\",{\"1\":{\"105\":1,\"173\":3,\"294\":2}}],[\"correctness\",{\"1\":{\"55\":1}}],[\"cookie\",{\"1\":{\"29\":2}}],[\"code=200\",{\"1\":{\"172\":1}}],[\"code\",{\"0\":{\"10\":1,\"160\":1},\"1\":{\"10\":1,\"160\":1,\"193\":1,\"197\":1,\"293\":1}}],[\"框架搭建的机器人具有以下几个基本组成部分\",{\"1\":{\"224\":1}}],[\"框架的使用\",{\"1\":{\"204\":1}}],[\"框架与\",{\"1\":{\"203\":1}}],[\"框架进行构建\",{\"1\":{\"202\":1}}],[\"框架功能与插件编写\",{\"1\":{\"200\":1}}],[\"框架功能\",{\"1\":{\"194\":1,\"195\":1,\"196\":1,\"198\":1,\"199\":1}}],[\"框架\",{\"1\":{\"34\":1,\"200\":1}}],[\"框架初始化完成后\",{\"1\":{\"31\":1}}],[\"框架使用\",{\"1\":{\"8\":1}}],[\"框架基于\",{\"1\":{\"8\":1,\"203\":1}}],[\"还提供了一种更加简洁的方式来使用正则表达式\",{\"1\":{\"246\":1}}],[\"还可以使用本地文件来自行管理数据\",{\"1\":{\"132\":1}}],[\"还有其他平台提供的信息\",{\"1\":{\"121\":1}}],[\"还有几个可选的属性\",{\"1\":{\"86\":1}}],[\"还有更多\",{\"1\":{\"7\":1}}],[\"还内置了一些常用的响应规则\",{\"1\":{\"69\":1}}],[\"还能尽量减少代码的耦合和重复\",{\"1\":{\"7\":1}}],[\"它记录了数据库模式的变化\",{\"1\":{\"300\":1}}],[\"它定义了一个路由\",{\"1\":{\"293\":1,\"294\":1}}],[\"它定义的事件响应器能响应机器人用户发送的\",{\"1\":{\"225\":1}}],[\"它要求创建的alconna的主命令前缀必须是\",{\"1\":{\"257\":1}}],[\"它在提醒我们\",{\"1\":{\"300\":1}}],[\"它在以下常见场景中尤其有用\",{\"1\":{\"244\":1}}],[\"它在完成上述工作的同时\",{\"1\":{\"7\":1}}],[\"它的用法和\",{\"1\":{\"244\":1}}],[\"它的类型即是消息序列\",{\"1\":{\"231\":1}}],[\"它的模块结构如下\",{\"1\":{\"86\":1}}],[\"它可能是一段纯文本\",{\"1\":{\"229\":1}}],[\"它可以匹配多个会话\",{\"1\":{\"116\":1}}],[\"它由\",{\"1\":{\"203\":1}}],[\"它由一系列的\",{\"1\":{\"124\":1}}],[\"它接收三个参数\",{\"1\":{\"167\":1}}],[\"它会根据类型标注和\",{\"1\":{\"302\":1}}],[\"它会根据配置中的\",{\"1\":{\"75\":1}}],[\"它会并发调用每个\",{\"1\":{\"126\":1}}],[\"它会检查配置项\",{\"1\":{\"125\":1}}],[\"它将会话的触发权限更新为当前事件的会话\",{\"1\":{\"116\":1}}],[\"它允许插件开发者为插件添加一些额外的信息\",{\"1\":{\"86\":1}}],[\"它们是用来创建和删除表的\",{\"1\":{\"300\":1}}],[\"它们专为其他插件提供功能支持\",{\"1\":{\"91\":1}}],[\"它们可以帮助我们进行响应器的统一管理\",{\"1\":{\"80\":1}}],[\"它们默认存储在一个字典中\",{\"1\":{\"57\":1}}],[\"它首先与\",{\"1\":{\"76\":1}}],[\"它用于匹配消息是否为命令\",{\"1\":{\"75\":1}}],[\"它决定了整个\",{\"1\":{\"57\":1}}],[\"它是机器人初始化的第一步\",{\"1\":{\"28\":1}}],[\"它是机器人的唯一\",{\"1\":{\"16\":1}}],[\"它负责在驱动器和机器人插件之间转换与传递消息\",{\"1\":{\"12\":1}}],[\"它基于\",{\"1\":{\"0\":1}}],[\"sqldepends\",{\"0\":{\"309\":1},\"1\":{\"302\":4,\"309\":2}}],[\"sql\",{\"1\":{\"300\":1,\"302\":2,\"309\":3,\"310\":12}}],[\"sqlite3\",{\"1\":{\"311\":2}}],[\"sqlite+aiosqlite\",{\"1\":{\"289\":1,\"311\":2}}],[\"sqlite\",{\"1\":{\"280\":2,\"289\":1,\"311\":12}}],[\"sqlalchemy\",{\"0\":{\"288\":1,\"289\":1,\"290\":1,\"291\":1},\"1\":{\"7\":1,\"200\":2,\"288\":2,\"289\":1,\"290\":1,\"291\":5,\"297\":1,\"299\":2,\"300\":1,\"301\":1,\"302\":1,\"305\":1,\"306\":1,\"308\":1,\"309\":1,\"311\":2}}],[\"sa\",{\"1\":{\"300\":11,\"310\":4}}],[\"saa\",{\"0\":{\"275\":1},\"1\":{\"275\":1}}],[\"sample\",{\"1\":{\"148\":1}}],[\"same\",{\"1\":{\"139\":1}}],[\"slice\",{\"1\":{\"242\":1}}],[\"sleep\",{\"1\":{\"171\":1}}],[\"size\",{\"1\":{\"290\":1}}],[\"single\",{\"1\":{\"222\":1}}],[\"simplicity\",{\"1\":{\"55\":1}}],[\"src\",{\"1\":{\"217\":1}}],[\"source\",{\"1\":{\"206\":1}}],[\"something\",{\"1\":{\"103\":1,\"104\":1,\"105\":1,\"106\":1,\"108\":1,\"109\":1,\"110\":1,\"111\":1,\"167\":1,\"172\":2}}],[\"some\",{\"1\":{\"93\":1,\"97\":1,\"108\":1,\"110\":1,\"128\":1,\"130\":1,\"240\":1}}],[\"scalarresult\",{\"1\":{\"310\":1}}],[\"scalars\",{\"1\":{\"308\":1,\"310\":7}}],[\"scoped\",{\"0\":{\"306\":1},\"1\":{\"301\":8,\"305\":2,\"306\":4}}],[\"scott\",{\"1\":{\"289\":1}}],[\"sct\",{\"1\":{\"264\":1}}],[\"scripts\",{\"1\":{\"206\":1}}],[\"scheduled\",{\"1\":{\"153\":1}}],[\"scheduler\",{\"1\":{\"149\":1,\"152\":2,\"153\":3,\"155\":2}}],[\"schema=none\",{\"1\":{\"300\":1}}],[\"schema\",{\"1\":{\"39\":1,\"299\":1}}],[\"sk\",{\"1\":{\"196\":1}}],[\"sphinx\",{\"1\":{\"184\":1,\"187\":1,\"188\":1}}],[\"sys\",{\"1\":{\"119\":1}}],[\"sync\",{\"1\":{\"54\":1}}],[\"ssg\",{\"1\":{\"202\":2}}],[\"ss\",{\"1\":{\"119\":2}}],[\"shortcutregwrapper\",{\"1\":{\"259\":1}}],[\"shortcutargs\",{\"1\":{\"259\":2}}],[\"shortcut\",{\"1\":{\"255\":1,\"256\":2,\"259\":2,\"260\":1,\"261\":8,\"264\":1}}],[\"shanghai\",{\"1\":{\"157\":1}}],[\"share\",{\"1\":{\"138\":1}}],[\"shutdown\",{\"1\":{\"104\":1,\"148\":1,\"171\":3}}],[\"shelltextformatter\",{\"1\":{\"257\":2}}],[\"shellcommandargs\",{\"1\":{\"76\":1}}],[\"shellcommandargv\",{\"1\":{\"76\":1}}],[\"shell\",{\"1\":{\"76\":7}}],[\"sun\",{\"1\":{\"203\":1}}],[\"summer\",{\"1\":{\"193\":1,\"197\":1}}],[\"super\",{\"1\":{\"169\":1,\"171\":1,\"172\":1,\"176\":1}}],[\"suppress\",{\"1\":{\"97\":1}}],[\"supported\",{\"1\":{\"86\":1}}],[\"support\",{\"1\":{\"54\":1,\"138\":1,\"171\":1,\"172\":1}}],[\"success\",{\"1\":{\"118\":3,\"293\":1,\"294\":1,\"300\":1}}],[\"subcomanndresult\",{\"1\":{\"252\":1}}],[\"subcommandstub\",{\"1\":{\"265\":4}}],[\"subcommands\",{\"1\":{\"254\":1}}],[\"subcommands=\",{\"1\":{\"245\":2,\"265\":2}}],[\"subcommand\",{\"0\":{\"252\":1},\"1\":{\"245\":3,\"252\":5,\"257\":3,\"262\":1,\"265\":2}}],[\"sub\",{\"1\":{\"81\":3,\"87\":1,\"89\":1,\"90\":1}}],[\"swagger\",{\"1\":{\"37\":2}}],[\"steps\",{\"1\":{\"311\":2}}],[\"style=\",{\"1\":{\"266\":1}}],[\"style\",{\"0\":{\"274\":1},\"1\":{\"255\":1,\"256\":1,\"266\":2}}],[\"stdout\",{\"1\":{\"119\":1}}],[\"store\",{\"1\":{\"76\":2,\"134\":8,\"253\":6}}],[\"stop\",{\"1\":{\"66\":1}}],[\"staticmethod\",{\"1\":{\"178\":1}}],[\"status\",{\"1\":{\"172\":1,\"293\":2,\"294\":1}}],[\"state\",{\"1\":{\"68\":1,\"69\":1,\"128\":1,\"130\":17,\"301\":9}}],[\"stacktrace\",{\"1\":{\"148\":1}}],[\"start=\",{\"1\":{\"207\":1}}],[\"startup\",{\"1\":{\"103\":1,\"171\":3,\"286\":1,\"300\":2}}],[\"start\",{\"0\":{\"269\":1},\"1\":{\"75\":2,\"155\":1,\"269\":1}}],[\"startswith\",{\"1\":{\"71\":5,\"311\":4}}],[\"standard\",{\"1\":{\"34\":1}}],[\"strategy\",{\"1\":{\"311\":2}}],[\"stream\",{\"1\":{\"308\":1,\"310\":9}}],[\"strict\",{\"1\":{\"255\":1,\"256\":1}}],[\"string\",{\"1\":{\"21\":1,\"246\":1,\"300\":6}}],[\"strftime\",{\"1\":{\"122\":1}}],[\"str\",{\"1\":{\"18\":1,\"19\":1,\"20\":1,\"21\":1,\"22\":1,\"23\":1,\"25\":1,\"36\":1,\"37\":1,\"38\":1,\"41\":1,\"43\":1,\"44\":1,\"45\":1,\"49\":1,\"51\":1,\"52\":1,\"53\":1,\"87\":1,\"90\":1,\"96\":2,\"97\":1,\"112\":2,\"113\":2,\"115\":1,\"122\":1,\"130\":1,\"148\":11,\"168\":2,\"169\":1,\"174\":3,\"175\":3,\"176\":2,\"177\":14,\"178\":3,\"179\":1,\"232\":1,\"234\":1,\"235\":2,\"236\":1,\"238\":1,\"243\":1,\"244\":3,\"245\":3,\"248\":2,\"249\":5,\"250\":3,\"257\":2,\"259\":2,\"261\":3,\"262\":2,\"265\":12,\"273\":1,\"299\":2,\"300\":9,\"301\":3,\"302\":4,\"305\":1,\"306\":1}}],[\"studio\",{\"0\":{\"10\":1},\"1\":{\"10\":1}}],[\"services\",{\"1\":{\"311\":2}}],[\"servers\",{\"1\":{\"55\":1}}],[\"server\",{\"1\":{\"10\":2,\"56\":1,\"96\":1,\"97\":1,\"99\":1,\"148\":1,\"172\":4,\"293\":6,\"294\":3}}],[\"sequence\",{\"1\":{\"300\":4,\"302\":4,\"310\":6}}],[\"second\",{\"1\":{\"243\":2}}],[\"seg\",{\"1\":{\"243\":2}}],[\"segment\",{\"1\":{\"178\":1,\"233\":3,\"239\":1}}],[\"sep\",{\"0\":{\"272\":1},\"1\":{\"272\":1}}],[\"sep=\",{\"1\":{\"207\":1}}],[\"separators\",{\"1\":{\"256\":1}}],[\"separator\",{\"1\":{\"75\":2}}],[\"seo\",{\"1\":{\"202\":3}}],[\"sentry\",{\"0\":{\"146\":1},\"1\":{\"143\":2,\"144\":2,\"146\":1,\"147\":3,\"148\":22}}],[\"send\",{\"0\":{\"268\":1},\"1\":{\"97\":1,\"112\":1,\"113\":1,\"123\":1,\"148\":2,\"175\":5,\"176\":2,\"294\":1,\"301\":2,\"302\":3,\"305\":1,\"306\":1}}],[\"search\",{\"1\":{\"77\":1}}],[\"setu\",{\"1\":{\"260\":2,\"261\":3}}],[\"setup\",{\"1\":{\"96\":1,\"97\":1,\"171\":3,\"172\":8,\"311\":2}}],[\"settings\",{\"1\":{\"138\":1,\"139\":2}}],[\"set\",{\"1\":{\"59\":2,\"87\":2}}],[\"select\",{\"1\":{\"302\":3,\"308\":1,\"309\":3}}],[\"selectoreventloop\",{\"1\":{\"40\":2}}],[\"self\",{\"1\":{\"16\":1,\"169\":2,\"171\":21,\"172\":13,\"173\":6,\"174\":2,\"175\":3,\"176\":8,\"177\":15,\"178\":3}}],[\"session2\",{\"1\":{\"116\":1}}],[\"session1\",{\"1\":{\"116\":1}}],[\"session\",{\"0\":{\"306\":1},\"1\":{\"7\":1,\"23\":2,\"177\":1,\"222\":1,\"283\":1,\"301\":30,\"305\":11,\"306\":11,\"308\":1,\"310\":21}}],[\"和模块名\",{\"1\":{\"278\":1}}],[\"和实现方式\",{\"1\":{\"186\":1}}],[\"和其它语言集成测试框架\",{\"1\":{\"186\":1}}],[\"和用户交互的过程即是会话\",{\"1\":{\"130\":1}}],[\"和群\",{\"1\":{\"116\":1}}],[\"和\",{\"1\":{\"7\":1,\"10\":1,\"67\":1,\"75\":1,\"95\":1,\"96\":1,\"99\":1,\"123\":1,\"134\":2,\"163\":1,\"166\":1,\"175\":1,\"177\":1,\"178\":1,\"181\":1,\"183\":1,\"184\":1,\"186\":1,\"187\":1,\"188\":1,\"191\":1,\"192\":1,\"193\":1,\"197\":1,\"201\":1,\"204\":1,\"220\":1,\"252\":1,\"263\":1,\"265\":1,\"288\":1,\"291\":1,\"297\":1,\"300\":1,\"311\":1}}],[\"autoincrement=true\",{\"1\":{\"305\":1,\"306\":1,\"308\":1}}],[\"auto\",{\"0\":{\"268\":1,\"270\":1},\"1\":{\"300\":5}}],[\"autostart\",{\"0\":{\"155\":1}}],[\"author\",{\"1\":{\"255\":1}}],[\"abc\",{\"1\":{\"248\":3,\"261\":1,\"262\":1,\"264\":1,\"300\":1,\"302\":2}}],[\"arparma\",{\"0\":{\"254\":1},\"1\":{\"245\":1,\"248\":1,\"254\":3}}],[\"arclet\",{\"1\":{\"245\":1,\"247\":1,\"248\":2,\"249\":1,\"252\":1,\"255\":1,\"257\":1,\"258\":1,\"260\":1,\"261\":2,\"262\":3,\"263\":1,\"264\":1,\"265\":2,\"266\":1}}],[\"arcletproject\",{\"1\":{\"245\":1}}],[\"array\",{\"1\":{\"220\":1}}],[\"arg\",{\"1\":{\"302\":5}}],[\"argsstub\",{\"1\":{\"265\":1}}],[\"args的使用\",{\"0\":{\"260\":1}}],[\"args\",{\"0\":{\"247\":1},\"1\":{\"245\":7,\"247\":6,\"248\":6,\"249\":4,\"250\":1,\"252\":1,\"253\":6,\"254\":13,\"257\":3,\"259\":1,\"260\":3,\"261\":4,\"262\":5,\"264\":2,\"265\":4,\"266\":2,\"301\":6,\"302\":2}}],[\"args=argsstub\",{\"1\":{\"265\":3}}],[\"args=args\",{\"1\":{\"265\":3}}],[\"args=\",{\"1\":{\"153\":2,\"245\":3,\"252\":1,\"265\":1}}],[\"arg1\",{\"1\":{\"153\":2}}],[\"arg2\",{\"1\":{\"153\":4}}],[\"argplaintext\",{\"1\":{\"122\":1,\"130\":1,\"301\":2}}],[\"argparse\",{\"1\":{\"76\":3,\"265\":1}}],[\"argv\",{\"1\":{\"76\":1}}],[\"argument\",{\"1\":{\"76\":2}}],[\"argumentparser\",{\"1\":{\"76\":4}}],[\"ai\",{\"1\":{\"183\":1}}],[\"aiocqhttp\",{\"1\":{\"183\":3}}],[\"aiohttp\",{\"0\":{\"56\":1},\"1\":{\"7\":1,\"56\":1}}],[\"attach\",{\"1\":{\"148\":1}}],[\"activate\",{\"1\":{\"206\":2}}],[\"action\",{\"0\":{\"253\":1},\"1\":{\"203\":1,\"253\":3,\"262\":1}}],[\"actions\",{\"1\":{\"184\":2,\"311\":6}}],[\"action=count\",{\"1\":{\"262\":1,\"265\":1}}],[\"action=append\",{\"1\":{\"262\":1}}],[\"action=\",{\"1\":{\"76\":2}}],[\"accept\",{\"1\":{\"97\":1}}],[\"await\",{\"1\":{\"97\":4,\"122\":1,\"123\":4,\"128\":1,\"130\":5,\"171\":1,\"175\":7,\"176\":2,\"293\":1,\"294\":2,\"301\":18,\"302\":3,\"305\":4,\"306\":4,\"308\":2,\"310\":19}}],[\"awaitable\",{\"1\":{\"96\":1,\"97\":1}}],[\"awesome\",{\"1\":{\"86\":2,\"87\":1,\"89\":1,\"183\":2,\"208\":1,\"214\":13}}],[\"available=false\",{\"1\":{\"265\":4}}],[\"available=true\",{\"1\":{\"265\":2}}],[\"available\",{\"1\":{\"87\":2,\"191\":1,\"192\":1}}],[\"alias=\",{\"1\":{\"252\":1}}],[\"alias\",{\"1\":{\"251\":1,\"252\":1}}],[\"aliases\",{\"1\":{\"81\":2}}],[\"aliases=true\",{\"1\":{\"81\":2}}],[\"aliases=\",{\"1\":{\"75\":1,\"81\":1,\"127\":1,\"228\":1,\"265\":2}}],[\"alc\",{\"1\":{\"245\":2,\"246\":2,\"248\":4,\"255\":1,\"257\":2,\"260\":3,\"261\":9,\"262\":6,\"263\":2,\"264\":2,\"265\":3,\"266\":2}}],[\"alconnaresult\",{\"1\":{\"84\":1}}],[\"alconna\",{\"0\":{\"84\":1,\"245\":1,\"268\":1,\"269\":1,\"270\":1,\"271\":1,\"272\":1,\"273\":1,\"274\":1,\"275\":1,\"276\":1,\"277\":1,\"328\":1},\"1\":{\"84\":6,\"204\":2,\"245\":5,\"246\":5,\"247\":1,\"248\":6,\"249\":1,\"252\":2,\"253\":1,\"254\":1,\"255\":4,\"256\":3,\"257\":4,\"258\":1,\"259\":1,\"260\":4,\"261\":9,\"262\":10,\"263\":3,\"264\":3,\"265\":4,\"266\":3,\"269\":1,\"271\":1,\"272\":1,\"316\":1}}],[\"all\",{\"1\":{\"218\":1,\"219\":2,\"220\":2,\"245\":1,\"254\":3,\"310\":3}}],[\"algolia\",{\"1\":{\"202\":2}}],[\"alembic\",{\"1\":{\"200\":1,\"286\":1,\"297\":1,\"300\":14}}],[\"adjust\",{\"1\":{\"300\":5}}],[\"ade8cdca5470\",{\"1\":{\"283\":1}}],[\"advanced\",{\"0\":{\"321\":1},\"1\":{\"149\":1}}],[\"addopts\",{\"1\":{\"179\":1}}],[\"addhandler\",{\"1\":{\"120\":1}}],[\"add\",{\"1\":{\"76\":2,\"119\":3,\"153\":2,\"300\":1,\"301\":2,\"305\":1,\"306\":1}}],[\"adapters\",{\"0\":{\"331\":1},\"1\":{\"14\":1,\"15\":3,\"16\":1,\"79\":1,\"84\":1,\"86\":1,\"112\":1,\"113\":1,\"122\":2,\"123\":3,\"126\":1,\"130\":1,\"164\":2,\"169\":1,\"176\":1,\"177\":1,\"178\":2,\"179\":4,\"208\":1,\"232\":1,\"233\":1,\"235\":1,\"237\":1,\"238\":1,\"242\":1,\"244\":6,\"293\":1,\"294\":1,\"301\":1}}],[\"adapter\",{\"0\":{\"169\":1},\"1\":{\"12\":1,\"13\":1,\"14\":5,\"15\":8,\"16\":5,\"163\":1,\"164\":7,\"165\":1,\"166\":1,\"167\":1,\"168\":1,\"169\":5,\"171\":3,\"172\":3,\"173\":1,\"174\":1,\"175\":2,\"176\":9,\"179\":1,\"195\":1,\"199\":1,\"206\":1,\"208\":2,\"224\":1,\"293\":5,\"294\":4}}],[\"annotated\",{\"1\":{\"302\":2,\"308\":2}}],[\"annotations\",{\"1\":{\"300\":1}}],[\"and\",{\"1\":{\"54\":3,\"55\":2,\"56\":1,\"113\":1,\"138\":1,\"139\":1,\"171\":1}}],[\"an\",{\"1\":{\"46\":1,\"118\":2}}],[\"anystring\",{\"1\":{\"249\":1}}],[\"any\",{\"1\":{\"45\":1,\"53\":1,\"97\":1,\"112\":1,\"113\":2,\"148\":7,\"169\":2,\"171\":1,\"172\":2,\"174\":3,\"175\":3,\"176\":4,\"249\":1,\"259\":1}}],[\"analysis\",{\"1\":{\"10\":2}}],[\"apscheduler等\",{\"1\":{\"204\":1}}],[\"apscheduler\",{\"0\":{\"155\":1,\"156\":1,\"157\":1},\"1\":{\"149\":3,\"150\":2,\"151\":3,\"152\":3,\"153\":6,\"156\":1,\"157\":4,\"204\":1}}],[\"api的方式来获取信息或收发消息\",{\"1\":{\"153\":1}}],[\"api\",{\"0\":{\"175\":1,\"184\":1,\"332\":1},\"1\":{\"34\":1,\"46\":1,\"94\":1,\"96\":1,\"97\":1,\"100\":3,\"112\":4,\"113\":4,\"173\":1,\"175\":7,\"176\":2,\"183\":1,\"184\":7,\"186\":1,\"187\":3,\"188\":3,\"190\":4,\"196\":1,\"203\":1,\"228\":1}}],[\"apis\",{\"1\":{\"34\":1,\"54\":1,\"191\":1,\"192\":1}}],[\"appendices\",{\"0\":{\"322\":1}}],[\"append\",{\"1\":{\"179\":1,\"243\":3,\"253\":3,\"262\":1}}],[\"apply\",{\"0\":{\"276\":1,\"277\":1}}],[\"applyaddfriendevent\",{\"1\":{\"177\":1}}],[\"application\",{\"1\":{\"86\":2,\"138\":2,\"139\":1,\"300\":1}}],[\"appdata\",{\"1\":{\"137\":1,\"138\":1,\"139\":1}}],[\"app=\",{\"1\":{\"40\":1,\"48\":1}}],[\"app\",{\"1\":{\"16\":1,\"40\":2,\"48\":2,\"99\":4,\"100\":3,\"148\":2,\"203\":3,\"293\":11,\"294\":5}}],[\"a\",{\"1\":{\"34\":1,\"54\":1,\"55\":2,\"77\":2,\"93\":3,\"118\":6,\"167\":2,\"171\":1,\"172\":1,\"252\":1}}],[\"asciinema\",{\"1\":{\"196\":1}}],[\"asia\",{\"1\":{\"157\":1}}],[\"as\",{\"1\":{\"97\":1,\"123\":2,\"134\":1,\"139\":1,\"167\":1,\"169\":1,\"171\":4,\"174\":1,\"176\":1,\"177\":1,\"178\":2,\"208\":1,\"257\":1,\"258\":1,\"293\":3,\"294\":2,\"300\":1}}],[\"assert\",{\"1\":{\"59\":1,\"127\":1,\"246\":1,\"262\":1,\"293\":3,\"294\":2}}],[\"asgi=asgi\",{\"1\":{\"293\":1}}],[\"asgimixin\",{\"1\":{\"94\":2,\"96\":2,\"97\":2,\"172\":2}}],[\"asgi\",{\"0\":{\"98\":1,\"99\":1},\"1\":{\"29\":2,\"34\":2,\"40\":3,\"46\":1,\"48\":2,\"94\":4,\"99\":4,\"100\":2,\"172\":2,\"293\":3,\"294\":1}}],[\"asyncscalarresult\",{\"1\":{\"310\":1}}],[\"asyncsession\",{\"0\":{\"305\":1},\"1\":{\"305\":2}}],[\"asyncresult\",{\"1\":{\"310\":1}}],[\"asynciterator\",{\"1\":{\"310\":2}}],[\"asyncio\",{\"1\":{\"2\":1,\"40\":3,\"46\":1,\"56\":1,\"171\":4,\"174\":2,\"183\":1,\"184\":1,\"186\":1,\"187\":1,\"188\":1,\"293\":2,\"294\":1}}],[\"asyncengine\",{\"1\":{\"289\":1}}],[\"asynchronous\",{\"1\":{\"56\":1}}],[\"async\",{\"0\":{\"306\":1},\"1\":{\"54\":1,\"96\":1,\"97\":1,\"100\":1,\"103\":1,\"104\":1,\"105\":1,\"106\":1,\"108\":1,\"109\":1,\"110\":1,\"111\":1,\"112\":1,\"113\":1,\"115\":1,\"116\":2,\"122\":1,\"123\":4,\"125\":1,\"126\":2,\"127\":1,\"130\":5,\"153\":1,\"171\":4,\"172\":2,\"174\":1,\"175\":1,\"176\":2,\"289\":1,\"290\":1,\"293\":5,\"294\":3,\"301\":16,\"302\":3,\"305\":5,\"306\":5,\"308\":1,\"309\":1,\"310\":18}}],[\"asyncclient\",{\"1\":{\"7\":1}}],[\"共享数据库以及网络请求连接会话\",{\"1\":{\"7\":1}}],[\"同样是一个合法的插件\",{\"1\":{\"213\":1}}],[\"同样能从文档中受益\",{\"1\":{\"196\":1}}],[\"同样的还有\",{\"1\":{\"250\":1}}],[\"同样的\",{\"1\":{\"123\":1,\"175\":1,\"242\":1}}],[\"同样的代码逻辑多次重复\",{\"1\":{\"7\":1}}],[\"同步更新使用说明文档\",{\"1\":{\"195\":1}}],[\"同步更新使用文档\",{\"1\":{\"194\":1}}],[\"同时提供了便捷的查询方法\",{\"1\":{\"254\":1}}],[\"同时可以使用\",{\"1\":{\"249\":1}}],[\"同时支持\",{\"1\":{\"247\":1}}],[\"同时也会自动去除\",{\"1\":{\"227\":1}}],[\"同时插件间也可能产生冲突\",{\"1\":{\"200\":1}}],[\"同时插件提供\",{\"1\":{\"134\":1}}],[\"同时完善进阶内容\",{\"1\":{\"196\":1}}],[\"同时其官方提供了丰富的聊天机器人\",{\"1\":{\"187\":1}}],[\"同时对\",{\"1\":{\"183\":1}}],[\"同时\",{\"1\":{\"0\":1,\"30\":1,\"85\":1,\"121\":1,\"127\":1,\"187\":1,\"188\":1,\"191\":1,\"209\":1,\"232\":1,\"292\":1}}],[\"这类独立的数据库后端不会受平台和\",{\"1\":{\"311\":1}}],[\"这类为大型机器人开发而设计的项目来说\",{\"1\":{\"186\":1}}],[\"这意味着我们需要频繁地创建并执行迁移脚本\",{\"1\":{\"300\":1}}],[\"这就是迁移脚本的作用\",{\"1\":{\"300\":1}}],[\"这就是我们创建的迁移脚本\",{\"1\":{\"300\":1}}],[\"这使得我们可以实现如下命令\",{\"1\":{\"262\":1}}],[\"这是因为\",{\"1\":{\"299\":1}}],[\"这是注释\",{\"1\":{\"248\":2}}],[\"这是一个示例插件\",{\"1\":{\"86\":1}}],[\"这是一个以机器人\",{\"1\":{\"16\":1}}],[\"这段代码通过alconna创捷了一个接受主命令名为pip\",{\"1\":{\"245\":1}}],[\"这也是最常见的用法\",{\"1\":{\"284\":1}}],[\"这也是一个以机器人\",{\"1\":{\"16\":1}}],[\"这也意味着你可以将默认值设置为\",{\"1\":{\"251\":1}}],[\"这也意味着\",{\"1\":{\"232\":1}}],[\"这由插件编写者决定\",{\"1\":{\"224\":1}}],[\"这种加载方式是以上两种方式的混合\",{\"1\":{\"218\":1}}],[\"这会导致插件不能正常运行\",{\"1\":{\"300\":1}}],[\"这会导致插件加载失败\",{\"1\":{\"92\":1}}],[\"这会导致\",{\"1\":{\"215\":1}}],[\"这时候就需要对错误进行跟踪\",{\"1\":{\"143\":1}}],[\"这时候我们可以在这个钩子函数中进行这些操作\",{\"1\":{\"103\":1}}],[\"这时候我们就需要在插件之间进行跨插件访问\",{\"1\":{\"91\":1}}],[\"这个事件响应器会对\",{\"1\":{\"227\":1}}],[\"这个时候包\",{\"1\":{\"213\":1}}],[\"这个时候模块\",{\"1\":{\"212\":1}}],[\"这个\",{\"1\":{\"167\":1}}],[\"这个函数\",{\"1\":{\"125\":1}}],[\"这个参数就是一个响应规则\",{\"1\":{\"124\":1}}],[\"这个方法由协议适配器进行了实现\",{\"1\":{\"122\":1}}],[\"这个会话\",{\"1\":{\"116\":1}}],[\"这个过程称为会话更新\",{\"1\":{\"114\":1}}],[\"这个钩子函数会在任何协议适配器连接\",{\"1\":{\"105\":1}}],[\"这个钩子函数会在\",{\"1\":{\"103\":1,\"104\":1,\"106\":1,\"108\":1,\"109\":1,\"110\":1,\"111\":1,\"112\":1,\"113\":1}}],[\"这些代码是由\",{\"1\":{\"300\":1}}],[\"这些独特的内容均需要由对应的协议适配器所提供\",{\"1\":{\"232\":1}}],[\"这些内容的意义和使用方法将会在后续的章节中一一介绍\",{\"1\":{\"228\":1}}],[\"这些将会在稍后的章节中逐一介绍\",{\"1\":{\"208\":1}}],[\"这些实现都各自重复实现了\",{\"1\":{\"191\":1,\"192\":1}}],[\"这些错误都会导致应用的运行出现问题\",{\"1\":{\"143\":1}}],[\"这些信息都可以存储于会话状态中\",{\"1\":{\"130\":1}}],[\"这些信息编写于插件模块的顶层\",{\"1\":{\"86\":1}}],[\"这些函数可以跟普通的事件处理函数一样接受相应的参数\",{\"1\":{\"107\":1}}],[\"这些钩子函数指的是影响\",{\"1\":{\"107\":1}}],[\"这些钩子函数是由驱动器来运行的\",{\"1\":{\"102\":1}}],[\"这些钩子函数可以用装饰器的形式来使用\",{\"1\":{\"101\":1}}],[\"这两个应用是同一个对象\",{\"1\":{\"99\":1}}],[\"这两种途径各有优劣\",{\"1\":{\"94\":1}}],[\"这里就不再赘述\",{\"1\":{\"294\":1}}],[\"这里给出几个简单的例子\",{\"1\":{\"244\":1}}],[\"这里的逻辑是\",{\"1\":{\"191\":1,\"192\":1}}],[\"这里的插件名称是供使用者或机器人用户查看的\",{\"1\":{\"86\":1}}],[\"这里为开发者提供几个常见问题的解决方法\",{\"1\":{\"179\":1}}],[\"这里要断开\",{\"1\":{\"171\":1}}],[\"这里不再赘述\",{\"1\":{\"130\":1}}],[\"这里将不再展示\",{\"1\":{\"115\":1}}],[\"这里将详细介绍驱动器配置的格式\",{\"1\":{\"30\":1}}],[\"这里我们以\",{\"1\":{\"100\":1}}],[\"这在响应规则一节中已经介绍过\",{\"1\":{\"64\":1}}],[\"这在权限控制一节中已经介绍过\",{\"1\":{\"63\":1}}],[\"这在你有以下情形的需求时非常有用\",{\"1\":{\"7\":1}}],[\"这样的面向对象编程\",{\"1\":{\"301\":1}}],[\"这样可以使你的代码更加通用\",{\"1\":{\"122\":1}}],[\"这样我们就可以通过协议适配器定义的子类型来获取更多的信息\",{\"1\":{\"122\":1}}],[\"这样我们就可以实现持久化\",{\"1\":{\"57\":1}}],[\"这样就能成功匹配\",{\"1\":{\"81\":1}}],[\"这样\",{\"1\":{\"76\":1,\"90\":1,\"123\":2,\"127\":1,\"227\":1,\"228\":1}}],[\"这样适配器就可以通过驱动器接收事件和调用接口了\",{\"1\":{\"14\":1}}],[\"这部分代码拥有共享的逻辑\",{\"1\":{\"7\":1}}],[\"在类属性中声明子依赖\",{\"1\":{\"302\":1}}],[\"在复杂或有歧义的情况下\",{\"1\":{\"300\":1}}],[\"在获取到模拟客户端后\",{\"1\":{\"294\":1}}],[\"在获取到了\",{\"1\":{\"100\":1}}],[\"在该组件未被解析时使用使用该值替换\",{\"1\":{\"252\":1}}],[\"在实际命令中并不需要传入\",{\"1\":{\"248\":1}}],[\"在实际使用中\",{\"1\":{\"233\":1}}],[\"在事实上\",{\"1\":{\"244\":1}}],[\"在事件处理流程中\",{\"1\":{\"130\":1}}],[\"在事件类型与重载一节中\",{\"1\":{\"17\":1}}],[\"在以下的示例中\",{\"1\":{\"233\":1}}],[\"在不同平台中\",{\"1\":{\"229\":1}}],[\"在辅助函数中\",{\"1\":{\"228\":1}}],[\"在上面的示例中\",{\"1\":{\"302\":1}}],[\"在上面的测试中\",{\"1\":{\"293\":1,\"294\":1}}],[\"在上面的代码中\",{\"1\":{\"122\":1,\"125\":1}}],[\"在上一节的使用依赖注入中\",{\"1\":{\"231\":1,\"232\":1}}],[\"在上一节创建插件中\",{\"1\":{\"227\":1}}],[\"在接下来的章节中\",{\"1\":{\"224\":1}}],[\"在接收到来自平台的事件数据后\",{\"1\":{\"174\":1}}],[\"在正式编写插件之前\",{\"1\":{\"210\":1}}],[\"在创建alconna时候传入命名空间以替换默认命名空间\",{\"1\":{\"257\":1}}],[\"在创建完成以上文件并确认已安装所需适配器和插件后\",{\"1\":{\"208\":1}}],[\"在创建项目前\",{\"1\":{\"206\":1}}],[\"在快速上手中\",{\"1\":{\"205\":1,\"225\":1}}],[\"在长期的使用中发现了一些问题和不足的地方\",{\"1\":{\"203\":1}}],[\"在解决以上问题的基础上\",{\"1\":{\"202\":1}}],[\"在早期提供了基于网页的\",{\"1\":{\"195\":1}}],[\"在聊天机器人的开发过程中\",{\"1\":{\"186\":1}}],[\"在代码中补充\",{\"1\":{\"184\":1}}],[\"在更新代码接口的同时需要手动更新文档\",{\"1\":{\"184\":1}}],[\"在完成测试后\",{\"1\":{\"293\":1}}],[\"在完成适配器代码的编写后\",{\"1\":{\"180\":1}}],[\"在完成依赖声明后\",{\"1\":{\"93\":1}}],[\"在测试中无法导入\",{\"1\":{\"179\":1}}],[\"在与平台断开连接或出现某些异常进行重连时\",{\"1\":{\"173\":1}}],[\"在与平台建立连接后\",{\"1\":{\"173\":1}}],[\"在编写平台相关内容之前\",{\"1\":{\"169\":1}}],[\"在编写适配器时\",{\"1\":{\"163\":1}}],[\"在编写适配器之前\",{\"1\":{\"163\":1}}],[\"在编程中\",{\"1\":{\"7\":1}}],[\"在此我们会简要介绍其调用方法\",{\"1\":{\"151\":1}}],[\"在此基础上添加了消息序列\",{\"1\":{\"76\":1}}],[\"在项目目录中创建一个两层文件夹\",{\"1\":{\"214\":2}}],[\"在项目目录下执行以下命令\",{\"1\":{\"133\":1,\"144\":1,\"150\":1}}],[\"在项目文件夹中\",{\"1\":{\"209\":1}}],[\"在项目文件夹中创建一个\",{\"1\":{\"207\":1,\"208\":1}}],[\"在项目\",{\"1\":{\"147\":1}}],[\"在安装完成之后\",{\"1\":{\"145\":1}}],[\"在应用实际运行过程中\",{\"1\":{\"143\":1}}],[\"在期间的任何一个事件处理函数都可以进行读写\",{\"1\":{\"130\":1}}],[\"在会话中\",{\"1\":{\"130\":1}}],[\"在原有列表\",{\"1\":{\"242\":1}}],[\"在原\",{\"1\":{\"127\":1}}],[\"在定义响应规则时\",{\"1\":{\"127\":1}}],[\"在指南中\",{\"1\":{\"124\":1}}],[\"在指南与深入中\",{\"1\":{\"60\":1}}],[\"在自定义权限一节中\",{\"1\":{\"122\":1}}],[\"在本章节中\",{\"1\":{\"121\":1,\"205\":1}}],[\"在使用事件响应器操作发送消息时\",{\"1\":{\"234\":1}}],[\"在使用之前可以参考事件响应器进阶\",{\"1\":{\"228\":1}}],[\"在使用本插件前同样需要使用\",{\"1\":{\"134\":1}}],[\"在使用前请先安装\",{\"1\":{\"133\":1,\"144\":1,\"150\":1}}],[\"在使用插件的过程中\",{\"1\":{\"132\":1}}],[\"在使用平台接口时\",{\"1\":{\"121\":1}}],[\"在使用适配器之前\",{\"1\":{\"14\":1}}],[\"在之前的示例中\",{\"1\":{\"121\":1}}],[\"在机器人入口文件中\",{\"1\":{\"119\":1}}],[\"在启动时会添加一个默认的日志处理器\",{\"1\":{\"119\":1}}],[\"在注册了上述响应事件类型更新函数后\",{\"1\":{\"115\":1}}],[\"在某个事件响应器对事件响应后\",{\"1\":{\"114\":1}}],[\"在下面的代码中\",{\"1\":{\"100\":1}}],[\"在向驱动器添加路由规则时\",{\"1\":{\"94\":1}}],[\"在添加路由规则时\",{\"1\":{\"94\":1}}],[\"在驱动器一节中\",{\"1\":{\"94\":1}}],[\"在消息类型的事件响应器的基础上\",{\"1\":{\"69\":1}}],[\"在响应器被触发时\",{\"1\":{\"68\":1}}],[\"在参数中获取\",{\"1\":{\"66\":1}}],[\"在部分情况中\",{\"1\":{\"66\":1}}],[\"在这里加载插件\",{\"1\":{\"208\":1,\"214\":1}}],[\"在这里是指\",{\"1\":{\"7\":1}}],[\"在这个钩子函数中\",{\"1\":{\"112\":1,\"113\":1}}],[\"在这个钩子函数内抛出\",{\"1\":{\"108\":1,\"110\":1}}],[\"在这一节中\",{\"1\":{\"60\":1}}],[\"在多实例间共享会话状态等功能\",{\"1\":{\"57\":1}}],[\"在进入会话状态后\",{\"1\":{\"57\":1}}],[\"在\",{\"1\":{\"10\":3,\"31\":1,\"40\":3,\"48\":1,\"86\":1,\"101\":1,\"114\":1,\"122\":1,\"125\":1,\"134\":1,\"149\":1,\"153\":1,\"158\":1,\"171\":1,\"179\":1,\"203\":2,\"211\":1,\"214\":1,\"225\":1,\"226\":1,\"229\":1,\"231\":1}}],[\"系统下\",{\"1\":{\"134\":1}}],[\"系统\",{\"1\":{\"7\":1}}],[\"依赖于基于\",{\"1\":{\"149\":1}}],[\"依赖于插件\",{\"1\":{\"93\":1}}],[\"依赖函数会根据其参数的类型注解来决定是否执行\",{\"1\":{\"123\":1}}],[\"依赖性\",{\"1\":{\"7\":1}}],[\"依赖\",{\"1\":{\"7\":1}}],[\"依赖注入获得了一个会话\",{\"1\":{\"301\":1}}],[\"依赖注入获取\",{\"1\":{\"75\":1,\"76\":1,\"77\":1}}],[\"依赖注入也可以使用这个特性来对不同的返回值进行处理\",{\"1\":{\"123\":1}}],[\"依赖注入等方式实现输入参数校验\",{\"1\":{\"34\":1}}],[\"依赖注入\",{\"0\":{\"302\":1,\"303\":1},\"1\":{\"7\":1,\"302\":1}}],[\"依赖注入系统\",{\"0\":{\"6\":1}}],[\"即内容是唯一的且非空的\",{\"1\":{\"299\":1}}],[\"即回滚到初始状态\",{\"1\":{\"285\":1}}],[\"即未经过\",{\"1\":{\"271\":1}}],[\"即不声明\",{\"1\":{\"251\":1}}],[\"即使有\",{\"1\":{\"249\":1}}],[\"即使用\",{\"1\":{\"93\":1}}],[\"即事件响应器收到的信息内容为\",{\"1\":{\"227\":1}}],[\"即插件\",{\"1\":{\"224\":1}}],[\"即可像\",{\"1\":{\"293\":1}}],[\"即可运行机器人\",{\"1\":{\"208\":1}}],[\"即可创建一个带有基本结构的适配器项目\",{\"1\":{\"165\":1}}],[\"即在\",{\"1\":{\"164\":1}}],[\"即刻开始插件编写\",{\"1\":{\"131\":1}}],[\"即为一个\",{\"1\":{\"125\":1}}],[\"即只会输出\",{\"1\":{\"118\":1}}],[\"即是进入了会话状态\",{\"1\":{\"114\":1}}],[\"即是该响应器所要响应的事件类型\",{\"1\":{\"62\":1}}],[\"即便插件导入顺序不同\",{\"1\":{\"92\":1}}],[\"即一个插件可以包含其他插件\",{\"1\":{\"88\":1}}],[\"即仅使用基本适配器功能\",{\"1\":{\"86\":1}}],[\"即以优先级为键\",{\"1\":{\"58\":1}}],[\"即驱动器类\",{\"1\":{\"30\":1}}],[\"即服务端型驱动器\",{\"1\":{\"29\":1}}],[\"即客户端型驱动器\",{\"1\":{\"29\":1}}],[\"即\",{\"1\":{\"7\":2,\"30\":1,\"40\":1,\"92\":1,\"125\":1,\"229\":1}}],[\"什么是依赖注入\",{\"0\":{\"7\":1}}],[\"减少代码冗余\",{\"1\":{\"6\":1}}],[\"增加代码的可读性\",{\"1\":{\"6\":1}}],[\"清晰\",{\"1\":{\"6\":1}}],[\"可逆地同步数据库模式\",{\"1\":{\"300\":1}}],[\"可复现地\",{\"1\":{\"300\":1}}],[\"可导入的\",{\"1\":{\"216\":1,\"217\":1}}],[\"可选\",{\"1\":{\"202\":1,\"206\":1,\"280\":2,\"281\":2}}],[\"可选参数\",{\"1\":{\"71\":1,\"72\":1,\"73\":1}}],[\"可对网页的开发以及生产构建性能做相应的优化提升\",{\"1\":{\"202\":1}}],[\"可参考跨插件访问和嵌套插件\",{\"1\":{\"223\":1}}],[\"可参考\",{\"1\":{\"134\":1,\"152\":1}}],[\"可参考获取商店插件来了解并选择安装插件的方式\",{\"1\":{\"133\":1,\"144\":1,\"150\":1}}],[\"可用于获取正确的数据存储路径并写入数据\",{\"1\":{\"132\":1}}],[\"可能会知道\",{\"1\":{\"301\":1}}],[\"可能会出现各种各样的错误\",{\"1\":{\"143\":1}}],[\"可能会出现意料之外的错误出现\",{\"1\":{\"92\":1}}],[\"可能造成文档与代码不匹配\",{\"1\":{\"184\":1}}],[\"可能是由于代码逻辑错误\",{\"1\":{\"143\":1}}],[\"可能还未加载\",{\"1\":{\"87\":1}}],[\"可不填写\",{\"1\":{\"86\":1}}],[\"可以回退\",{\"1\":{\"306\":1}}],[\"可以方便地帮助你获取数据库会话和查询数据\",{\"1\":{\"303\":1}}],[\"可以方便地进行错误跟踪\",{\"1\":{\"143\":1}}],[\"可以正确地生成迁移脚本\",{\"1\":{\"300\":1}}],[\"可以注意到脚本的主体部分\",{\"1\":{\"300\":1}}],[\"可以注意到表名是\",{\"1\":{\"299\":1}}],[\"可以注入\",{\"1\":{\"108\":1,\"109\":1,\"110\":1,\"111\":1}}],[\"可以查阅专题以及其官方文档\",{\"1\":{\"297\":1}}],[\"可以这样配置\",{\"1\":{\"289\":1}}],[\"可以执行此命令\",{\"1\":{\"285\":1}}],[\"可以设置\",{\"1\":{\"262\":1}}],[\"可以设置包括参数字典在内的默认值\",{\"1\":{\"252\":1}}],[\"可以动态操作快捷指令\",{\"1\":{\"261\":1}}],[\"可以类型标注\",{\"1\":{\"254\":1}}],[\"可以特别设置传入一类\",{\"1\":{\"253\":1}}],[\"可以传入自己的\",{\"1\":{\"252\":1}}],[\"可以传入一组\",{\"1\":{\"252\":1}}],[\"可以进行有限制的相互调用\",{\"1\":{\"211\":1}}],[\"可以运行机器人的场景进行功能体验或测试\",{\"1\":{\"195\":1}}],[\"可以向\",{\"1\":{\"118\":2}}],[\"可以帮助我们了解运行状况\",{\"1\":{\"117\":1}}],[\"可以直接调用\",{\"1\":{\"175\":1}}],[\"可以直接通过事件响应器辅助函数或者自行合并其他规则使用\",{\"1\":{\"129\":1}}],[\"可以直接通过源码查看\",{\"1\":{\"86\":1}}],[\"可以直接注入\",{\"1\":{\"105\":1,\"106\":1}}],[\"可以分为两类\",{\"1\":{\"101\":1}}],[\"可以参考\",{\"1\":{\"96\":1,\"97\":1,\"134\":1,\"153\":1}}],[\"可以参考开发文档\",{\"1\":{\"27\":1}}],[\"可以在更多平台上运行\",{\"1\":{\"122\":1}}],[\"可以在插件的\",{\"1\":{\"90\":1}}],[\"可以在不需要外部网络连接时使用\",{\"1\":{\"33\":1}}],[\"可以用于获取指定类型指定个数的消息段\",{\"1\":{\"242\":1}}],[\"可以用于索引指定类型的消息段\",{\"1\":{\"242\":1}}],[\"可以用于判断消息段是否为纯文本\",{\"1\":{\"238\":1}}],[\"可以用于存储任意信息\",{\"1\":{\"86\":1}}],[\"可以用于管理一系列具有相同属性的响应器\",{\"1\":{\"82\":1}}],[\"可以用于管理一系列具有相同前置命令的子命令响应器\",{\"1\":{\"81\":1}}],[\"可以通过with方式创建命名空间\",{\"1\":{\"257\":1}}],[\"可以通过以下几种方式构造\",{\"1\":{\"247\":1}}],[\"可以通过依赖注入\",{\"1\":{\"233\":1}}],[\"可以通过类型\",{\"1\":{\"130\":1}}],[\"可以通过类型注解\",{\"1\":{\"34\":1}}],[\"可以通过加载插件来扩展功能\",{\"1\":{\"85\":1}}],[\"可以添加\",{\"1\":{\"81\":1}}],[\"可以是\",{\"1\":{\"69\":2}}],[\"可以自行定义新的类型\",{\"1\":{\"62\":1}}],[\"可以先阅读相关协议适配器文档说明\",{\"1\":{\"28\":1}}],[\"可以多次调用\",{\"1\":{\"14\":1}}],[\"可以使用父类型作为类型标注\",{\"1\":{\"310\":1}}],[\"可以使用依赖注入\",{\"1\":{\"115\":1,\"116\":1}}],[\"可以使用\",{\"1\":{\"10\":1,\"66\":1,\"75\":1,\"87\":1,\"134\":1,\"219\":1,\"220\":1,\"237\":1,\"243\":1}}],[\"可以让事件的处理过程更加的简洁\",{\"1\":{\"6\":1}}],[\"可扩展的\",{\"1\":{\"0\":1,\"190\":1}}],[\"的非\",{\"1\":{\"311\":1}}],[\"的城市有\",{\"1\":{\"302\":2}}],[\"的天气\",{\"1\":{\"301\":2}}],[\"的天气是什么\",{\"1\":{\"299\":1}}],[\"的天气是\",{\"1\":{\"122\":1,\"301\":2}}],[\"的启动检查\",{\"1\":{\"300\":1}}],[\"的启动流程\",{\"1\":{\"205\":1}}],[\"的知识\",{\"1\":{\"297\":1}}],[\"的匹配行为\",{\"1\":{\"271\":1}}],[\"的匹配结果\",{\"1\":{\"261\":1}}],[\"的配置项\",{\"1\":{\"269\":1,\"272\":1}}],[\"的值分两种\",{\"1\":{\"266\":1}}],[\"的值为特殊值\",{\"1\":{\"251\":1}}],[\"的快捷指令\",{\"1\":{\"260\":1,\"261\":2}}],[\"的第一个参数为快捷指令名称\",{\"1\":{\"259\":1}}],[\"的元数据相当于其配置\",{\"1\":{\"255\":1}}],[\"的解析参数字典\",{\"1\":{\"254\":1}}],[\"的解析值\",{\"1\":{\"254\":1}}],[\"的解析结果\",{\"1\":{\"254\":2}}],[\"的唯一区别在于\",{\"1\":{\"252\":1}}],[\"的名字或别名没有要求必须在前面写上\",{\"1\":{\"252\":1}}],[\"的字符串\",{\"1\":{\"249\":4}}],[\"的字典将事件响应器存储于内存中\",{\"1\":{\"57\":1}}],[\"的var表面上看需要传入一个\",{\"1\":{\"249\":1}}],[\"的作用是用以标记解析出来的参数并存放于\",{\"1\":{\"248\":1}}],[\"的组合\",{\"1\":{\"246\":1}}],[\"的实例\",{\"1\":{\"245\":1,\"249\":1}}],[\"的子类\",{\"1\":{\"233\":1}}],[\"的本质是由若干消息段所组成的序列\",{\"1\":{\"231\":1}}],[\"的主要作用是用于表达\",{\"1\":{\"231\":1}}],[\"的事件响应器了\",{\"1\":{\"227\":1}}],[\"的封装\",{\"1\":{\"221\":1}}],[\"的文件夹\",{\"1\":{\"214\":1}}],[\"的文件夹即是一个常规\",{\"1\":{\"213\":1}}],[\"的文档中\",{\"1\":{\"184\":1}}],[\"的一个模块\",{\"1\":{\"211\":1}}],[\"的使用\",{\"1\":{\"204\":1}}],[\"的使用方法请参考\",{\"1\":{\"76\":1}}],[\"的基本原理和使用方式\",{\"1\":{\"186\":1}}],[\"的用户\",{\"1\":{\"186\":1}}],[\"的方式指定组合参数之间的分隔符\",{\"1\":{\"261\":1}}],[\"的方式创建一个机器人项目的最小实例并启动\",{\"1\":{\"205\":1}}],[\"的方式实现插件加载与跟踪管理\",{\"1\":{\"92\":1}}],[\"的方法\",{\"1\":{\"177\":2}}],[\"的信息也可以在此定义和存储\",{\"1\":{\"176\":1}}],[\"的上层方法\",{\"1\":{\"176\":1}}],[\"的区别\",{\"1\":{\"175\":1}}],[\"的参数字典中\",{\"1\":{\"254\":1}}],[\"的参数\",{\"1\":{\"172\":2,\"250\":1,\"255\":1}}],[\"的默认配置\",{\"1\":{\"256\":1}}],[\"的默认\",{\"1\":{\"167\":1}}],[\"的默认格式和过滤器\",{\"1\":{\"119\":1}}],[\"的相关配置\",{\"1\":{\"157\":1}}],[\"的更多使用方法\",{\"1\":{\"153\":1}}],[\"的更多功能和原理\",{\"1\":{\"131\":1}}],[\"的定时任务并不是由事件响应器所触发的事件\",{\"1\":{\"153\":1}}],[\"的大多数功能用法\",{\"1\":{\"131\":1}}],[\"的密码\",{\"1\":{\"130\":1}}],[\"的集合\",{\"1\":{\"126\":1}}],[\"的抽象方法\",{\"1\":{\"122\":1}}],[\"的日志\",{\"1\":{\"118\":1}}],[\"的连接时运行\",{\"1\":{\"106\":1}}],[\"的详细信息\",{\"1\":{\"96\":1,\"97\":1}}],[\"的路由\",{\"1\":{\"96\":1,\"97\":1}}],[\"的兼容层建立路由规则\",{\"1\":{\"94\":1}}],[\"的插件\",{\"1\":{\"214\":1}}],[\"的插件系统为用户实现应用提供了极高的便捷性\",{\"1\":{\"200\":1}}],[\"的插件系统来获取相关信息\",{\"1\":{\"85\":1}}],[\"的插件信息中看到这些子插件的信息\",{\"1\":{\"90\":1}}],[\"的特性\",{\"1\":{\"84\":1}}],[\"的规则\",{\"1\":{\"71\":1,\"72\":1,\"73\":1,\"74\":1}}],[\"的异步版本\",{\"1\":{\"46\":1}}],[\"的其他参数\",{\"1\":{\"45\":1,\"53\":1}}],[\"的库因此可能无法正常工作\",{\"1\":{\"40\":1}}],[\"的\",{\"1\":{\"16\":1,\"40\":1,\"48\":1,\"156\":1,\"173\":1,\"174\":1,\"175\":2,\"179\":1,\"183\":1,\"203\":1,\"216\":1,\"219\":1,\"220\":1,\"237\":1,\"262\":1,\"265\":1}}],[\"的核心\",{\"1\":{\"5\":1,\"245\":1}}],[\"的类型注解和异步优先特性\",{\"1\":{\"0\":1}}],[\"使框架对初学者更加友好\",{\"1\":{\"204\":1}}],[\"使其更加通俗易懂\",{\"1\":{\"196\":1}}],[\"使其变为子类型\",{\"1\":{\"122\":1}}],[\"使开发者能够调用平台提供的\",{\"1\":{\"175\":1}}],[\"使得解析命令时允许名称与后随参数之间没有分隔\",{\"1\":{\"262\":1}}],[\"使得用户能够快速搭建聊天机器人\",{\"1\":{\"204\":1}}],[\"使得用户初次接触\",{\"1\":{\"4\":1}}],[\"使得插件更加清晰\",{\"1\":{\"88\":1}}],[\"使用上有一定难度\",{\"1\":{\"278\":1}}],[\"使用基类构建模板与使用\",{\"1\":{\"244\":1}}],[\"使用消息模板\",{\"0\":{\"244\":1}}],[\"使用消息序列\",{\"0\":{\"233\":1}}],[\"使用配置好环境的\",{\"1\":{\"209\":1}}],[\"使用脚手架\",{\"1\":{\"196\":1}}],[\"使用其它\",{\"1\":{\"183\":1}}],[\"使用当前工作目录作为数据存储目录\",{\"1\":{\"136\":1}}],[\"使用时无需关心操作系统的差异\",{\"1\":{\"134\":1}}],[\"使用插件\",{\"0\":{\"134\":1,\"145\":1,\"151\":1}}],[\"使用的键名\",{\"1\":{\"130\":1}}],[\"使用的事件循环会被\",{\"1\":{\"40\":1}}],[\"使用优秀的\",{\"1\":{\"117\":1}}],[\"使用嵌套插件\",{\"1\":{\"89\":1,\"214\":1}}],[\"使用方法\",{\"1\":{\"85\":1}}],[\"使用方法请阅读本文档指南以及\",{\"1\":{\"4\":1}}],[\"使用\",{\"0\":{\"98\":1,\"165\":1},\"1\":{\"40\":1,\"48\":1,\"127\":1,\"152\":1,\"207\":1,\"224\":1,\"244\":1,\"252\":1}}],[\"使用适配器\",{\"0\":{\"12\":1},\"1\":{\"196\":1}}],[\"nullable=false\",{\"1\":{\"300\":6}}],[\"null\",{\"1\":{\"299\":2,\"300\":2}}],[\"number\",{\"1\":{\"246\":1,\"249\":2}}],[\"np\",{\"1\":{\"258\":4}}],[\"np1\",{\"1\":{\"257\":4}}],[\"ns\",{\"1\":{\"257\":2}}],[\"nepattern\",{\"1\":{\"246\":2,\"249\":5}}],[\"net\",{\"1\":{\"192\":1}}],[\"need\",{\"1\":{\"171\":1,\"172\":1}}],[\"new\",{\"1\":{\"158\":1,\"226\":1}}],[\"next\",{\"1\":{\"94\":1}}],[\"n\",{\"1\":{\"89\":1,\"214\":2}}],[\"node\",{\"1\":{\"191\":1,\"192\":2}}],[\"no\",{\"1\":{\"177\":3}}],[\"notrequired\",{\"1\":{\"259\":6}}],[\"not\",{\"1\":{\"108\":1,\"110\":1,\"113\":1,\"126\":1,\"138\":2,\"171\":3,\"172\":1,\"263\":1,\"299\":2,\"300\":2,\"301\":3,\"320\":1}}],[\"notimplementederror\",{\"1\":{\"40\":1}}],[\"notice\",{\"1\":{\"18\":1,\"62\":1,\"69\":1,\"115\":3,\"177\":1}}],[\"noneflow\",{\"0\":{\"203\":1},\"1\":{\"203\":2}}],[\"nonepress\",{\"0\":{\"202\":1},\"1\":{\"202\":3}}],[\"noneblockly\",{\"0\":{\"204\":1},\"1\":{\"204\":2}}],[\"nonebug\",{\"0\":{\"186\":1},\"1\":{\"186\":2,\"292\":1,\"293\":2,\"294\":1}}],[\"nonebot\",{\"0\":{\"182\":1,\"183\":1,\"184\":1,\"185\":1,\"186\":1,\"187\":1,\"188\":1,\"198\":1,\"199\":1,\"200\":1},\"1\":{\"0\":4,\"2\":1,\"3\":1,\"4\":2,\"5\":1,\"6\":1,\"7\":1,\"13\":2,\"14\":3,\"15\":6,\"16\":7,\"30\":2,\"31\":2,\"33\":1,\"40\":3,\"48\":3,\"57\":3,\"58\":1,\"59\":1,\"62\":1,\"66\":1,\"69\":2,\"71\":2,\"72\":2,\"73\":2,\"74\":2,\"75\":2,\"76\":3,\"77\":2,\"78\":1,\"79\":2,\"80\":1,\"81\":2,\"82\":2,\"84\":2,\"85\":2,\"86\":4,\"87\":9,\"88\":2,\"90\":3,\"91\":2,\"92\":5,\"93\":3,\"94\":4,\"95\":1,\"96\":2,\"97\":2,\"99\":4,\"100\":2,\"101\":1,\"102\":1,\"103\":2,\"104\":2,\"105\":2,\"106\":2,\"107\":1,\"108\":5,\"109\":2,\"110\":5,\"111\":2,\"112\":2,\"113\":2,\"114\":2,\"116\":2,\"117\":1,\"118\":2,\"119\":8,\"120\":2,\"122\":3,\"123\":4,\"124\":1,\"125\":1,\"126\":2,\"127\":2,\"129\":1,\"130\":7,\"131\":2,\"132\":2,\"133\":2,\"134\":4,\"143\":2,\"144\":2,\"148\":1,\"149\":2,\"150\":2,\"151\":2,\"152\":4,\"153\":3,\"156\":1,\"158\":2,\"163\":1,\"164\":5,\"166\":1,\"167\":3,\"169\":4,\"170\":1,\"171\":4,\"172\":2,\"173\":2,\"174\":1,\"175\":2,\"176\":3,\"177\":5,\"178\":3,\"179\":4,\"180\":1,\"181\":2,\"183\":3,\"184\":1,\"186\":4,\"187\":4,\"188\":4,\"193\":2,\"194\":2,\"195\":2,\"196\":3,\"197\":2,\"198\":6,\"199\":6,\"200\":4,\"201\":2,\"202\":2,\"203\":4,\"204\":10,\"205\":1,\"206\":1,\"207\":3,\"208\":9,\"211\":3,\"214\":4,\"215\":4,\"216\":2,\"217\":1,\"218\":1,\"219\":1,\"220\":3,\"221\":2,\"222\":1,\"224\":6,\"225\":1,\"226\":5,\"227\":1,\"228\":2,\"229\":2,\"231\":1,\"232\":1,\"233\":1,\"235\":1,\"237\":1,\"238\":2,\"242\":1,\"244\":6,\"269\":1,\"272\":1,\"278\":4,\"280\":4,\"281\":3,\"283\":4,\"289\":2,\"292\":2,\"293\":7,\"294\":5,\"297\":1,\"299\":2,\"300\":6,\"301\":11,\"302\":2,\"303\":1,\"305\":3,\"306\":3,\"308\":2,\"309\":2}}],[\"nonebot2\",{\"0\":{\"194\":1,\"195\":1,\"196\":1},\"1\":{\"0\":1,\"137\":3,\"138\":4,\"139\":3,\"162\":1,\"194\":5,\"195\":4,\"196\":9,\"206\":3,\"245\":4}}],[\"none\",{\"0\":{\"33\":1},\"1\":{\"36\":3,\"37\":3,\"38\":3,\"41\":2,\"42\":2,\"43\":2,\"44\":2,\"49\":2,\"50\":2,\"51\":2,\"52\":2,\"67\":1,\"87\":2,\"127\":3,\"148\":21,\"171\":5,\"172\":1,\"249\":1,\"251\":1,\"255\":1,\"265\":2,\"274\":2,\"300\":7,\"308\":1,\"310\":4}}],[\"namespace=config\",{\"1\":{\"257\":1}}],[\"namespace=ns\",{\"1\":{\"257\":1}}],[\"namespaces\",{\"1\":{\"257\":2}}],[\"namespace\",{\"1\":{\"257\":4,\"258\":7,\"265\":2}}],[\"names\",{\"1\":{\"87\":3}}],[\"name=op\",{\"1\":{\"300\":2}}],[\"name=\",{\"1\":{\"86\":1,\"96\":1,\"97\":1,\"244\":1,\"265\":3}}],[\"name\",{\"1\":{\"15\":1,\"19\":2,\"87\":3,\"96\":1,\"97\":1,\"119\":2,\"134\":4,\"148\":1,\"164\":4,\"167\":1,\"169\":2,\"171\":1,\"172\":3,\"176\":1,\"177\":2,\"179\":1,\"208\":1,\"244\":2,\"246\":1,\"250\":1,\"252\":1,\"256\":2,\"257\":1,\"258\":1,\"300\":4,\"311\":8}}],[\"nb\",{\"0\":{\"165\":1},\"1\":{\"4\":1,\"40\":2,\"48\":2,\"89\":3,\"133\":1,\"134\":2,\"144\":1,\"150\":1,\"165\":1,\"194\":5,\"198\":2,\"200\":1,\"204\":2,\"205\":3,\"208\":2,\"209\":4,\"214\":3,\"215\":2,\"280\":6,\"281\":4,\"283\":1,\"284\":2,\"285\":2,\"286\":1,\"300\":3,\"311\":2}}],[\"编程语言\",{\"1\":{\"191\":1}}],[\"编程语言及\",{\"1\":{\"183\":1,\"184\":1,\"186\":1,\"187\":1,\"188\":1}}],[\"编辑器推荐配置\",{\"0\":{\"9\":1}}],[\"编辑器支持\",{\"0\":{\"8\":1},\"1\":{\"3\":1}}],[\"编写跨平台插件\",{\"1\":{\"204\":1}}],[\"编写而成\",{\"1\":{\"203\":1}}],[\"编写相应的用户使用文档\",{\"1\":{\"200\":1}}],[\"编写飞书适配器并能够使用\",{\"1\":{\"188\":1}}],[\"编写一个飞书适配器来支持飞书机器人的开发\",{\"1\":{\"188\":1}}],[\"编写一个\",{\"1\":{\"187\":1,\"191\":1}}],[\"编写一个自定义的存储提供者\",{\"1\":{\"58\":1}}],[\"编写详细的使用文档\",{\"1\":{\"186\":1,\"191\":1,\"192\":1}}],[\"编写或应用开源工具自动生成\",{\"1\":{\"184\":1}}],[\"编写各种不同的事件\",{\"1\":{\"177\":1}}],[\"编写适配器\",{\"0\":{\"163\":1}}],[\"编写定时任务更像是编写普通的函数\",{\"1\":{\"153\":1}}],[\"编写存储提供者\",{\"0\":{\"58\":1}}],[\"编写\",{\"1\":{\"2\":1,\"187\":1,\"192\":1}}],[\"杜绝在编辑器中\",{\"1\":{\"3\":1}}],[\"能较好的支持\",{\"1\":{\"200\":1}}],[\"能够正确解析插件间的依赖关系\",{\"1\":{\"211\":1}}],[\"能够基于\",{\"1\":{\"204\":1}}],[\"能够自动化的完成许多复杂流程的处理\",{\"1\":{\"203\":1}}],[\"能够提升页面渲染性能与\",{\"1\":{\"202\":1}}],[\"能够根据用户\",{\"1\":{\"191\":1}}],[\"能够为你的需求实现提供便捷灵活的支持\",{\"1\":{\"0\":1}}],[\"能将绝大多数的\",{\"1\":{\"3\":1}}],[\"等价于\",{\"1\":{\"305\":1,\"306\":1,\"308\":1,\"310\":12}}],[\"等库类似的方法进行使用\",{\"1\":{\"293\":1}}],[\"等处理的\",{\"1\":{\"271\":1}}],[\"等框架\",{\"1\":{\"202\":1}}],[\"等迁移工具\",{\"1\":{\"200\":1}}],[\"等主流语言\",{\"1\":{\"192\":1}}],[\"等接口\",{\"1\":{\"191\":1,\"192\":1}}],[\"等官方接口\",{\"1\":{\"187\":1,\"188\":1}}],[\"等文档生成工具更佳\",{\"1\":{\"184\":1,\"187\":1,\"188\":1}}],[\"等方法\",{\"1\":{\"177\":1}}],[\"等方法一次性加载所有插件\",{\"1\":{\"92\":1}}],[\"等方式\",{\"1\":{\"173\":1}}],[\"等操作系统\",{\"1\":{\"134\":1}}],[\"等组成\",{\"1\":{\"116\":1}}],[\"等依赖注入函数\",{\"1\":{\"84\":1}}],[\"等规范进行开发并且拥有完整类型注解\",{\"1\":{\"8\":1}}],[\"等\",{\"1\":{\"3\":1,\"29\":2,\"57\":1,\"115\":1,\"166\":1,\"184\":1,\"191\":1,\"192\":1,\"196\":1,\"198\":1,\"200\":1,\"203\":1}}],[\"push\",{\"1\":{\"311\":2}}],[\"pull\",{\"1\":{\"11\":1,\"203\":1}}],[\"pk\",{\"1\":{\"299\":1,\"300\":3}}],[\"pp\",{\"1\":{\"262\":2}}],[\"p<xxx>\",{\"1\":{\"261\":1}}],[\"p\",{\"1\":{\"246\":2}}],[\"php\",{\"1\":{\"192\":1}}],[\"pipx\",{\"1\":{\"311\":2}}],[\"pip\",{\"1\":{\"206\":2,\"245\":4,\"249\":1,\"257\":2,\"265\":3,\"280\":1,\"311\":2}}],[\"pii\",{\"1\":{\"148\":1}}],[\"ping\",{\"1\":{\"73\":3}}],[\"please\",{\"1\":{\"300\":5}}],[\"plugins\",{\"1\":{\"86\":1,\"87\":4,\"89\":1,\"90\":4,\"208\":3,\"212\":1,\"213\":1,\"214\":12,\"216\":1,\"217\":4,\"218\":2,\"219\":5,\"220\":5,\"222\":1}}],[\"pluginmetadata\",{\"1\":{\"86\":4}}],[\"plugin\",{\"0\":{\"140\":1,\"141\":1,\"142\":1,\"335\":1},\"1\":{\"84\":2,\"86\":3,\"87\":12,\"89\":3,\"125\":6,\"126\":2,\"127\":5,\"132\":1,\"133\":3,\"134\":10,\"140\":3,\"141\":3,\"142\":3,\"143\":1,\"144\":3,\"149\":1,\"150\":3,\"151\":1,\"152\":3,\"153\":2,\"169\":2,\"171\":2,\"172\":2,\"195\":1,\"198\":1,\"200\":1,\"208\":2,\"214\":3,\"216\":4,\"218\":1,\"219\":4,\"220\":4,\"221\":2,\"224\":2,\"278\":4,\"280\":5,\"281\":4,\"283\":4,\"289\":2,\"297\":1,\"299\":2,\"300\":3,\"301\":2,\"302\":1,\"303\":1,\"305\":1,\"306\":1,\"308\":1,\"309\":1}}],[\"placeholder\",{\"1\":{\"261\":1}}],[\"plain\",{\"1\":{\"231\":1,\"238\":2,\"301\":3,\"302\":6}}],[\"plaintext\",{\"1\":{\"25\":1}}],[\"platform\",{\"1\":{\"171\":3,\"175\":4,\"176\":1}}],[\"playwright\",{\"1\":{\"40\":1}}],[\"position\",{\"1\":{\"312\":1,\"313\":1,\"314\":1,\"315\":1,\"316\":1,\"317\":1,\"318\":1,\"319\":1}}],[\"postgres\",{\"1\":{\"311\":20}}],[\"postgresql+psycopg\",{\"1\":{\"289\":1,\"311\":2}}],[\"postgresql\",{\"1\":{\"289\":1,\"311\":6}}],[\"postcss\",{\"1\":{\"202\":1}}],[\"post\",{\"1\":{\"172\":2,\"293\":2}}],[\"postprocessor\",{\"1\":{\"109\":2,\"111\":2}}],[\"pool\",{\"1\":{\"290\":3,\"291\":1}}],[\"ports\",{\"1\":{\"311\":4}}],[\"port\",{\"1\":{\"288\":1}}],[\"port=8080\",{\"1\":{\"207\":1}}],[\"pong\",{\"1\":{\"73\":3}}],[\"popular\",{\"1\":{\"46\":1}}],[\"practice\",{\"0\":{\"323\":1}}],[\"pr\",{\"1\":{\"203\":1}}],[\"preprocessor\",{\"1\":{\"108\":2,\"110\":2}}],[\"prefixes=\",{\"1\":{\"257\":1,\"258\":1}}],[\"prefixes\",{\"1\":{\"256\":1,\"257\":1,\"258\":2}}],[\"prefix\",{\"1\":{\"81\":2,\"246\":1,\"259\":1}}],[\"primarykeyconstraint\",{\"1\":{\"300\":2}}],[\"primary\",{\"1\":{\"299\":3,\"300\":2,\"302\":1,\"305\":1,\"306\":1,\"308\":1}}],[\"private\",{\"1\":{\"123\":1}}],[\"privatemessageevent\",{\"1\":{\"79\":2,\"123\":2}}],[\"print\",{\"1\":{\"117\":1,\"233\":1,\"245\":2,\"261\":3,\"262\":2,\"265\":2,\"299\":1,\"310\":12}}],[\"priority=plugin\",{\"1\":{\"127\":1}}],[\"priority=10\",{\"1\":{\"81\":1,\"228\":1}}],[\"priority\",{\"1\":{\"65\":1,\"69\":1,\"127\":1}}],[\"prompt\",{\"1\":{\"206\":1}}],[\"prompt=messagetemplate\",{\"1\":{\"130\":1}}],[\"prompt=\",{\"1\":{\"122\":1,\"130\":1,\"301\":1}}],[\"process\",{\"1\":{\"171\":1}}],[\"problem\",{\"1\":{\"118\":1}}],[\"propagation\",{\"1\":{\"66\":1}}],[\"provider\",{\"1\":{\"59\":3}}],[\"provides\",{\"1\":{\"54\":1}}],[\"proactoreventloop\",{\"1\":{\"40\":2}}],[\"proxy\",{\"1\":{\"29\":2,\"148\":2}}],[\"package\",{\"1\":{\"213\":1,\"245\":4,\"257\":2,\"265\":6}}],[\"payload\",{\"1\":{\"174\":9}}],[\"password\",{\"1\":{\"130\":3,\"288\":1,\"311\":6}}],[\"pass\",{\"1\":{\"103\":1,\"104\":1,\"105\":1,\"106\":1,\"109\":1,\"111\":1,\"153\":2}}],[\"patch\",{\"0\":{\"275\":1}}],[\"pat\",{\"1\":{\"246\":1}}],[\"path=url\",{\"1\":{\"96\":1,\"97\":1}}],[\"path\",{\"1\":{\"90\":2,\"96\":1,\"97\":1,\"134\":2,\"179\":3,\"216\":5,\"217\":1,\"218\":2,\"219\":2,\"220\":2,\"254\":2}}],[\"pathlib\",{\"1\":{\"90\":1,\"134\":3,\"179\":1,\"216\":2}}],[\"patterns默认支持的类型有\",{\"1\":{\"249\":1}}],[\"patterns\",{\"1\":{\"249\":2}}],[\"pattern\",{\"1\":{\"43\":1,\"44\":1,\"51\":1,\"52\":1}}],[\"partition\",{\"1\":{\"310\":8}}],[\"partitions\",{\"1\":{\"310\":17}}],[\"params\",{\"1\":{\"301\":3,\"302\":1,\"305\":1,\"306\":1,\"308\":1,\"309\":1}}],[\"params=platform\",{\"1\":{\"175\":1}}],[\"parse\",{\"1\":{\"174\":1,\"245\":1,\"246\":1,\"248\":2,\"254\":1,\"260\":1,\"261\":3,\"262\":3,\"263\":1,\"264\":1,\"265\":2,\"266\":2}}],[\"parser=parser\",{\"1\":{\"76\":2}}],[\"parser\",{\"1\":{\"76\":5}}],[\"parentheses\",{\"1\":{\"255\":1,\"266\":2,\"274\":2}}],[\"parent\",{\"1\":{\"87\":1,\"89\":1,\"90\":4,\"179\":2}}],[\"page\",{\"1\":{\"11\":1}}],[\"perm=matcher\",{\"1\":{\"116\":2}}],[\"permissionchecker\",{\"1\":{\"69\":1}}],[\"permission\",{\"1\":{\"63\":2,\"69\":2,\"116\":9}}],[\"performance\",{\"1\":{\"34\":1,\"55\":1}}],[\"pep8\",{\"1\":{\"8\":1}}],[\"pep484\",{\"1\":{\"8\":1}}],[\"pep\",{\"1\":{\"3\":2,\"8\":1}}],[\"pypi\",{\"1\":{\"180\":1}}],[\"pyproject\",{\"1\":{\"86\":1,\"164\":1,\"179\":1,\"214\":3}}],[\"pytest\",{\"1\":{\"179\":3,\"293\":2,\"294\":1,\"311\":2}}],[\"python\",{\"1\":{\"0\":3,\"2\":1,\"10\":8,\"34\":2,\"40\":1,\"54\":1,\"55\":1,\"56\":1,\"57\":1,\"120\":1,\"149\":2,\"174\":3,\"183\":1,\"184\":3,\"186\":3,\"187\":1,\"188\":1,\"192\":1,\"194\":1,\"195\":1,\"200\":1,\"203\":1,\"204\":2,\"205\":1,\"206\":1,\"207\":1,\"208\":1,\"209\":2,\"211\":1,\"213\":1,\"237\":2,\"246\":1,\"311\":14}}],[\"pydantic\",{\"1\":{\"168\":1,\"174\":2,\"207\":1,\"237\":3}}],[\"py\",{\"1\":{\"86\":3,\"90\":1,\"164\":6,\"179\":1,\"208\":1,\"209\":2,\"212\":3,\"213\":3,\"214\":4,\"215\":2,\"216\":2,\"217\":1,\"300\":4}}],[\"pylance\",{\"1\":{\"3\":1,\"8\":1,\"10\":5}}],[\"pyright\",{\"1\":{\"3\":1,\"8\":1}}],[\"999999\",{\"1\":{\"300\":1}}],[\"9492159f98f7\",{\"1\":{\"283\":1}}],[\"9\",{\"1\":{\"0\":1,\"311\":2}}],[\"3306\",{\"1\":{\"311\":6}}],[\"3600\",{\"1\":{\"290\":1}}],[\"32\",{\"1\":{\"246\":1}}],[\"30\",{\"1\":{\"156\":2,\"290\":1}}],[\"3\",{\"1\":{\"0\":1,\"34\":1,\"54\":1,\"130\":1,\"171\":1,\"260\":1,\"262\":1,\"311\":10,\"319\":1}}],[\"仅存储一个值\",{\"1\":{\"253\":1}}],[\"仅能使用\",{\"1\":{\"232\":1}}],[\"仅需要判断是否相等\",{\"1\":{\"252\":1}}],[\"仅需要对插件进行简单的配置即可使用\",{\"1\":{\"145\":1}}],[\"仅需完成环境配置及插件安装\",{\"1\":{\"0\":1}}],[\"仅用于\",{\"1\":{\"86\":1}}],[\"仅支持\",{\"1\":{\"0\":1}}],[\"概览\",{\"0\":{\"0\":1}}]],\"version\":2}}")).map(([e,t])=>[e,It(t,{fields:["h","t","c"],storeFields:["h","t","c"]})]));self.onmessage=({data:{type:e="all",query:t,locale:s,options:n,id:o}})=>{const r=Ct[s];e==="suggest"?self.postMessage([e,o,et(t,r,n)]):e==="search"?self.postMessage([e,o,tt(t,r,n)]):self.postMessage({suggestions:[e,o,et(t,r,n)],results:[e,o,tt(t,r,n)]})};
//# sourceMappingURL=index.js.map
