[...new Array(6)].map((e,t)=>`[vp-content] h${t+1}`).join(",");const{entries:$}=Object,{fromEntries:st}=Object,nt="ENTRIES",D="KEYS",W="VALUES",_="";class S{set;_type;_path;constructor(t,s){const n=t._tree,o=Array.from(n.keys());this.set=t,this._type=s,this._path=o.length>0?[{node:n,keys:o}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:s}=b(this._path);if(b(s)===_)return{done:!1,value:this.result()};const n=t.get(b(s));return this._path.push({node:n,keys:Array.from(n.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=b(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>b(t)).filter(t=>t!==_).join("")}value(){return b(this._path).node.get(_)}result(){switch(this._type){case W:return this.value();case D:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const b=e=>e[e.length-1],ot=(e,t,s)=>{const n=new Map;if(typeof t!="string")return n;const o=t.length+1,r=o+s,i=new Uint8Array(r*o).fill(s+1);for(let c=0;c<o;++c)i[c]=c;for(let c=1;c<r;++c)i[c*o]=c;return q(e,t,s,n,i,1,o,""),n},q=(e,t,s,n,o,r,i,c)=>{const l=r*i;t:for(const u of e.keys())if(u===_){const h=o[l-1];h<=s&&n.set(c,[e.get(u),h])}else{let h=r;for(let f=0;f<u.length;++f,++h){const m=u[f],g=i*h,y=g-i;let d=o[g];const a=Math.max(0,h-s-1),w=Math.min(i-1,h+s);for(let p=a;p<w;++p){const O=m!==t[p],C=o[y+p]+ +O,k=o[y+p+1]+1,x=o[g+p]+1,v=o[g+p+1]=Math.min(C,k,x);v<d&&(d=v)}if(d>s)continue t}q(e.get(u),t,s,n,o,h,i,c+u)}};class z{_tree;_prefix;_size=void 0;constructor(t=new Map,s=""){this._tree=t,this._prefix=s}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[s,n]=I(this._tree,t.slice(this._prefix.length));if(s===void 0){const[o,r]=L(n);for(const i of o.keys())if(i!==_&&i.startsWith(r)){const c=new Map;return c.set(i.slice(r.length),o.get(i)),new z(c,t)}}return new z(s,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,rt(this._tree,t)}entries(){return new S(this,nt)}forEach(t){for(const[s,n]of this)t(s,n,this)}fuzzyGet(t,s){return ot(this._tree,t,s)}get(t){const s=F(this._tree,t);return s!==void 0?s.get(_):void 0}has(t){return F(this._tree,t)?.has(_)??!1}keys(){return new S(this,D)}set(t,s){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,E(this._tree,t).set(_,s),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=E(this._tree,t);return n.set(_,s(n.get(_))),this}fetch(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=E(this._tree,t);let o=n.get(_);return o===void 0&&n.set(_,o=s()),o}values(){return new S(this,W)}[Symbol.iterator](){return this.entries()}static from(t){const s=new z;for(const[n,o]of t)s.set(n,o);return s}static fromObject(t){return z.from(Object.entries(t))}}const I=(e,t,s=[])=>{if(t.length===0||e==null)return[e,s];for(const n of e.keys())if(n!==_&&t.startsWith(n))return s.push([e,n]),I(e.get(n),t.slice(n.length),s);return s.push([e,t]),I(void 0,"",s)},F=(e,t)=>{if(t.length===0||!e)return e;for(const s of e.keys())if(s!==_&&t.startsWith(s))return F(e.get(s),t.slice(s.length))},E=(e,t)=>{const s=t.length;t:for(let n=0;e&&n<s;){for(const r of e.keys())if(r!==_&&t[n]===r[0]){const i=Math.min(s-n,r.length);let c=1;for(;c<i&&t[n+c]===r[c];)++c;const l=e.get(r);if(c===r.length)e=l;else{const u=new Map;u.set(r.slice(c),l),e.set(t.slice(n,n+c),u),e.delete(r),e=u}n+=c;continue t}const o=new Map;return e.set(t.slice(n),o),o}return e},rt=(e,t)=>{const[s,n]=I(e,t);if(s!==void 0){if(s.delete(_),s.size===0)A(n);else if(s.size===1){const[o,r]=s.entries().next().value;R(n,o,r)}}},A=e=>{if(e.length===0)return;const[t,s]=L(e);if(t.delete(s),t.size===0)A(e.slice(0,-1));else if(t.size===1){const[n,o]=t.entries().next().value;n!==_&&R(e.slice(0,-1),n,o)}},R=(e,t,s)=>{if(e.length===0)return;const[n,o]=L(e);n.set(o+t,s),n.delete(o)},L=e=>e[e.length-1],it=(e,t)=>{const s=e._idToShortId.get(t);if(s!=null)return e._storedFields.get(s)},ct=/[\n\r\p{Z}\p{P}]+/u,j="or",N="and",ut="and_not",ht=(e,t)=>{e.includes(t)||e.push(t)},P=(e,t)=>{for(const s of t)e.includes(s)||e.push(s)},B=({score:e},{score:t})=>t-e,lt=()=>new Map,M=e=>{const t=new Map;for(const s of Object.keys(e))t.set(parseInt(s,10),e[s]);return t},G=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,H={[j]:(e,t)=>{for(const s of t.keys()){const n=e.get(s);if(n==null)e.set(s,t.get(s));else{const{score:o,terms:r,match:i}=t.get(s);n.score=n.score+o,n.match=Object.assign(n.match,i),P(n.terms,r)}}return e},[N]:(e,t)=>{const s=new Map;for(const n of t.keys()){const o=e.get(n);if(o==null)continue;const{score:r,terms:i,match:c}=t.get(n);P(o.terms,i),s.set(n,{score:o.score+r,terms:o.terms,match:Object.assign(o.match,c)})}return s},[ut]:(e,t)=>{for(const s of t.keys())e.delete(s);return e}},dt=(e,t,s,n,o,r)=>{const{k:i,b:c,d:l}=r;return Math.log(1+(s-t+.5)/(t+.5))*(l+e*(i+1)/(e+i*(1-c+c*n/o)))},at=e=>(t,s,n)=>({term:t,fuzzy:typeof e.fuzzy=="function"?e.fuzzy(t,s,n):e.fuzzy??!1,prefix:typeof e.prefix=="function"?e.prefix(t,s,n):e.prefix===!0,termBoost:typeof e.boostTerm=="function"?e.boostTerm(t,s,n):1}),J=(e,t,s,n)=>{for(const o of Object.keys(e._fieldIds))if(e._fieldIds[o]===s){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${n}" was not present in field "${o}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},ft=(e,t,s,n)=>{if(!e._index.has(n)){J(e,s,t,n);return}const o=e._index.fetch(n,lt),r=o.get(t),i=r?.get(s);!r||typeof i>"u"?J(e,s,t,n):i<=1?r.size<=1?o.delete(t):r.delete(s):r.set(s,i-1),e._index.get(n).size===0&&e._index.delete(n)},mt={k:1.2,b:.7,d:.5},gt={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(ct),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{console?.[e]?.(t)},autoVacuum:!0},Y={combineWith:j,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:mt},pt={combineWith:N,prefix:(e,t,s)=>t===s.length-1},_t={batchSize:1e3,batchWait:10},K={minDirtFactor:.1,minDirtCount:20},yt={..._t,...K},U=Symbol("*"),wt=(e,t)=>{const s=new Map,n={...e._options.searchOptions,...t};for(const[o,r]of e._documentIds){const i=n.boostDocument?n.boostDocument(r,"",e._storedFields.get(o)):1;s.set(o,{score:i,terms:[],match:{}})}return s},Q=(e,t=j)=>{if(e.length===0)return new Map;const s=t.toLowerCase();if(!(s in H))throw new Error(`Invalid combination operator: ${t}`);return e.reduce(H[s])},T=(e,t,s,n,o,r,i,c,l,u=new Map)=>{if(r==null)return u;for(const h of Object.keys(i)){const f=i[h],m=e._fieldIds[h],g=r.get(m);if(g==null)continue;let y=g.size;const d=e._avgFieldLength[m];for(const a of g.keys()){if(!e._documentIds.has(a)){ft(e,m,a,s),y-=1;continue}const w=c?c(e._documentIds.get(a),s,e._storedFields.get(a)):1;if(!w)continue;const p=g.get(a),O=e._fieldLength.get(a)[m],C=dt(p,y,e._documentCount,O,d,l),k=n*o*f*w*C,x=u.get(a);if(x){x.score+=k,ht(x.terms,t);const v=G(x.match,s);v?v.push(h):x.match[s]=[h]}else u.set(a,{score:k,terms:[t],match:{[s]:[h]}})}}return u},xt=(e,t,s)=>{const n={...e._options.searchOptions,...s},o=(n.fields??e._options.fields).reduce((d,a)=>({...d,[a]:G(n.boost,a)||1}),{}),{boostDocument:r,weights:i,maxFuzzy:c,bm25:l}=n,{fuzzy:u,prefix:h}={...Y.weights,...i},f=e._index.get(t.term),m=T(e,t.term,t.term,1,t.termBoost,f,o,r,l);let g,y;if(t.prefix&&(g=e._index.atPrefix(t.term)),t.fuzzy){const d=t.fuzzy===!0?.2:t.fuzzy,a=d<1?Math.min(c,Math.round(t.term.length*d)):d;a&&(y=e._index.fuzzyGet(t.term,a))}if(g)for(const[d,a]of g){const w=d.length-t.term.length;if(!w)continue;y?.delete(d);const p=h*d.length/(d.length+.3*w);T(e,t.term,d,p,t.termBoost,a,o,r,l,m)}if(y)for(const d of y.keys()){const[a,w]=y.get(d);if(!w)continue;const p=u*d.length/(d.length+w);T(e,t.term,d,p,t.termBoost,a,o,r,l,m)}return m},X=(e,t,s={})=>{if(t===U)return wt(e,s);if(typeof t!="string"){const h={...s,...t,queries:void 0},f=t.queries.map(m=>X(e,m,h));return Q(f,h.combineWith)}const{tokenize:n,processTerm:o,searchOptions:r}=e._options,i={tokenize:n,processTerm:o,...r,...s},{tokenize:c,processTerm:l}=i,u=c(t).flatMap(h=>l(h)).filter(h=>!!h).map(at(i)).map(h=>xt(e,h,i));return Q(u,i.combineWith)},Z=(e,t,s={})=>{const{searchOptions:n}=e._options,o={...n,...s},r=X(e,t,s),i=[];for(const[c,{score:l,terms:u,match:h}]of r){const f=u.length||1,m={id:e._documentIds.get(c),score:l*f,terms:Object.keys(h),queryTerms:u,match:h};Object.assign(m,e._storedFields.get(c)),(o.filter==null||o.filter(m))&&i.push(m)}return t===U&&o.boostDocument==null||i.sort(B),i},zt=(e,t,s={})=>{s={...e._options.autoSuggestOptions,...s};const n=new Map;for(const{score:r,terms:i}of Z(e,t,s)){const c=i.join(" "),l=n.get(c);l!=null?(l.score+=r,l.count+=1):n.set(c,{score:r,terms:i,count:1})}const o=[];for(const[r,{score:i,terms:c,count:l}]of n)o.push({suggestion:r,terms:c,score:i/l});return o.sort(B),o};class bt{_options;_index;_documentCount;_documentIds;_idToShortId;_fieldIds;_fieldLength;_avgFieldLength;_nextId;_storedFields;_dirtCount;_currentVacuum;_enqueuedVacuum;_enqueuedVacuumConditions;constructor(t){if(!t?.fields)throw new Error('SlimSearch: option "fields" must be provided');const s=t.autoVacuum==null||t.autoVacuum===!0?yt:t.autoVacuum;this._options={...gt,...t,autoVacuum:s,searchOptions:{...Y,...t.searchOptions},autoSuggestOptions:{...pt,...t.autoSuggestOptions}},this._index=new z,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=K,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[s,n]of this._index){const o={};for(const[r,i]of n)o[r]=Object.fromEntries(i);t.push([s,o])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,version:2}}addFields(t){for(let s=0;s<t.length;s++)this._fieldIds[t[s]]=s}}const vt=e=>new bt(e),kt=({documentCount:e,nextId:t,fieldIds:s,averageFieldLength:n,dirtCount:o,version:r},i)=>{if(r!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const c=vt(i);return c._documentCount=e,c._nextId=t,c._idToShortId=new Map,c._fieldIds=s,c._avgFieldLength=n,c._dirtCount=o??0,c._index=new z,c},It=(e,t)=>{const{index:s,documentIds:n,fieldLength:o,storedFields:r}=e,i=kt(e,t);i._documentIds=M(n),i._fieldLength=M(o),i._storedFields=M(r);for(const[c,l]of i._documentIds)i._idToShortId.set(l,c);for(const[c,l]of s){const u=new Map;for(const h of Object.keys(l))u.set(parseInt(h,10),M(l[h]));i._index.set(c,u)}return i},V=(e,t)=>{const s=e.toLowerCase(),n=t.toLowerCase(),o=[];let r=0,i=0;const c=(u,h=!1)=>{let f;i===0?f=u.length>20?`… ${u.slice(-20)}`:u:h?f=u.length+i>100?`${u.slice(0,100-i)}… `:u:f=u.length>20?`${u.slice(0,20)} … ${u.slice(-20)}`:u,f&&o.push(f),i+=f.length,h||(o.push(["mark",t]),i+=t.length,i>=100&&o.push(" …"))};let l=s.indexOf(n,r);if(l===-1)return null;for(;l>=0;){const u=l+n.length;if(c(e.slice(r,l)),r=u,i>100)break;l=s.indexOf(n,r)}return i<100&&c(e.slice(r),!0),o},Mt=(e,t)=>t.contents.reduce((s,[,n])=>s+n,0)-e.contents.reduce((s,[,n])=>s+n,0),Ot=(e,t)=>Math.max(...t.contents.map(([,s])=>s))-Math.max(...e.contents.map(([,s])=>s)),tt=(e,t,s={})=>{const n={};return Z(t,e,{boost:{h:2,t:1,c:4},prefix:!0,...s}).forEach(o=>{const{id:r,terms:i,score:c}=o,l=r.includes("@"),u=r.includes("#"),[h,f]=r.split(/[#@]/),m=Number(h),g=i.sort((d,a)=>d.length-a.length).filter((d,a)=>i.slice(a+1).every(w=>!w.includes(d))),{contents:y}=n[m]??={title:"",contents:[]};if(l)y.push([{type:"customField",id:m,index:f,display:g.map(d=>o.c.map(a=>V(a,d))).flat().filter(d=>d!==null)},c]);else{const d=g.map(a=>V(o.h,a)).filter(a=>a!==null);if(d.length&&y.push([{type:u?"heading":"title",id:m,...u&&{anchor:f},display:d},c]),"t"in o&&o.t)for(const a of o.t){const w=g.map(p=>V(a,p)).filter(p=>p!==null);w.length&&y.push([{type:"text",id:m,...u&&{anchor:f},display:w},c])}}}),$(n).sort(([,o],[,r])=>"max"==="total"?Mt(o,r):Ot(o,r)).map(([o,{title:r,contents:i}])=>{if(!r){const c=it(t,o);c&&(r=c.h)}return{title:r,contents:i.map(([c])=>c)}})},et=(e,t,s={})=>{const n=zt(t,e,{fuzzy:.2,maxFuzzy:3,...s}).map(({suggestion:o})=>o);return e.includes(" ")?n:n.filter(o=>!o.includes(" "))},Ct=st($(JSON.parse("{\"/\":{\"documentCount\":2784,\"nextId\":2784,\"documentIds\":{\"0\":\"0\",\"1\":\"0#特色\",\"2\":\"0#异步优先\",\"3\":\"0#完整的类型注解\",\"4\":\"0#开箱即用\",\"5\":\"0#插件系统\",\"6\":\"0#依赖注入系统\",\"7\":\"0#什么是依赖注入\",\"8\":\"1\",\"9\":\"1#编辑器推荐配置\",\"10\":\"1#visual-studio-code\",\"11\":\"1#其他\",\"12\":\"2\",\"13\":\"2#特色\",\"14\":\"2#异步优先\",\"15\":\"2#完整的类型注解\",\"16\":\"2#开箱即用\",\"17\":\"2#插件系统\",\"18\":\"2#依赖注入系统\",\"19\":\"2#什么是依赖注入\",\"20\":\"3\",\"21\":\"3#编辑器推荐配置\",\"22\":\"3#visual-studio-code\",\"23\":\"3#其他\",\"24\":\"4\",\"25\":\"4#特色\",\"26\":\"4#异步优先\",\"27\":\"4#完整的类型注解\",\"28\":\"4#开箱即用\",\"29\":\"4#插件系统\",\"30\":\"4#依赖注入系统\",\"31\":\"4#什么是依赖注入\",\"32\":\"5\",\"33\":\"5#编辑器推荐配置\",\"34\":\"5#visual-studio-code\",\"35\":\"5#其他\",\"36\":\"6\",\"37\":\"6#适配器功能与组成\",\"38\":\"6#注册适配器\",\"39\":\"6#获取已注册的适配器\",\"40\":\"6#获取-bot-对象\",\"41\":\"6#获取事件通用信息\",\"42\":\"6#事件类型\",\"43\":\"6#事件名称\",\"44\":\"6#事件描述\",\"45\":\"6#事件日志字符串\",\"46\":\"6#事件主体-id\",\"47\":\"6#事件会话-id\",\"48\":\"6#事件消息\",\"49\":\"6#事件纯文本消息\",\"50\":\"6#事件是否与机器人有关\",\"51\":\"6#更多\",\"52\":\"7\",\"53\":\"7#驱动器类型\",\"54\":\"7#配置驱动器\",\"55\":\"7#获取驱动器\",\"56\":\"7#内置驱动器\",\"57\":\"7#none\",\"58\":\"7#fastapi-默认\",\"59\":\"7#fastapi-配置项\",\"60\":\"7#fastapi-openapi-url\",\"61\":\"7#fastapi-docs-url\",\"62\":\"7#fastapi-redoc-url\",\"63\":\"7#fastapi-include-adapter-schema\",\"64\":\"7#fastapi-reload\",\"65\":\"7#fastapi-reload-dirs\",\"66\":\"7#fastapi-reload-delay\",\"67\":\"7#fastapi-reload-includes\",\"68\":\"7#fastapi-reload-excludes\",\"69\":\"7#fastapi-extra\",\"70\":\"7#quart\",\"71\":\"7#quart-配置项\",\"72\":\"7#quart-reload\",\"73\":\"7#quart-reload-dirs\",\"74\":\"7#quart-reload-delay\",\"75\":\"7#quart-reload-includes\",\"76\":\"7#quart-reload-excludes\",\"77\":\"7#quart-extra\",\"78\":\"7#httpx\",\"79\":\"7#websockets\",\"80\":\"7#aiohttp\",\"81\":\"8\",\"82\":\"8#编写存储提供者\",\"83\":\"8#设置存储提供者\",\"84\":\"9\",\"85\":\"9#事件响应器组成\",\"86\":\"9#事件响应器类型\",\"87\":\"9#事件触发权限\",\"88\":\"9#事件响应规则\",\"89\":\"9#响应优先级\",\"90\":\"9#阻断\",\"91\":\"9#有效期\",\"92\":\"9#默认状态\",\"93\":\"9#基本辅助函数\",\"94\":\"9#内置响应规则\",\"95\":\"9#startswith\",\"96\":\"9#endswith\",\"97\":\"9#fullmatch\",\"98\":\"9#keyword\",\"99\":\"9#command\",\"100\":\"9#shell-command\",\"101\":\"9#regex\",\"102\":\"9#to-me\",\"103\":\"9#is-type\",\"104\":\"9#响应器组\",\"105\":\"9#commandgroup\",\"106\":\"9#matchergroup\",\"107\":\"9#第三方响应规则\",\"108\":\"9#alconna\",\"109\":\"10\",\"110\":\"10#插件元数据\",\"111\":\"10#获取插件信息\",\"112\":\"11\",\"113\":\"11#创建嵌套插件\",\"114\":\"11#已有插件\",\"115\":\"12\",\"116\":\"12#插件跟踪\",\"117\":\"12#插件依赖声明\",\"118\":\"13\",\"119\":\"13#通过兼容层添加路由\",\"120\":\"13#http-路由\",\"121\":\"13#websocket-路由\",\"122\":\"13#使用-asgi-应用添加路由\",\"123\":\"13#获取-asgi-应用\",\"124\":\"13#添加路由规则\",\"125\":\"14\",\"126\":\"14#全局钩子函数\",\"127\":\"14#启动准备\",\"128\":\"14#终止处理\",\"129\":\"14#bot-连接处理\",\"130\":\"14#bot-断开处理\",\"131\":\"14#事件处理钩子函数\",\"132\":\"14#事件预处理\",\"133\":\"14#事件后处理\",\"134\":\"14#运行预处理\",\"135\":\"14#运行后处理\",\"136\":\"14#平台接口调用钩子\",\"137\":\"14#平台接口调用后钩子\",\"138\":\"15\",\"139\":\"15#更新事件响应器类型\",\"140\":\"15#更新事件触发权限\",\"141\":\"16\",\"142\":\"16#Required\",\"143\":\"16#PydanticUndefined\",\"144\":\"16#PydanticUndefinedType\",\"145\":\"16#DEFAULT-CONFIG\",\"146\":\"16#FieldInfo\",\"147\":\"16#FieldInfo-extra\",\"148\":\"16#ModelField\",\"149\":\"16#ModelField-name\",\"150\":\"16#ModelField-annotation\",\"151\":\"16#ModelField-field-info\",\"152\":\"16#ModelField-construct\",\"153\":\"16#ModelField-get-default\",\"154\":\"16#ModelField-validate-value\",\"155\":\"16#extract-field-info\",\"156\":\"16#model-fields\",\"157\":\"16#model-config\",\"158\":\"16#model-dump\",\"159\":\"16#type-validate-python\",\"160\":\"16#type-validate-json\",\"161\":\"16#custom-validation\",\"162\":\"17\",\"163\":\"17#Env\",\"164\":\"17#Env-environment\",\"165\":\"17#Config\",\"166\":\"17#Config-driver\",\"167\":\"17#Config-host\",\"168\":\"17#Config-port\",\"169\":\"17#Config-log-level\",\"170\":\"17#Config-api-timeout\",\"171\":\"17#Config-superusers\",\"172\":\"17#Config-nickname\",\"173\":\"17#Config-command-start\",\"174\":\"17#Config-command-sep\",\"175\":\"17#Config-session-expire-timeout\",\"176\":\"18\",\"177\":\"18#RECEIVE-KEY\",\"178\":\"18#LAST-RECEIVE-KEY\",\"179\":\"18#ARG-KEY\",\"180\":\"18#REJECT-TARGET\",\"181\":\"18#REJECT-CACHE-TARGET\",\"182\":\"18#PREFIX-KEY\",\"183\":\"18#CMD-KEY\",\"184\":\"18#RAW-CMD-KEY\",\"185\":\"18#CMD-ARG-KEY\",\"186\":\"18#CMD-START-KEY\",\"187\":\"18#CMD-WHITESPACE-KEY\",\"188\":\"18#SHELL-ARGS\",\"189\":\"18#SHELL-ARGV\",\"190\":\"18#REGEX-MATCHED\",\"191\":\"18#STARTSWITH-KEY\",\"192\":\"18#ENDSWITH-KEY\",\"193\":\"18#FULLMATCH-KEY\",\"194\":\"18#KEYWORD-KEY\",\"195\":\"19\",\"196\":\"19#NoneBotException\",\"197\":\"19#ParserExit\",\"198\":\"19#ProcessException\",\"199\":\"19#IgnoredException\",\"200\":\"19#SkippedException\",\"201\":\"19#TypeMisMatch\",\"202\":\"19#MockApiException\",\"203\":\"19#StopPropagation\",\"204\":\"19#MatcherException\",\"205\":\"19#PausedException\",\"206\":\"19#RejectedException\",\"207\":\"19#FinishedException\",\"208\":\"19#AdapterException\",\"209\":\"19#NoLogException\",\"210\":\"19#ApiNotAvailable\",\"211\":\"19#NetworkError\",\"212\":\"19#ActionFailed\",\"213\":\"19#DriverException\",\"214\":\"19#WebSocketClosed\",\"215\":\"20\",\"216\":\"20#快捷导入\",\"217\":\"20#get-driver\",\"218\":\"20#get-adapter\",\"219\":\"20#get-adapters\",\"220\":\"20#get-app\",\"221\":\"20#get-asgi\",\"222\":\"20#get-bot\",\"223\":\"20#get-bots\",\"224\":\"20#init\",\"225\":\"20#run\",\"226\":\"21\",\"227\":\"21#logger\",\"228\":\"21#LoguruHandler\",\"229\":\"21#LoguruHandler-emit\",\"230\":\"21#default-filter\",\"231\":\"21#default-format\",\"232\":\"22\",\"233\":\"22#Matcher\",\"234\":\"22#Matcher-type\",\"235\":\"22#Matcher-rule\",\"236\":\"22#Matcher-permission\",\"237\":\"22#Matcher-handlers\",\"238\":\"22#Matcher-priority\",\"239\":\"22#Matcher-block\",\"240\":\"22#Matcher-temp\",\"241\":\"22#Matcher-expire-time\",\"242\":\"22#Matcher-new\",\"243\":\"22#Matcher-destroy\",\"244\":\"22#Matcher-check-perm\",\"245\":\"22#Matcher-check-rule\",\"246\":\"22#Matcher-type-updater\",\"247\":\"22#Matcher-permission-updater\",\"248\":\"22#Matcher-append-handler\",\"249\":\"22#Matcher-handle\",\"250\":\"22#Matcher-receive\",\"251\":\"22#Matcher-got\",\"252\":\"22#Matcher-send\",\"253\":\"22#Matcher-finish\",\"254\":\"22#Matcher-pause\",\"255\":\"22#Matcher-reject\",\"256\":\"22#Matcher-reject-arg\",\"257\":\"22#Matcher-reject-receive\",\"258\":\"22#Matcher-skip\",\"259\":\"22#Matcher-get-receive\",\"260\":\"22#Matcher-set-receive\",\"261\":\"22#Matcher-get-last-receive\",\"262\":\"22#Matcher-get-arg\",\"263\":\"22#Matcher-set-arg\",\"264\":\"22#Matcher-set-target\",\"265\":\"22#Matcher-get-target\",\"266\":\"22#Matcher-stop-propagation\",\"267\":\"22#Matcher-update-type\",\"268\":\"22#Matcher-update-permission\",\"269\":\"22#Matcher-resolve-reject\",\"270\":\"22#Matcher-ensure-context\",\"271\":\"22#Matcher-simple-run\",\"272\":\"22#Matcher-run\",\"273\":\"22#matchers\",\"274\":\"22#MatcherManager\",\"275\":\"22#MatcherManager-keys\",\"276\":\"22#MatcherManager-values\",\"277\":\"22#MatcherManager-items\",\"278\":\"22#MatcherManager-get\",\"279\":\"22#MatcherManager-pop\",\"280\":\"22#MatcherManager-popitem\",\"281\":\"22#MatcherManager-clear\",\"282\":\"22#MatcherManager-update\",\"283\":\"22#MatcherManager-setdefault\",\"284\":\"22#MatcherManager-set-provider\",\"285\":\"22#MatcherProvider\",\"286\":\"22#DEFAULT-PROVIDER-CLASS\",\"287\":\"23\",\"288\":\"23#event-preprocessor\",\"289\":\"23#event-postprocessor\",\"290\":\"23#run-preprocessor\",\"291\":\"23#run-postprocessor\",\"292\":\"23#check-and-run-matcher\",\"293\":\"23#handle-event\",\"294\":\"24\",\"295\":\"24#Arg\",\"296\":\"24#ArgStr\",\"297\":\"24#Depends\",\"298\":\"24#ArgParam\",\"299\":\"24#BotParam\",\"300\":\"24#EventParam\",\"301\":\"24#StateParam\",\"302\":\"24#DependParam\",\"303\":\"24#ArgPlainText\",\"304\":\"24#DefaultParam\",\"305\":\"24#MatcherParam\",\"306\":\"24#ExceptionParam\",\"307\":\"24#EventType\",\"308\":\"24#EventMessage\",\"309\":\"24#EventPlainText\",\"310\":\"24#EventToMe\",\"311\":\"24#Command\",\"312\":\"24#RawCommand\",\"313\":\"24#CommandArg\",\"314\":\"24#CommandStart\",\"315\":\"24#CommandWhitespace\",\"316\":\"24#ShellCommandArgs\",\"317\":\"24#ShellCommandArgv\",\"318\":\"24#RegexMatched\",\"319\":\"24#RegexStr\",\"320\":\"24#RegexGroup\",\"321\":\"24#RegexDict\",\"322\":\"24#Startswith\",\"323\":\"24#Endswith\",\"324\":\"24#Fullmatch\",\"325\":\"24#Keyword\",\"326\":\"24#Received\",\"327\":\"24#LastReceived\",\"328\":\"25\",\"329\":\"25#USER\",\"330\":\"25#User\",\"331\":\"25#User-from-event\",\"332\":\"25#User-from-permission\",\"333\":\"25#Permission\",\"334\":\"25#Permission-checkers\",\"335\":\"25#Permission---call--\",\"336\":\"25#Message\",\"337\":\"25#Notice\",\"338\":\"25#Request\",\"339\":\"25#MetaEvent\",\"340\":\"25#MESSAGE\",\"341\":\"25#NOTICE\",\"342\":\"25#REQUEST\",\"343\":\"25#METAEVENT\",\"344\":\"25#SuperUser\",\"345\":\"25#SUPERUSER\",\"346\":\"26\",\"347\":\"26#Rule\",\"348\":\"26#Rule-checkers\",\"349\":\"26#Rule---call--\",\"350\":\"26#CMD-RESULT\",\"351\":\"26#TRIE-VALUE\",\"352\":\"26#StartswithRule\",\"353\":\"26#startswith\",\"354\":\"26#EndswithRule\",\"355\":\"26#endswith\",\"356\":\"26#FullmatchRule\",\"357\":\"26#fullmatch\",\"358\":\"26#KeywordsRule\",\"359\":\"26#keyword\",\"360\":\"26#CommandRule\",\"361\":\"26#command\",\"362\":\"26#ArgumentParser\",\"363\":\"26#ArgumentParser-parse-known-args\",\"364\":\"26#ShellCommandRule\",\"365\":\"26#shell-command\",\"366\":\"26#RegexRule\",\"367\":\"26#regex\",\"368\":\"26#ToMeRule\",\"369\":\"26#to-me\",\"370\":\"26#IsTypeRule\",\"371\":\"26#is-type\",\"372\":\"27\",\"373\":\"27#overrides\",\"374\":\"27#type-has-args\",\"375\":\"27#origin-is-union\",\"376\":\"27#origin-is-literal\",\"377\":\"27#all-literal-values\",\"378\":\"27#origin-is-annotated\",\"379\":\"27#is-none-type\",\"380\":\"27#evaluate-forwardref\",\"381\":\"27#StateFlag\",\"382\":\"27#T-State\",\"383\":\"27#T-BotConnectionHook\",\"384\":\"27#T-BotDisconnectionHook\",\"385\":\"27#T-CallingAPIHook\",\"386\":\"27#T-CalledAPIHook\",\"387\":\"27#T-EventPreProcessor\",\"388\":\"27#T-EventPostProcessor\",\"389\":\"27#T-RunPreProcessor\",\"390\":\"27#T-RunPostProcessor\",\"391\":\"27#T-RuleChecker\",\"392\":\"27#T-PermissionChecker\",\"393\":\"27#T-Handler\",\"394\":\"27#T-TypeUpdater\",\"395\":\"27#T-PermissionUpdater\",\"396\":\"27#T-DependencyCache\",\"397\":\"28\",\"398\":\"28#escape-tag\",\"399\":\"28#deep-update\",\"400\":\"28#lenient-issubclass\",\"401\":\"28#generic-check-issubclass\",\"402\":\"28#type-is-complex\",\"403\":\"28#is-coroutine-callable\",\"404\":\"28#is-gen-callable\",\"405\":\"28#is-async-gen-callable\",\"406\":\"28#run-sync\",\"407\":\"28#run-sync-ctx-manager\",\"408\":\"28#run-coro-with-catch\",\"409\":\"28#run-coro-with-shield\",\"410\":\"28#flatten-exception-group\",\"411\":\"28#get-name\",\"412\":\"28#path-to-module-name\",\"413\":\"28#resolve-dot-notation\",\"414\":\"28#classproperty\",\"415\":\"28#DataclassEncoder\",\"416\":\"28#DataclassEncoder-default\",\"417\":\"28#logger-wrapper\",\"418\":\"29\",\"419\":\"29#记录日志\",\"420\":\"29#自定义日志输出\",\"421\":\"29#重定向-logging-日志\",\"422\":\"30\",\"423\":\"30#事件类型\",\"424\":\"30#重载\",\"425\":\"31\",\"426\":\"31#rulechecker\",\"427\":\"31#rule\",\"428\":\"31#合并响应规则\",\"429\":\"31#主动使用响应规则\",\"430\":\"31#内置响应规则\",\"431\":\"32\",\"432\":\"33\",\"433\":\"34\",\"434\":\"34#安装插件\",\"435\":\"34#使用插件\",\"436\":\"34#配置项\",\"437\":\"34#localstore-use-cwd\",\"438\":\"34#localstore-cache-dir\",\"439\":\"34#localstore-data-dir\",\"440\":\"34#localstore-config-dir\",\"441\":\"34#localstore-plugin-cache-dir\",\"442\":\"34#localstore-plugin-data-dir\",\"443\":\"34#localstore-plugin-config-dir\",\"444\":\"35\",\"445\":\"35#安装插件\",\"446\":\"35#使用插件\",\"447\":\"35#获取-sentry-dsn\",\"448\":\"35#配置插件\",\"449\":\"35#配置项\",\"450\":\"36\",\"451\":\"36#安装插件\",\"452\":\"36#使用插件\",\"453\":\"36#导入调度器\",\"454\":\"36#添加定时任务\",\"455\":\"36#配置项\",\"456\":\"36#apscheduler-autostart\",\"457\":\"36#apscheduler-log-level\",\"458\":\"36#apscheduler-config\",\"459\":\"37\",\"460\":\"38\",\"461\":\"38#code-of-conduct\",\"462\":\"38#参与开发\",\"463\":\"38#鸣谢\",\"464\":\"39\",\"465\":\"39#组织结构\",\"466\":\"39#使用-nb-cli-创建项目\",\"467\":\"39#组成部分\",\"468\":\"39#log\",\"469\":\"39#config\",\"470\":\"39#adapter\",\"471\":\"39#与平台交互\",\"472\":\"39#客户端通信方式\",\"473\":\"39#服务端通信方式\",\"474\":\"39#建立-bot-连接\",\"475\":\"39#转换-event-事件\",\"476\":\"39#调用平台-api\",\"477\":\"39#bot\",\"478\":\"39#event\",\"479\":\"39#message\",\"480\":\"39#适配器测试\",\"481\":\"39#后续工作\",\"482\":\"40\",\"483\":\"40#nonebot-v1\",\"484\":\"40#更新-nonebot-v1-文档中的-指南-部分\",\"485\":\"40#nonebot-v1-api-文档自动生成\",\"486\":\"40#nonebot-v2\",\"487\":\"40#nonebot-v2-自动化测试框架-nonebug\",\"488\":\"40#nonebot-v2-telegram-适配器\",\"489\":\"40#nonebot-v2-飞书适配器\",\"490\":\"40#onebot\",\"491\":\"40#设计-onebot-v12-接口标准\",\"492\":\"40#实现-rust-版-libonebot\",\"493\":\"40#实现自选语言版-libonebot\",\"494\":\"41\",\"495\":\"41#nonebot2-命令行-cli-交互体验升级\",\"496\":\"41#nonebot2-命令行即时交互通信设计与实现\",\"497\":\"41#nonebot2-用户上手与深入教程设计\",\"498\":\"42\",\"499\":\"42#nonebot-项目管理图形化面板\",\"500\":\"42#nonebot-discord-适配器\",\"501\":\"42#nonebot-数据库支持插件\",\"502\":\"43\",\"503\":\"43#nonepress-官网组件库更新与优化\",\"504\":\"43#noneflow-社区自动化工作流管理优化\",\"505\":\"43#noneblockly-低代码框架开发\",\"506\":\"44\",\"507\":\"44#安装依赖\",\"508\":\"44#创建配置文件\",\"509\":\"44#创建入口文件\",\"510\":\"44#运行机器人\",\"511\":\"45\",\"512\":\"45#插件结构\",\"513\":\"45#单文件插件\",\"514\":\"45#包插件\",\"515\":\"45#创建插件\",\"516\":\"45#加载插件\",\"517\":\"45#load-plugin\",\"518\":\"45#load-plugins\",\"519\":\"45#load-all-plugins\",\"520\":\"45#load-from-json\",\"521\":\"45#load-from-toml\",\"522\":\"45#load-builtin-plugin\",\"523\":\"45#load-builtin-plugins\",\"524\":\"45#其他加载方式\",\"525\":\"46\",\"526\":\"47\",\"527\":\"47#事件响应器辅助函数\",\"528\":\"47#创建事件响应器\",\"529\":\"47#为事件响应器添加参数\",\"530\":\"48\",\"531\":\"48#认识消息类型\",\"532\":\"48#消息序列-message\",\"533\":\"48#消息段-messagesegment\",\"534\":\"48#使用消息序列\",\"535\":\"48#构造消息序列\",\"536\":\"48#直接构造\",\"537\":\"48#运算构造\",\"538\":\"48#从字典数组构造\",\"539\":\"48#获取消息纯文本\",\"540\":\"48#遍历\",\"541\":\"48#比较\",\"542\":\"48#检查消息段\",\"543\":\"48#过滤、索引与切片\",\"544\":\"48#拼接消息\",\"545\":\"48#使用消息模板\",\"546\":\"49\",\"547\":\"49#适配器功能与组成\",\"548\":\"49#注册适配器\",\"549\":\"49#获取已注册的适配器\",\"550\":\"49#获取-bot-对象\",\"551\":\"49#获取事件通用信息\",\"552\":\"49#事件类型\",\"553\":\"49#事件名称\",\"554\":\"49#事件描述\",\"555\":\"49#事件日志字符串\",\"556\":\"49#事件主体-id\",\"557\":\"49#事件会话-id\",\"558\":\"49#事件消息\",\"559\":\"49#事件纯文本消息\",\"560\":\"49#事件是否与机器人有关\",\"561\":\"49#更多\",\"562\":\"50\",\"563\":\"50#驱动器类型\",\"564\":\"50#配置驱动器\",\"565\":\"50#获取驱动器\",\"566\":\"50#内置驱动器\",\"567\":\"50#none\",\"568\":\"50#fastapi-默认\",\"569\":\"50#fastapi-配置项\",\"570\":\"50#fastapi-openapi-url\",\"571\":\"50#fastapi-docs-url\",\"572\":\"50#fastapi-redoc-url\",\"573\":\"50#fastapi-include-adapter-schema\",\"574\":\"50#fastapi-reload\",\"575\":\"50#fastapi-reload-dirs\",\"576\":\"50#fastapi-reload-delay\",\"577\":\"50#fastapi-reload-includes\",\"578\":\"50#fastapi-reload-excludes\",\"579\":\"50#fastapi-extra\",\"580\":\"50#quart\",\"581\":\"50#quart-配置项\",\"582\":\"50#quart-reload\",\"583\":\"50#quart-reload-dirs\",\"584\":\"50#quart-reload-delay\",\"585\":\"50#quart-reload-includes\",\"586\":\"50#quart-reload-excludes\",\"587\":\"50#quart-extra\",\"588\":\"50#httpx\",\"589\":\"50#websockets\",\"590\":\"50#aiohttp\",\"591\":\"51\",\"592\":\"51#编写存储提供者\",\"593\":\"51#设置存储提供者\",\"594\":\"52\",\"595\":\"52#事件响应器组成\",\"596\":\"52#事件响应器类型\",\"597\":\"52#事件触发权限\",\"598\":\"52#事件响应规则\",\"599\":\"52#响应优先级\",\"600\":\"52#阻断\",\"601\":\"52#有效期\",\"602\":\"52#默认状态\",\"603\":\"52#基本辅助函数\",\"604\":\"52#内置响应规则\",\"605\":\"52#startswith\",\"606\":\"52#endswith\",\"607\":\"52#fullmatch\",\"608\":\"52#keyword\",\"609\":\"52#command\",\"610\":\"52#shell-command\",\"611\":\"52#regex\",\"612\":\"52#to-me\",\"613\":\"52#is-type\",\"614\":\"52#响应器组\",\"615\":\"52#commandgroup\",\"616\":\"52#matchergroup\",\"617\":\"52#第三方响应规则\",\"618\":\"52#alconna\",\"619\":\"53\",\"620\":\"53#插件元数据\",\"621\":\"53#获取插件信息\",\"622\":\"54\",\"623\":\"54#创建嵌套插件\",\"624\":\"54#已有插件\",\"625\":\"55\",\"626\":\"55#插件跟踪\",\"627\":\"55#插件依赖声明\",\"628\":\"56\",\"629\":\"56#通过兼容层添加路由\",\"630\":\"56#http-路由\",\"631\":\"56#websocket-路由\",\"632\":\"56#使用-asgi-应用添加路由\",\"633\":\"56#获取-asgi-应用\",\"634\":\"56#添加路由规则\",\"635\":\"57\",\"636\":\"57#全局钩子函数\",\"637\":\"57#启动准备\",\"638\":\"57#终止处理\",\"639\":\"57#bot-连接处理\",\"640\":\"57#bot-断开处理\",\"641\":\"57#事件处理钩子函数\",\"642\":\"57#事件预处理\",\"643\":\"57#事件后处理\",\"644\":\"57#运行预处理\",\"645\":\"57#运行后处理\",\"646\":\"57#平台接口调用钩子\",\"647\":\"57#平台接口调用后钩子\",\"648\":\"58\",\"649\":\"58#更新事件响应器类型\",\"650\":\"58#更新事件触发权限\",\"651\":\"59\",\"652\":\"59#Required\",\"653\":\"59#PydanticUndefined\",\"654\":\"59#PydanticUndefinedType\",\"655\":\"59#DEFAULT-CONFIG\",\"656\":\"59#FieldInfo\",\"657\":\"59#FieldInfo-extra\",\"658\":\"59#ModelField\",\"659\":\"59#ModelField-name\",\"660\":\"59#ModelField-annotation\",\"661\":\"59#ModelField-field-info\",\"662\":\"59#ModelField-construct\",\"663\":\"59#ModelField-get-default\",\"664\":\"59#ModelField-validate-value\",\"665\":\"59#extract-field-info\",\"666\":\"59#model-fields\",\"667\":\"59#model-config\",\"668\":\"59#model-dump\",\"669\":\"59#type-validate-python\",\"670\":\"59#type-validate-json\",\"671\":\"59#custom-validation\",\"672\":\"60\",\"673\":\"60#Env\",\"674\":\"60#Env-environment\",\"675\":\"60#Config\",\"676\":\"60#Config-driver\",\"677\":\"60#Config-host\",\"678\":\"60#Config-port\",\"679\":\"60#Config-log-level\",\"680\":\"60#Config-api-timeout\",\"681\":\"60#Config-superusers\",\"682\":\"60#Config-nickname\",\"683\":\"60#Config-command-start\",\"684\":\"60#Config-command-sep\",\"685\":\"60#Config-session-expire-timeout\",\"686\":\"61\",\"687\":\"61#RECEIVE-KEY\",\"688\":\"61#LAST-RECEIVE-KEY\",\"689\":\"61#ARG-KEY\",\"690\":\"61#REJECT-TARGET\",\"691\":\"61#REJECT-CACHE-TARGET\",\"692\":\"61#PAUSE-PROMPT-RESULT-KEY\",\"693\":\"61#REJECT-PROMPT-RESULT-KEY\",\"694\":\"61#PREFIX-KEY\",\"695\":\"61#CMD-KEY\",\"696\":\"61#RAW-CMD-KEY\",\"697\":\"61#CMD-ARG-KEY\",\"698\":\"61#CMD-START-KEY\",\"699\":\"61#CMD-WHITESPACE-KEY\",\"700\":\"61#SHELL-ARGS\",\"701\":\"61#SHELL-ARGV\",\"702\":\"61#REGEX-MATCHED\",\"703\":\"61#STARTSWITH-KEY\",\"704\":\"61#ENDSWITH-KEY\",\"705\":\"61#FULLMATCH-KEY\",\"706\":\"61#KEYWORD-KEY\",\"707\":\"62\",\"708\":\"62#NoneBotException\",\"709\":\"62#ParserExit\",\"710\":\"62#ProcessException\",\"711\":\"62#IgnoredException\",\"712\":\"62#SkippedException\",\"713\":\"62#TypeMisMatch\",\"714\":\"62#MockApiException\",\"715\":\"62#StopPropagation\",\"716\":\"62#MatcherException\",\"717\":\"62#PausedException\",\"718\":\"62#RejectedException\",\"719\":\"62#FinishedException\",\"720\":\"62#AdapterException\",\"721\":\"62#NoLogException\",\"722\":\"62#ApiNotAvailable\",\"723\":\"62#NetworkError\",\"724\":\"62#ActionFailed\",\"725\":\"62#DriverException\",\"726\":\"62#WebSocketClosed\",\"727\":\"63\",\"728\":\"63#快捷导入\",\"729\":\"63#get-driver\",\"730\":\"63#get-adapter\",\"731\":\"63#get-adapters\",\"732\":\"63#get-app\",\"733\":\"63#get-asgi\",\"734\":\"63#get-bot\",\"735\":\"63#get-bots\",\"736\":\"63#init\",\"737\":\"63#run\",\"738\":\"64\",\"739\":\"64#logger\",\"740\":\"64#LoguruHandler\",\"741\":\"64#LoguruHandler-emit\",\"742\":\"64#default-filter\",\"743\":\"64#default-format\",\"744\":\"65\",\"745\":\"65#DEFAULT-PROVIDER-CLASS\",\"746\":\"65#Matcher\",\"747\":\"65#Matcher-type\",\"748\":\"65#Matcher-rule\",\"749\":\"65#Matcher-permission\",\"750\":\"65#Matcher-handlers\",\"751\":\"65#Matcher-priority\",\"752\":\"65#Matcher-block\",\"753\":\"65#Matcher-temp\",\"754\":\"65#Matcher-expire-time\",\"755\":\"65#Matcher-new\",\"756\":\"65#Matcher-destroy\",\"757\":\"65#Matcher-check-perm\",\"758\":\"65#Matcher-check-rule\",\"759\":\"65#Matcher-type-updater\",\"760\":\"65#Matcher-permission-updater\",\"761\":\"65#Matcher-append-handler\",\"762\":\"65#Matcher-handle\",\"763\":\"65#Matcher-receive\",\"764\":\"65#Matcher-got\",\"765\":\"65#Matcher-send\",\"766\":\"65#Matcher-finish\",\"767\":\"65#Matcher-pause\",\"768\":\"65#Matcher-reject\",\"769\":\"65#Matcher-reject-arg\",\"770\":\"65#Matcher-reject-receive\",\"771\":\"65#Matcher-skip\",\"772\":\"65#Matcher-get-receive\",\"773\":\"65#Matcher-set-receive\",\"774\":\"65#Matcher-get-last-receive\",\"775\":\"65#Matcher-get-arg\",\"776\":\"65#Matcher-set-arg\",\"777\":\"65#Matcher-set-target\",\"778\":\"65#Matcher-get-target\",\"779\":\"65#Matcher-stop-propagation\",\"780\":\"65#Matcher-update-type\",\"781\":\"65#Matcher-update-permission\",\"782\":\"65#Matcher-resolve-reject\",\"783\":\"65#Matcher-ensure-context\",\"784\":\"65#Matcher-simple-run\",\"785\":\"65#Matcher-run\",\"786\":\"65#MatcherManager\",\"787\":\"65#MatcherManager-keys\",\"788\":\"65#MatcherManager-values\",\"789\":\"65#MatcherManager-items\",\"790\":\"65#MatcherManager-get\",\"791\":\"65#MatcherManager-pop\",\"792\":\"65#MatcherManager-popitem\",\"793\":\"65#MatcherManager-clear\",\"794\":\"65#MatcherManager-update\",\"795\":\"65#MatcherManager-setdefault\",\"796\":\"65#MatcherManager-set-provider\",\"797\":\"65#MatcherProvider\",\"798\":\"65#matchers\",\"799\":\"66\",\"800\":\"66#event-preprocessor\",\"801\":\"66#event-postprocessor\",\"802\":\"66#run-preprocessor\",\"803\":\"66#run-postprocessor\",\"804\":\"66#check-and-run-matcher\",\"805\":\"66#handle-event\",\"806\":\"67\",\"807\":\"67#Arg\",\"808\":\"67#ArgParam\",\"809\":\"67#ArgPlainText\",\"810\":\"67#ArgPromptResult\",\"811\":\"67#ArgStr\",\"812\":\"67#BotParam\",\"813\":\"67#DefaultParam\",\"814\":\"67#DependParam\",\"815\":\"67#Depends\",\"816\":\"67#EventParam\",\"817\":\"67#ExceptionParam\",\"818\":\"67#MatcherParam\",\"819\":\"67#StateParam\",\"820\":\"67#EventType\",\"821\":\"67#EventMessage\",\"822\":\"67#EventPlainText\",\"823\":\"67#EventToMe\",\"824\":\"67#Command\",\"825\":\"67#RawCommand\",\"826\":\"67#CommandArg\",\"827\":\"67#CommandStart\",\"828\":\"67#CommandWhitespace\",\"829\":\"67#ShellCommandArgs\",\"830\":\"67#ShellCommandArgv\",\"831\":\"67#RegexMatched\",\"832\":\"67#RegexStr\",\"833\":\"67#RegexGroup\",\"834\":\"67#RegexDict\",\"835\":\"67#Startswith\",\"836\":\"67#Endswith\",\"837\":\"67#Fullmatch\",\"838\":\"67#Keyword\",\"839\":\"67#Received\",\"840\":\"67#LastReceived\",\"841\":\"67#ReceivePromptResult\",\"842\":\"67#PausePromptResult\",\"843\":\"68\",\"844\":\"68#USER\",\"845\":\"68#Permission\",\"846\":\"68#Permission-checkers\",\"847\":\"68#Permission---call--\",\"848\":\"68#User\",\"849\":\"68#User-from-event\",\"850\":\"68#User-from-permission\",\"851\":\"68#Message\",\"852\":\"68#Notice\",\"853\":\"68#Request\",\"854\":\"68#MetaEvent\",\"855\":\"68#MESSAGE\",\"856\":\"68#NOTICE\",\"857\":\"68#REQUEST\",\"858\":\"68#METAEVENT\",\"859\":\"68#SuperUser\",\"860\":\"68#SUPERUSER\",\"861\":\"69\",\"862\":\"69#Rule\",\"863\":\"69#Rule-checkers\",\"864\":\"69#Rule---call--\",\"865\":\"69#CMD-RESULT\",\"866\":\"69#TRIE-VALUE\",\"867\":\"69#StartswithRule\",\"868\":\"69#startswith\",\"869\":\"69#EndswithRule\",\"870\":\"69#endswith\",\"871\":\"69#FullmatchRule\",\"872\":\"69#fullmatch\",\"873\":\"69#KeywordsRule\",\"874\":\"69#keyword\",\"875\":\"69#CommandRule\",\"876\":\"69#command\",\"877\":\"69#ArgumentParser\",\"878\":\"69#ArgumentParser-parse-known-args\",\"879\":\"69#ShellCommandRule\",\"880\":\"69#shell-command\",\"881\":\"69#RegexRule\",\"882\":\"69#regex\",\"883\":\"69#ToMeRule\",\"884\":\"69#to-me\",\"885\":\"69#IsTypeRule\",\"886\":\"69#is-type\",\"887\":\"70\",\"888\":\"70#overrides\",\"889\":\"70#type-has-args\",\"890\":\"70#origin-is-union\",\"891\":\"70#origin-is-literal\",\"892\":\"70#all-literal-values\",\"893\":\"70#origin-is-annotated\",\"894\":\"70#is-none-type\",\"895\":\"70#evaluate-forwardref\",\"896\":\"70#StateFlag\",\"897\":\"70#T-State\",\"898\":\"70#T-BotConnectionHook\",\"899\":\"70#T-BotDisconnectionHook\",\"900\":\"70#T-CallingAPIHook\",\"901\":\"70#T-CalledAPIHook\",\"902\":\"70#T-EventPreProcessor\",\"903\":\"70#T-EventPostProcessor\",\"904\":\"70#T-RunPreProcessor\",\"905\":\"70#T-RunPostProcessor\",\"906\":\"70#T-RuleChecker\",\"907\":\"70#T-PermissionChecker\",\"908\":\"70#T-Handler\",\"909\":\"70#T-TypeUpdater\",\"910\":\"70#T-PermissionUpdater\",\"911\":\"70#T-DependencyCache\",\"912\":\"71\",\"913\":\"71#escape-tag\",\"914\":\"71#deep-update\",\"915\":\"71#lenient-issubclass\",\"916\":\"71#generic-check-issubclass\",\"917\":\"71#type-is-complex\",\"918\":\"71#is-coroutine-callable\",\"919\":\"71#is-gen-callable\",\"920\":\"71#is-async-gen-callable\",\"921\":\"71#run-sync\",\"922\":\"71#run-sync-ctx-manager\",\"923\":\"71#run-coro-with-catch\",\"924\":\"71#run-coro-with-shield\",\"925\":\"71#flatten-exception-group\",\"926\":\"71#get-name\",\"927\":\"71#path-to-module-name\",\"928\":\"71#resolve-dot-notation\",\"929\":\"71#classproperty\",\"930\":\"71#DataclassEncoder\",\"931\":\"71#DataclassEncoder-default\",\"932\":\"71#logger-wrapper\",\"933\":\"72\",\"934\":\"72#记录日志\",\"935\":\"72#自定义日志输出\",\"936\":\"72#重定向-logging-日志\",\"937\":\"73\",\"938\":\"73#事件类型\",\"939\":\"73#重载\",\"940\":\"74\",\"941\":\"74#rulechecker\",\"942\":\"74#rule\",\"943\":\"74#合并响应规则\",\"944\":\"74#主动使用响应规则\",\"945\":\"74#内置响应规则\",\"946\":\"75\",\"947\":\"76\",\"948\":\"77\",\"949\":\"77#安装插件\",\"950\":\"77#使用插件\",\"951\":\"77#配置项\",\"952\":\"77#localstore-use-cwd\",\"953\":\"77#localstore-cache-dir\",\"954\":\"77#localstore-data-dir\",\"955\":\"77#localstore-config-dir\",\"956\":\"77#localstore-plugin-cache-dir\",\"957\":\"77#localstore-plugin-data-dir\",\"958\":\"77#localstore-plugin-config-dir\",\"959\":\"78\",\"960\":\"78#安装插件\",\"961\":\"78#使用插件\",\"962\":\"78#获取-sentry-dsn\",\"963\":\"78#配置插件\",\"964\":\"78#配置项\",\"965\":\"79\",\"966\":\"79#安装插件\",\"967\":\"79#使用插件\",\"968\":\"79#导入调度器\",\"969\":\"79#添加定时任务\",\"970\":\"79#配置项\",\"971\":\"79#apscheduler-autostart\",\"972\":\"79#apscheduler-log-level\",\"973\":\"79#apscheduler-config\",\"974\":\"80\",\"975\":\"81\",\"976\":\"81#code-of-conduct\",\"977\":\"81#参与开发\",\"978\":\"81#鸣谢\",\"979\":\"82\",\"980\":\"82#组织结构\",\"981\":\"82#使用-nb-cli-创建项目\",\"982\":\"82#组成部分\",\"983\":\"82#log\",\"984\":\"82#config\",\"985\":\"82#adapter\",\"986\":\"82#与平台交互\",\"987\":\"82#客户端通信方式\",\"988\":\"82#服务端通信方式\",\"989\":\"82#建立-bot-连接\",\"990\":\"82#转换-event-事件\",\"991\":\"82#调用平台-api\",\"992\":\"82#bot\",\"993\":\"82#event\",\"994\":\"82#message\",\"995\":\"82#适配器测试\",\"996\":\"82#后续工作\",\"997\":\"83\",\"998\":\"83#nonebot-v1\",\"999\":\"83#更新-nonebot-v1-文档中的-指南-部分\",\"1000\":\"83#nonebot-v1-api-文档自动生成\",\"1001\":\"83#nonebot-v2\",\"1002\":\"83#nonebot-v2-自动化测试框架-nonebug\",\"1003\":\"83#nonebot-v2-telegram-适配器\",\"1004\":\"83#nonebot-v2-飞书适配器\",\"1005\":\"83#onebot\",\"1006\":\"83#设计-onebot-v12-接口标准\",\"1007\":\"83#实现-rust-版-libonebot\",\"1008\":\"83#实现自选语言版-libonebot\",\"1009\":\"84\",\"1010\":\"84#nonebot2-命令行-cli-交互体验升级\",\"1011\":\"84#nonebot2-命令行即时交互通信设计与实现\",\"1012\":\"84#nonebot2-用户上手与深入教程设计\",\"1013\":\"85\",\"1014\":\"85#nonebot-项目管理图形化面板\",\"1015\":\"85#nonebot-discord-适配器\",\"1016\":\"85#nonebot-数据库支持插件\",\"1017\":\"86\",\"1018\":\"86#nonepress-官网组件库更新与优化\",\"1019\":\"86#noneflow-社区自动化工作流管理优化\",\"1020\":\"86#noneblockly-低代码框架开发\",\"1021\":\"87\",\"1022\":\"87#安装依赖\",\"1023\":\"87#创建配置文件\",\"1024\":\"87#创建入口文件\",\"1025\":\"87#运行机器人\",\"1026\":\"88\",\"1027\":\"88#插件结构\",\"1028\":\"88#单文件插件\",\"1029\":\"88#包插件\",\"1030\":\"88#创建插件\",\"1031\":\"88#加载插件\",\"1032\":\"88#load-plugin\",\"1033\":\"88#load-plugins\",\"1034\":\"88#load-all-plugins\",\"1035\":\"88#load-from-json\",\"1036\":\"88#load-from-toml\",\"1037\":\"88#load-builtin-plugin\",\"1038\":\"88#load-builtin-plugins\",\"1039\":\"88#其他加载方式\",\"1040\":\"89\",\"1041\":\"90\",\"1042\":\"90#事件响应器辅助函数\",\"1043\":\"90#创建事件响应器\",\"1044\":\"90#为事件响应器添加参数\",\"1045\":\"91\",\"1046\":\"91#认识消息类型\",\"1047\":\"91#消息序列-message\",\"1048\":\"91#消息段-messagesegment\",\"1049\":\"91#使用消息序列\",\"1050\":\"91#构造消息序列\",\"1051\":\"91#直接构造\",\"1052\":\"91#运算构造\",\"1053\":\"91#从字典数组构造\",\"1054\":\"91#获取消息纯文本\",\"1055\":\"91#遍历\",\"1056\":\"91#比较\",\"1057\":\"91#检查消息段\",\"1058\":\"91#过滤、索引与切片\",\"1059\":\"91#拼接消息\",\"1060\":\"91#使用消息模板\",\"1061\":\"92\",\"1062\":\"92#适配器功能与组成\",\"1063\":\"92#注册适配器\",\"1064\":\"92#获取已注册的适配器\",\"1065\":\"92#获取-bot-对象\",\"1066\":\"92#获取事件通用信息\",\"1067\":\"92#事件类型\",\"1068\":\"92#事件名称\",\"1069\":\"92#事件描述\",\"1070\":\"92#事件日志字符串\",\"1071\":\"92#事件主体-id\",\"1072\":\"92#事件会话-id\",\"1073\":\"92#事件消息\",\"1074\":\"92#事件纯文本消息\",\"1075\":\"92#事件是否与机器人有关\",\"1076\":\"92#更多\",\"1077\":\"93\",\"1078\":\"93#驱动器类型\",\"1079\":\"93#配置驱动器\",\"1080\":\"93#获取驱动器\",\"1081\":\"93#内置驱动器\",\"1082\":\"93#none\",\"1083\":\"93#fastapi-默认\",\"1084\":\"93#fastapi-配置项\",\"1085\":\"93#fastapi-openapi-url\",\"1086\":\"93#fastapi-docs-url\",\"1087\":\"93#fastapi-redoc-url\",\"1088\":\"93#fastapi-include-adapter-schema\",\"1089\":\"93#fastapi-reload\",\"1090\":\"93#fastapi-reload-dirs\",\"1091\":\"93#fastapi-reload-delay\",\"1092\":\"93#fastapi-reload-includes\",\"1093\":\"93#fastapi-reload-excludes\",\"1094\":\"93#fastapi-extra\",\"1095\":\"93#quart\",\"1096\":\"93#quart-配置项\",\"1097\":\"93#quart-reload\",\"1098\":\"93#quart-reload-dirs\",\"1099\":\"93#quart-reload-delay\",\"1100\":\"93#quart-reload-includes\",\"1101\":\"93#quart-reload-excludes\",\"1102\":\"93#quart-extra\",\"1103\":\"93#httpx\",\"1104\":\"93#websockets\",\"1105\":\"93#aiohttp\",\"1106\":\"94\",\"1107\":\"94#编写存储提供者\",\"1108\":\"94#设置存储提供者\",\"1109\":\"95\",\"1110\":\"95#事件响应器组成\",\"1111\":\"95#事件响应器类型\",\"1112\":\"95#事件触发权限\",\"1113\":\"95#事件响应规则\",\"1114\":\"95#响应优先级\",\"1115\":\"95#阻断\",\"1116\":\"95#有效期\",\"1117\":\"95#默认状态\",\"1118\":\"95#基本辅助函数\",\"1119\":\"95#内置响应规则\",\"1120\":\"95#startswith\",\"1121\":\"95#endswith\",\"1122\":\"95#fullmatch\",\"1123\":\"95#keyword\",\"1124\":\"95#command\",\"1125\":\"95#shell-command\",\"1126\":\"95#regex\",\"1127\":\"95#to-me\",\"1128\":\"95#is-type\",\"1129\":\"95#响应器组\",\"1130\":\"95#commandgroup\",\"1131\":\"95#matchergroup\",\"1132\":\"95#第三方响应规则\",\"1133\":\"95#alconna\",\"1134\":\"96\",\"1135\":\"96#插件元数据\",\"1136\":\"96#获取插件信息\",\"1137\":\"97\",\"1138\":\"97#创建嵌套插件\",\"1139\":\"97#已有插件\",\"1140\":\"98\",\"1141\":\"98#插件跟踪\",\"1142\":\"98#插件依赖声明\",\"1143\":\"99\",\"1144\":\"99#通过兼容层添加路由\",\"1145\":\"99#http-路由\",\"1146\":\"99#websocket-路由\",\"1147\":\"99#使用-asgi-应用添加路由\",\"1148\":\"99#获取-asgi-应用\",\"1149\":\"99#添加路由规则\",\"1150\":\"100\",\"1151\":\"100#全局钩子函数\",\"1152\":\"100#启动准备\",\"1153\":\"100#终止处理\",\"1154\":\"100#bot-连接处理\",\"1155\":\"100#bot-断开处理\",\"1156\":\"100#事件处理钩子函数\",\"1157\":\"100#事件预处理\",\"1158\":\"100#事件后处理\",\"1159\":\"100#运行预处理\",\"1160\":\"100#运行后处理\",\"1161\":\"100#平台接口调用钩子\",\"1162\":\"100#平台接口调用后钩子\",\"1163\":\"101\",\"1164\":\"101#更新事件响应器类型\",\"1165\":\"101#更新事件触发权限\",\"1166\":\"102\",\"1167\":\"102#Required\",\"1168\":\"102#PydanticUndefined\",\"1169\":\"102#PydanticUndefinedType\",\"1170\":\"102#DEFAULT-CONFIG\",\"1171\":\"102#FieldInfo\",\"1172\":\"102#FieldInfo-extra\",\"1173\":\"102#ModelField\",\"1174\":\"102#ModelField-name\",\"1175\":\"102#ModelField-annotation\",\"1176\":\"102#ModelField-field-info\",\"1177\":\"102#ModelField-construct\",\"1178\":\"102#ModelField-get-default\",\"1179\":\"102#ModelField-validate-value\",\"1180\":\"102#extract-field-info\",\"1181\":\"102#model-fields\",\"1182\":\"102#model-config\",\"1183\":\"102#model-dump\",\"1184\":\"102#type-validate-python\",\"1185\":\"102#type-validate-json\",\"1186\":\"102#custom-validation\",\"1187\":\"103\",\"1188\":\"103#Env\",\"1189\":\"103#Env-environment\",\"1190\":\"103#Config\",\"1191\":\"103#Config-driver\",\"1192\":\"103#Config-host\",\"1193\":\"103#Config-port\",\"1194\":\"103#Config-log-level\",\"1195\":\"103#Config-api-timeout\",\"1196\":\"103#Config-superusers\",\"1197\":\"103#Config-nickname\",\"1198\":\"103#Config-command-start\",\"1199\":\"103#Config-command-sep\",\"1200\":\"103#Config-session-expire-timeout\",\"1201\":\"104\",\"1202\":\"104#RECEIVE-KEY\",\"1203\":\"104#LAST-RECEIVE-KEY\",\"1204\":\"104#ARG-KEY\",\"1205\":\"104#REJECT-TARGET\",\"1206\":\"104#REJECT-CACHE-TARGET\",\"1207\":\"104#PAUSE-PROMPT-RESULT-KEY\",\"1208\":\"104#REJECT-PROMPT-RESULT-KEY\",\"1209\":\"104#PREFIX-KEY\",\"1210\":\"104#CMD-KEY\",\"1211\":\"104#RAW-CMD-KEY\",\"1212\":\"104#CMD-ARG-KEY\",\"1213\":\"104#CMD-START-KEY\",\"1214\":\"104#CMD-WHITESPACE-KEY\",\"1215\":\"104#SHELL-ARGS\",\"1216\":\"104#SHELL-ARGV\",\"1217\":\"104#REGEX-MATCHED\",\"1218\":\"104#STARTSWITH-KEY\",\"1219\":\"104#ENDSWITH-KEY\",\"1220\":\"104#FULLMATCH-KEY\",\"1221\":\"104#KEYWORD-KEY\",\"1222\":\"105\",\"1223\":\"105#NoneBotException\",\"1224\":\"105#ParserExit\",\"1225\":\"105#ProcessException\",\"1226\":\"105#IgnoredException\",\"1227\":\"105#SkippedException\",\"1228\":\"105#TypeMisMatch\",\"1229\":\"105#MockApiException\",\"1230\":\"105#StopPropagation\",\"1231\":\"105#MatcherException\",\"1232\":\"105#PausedException\",\"1233\":\"105#RejectedException\",\"1234\":\"105#FinishedException\",\"1235\":\"105#AdapterException\",\"1236\":\"105#NoLogException\",\"1237\":\"105#ApiNotAvailable\",\"1238\":\"105#NetworkError\",\"1239\":\"105#ActionFailed\",\"1240\":\"105#DriverException\",\"1241\":\"105#WebSocketClosed\",\"1242\":\"106\",\"1243\":\"106#快捷导入\",\"1244\":\"106#get-driver\",\"1245\":\"106#get-adapter\",\"1246\":\"106#get-adapters\",\"1247\":\"106#get-app\",\"1248\":\"106#get-asgi\",\"1249\":\"106#get-bot\",\"1250\":\"106#get-bots\",\"1251\":\"106#init\",\"1252\":\"106#run\",\"1253\":\"107\",\"1254\":\"107#logger\",\"1255\":\"107#LoguruHandler\",\"1256\":\"107#LoguruHandler-emit\",\"1257\":\"107#default-filter\",\"1258\":\"107#default-format\",\"1259\":\"108\",\"1260\":\"108#DEFAULT-PROVIDER-CLASS\",\"1261\":\"108#Matcher\",\"1262\":\"108#Matcher-type\",\"1263\":\"108#Matcher-rule\",\"1264\":\"108#Matcher-permission\",\"1265\":\"108#Matcher-handlers\",\"1266\":\"108#Matcher-priority\",\"1267\":\"108#Matcher-block\",\"1268\":\"108#Matcher-temp\",\"1269\":\"108#Matcher-expire-time\",\"1270\":\"108#Matcher-new\",\"1271\":\"108#Matcher-destroy\",\"1272\":\"108#Matcher-check-perm\",\"1273\":\"108#Matcher-check-rule\",\"1274\":\"108#Matcher-type-updater\",\"1275\":\"108#Matcher-permission-updater\",\"1276\":\"108#Matcher-append-handler\",\"1277\":\"108#Matcher-handle\",\"1278\":\"108#Matcher-receive\",\"1279\":\"108#Matcher-got\",\"1280\":\"108#Matcher-send\",\"1281\":\"108#Matcher-finish\",\"1282\":\"108#Matcher-pause\",\"1283\":\"108#Matcher-reject\",\"1284\":\"108#Matcher-reject-arg\",\"1285\":\"108#Matcher-reject-receive\",\"1286\":\"108#Matcher-skip\",\"1287\":\"108#Matcher-get-receive\",\"1288\":\"108#Matcher-set-receive\",\"1289\":\"108#Matcher-get-last-receive\",\"1290\":\"108#Matcher-get-arg\",\"1291\":\"108#Matcher-set-arg\",\"1292\":\"108#Matcher-set-target\",\"1293\":\"108#Matcher-get-target\",\"1294\":\"108#Matcher-stop-propagation\",\"1295\":\"108#Matcher-update-type\",\"1296\":\"108#Matcher-update-permission\",\"1297\":\"108#Matcher-resolve-reject\",\"1298\":\"108#Matcher-ensure-context\",\"1299\":\"108#Matcher-simple-run\",\"1300\":\"108#Matcher-run\",\"1301\":\"108#MatcherManager\",\"1302\":\"108#MatcherManager-keys\",\"1303\":\"108#MatcherManager-values\",\"1304\":\"108#MatcherManager-items\",\"1305\":\"108#MatcherManager-get\",\"1306\":\"108#MatcherManager-pop\",\"1307\":\"108#MatcherManager-popitem\",\"1308\":\"108#MatcherManager-clear\",\"1309\":\"108#MatcherManager-update\",\"1310\":\"108#MatcherManager-setdefault\",\"1311\":\"108#MatcherManager-set-provider\",\"1312\":\"108#MatcherProvider\",\"1313\":\"108#matchers\",\"1314\":\"109\",\"1315\":\"109#event-preprocessor\",\"1316\":\"109#event-postprocessor\",\"1317\":\"109#run-preprocessor\",\"1318\":\"109#run-postprocessor\",\"1319\":\"109#check-and-run-matcher\",\"1320\":\"109#handle-event\",\"1321\":\"110\",\"1322\":\"110#Arg\",\"1323\":\"110#ArgParam\",\"1324\":\"110#ArgPlainText\",\"1325\":\"110#ArgPromptResult\",\"1326\":\"110#ArgStr\",\"1327\":\"110#BotParam\",\"1328\":\"110#DefaultParam\",\"1329\":\"110#DependParam\",\"1330\":\"110#Depends\",\"1331\":\"110#EventParam\",\"1332\":\"110#ExceptionParam\",\"1333\":\"110#MatcherParam\",\"1334\":\"110#StateParam\",\"1335\":\"110#EventType\",\"1336\":\"110#EventMessage\",\"1337\":\"110#EventPlainText\",\"1338\":\"110#EventToMe\",\"1339\":\"110#Command\",\"1340\":\"110#RawCommand\",\"1341\":\"110#CommandArg\",\"1342\":\"110#CommandStart\",\"1343\":\"110#CommandWhitespace\",\"1344\":\"110#ShellCommandArgs\",\"1345\":\"110#ShellCommandArgv\",\"1346\":\"110#RegexMatched\",\"1347\":\"110#RegexStr\",\"1348\":\"110#RegexGroup\",\"1349\":\"110#RegexDict\",\"1350\":\"110#Startswith\",\"1351\":\"110#Endswith\",\"1352\":\"110#Fullmatch\",\"1353\":\"110#Keyword\",\"1354\":\"110#Received\",\"1355\":\"110#LastReceived\",\"1356\":\"110#ReceivePromptResult\",\"1357\":\"110#PausePromptResult\",\"1358\":\"111\",\"1359\":\"111#USER\",\"1360\":\"111#Permission\",\"1361\":\"111#Permission-checkers\",\"1362\":\"111#Permission---call--\",\"1363\":\"111#User\",\"1364\":\"111#User-from-event\",\"1365\":\"111#User-from-permission\",\"1366\":\"111#Message\",\"1367\":\"111#Notice\",\"1368\":\"111#Request\",\"1369\":\"111#MetaEvent\",\"1370\":\"111#MESSAGE\",\"1371\":\"111#NOTICE\",\"1372\":\"111#REQUEST\",\"1373\":\"111#METAEVENT\",\"1374\":\"111#SuperUser\",\"1375\":\"111#SUPERUSER\",\"1376\":\"112\",\"1377\":\"112#Rule\",\"1378\":\"112#Rule-checkers\",\"1379\":\"112#Rule---call--\",\"1380\":\"112#CMD-RESULT\",\"1381\":\"112#TRIE-VALUE\",\"1382\":\"112#StartswithRule\",\"1383\":\"112#startswith\",\"1384\":\"112#EndswithRule\",\"1385\":\"112#endswith\",\"1386\":\"112#FullmatchRule\",\"1387\":\"112#fullmatch\",\"1388\":\"112#KeywordsRule\",\"1389\":\"112#keyword\",\"1390\":\"112#CommandRule\",\"1391\":\"112#command\",\"1392\":\"112#ArgumentParser\",\"1393\":\"112#ArgumentParser-parse-known-args\",\"1394\":\"112#ShellCommandRule\",\"1395\":\"112#shell-command\",\"1396\":\"112#RegexRule\",\"1397\":\"112#regex\",\"1398\":\"112#ToMeRule\",\"1399\":\"112#to-me\",\"1400\":\"112#IsTypeRule\",\"1401\":\"112#is-type\",\"1402\":\"113\",\"1403\":\"113#overrides\",\"1404\":\"113#type-has-args\",\"1405\":\"113#origin-is-union\",\"1406\":\"113#origin-is-literal\",\"1407\":\"113#all-literal-values\",\"1408\":\"113#origin-is-annotated\",\"1409\":\"113#is-none-type\",\"1410\":\"113#evaluate-forwardref\",\"1411\":\"113#StateFlag\",\"1412\":\"113#T-State\",\"1413\":\"113#T-BotConnectionHook\",\"1414\":\"113#T-BotDisconnectionHook\",\"1415\":\"113#T-CallingAPIHook\",\"1416\":\"113#T-CalledAPIHook\",\"1417\":\"113#T-EventPreProcessor\",\"1418\":\"113#T-EventPostProcessor\",\"1419\":\"113#T-RunPreProcessor\",\"1420\":\"113#T-RunPostProcessor\",\"1421\":\"113#T-RuleChecker\",\"1422\":\"113#T-PermissionChecker\",\"1423\":\"113#T-Handler\",\"1424\":\"113#T-TypeUpdater\",\"1425\":\"113#T-PermissionUpdater\",\"1426\":\"113#T-DependencyCache\",\"1427\":\"114\",\"1428\":\"114#escape-tag\",\"1429\":\"114#deep-update\",\"1430\":\"114#lenient-issubclass\",\"1431\":\"114#generic-check-issubclass\",\"1432\":\"114#type-is-complex\",\"1433\":\"114#is-coroutine-callable\",\"1434\":\"114#is-gen-callable\",\"1435\":\"114#is-async-gen-callable\",\"1436\":\"114#run-sync\",\"1437\":\"114#run-sync-ctx-manager\",\"1438\":\"114#run-coro-with-catch\",\"1439\":\"114#run-coro-with-shield\",\"1440\":\"114#flatten-exception-group\",\"1441\":\"114#get-name\",\"1442\":\"114#path-to-module-name\",\"1443\":\"114#resolve-dot-notation\",\"1444\":\"114#classproperty\",\"1445\":\"114#DataclassEncoder\",\"1446\":\"114#DataclassEncoder-default\",\"1447\":\"114#logger-wrapper\",\"1448\":\"115\",\"1449\":\"115#记录日志\",\"1450\":\"115#自定义日志输出\",\"1451\":\"115#重定向-logging-日志\",\"1452\":\"116\",\"1453\":\"116#事件类型\",\"1454\":\"116#重载\",\"1455\":\"117\",\"1456\":\"117#rulechecker\",\"1457\":\"117#rule\",\"1458\":\"117#合并响应规则\",\"1459\":\"117#主动使用响应规则\",\"1460\":\"117#内置响应规则\",\"1461\":\"118\",\"1462\":\"119\",\"1463\":\"120\",\"1464\":\"120#安装插件\",\"1465\":\"120#使用插件\",\"1466\":\"120#配置项\",\"1467\":\"120#localstore-use-cwd\",\"1468\":\"120#localstore-cache-dir\",\"1469\":\"120#localstore-data-dir\",\"1470\":\"120#localstore-config-dir\",\"1471\":\"120#localstore-plugin-cache-dir\",\"1472\":\"120#localstore-plugin-data-dir\",\"1473\":\"120#localstore-plugin-config-dir\",\"1474\":\"121\",\"1475\":\"121#安装插件\",\"1476\":\"121#使用插件\",\"1477\":\"121#获取-sentry-dsn\",\"1478\":\"121#配置插件\",\"1479\":\"121#配置项\",\"1480\":\"122\",\"1481\":\"122#安装插件\",\"1482\":\"122#使用插件\",\"1483\":\"122#导入调度器\",\"1484\":\"122#添加定时任务\",\"1485\":\"122#配置项\",\"1486\":\"122#apscheduler-autostart\",\"1487\":\"122#apscheduler-log-level\",\"1488\":\"122#apscheduler-config\",\"1489\":\"123\",\"1490\":\"124\",\"1491\":\"124#code-of-conduct\",\"1492\":\"124#参与开发\",\"1493\":\"124#鸣谢\",\"1494\":\"125\",\"1495\":\"125#组织结构\",\"1496\":\"125#使用-nb-cli-创建项目\",\"1497\":\"125#组成部分\",\"1498\":\"125#log\",\"1499\":\"125#config\",\"1500\":\"125#adapter\",\"1501\":\"125#与平台交互\",\"1502\":\"125#客户端通信方式\",\"1503\":\"125#服务端通信方式\",\"1504\":\"125#建立-bot-连接\",\"1505\":\"125#转换-event-事件\",\"1506\":\"125#调用平台-api\",\"1507\":\"125#bot\",\"1508\":\"125#event\",\"1509\":\"125#message\",\"1510\":\"125#适配器测试\",\"1511\":\"125#后续工作\",\"1512\":\"126\",\"1513\":\"126#nonebot-v1\",\"1514\":\"126#更新-nonebot-v1-文档中的-指南-部分\",\"1515\":\"126#nonebot-v1-api-文档自动生成\",\"1516\":\"126#nonebot-v2\",\"1517\":\"126#nonebot-v2-自动化测试框架-nonebug\",\"1518\":\"126#nonebot-v2-telegram-适配器\",\"1519\":\"126#nonebot-v2-飞书适配器\",\"1520\":\"126#onebot\",\"1521\":\"126#设计-onebot-v12-接口标准\",\"1522\":\"126#实现-rust-版-libonebot\",\"1523\":\"126#实现自选语言版-libonebot\",\"1524\":\"127\",\"1525\":\"127#nonebot2-命令行-cli-交互体验升级\",\"1526\":\"127#nonebot2-命令行即时交互通信设计与实现\",\"1527\":\"127#nonebot2-用户上手与深入教程设计\",\"1528\":\"128\",\"1529\":\"128#nonebot-项目管理图形化面板\",\"1530\":\"128#nonebot-discord-适配器\",\"1531\":\"128#nonebot-数据库支持插件\",\"1532\":\"129\",\"1533\":\"129#nonepress-官网组件库更新与优化\",\"1534\":\"129#noneflow-社区自动化工作流管理优化\",\"1535\":\"129#noneblockly-低代码框架开发\",\"1536\":\"130\",\"1537\":\"130#安装依赖\",\"1538\":\"130#创建配置文件\",\"1539\":\"130#创建入口文件\",\"1540\":\"130#运行机器人\",\"1541\":\"131\",\"1542\":\"131#插件结构\",\"1543\":\"131#单文件插件\",\"1544\":\"131#包插件\",\"1545\":\"131#创建插件\",\"1546\":\"131#加载插件\",\"1547\":\"131#load-plugin\",\"1548\":\"131#load-plugins\",\"1549\":\"131#load-all-plugins\",\"1550\":\"131#load-from-json\",\"1551\":\"131#load-from-toml\",\"1552\":\"131#load-builtin-plugin\",\"1553\":\"131#load-builtin-plugins\",\"1554\":\"131#其他加载方式\",\"1555\":\"132\",\"1556\":\"133\",\"1557\":\"133#事件响应器辅助函数\",\"1558\":\"133#创建事件响应器\",\"1559\":\"133#为事件响应器添加参数\",\"1560\":\"134\",\"1561\":\"134#认识消息类型\",\"1562\":\"134#消息序列-message\",\"1563\":\"134#消息段-messagesegment\",\"1564\":\"134#使用消息序列\",\"1565\":\"134#构造消息序列\",\"1566\":\"134#直接构造\",\"1567\":\"134#运算构造\",\"1568\":\"134#从字典数组构造\",\"1569\":\"134#获取消息纯文本\",\"1570\":\"134#遍历\",\"1571\":\"134#比较\",\"1572\":\"134#检查消息段\",\"1573\":\"134#过滤、索引与切片\",\"1574\":\"134#拼接消息\",\"1575\":\"134#使用消息模板\",\"1576\":\"135\",\"1577\":\"135#Bot\",\"1578\":\"135#Bot-adapter\",\"1579\":\"135#Bot-self-id\",\"1580\":\"135#Bot-type\",\"1581\":\"135#Bot-config\",\"1582\":\"135#Bot-call-api\",\"1583\":\"135#Bot-send\",\"1584\":\"135#Bot-on-calling-api\",\"1585\":\"135#Bot-on-called-api\",\"1586\":\"135#Event\",\"1587\":\"135#Event-get-type\",\"1588\":\"135#Event-get-event-name\",\"1589\":\"135#Event-get-event-description\",\"1590\":\"135#Event-get-log-string\",\"1591\":\"135#Event-get-user-id\",\"1592\":\"135#Event-get-session-id\",\"1593\":\"135#Event-get-message\",\"1594\":\"135#Event-get-plaintext\",\"1595\":\"135#Event-is-tome\",\"1596\":\"135#Adapter\",\"1597\":\"135#Adapter-driver\",\"1598\":\"135#Adapter-bots\",\"1599\":\"135#Adapter-get-name\",\"1600\":\"135#Adapter-config\",\"1601\":\"135#Adapter-bot-connect\",\"1602\":\"135#Adapter-bot-disconnect\",\"1603\":\"135#Adapter-setup-http-server\",\"1604\":\"135#Adapter-setup-websocket-server\",\"1605\":\"135#Adapter-request\",\"1606\":\"135#Adapter-websocket\",\"1607\":\"135#Adapter-on-ready\",\"1608\":\"135#Message\",\"1609\":\"135#Message-template\",\"1610\":\"135#Message-get-segment-class\",\"1611\":\"135#Message--construct\",\"1612\":\"135#Message---getitem--\",\"1613\":\"135#Message---contains--\",\"1614\":\"135#Message-has\",\"1615\":\"135#Message-index\",\"1616\":\"135#Message-get\",\"1617\":\"135#Message-count\",\"1618\":\"135#Message-only\",\"1619\":\"135#Message-append\",\"1620\":\"135#Message-extend\",\"1621\":\"135#Message-join\",\"1622\":\"135#Message-copy\",\"1623\":\"135#Message-include\",\"1624\":\"135#Message-exclude\",\"1625\":\"135#Message-extract-plain-text\",\"1626\":\"135#MessageSegment\",\"1627\":\"135#MessageSegment-type\",\"1628\":\"135#MessageSegment-data\",\"1629\":\"135#MessageSegment-get-message-class\",\"1630\":\"135#MessageSegment---str--\",\"1631\":\"135#MessageSegment---add--\",\"1632\":\"135#MessageSegment-get\",\"1633\":\"135#MessageSegment-keys\",\"1634\":\"135#MessageSegment-values\",\"1635\":\"135#MessageSegment-items\",\"1636\":\"135#MessageSegment-join\",\"1637\":\"135#MessageSegment-copy\",\"1638\":\"135#MessageSegment-is-text\",\"1639\":\"135#MessageTemplate\",\"1640\":\"135#MessageTemplate-add-format-spec\",\"1641\":\"135#MessageTemplate-format\",\"1642\":\"135#MessageTemplate-format-map\",\"1643\":\"135#MessageTemplate-vformat\",\"1644\":\"135#MessageTemplate-get-field\",\"1645\":\"135#MessageTemplate-format-field\",\"1646\":\"136\",\"1647\":\"136#Param\",\"1648\":\"136#Dependent\",\"1649\":\"136#Dependent-parse-params\",\"1650\":\"136#Dependent-parse-parameterless\",\"1651\":\"136#Dependent-parse\",\"1652\":\"136#Dependent-check\",\"1653\":\"136#Dependent-solve\",\"1654\":\"137\",\"1655\":\"137#get-typed-signature\",\"1656\":\"137#get-typed-annotation\",\"1657\":\"137#check-field-type\",\"1658\":\"138\",\"1659\":\"138#Session\",\"1660\":\"138#Session-request\",\"1661\":\"138#Session-setup\",\"1662\":\"138#Session-close\",\"1663\":\"138#Mixin\",\"1664\":\"138#Mixin-request\",\"1665\":\"138#Mixin-websocket\",\"1666\":\"138#Mixin-get-session\",\"1667\":\"138#WebSocket\",\"1668\":\"138#WebSocket-accept\",\"1669\":\"138#WebSocket-close\",\"1670\":\"138#WebSocket-receive\",\"1671\":\"138#WebSocket-receive-text\",\"1672\":\"138#WebSocket-receive-bytes\",\"1673\":\"138#WebSocket-send-text\",\"1674\":\"138#WebSocket-send-bytes\",\"1675\":\"138#Driver\",\"1676\":\"139\",\"1677\":\"139#Config\",\"1678\":\"139#Config-fastapi-openapi-url\",\"1679\":\"139#Config-fastapi-docs-url\",\"1680\":\"139#Config-fastapi-redoc-url\",\"1681\":\"139#Config-fastapi-include-adapter-schema\",\"1682\":\"139#Config-fastapi-reload\",\"1683\":\"139#Config-fastapi-reload-dirs\",\"1684\":\"139#Config-fastapi-reload-delay\",\"1685\":\"139#Config-fastapi-reload-includes\",\"1686\":\"139#Config-fastapi-reload-excludes\",\"1687\":\"139#Config-fastapi-extra\",\"1688\":\"139#Driver\",\"1689\":\"139#Driver-type\",\"1690\":\"139#Driver-server-app\",\"1691\":\"139#Driver-asgi\",\"1692\":\"139#Driver-logger\",\"1693\":\"139#Driver-setup-http-server\",\"1694\":\"139#Driver-setup-websocket-server\",\"1695\":\"139#Driver-run\",\"1696\":\"139#FastAPIWebSocket\",\"1697\":\"139#FastAPIWebSocket-accept\",\"1698\":\"139#FastAPIWebSocket-close\",\"1699\":\"139#FastAPIWebSocket-receive\",\"1700\":\"139#FastAPIWebSocket-receive-text\",\"1701\":\"139#FastAPIWebSocket-receive-bytes\",\"1702\":\"139#FastAPIWebSocket-send-text\",\"1703\":\"139#FastAPIWebSocket-send-bytes\",\"1704\":\"140\",\"1705\":\"140#Session\",\"1706\":\"140#Session-request\",\"1707\":\"140#Session-setup\",\"1708\":\"140#Session-close\",\"1709\":\"140#Mixin\",\"1710\":\"140#Mixin-request\",\"1711\":\"140#Mixin-get-session\",\"1712\":\"140#Driver\",\"1713\":\"141\",\"1714\":\"141#Mixin\",\"1715\":\"141#Mixin-type\",\"1716\":\"141#Driver\",\"1717\":\"141#Driver-env\",\"1718\":\"141#Driver-config\",\"1719\":\"141#Driver-bots\",\"1720\":\"141#Driver-register-adapter\",\"1721\":\"141#Driver-type\",\"1722\":\"141#Driver-logger\",\"1723\":\"141#Driver-run\",\"1724\":\"141#Driver-on-startup\",\"1725\":\"141#Driver-on-shutdown\",\"1726\":\"141#Driver-on-bot-connect\",\"1727\":\"141#Driver-on-bot-disconnect\",\"1728\":\"141#Cookies\",\"1729\":\"141#Cookies-set\",\"1730\":\"141#Cookies-get\",\"1731\":\"141#Cookies-delete\",\"1732\":\"141#Cookies-clear\",\"1733\":\"141#Cookies-update\",\"1734\":\"141#Cookies-as-header\",\"1735\":\"141#Request\",\"1736\":\"141#Response\",\"1737\":\"141#ASGIMixin\",\"1738\":\"141#ASGIMixin-server-app\",\"1739\":\"141#ASGIMixin-asgi\",\"1740\":\"141#ASGIMixin-setup-http-server\",\"1741\":\"141#ASGIMixin-setup-websocket-server\",\"1742\":\"141#WebSocket\",\"1743\":\"141#WebSocket-closed\",\"1744\":\"141#WebSocket-accept\",\"1745\":\"141#WebSocket-close\",\"1746\":\"141#WebSocket-receive\",\"1747\":\"141#WebSocket-receive-text\",\"1748\":\"141#WebSocket-receive-bytes\",\"1749\":\"141#WebSocket-send\",\"1750\":\"141#WebSocket-send-text\",\"1751\":\"141#WebSocket-send-bytes\",\"1752\":\"141#HTTPVersion\",\"1753\":\"141#ForwardMixin\",\"1754\":\"141#ReverseMixin\",\"1755\":\"141#ForwardDriver\",\"1756\":\"141#ReverseDriver\",\"1757\":\"141#combine-driver\",\"1758\":\"141#HTTPClientMixin\",\"1759\":\"141#HTTPClientMixin-request\",\"1760\":\"141#HTTPClientMixin-get-session\",\"1761\":\"141#HTTPServerSetup\",\"1762\":\"141#WebSocketClientMixin\",\"1763\":\"141#WebSocketClientMixin-websocket\",\"1764\":\"141#WebSocketServerSetup\",\"1765\":\"142\",\"1766\":\"142#Driver\",\"1767\":\"142#Driver-type\",\"1768\":\"142#Driver-logger\",\"1769\":\"142#Driver-run\",\"1770\":\"142#Driver-exit\",\"1771\":\"143\",\"1772\":\"143#Config\",\"1773\":\"143#Config-quart-reload\",\"1774\":\"143#Config-quart-reload-dirs\",\"1775\":\"143#Config-quart-reload-delay\",\"1776\":\"143#Config-quart-reload-includes\",\"1777\":\"143#Config-quart-reload-excludes\",\"1778\":\"143#Config-quart-extra\",\"1779\":\"143#Driver\",\"1780\":\"143#Driver-type\",\"1781\":\"143#Driver-server-app\",\"1782\":\"143#Driver-asgi\",\"1783\":\"143#Driver-logger\",\"1784\":\"143#Driver-setup-http-server\",\"1785\":\"143#Driver-setup-websocket-server\",\"1786\":\"143#Driver-run\",\"1787\":\"143#WebSocket\",\"1788\":\"143#WebSocket-accept\",\"1789\":\"143#WebSocket-close\",\"1790\":\"143#WebSocket-receive\",\"1791\":\"143#WebSocket-receive-text\",\"1792\":\"143#WebSocket-receive-bytes\",\"1793\":\"143#WebSocket-send-text\",\"1794\":\"143#WebSocket-send-bytes\",\"1795\":\"144\",\"1796\":\"144#catch-closed\",\"1797\":\"144#Mixin\",\"1798\":\"144#Mixin-websocket\",\"1799\":\"144#WebSocket\",\"1800\":\"144#WebSocket-accept\",\"1801\":\"144#WebSocket-close\",\"1802\":\"144#WebSocket-receive\",\"1803\":\"144#WebSocket-receive-text\",\"1804\":\"144#WebSocket-receive-bytes\",\"1805\":\"144#WebSocket-send-text\",\"1806\":\"144#WebSocket-send-bytes\",\"1807\":\"144#Driver\",\"1808\":\"145\",\"1809\":\"145#快捷导入\",\"1810\":\"145#get-plugin\",\"1811\":\"145#get-plugin-by-module-name\",\"1812\":\"145#get-loaded-plugins\",\"1813\":\"145#get-available-plugin-names\",\"1814\":\"145#get-plugin-config\",\"1815\":\"146\",\"1816\":\"146#load-plugin\",\"1817\":\"146#load-plugins\",\"1818\":\"146#load-all-plugins\",\"1819\":\"146#load-from-json\",\"1820\":\"146#load-from-toml\",\"1821\":\"146#load-builtin-plugin\",\"1822\":\"146#load-builtin-plugins\",\"1823\":\"146#require\",\"1824\":\"146#inherit-supported-adapters\",\"1825\":\"147\",\"1826\":\"147#PluginManager\",\"1827\":\"147#PluginManager-third-party-plugins\",\"1828\":\"147#PluginManager-searched-plugins\",\"1829\":\"147#PluginManager-available-plugins\",\"1830\":\"147#PluginManager-controlled-modules\",\"1831\":\"147#PluginManager-load-plugin\",\"1832\":\"147#PluginManager-load-all-plugins\",\"1833\":\"147#PluginFinder\",\"1834\":\"147#PluginFinder-find-spec\",\"1835\":\"147#PluginLoader\",\"1836\":\"147#PluginLoader-create-module\",\"1837\":\"147#PluginLoader-exec-module\",\"1838\":\"148\",\"1839\":\"148#PluginMetadata\",\"1840\":\"148#PluginMetadata-name\",\"1841\":\"148#PluginMetadata-description\",\"1842\":\"148#PluginMetadata-usage\",\"1843\":\"148#PluginMetadata-type\",\"1844\":\"148#PluginMetadata-homepage\",\"1845\":\"148#PluginMetadata-config\",\"1846\":\"148#PluginMetadata-supported-adapters\",\"1847\":\"148#PluginMetadata-extra\",\"1848\":\"148#PluginMetadata-get-supported-adapters\",\"1849\":\"148#Plugin\",\"1850\":\"148#Plugin-name\",\"1851\":\"148#Plugin-module\",\"1852\":\"148#Plugin-module-name\",\"1853\":\"148#Plugin-manager\",\"1854\":\"148#Plugin-matcher\",\"1855\":\"148#Plugin-parent-plugin\",\"1856\":\"148#Plugin-sub-plugins\",\"1857\":\"148#Plugin-id-\",\"1858\":\"149\",\"1859\":\"149#store-matcher\",\"1860\":\"149#get-matcher-plugin\",\"1861\":\"149#get-matcher-module\",\"1862\":\"149#get-matcher-source\",\"1863\":\"149#on\",\"1864\":\"149#on-metaevent\",\"1865\":\"149#on-message\",\"1866\":\"149#on-notice\",\"1867\":\"149#on-request\",\"1868\":\"149#on-startswith\",\"1869\":\"149#on-endswith\",\"1870\":\"149#on-fullmatch\",\"1871\":\"149#on-keyword\",\"1872\":\"149#on-command\",\"1873\":\"149#on-shell-command\",\"1874\":\"149#on-regex\",\"1875\":\"149#on-type\",\"1876\":\"149#CommandGroup\",\"1877\":\"149#CommandGroup-command\",\"1878\":\"149#CommandGroup-shell-command\",\"1879\":\"149#MatcherGroup\",\"1880\":\"149#MatcherGroup-on\",\"1881\":\"149#MatcherGroup-on-metaevent\",\"1882\":\"149#MatcherGroup-on-message\",\"1883\":\"149#MatcherGroup-on-notice\",\"1884\":\"149#MatcherGroup-on-request\",\"1885\":\"149#MatcherGroup-on-startswith\",\"1886\":\"149#MatcherGroup-on-endswith\",\"1887\":\"149#MatcherGroup-on-fullmatch\",\"1888\":\"149#MatcherGroup-on-keyword\",\"1889\":\"149#MatcherGroup-on-command\",\"1890\":\"149#MatcherGroup-on-shell-command\",\"1891\":\"149#MatcherGroup-on-regex\",\"1892\":\"149#MatcherGroup-on-type\",\"1893\":\"150\",\"1894\":\"150#命令头\",\"1895\":\"150#参数声明-args\",\"1896\":\"150#key\",\"1897\":\"150#var\",\"1898\":\"150#multivar-与-keywordvar\",\"1899\":\"150#default\",\"1900\":\"150#选项与子命令-option-subcommand\",\"1901\":\"150#action\",\"1902\":\"150#解析结果-arparma\",\"1903\":\"150#元数据-commandmeta\",\"1904\":\"150#命名空间配置\",\"1905\":\"150#新建命名空间并替换\",\"1906\":\"150#修改默认的命名空间\",\"1907\":\"150#快捷指令\",\"1908\":\"150#args的使用\",\"1909\":\"150#command的使用\",\"1910\":\"150#紧凑命令\",\"1911\":\"150#模糊匹配\",\"1912\":\"150#半自动补全\",\"1913\":\"150#duplication\",\"1914\":\"150#上下文插值\",\"1915\":\"151\",\"1916\":\"151#alconna-auto-send-output\",\"1917\":\"151#alconna-use-command-start\",\"1918\":\"151#alconna-auto-completion\",\"1919\":\"151#alconna-use-origin\",\"1920\":\"151#alconna-use-command-sep\",\"1921\":\"151#alconna-global-extensions\",\"1922\":\"151#alconna-context-style\",\"1923\":\"151#alconna-enable-saa-patch\",\"1924\":\"151#alconna-apply-filehost\",\"1925\":\"151#alconna-apply-fetch-targets\",\"1926\":\"152\",\"1927\":\"152#示例\",\"1928\":\"152#创建新机器人\",\"1929\":\"152#卸载插件\",\"1930\":\"152#cli\",\"1931\":\"152#heads\",\"1932\":\"152#upgrade\",\"1933\":\"152#downgrade\",\"1934\":\"152#check\",\"1935\":\"152#配置\",\"1936\":\"152#sqlalchemy-database-url\",\"1937\":\"152#sqlalchemy-bind\",\"1938\":\"152#sqlalchemy-engine-options\",\"1939\":\"152#sqlalchemy-echo\",\"1940\":\"153\",\"1941\":\"153#测试-http-服务端\",\"1942\":\"153#测试-websocket-服务端\",\"1943\":\"153#测试-http-客户端\",\"1944\":\"153#测试-websocket-客户端\",\"1945\":\"154\",\"1946\":\"154#Adapter\",\"1947\":\"154#Adapter-driver\",\"1948\":\"154#Adapter-bots\",\"1949\":\"154#Adapter-get-name\",\"1950\":\"154#Adapter-config\",\"1951\":\"154#Adapter-bot-connect\",\"1952\":\"154#Adapter-bot-disconnect\",\"1953\":\"154#Adapter-setup-http-server\",\"1954\":\"154#Adapter-setup-websocket-server\",\"1955\":\"154#Adapter-request\",\"1956\":\"154#Adapter-websocket\",\"1957\":\"154#Adapter-on-ready\",\"1958\":\"154#Bot\",\"1959\":\"154#Bot-adapter\",\"1960\":\"154#Bot-self-id\",\"1961\":\"154#Bot-type\",\"1962\":\"154#Bot-config\",\"1963\":\"154#Bot-call-api\",\"1964\":\"154#Bot-send\",\"1965\":\"154#Bot-on-calling-api\",\"1966\":\"154#Bot-on-called-api\",\"1967\":\"154#Event\",\"1968\":\"154#Event-get-type\",\"1969\":\"154#Event-get-event-name\",\"1970\":\"154#Event-get-event-description\",\"1971\":\"154#Event-get-log-string\",\"1972\":\"154#Event-get-user-id\",\"1973\":\"154#Event-get-session-id\",\"1974\":\"154#Event-get-message\",\"1975\":\"154#Event-get-plaintext\",\"1976\":\"154#Event-is-tome\",\"1977\":\"154#Message\",\"1978\":\"154#Message-template\",\"1979\":\"154#Message-get-segment-class\",\"1980\":\"154#Message--construct\",\"1981\":\"154#Message---getitem--\",\"1982\":\"154#Message---contains--\",\"1983\":\"154#Message-has\",\"1984\":\"154#Message-index\",\"1985\":\"154#Message-get\",\"1986\":\"154#Message-count\",\"1987\":\"154#Message-only\",\"1988\":\"154#Message-append\",\"1989\":\"154#Message-extend\",\"1990\":\"154#Message-join\",\"1991\":\"154#Message-copy\",\"1992\":\"154#Message-include\",\"1993\":\"154#Message-exclude\",\"1994\":\"154#Message-extract-plain-text\",\"1995\":\"154#MessageSegment\",\"1996\":\"154#MessageSegment-type\",\"1997\":\"154#MessageSegment-data\",\"1998\":\"154#MessageSegment-get-message-class\",\"1999\":\"154#MessageSegment---str--\",\"2000\":\"154#MessageSegment---add--\",\"2001\":\"154#MessageSegment-get\",\"2002\":\"154#MessageSegment-keys\",\"2003\":\"154#MessageSegment-values\",\"2004\":\"154#MessageSegment-items\",\"2005\":\"154#MessageSegment-join\",\"2006\":\"154#MessageSegment-copy\",\"2007\":\"154#MessageSegment-is-text\",\"2008\":\"154#MessageTemplate\",\"2009\":\"154#MessageTemplate-add-format-spec\",\"2010\":\"154#MessageTemplate-format\",\"2011\":\"154#MessageTemplate-format-map\",\"2012\":\"154#MessageTemplate-vformat\",\"2013\":\"154#MessageTemplate-get-field\",\"2014\":\"154#MessageTemplate-format-field\",\"2015\":\"155\",\"2016\":\"155#Param\",\"2017\":\"155#Dependent\",\"2018\":\"155#Dependent-parse-params\",\"2019\":\"155#Dependent-parse-parameterless\",\"2020\":\"155#Dependent-parse\",\"2021\":\"155#Dependent-check\",\"2022\":\"155#Dependent-solve\",\"2023\":\"156\",\"2024\":\"156#get-typed-signature\",\"2025\":\"156#get-typed-annotation\",\"2026\":\"156#check-field-type\",\"2027\":\"157\",\"2028\":\"157#Session\",\"2029\":\"157#Session-request\",\"2030\":\"157#Session-setup\",\"2031\":\"157#Session-close\",\"2032\":\"157#Mixin\",\"2033\":\"157#Mixin-request\",\"2034\":\"157#Mixin-websocket\",\"2035\":\"157#Mixin-get-session\",\"2036\":\"157#WebSocket\",\"2037\":\"157#WebSocket-accept\",\"2038\":\"157#WebSocket-close\",\"2039\":\"157#WebSocket-receive\",\"2040\":\"157#WebSocket-receive-text\",\"2041\":\"157#WebSocket-receive-bytes\",\"2042\":\"157#WebSocket-send-text\",\"2043\":\"157#WebSocket-send-bytes\",\"2044\":\"157#Driver\",\"2045\":\"158\",\"2046\":\"158#Config\",\"2047\":\"158#Config-fastapi-openapi-url\",\"2048\":\"158#Config-fastapi-docs-url\",\"2049\":\"158#Config-fastapi-redoc-url\",\"2050\":\"158#Config-fastapi-include-adapter-schema\",\"2051\":\"158#Config-fastapi-reload\",\"2052\":\"158#Config-fastapi-reload-dirs\",\"2053\":\"158#Config-fastapi-reload-delay\",\"2054\":\"158#Config-fastapi-reload-includes\",\"2055\":\"158#Config-fastapi-reload-excludes\",\"2056\":\"158#Config-fastapi-extra\",\"2057\":\"158#Driver\",\"2058\":\"158#Driver-type\",\"2059\":\"158#Driver-server-app\",\"2060\":\"158#Driver-asgi\",\"2061\":\"158#Driver-logger\",\"2062\":\"158#Driver-setup-http-server\",\"2063\":\"158#Driver-setup-websocket-server\",\"2064\":\"158#Driver-run\",\"2065\":\"158#FastAPIWebSocket\",\"2066\":\"158#FastAPIWebSocket-accept\",\"2067\":\"158#FastAPIWebSocket-close\",\"2068\":\"158#FastAPIWebSocket-receive\",\"2069\":\"158#FastAPIWebSocket-receive-text\",\"2070\":\"158#FastAPIWebSocket-receive-bytes\",\"2071\":\"158#FastAPIWebSocket-send-text\",\"2072\":\"158#FastAPIWebSocket-send-bytes\",\"2073\":\"159\",\"2074\":\"159#Session\",\"2075\":\"159#Session-request\",\"2076\":\"159#Session-setup\",\"2077\":\"159#Session-close\",\"2078\":\"159#Mixin\",\"2079\":\"159#Mixin-request\",\"2080\":\"159#Mixin-get-session\",\"2081\":\"159#Driver\",\"2082\":\"160\",\"2083\":\"160#ASGIMixin\",\"2084\":\"160#ASGIMixin-server-app\",\"2085\":\"160#ASGIMixin-asgi\",\"2086\":\"160#ASGIMixin-setup-http-server\",\"2087\":\"160#ASGIMixin-setup-websocket-server\",\"2088\":\"160#Cookies\",\"2089\":\"160#Cookies-set\",\"2090\":\"160#Cookies-get\",\"2091\":\"160#Cookies-delete\",\"2092\":\"160#Cookies-clear\",\"2093\":\"160#Cookies-update\",\"2094\":\"160#Cookies-as-header\",\"2095\":\"160#Driver\",\"2096\":\"160#Driver-env\",\"2097\":\"160#Driver-config\",\"2098\":\"160#Driver-bots\",\"2099\":\"160#Driver-register-adapter\",\"2100\":\"160#Driver-type\",\"2101\":\"160#Driver-logger\",\"2102\":\"160#Driver-run\",\"2103\":\"160#Driver-on-startup\",\"2104\":\"160#Driver-on-shutdown\",\"2105\":\"160#Driver-on-bot-connect\",\"2106\":\"160#Driver-on-bot-disconnect\",\"2107\":\"160#ForwardDriver\",\"2108\":\"160#ForwardMixin\",\"2109\":\"160#HTTPClientMixin\",\"2110\":\"160#HTTPClientMixin-request\",\"2111\":\"160#HTTPClientMixin-get-session\",\"2112\":\"160#HTTPServerSetup\",\"2113\":\"160#HTTPVersion\",\"2114\":\"160#Mixin\",\"2115\":\"160#Mixin-type\",\"2116\":\"160#Request\",\"2117\":\"160#Response\",\"2118\":\"160#ReverseDriver\",\"2119\":\"160#ReverseMixin\",\"2120\":\"160#WebSocket\",\"2121\":\"160#WebSocket-closed\",\"2122\":\"160#WebSocket-accept\",\"2123\":\"160#WebSocket-close\",\"2124\":\"160#WebSocket-receive\",\"2125\":\"160#WebSocket-receive-text\",\"2126\":\"160#WebSocket-receive-bytes\",\"2127\":\"160#WebSocket-send\",\"2128\":\"160#WebSocket-send-text\",\"2129\":\"160#WebSocket-send-bytes\",\"2130\":\"160#WebSocketClientMixin\",\"2131\":\"160#WebSocketClientMixin-websocket\",\"2132\":\"160#WebSocketServerSetup\",\"2133\":\"160#combine-driver\",\"2134\":\"161\",\"2135\":\"161#Driver\",\"2136\":\"161#Driver-type\",\"2137\":\"161#Driver-logger\",\"2138\":\"161#Driver-run\",\"2139\":\"161#Driver-exit\",\"2140\":\"162\",\"2141\":\"162#Config\",\"2142\":\"162#Config-quart-reload\",\"2143\":\"162#Config-quart-reload-dirs\",\"2144\":\"162#Config-quart-reload-delay\",\"2145\":\"162#Config-quart-reload-includes\",\"2146\":\"162#Config-quart-reload-excludes\",\"2147\":\"162#Config-quart-extra\",\"2148\":\"162#Driver\",\"2149\":\"162#Driver-type\",\"2150\":\"162#Driver-server-app\",\"2151\":\"162#Driver-asgi\",\"2152\":\"162#Driver-logger\",\"2153\":\"162#Driver-setup-http-server\",\"2154\":\"162#Driver-setup-websocket-server\",\"2155\":\"162#Driver-run\",\"2156\":\"162#WebSocket\",\"2157\":\"162#WebSocket-accept\",\"2158\":\"162#WebSocket-close\",\"2159\":\"162#WebSocket-receive\",\"2160\":\"162#WebSocket-receive-text\",\"2161\":\"162#WebSocket-receive-bytes\",\"2162\":\"162#WebSocket-send-text\",\"2163\":\"162#WebSocket-send-bytes\",\"2164\":\"163\",\"2165\":\"163#catch-closed\",\"2166\":\"163#Mixin\",\"2167\":\"163#Mixin-websocket\",\"2168\":\"163#WebSocket\",\"2169\":\"163#WebSocket-accept\",\"2170\":\"163#WebSocket-close\",\"2171\":\"163#WebSocket-receive\",\"2172\":\"163#WebSocket-receive-text\",\"2173\":\"163#WebSocket-receive-bytes\",\"2174\":\"163#WebSocket-send-text\",\"2175\":\"163#WebSocket-send-bytes\",\"2176\":\"163#Driver\",\"2177\":\"164\",\"2178\":\"164#快捷导入\",\"2179\":\"164#get-plugin\",\"2180\":\"164#get-plugin-by-module-name\",\"2181\":\"164#get-loaded-plugins\",\"2182\":\"164#get-available-plugin-names\",\"2183\":\"164#get-plugin-config\",\"2184\":\"165\",\"2185\":\"165#load-plugin\",\"2186\":\"165#load-plugins\",\"2187\":\"165#load-all-plugins\",\"2188\":\"165#load-from-json\",\"2189\":\"165#load-from-toml\",\"2190\":\"165#load-builtin-plugin\",\"2191\":\"165#load-builtin-plugins\",\"2192\":\"165#require\",\"2193\":\"165#inherit-supported-adapters\",\"2194\":\"166\",\"2195\":\"166#PluginManager\",\"2196\":\"166#PluginManager-third-party-plugins\",\"2197\":\"166#PluginManager-searched-plugins\",\"2198\":\"166#PluginManager-available-plugins\",\"2199\":\"166#PluginManager-controlled-modules\",\"2200\":\"166#PluginManager-load-plugin\",\"2201\":\"166#PluginManager-load-all-plugins\",\"2202\":\"166#PluginFinder\",\"2203\":\"166#PluginFinder-find-spec\",\"2204\":\"166#PluginLoader\",\"2205\":\"166#PluginLoader-create-module\",\"2206\":\"166#PluginLoader-exec-module\",\"2207\":\"167\",\"2208\":\"167#PluginMetadata\",\"2209\":\"167#PluginMetadata-name\",\"2210\":\"167#PluginMetadata-description\",\"2211\":\"167#PluginMetadata-usage\",\"2212\":\"167#PluginMetadata-type\",\"2213\":\"167#PluginMetadata-homepage\",\"2214\":\"167#PluginMetadata-config\",\"2215\":\"167#PluginMetadata-supported-adapters\",\"2216\":\"167#PluginMetadata-extra\",\"2217\":\"167#PluginMetadata-get-supported-adapters\",\"2218\":\"167#Plugin\",\"2219\":\"167#Plugin-name\",\"2220\":\"167#Plugin-module\",\"2221\":\"167#Plugin-module-name\",\"2222\":\"167#Plugin-manager\",\"2223\":\"167#Plugin-matcher\",\"2224\":\"167#Plugin-parent-plugin\",\"2225\":\"167#Plugin-sub-plugins\",\"2226\":\"167#Plugin-id-\",\"2227\":\"168\",\"2228\":\"168#store-matcher\",\"2229\":\"168#get-matcher-plugin\",\"2230\":\"168#get-matcher-module\",\"2231\":\"168#get-matcher-source\",\"2232\":\"168#on\",\"2233\":\"168#on-metaevent\",\"2234\":\"168#on-message\",\"2235\":\"168#on-notice\",\"2236\":\"168#on-request\",\"2237\":\"168#on-startswith\",\"2238\":\"168#on-endswith\",\"2239\":\"168#on-fullmatch\",\"2240\":\"168#on-keyword\",\"2241\":\"168#on-command\",\"2242\":\"168#on-shell-command\",\"2243\":\"168#on-regex\",\"2244\":\"168#on-type\",\"2245\":\"168#CommandGroup\",\"2246\":\"168#CommandGroup-command\",\"2247\":\"168#CommandGroup-shell-command\",\"2248\":\"168#MatcherGroup\",\"2249\":\"168#MatcherGroup-on\",\"2250\":\"168#MatcherGroup-on-metaevent\",\"2251\":\"168#MatcherGroup-on-message\",\"2252\":\"168#MatcherGroup-on-notice\",\"2253\":\"168#MatcherGroup-on-request\",\"2254\":\"168#MatcherGroup-on-startswith\",\"2255\":\"168#MatcherGroup-on-endswith\",\"2256\":\"168#MatcherGroup-on-fullmatch\",\"2257\":\"168#MatcherGroup-on-keyword\",\"2258\":\"168#MatcherGroup-on-command\",\"2259\":\"168#MatcherGroup-on-shell-command\",\"2260\":\"168#MatcherGroup-on-regex\",\"2261\":\"168#MatcherGroup-on-type\",\"2262\":\"169\",\"2263\":\"169#命令头\",\"2264\":\"169#参数声明-args\",\"2265\":\"169#key\",\"2266\":\"169#var\",\"2267\":\"169#multivar-与-keywordvar\",\"2268\":\"169#default\",\"2269\":\"169#选项与子命令-option-subcommand\",\"2270\":\"169#action\",\"2271\":\"169#解析结果-arparma\",\"2272\":\"169#元数据-commandmeta\",\"2273\":\"169#命名空间配置\",\"2274\":\"169#新建命名空间并替换\",\"2275\":\"169#修改默认的命名空间\",\"2276\":\"169#快捷指令\",\"2277\":\"169#args的使用\",\"2278\":\"169#command的使用\",\"2279\":\"169#紧凑命令\",\"2280\":\"169#模糊匹配\",\"2281\":\"169#半自动补全\",\"2282\":\"169#duplication\",\"2283\":\"169#上下文插值\",\"2284\":\"170\",\"2285\":\"170#alconna-auto-send-output\",\"2286\":\"170#alconna-use-command-start\",\"2287\":\"170#alconna-auto-completion\",\"2288\":\"170#alconna-use-origin\",\"2289\":\"170#alconna-use-command-sep\",\"2290\":\"170#alconna-global-extensions\",\"2291\":\"170#alconna-context-style\",\"2292\":\"170#alconna-enable-saa-patch\",\"2293\":\"170#alconna-apply-filehost\",\"2294\":\"170#alconna-apply-fetch-targets\",\"2295\":\"171\",\"2296\":\"171#示例\",\"2297\":\"171#创建新机器人\",\"2298\":\"171#卸载插件\",\"2299\":\"171#cli\",\"2300\":\"171#heads\",\"2301\":\"171#upgrade\",\"2302\":\"171#downgrade\",\"2303\":\"171#check\",\"2304\":\"171#配置\",\"2305\":\"171#sqlalchemy-database-url\",\"2306\":\"171#sqlalchemy-bind\",\"2307\":\"171#sqlalchemy-engine-options\",\"2308\":\"171#sqlalchemy-echo\",\"2309\":\"172\",\"2310\":\"172#测试-http-服务端\",\"2311\":\"172#测试-websocket-服务端\",\"2312\":\"172#测试-http-客户端\",\"2313\":\"172#测试-websocket-客户端\",\"2314\":\"173\",\"2315\":\"173#Adapter\",\"2316\":\"173#Adapter-driver\",\"2317\":\"173#Adapter-bots\",\"2318\":\"173#Adapter-get-name\",\"2319\":\"173#Adapter-config\",\"2320\":\"173#Adapter-bot-connect\",\"2321\":\"173#Adapter-bot-disconnect\",\"2322\":\"173#Adapter-setup-http-server\",\"2323\":\"173#Adapter-setup-websocket-server\",\"2324\":\"173#Adapter-request\",\"2325\":\"173#Adapter-websocket\",\"2326\":\"173#Adapter-on-ready\",\"2327\":\"173#Bot\",\"2328\":\"173#Bot-adapter\",\"2329\":\"173#Bot-self-id\",\"2330\":\"173#Bot-type\",\"2331\":\"173#Bot-config\",\"2332\":\"173#Bot-call-api\",\"2333\":\"173#Bot-send\",\"2334\":\"173#Bot-on-calling-api\",\"2335\":\"173#Bot-on-called-api\",\"2336\":\"173#Event\",\"2337\":\"173#Event-get-type\",\"2338\":\"173#Event-get-event-name\",\"2339\":\"173#Event-get-event-description\",\"2340\":\"173#Event-get-log-string\",\"2341\":\"173#Event-get-user-id\",\"2342\":\"173#Event-get-session-id\",\"2343\":\"173#Event-get-message\",\"2344\":\"173#Event-get-plaintext\",\"2345\":\"173#Event-is-tome\",\"2346\":\"173#Message\",\"2347\":\"173#Message-template\",\"2348\":\"173#Message-get-segment-class\",\"2349\":\"173#Message--construct\",\"2350\":\"173#Message---getitem--\",\"2351\":\"173#Message---contains--\",\"2352\":\"173#Message-has\",\"2353\":\"173#Message-index\",\"2354\":\"173#Message-get\",\"2355\":\"173#Message-count\",\"2356\":\"173#Message-only\",\"2357\":\"173#Message-append\",\"2358\":\"173#Message-extend\",\"2359\":\"173#Message-join\",\"2360\":\"173#Message-copy\",\"2361\":\"173#Message-include\",\"2362\":\"173#Message-exclude\",\"2363\":\"173#Message-extract-plain-text\",\"2364\":\"173#MessageSegment\",\"2365\":\"173#MessageSegment-type\",\"2366\":\"173#MessageSegment-data\",\"2367\":\"173#MessageSegment-get-message-class\",\"2368\":\"173#MessageSegment---str--\",\"2369\":\"173#MessageSegment---add--\",\"2370\":\"173#MessageSegment-get\",\"2371\":\"173#MessageSegment-keys\",\"2372\":\"173#MessageSegment-values\",\"2373\":\"173#MessageSegment-items\",\"2374\":\"173#MessageSegment-join\",\"2375\":\"173#MessageSegment-copy\",\"2376\":\"173#MessageSegment-is-text\",\"2377\":\"173#MessageTemplate\",\"2378\":\"173#MessageTemplate-add-format-spec\",\"2379\":\"173#MessageTemplate-format\",\"2380\":\"173#MessageTemplate-format-map\",\"2381\":\"173#MessageTemplate-vformat\",\"2382\":\"173#MessageTemplate-get-field\",\"2383\":\"173#MessageTemplate-format-field\",\"2384\":\"174\",\"2385\":\"174#Param\",\"2386\":\"174#Dependent\",\"2387\":\"174#Dependent-parse-params\",\"2388\":\"174#Dependent-parse-parameterless\",\"2389\":\"174#Dependent-parse\",\"2390\":\"174#Dependent-check\",\"2391\":\"174#Dependent-solve\",\"2392\":\"175\",\"2393\":\"175#get-typed-signature\",\"2394\":\"175#get-typed-annotation\",\"2395\":\"175#check-field-type\",\"2396\":\"176\",\"2397\":\"176#Session\",\"2398\":\"176#Session-request\",\"2399\":\"176#Session-setup\",\"2400\":\"176#Session-close\",\"2401\":\"176#Mixin\",\"2402\":\"176#Mixin-request\",\"2403\":\"176#Mixin-websocket\",\"2404\":\"176#Mixin-get-session\",\"2405\":\"176#WebSocket\",\"2406\":\"176#WebSocket-accept\",\"2407\":\"176#WebSocket-close\",\"2408\":\"176#WebSocket-receive\",\"2409\":\"176#WebSocket-receive-text\",\"2410\":\"176#WebSocket-receive-bytes\",\"2411\":\"176#WebSocket-send-text\",\"2412\":\"176#WebSocket-send-bytes\",\"2413\":\"176#Driver\",\"2414\":\"177\",\"2415\":\"177#Config\",\"2416\":\"177#Config-fastapi-openapi-url\",\"2417\":\"177#Config-fastapi-docs-url\",\"2418\":\"177#Config-fastapi-redoc-url\",\"2419\":\"177#Config-fastapi-include-adapter-schema\",\"2420\":\"177#Config-fastapi-reload\",\"2421\":\"177#Config-fastapi-reload-dirs\",\"2422\":\"177#Config-fastapi-reload-delay\",\"2423\":\"177#Config-fastapi-reload-includes\",\"2424\":\"177#Config-fastapi-reload-excludes\",\"2425\":\"177#Config-fastapi-extra\",\"2426\":\"177#Driver\",\"2427\":\"177#Driver-type\",\"2428\":\"177#Driver-server-app\",\"2429\":\"177#Driver-asgi\",\"2430\":\"177#Driver-logger\",\"2431\":\"177#Driver-setup-http-server\",\"2432\":\"177#Driver-setup-websocket-server\",\"2433\":\"177#Driver-run\",\"2434\":\"177#FastAPIWebSocket\",\"2435\":\"177#FastAPIWebSocket-accept\",\"2436\":\"177#FastAPIWebSocket-close\",\"2437\":\"177#FastAPIWebSocket-receive\",\"2438\":\"177#FastAPIWebSocket-receive-text\",\"2439\":\"177#FastAPIWebSocket-receive-bytes\",\"2440\":\"177#FastAPIWebSocket-send-text\",\"2441\":\"177#FastAPIWebSocket-send-bytes\",\"2442\":\"178\",\"2443\":\"178#Session\",\"2444\":\"178#Session-request\",\"2445\":\"178#Session-setup\",\"2446\":\"178#Session-close\",\"2447\":\"178#Mixin\",\"2448\":\"178#Mixin-request\",\"2449\":\"178#Mixin-get-session\",\"2450\":\"178#Driver\",\"2451\":\"179\",\"2452\":\"179#ASGIMixin\",\"2453\":\"179#ASGIMixin-server-app\",\"2454\":\"179#ASGIMixin-asgi\",\"2455\":\"179#ASGIMixin-setup-http-server\",\"2456\":\"179#ASGIMixin-setup-websocket-server\",\"2457\":\"179#Cookies\",\"2458\":\"179#Cookies-set\",\"2459\":\"179#Cookies-get\",\"2460\":\"179#Cookies-delete\",\"2461\":\"179#Cookies-clear\",\"2462\":\"179#Cookies-update\",\"2463\":\"179#Cookies-as-header\",\"2464\":\"179#Driver\",\"2465\":\"179#Driver-env\",\"2466\":\"179#Driver-config\",\"2467\":\"179#Driver-bots\",\"2468\":\"179#Driver-register-adapter\",\"2469\":\"179#Driver-type\",\"2470\":\"179#Driver-logger\",\"2471\":\"179#Driver-run\",\"2472\":\"179#Driver-on-startup\",\"2473\":\"179#Driver-on-shutdown\",\"2474\":\"179#Driver-on-bot-connect\",\"2475\":\"179#Driver-on-bot-disconnect\",\"2476\":\"179#ForwardDriver\",\"2477\":\"179#ForwardMixin\",\"2478\":\"179#HTTPClientMixin\",\"2479\":\"179#HTTPClientMixin-request\",\"2480\":\"179#HTTPClientMixin-get-session\",\"2481\":\"179#HTTPServerSetup\",\"2482\":\"179#HTTPVersion\",\"2483\":\"179#Mixin\",\"2484\":\"179#Mixin-type\",\"2485\":\"179#Request\",\"2486\":\"179#Response\",\"2487\":\"179#ReverseDriver\",\"2488\":\"179#ReverseMixin\",\"2489\":\"179#WebSocket\",\"2490\":\"179#WebSocket-closed\",\"2491\":\"179#WebSocket-accept\",\"2492\":\"179#WebSocket-close\",\"2493\":\"179#WebSocket-receive\",\"2494\":\"179#WebSocket-receive-text\",\"2495\":\"179#WebSocket-receive-bytes\",\"2496\":\"179#WebSocket-send\",\"2497\":\"179#WebSocket-send-text\",\"2498\":\"179#WebSocket-send-bytes\",\"2499\":\"179#WebSocketClientMixin\",\"2500\":\"179#WebSocketClientMixin-websocket\",\"2501\":\"179#WebSocketServerSetup\",\"2502\":\"179#combine-driver\",\"2503\":\"180\",\"2504\":\"180#Driver\",\"2505\":\"180#Driver-type\",\"2506\":\"180#Driver-logger\",\"2507\":\"180#Driver-run\",\"2508\":\"180#Driver-exit\",\"2509\":\"181\",\"2510\":\"181#Config\",\"2511\":\"181#Config-quart-reload\",\"2512\":\"181#Config-quart-reload-dirs\",\"2513\":\"181#Config-quart-reload-delay\",\"2514\":\"181#Config-quart-reload-includes\",\"2515\":\"181#Config-quart-reload-excludes\",\"2516\":\"181#Config-quart-extra\",\"2517\":\"181#Driver\",\"2518\":\"181#Driver-type\",\"2519\":\"181#Driver-server-app\",\"2520\":\"181#Driver-asgi\",\"2521\":\"181#Driver-logger\",\"2522\":\"181#Driver-setup-http-server\",\"2523\":\"181#Driver-setup-websocket-server\",\"2524\":\"181#Driver-run\",\"2525\":\"181#WebSocket\",\"2526\":\"181#WebSocket-accept\",\"2527\":\"181#WebSocket-close\",\"2528\":\"181#WebSocket-receive\",\"2529\":\"181#WebSocket-receive-text\",\"2530\":\"181#WebSocket-receive-bytes\",\"2531\":\"181#WebSocket-send-text\",\"2532\":\"181#WebSocket-send-bytes\",\"2533\":\"182\",\"2534\":\"182#catch-closed\",\"2535\":\"182#Mixin\",\"2536\":\"182#Mixin-websocket\",\"2537\":\"182#WebSocket\",\"2538\":\"182#WebSocket-accept\",\"2539\":\"182#WebSocket-close\",\"2540\":\"182#WebSocket-receive\",\"2541\":\"182#WebSocket-receive-text\",\"2542\":\"182#WebSocket-receive-bytes\",\"2543\":\"182#WebSocket-send-text\",\"2544\":\"182#WebSocket-send-bytes\",\"2545\":\"182#Driver\",\"2546\":\"183\",\"2547\":\"183#快捷导入\",\"2548\":\"183#get-plugin\",\"2549\":\"183#get-plugin-by-module-name\",\"2550\":\"183#get-loaded-plugins\",\"2551\":\"183#get-available-plugin-names\",\"2552\":\"183#get-plugin-config\",\"2553\":\"184\",\"2554\":\"184#load-plugin\",\"2555\":\"184#load-plugins\",\"2556\":\"184#load-all-plugins\",\"2557\":\"184#load-from-json\",\"2558\":\"184#load-from-toml\",\"2559\":\"184#load-builtin-plugin\",\"2560\":\"184#load-builtin-plugins\",\"2561\":\"184#require\",\"2562\":\"184#inherit-supported-adapters\",\"2563\":\"185\",\"2564\":\"185#PluginManager\",\"2565\":\"185#PluginManager-third-party-plugins\",\"2566\":\"185#PluginManager-searched-plugins\",\"2567\":\"185#PluginManager-available-plugins\",\"2568\":\"185#PluginManager-controlled-modules\",\"2569\":\"185#PluginManager-load-plugin\",\"2570\":\"185#PluginManager-load-all-plugins\",\"2571\":\"185#PluginFinder\",\"2572\":\"185#PluginFinder-find-spec\",\"2573\":\"185#PluginLoader\",\"2574\":\"185#PluginLoader-create-module\",\"2575\":\"185#PluginLoader-exec-module\",\"2576\":\"186\",\"2577\":\"186#PluginMetadata\",\"2578\":\"186#PluginMetadata-name\",\"2579\":\"186#PluginMetadata-description\",\"2580\":\"186#PluginMetadata-usage\",\"2581\":\"186#PluginMetadata-type\",\"2582\":\"186#PluginMetadata-homepage\",\"2583\":\"186#PluginMetadata-config\",\"2584\":\"186#PluginMetadata-supported-adapters\",\"2585\":\"186#PluginMetadata-extra\",\"2586\":\"186#PluginMetadata-get-supported-adapters\",\"2587\":\"186#Plugin\",\"2588\":\"186#Plugin-name\",\"2589\":\"186#Plugin-module\",\"2590\":\"186#Plugin-module-name\",\"2591\":\"186#Plugin-manager\",\"2592\":\"186#Plugin-matcher\",\"2593\":\"186#Plugin-parent-plugin\",\"2594\":\"186#Plugin-sub-plugins\",\"2595\":\"186#Plugin-id-\",\"2596\":\"187\",\"2597\":\"187#store-matcher\",\"2598\":\"187#get-matcher-plugin\",\"2599\":\"187#get-matcher-module\",\"2600\":\"187#get-matcher-source\",\"2601\":\"187#on\",\"2602\":\"187#on-metaevent\",\"2603\":\"187#on-message\",\"2604\":\"187#on-notice\",\"2605\":\"187#on-request\",\"2606\":\"187#on-startswith\",\"2607\":\"187#on-endswith\",\"2608\":\"187#on-fullmatch\",\"2609\":\"187#on-keyword\",\"2610\":\"187#on-command\",\"2611\":\"187#on-shell-command\",\"2612\":\"187#on-regex\",\"2613\":\"187#on-type\",\"2614\":\"187#CommandGroup\",\"2615\":\"187#CommandGroup-command\",\"2616\":\"187#CommandGroup-shell-command\",\"2617\":\"187#MatcherGroup\",\"2618\":\"187#MatcherGroup-on\",\"2619\":\"187#MatcherGroup-on-metaevent\",\"2620\":\"187#MatcherGroup-on-message\",\"2621\":\"187#MatcherGroup-on-notice\",\"2622\":\"187#MatcherGroup-on-request\",\"2623\":\"187#MatcherGroup-on-startswith\",\"2624\":\"187#MatcherGroup-on-endswith\",\"2625\":\"187#MatcherGroup-on-fullmatch\",\"2626\":\"187#MatcherGroup-on-keyword\",\"2627\":\"187#MatcherGroup-on-command\",\"2628\":\"187#MatcherGroup-on-shell-command\",\"2629\":\"187#MatcherGroup-on-regex\",\"2630\":\"187#MatcherGroup-on-type\",\"2631\":\"188\",\"2632\":\"188#命令头\",\"2633\":\"188#参数声明-args\",\"2634\":\"188#key\",\"2635\":\"188#var\",\"2636\":\"188#multivar-与-keywordvar\",\"2637\":\"188#default\",\"2638\":\"188#选项与子命令-option-subcommand\",\"2639\":\"188#action\",\"2640\":\"188#解析结果-arparma\",\"2641\":\"188#元数据-commandmeta\",\"2642\":\"188#命名空间配置\",\"2643\":\"188#新建命名空间并替换\",\"2644\":\"188#修改默认的命名空间\",\"2645\":\"188#快捷指令\",\"2646\":\"188#args的使用\",\"2647\":\"188#command的使用\",\"2648\":\"188#紧凑命令\",\"2649\":\"188#模糊匹配\",\"2650\":\"188#半自动补全\",\"2651\":\"188#duplication\",\"2652\":\"188#上下文插值\",\"2653\":\"189\",\"2654\":\"189#alconna-auto-send-output\",\"2655\":\"189#alconna-use-command-start\",\"2656\":\"189#alconna-auto-completion\",\"2657\":\"189#alconna-use-origin\",\"2658\":\"189#alconna-use-command-sep\",\"2659\":\"189#alconna-global-extensions\",\"2660\":\"189#alconna-context-style\",\"2661\":\"189#alconna-enable-saa-patch\",\"2662\":\"189#alconna-apply-filehost\",\"2663\":\"189#alconna-apply-fetch-targets\",\"2664\":\"190\",\"2665\":\"190#示例\",\"2666\":\"190#创建新机器人\",\"2667\":\"190#卸载插件\",\"2668\":\"190#cli\",\"2669\":\"190#heads\",\"2670\":\"190#upgrade\",\"2671\":\"190#downgrade\",\"2672\":\"190#check\",\"2673\":\"190#配置\",\"2674\":\"190#sqlalchemy-database-url\",\"2675\":\"190#sqlalchemy-bind\",\"2676\":\"190#sqlalchemy-engine-options\",\"2677\":\"190#sqlalchemy-echo\",\"2678\":\"191\",\"2679\":\"191#测试-http-服务端\",\"2680\":\"191#测试-websocket-服务端\",\"2681\":\"191#测试-http-客户端\",\"2682\":\"191#测试-websocket-客户端\",\"2683\":\"192\",\"2684\":\"192#示例\",\"2685\":\"192#模型定义\",\"2686\":\"192#首次迁移\",\"2687\":\"192#会话管理\",\"2688\":\"192#依赖注入\",\"2689\":\"193\",\"2690\":\"193#数据库会话\",\"2691\":\"193#asyncsession\",\"2692\":\"193#async-scoped-session\",\"2693\":\"193#查询数据\",\"2694\":\"193#model\",\"2695\":\"193#sqldepends\",\"2696\":\"193#类型标注\",\"2697\":\"194\",\"2698\":\"195\",\"2699\":\"195#示例\",\"2700\":\"195#模型定义\",\"2701\":\"195#首次迁移\",\"2702\":\"195#会话管理\",\"2703\":\"195#依赖注入\",\"2704\":\"196\",\"2705\":\"196#数据库会话\",\"2706\":\"196#asyncsession\",\"2707\":\"196#async-scoped-session\",\"2708\":\"196#查询数据\",\"2709\":\"196#model\",\"2710\":\"196#sqldepends\",\"2711\":\"196#类型标注\",\"2712\":\"197\",\"2713\":\"198\",\"2714\":\"198#示例\",\"2715\":\"198#模型定义\",\"2716\":\"198#首次迁移\",\"2717\":\"198#会话管理\",\"2718\":\"198#依赖注入\",\"2719\":\"199\",\"2720\":\"199#数据库会话\",\"2721\":\"199#asyncsession\",\"2722\":\"199#async-scoped-session\",\"2723\":\"199#查询数据\",\"2724\":\"199#model\",\"2725\":\"199#sqldepends\",\"2726\":\"199#类型标注\",\"2727\":\"200\",\"2728\":\"201\",\"2729\":\"202\",\"2730\":\"203\",\"2731\":\"204\",\"2732\":\"205\",\"2733\":\"206\",\"2734\":\"207\",\"2735\":\"208\",\"2736\":\"209\",\"2737\":\"210\",\"2738\":\"211\",\"2739\":\"212\",\"2740\":\"213\",\"2741\":\"214\",\"2742\":\"215\",\"2743\":\"216\",\"2744\":\"217\",\"2745\":\"218\",\"2746\":\"219\",\"2747\":\"220\",\"2748\":\"221\",\"2749\":\"222\",\"2750\":\"223\",\"2751\":\"224\",\"2752\":\"225\",\"2753\":\"226\",\"2754\":\"227\",\"2755\":\"228\",\"2756\":\"229\",\"2757\":\"230\",\"2758\":\"231\",\"2759\":\"232\",\"2760\":\"233\",\"2761\":\"234\",\"2762\":\"235\",\"2763\":\"236\",\"2764\":\"237\",\"2765\":\"238\",\"2766\":\"239\",\"2767\":\"240\",\"2768\":\"241\",\"2769\":\"242\",\"2770\":\"243\",\"2771\":\"244\",\"2772\":\"245\",\"2773\":\"246\",\"2774\":\"247\",\"2775\":\"248\",\"2776\":\"249\",\"2777\":\"250\",\"2778\":\"251\",\"2779\":\"252\",\"2780\":\"253\",\"2781\":\"254\",\"2782\":\"255\",\"2783\":\"256\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[1,22],\"1\":[1],\"2\":[1,8],\"3\":[1,16],\"4\":[1,11],\"5\":[1,6],\"6\":[1,7],\"7\":[1,30],\"8\":[1,12],\"9\":[1],\"10\":[3,37],\"11\":[1,10],\"12\":[1,22],\"13\":[1],\"14\":[1,8],\"15\":[1,16],\"16\":[1,11],\"17\":[1,6],\"18\":[1,7],\"19\":[1,30],\"20\":[1,12],\"21\":[1],\"22\":[3,37],\"23\":[1,10],\"24\":[1,22],\"25\":[1],\"26\":[1,8],\"27\":[1,16],\"28\":[1,11],\"29\":[1,6],\"30\":[1,7],\"31\":[1,30],\"32\":[1,12],\"33\":[1],\"34\":[3,37],\"35\":[1,10],\"36\":[1,5],\"37\":[1,27],\"38\":[1,25],\"39\":[1,15],\"40\":[3,40],\"41\":[1,7],\"42\":[1,11],\"43\":[1,8],\"44\":[1,8],\"45\":[1,9],\"46\":[2,10],\"47\":[2,13],\"48\":[1,9],\"49\":[1,10],\"50\":[1,13],\"51\":[1,5],\"52\":[1,11],\"53\":[1,41],\"54\":[1,47],\"55\":[1,12],\"56\":[1],\"57\":[1,8],\"58\":[3,39],\"59\":[2],\"60\":[1,15],\"61\":[1,14],\"62\":[1,14],\"63\":[1,12],\"64\":[1,74],\"65\":[1,10],\"66\":[1,9],\"67\":[1,13],\"68\":[1,13],\"69\":[1,9],\"70\":[1,20],\"71\":[2],\"72\":[1,34],\"73\":[1,10],\"74\":[1,9],\"75\":[1,13],\"76\":[1,13],\"77\":[1,9],\"78\":[1,30],\"79\":[1,29],\"80\":[1,14],\"81\":[1,22],\"82\":[1,21],\"83\":[1,13],\"84\":[1,13],\"85\":[1],\"86\":[1,27],\"87\":[1,10],\"88\":[1,10],\"89\":[1,9],\"90\":[1,27],\"91\":[1,20],\"92\":[1,10],\"93\":[1,46],\"94\":[1,5],\"95\":[1,23],\"96\":[1,23],\"97\":[1,25],\"98\":[1,18],\"99\":[1,55],\"100\":[1,53],\"101\":[1,32],\"102\":[1,10],\"103\":[1,19],\"104\":[1,5],\"105\":[1,34],\"106\":[1,18],\"107\":[1],\"108\":[1,35],\"109\":[1,12],\"110\":[1,102],\"111\":[1,47],\"112\":[1,10],\"113\":[1,22],\"114\":[1,29],\"115\":[1,13],\"116\":[1,35],\"117\":[1,29],\"118\":[1,46],\"119\":[1,11],\"120\":[2,63],\"121\":[2,70],\"122\":[3],\"123\":[3,18],\"124\":[1,32],\"125\":[1,21],\"126\":[1,6],\"127\":[1,21],\"128\":[1,19],\"129\":[2,22],\"130\":[2,22],\"131\":[1,5],\"132\":[1,33],\"133\":[1,21],\"134\":[1,37],\"135\":[1,29],\"136\":[1,35],\"137\":[1,38],\"138\":[1,15],\"139\":[1,32],\"140\":[1,53],\"141\":[2,10],\"142\":[1,11],\"143\":[1,4],\"144\":[1,4],\"145\":[1,7],\"146\":[1,15],\"147\":[1,21],\"148\":[1,10],\"149\":[1,9],\"150\":[1,9],\"151\":[1,8],\"152\":[1,19],\"153\":[1,11],\"154\":[1,10],\"155\":[1,17],\"156\":[1,13],\"157\":[1,11],\"158\":[1,19],\"159\":[1,10],\"160\":[1,13],\"161\":[1,15],\"162\":[2,16],\"163\":[1,23],\"164\":[1,10],\"165\":[1,30],\"166\":[1,19],\"167\":[1,9],\"168\":[1,7],\"169\":[1,21],\"170\":[1,10],\"171\":[1,9],\"172\":[1,6],\"173\":[1,11],\"174\":[1,12],\"175\":[1,22],\"176\":[2,4],\"177\":[1,7],\"178\":[1,7],\"179\":[1,6],\"180\":[1,9],\"181\":[1,9],\"182\":[1,6],\"183\":[1,6],\"184\":[1,7],\"185\":[1,7],\"186\":[1,7],\"187\":[1,7],\"188\":[1,9],\"189\":[1,7],\"190\":[1,6],\"191\":[1,6],\"192\":[1,6],\"193\":[1,6],\"194\":[1,6],\"195\":[2,29],\"196\":[1,6],\"197\":[1,4],\"198\":[1,4],\"199\":[1,10],\"200\":[1,27],\"201\":[1,6],\"202\":[1,14],\"203\":[1,27],\"204\":[1,6],\"205\":[1,24],\"206\":[1,24],\"207\":[1,25],\"208\":[1,11],\"209\":[1,15],\"210\":[1,6],\"211\":[1,8],\"212\":[1,7],\"213\":[1,5],\"214\":[1,5],\"215\":[1,7],\"216\":[1,39],\"217\":[1,21],\"218\":[1,38],\"219\":[1,24],\"220\":[1,27],\"221\":[1,26],\"222\":[1,46],\"223\":[1,29],\"224\":[1,37],\"225\":[1,24],\"226\":[2,14],\"227\":[1,27],\"228\":[1,9],\"229\":[1,6],\"230\":[1,12],\"231\":[1,4],\"232\":[2,3],\"233\":[1,4],\"234\":[1,5],\"235\":[1,5],\"236\":[1,5],\"237\":[1,7],\"238\":[1,5],\"239\":[1,4],\"240\":[1,5],\"241\":[1,7],\"242\":[1,67],\"243\":[1,6],\"244\":[1,22],\"245\":[1,25],\"246\":[1,8],\"247\":[1,8],\"248\":[1,10],\"249\":[1,13],\"250\":[1,19],\"251\":[1,27],\"252\":[1,22],\"253\":[1,23],\"254\":[1,24],\"255\":[1,28],\"256\":[1,29],\"257\":[1,29],\"258\":[1,8],\"259\":[1,19],\"260\":[1,11],\"261\":[1,18],\"262\":[1,19],\"263\":[1,11],\"264\":[1,7],\"265\":[1,12],\"266\":[1,6],\"267\":[1,15],\"268\":[1,15],\"269\":[1,4],\"270\":[1,7],\"271\":[1,17],\"272\":[1,17],\"273\":[1,2],\"274\":[1,6],\"275\":[1,6],\"276\":[1,8],\"277\":[1,9],\"278\":[1,15],\"279\":[1,8],\"280\":[1,9],\"281\":[1,4],\"282\":[1,9],\"283\":[1,9],\"284\":[1,10],\"285\":[1,10],\"286\":[1,4],\"287\":[2,5],\"288\":[1,9],\"289\":[1,9],\"290\":[1,9],\"291\":[1,9],\"292\":[1,25],\"293\":[1,19],\"294\":[2,2],\"295\":[1,10],\"296\":[1,9],\"297\":[1,41],\"298\":[1,23],\"299\":[1,19],\"300\":[1,19],\"301\":[1,17],\"302\":[1,16],\"303\":[1,9],\"304\":[1,12],\"305\":[1,19],\"306\":[1,18],\"307\":[1,6],\"308\":[1,6],\"309\":[1,6],\"310\":[1,7],\"311\":[1,8],\"312\":[1,6],\"313\":[1,6],\"314\":[1,6],\"315\":[1,6],\"316\":[1,7],\"317\":[1,7],\"318\":[1,8],\"319\":[1,22],\"320\":[1,10],\"321\":[1,11],\"322\":[1,6],\"323\":[1,6],\"324\":[1,6],\"325\":[1,6],\"326\":[1,11],\"327\":[1,8],\"328\":[2,15],\"329\":[1,21],\"330\":[1,14],\"331\":[1,20],\"332\":[1,20],\"333\":[1,20],\"334\":[1,7],\"335\":[1,20],\"336\":[1,4],\"337\":[1,4],\"338\":[1,4],\"339\":[1,4],\"340\":[1,12],\"341\":[1,12],\"342\":[1,12],\"343\":[1,13],\"344\":[1,4],\"345\":[1,4],\"346\":[2,13],\"347\":[1,20],\"348\":[1,7],\"349\":[1,23],\"350\":[1,2],\"351\":[1,7],\"352\":[1,10],\"353\":[1,13],\"354\":[1,10],\"355\":[1,13],\"356\":[1,10],\"357\":[1,13],\"358\":[1,6],\"359\":[1,8],\"360\":[1,14],\"361\":[1,40],\"362\":[1,16],\"363\":[1,21],\"364\":[1,15],\"365\":[1,64],\"366\":[1,9],\"367\":[1,38],\"368\":[1,4],\"369\":[1,6],\"370\":[1,7],\"371\":[1,9],\"372\":[2,15],\"373\":[1,10],\"374\":[1,5],\"375\":[1,8],\"376\":[1,12],\"377\":[1,10],\"378\":[1,12],\"379\":[1,9],\"380\":[1,9],\"381\":[1,2],\"382\":[1,6],\"383\":[1,13],\"384\":[1,13],\"385\":[1,12],\"386\":[1,19],\"387\":[1,18],\"388\":[1,18],\"389\":[1,20],\"390\":[1,24],\"391\":[1,18],\"392\":[1,16],\"393\":[1,7],\"394\":[1,26],\"395\":[1,25],\"396\":[1,8],\"397\":[2,3],\"398\":[1,13],\"399\":[1,11],\"400\":[1,14],\"401\":[1,33],\"402\":[1,8],\"403\":[1,11],\"404\":[1,9],\"405\":[1,9],\"406\":[1,17],\"407\":[1,16],\"408\":[1,27],\"409\":[1,10],\"410\":[1,9],\"411\":[1,7],\"412\":[1,7],\"413\":[1,12],\"414\":[1,8],\"415\":[1,9],\"416\":[1,4],\"417\":[1,19],\"418\":[1,15],\"419\":[1,65],\"420\":[1,70],\"421\":[3,25],\"422\":[1,14],\"423\":[1,66],\"424\":[1,68],\"425\":[1,26],\"426\":[1,37],\"427\":[1,42],\"428\":[1,65],\"429\":[1,23],\"430\":[1,4],\"431\":[1,68],\"432\":[1,10],\"433\":[1,14],\"434\":[1,10],\"435\":[1,64],\"436\":[1],\"437\":[3,7],\"438\":[3,34],\"439\":[3,48],\"440\":[3,43],\"441\":[4,11],\"442\":[4,11],\"443\":[4,11],\"444\":[1,18],\"445\":[1,10],\"446\":[1,3],\"447\":[3,11],\"448\":[1,12],\"449\":[1,57],\"450\":[1,18],\"451\":[1,10],\"452\":[1,14],\"453\":[1,16],\"454\":[1,53],\"455\":[1],\"456\":[2,9],\"457\":[3,20],\"458\":[2,14],\"459\":[1,24],\"460\":[1],\"461\":[3,5],\"462\":[1,3],\"463\":[1,4],\"464\":[1,15],\"465\":[1,32],\"466\":[4,8],\"467\":[1,13],\"468\":[1,40],\"469\":[1,18],\"470\":[1,46],\"471\":[1,9],\"472\":[1,123],\"473\":[1,90],\"474\":[3,34],\"475\":[3,68],\"476\":[2,106],\"477\":[1,71],\"478\":[1,91],\"479\":[1,57],\"480\":[1,44],\"481\":[1,14],\"482\":[2,24],\"483\":[2],\"484\":[6,62],\"485\":[4,44],\"486\":[2],\"487\":[5,41],\"488\":[4,54],\"489\":[3,49],\"490\":[1],\"491\":[4,39],\"492\":[4,71],\"493\":[2,74],\"494\":[2,36],\"495\":[4,46],\"496\":[2,37],\"497\":[2,63],\"498\":[2,32],\"499\":[2,44],\"500\":[3,36],\"501\":[2,45],\"502\":[2,26],\"503\":[2,75],\"504\":[2,76],\"505\":[2,64],\"506\":[1,29],\"507\":[1,33],\"508\":[1,32],\"509\":[1,59],\"510\":[1,22],\"511\":[1,3],\"512\":[1,12],\"513\":[1,14],\"514\":[1,19],\"515\":[1,62],\"516\":[1,35],\"517\":[1,29],\"518\":[1,21],\"519\":[1,13],\"520\":[1,32],\"521\":[1,37],\"522\":[1,13],\"523\":[1,10],\"524\":[1,3],\"525\":[1,40],\"526\":[1,21],\"527\":[1,37],\"528\":[1,38],\"529\":[1,40],\"530\":[1,20],\"531\":[1],\"532\":[1,29],\"533\":[1,30],\"534\":[1,48],\"535\":[1,13],\"536\":[1,17],\"537\":[1,7],\"538\":[1,24],\"539\":[1,29],\"540\":[1,10],\"541\":[1,12],\"542\":[1,17],\"543\":[2,52],\"544\":[1,37],\"545\":[1,69],\"546\":[1,5],\"547\":[1,27],\"548\":[1,25],\"549\":[1,15],\"550\":[3,40],\"551\":[1,7],\"552\":[1,11],\"553\":[1,8],\"554\":[1,8],\"555\":[1,9],\"556\":[2,10],\"557\":[2,13],\"558\":[1,9],\"559\":[1,10],\"560\":[1,13],\"561\":[1,5],\"562\":[1,11],\"563\":[1,41],\"564\":[1,47],\"565\":[1,12],\"566\":[1],\"567\":[1,8],\"568\":[3,39],\"569\":[2],\"570\":[1,15],\"571\":[1,14],\"572\":[1,14],\"573\":[1,12],\"574\":[1,74],\"575\":[1,10],\"576\":[1,9],\"577\":[1,13],\"578\":[1,13],\"579\":[1,9],\"580\":[1,20],\"581\":[2],\"582\":[1,34],\"583\":[1,10],\"584\":[1,9],\"585\":[1,13],\"586\":[1,13],\"587\":[1,9],\"588\":[1,30],\"589\":[1,29],\"590\":[1,14],\"591\":[1,22],\"592\":[1,21],\"593\":[1,13],\"594\":[1,13],\"595\":[1],\"596\":[1,27],\"597\":[1,10],\"598\":[1,10],\"599\":[1,9],\"600\":[1,27],\"601\":[1,20],\"602\":[1,10],\"603\":[1,46],\"604\":[1,5],\"605\":[1,23],\"606\":[1,23],\"607\":[1,25],\"608\":[1,18],\"609\":[1,55],\"610\":[1,53],\"611\":[1,32],\"612\":[1,10],\"613\":[1,19],\"614\":[1,5],\"615\":[1,34],\"616\":[1,18],\"617\":[1],\"618\":[1,35],\"619\":[1,12],\"620\":[1,102],\"621\":[1,47],\"622\":[1,10],\"623\":[1,22],\"624\":[1,29],\"625\":[1,13],\"626\":[1,35],\"627\":[1,29],\"628\":[1,46],\"629\":[1,11],\"630\":[2,63],\"631\":[2,70],\"632\":[3],\"633\":[3,18],\"634\":[1,32],\"635\":[1,21],\"636\":[1,6],\"637\":[1,21],\"638\":[1,19],\"639\":[2,22],\"640\":[2,22],\"641\":[1,5],\"642\":[1,33],\"643\":[1,21],\"644\":[1,37],\"645\":[1,29],\"646\":[1,35],\"647\":[1,38],\"648\":[1,15],\"649\":[1,32],\"650\":[1,53],\"651\":[2,10],\"652\":[1,11],\"653\":[1,4],\"654\":[1,4],\"655\":[1,7],\"656\":[1,15],\"657\":[1,21],\"658\":[1,10],\"659\":[1,9],\"660\":[1,9],\"661\":[1,8],\"662\":[1,19],\"663\":[1,11],\"664\":[1,10],\"665\":[1,17],\"666\":[1,13],\"667\":[1,11],\"668\":[1,19],\"669\":[1,10],\"670\":[1,13],\"671\":[1,15],\"672\":[2,16],\"673\":[1,23],\"674\":[1,10],\"675\":[1,30],\"676\":[1,19],\"677\":[1,9],\"678\":[1,7],\"679\":[1,21],\"680\":[1,10],\"681\":[1,9],\"682\":[1,6],\"683\":[1,11],\"684\":[1,12],\"685\":[1,22],\"686\":[2,4],\"687\":[1,7],\"688\":[1,7],\"689\":[1,6],\"690\":[1,9],\"691\":[1,9],\"692\":[1,8],\"693\":[1,8],\"694\":[1,6],\"695\":[1,6],\"696\":[1,7],\"697\":[1,7],\"698\":[1,7],\"699\":[1,7],\"700\":[1,9],\"701\":[1,7],\"702\":[1,6],\"703\":[1,6],\"704\":[1,6],\"705\":[1,6],\"706\":[1,6],\"707\":[2,29],\"708\":[1,6],\"709\":[1,4],\"710\":[1,4],\"711\":[1,10],\"712\":[1,27],\"713\":[1,6],\"714\":[1,14],\"715\":[1,27],\"716\":[1,6],\"717\":[1,24],\"718\":[1,24],\"719\":[1,25],\"720\":[1,11],\"721\":[1,15],\"722\":[1,6],\"723\":[1,8],\"724\":[1,7],\"725\":[1,5],\"726\":[1,5],\"727\":[1,7],\"728\":[1,39],\"729\":[1,21],\"730\":[1,38],\"731\":[1,24],\"732\":[1,27],\"733\":[1,26],\"734\":[1,46],\"735\":[1,29],\"736\":[1,37],\"737\":[1,24],\"738\":[2,14],\"739\":[1,27],\"740\":[1,9],\"741\":[1,6],\"742\":[1,12],\"743\":[1,4],\"744\":[2,3],\"745\":[1,4],\"746\":[1,4],\"747\":[1,5],\"748\":[1,5],\"749\":[1,5],\"750\":[1,7],\"751\":[1,5],\"752\":[1,4],\"753\":[1,5],\"754\":[1,7],\"755\":[1,67],\"756\":[1,6],\"757\":[1,22],\"758\":[1,25],\"759\":[1,8],\"760\":[1,8],\"761\":[1,10],\"762\":[1,13],\"763\":[1,19],\"764\":[1,27],\"765\":[1,22],\"766\":[1,23],\"767\":[1,24],\"768\":[1,28],\"769\":[1,29],\"770\":[1,29],\"771\":[1,8],\"772\":[1,19],\"773\":[1,11],\"774\":[1,18],\"775\":[1,19],\"776\":[1,11],\"777\":[1,7],\"778\":[1,12],\"779\":[1,6],\"780\":[1,15],\"781\":[1,15],\"782\":[1,4],\"783\":[1,7],\"784\":[1,17],\"785\":[1,17],\"786\":[1,6],\"787\":[1,6],\"788\":[1,8],\"789\":[1,9],\"790\":[1,15],\"791\":[1,8],\"792\":[1,9],\"793\":[1,4],\"794\":[1,9],\"795\":[1,9],\"796\":[1,10],\"797\":[1,10],\"798\":[1,2],\"799\":[2,5],\"800\":[1,9],\"801\":[1,9],\"802\":[1,9],\"803\":[1,9],\"804\":[1,25],\"805\":[1,19],\"806\":[2,2],\"807\":[1,10],\"808\":[1,24],\"809\":[1,9],\"810\":[1,11],\"811\":[1,9],\"812\":[1,19],\"813\":[1,12],\"814\":[1,16],\"815\":[1,41],\"816\":[1,19],\"817\":[1,18],\"818\":[1,19],\"819\":[1,17],\"820\":[1,6],\"821\":[1,6],\"822\":[1,6],\"823\":[1,7],\"824\":[1,8],\"825\":[1,6],\"826\":[1,6],\"827\":[1,6],\"828\":[1,6],\"829\":[1,7],\"830\":[1,7],\"831\":[1,8],\"832\":[1,21],\"833\":[1,10],\"834\":[1,11],\"835\":[1,6],\"836\":[1,6],\"837\":[1,6],\"838\":[1,6],\"839\":[1,11],\"840\":[1,8],\"841\":[1,11],\"842\":[1,8],\"843\":[2,15],\"844\":[1,21],\"845\":[1,20],\"846\":[1,7],\"847\":[1,20],\"848\":[1,14],\"849\":[1,20],\"850\":[1,20],\"851\":[1,4],\"852\":[1,4],\"853\":[1,4],\"854\":[1,4],\"855\":[1,12],\"856\":[1,12],\"857\":[1,12],\"858\":[1,13],\"859\":[1,4],\"860\":[1,4],\"861\":[2,13],\"862\":[1,20],\"863\":[1,7],\"864\":[1,23],\"865\":[1,2],\"866\":[1,7],\"867\":[1,10],\"868\":[1,13],\"869\":[1,10],\"870\":[1,13],\"871\":[1,10],\"872\":[1,13],\"873\":[1,6],\"874\":[1,8],\"875\":[1,14],\"876\":[1,40],\"877\":[1,16],\"878\":[1,21],\"879\":[1,15],\"880\":[1,64],\"881\":[1,9],\"882\":[1,38],\"883\":[1,4],\"884\":[1,6],\"885\":[1,7],\"886\":[1,9],\"887\":[2,15],\"888\":[1,10],\"889\":[1,5],\"890\":[1,8],\"891\":[1,12],\"892\":[1,10],\"893\":[1,12],\"894\":[1,9],\"895\":[1,9],\"896\":[1,2],\"897\":[1,6],\"898\":[1,13],\"899\":[1,13],\"900\":[1,12],\"901\":[1,19],\"902\":[1,18],\"903\":[1,18],\"904\":[1,20],\"905\":[1,24],\"906\":[1,18],\"907\":[1,16],\"908\":[1,7],\"909\":[1,26],\"910\":[1,25],\"911\":[1,8],\"912\":[2,3],\"913\":[1,13],\"914\":[1,11],\"915\":[1,14],\"916\":[1,33],\"917\":[1,8],\"918\":[1,11],\"919\":[1,9],\"920\":[1,9],\"921\":[1,17],\"922\":[1,16],\"923\":[1,27],\"924\":[1,10],\"925\":[1,9],\"926\":[1,7],\"927\":[1,7],\"928\":[1,12],\"929\":[1,8],\"930\":[1,9],\"931\":[1,4],\"932\":[1,19],\"933\":[1,15],\"934\":[1,65],\"935\":[1,70],\"936\":[3,25],\"937\":[1,14],\"938\":[1,66],\"939\":[1,68],\"940\":[1,26],\"941\":[1,37],\"942\":[1,42],\"943\":[1,65],\"944\":[1,23],\"945\":[1,4],\"946\":[1,68],\"947\":[1,10],\"948\":[1,14],\"949\":[1,10],\"950\":[1,64],\"951\":[1],\"952\":[3,7],\"953\":[3,34],\"954\":[3,48],\"955\":[3,43],\"956\":[4,11],\"957\":[4,11],\"958\":[4,11],\"959\":[1,18],\"960\":[1,10],\"961\":[1,3],\"962\":[3,11],\"963\":[1,12],\"964\":[1,57],\"965\":[1,18],\"966\":[1,10],\"967\":[1,14],\"968\":[1,16],\"969\":[1,53],\"970\":[1],\"971\":[2,9],\"972\":[3,20],\"973\":[2,14],\"974\":[1,24],\"975\":[1],\"976\":[3,5],\"977\":[1,3],\"978\":[1,4],\"979\":[1,15],\"980\":[1,32],\"981\":[4,8],\"982\":[1,13],\"983\":[1,40],\"984\":[1,18],\"985\":[1,46],\"986\":[1,9],\"987\":[1,123],\"988\":[1,90],\"989\":[3,34],\"990\":[3,68],\"991\":[2,106],\"992\":[1,71],\"993\":[1,91],\"994\":[1,57],\"995\":[1,44],\"996\":[1,14],\"997\":[2,24],\"998\":[2],\"999\":[6,62],\"1000\":[4,44],\"1001\":[2],\"1002\":[5,41],\"1003\":[4,54],\"1004\":[3,49],\"1005\":[1],\"1006\":[4,39],\"1007\":[4,71],\"1008\":[2,74],\"1009\":[2,36],\"1010\":[4,46],\"1011\":[2,37],\"1012\":[2,63],\"1013\":[2,32],\"1014\":[2,44],\"1015\":[3,36],\"1016\":[2,45],\"1017\":[2,26],\"1018\":[2,75],\"1019\":[2,76],\"1020\":[2,64],\"1021\":[1,29],\"1022\":[1,33],\"1023\":[1,32],\"1024\":[1,59],\"1025\":[1,22],\"1026\":[1,3],\"1027\":[1,12],\"1028\":[1,14],\"1029\":[1,19],\"1030\":[1,62],\"1031\":[1,35],\"1032\":[1,29],\"1033\":[1,21],\"1034\":[1,13],\"1035\":[1,32],\"1036\":[1,37],\"1037\":[1,13],\"1038\":[1,10],\"1039\":[1,3],\"1040\":[1,40],\"1041\":[1,21],\"1042\":[1,37],\"1043\":[1,38],\"1044\":[1,40],\"1045\":[1,20],\"1046\":[1],\"1047\":[1,29],\"1048\":[1,30],\"1049\":[1,48],\"1050\":[1,13],\"1051\":[1,17],\"1052\":[1,7],\"1053\":[1,24],\"1054\":[1,29],\"1055\":[1,10],\"1056\":[1,12],\"1057\":[1,17],\"1058\":[2,52],\"1059\":[1,37],\"1060\":[1,69],\"1061\":[1,5],\"1062\":[1,27],\"1063\":[1,25],\"1064\":[1,15],\"1065\":[3,40],\"1066\":[1,7],\"1067\":[1,11],\"1068\":[1,8],\"1069\":[1,8],\"1070\":[1,9],\"1071\":[2,10],\"1072\":[2,13],\"1073\":[1,9],\"1074\":[1,10],\"1075\":[1,13],\"1076\":[1,5],\"1077\":[1,11],\"1078\":[1,41],\"1079\":[1,47],\"1080\":[1,12],\"1081\":[1],\"1082\":[1,8],\"1083\":[3,39],\"1084\":[2],\"1085\":[1,15],\"1086\":[1,14],\"1087\":[1,14],\"1088\":[1,12],\"1089\":[1,74],\"1090\":[1,10],\"1091\":[1,9],\"1092\":[1,13],\"1093\":[1,13],\"1094\":[1,9],\"1095\":[1,20],\"1096\":[2],\"1097\":[1,34],\"1098\":[1,10],\"1099\":[1,9],\"1100\":[1,13],\"1101\":[1,13],\"1102\":[1,9],\"1103\":[1,30],\"1104\":[1,29],\"1105\":[1,14],\"1106\":[1,22],\"1107\":[1,21],\"1108\":[1,13],\"1109\":[1,13],\"1110\":[1],\"1111\":[1,27],\"1112\":[1,10],\"1113\":[1,10],\"1114\":[1,9],\"1115\":[1,27],\"1116\":[1,20],\"1117\":[1,10],\"1118\":[1,46],\"1119\":[1,5],\"1120\":[1,23],\"1121\":[1,23],\"1122\":[1,25],\"1123\":[1,18],\"1124\":[1,55],\"1125\":[1,53],\"1126\":[1,32],\"1127\":[1,10],\"1128\":[1,19],\"1129\":[1,5],\"1130\":[1,34],\"1131\":[1,18],\"1132\":[1],\"1133\":[1,35],\"1134\":[1,12],\"1135\":[1,102],\"1136\":[1,47],\"1137\":[1,10],\"1138\":[1,22],\"1139\":[1,29],\"1140\":[1,13],\"1141\":[1,35],\"1142\":[1,29],\"1143\":[1,46],\"1144\":[1,11],\"1145\":[2,63],\"1146\":[2,70],\"1147\":[3],\"1148\":[3,18],\"1149\":[1,32],\"1150\":[1,21],\"1151\":[1,6],\"1152\":[1,21],\"1153\":[1,19],\"1154\":[2,22],\"1155\":[2,22],\"1156\":[1,5],\"1157\":[1,33],\"1158\":[1,21],\"1159\":[1,37],\"1160\":[1,29],\"1161\":[1,35],\"1162\":[1,38],\"1163\":[1,15],\"1164\":[1,32],\"1165\":[1,53],\"1166\":[2,10],\"1167\":[1,11],\"1168\":[1,4],\"1169\":[1,4],\"1170\":[1,7],\"1171\":[1,15],\"1172\":[1,21],\"1173\":[1,10],\"1174\":[1,9],\"1175\":[1,9],\"1176\":[1,8],\"1177\":[1,19],\"1178\":[1,11],\"1179\":[1,10],\"1180\":[1,17],\"1181\":[1,13],\"1182\":[1,11],\"1183\":[1,19],\"1184\":[1,10],\"1185\":[1,13],\"1186\":[1,15],\"1187\":[2,16],\"1188\":[1,23],\"1189\":[1,10],\"1190\":[1,30],\"1191\":[1,19],\"1192\":[1,9],\"1193\":[1,7],\"1194\":[1,21],\"1195\":[1,10],\"1196\":[1,9],\"1197\":[1,6],\"1198\":[1,11],\"1199\":[1,12],\"1200\":[1,22],\"1201\":[2,4],\"1202\":[1,7],\"1203\":[1,7],\"1204\":[1,6],\"1205\":[1,9],\"1206\":[1,9],\"1207\":[1,8],\"1208\":[1,8],\"1209\":[1,6],\"1210\":[1,6],\"1211\":[1,7],\"1212\":[1,7],\"1213\":[1,7],\"1214\":[1,7],\"1215\":[1,9],\"1216\":[1,7],\"1217\":[1,6],\"1218\":[1,6],\"1219\":[1,6],\"1220\":[1,6],\"1221\":[1,6],\"1222\":[2,29],\"1223\":[1,6],\"1224\":[1,4],\"1225\":[1,4],\"1226\":[1,10],\"1227\":[1,27],\"1228\":[1,6],\"1229\":[1,14],\"1230\":[1,27],\"1231\":[1,6],\"1232\":[1,24],\"1233\":[1,24],\"1234\":[1,25],\"1235\":[1,11],\"1236\":[1,15],\"1237\":[1,6],\"1238\":[1,8],\"1239\":[1,7],\"1240\":[1,5],\"1241\":[1,5],\"1242\":[1,7],\"1243\":[1,39],\"1244\":[1,21],\"1245\":[1,38],\"1246\":[1,24],\"1247\":[1,27],\"1248\":[1,26],\"1249\":[1,46],\"1250\":[1,29],\"1251\":[1,37],\"1252\":[1,24],\"1253\":[2,14],\"1254\":[1,27],\"1255\":[1,9],\"1256\":[1,6],\"1257\":[1,12],\"1258\":[1,4],\"1259\":[2,3],\"1260\":[1,4],\"1261\":[1,4],\"1262\":[1,5],\"1263\":[1,5],\"1264\":[1,5],\"1265\":[1,7],\"1266\":[1,5],\"1267\":[1,4],\"1268\":[1,5],\"1269\":[1,7],\"1270\":[1,67],\"1271\":[1,6],\"1272\":[1,22],\"1273\":[1,25],\"1274\":[1,8],\"1275\":[1,8],\"1276\":[1,10],\"1277\":[1,13],\"1278\":[1,19],\"1279\":[1,27],\"1280\":[1,22],\"1281\":[1,23],\"1282\":[1,24],\"1283\":[1,28],\"1284\":[1,29],\"1285\":[1,29],\"1286\":[1,8],\"1287\":[1,19],\"1288\":[1,11],\"1289\":[1,18],\"1290\":[1,19],\"1291\":[1,11],\"1292\":[1,7],\"1293\":[1,12],\"1294\":[1,6],\"1295\":[1,15],\"1296\":[1,15],\"1297\":[1,4],\"1298\":[1,7],\"1299\":[1,17],\"1300\":[1,17],\"1301\":[1,6],\"1302\":[1,6],\"1303\":[1,8],\"1304\":[1,9],\"1305\":[1,15],\"1306\":[1,8],\"1307\":[1,9],\"1308\":[1,4],\"1309\":[1,9],\"1310\":[1,9],\"1311\":[1,10],\"1312\":[1,10],\"1313\":[1,2],\"1314\":[2,5],\"1315\":[1,9],\"1316\":[1,9],\"1317\":[1,9],\"1318\":[1,9],\"1319\":[1,25],\"1320\":[1,19],\"1321\":[2,2],\"1322\":[1,10],\"1323\":[1,24],\"1324\":[1,9],\"1325\":[1,11],\"1326\":[1,9],\"1327\":[1,19],\"1328\":[1,12],\"1329\":[1,16],\"1330\":[1,41],\"1331\":[1,19],\"1332\":[1,18],\"1333\":[1,19],\"1334\":[1,17],\"1335\":[1,6],\"1336\":[1,6],\"1337\":[1,6],\"1338\":[1,7],\"1339\":[1,8],\"1340\":[1,6],\"1341\":[1,6],\"1342\":[1,6],\"1343\":[1,6],\"1344\":[1,7],\"1345\":[1,7],\"1346\":[1,8],\"1347\":[1,21],\"1348\":[1,10],\"1349\":[1,11],\"1350\":[1,6],\"1351\":[1,6],\"1352\":[1,6],\"1353\":[1,6],\"1354\":[1,11],\"1355\":[1,8],\"1356\":[1,11],\"1357\":[1,8],\"1358\":[2,15],\"1359\":[1,21],\"1360\":[1,20],\"1361\":[1,7],\"1362\":[1,20],\"1363\":[1,14],\"1364\":[1,20],\"1365\":[1,20],\"1366\":[1,4],\"1367\":[1,4],\"1368\":[1,4],\"1369\":[1,4],\"1370\":[1,12],\"1371\":[1,12],\"1372\":[1,12],\"1373\":[1,13],\"1374\":[1,4],\"1375\":[1,4],\"1376\":[2,13],\"1377\":[1,20],\"1378\":[1,7],\"1379\":[1,23],\"1380\":[1,2],\"1381\":[1,7],\"1382\":[1,10],\"1383\":[1,13],\"1384\":[1,10],\"1385\":[1,13],\"1386\":[1,10],\"1387\":[1,13],\"1388\":[1,6],\"1389\":[1,8],\"1390\":[1,14],\"1391\":[1,40],\"1392\":[1,16],\"1393\":[1,21],\"1394\":[1,15],\"1395\":[1,64],\"1396\":[1,9],\"1397\":[1,38],\"1398\":[1,4],\"1399\":[1,6],\"1400\":[1,7],\"1401\":[1,9],\"1402\":[2,15],\"1403\":[1,10],\"1404\":[1,5],\"1405\":[1,8],\"1406\":[1,12],\"1407\":[1,10],\"1408\":[1,12],\"1409\":[1,9],\"1410\":[1,9],\"1411\":[1,2],\"1412\":[1,6],\"1413\":[1,13],\"1414\":[1,13],\"1415\":[1,12],\"1416\":[1,19],\"1417\":[1,18],\"1418\":[1,18],\"1419\":[1,20],\"1420\":[1,24],\"1421\":[1,18],\"1422\":[1,16],\"1423\":[1,7],\"1424\":[1,26],\"1425\":[1,25],\"1426\":[1,8],\"1427\":[2,3],\"1428\":[1,13],\"1429\":[1,11],\"1430\":[1,14],\"1431\":[1,33],\"1432\":[1,8],\"1433\":[1,11],\"1434\":[1,9],\"1435\":[1,9],\"1436\":[1,17],\"1437\":[1,16],\"1438\":[1,27],\"1439\":[1,10],\"1440\":[1,9],\"1441\":[1,7],\"1442\":[1,7],\"1443\":[1,12],\"1444\":[1,8],\"1445\":[1,9],\"1446\":[1,4],\"1447\":[1,19],\"1448\":[1,15],\"1449\":[1,65],\"1450\":[1,70],\"1451\":[3,25],\"1452\":[1,14],\"1453\":[1,66],\"1454\":[1,68],\"1455\":[1,26],\"1456\":[1,37],\"1457\":[1,42],\"1458\":[1,65],\"1459\":[1,23],\"1460\":[1,4],\"1461\":[1,68],\"1462\":[1,10],\"1463\":[1,14],\"1464\":[1,10],\"1465\":[1,64],\"1466\":[1],\"1467\":[3,7],\"1468\":[3,34],\"1469\":[3,48],\"1470\":[3,43],\"1471\":[4,11],\"1472\":[4,11],\"1473\":[4,11],\"1474\":[1,18],\"1475\":[1,10],\"1476\":[1,3],\"1477\":[3,11],\"1478\":[1,12],\"1479\":[1,57],\"1480\":[1,18],\"1481\":[1,10],\"1482\":[1,14],\"1483\":[1,16],\"1484\":[1,53],\"1485\":[1],\"1486\":[2,9],\"1487\":[3,20],\"1488\":[2,14],\"1489\":[1,24],\"1490\":[1],\"1491\":[3,5],\"1492\":[1,3],\"1493\":[1,4],\"1494\":[1,15],\"1495\":[1,32],\"1496\":[4,8],\"1497\":[1,13],\"1498\":[1,40],\"1499\":[1,18],\"1500\":[1,46],\"1501\":[1,9],\"1502\":[1,123],\"1503\":[1,90],\"1504\":[3,34],\"1505\":[3,68],\"1506\":[2,106],\"1507\":[1,71],\"1508\":[1,91],\"1509\":[1,57],\"1510\":[1,44],\"1511\":[1,14],\"1512\":[2,24],\"1513\":[2],\"1514\":[6,62],\"1515\":[4,44],\"1516\":[2],\"1517\":[5,41],\"1518\":[4,54],\"1519\":[3,49],\"1520\":[1],\"1521\":[4,39],\"1522\":[4,71],\"1523\":[2,74],\"1524\":[2,36],\"1525\":[4,46],\"1526\":[2,37],\"1527\":[2,63],\"1528\":[2,32],\"1529\":[2,44],\"1530\":[3,36],\"1531\":[2,45],\"1532\":[2,26],\"1533\":[2,75],\"1534\":[2,76],\"1535\":[2,64],\"1536\":[1,29],\"1537\":[1,33],\"1538\":[1,32],\"1539\":[1,59],\"1540\":[1,22],\"1541\":[1,3],\"1542\":[1,12],\"1543\":[1,14],\"1544\":[1,19],\"1545\":[1,62],\"1546\":[1,35],\"1547\":[1,29],\"1548\":[1,21],\"1549\":[1,13],\"1550\":[1,32],\"1551\":[1,37],\"1552\":[1,13],\"1553\":[1,10],\"1554\":[1,3],\"1555\":[1,40],\"1556\":[1,21],\"1557\":[1,37],\"1558\":[1,38],\"1559\":[1,40],\"1560\":[1,20],\"1561\":[1],\"1562\":[1,29],\"1563\":[1,30],\"1564\":[1,48],\"1565\":[1,13],\"1566\":[1,17],\"1567\":[1,7],\"1568\":[1,24],\"1569\":[1,29],\"1570\":[1,10],\"1571\":[1,12],\"1572\":[1,17],\"1573\":[2,52],\"1574\":[1,37],\"1575\":[1,69],\"1576\":[2,8],\"1577\":[1,16],\"1578\":[1,4],\"1579\":[1,5],\"1580\":[1,4],\"1581\":[1,6],\"1582\":[1,24],\"1583\":[1,16],\"1584\":[1,17],\"1585\":[1,21],\"1586\":[1,7],\"1587\":[1,9],\"1588\":[1,6],\"1589\":[1,7],\"1590\":[1,15],\"1591\":[1,9],\"1592\":[1,12],\"1593\":[1,6],\"1594\":[1,14],\"1595\":[1,6],\"1596\":[1,21],\"1597\":[1,4],\"1598\":[1,7],\"1599\":[1,6],\"1600\":[1,6],\"1601\":[1,13],\"1602\":[1,12],\"1603\":[1,9],\"1604\":[1,9],\"1605\":[1,9],\"1606\":[1,11],\"1607\":[1,5],\"1608\":[1,5],\"1609\":[1,22],\"1610\":[1,8],\"1611\":[1,9],\"1612\":[1,31],\"1613\":[1,11],\"1614\":[1,11],\"1615\":[1,21],\"1616\":[1,14],\"1617\":[1,11],\"1618\":[1,11],\"1619\":[1,10],\"1620\":[1,10],\"1621\":[1,11],\"1622\":[1,6],\"1623\":[1,9],\"1624\":[1,9],\"1625\":[1,6],\"1626\":[1,4],\"1627\":[1,4],\"1628\":[1,6],\"1629\":[1,8],\"1630\":[1,7],\"1631\":[1,8],\"1632\":[1,7],\"1633\":[1,4],\"1634\":[1,4],\"1635\":[1,4],\"1636\":[1,7],\"1637\":[1,4],\"1638\":[1,6],\"1639\":[1,17],\"1640\":[1,9],\"1641\":[1,7],\"1642\":[1,10],\"1643\":[1,11],\"1644\":[1,14],\"1645\":[1,7],\"1646\":[2,2],\"1647\":[1,15],\"1648\":[1,18],\"1649\":[1,12],\"1650\":[1,10],\"1651\":[1,16],\"1652\":[1,5],\"1653\":[1,7],\"1654\":[3],\"1655\":[1,9],\"1656\":[1,11],\"1657\":[1,8],\"1658\":[3,11],\"1659\":[1,16],\"1660\":[1,5],\"1661\":[1,4],\"1662\":[1,4],\"1663\":[1,5],\"1664\":[1,5],\"1665\":[1,8],\"1666\":[1,17],\"1667\":[1,13],\"1668\":[1,4],\"1669\":[1,7],\"1670\":[1,4],\"1671\":[1,4],\"1672\":[1,4],\"1673\":[1,5],\"1674\":[1,5],\"1675\":[1,6],\"1676\":[3,11],\"1677\":[1,7],\"1678\":[1,10],\"1679\":[1,9],\"1680\":[1,9],\"1681\":[1,7],\"1682\":[1,5],\"1683\":[1,10],\"1684\":[1,7],\"1685\":[1,13],\"1686\":[1,13],\"1687\":[1,9],\"1688\":[1,9],\"1689\":[1,5],\"1690\":[1,5],\"1691\":[1,5],\"1692\":[1,7],\"1693\":[1,5],\"1694\":[1,5],\"1695\":[1,17],\"1696\":[1,9],\"1697\":[1,4],\"1698\":[1,7],\"1699\":[1,6],\"1700\":[1,4],\"1701\":[1,4],\"1702\":[1,5],\"1703\":[1,5],\"1704\":[3,13],\"1705\":[1,16],\"1706\":[1,5],\"1707\":[1,4],\"1708\":[1,4],\"1709\":[1,5],\"1710\":[1,5],\"1711\":[1,17],\"1712\":[1,6],\"1713\":[2,3],\"1714\":[1,4],\"1715\":[1,4],\"1716\":[1,13],\"1717\":[1,4],\"1718\":[1,4],\"1719\":[1,6],\"1720\":[1,11],\"1721\":[1,4],\"1722\":[1,6],\"1723\":[1,7],\"1724\":[1,7],\"1725\":[1,7],\"1726\":[1,13],\"1727\":[1,13],\"1728\":[1,4],\"1729\":[1,8],\"1730\":[1,9],\"1731\":[1,8],\"1732\":[1,7],\"1733\":[1,5],\"1734\":[1,7],\"1735\":[1,29],\"1736\":[1,13],\"1737\":[1,7],\"1738\":[1,6],\"1739\":[1,6],\"1740\":[1,9],\"1741\":[1,9],\"1742\":[1,4],\"1743\":[1,4],\"1744\":[1,8],\"1745\":[1,11],\"1746\":[1,11],\"1747\":[1,9],\"1748\":[1,9],\"1749\":[1,12],\"1750\":[1,10],\"1751\":[1,10],\"1752\":[1,12],\"1753\":[1,4],\"1754\":[1,4],\"1755\":[1,8],\"1756\":[1,8],\"1757\":[1,16],\"1758\":[1,5],\"1759\":[1,9],\"1760\":[1,21],\"1761\":[1,5],\"1762\":[1,5],\"1763\":[1,11],\"1764\":[1,5],\"1765\":[3,4],\"1766\":[1,9],\"1767\":[1,5],\"1768\":[1,7],\"1769\":[1,9],\"1770\":[1,10],\"1771\":[3,11],\"1772\":[1,5],\"1773\":[1,5],\"1774\":[1,10],\"1775\":[1,7],\"1776\":[1,13],\"1777\":[1,13],\"1778\":[1,9],\"1779\":[1,9],\"1780\":[1,5],\"1781\":[1,4],\"1782\":[1,5],\"1783\":[1,6],\"1784\":[1,5],\"1785\":[1,5],\"1786\":[1,17],\"1787\":[1,11],\"1788\":[1,4],\"1789\":[1,7],\"1790\":[1,6],\"1791\":[1,4],\"1792\":[1,4],\"1793\":[1,5],\"1794\":[1,5],\"1795\":[3,12],\"1796\":[1,9],\"1797\":[1,5],\"1798\":[1,8],\"1799\":[1,10],\"1800\":[1,4],\"1801\":[1,7],\"1802\":[1,6],\"1803\":[1,4],\"1804\":[1,4],\"1805\":[1,5],\"1806\":[1,5],\"1807\":[1,6],\"1808\":[2,4],\"1809\":[1,31],\"1810\":[1,23],\"1811\":[1,14],\"1812\":[1,8],\"1813\":[1,9],\"1814\":[1,7],\"1815\":[3,2],\"1816\":[1,20],\"1817\":[1,13],\"1818\":[1,17],\"1819\":[1,29],\"1820\":[1,33],\"1821\":[1,12],\"1822\":[1,12],\"1823\":[1,12],\"1824\":[1,17],\"1825\":[3,5],\"1826\":[1,15],\"1827\":[1,6],\"1828\":[1,6],\"1829\":[1,6],\"1830\":[1,6],\"1831\":[1,11],\"1832\":[1,8],\"1833\":[1,2],\"1834\":[1,11],\"1835\":[1,7],\"1836\":[1,6],\"1837\":[1,5],\"1838\":[3,2],\"1839\":[1,5],\"1840\":[1,4],\"1841\":[1,4],\"1842\":[1,4],\"1843\":[1,7],\"1844\":[1,6],\"1845\":[1,7],\"1846\":[1,17],\"1847\":[1,6],\"1848\":[1,10],\"1849\":[1,4],\"1850\":[1,9],\"1851\":[1,4],\"1852\":[1,4],\"1853\":[1,4],\"1854\":[1,6],\"1855\":[1,6],\"1856\":[1,5],\"1857\":[1,4],\"1858\":[3,2],\"1859\":[1,9],\"1860\":[1,16],\"1861\":[1,16],\"1862\":[1,10],\"1863\":[1,45],\"1864\":[1,42],\"1865\":[1,42],\"1866\":[1,42],\"1867\":[1,42],\"1868\":[1,49],\"1869\":[1,49],\"1870\":[1,49],\"1871\":[1,47],\"1872\":[1,59],\"1873\":[1,69],\"1874\":[1,56],\"1875\":[1,47],\"1876\":[1,32],\"1877\":[1,53],\"1878\":[1,57],\"1879\":[1,29],\"1880\":[1,45],\"1881\":[1,42],\"1882\":[1,42],\"1883\":[1,42],\"1884\":[1,42],\"1885\":[1,49],\"1886\":[1,49],\"1887\":[1,49],\"1888\":[1,47],\"1889\":[1,59],\"1890\":[1,69],\"1891\":[1,56],\"1892\":[1,47],\"1893\":[2,59],\"1894\":[1,103],\"1895\":[3,27],\"1896\":[1,47],\"1897\":[1,123],\"1898\":[3,28],\"1899\":[1,23],\"1900\":[4,71],\"1901\":[1,35],\"1902\":[3,60],\"1903\":[3,65],\"1904\":[1,46],\"1905\":[1,51],\"1906\":[1,19],\"1907\":[1,34],\"1908\":[1,23],\"1909\":[1,82],\"1910\":[1,62],\"1911\":[1,28],\"1912\":[1,32],\"1913\":[1,75],\"1914\":[1,31],\"1915\":[1],\"1916\":[4,7],\"1917\":[4,12],\"1918\":[3,9],\"1919\":[3,13],\"1920\":[4,13],\"1921\":[3,13],\"1922\":[3,12],\"1923\":[4,8],\"1924\":[3,6],\"1925\":[4,6],\"1926\":[1,17],\"1927\":[1],\"1928\":[1,28],\"1929\":[1,22],\"1930\":[1,5],\"1931\":[1,23],\"1932\":[1,14],\"1933\":[1,14],\"1934\":[1,10],\"1935\":[1],\"1936\":[3,18],\"1937\":[2,39],\"1938\":[3,20],\"1939\":[2,25],\"1940\":[1,18],\"1941\":[3,82],\"1942\":[3,67],\"1943\":[3,1],\"1944\":[3,1],\"1945\":[2,8],\"1946\":[1,21],\"1947\":[1,4],\"1948\":[1,7],\"1949\":[1,6],\"1950\":[1,6],\"1951\":[1,13],\"1952\":[1,12],\"1953\":[1,9],\"1954\":[1,9],\"1955\":[1,9],\"1956\":[1,11],\"1957\":[1,5],\"1958\":[1,16],\"1959\":[1,4],\"1960\":[1,5],\"1961\":[1,4],\"1962\":[1,6],\"1963\":[1,24],\"1964\":[1,16],\"1965\":[1,17],\"1966\":[1,21],\"1967\":[1,7],\"1968\":[1,9],\"1969\":[1,6],\"1970\":[1,7],\"1971\":[1,15],\"1972\":[1,9],\"1973\":[1,12],\"1974\":[1,6],\"1975\":[1,14],\"1976\":[1,6],\"1977\":[1,5],\"1978\":[1,22],\"1979\":[1,8],\"1980\":[1,9],\"1981\":[1,31],\"1982\":[1,11],\"1983\":[1,11],\"1984\":[1,21],\"1985\":[1,14],\"1986\":[1,11],\"1987\":[1,11],\"1988\":[1,10],\"1989\":[1,10],\"1990\":[1,11],\"1991\":[1,6],\"1992\":[1,9],\"1993\":[1,9],\"1994\":[1,6],\"1995\":[1,4],\"1996\":[1,4],\"1997\":[1,6],\"1998\":[1,8],\"1999\":[1,7],\"2000\":[1,8],\"2001\":[1,7],\"2002\":[1,4],\"2003\":[1,4],\"2004\":[1,4],\"2005\":[1,7],\"2006\":[1,4],\"2007\":[1,6],\"2008\":[1,17],\"2009\":[1,9],\"2010\":[1,7],\"2011\":[1,10],\"2012\":[1,11],\"2013\":[1,14],\"2014\":[1,7],\"2015\":[2,2],\"2016\":[1,15],\"2017\":[1,18],\"2018\":[1,12],\"2019\":[1,10],\"2020\":[1,16],\"2021\":[1,5],\"2022\":[1,7],\"2023\":[3],\"2024\":[1,9],\"2025\":[1,11],\"2026\":[1,8],\"2027\":[3,11],\"2028\":[1,16],\"2029\":[1,5],\"2030\":[1,4],\"2031\":[1,4],\"2032\":[1,5],\"2033\":[1,5],\"2034\":[1,8],\"2035\":[1,17],\"2036\":[1,13],\"2037\":[1,4],\"2038\":[1,7],\"2039\":[1,4],\"2040\":[1,4],\"2041\":[1,4],\"2042\":[1,5],\"2043\":[1,5],\"2044\":[1,6],\"2045\":[3,11],\"2046\":[1,7],\"2047\":[1,10],\"2048\":[1,9],\"2049\":[1,9],\"2050\":[1,7],\"2051\":[1,5],\"2052\":[1,10],\"2053\":[1,7],\"2054\":[1,13],\"2055\":[1,13],\"2056\":[1,9],\"2057\":[1,9],\"2058\":[1,5],\"2059\":[1,5],\"2060\":[1,5],\"2061\":[1,7],\"2062\":[1,5],\"2063\":[1,5],\"2064\":[1,17],\"2065\":[1,9],\"2066\":[1,4],\"2067\":[1,7],\"2068\":[1,6],\"2069\":[1,4],\"2070\":[1,4],\"2071\":[1,5],\"2072\":[1,5],\"2073\":[3,13],\"2074\":[1,16],\"2075\":[1,5],\"2076\":[1,4],\"2077\":[1,4],\"2078\":[1,5],\"2079\":[1,5],\"2080\":[1,17],\"2081\":[1,6],\"2082\":[2,3],\"2083\":[1,7],\"2084\":[1,6],\"2085\":[1,6],\"2086\":[1,9],\"2087\":[1,9],\"2088\":[1,4],\"2089\":[1,8],\"2090\":[1,9],\"2091\":[1,8],\"2092\":[1,7],\"2093\":[1,5],\"2094\":[1,7],\"2095\":[1,13],\"2096\":[1,4],\"2097\":[1,4],\"2098\":[1,6],\"2099\":[1,11],\"2100\":[1,4],\"2101\":[1,6],\"2102\":[1,7],\"2103\":[1,7],\"2104\":[1,7],\"2105\":[1,13],\"2106\":[1,13],\"2107\":[1,8],\"2108\":[1,4],\"2109\":[1,5],\"2110\":[1,9],\"2111\":[1,21],\"2112\":[1,5],\"2113\":[1,12],\"2114\":[1,4],\"2115\":[1,4],\"2116\":[1,29],\"2117\":[1,13],\"2118\":[1,8],\"2119\":[1,4],\"2120\":[1,4],\"2121\":[1,4],\"2122\":[1,8],\"2123\":[1,11],\"2124\":[1,11],\"2125\":[1,9],\"2126\":[1,9],\"2127\":[1,12],\"2128\":[1,10],\"2129\":[1,10],\"2130\":[1,5],\"2131\":[1,11],\"2132\":[1,5],\"2133\":[1,16],\"2134\":[3,4],\"2135\":[1,9],\"2136\":[1,5],\"2137\":[1,7],\"2138\":[1,9],\"2139\":[1,10],\"2140\":[3,11],\"2141\":[1,5],\"2142\":[1,5],\"2143\":[1,10],\"2144\":[1,7],\"2145\":[1,13],\"2146\":[1,13],\"2147\":[1,9],\"2148\":[1,9],\"2149\":[1,5],\"2150\":[1,4],\"2151\":[1,5],\"2152\":[1,6],\"2153\":[1,5],\"2154\":[1,5],\"2155\":[1,17],\"2156\":[1,11],\"2157\":[1,4],\"2158\":[1,7],\"2159\":[1,6],\"2160\":[1,4],\"2161\":[1,4],\"2162\":[1,5],\"2163\":[1,5],\"2164\":[3,12],\"2165\":[1,9],\"2166\":[1,5],\"2167\":[1,8],\"2168\":[1,10],\"2169\":[1,4],\"2170\":[1,7],\"2171\":[1,6],\"2172\":[1,4],\"2173\":[1,4],\"2174\":[1,5],\"2175\":[1,5],\"2176\":[1,6],\"2177\":[2,4],\"2178\":[1,31],\"2179\":[1,23],\"2180\":[1,14],\"2181\":[1,8],\"2182\":[1,9],\"2183\":[1,7],\"2184\":[3,2],\"2185\":[1,20],\"2186\":[1,13],\"2187\":[1,17],\"2188\":[1,29],\"2189\":[1,33],\"2190\":[1,12],\"2191\":[1,12],\"2192\":[1,12],\"2193\":[1,17],\"2194\":[3,5],\"2195\":[1,15],\"2196\":[1,6],\"2197\":[1,6],\"2198\":[1,6],\"2199\":[1,6],\"2200\":[1,11],\"2201\":[1,8],\"2202\":[1,2],\"2203\":[1,11],\"2204\":[1,7],\"2205\":[1,6],\"2206\":[1,5],\"2207\":[3,2],\"2208\":[1,5],\"2209\":[1,4],\"2210\":[1,4],\"2211\":[1,4],\"2212\":[1,7],\"2213\":[1,6],\"2214\":[1,7],\"2215\":[1,17],\"2216\":[1,6],\"2217\":[1,10],\"2218\":[1,4],\"2219\":[1,9],\"2220\":[1,4],\"2221\":[1,4],\"2222\":[1,4],\"2223\":[1,6],\"2224\":[1,6],\"2225\":[1,5],\"2226\":[1,4],\"2227\":[3,2],\"2228\":[1,9],\"2229\":[1,16],\"2230\":[1,16],\"2231\":[1,10],\"2232\":[1,45],\"2233\":[1,42],\"2234\":[1,42],\"2235\":[1,42],\"2236\":[1,42],\"2237\":[1,49],\"2238\":[1,49],\"2239\":[1,49],\"2240\":[1,47],\"2241\":[1,59],\"2242\":[1,69],\"2243\":[1,56],\"2244\":[1,47],\"2245\":[1,32],\"2246\":[1,53],\"2247\":[1,57],\"2248\":[1,29],\"2249\":[1,45],\"2250\":[1,42],\"2251\":[1,42],\"2252\":[1,42],\"2253\":[1,42],\"2254\":[1,49],\"2255\":[1,49],\"2256\":[1,49],\"2257\":[1,47],\"2258\":[1,59],\"2259\":[1,69],\"2260\":[1,56],\"2261\":[1,47],\"2262\":[2,59],\"2263\":[1,103],\"2264\":[3,27],\"2265\":[1,47],\"2266\":[1,123],\"2267\":[3,28],\"2268\":[1,23],\"2269\":[4,71],\"2270\":[1,35],\"2271\":[3,60],\"2272\":[3,65],\"2273\":[1,46],\"2274\":[1,51],\"2275\":[1,19],\"2276\":[1,34],\"2277\":[1,23],\"2278\":[1,82],\"2279\":[1,62],\"2280\":[1,28],\"2281\":[1,32],\"2282\":[1,75],\"2283\":[1,31],\"2284\":[1],\"2285\":[4,7],\"2286\":[4,12],\"2287\":[3,9],\"2288\":[3,13],\"2289\":[4,13],\"2290\":[3,13],\"2291\":[3,12],\"2292\":[4,8],\"2293\":[3,6],\"2294\":[4,6],\"2295\":[1,17],\"2296\":[1],\"2297\":[1,28],\"2298\":[1,22],\"2299\":[1,5],\"2300\":[1,23],\"2301\":[1,14],\"2302\":[1,14],\"2303\":[1,10],\"2304\":[1],\"2305\":[3,18],\"2306\":[2,39],\"2307\":[3,20],\"2308\":[2,25],\"2309\":[1,18],\"2310\":[3,82],\"2311\":[3,67],\"2312\":[3,1],\"2313\":[3,1],\"2314\":[2,8],\"2315\":[1,21],\"2316\":[1,4],\"2317\":[1,7],\"2318\":[1,6],\"2319\":[1,6],\"2320\":[1,13],\"2321\":[1,12],\"2322\":[1,9],\"2323\":[1,9],\"2324\":[1,9],\"2325\":[1,11],\"2326\":[1,5],\"2327\":[1,16],\"2328\":[1,4],\"2329\":[1,5],\"2330\":[1,4],\"2331\":[1,6],\"2332\":[1,24],\"2333\":[1,16],\"2334\":[1,17],\"2335\":[1,21],\"2336\":[1,7],\"2337\":[1,9],\"2338\":[1,6],\"2339\":[1,7],\"2340\":[1,15],\"2341\":[1,9],\"2342\":[1,12],\"2343\":[1,6],\"2344\":[1,14],\"2345\":[1,6],\"2346\":[1,5],\"2347\":[1,22],\"2348\":[1,8],\"2349\":[1,9],\"2350\":[1,31],\"2351\":[1,11],\"2352\":[1,11],\"2353\":[1,21],\"2354\":[1,14],\"2355\":[1,11],\"2356\":[1,11],\"2357\":[1,10],\"2358\":[1,10],\"2359\":[1,11],\"2360\":[1,6],\"2361\":[1,9],\"2362\":[1,9],\"2363\":[1,6],\"2364\":[1,4],\"2365\":[1,4],\"2366\":[1,6],\"2367\":[1,8],\"2368\":[1,7],\"2369\":[1,8],\"2370\":[1,7],\"2371\":[1,4],\"2372\":[1,4],\"2373\":[1,4],\"2374\":[1,7],\"2375\":[1,4],\"2376\":[1,6],\"2377\":[1,17],\"2378\":[1,9],\"2379\":[1,7],\"2380\":[1,10],\"2381\":[1,11],\"2382\":[1,14],\"2383\":[1,7],\"2384\":[2,2],\"2385\":[1,15],\"2386\":[1,18],\"2387\":[1,12],\"2388\":[1,10],\"2389\":[1,16],\"2390\":[1,5],\"2391\":[1,7],\"2392\":[3],\"2393\":[1,9],\"2394\":[1,11],\"2395\":[1,8],\"2396\":[3,11],\"2397\":[1,16],\"2398\":[1,5],\"2399\":[1,4],\"2400\":[1,4],\"2401\":[1,5],\"2402\":[1,5],\"2403\":[1,8],\"2404\":[1,17],\"2405\":[1,13],\"2406\":[1,4],\"2407\":[1,7],\"2408\":[1,4],\"2409\":[1,4],\"2410\":[1,4],\"2411\":[1,5],\"2412\":[1,5],\"2413\":[1,6],\"2414\":[3,11],\"2415\":[1,7],\"2416\":[1,10],\"2417\":[1,9],\"2418\":[1,9],\"2419\":[1,7],\"2420\":[1,5],\"2421\":[1,10],\"2422\":[1,7],\"2423\":[1,13],\"2424\":[1,13],\"2425\":[1,9],\"2426\":[1,9],\"2427\":[1,5],\"2428\":[1,5],\"2429\":[1,5],\"2430\":[1,7],\"2431\":[1,5],\"2432\":[1,5],\"2433\":[1,17],\"2434\":[1,9],\"2435\":[1,4],\"2436\":[1,7],\"2437\":[1,6],\"2438\":[1,4],\"2439\":[1,4],\"2440\":[1,5],\"2441\":[1,5],\"2442\":[3,13],\"2443\":[1,16],\"2444\":[1,5],\"2445\":[1,4],\"2446\":[1,4],\"2447\":[1,5],\"2448\":[1,5],\"2449\":[1,17],\"2450\":[1,6],\"2451\":[2,3],\"2452\":[1,7],\"2453\":[1,6],\"2454\":[1,6],\"2455\":[1,9],\"2456\":[1,9],\"2457\":[1,4],\"2458\":[1,8],\"2459\":[1,9],\"2460\":[1,8],\"2461\":[1,7],\"2462\":[1,5],\"2463\":[1,7],\"2464\":[1,13],\"2465\":[1,4],\"2466\":[1,4],\"2467\":[1,6],\"2468\":[1,11],\"2469\":[1,4],\"2470\":[1,6],\"2471\":[1,7],\"2472\":[1,7],\"2473\":[1,7],\"2474\":[1,13],\"2475\":[1,13],\"2476\":[1,8],\"2477\":[1,4],\"2478\":[1,5],\"2479\":[1,9],\"2480\":[1,21],\"2481\":[1,5],\"2482\":[1,12],\"2483\":[1,4],\"2484\":[1,4],\"2485\":[1,29],\"2486\":[1,13],\"2487\":[1,8],\"2488\":[1,4],\"2489\":[1,4],\"2490\":[1,4],\"2491\":[1,8],\"2492\":[1,11],\"2493\":[1,11],\"2494\":[1,9],\"2495\":[1,9],\"2496\":[1,12],\"2497\":[1,10],\"2498\":[1,10],\"2499\":[1,5],\"2500\":[1,11],\"2501\":[1,5],\"2502\":[1,16],\"2503\":[3,4],\"2504\":[1,9],\"2505\":[1,5],\"2506\":[1,7],\"2507\":[1,9],\"2508\":[1,10],\"2509\":[3,11],\"2510\":[1,5],\"2511\":[1,5],\"2512\":[1,10],\"2513\":[1,7],\"2514\":[1,13],\"2515\":[1,13],\"2516\":[1,9],\"2517\":[1,9],\"2518\":[1,5],\"2519\":[1,4],\"2520\":[1,5],\"2521\":[1,6],\"2522\":[1,5],\"2523\":[1,5],\"2524\":[1,17],\"2525\":[1,11],\"2526\":[1,4],\"2527\":[1,7],\"2528\":[1,6],\"2529\":[1,4],\"2530\":[1,4],\"2531\":[1,5],\"2532\":[1,5],\"2533\":[3,12],\"2534\":[1,9],\"2535\":[1,5],\"2536\":[1,8],\"2537\":[1,10],\"2538\":[1,4],\"2539\":[1,7],\"2540\":[1,6],\"2541\":[1,4],\"2542\":[1,4],\"2543\":[1,5],\"2544\":[1,5],\"2545\":[1,6],\"2546\":[2,4],\"2547\":[1,31],\"2548\":[1,23],\"2549\":[1,14],\"2550\":[1,8],\"2551\":[1,9],\"2552\":[1,7],\"2553\":[3,2],\"2554\":[1,20],\"2555\":[1,13],\"2556\":[1,17],\"2557\":[1,29],\"2558\":[1,33],\"2559\":[1,12],\"2560\":[1,12],\"2561\":[1,12],\"2562\":[1,17],\"2563\":[3,5],\"2564\":[1,15],\"2565\":[1,6],\"2566\":[1,6],\"2567\":[1,6],\"2568\":[1,6],\"2569\":[1,11],\"2570\":[1,8],\"2571\":[1,2],\"2572\":[1,11],\"2573\":[1,7],\"2574\":[1,6],\"2575\":[1,5],\"2576\":[3,2],\"2577\":[1,5],\"2578\":[1,4],\"2579\":[1,4],\"2580\":[1,4],\"2581\":[1,7],\"2582\":[1,6],\"2583\":[1,7],\"2584\":[1,17],\"2585\":[1,6],\"2586\":[1,10],\"2587\":[1,4],\"2588\":[1,9],\"2589\":[1,4],\"2590\":[1,4],\"2591\":[1,4],\"2592\":[1,6],\"2593\":[1,6],\"2594\":[1,5],\"2595\":[1,4],\"2596\":[3,2],\"2597\":[1,9],\"2598\":[1,16],\"2599\":[1,16],\"2600\":[1,10],\"2601\":[1,45],\"2602\":[1,42],\"2603\":[1,42],\"2604\":[1,42],\"2605\":[1,42],\"2606\":[1,49],\"2607\":[1,49],\"2608\":[1,49],\"2609\":[1,47],\"2610\":[1,59],\"2611\":[1,69],\"2612\":[1,56],\"2613\":[1,47],\"2614\":[1,32],\"2615\":[1,53],\"2616\":[1,57],\"2617\":[1,29],\"2618\":[1,45],\"2619\":[1,42],\"2620\":[1,42],\"2621\":[1,42],\"2622\":[1,42],\"2623\":[1,49],\"2624\":[1,49],\"2625\":[1,49],\"2626\":[1,47],\"2627\":[1,59],\"2628\":[1,69],\"2629\":[1,56],\"2630\":[1,47],\"2631\":[2,59],\"2632\":[1,103],\"2633\":[3,27],\"2634\":[1,47],\"2635\":[1,123],\"2636\":[3,28],\"2637\":[1,23],\"2638\":[4,71],\"2639\":[1,35],\"2640\":[3,60],\"2641\":[3,65],\"2642\":[1,46],\"2643\":[1,51],\"2644\":[1,19],\"2645\":[1,34],\"2646\":[1,23],\"2647\":[1,82],\"2648\":[1,62],\"2649\":[1,28],\"2650\":[1,32],\"2651\":[1,75],\"2652\":[1,31],\"2653\":[1],\"2654\":[4,7],\"2655\":[4,12],\"2656\":[3,9],\"2657\":[3,13],\"2658\":[4,13],\"2659\":[3,13],\"2660\":[3,12],\"2661\":[4,8],\"2662\":[3,6],\"2663\":[4,6],\"2664\":[1,17],\"2665\":[1],\"2666\":[1,28],\"2667\":[1,22],\"2668\":[1,5],\"2669\":[1,23],\"2670\":[1,14],\"2671\":[1,14],\"2672\":[1,10],\"2673\":[1],\"2674\":[3,18],\"2675\":[2,39],\"2676\":[3,20],\"2677\":[2,25],\"2678\":[1,18],\"2679\":[3,82],\"2680\":[3,67],\"2681\":[3,1],\"2682\":[3,1],\"2683\":[1,18],\"2684\":[1],\"2685\":[1,64],\"2686\":[1,210],\"2687\":[1,117],\"2688\":[1,70],\"2689\":[1,6],\"2690\":[1],\"2691\":[1,47],\"2692\":[3,45],\"2693\":[1],\"2694\":[1,40],\"2695\":[1,34],\"2696\":[1,52],\"2697\":[1,113],\"2698\":[1,18],\"2699\":[1],\"2700\":[1,64],\"2701\":[1,210],\"2702\":[1,117],\"2703\":[1,70],\"2704\":[1,6],\"2705\":[1],\"2706\":[1,47],\"2707\":[3,45],\"2708\":[1],\"2709\":[1,40],\"2710\":[1,34],\"2711\":[1,52],\"2712\":[1,113],\"2713\":[1,18],\"2714\":[1],\"2715\":[1,64],\"2716\":[1,210],\"2717\":[1,117],\"2718\":[1,70],\"2719\":[1,6],\"2720\":[1],\"2721\":[1,47],\"2722\":[3,45],\"2723\":[1],\"2724\":[1,40],\"2725\":[1,34],\"2726\":[1,52],\"2727\":[1,113],\"2728\":[1,3],\"2729\":[1,3],\"2730\":[1,3],\"2731\":[1,3],\"2732\":[1,6],\"2733\":[1,5],\"2734\":[1,5],\"2735\":[1,3],\"2736\":[1,3],\"2737\":[1,3],\"2738\":[1,3],\"2739\":[1,6],\"2740\":[1,5],\"2741\":[1,5],\"2742\":[1,3],\"2743\":[1,3],\"2744\":[1,3],\"2745\":[1,3],\"2746\":[1,6],\"2747\":[1,5],\"2748\":[1,5],\"2749\":[1,5],\"2750\":[1,5],\"2751\":[1,5],\"2752\":[1,3],\"2753\":[1],\"2754\":[1],\"2755\":[1],\"2756\":[2],\"2757\":[1],\"2758\":[1],\"2759\":[1],\"2760\":[1],\"2761\":[1],\"2762\":[1],\"2763\":[2],\"2764\":[1],\"2765\":[1],\"2766\":[1],\"2767\":[1],\"2768\":[1],\"2769\":[1],\"2770\":[2],\"2771\":[1],\"2772\":[1],\"2773\":[1],\"2774\":[1],\"2775\":[1],\"2776\":[1],\"2777\":[1],\"2778\":[1],\"2779\":[1],\"2780\":[1],\"2781\":[1],\"2782\":[1],\"2783\":[1]},\"averageFieldLength\":[1.20258620689655,18.53183108358751],\"storedFields\":{\"0\":{\"h\":\"概览\",\"t\":[\"NoneBot2 是一个现代、跨平台、可扩展的 Python 聊天机器人框架（下称 NoneBot），它基于 Python 的类型注解和异步优先特性（兼容同步），能够为你的需求实现提供便捷灵活的支持。同时，NoneBot 拥有大量的开发者为其开发插件，用户无需编写任何代码，仅需完成环境配置及插件安装，就可以正常使用 NoneBot。\",\"需要注意的是，NoneBot 仅支持 Python 3.9 以上版本\"]},\"1\":{\"h\":\"特色\"},\"2\":{\"h\":\"异步优先\",\"t\":[\"NoneBot 基于 Python asyncio / trio 编写，并在异步机制的基础上进行了一定程度的同步函数兼容。\"]},\"3\":{\"h\":\"完整的类型注解\",\"t\":[\"NoneBot 参考 PEP 484 等 PEP 完整实现了类型注解，通过 Pyright（Pylance） 检查。配合编辑器的类型推导功能，能将绝大多数的 Bug 杜绝在编辑器中（编辑器支持）。\"]},\"4\":{\"h\":\"开箱即用\",\"t\":[\"NoneBot 提供了使用便捷、具有交互式功能的命令行工具--nb-cli，使得用户初次接触 NoneBot 时更容易上手。使用方法请阅读本文档指南以及 CLI 文档。\"]},\"5\":{\"h\":\"插件系统\",\"t\":[\"插件系统是 NoneBot 的核心，通过它可以实现机器人的模块化以及功能扩展，便于维护和管理。\"]},\"6\":{\"h\":\"依赖注入系统\",\"t\":[\"NoneBot 采用了一套自行定义的依赖注入系统，可以让事件的处理过程更加的简洁、清晰，增加代码的可读性，减少代码冗余。\"]},\"7\":{\"h\":\"什么是依赖注入\",\"t\":[\"『依赖注入』意思是，在编程中，有一种方法可以让你的代码声明它工作和使用所需要的东西，即**『依赖』**。\",\"系统（在这里是指 NoneBot）将负责做任何需要的事情，为你的代码提供这些必要依赖（即**『注入』**依赖性）\",\"这在你有以下情形的需求时非常有用：\",\"这部分代码拥有共享的逻辑（同样的代码逻辑多次重复）\",\"共享数据库以及网络请求连接会话 \",\"比如 httpx.AsyncClient、aiohttp.ClientSession 和 sqlalchemy.Session\",\"机器人用户权限检查以及认证\",\"还有更多...\",\"它在完成上述工作的同时，还能尽量减少代码的耦合和重复\"]},\"8\":{\"h\":\"编辑器支持\",\"t\":[\"框架基于 PEP484、PEP 561、PEP8 等规范进行开发并且拥有完整类型注解。框架使用 Pyright（Pylance）工具进行类型检查，确保代码可以被编辑器正确解析。\"]},\"9\":{\"h\":\"编辑器推荐配置\"},\"10\":{\"h\":\"Visual Studio Code\",\"t\":[\"在 Visual Studio Code 中，可以使用 Pylance Language Server 并启用 Type Checking 配置以达到最佳开发体验。\",\"在 VSCode 插件视图搜索并安装 Python (ms-python.python) 和 Pylance (ms-python.vscode-pylance) 插件。\",\"修改 VSCode 配置 在 VSCode 设置视图搜索配置项 Python: Language Server 并将其值设置为 Pylance，搜索配置项 Python > Analysis: Type Checking Mode 并将其值设置为 basic。\",\"或者向项目 .vscode 文件夹中配置文件添加以下内容：\",\"{ \\\"python.languageServer\\\": \\\"Pylance\\\", \\\"python.analysis.typeCheckingMode\\\": \\\"basic\\\" }\"]},\"11\":{\"h\":\"其他\",\"t\":[\"欢迎提交 Pull Request 添加其他编辑器配置推荐。点击左下角 Edit this page 前往编辑。\"]},\"12\":{\"h\":\"概览\",\"t\":[\"NoneBot2 是一个现代、跨平台、可扩展的 Python 聊天机器人框架（下称 NoneBot），它基于 Python 的类型注解和异步优先特性（兼容同步），能够为你的需求实现提供便捷灵活的支持。同时，NoneBot 拥有大量的开发者为其开发插件，用户无需编写任何代码，仅需完成环境配置及插件安装，就可以正常使用 NoneBot。\",\"需要注意的是，NoneBot 仅支持 Python 3.9 以上版本\"]},\"13\":{\"h\":\"特色\"},\"14\":{\"h\":\"异步优先\",\"t\":[\"NoneBot 基于 Python asyncio / trio 编写，并在异步机制的基础上进行了一定程度的同步函数兼容。\"]},\"15\":{\"h\":\"完整的类型注解\",\"t\":[\"NoneBot 参考 PEP 484 等 PEP 完整实现了类型注解，通过 Pyright（Pylance） 检查。配合编辑器的类型推导功能，能将绝大多数的 Bug 杜绝在编辑器中（编辑器支持）。\"]},\"16\":{\"h\":\"开箱即用\",\"t\":[\"NoneBot 提供了使用便捷、具有交互式功能的命令行工具--nb-cli，使得用户初次接触 NoneBot 时更容易上手。使用方法请阅读本文档指南以及 CLI 文档。\"]},\"17\":{\"h\":\"插件系统\",\"t\":[\"插件系统是 NoneBot 的核心，通过它可以实现机器人的模块化以及功能扩展，便于维护和管理。\"]},\"18\":{\"h\":\"依赖注入系统\",\"t\":[\"NoneBot 采用了一套自行定义的依赖注入系统，可以让事件的处理过程更加的简洁、清晰，增加代码的可读性，减少代码冗余。\"]},\"19\":{\"h\":\"什么是依赖注入\",\"t\":[\"『依赖注入』意思是，在编程中，有一种方法可以让你的代码声明它工作和使用所需要的东西，即**『依赖』**。\",\"系统（在这里是指 NoneBot）将负责做任何需要的事情，为你的代码提供这些必要依赖（即**『注入』**依赖性）\",\"这在你有以下情形的需求时非常有用：\",\"这部分代码拥有共享的逻辑（同样的代码逻辑多次重复）\",\"共享数据库以及网络请求连接会话 \",\"比如 httpx.AsyncClient、aiohttp.ClientSession 和 sqlalchemy.Session\",\"机器人用户权限检查以及认证\",\"还有更多...\",\"它在完成上述工作的同时，还能尽量减少代码的耦合和重复\"]},\"20\":{\"h\":\"编辑器支持\",\"t\":[\"框架基于 PEP484、PEP 561、PEP8 等规范进行开发并且拥有完整类型注解。框架使用 Pyright（Pylance）工具进行类型检查，确保代码可以被编辑器正确解析。\"]},\"21\":{\"h\":\"编辑器推荐配置\"},\"22\":{\"h\":\"Visual Studio Code\",\"t\":[\"在 Visual Studio Code 中，可以使用 Pylance Language Server 并启用 Type Checking 配置以达到最佳开发体验。\",\"在 VSCode 插件视图搜索并安装 Python (ms-python.python) 和 Pylance (ms-python.vscode-pylance) 插件。\",\"修改 VSCode 配置 在 VSCode 设置视图搜索配置项 Python: Language Server 并将其值设置为 Pylance，搜索配置项 Python > Analysis: Type Checking Mode 并将其值设置为 basic。\",\"或者向项目 .vscode 文件夹中配置文件添加以下内容：\",\"{ \\\"python.languageServer\\\": \\\"Pylance\\\", \\\"python.analysis.typeCheckingMode\\\": \\\"basic\\\" }\"]},\"23\":{\"h\":\"其他\",\"t\":[\"欢迎提交 Pull Request 添加其他编辑器配置推荐。点击左下角 Edit this page 前往编辑。\"]},\"24\":{\"h\":\"概览\",\"t\":[\"NoneBot2 是一个现代、跨平台、可扩展的 Python 聊天机器人框架（下称 NoneBot），它基于 Python 的类型注解和异步优先特性（兼容同步），能够为你的需求实现提供便捷灵活的支持。同时，NoneBot 拥有大量的开发者为其开发插件，用户无需编写任何代码，仅需完成环境配置及插件安装，就可以正常使用 NoneBot。\",\"需要注意的是，NoneBot 仅支持 Python 3.9 以上版本\"]},\"25\":{\"h\":\"特色\"},\"26\":{\"h\":\"异步优先\",\"t\":[\"NoneBot 基于 Python asyncio / trio 编写，并在异步机制的基础上进行了一定程度的同步函数兼容。\"]},\"27\":{\"h\":\"完整的类型注解\",\"t\":[\"NoneBot 参考 PEP 484 等 PEP 完整实现了类型注解，通过 Pyright（Pylance） 检查。配合编辑器的类型推导功能，能将绝大多数的 Bug 杜绝在编辑器中（编辑器支持）。\"]},\"28\":{\"h\":\"开箱即用\",\"t\":[\"NoneBot 提供了使用便捷、具有交互式功能的命令行工具--nb-cli，使得用户初次接触 NoneBot 时更容易上手。使用方法请阅读本文档指南以及 CLI 文档。\"]},\"29\":{\"h\":\"插件系统\",\"t\":[\"插件系统是 NoneBot 的核心，通过它可以实现机器人的模块化以及功能扩展，便于维护和管理。\"]},\"30\":{\"h\":\"依赖注入系统\",\"t\":[\"NoneBot 采用了一套自行定义的依赖注入系统，可以让事件的处理过程更加的简洁、清晰，增加代码的可读性，减少代码冗余。\"]},\"31\":{\"h\":\"什么是依赖注入\",\"t\":[\"『依赖注入』意思是，在编程中，有一种方法可以让你的代码声明它工作和使用所需要的东西，即**『依赖』**。\",\"系统（在这里是指 NoneBot）将负责做任何需要的事情，为你的代码提供这些必要依赖（即**『注入』**依赖性）\",\"这在你有以下情形的需求时非常有用：\",\"这部分代码拥有共享的逻辑（同样的代码逻辑多次重复）\",\"共享数据库以及网络请求连接会话 \",\"比如 httpx.AsyncClient、aiohttp.ClientSession 和 sqlalchemy.Session\",\"机器人用户权限检查以及认证\",\"还有更多...\",\"它在完成上述工作的同时，还能尽量减少代码的耦合和重复\"]},\"32\":{\"h\":\"编辑器支持\",\"t\":[\"框架基于 PEP484、PEP 561、PEP8 等规范进行开发并且拥有完整类型注解。框架使用 Pyright（Pylance）工具进行类型检查，确保代码可以被编辑器正确解析。\"]},\"33\":{\"h\":\"编辑器推荐配置\"},\"34\":{\"h\":\"Visual Studio Code\",\"t\":[\"在 Visual Studio Code 中，可以使用 Pylance Language Server 并启用 Type Checking 配置以达到最佳开发体验。\",\"在 VSCode 插件视图搜索并安装 Python (ms-python.python) 和 Pylance (ms-python.vscode-pylance) 插件。\",\"修改 VSCode 配置 在 VSCode 设置视图搜索配置项 Python: Language Server 并将其值设置为 Pylance，搜索配置项 Python > Analysis: Type Checking Mode 并将其值设置为 basic。\",\"或者向项目 .vscode 文件夹中配置文件添加以下内容：\",\"{ \\\"python.languageServer\\\": \\\"Pylance\\\", \\\"python.analysis.typeCheckingMode\\\": \\\"basic\\\" }\"]},\"35\":{\"h\":\"其他\",\"t\":[\"欢迎提交 Pull Request 添加其他编辑器配置推荐。点击左下角 Edit this page 前往编辑。\"]},\"36\":{\"h\":\"使用适配器\",\"t\":[\"适配器 (Adapter) 是机器人与平台交互的核心桥梁，它负责在驱动器和机器人插件之间转换与传递消息。\"]},\"37\":{\"h\":\"适配器功能与组成\",\"t\":[\"适配器通常有两种功能，分别是接收事件和调用平台接口。其中，接收事件是指将驱动器收到的事件消息转换为 NoneBot 定义的事件模型，然后交由机器人插件处理；调用平台接口是指将机器人插件调用平台接口的数据转换为平台指定的格式，然后交由驱动器发送，并接收接口返回数据。\",\"为了实现这两种功能，适配器通常由四个部分组成：\",\"Adapter：负责转换事件和调用接口，正确创建 Bot 对象并注册到 NoneBot 中。\",\"Bot：负责存储平台机器人相关信息，并提供回复事件的方法。\",\"Event：负责定义事件内容，以及事件主体对象。\",\"Message：负责正确序列化消息，以便机器人插件处理。\"]},\"38\":{\"h\":\"注册适配器\",\"t\":[\"在使用适配器之前，我们需要先将适配器注册到驱动器中，这样适配器就可以通过驱动器接收事件和调用接口了。我们以 Console 适配器为例，来看看如何注册适配器：\",\"import nonebot from nonebot.adapters.console import Adapter driver = nonebot.get_driver() driver.register_adapter(Adapter)\",\"我们首先需要从适配器模块中导入所需要的适配器类，然后通过驱动器的 register_adapter 方法将适配器注册到驱动器中即可。如果我们需要多平台支持，可以多次调用 register_adapter 方法来注册多个适配器。\"]},\"39\":{\"h\":\"获取已注册的适配器\",\"t\":[\"NoneBot 提供了 get_adapter 方法来获取已注册的适配器，我们可以通过适配器的名称或类型来获取指定的适配器实例：\",\"import nonebot from nonebot.adapters.console import Adapter adapters = nonebot.get_adapters() console_adapter = nonebot.get_adapter(Adapter) console_adapter = nonebot.get_adapter(Adapter.get_name())\"]},\"40\":{\"h\":\"获取 Bot 对象\",\"t\":[\"当前所有适配器已连接的 Bot 对象可以通过 get_bots 方法获取，这是一个以机器人 ID 为键的字典：\",\"import nonebot bots = nonebot.get_bots()\",\"我们也可以通过 get_bot 方法获取指定 ID 的 Bot 对象。如果省略 ID 参数，将会返回所有 Bot 中的第一个：\",\"import nonebot bot = nonebot.get_bot(\\\"bot_id\\\")\",\"如果需要获取指定适配器连接的 Bot 对象，我们可以通过适配器的 bots 属性获取，这也是一个以机器人 ID 为键的字典：\",\"import nonebot from nonebot.adapters.console import Adapter console_adapter = nonebot.get_adapter(Adapter) bots = console_adapter.bots\",\"Bot 对象都具有一个 self_id 属性，它是机器人的唯一 ID，由适配器填写，通常为机器人的帐号 ID 或者 APP ID。\"]},\"41\":{\"h\":\"获取事件通用信息\",\"t\":[\"适配器的所有事件模型均继承自 Event 基类，在事件类型与重载一节中，我们也提到了如何使用基类抽象方法来获取事件通用信息。基类能提供如下信息：\"]},\"42\":{\"h\":\"事件类型\",\"t\":[\"事件类型通常为 meta_event、message、notice、request。\",\"type: str = event.get_type()\"]},\"43\":{\"h\":\"事件名称\",\"t\":[\"事件名称由适配器定义，通常用于日志记录。\",\"name: str = event.get_event_name()\"]},\"44\":{\"h\":\"事件描述\",\"t\":[\"事件描述由适配器定义，通常用于日志记录。\",\"description: str = event.get_event_description()\"]},\"45\":{\"h\":\"事件日志字符串\",\"t\":[\"事件日志字符串由事件名称和事件描述组成，用于日志记录。\",\"log: str = event.get_log_string()\"]},\"46\":{\"h\":\"事件主体 ID\",\"t\":[\"事件主体 ID 通常为机器人用户 ID。\",\"user_id: str = event.get_user_id()\"]},\"47\":{\"h\":\"事件会话 ID\",\"t\":[\"事件会话 ID 通常为机器人用户 ID 与群聊/频道 ID 组合而成。\",\"session_id: str = event.get_session_id()\"]},\"48\":{\"h\":\"事件消息\",\"t\":[\"如果事件包含消息，则可以通过该方法获取，否则会产生异常。\",\"message: Message = event.get_message()\"]},\"49\":{\"h\":\"事件纯文本消息\",\"t\":[\"通常为事件消息的纯文本内容，如果事件不包含消息，则会产生异常。\",\"text: str = event.get_plaintext()\"]},\"50\":{\"h\":\"事件是否与机器人有关\",\"t\":[\"由适配器实现的判断，通常将事件目标主体为机器人、消息中包含“@机器人”或以“机器人的昵称”开始视为与机器人有关。\",\"is_tome: bool = event.is_tome()\"]},\"51\":{\"h\":\"更多\",\"t\":[\"官方支持的适配器和社区贡献的适配器均可在商店中查看。如果你想要开发自己的适配器，可以参考开发文档。欢迎通过商店发布你的适配器。\"]},\"52\":{\"h\":\"选择驱动器\",\"t\":[\"驱动器 (Driver) 是机器人运行的基石，它是机器人初始化的第一步，主要负责数据收发。\",\"提示\",\"驱动器的选择通常与机器人所使用的协议适配器相关，如果不知道该选择哪个驱动器，可以先阅读相关协议适配器文档说明。\",\"提示\",\"如何安装驱动器请参考安装驱动器。\"]},\"53\":{\"h\":\"驱动器类型\",\"t\":[\"驱动器类型大体上可以分为两种：\",\"Forward：即客户端型驱动器，多用于使用 HTTP 轮询，连接 WebSocket 服务器等情形。\",\"Reverse：即服务端型驱动器，多用于使用 WebHook，接收 WebSocket 客户端连接等情形。\",\"客户端型驱动器可以分为以下两种：\",\"异步发送 HTTP 请求，自定义 HTTP Method、URL、Header、Body、Cookie、Proxy、Timeout 等。\",\"异步建立 WebSocket 连接上下文，自定义 WebSocket URL、Header、Cookie、Proxy、Timeout 等。\",\"服务端型驱动器目前有：\",\"ASGI 应用框架，具有以下功能： \",\"协议适配器自定义 HTTP 上报地址以及对上报数据处理的回调函数。\",\"协议适配器自定义 WebSocket 连接请求地址以及对 WebSocket 请求处理的回调函数。\",\"用户可以向 ASGI 应用添加任何服务端相关功能，如：添加自定义路由。\"]},\"54\":{\"h\":\"配置驱动器\",\"t\":[\"驱动器的配置方法已经在配置章节中简单进行了介绍，这里将详细介绍驱动器配置的格式。\",\"NoneBot 中的客户端和服务端型驱动器可以相互配合使用，但服务端型驱动器仅能选择一个。所有驱动器模块都会包含一个 Driver 子类，即驱动器类，他可以作为驱动器单独运行。同时，客户端驱动器模块中还会提供一个 Mixin 子类，用于在与其他驱动器配合使用时加载。因此，驱动器配置格式采用特殊语法：<module>[:<Driver>][+<module>[:<Mixin>]]*。\",\"其中，<module> 代表驱动器模块路径；<Driver> 代表驱动器类名，默认为 Driver；<Mixin> 代表驱动器混入类名，默认为 Mixin。即，我们需要选择一个主要驱动器，然后在其基础上配合使用其他驱动器的功能。主要驱动器可以为客户端或服务端类型，但混入类驱动器只能为客户端类型。\",\"特别的，为了简化内置驱动器模块路径，我们可以使用 ~ 符号作为内置驱动器模块路径的前缀，如 ~fastapi 代表使用内置驱动器 fastapi。NoneBot 内置了多个驱动器适配，但需要安装额外依赖才能使用，具体请参考安装驱动器。常见的驱动器配置如下：\",\"DRIVER=~fastapi DRIVER=~aiohttp DRIVER=~httpx+~websockets DRIVER=~fastapi+~httpx+~websockets\"]},\"55\":{\"h\":\"获取驱动器\",\"t\":[\"在 NoneBot 框架初始化完成后，我们就可以通过 get_driver() 方法获取全局驱动器实例：\",\"from nonebot import get_driver driver = get_driver()\"]},\"56\":{\"h\":\"内置驱动器\"},\"57\":{\"h\":\"None\",\"t\":[\"**类型：**服务端驱动器\",\"NoneBot 内置的空驱动器，不提供任何收发数据功能，可以在不需要外部网络连接时使用。\",\"DRIVER=~none\"]},\"58\":{\"h\":\"FastAPI（默认）\",\"t\":[\"**类型：**ASGI 服务端驱动器\",\"FastAPI is a modern, fast (high-performance), web framework for building APIs with Python 3.6+ based on standard Python type hints.\",\"FastAPI 是一个易上手、高性能的异步 Web 框架，具有极佳的编写体验。 FastAPI 可以通过类型注解、依赖注入等方式实现输入参数校验、自动生成 API 文档等功能，也可以挂载其他 ASGI、WSGI 应用。\",\"DRIVER=~fastapi\"]},\"59\":{\"h\":\"FastAPI 配置项\"},\"60\":{\"h\":\"\",\"t\":[\"类型：str | None 默认值：None 说明：FastAPI 提供的 OpenAPI JSON 定义地址，如果为 None，则不提供 OpenAPI JSON 定义。\"]},\"61\":{\"h\":\"\",\"t\":[\"类型：str | None 默认值：None 说明：FastAPI 提供的 Swagger 文档地址，如果为 None，则不提供 Swagger 文档。\"]},\"62\":{\"h\":\"\",\"t\":[\"类型：str | None 默认值：None 说明：FastAPI 提供的 ReDoc 文档地址，如果为 None，则不提供 ReDoc 文档。\"]},\"63\":{\"h\":\"\",\"t\":[\"类型：bool 默认值：True 说明：FastAPI 提供的 OpenAPI JSON 定义中是否包含适配器路由的 Schema。\"]},\"64\":{\"h\":\"\",\"t\":[\"警告\",\"不推荐开启该配置项，在 Windows 平台上开启该功能有可能会造成预料之外的影响！替代方案：使用 nb-cli 命令行工具以及参数 --reload 启动 NoneBot。\",\"nb run --reload\",\"开启该功能后，在 uvicorn 运行时（FastAPI 提供的 ASGI 底层，即 reload 功能的实际来源），asyncio 使用的事件循环会被 uvicorn 从默认的 ProactorEventLoop 强制切换到 SelectorEventLoop。\",\"相关信息参考 uvicorn#529，uvicorn#1070，uvicorn#1257\",\"后者（SelectorEventLoop）在 Windows 平台的可使用性不如前者（ProactorEventLoop），包括但不限于\",\"不支持创建子进程\",\"最多只支持 512 个套接字\",\"...\",\"具体信息参考 Python 文档\",\"所以，一些使用了 asyncio 的库因此可能无法正常工作，如：\",\"playwright\",\"如果在开启该功能后，原本正常运行的代码报错，且打印的异常堆栈信息和 asyncio 有关（异常一般为 NotImplementedError）， 你可能就需要考虑相关库对事件循环的支持，以及是否启用该功能。\",\"类型：bool 默认值：False 说明：是否开启 uvicorn 的 reload 功能，需要在机器人入口文件提供 ASGI 应用路径。\",\"app = nonebot.get_asgi() nonebot.run(app=\\\"bot:app\\\")\"]},\"65\":{\"h\":\"\",\"t\":[\"类型：List[str] | None 默认值：None 说明：重载监控文件夹列表，默认为 uvicorn 默认值\"]},\"66\":{\"h\":\"\",\"t\":[\"类型：float | None 默认值：None 说明：重载延迟，默认为 uvicorn 默认值\"]},\"67\":{\"h\":\"\",\"t\":[\"类型：List[str] | None 默认值：None 说明：要监听的文件列表，支持 glob pattern，默认为 uvicorn 默认值\"]},\"68\":{\"h\":\"\",\"t\":[\"类型：List[str] | None 默认值：None 说明：不要监听的文件列表，支持 glob pattern，默认为 uvicorn 默认值\"]},\"69\":{\"h\":\"\",\"t\":[\"类型：Dist[str, Any] 默认值：{} 说明：传递给 FastAPI 的其他参数\"]},\"70\":{\"h\":\"Quart\",\"t\":[\"**类型：**ASGI 服务端驱动器\",\"Quart is an asyncio reimplementation of the popular Flask microframework API.\",\"Quart 是一个类 Flask 的异步版本，拥有与 Flask 非常相似的接口和使用方法。\",\"DRIVER=~quart\"]},\"71\":{\"h\":\"Quart 配置项\"},\"72\":{\"h\":\"\",\"t\":[\"警告\",\"不推荐开启该配置项，在 Windows 平台上开启该功能有可能会造成预料之外的影响！替代方案：使用 nb-cli 命令行工具以及参数 --reload 启动 NoneBot。\",\"nb run --reload\",\"类型：bool 默认值：False 说明：是否开启 uvicorn 的 reload 功能，需要在机器人入口文件提供 ASGI 应用路径。\",\"app = nonebot.get_asgi() nonebot.run(app=\\\"bot:app\\\")\"]},\"73\":{\"h\":\"\",\"t\":[\"类型：List[str] | None 默认值：None 说明：重载监控文件夹列表，默认为 uvicorn 默认值\"]},\"74\":{\"h\":\"\",\"t\":[\"类型：float | None 默认值：None 说明：重载延迟，默认为 uvicorn 默认值\"]},\"75\":{\"h\":\"\",\"t\":[\"类型：List[str] | None 默认值：None 说明：要监听的文件列表，支持 glob pattern，默认为 uvicorn 默认值\"]},\"76\":{\"h\":\"\",\"t\":[\"类型：List[str] | None 默认值：None 说明：不要监听的文件列表，支持 glob pattern，默认为 uvicorn 默认值\"]},\"77\":{\"h\":\"\",\"t\":[\"类型：Dist[str, Any] 默认值：{} 说明：传递给 Quart 的其他参数\"]},\"78\":{\"h\":\"HTTPX\",\"t\":[\"**类型：**HTTP 客户端驱动器\",\"注意\",\"本驱动器仅支持 HTTP 请求，不支持 WebSocket 连接请求。\",\"HTTPX is a fully featured HTTP client for Python 3, which provides sync and async APIs, and support for both HTTP/1.1 and HTTP/2.\",\"DRIVER=~httpx\"]},\"79\":{\"h\":\"websockets\",\"t\":[\"**类型：**WebSocket 客户端驱动器\",\"注意\",\"本驱动器仅支持 WebSocket 连接请求，不支持 HTTP 请求。\",\"websockets is a library for building WebSocket servers and clients in Python with a focus on correctness, simplicity, robustness, and performance.\",\"DRIVER=~websockets\"]},\"80\":{\"h\":\"AIOHTTP\",\"t\":[\"**类型：**HTTP/WebSocket 客户端驱动器\",\"AIOHTTP: Asynchronous HTTP Client/Server for asyncio and Python.\",\"DRIVER=~aiohttp\"]},\"81\":{\"h\":\"事件响应器存储\",\"t\":[\"事件响应器是 NoneBot 处理事件的核心，它们默认存储在一个字典中。在进入会话状态后，事件响应器将会转为临时响应器，作为最高优先级同样存储于该字典中。因此，事件响应器的存储类似于会话存储，它决定了整个 NoneBot 对事件的处理行为。\",\"NoneBot 默认使用 Python 的字典将事件响应器存储于内存中，但是我们也可以自定义事件响应器存储，将事件响应器存储于其他地方，例如 Redis 等。这样我们就可以实现持久化、在多实例间共享会话状态等功能。\"]},\"82\":{\"h\":\"编写存储提供者\",\"t\":[\"事件响应器的存储提供者 MatcherProvider 抽象类继承自 MutableMapping[int, list[type[Matcher]]]，即以优先级为键，以事件响应器列表为值的映射。我们可以方便地进行逐优先级事件传播。\",\"编写一个自定义的存储提供者，只需要继承并实现 MatcherProvider 抽象类：\",\"from nonebot.matcher import MatcherProvider class CustomProvider(MatcherProvider): ...\"]},\"83\":{\"h\":\"设置存储提供者\",\"t\":[\"我们可以通过 matchers.set_provider 方法设置存储提供者：\",\"from nonebot.matcher import matchers matchers.set_provider(CustomProvider) assert isinstance(matchers.provider, CustomProvider)\"]},\"84\":{\"h\":\"事件响应器进阶\",\"t\":[\"在指南与深入中，我们已经介绍了事件响应器的基本用法以及响应规则、权限控制等功能。在这一节中，我们将介绍事件响应器的组成，内置的响应规则，与第三方响应规则拓展。\",\"提示\",\"事件响应器允许继承，你可以通过直接继承 Matcher 类来创建一个新的事件响应器。\"]},\"85\":{\"h\":\"事件响应器组成\"},\"86\":{\"h\":\"事件响应器类型\",\"t\":[\"事件响应器类型 type 即是该响应器所要响应的事件类型，只有在接收到的事件类型与该响应器的类型相同时，才会触发该响应器。如果类型为空字符串 \\\"\\\"，则响应器将会响应所有类型的事件。事件响应器类型的检查在所有其他检查（权限控制、响应规则）之前进行。\",\"NoneBot 内置了四种常用事件类型：meta_event、message、notice、request，分别对应元事件、消息、通知、请求。通常情况下，协议适配器会将事件合理地分类至这四种类型中。如果有其他类型的事件需要响应，可以自行定义新的类型。\"]},\"87\":{\"h\":\"事件触发权限\",\"t\":[\"事件触发权限 permission 是一个 Permission 对象，这在权限控制一节中已经介绍过。事件触发权限会在事件响应器的类型检查通过后进行检查，如果权限检查通过，则执行响应规则检查。\"]},\"88\":{\"h\":\"事件响应规则\",\"t\":[\"事件响应规则 rule 是一个 Rule 对象，这在响应规则一节中已经介绍过。事件响应器的响应规则会在事件响应器的权限检查通过后进行匹配，如果响应规则检查通过，则触发该响应器。\"]},\"89\":{\"h\":\"响应优先级\",\"t\":[\"响应优先级 priority 是一个正整数，用于指定响应器的优先级。响应器的优先级越小，越先被触发。如果响应器的优先级相同，则按照响应器的注册顺序进行触发。\"]},\"90\":{\"h\":\"阻断\",\"t\":[\"阻断 block 是一个布尔值，用于指定响应器是否阻断事件的传播。如果阻断为 True，则在该响应器被触发后，事件将不会再传播给其他下一优先级的响应器。\",\"NoneBot 内置的事件响应器中，所有非 command 规则的 message 类型的事件响应器都会阻断事件传递，其他则不会。\",\"在部分情况中，可以使用 stop_propagation 方法动态阻止事件传播，该方法需要 handler 在参数中获取 matcher 实例后调用方法。\"]},\"91\":{\"h\":\"有效期\",\"t\":[\"事件响应器的有效期分为 temp 和 expire_time 。temp 是一个布尔值，用于指定响应器是否为临时响应器。如果为 True，则该响应器在被触发后会被自动销毁。expire_time 是一个 datetime 对象，用于指定响应器的过期时间。如果 expire_time 不为 None，则在该时间点后，该响应器会被自动销毁。\"]},\"92\":{\"h\":\"默认状态\",\"t\":[\"事件响应器的默认状态 default_state 是一个 dict 对象，用于指定响应器的默认状态。在响应器被触发时，响应器将会初始化默认状态然后开始执行事件处理流程。\"]},\"93\":{\"h\":\"基本辅助函数\",\"t\":[\"NoneBot 为四种类型的事件响应器提供了五个基本的辅助函数：\",\"on：创建任何类型的事件响应器。\",\"on_metaevent：创建元事件响应器。\",\"on_message：创建消息事件响应器。\",\"on_request：创建请求事件响应器。\",\"on_notice：创建通知事件响应器。\",\"除了 on 函数具有一个 type 参数外，其余参数均相同：\",\"rule：响应规则，可以是 Rule 对象或者 RuleChecker 函数。\",\"permission：事件触发权限，可以是 Permission 对象或者 PermissionChecker 函数。\",\"handlers：事件处理函数列表。\",\"temp：是否为临时响应器。\",\"expire_time：响应器的过期时间。\",\"priority：响应器的优先级。\",\"block：是否阻断事件传播。\",\"state：响应器的默认状态。\",\"在消息类型的事件响应器的基础上，NoneBot 还内置了一些常用的响应规则，并结合为辅助函数来方便我们快速创建指定功能的响应器。下面我们逐个介绍。\"]},\"94\":{\"h\":\"内置响应规则\",\"t\":[\"提示\",\"响应规则的使用方法可以参考 深入 - 响应规则。\"]},\"95\":{\"h\":\"\",\"t\":[\"startswith 响应规则用于匹配消息纯文本部分的开头是否与指定字符串（或一系列字符串）相同。可选参数 ignorecase 用于指定是否忽略大小写，默认为 False。\",\"例如，我们可以创建一个匹配消息开头为 ! 或者 / 的规则：\",\"from nonebot.rule import startswith rule = startswith((\\\"!\\\", \\\"/\\\"), ignorecase=False)\",\"也可以直接使用辅助函数新建一个响应器：\",\"from nonebot import on_startswith matcher = on_startswith((\\\"!\\\", \\\"/\\\"), ignorecase=False)\"]},\"96\":{\"h\":\"\",\"t\":[\"endswith 响应规则用于匹配消息纯文本部分的结尾是否与指定字符串（或一系列字符串）相同。可选参数 ignorecase 用于指定是否忽略大小写，默认为 False。\",\"例如，我们可以创建一个匹配消息结尾为 . 或者 。 的规则：\",\"from nonebot.rule import endswith rule = endswith((\\\".\\\", \\\"。\\\"), ignorecase=False)\",\"也可以直接使用辅助函数新建一个响应器：\",\"from nonebot import on_endswith matcher = on_endswith((\\\".\\\", \\\"。\\\"), ignorecase=False)\"]},\"97\":{\"h\":\"\",\"t\":[\"fullmatch 响应规则用于匹配消息纯文本部分是否与指定字符串（或一系列字符串）完全相同。可选参数 ignorecase 用于指定是否忽略大小写，默认为 False。\",\"例如，我们可以创建一个匹配消息为 ping 或者 pong 的规则：\",\"from nonebot.rule import fullmatch rule = fullmatch((\\\"ping\\\", \\\"pong\\\"), ignorecase=False)\",\"也可以直接使用辅助函数新建一个响应器：\",\"from nonebot import on_fullmatch matcher = on_fullmatch((\\\"ping\\\", \\\"pong\\\"), ignorecase=False)\"]},\"98\":{\"h\":\"\",\"t\":[\"keyword 响应规则用于匹配消息纯文本部分是否包含指定字符串（或一系列字符串）。\",\"例如，我们可以创建一个匹配消息中包含 hello 或者 hi 的规则：\",\"from nonebot.rule import keyword rule = keyword(\\\"hello\\\", \\\"hi\\\")\",\"也可以直接使用辅助函数新建一个响应器：\",\"from nonebot import on_keyword matcher = on_keyword({\\\"hello\\\", \\\"hi\\\"})\"]},\"99\":{\"h\":\"\",\"t\":[\"command 是最常用的响应规则，它用于匹配消息是否为命令。它会根据配置中的 Command Start 和 Command Separator 来判断消息是否为命令。\",\"例如，当我们配置了 Command Start 为 /，Command Separator 为 . 时：\",\"from nonebot.rule import command # 匹配 \\\"/help\\\" 或者 \\\"/帮助\\\" 开头的消息 rule = command(\\\"help\\\", \\\"帮助\\\") # 匹配 \\\"/help.cmd\\\" 开头的消息 rule = command((\\\"help\\\", \\\"cmd\\\"))\",\"也可以直接使用辅助函数新建一个响应器：\",\"from nonebot import on_command matcher = on_command(\\\"help\\\", aliases={\\\"帮助\\\"})\",\"此外，command 响应规则默认允许消息命令与参数间不加空格，如果需要严格匹配命令与参数间的空白符，可以使用 command 函数的 force_whitespace 参数。force_whitespace 参数可以是 bool 类型或者具体的字符串，默认为 False。如果为 True，则命令与参数间必须有任意个数的空白符；如果为字符串，则命令与参数间必须有且与给定字符串一致的空白符。\",\"rule = command(\\\"help\\\", force_whitespace=True) rule = command(\\\"help\\\", force_whitespace=\\\" \\\")\",\"命令解析后的结果可以通过 Command、RawCommand、CommandArg、CommandStart、CommandWhitespace 依赖注入获取。\"]},\"100\":{\"h\":\"\",\"t\":[\"shell_command 响应规则用于匹配类 shell 命令形式的消息。它首先与 command 响应规则一样进行命令匹配，如果匹配成功，则会进行进一步的参数解析。参数解析采用 argparse 标准库进行，在此基础上添加了消息序列 Message 支持。\",\"例如，我们可以创建一个匹配 /cmd 命令并且带有 -v 选项与默认 -h 帮助选项的规则：\",\"from nonebot.rule import shell_command, ArgumentParser parser = ArgumentParser() parser.add_argument(\\\"-v\\\", \\\"--verbose\\\", action=\\\"store_true\\\") rule = shell_command(\\\"cmd\\\", parser=parser)\",\"更多关于 argparse 的使用方法请参考 argparse 文档。我们也可以选择不提供 parser 参数，这样 shell_command 将不会解析参数，但会提供参数列表 argv。\",\"直接使用辅助函数新建一个响应器：\",\"from nonebot import on_shell_command from nonebot.rule import ArgumentParser parser = ArgumentParser() parser.add_argument(\\\"-v\\\", \\\"--verbose\\\", action=\\\"store_true\\\") matcher = on_shell_command(\\\"cmd\\\", parser=parser)\",\"参数解析后的结果可以通过 ShellCommandArgv、ShellCommandArgs 依赖注入获取。\"]},\"101\":{\"h\":\"\",\"t\":[\"regex 响应规则用于匹配消息是否与指定正则表达式匹配。\",\"提示\",\"正则表达式匹配使用 search 而非 match，如需从头匹配请使用 r\\\"^xxx\\\" 模式来确保匹配开头。\",\"例如，我们可以创建一个匹配消息中包含字母并且忽略大小写的规则：\",\"from nonebot.rule import regex rule = regex(r\\\"[a-z]+\\\", flags=re.IGNORECASE)\",\"也可以直接使用辅助函数新建一个响应器：\",\"from nonebot import on_regex matcher = on_regex(r\\\"[a-z]+\\\", flags=re.IGNORECASE)\",\"正则匹配后的结果可以通过 RegexStr、RegexGroup、RegexDict 依赖注入获取。\"]},\"102\":{\"h\":\"\",\"t\":[\"to_me 响应规则用于匹配事件是否与机器人相关。\",\"例如：\",\"from nonebot.rule import to_me rule = to_me()\"]},\"103\":{\"h\":\"\",\"t\":[\"is_type 响应规则用于匹配事件类型是否为指定类型（或者一系列类型）。\",\"例如，我们可以创建一个匹配 OneBot v11 私聊和群聊消息事件的规则：\",\"from nonebot.rule import is_type from nonebot.adapters.onebot.v11 import PrivateMessageEvent, GroupMessageEvent rule = is_type(PrivateMessageEvent, GroupMessageEvent)\"]},\"104\":{\"h\":\"响应器组\",\"t\":[\"为了更方便的管理一系列功能相近的响应器，NoneBot 提供了两种响应器组，它们可以帮助我们进行响应器的统一管理。\"]},\"105\":{\"h\":\"\",\"t\":[\"CommandGroup 可以用于管理一系列具有相同前置命令的子命令响应器。\",\"例如，我们创建 /cmd、/cmd.sub、/cmd.help 三个命令，他们具有相同的优先级：\",\"from nonebot import CommandGroup group = CommandGroup(\\\"cmd\\\", priority=10) cmd = group.command(tuple()) sub_cmd = group.command(\\\"sub\\\") help_cmd = group.command(\\\"help\\\")\",\"命令别名 aliases 默认不会添加 CommandGroup 设定的前缀，如果需要为 aliases 添加前缀，可以添加 prefix_aliases=True 参数:\",\"from nonebot import CommandGroup group = CommandGroup(\\\"cmd\\\", prefix_aliases=True) cmd = group.command(tuple()) help_cmd = group.command(\\\"help\\\", aliases={\\\"帮助\\\"})\",\"这样就能成功匹配 /cmd、/cmd.help、/cmd.帮助 命令。如果未设置，将默认匹配 /cmd、/cmd.help、/帮助 命令。\"]},\"106\":{\"h\":\"\",\"t\":[\"MatcherGroup 可以用于管理一系列具有相同属性的响应器。\",\"例如，我们创建一个具有相同响应规则的响应器组：\",\"from nonebot.rule import to_me from nonebot import MatcherGroup group = MatcherGroup(rule=to_me()) matcher1 = group.on_message() matcher2 = group.on_message()\"]},\"107\":{\"h\":\"第三方响应规则\"},\"108\":{\"h\":\"Alconna\",\"t\":[\"nonebot-plugin-alconna 是一类提供了拓展响应规则的插件。 该插件使用 Alconna 作为命令解析器， 是一个简单、灵活、高效的命令参数解析器, 并且不局限于解析命令式字符串。\",\"该插件提供了一类新的事件响应器辅助函数 on_alconna，以及 AlconnaResult 等依赖注入函数。\",\"基于 Alconna 的特性，该插件同时提供了一系列便捷的消息段标注。 标注可用于在 Alconna 中匹配消息中除 text 外的其他消息段，也可用于快速创建各适配器下的消息段。所有标注位于 nonebot_plugin_alconna.adapters 中。\",\"该插件同时通过提供 UniMessage (通用消息模型) 实现了跨平台接收和发送消息的功能。\",\"详情请阅读最佳实践中的 命令解析拓展 章节。\"]},\"109\":{\"h\":\"插件信息\",\"t\":[\"NoneBot 是一个插件化的框架，可以通过加载插件来扩展功能。同时，我们也可以通过 NoneBot 的插件系统来获取相关信息，例如插件的名称、使用方法，用于收集帮助信息等。下面我们将介绍如何为插件添加元数据，以及如何获取插件信息。\"]},\"110\":{\"h\":\"插件元数据\",\"t\":[\"在 NoneBot 中，插件 Plugin 对象中存储了插件系统所需要的一系列信息。包括插件的索引名称、插件模块、插件中的事件响应器、插件父子关系等。通常，只有插件开发者才需要关心这些信息，而插件使用者或者机器人用户想要看到的是插件使用方法等帮助信息。因此，我们可以为插件添加插件元数据 PluginMetadata，它允许插件开发者为插件添加一些额外的信息。这些信息编写于插件模块的顶层，可以直接通过源码查看，或者通过 NoneBot 插件系统获取收集到的信息，通过其他方式发送给机器人用户等。\",\"现在，假设我们有一个插件 example, 它的模块结构如下：\",\"📦 awesome-bot ├── 📂 awesome_bot │ └── 📂 plugins | └── 📂 example | ├── 📜 __init__.py | └── 📜 config.py ├── 📜 pyproject.toml └── 📜 README.md\",\"我们需要在插件顶层模块 example/__init__.py 中添加插件元数据，如下所示：\",\"from nonebot.plugin import PluginMetadata from .config import Config __plugin_meta__ = PluginMetadata( name=\\\"示例插件\\\", description=\\\"这是一个示例插件\\\", usage=\\\"没什么用\\\", type=\\\"application\\\", config=Config, extra={}, )\",\"我们可以看到，插件元数据 PluginMetadata 有三个基本属性：插件名称、插件描述、插件使用方法。除此之外，还有几个可选的属性（具体填写见发布插件章节）：\",\"type：插件类别，发布插件必填。当前有效类别有：library（为其他插件编写提供功能），application（向机器人用户提供功能）；\",\"homepage：插件项目主页，发布插件必填；\",\"config：插件的配置类，如无配置类可不填；\",\"supported_adapters：支持的适配器模块名集合，若插件可以保证兼容所有适配器（即仅使用基本适配器功能）可不填写；\",\"extra：一个字典，可以用于存储任意信息。其他插件可以通过约定 extra 字典的键名来达成收集某些特殊信息的目的。\",\"请注意，这里的插件名称是供使用者或机器人用户查看的，与插件索引名称无关。插件索引名称（插件模块名称）仅用于 NoneBot 插件系统内部索引。\"]},\"111\":{\"h\":\"获取插件信息\",\"t\":[\"NoneBot 提供了多种获取插件对象的方法，例如获取当前所有已导入的插件：\",\"import nonebot plugins: set[Plugin] = nonebot.get_loaded_plugins()\",\"也可以通过插件索引名称获取插件对象：\",\"import nonebot plugin: Plugin | None = nonebot.get_plugin(\\\"example\\\")\",\"或者通过模块路径获取插件对象：\",\"import nonebot plugin: Plugin | None = nonebot.get_plugin_by_module_name(\\\"awesome_bot.plugins.example\\\")\",\"如果需要获取所有当前声明的插件名称（可能还未加载），可以使用 get_available_plugin_names 函数：\",\"import nonebot plugin_names: set[str] = nonebot.get_available_plugin_names()\",\"插件对象 Plugin 中包含了多个属性：\",\"name：插件索引名称\",\"module：插件模块\",\"module_name：插件模块路径\",\"manager：插件管理器\",\"matcher：插件中定义的事件响应器\",\"parent_plugin：插件的父插件\",\"sub_plugins：插件的子插件集合\",\"metadata：插件元数据\",\"通过这些属性以及插件元数据，我们就可以收集所需要的插件信息了。\"]},\"112\":{\"h\":\"嵌套插件\",\"t\":[\"NoneBot 支持嵌套插件，即一个插件可以包含其他插件。通过这种方式，我们可以将一个大型插件拆分成多个功能子插件，使得插件更加清晰、易于维护。我们可以直接在插件中使用 NoneBot 加载插件的方法来加载子插件。\"]},\"113\":{\"h\":\"创建嵌套插件\",\"t\":[\"我们可以在使用 nb-cli 命令创建插件时，选择直接通过模板创建一个嵌套插件：\",\"$ nb plugin create [?] 插件名称: parent [?] 使用嵌套插件? (y/N) Y [?] 输出目录: awesome_bot/plugins\",\"或者使用 nb plugin create --sub-plugin 选项直接创建一个嵌套插件。\"]},\"114\":{\"h\":\"已有插件\",\"t\":[\"如果你已经有一个插件，想要在其中嵌套加载子插件，可以在插件的 __init__.py 中添加如下代码：\",\"import nonebot from pathlib import Path sub_plugins = nonebot.load_plugins( str(Path(__file__).parent.joinpath(\\\"plugins\\\").resolve()) )\",\"这样，parent 插件就会加载 parent/plugins 目录下的所有插件。NoneBot 会正确识别这些插件的父子关系，你可以在 parent 的插件信息中看到这些子插件的信息，也可以在子插件信息中看到它们的父插件信息。\"]},\"115\":{\"h\":\"跨插件访问\",\"t\":[\"NoneBot 插件化系统的设计使得插件之间可以功能独立、各司其职，我们可以更好地维护和扩展插件。但是，有时候我们可能需要在不同插件之间调用功能。NoneBot 生态中就有一类插件，它们专为其他插件提供功能支持，如：定时任务插件、数据存储插件等。这时候我们就需要在插件之间进行跨插件访问。\"]},\"116\":{\"h\":\"插件跟踪\",\"t\":[\"由于 NoneBot 插件系统通过 Import Hooks 的方式实现插件加载与跟踪管理，因此我们不能在 NoneBot 跟踪插件前进行模块 import，这会导致插件加载失败。即，我们不能在使用 NoneBot 提供的加载插件方法前，直接使用 import 语句导入插件。\",\"对于在项目目录下的插件，我们通常直接使用 load_from_toml 等方法一次性加载所有插件。由于这些插件已经被声明，即便插件导入顺序不同，NoneBot 也能正确跟踪插件。此时，我们不需要对跨插件访问进行特殊处理。但当我们使用了外部插件，如果没有事先声明或加载插件，NoneBot 并不会将其当作插件进行跟踪，可能会出现意料之外的错误出现。\",\"简单来说，我们必须在 import 外部插件之前，确保依赖的外部插件已经被声明或加载。\"]},\"117\":{\"h\":\"插件依赖声明\",\"t\":[\"NoneBot 提供了一种方法来确保我们依赖的插件已经被正确加载，即使用 require 函数。通过 require 函数，我们可以在当前插件中声明依赖的插件，NoneBot 会在加载当前插件时，检查依赖的插件是否已经被加载，如果没有，会尝试优先加载依赖的插件。\",\"假设我们有一个插件 a 依赖于插件 b，我们可以在插件 a 中使用 require 函数声明其依赖于插件 b：\",\"from nonebot import require require(\\\"b\\\") from b import some_function\",\"其中，require 函数的参数为插件索引名称或者外部插件的模块名称。在完成依赖声明后，我们可以在插件 a 中直接导入插件 b 所提供的功能。\"]},\"118\":{\"h\":\"添加路由\",\"t\":[\"在驱动器一节中，我们了解了驱动器的两种类型。既然驱动器可以作为服务端运行，那么我们就可以向驱动器添加路由规则，从而实现自定义的 API 接口等功能。在添加路由规则时，我们需要注意驱动器的类型，详情可以参考选择驱动器。\",\"NoneBot 中，我们可以通过两种途径向 ASGI 驱动器添加路由规则：\",\"通过 NoneBot 的兼容层建立路由规则。\",\"直接向 ASGI 应用添加路由规则。\",\"这两种途径各有优劣，前者可以在各种服务端型驱动器下运行，但并不能直接使用 ASGI 应用框架提供的特性与功能；后者直接使用 ASGI 应用，更自由、功能完整，但只能在特定类型驱动器下运行。\",\"在向驱动器添加路由规则时，我们需要注意驱动器是否为服务端类型，我们可以通过以下方式判断：\",\"from nonebot import get_driver from nonebot.drivers import ASGIMixin # highlight-next-line can_use = isinstance(get_driver(), ASGIMixin)\"]},\"119\":{\"h\":\"通过兼容层添加路由\",\"t\":[\"NoneBot 兼容层定义了两个数据类 HTTPServerSetup 和 WebSocketServerSetup，分别用于定义 HTTP 服务端和 WebSocket 服务端的路由规则。\"]},\"120\":{\"h\":\"HTTP 路由\",\"t\":[\"HTTPServerSetup 具有四个属性：\",\"path：路由路径，不支持特殊占位表达式。类型为 URL。\",\"method：请求方法。类型为 str。\",\"name：路由名称，不可重复。类型为 str。\",\"handle_func：路由处理函数。类型为 Callable[[Request], Awaitable[Response]]。\",\"例如，我们添加一个 /hello 的路由，当请求方法为 GET 时，返回 200 OK 以及返回体信息：\",\"from nonebot import get_driver from nonebot.drivers import URL, Request, Response, ASGIMixin, HTTPServerSetup async def hello(request: Request) -> Response: return Response(200, content=\\\"Hello, world!\\\") if isinstance((driver := get_driver()), ASGIMixin): driver.setup_http_server( HTTPServerSetup( path=URL(\\\"/hello\\\"), method=\\\"GET\\\", name=\\\"hello\\\", handle_func=hello, ) )\",\"对于 Request 和 Response 的详细信息，可以参考 API 文档。\"]},\"121\":{\"h\":\"WebSocket 路由\",\"t\":[\"WebSocketServerSetup 具有三个属性：\",\"path：路由路径，不支持特殊占位表达式。类型为 URL。\",\"name：路由名称，不可重复。类型为 str。\",\"handle_func：路由处理函数。类型为 Callable[[WebSocket], Awaitable[Any]]。\",\"例如，我们添加一个 /ws 的路由，发送所有接收到的数据：\",\"from nonebot import get_driver from nonebot.drivers import URL, ASGIMixin, WebSocket, WebSocketServerSetup async def ws_handler(ws: WebSocket): await ws.accept() try: while True: data = await ws.receive() await ws.send(data) except WebSocketClosed as e: # handle closed ... finally: with contextlib.suppress(Exception): await websocket.close() # do some cleanup if isinstance((driver := get_driver()), ASGIMixin): driver.setup_websocket_server( WebSocketServerSetup( path=URL(\\\"/ws\\\"), name=\\\"ws\\\", handle_func=ws_handler, ) )\",\"对于 WebSocket 的详细信息，可以参考 API 文档。\"]},\"122\":{\"h\":\"使用 ASGI 应用添加路由\"},\"123\":{\"h\":\"获取 ASGI 应用\",\"t\":[\"NoneBot 服务端类型的驱动器具有两个属性 server_app 和 asgi，分别对应驱动框架应用和 ASGI 应用。通常情况下，这两个应用是同一个对象。我们可以通过 get_app() 方法快速获取：\",\"import nonebot app = nonebot.get_app() asgi = nonebot.get_asgi()\"]},\"124\":{\"h\":\"添加路由规则\",\"t\":[\"在获取到了 ASGI 应用后，我们就可以直接使用 ASGI 应用框架提供的功能来添加路由规则了。这里我们以 FastAPI 为例，演示如何添加路由规则。\",\"在下面的代码中，我们添加了一个 GET 类型的 /api 路由，具体方法参考 FastAPI 文档。\",\"import nonebot from fastapi import FastAPI app: FastAPI = nonebot.get_app() @app.get(\\\"/api\\\") async def custom_api(): return {\\\"message\\\": \\\"Hello, world!\\\"}\"]},\"125\":{\"h\":\"钩子函数\",\"t\":[\"钩子编程（hooking），也称作“挂钩”，是计算机程序设计术语，指通过拦截软件模块间的函数调用、消息传递、事件传递来修改或扩展操作系统、应用程序或其他软件组件的行为的各种技术。处理被拦截的函数调用、事件、消息的代码，被称为钩子（hook）。\",\"在 NoneBot 中有一系列预定义的钩子函数，可以分为两类：全局钩子函数和事件处理钩子函数，这些钩子函数可以用装饰器的形式来使用。\"]},\"126\":{\"h\":\"全局钩子函数\",\"t\":[\"全局钩子函数是指 NoneBot 针对其本身运行过程的钩子函数。\",\"这些钩子函数是由驱动器来运行的，故需要先获得全局驱动器。\"]},\"127\":{\"h\":\"启动准备\",\"t\":[\"这个钩子函数会在 NoneBot 启动时运行。很多时候，我们并不希望在模块被导入时就执行一些耗时操作，如：连接数据库，这时候我们可以在这个钩子函数中进行这些操作。\",\"from nonebot import get_driver driver = get_driver() @driver.on_startup async def do_something(): pass\"]},\"128\":{\"h\":\"终止处理\",\"t\":[\"这个钩子函数会在 NoneBot 终止时运行。我们可以在这个钩子函数中进行一些清理工作，如：关闭数据库连接。\",\"from nonebot import get_driver driver = get_driver() @driver.on_shutdown async def do_something(): pass\"]},\"129\":{\"h\":\"Bot 连接处理\",\"t\":[\"这个钩子函数会在任何协议适配器连接 Bot 对象至 NoneBot 时运行。支持依赖注入，可以直接注入 Bot 对象。\",\"from nonebot import get_driver driver = get_driver() @driver.on_bot_connect async def do_something(bot: Bot): pass\"]},\"130\":{\"h\":\"Bot 断开处理\",\"t\":[\"这个钩子函数会在 Bot 断开与 NoneBot 的连接时运行。支持依赖注入，可以直接注入 Bot 对象。\",\"from nonebot import get_driver driver = get_driver() @driver.on_bot_disconnect async def do_something(bot: Bot): pass\"]},\"131\":{\"h\":\"事件处理钩子函数\",\"t\":[\"这些钩子函数指的是影响 NoneBot 进行事件处理的函数, 这些函数可以跟普通的事件处理函数一样接受相应的参数。\"]},\"132\":{\"h\":\"事件预处理\",\"t\":[\"这个钩子函数会在 NoneBot 接收到新的事件时运行。支持依赖注入，可以注入 Bot 对象、事件、会话状态。在这个钩子函数内抛出 nonebot.exception.IgnoredException 会使 NoneBot 忽略该事件。\",\"from nonebot.exception import IgnoredException from nonebot.message import event_preprocessor @event_preprocessor async def do_something(event: Event): if not event.is_tome(): raise IgnoredException(\\\"some reason\\\")\"]},\"133\":{\"h\":\"事件后处理\",\"t\":[\"这个钩子函数会在 NoneBot 处理事件完成后运行。支持依赖注入，可以注入 Bot 对象、事件、会话状态。\",\"from nonebot.message import event_postprocessor @event_postprocessor async def do_something(event: Event): pass\"]},\"134\":{\"h\":\"运行预处理\",\"t\":[\"这个钩子函数会在 NoneBot 运行事件响应器前运行。支持依赖注入，可以注入 Bot 对象、事件、事件响应器、会话状态。在这个钩子函数内抛出 nonebot.exception.IgnoredException 也会使 NoneBot 忽略本次运行。\",\"from nonebot.message import run_preprocessor from nonebot.exception import IgnoredException @run_preprocessor async def do_something(event: Event, matcher: Matcher): if not event.is_tome(): raise IgnoredException(\\\"some reason\\\")\"]},\"135\":{\"h\":\"运行后处理\",\"t\":[\"这个钩子函数会在 NoneBot 运行事件响应器后运行。支持依赖注入，可以注入 Bot 对象、事件、事件响应器、会话状态、运行中产生的异常。\",\"from nonebot.message import run_postprocessor @run_postprocessor async def do_something(event: Event, matcher: Matcher, exception: Optional[Exception]): pass\"]},\"136\":{\"h\":\"平台接口调用钩子\",\"t\":[\"这个钩子函数会在 Bot 对象调用平台接口时运行。在这个钩子函数中，我们可以通过引起 MockApiException 异常来阻止 Bot 对象调用平台接口并返回指定的结果。\",\"from nonebot.adapters import Bot from nonebot.exception import MockApiException @Bot.on_calling_api async def handle_api_call(bot: Bot, api: str, data: Dict[str, Any]): if api == \\\"send_msg\\\": raise MockApiException(result={\\\"message_id\\\": 123})\"]},\"137\":{\"h\":\"平台接口调用后钩子\",\"t\":[\"这个钩子函数会在 Bot 对象调用平台接口后运行。在这个钩子函数中，我们可以通过引起 MockApiException 异常来忽略平台接口返回的结果并返回指定的结果。\",\"from nonebot.adapters import Bot from nonebot.exception import MockApiException @Bot.on_called_api async def handle_api_result( bot: Bot, exception: Optional[Exception], api: str, data: Dict[str, Any], result: Any ): if not exception and api == \\\"send_msg\\\": raise MockApiException(result={**result, \\\"message_id\\\": 123})\"]},\"138\":{\"h\":\"会话更新\",\"t\":[\"在 NoneBot 中，在某个事件响应器对事件响应后，即是进入了会话状态，会话状态会持续到整个事件响应流程结束。会话过程中，机器人可以与用户进行多次交互。每次需要等待用户事件时，NoneBot 将会复制一个新的临时事件响应器，并更新该事件响应器使其响应当前会话主体的消息，这个过程称为会话更新。\",\"会话更新分为两部分：更新事件响应器类型和更新事件触发权限。\"]},\"139\":{\"h\":\"更新事件响应器类型\",\"t\":[\"通常情况下，与机器人用户进行的会话都是通过消息事件进行的，因此会话更新后的默认响应事件类型为 message。如果希望接收一个特定类型的消息，比如 notice 等，我们需要自定义响应事件类型更新函数。响应事件类型更新函数是一个 Dependent，可以使用依赖注入。\",\"foo = on_message() @foo.type_updater async def _() -> str: return \\\"notice\\\"\",\"在注册了上述响应事件类型更新函数后，当我们需要等待用户事件时，将只会响应 notice 类型的事件。如果希望在会话过程中的不同阶段响应不同类型的事件，我们就需要使用更复杂的逻辑来更新响应事件类型（如：根据会话状态），这里将不再展示。\"]},\"140\":{\"h\":\"更新事件触发权限\",\"t\":[\"会话通常是由机器人与用户进行的一对一交互，因此会话更新后的默认触发权限为当前事件的会话 ID。这个会话 ID 由协议适配器生成，通常由用户 ID 和群 ID 等组成。如果希望实现更复杂的会话功能（如：多用户同时参与的会话），我们需要自定义触发权限更新函数。触发权限更新函数是一个 Dependent，可以使用依赖注入。\",\"from nonebot.permission import User foo = on_message() @foo.permission_updater async def _(event: Event, matcher: Matcher) -> Permission: return Permission(User.from_event(event, perm=matcher.permission))\",\"上述权限更新函数是默认的权限更新函数，它将会话的触发权限更新为当前事件的会话 ID。如果我们希望响应多个用户的消息，我们可以如下修改：\",\"from nonebot.permission import USER foo = on_message() @foo.permission_updater async def _(matcher: Matcher) -> Permission: return USER(\\\"session1\\\", \\\"session2\\\", perm=matcher.permission)\",\"请注意，此处为全大写字母的 USER 权限，它可以匹配多个会话 ID。通过这种方式，我们可以实现多用户同时参与的会话。\",\"我们已经了解了如何控制会话的更新，相信你已经能够实现更复杂的会话功能了，例如多人小游戏等等。欢迎将你的作品分享到插件商店。\"]},\"141\":{\"h\":\"nonebot.compat\",\"t\":[\"本模块为 Pydantic 版本兼容层模块\",\"为兼容 Pydantic V1 与 V2 版本，定义了一系列兼容函数与类供使用。\"]},\"142\":{\"h\":\"\",\"t\":[\"类型: untyped\",\"说明: Alias of Ellipsis for compatibility with pydantic v1\"]},\"143\":{\"h\":\"\",\"t\":[\"说明: Pydantic Undefined object\"]},\"144\":{\"h\":\"\",\"t\":[\"说明: Pydantic Undefined type\"]},\"145\":{\"h\":\"\",\"t\":[\"类型: untyped\",\"说明: Default config for validations\"]},\"146\":{\"h\":\"\",\"t\":[\"说明: FieldInfo class with extra property for compatibility with pydantic v1\",\"参数\",\"default (Any)\",\"**kwargs (Any)\"]},\"147\":{\"h\":\"\",\"t\":[\"类型: dict[str, Any]\",\"说明\",\"Extra data that is not part of the standard pydantic fields.\",\"For compatibility with pydantic v1.\"]},\"148\":{\"h\":\"\",\"t\":[\"说明: ModelField class for compatibility with pydantic v1\",\"参数\",\"auto\"]},\"149\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明: The name of the field.\"]},\"150\":{\"h\":\"\",\"t\":[\"类型: Any\",\"说明: The annotation of the field.\"]},\"151\":{\"h\":\"\",\"t\":[\"类型: FieldInfo\",\"说明: The FieldInfo of the field.\"]},\"152\":{\"h\":\"\",\"t\":[\"说明: Construct a ModelField from given infos.\",\"参数\",\"name (str)\",\"annotation (Any)\",\"field_info (FieldInfo | None)\",\"返回\",\"Self\"]},\"153\":{\"h\":\"\",\"t\":[\"说明: Get the default value of the field.\",\"参数\",\"empty\",\"返回\",\"Any\"]},\"154\":{\"h\":\"\",\"t\":[\"说明: Validate the value pass to the field.\",\"参数\",\"value (Any)\",\"返回\",\"Any\"]},\"155\":{\"h\":\"\",\"t\":[\"说明: Get FieldInfo init kwargs from a FieldInfo instance.\",\"参数\",\"field_info (BaseFieldInfo)\",\"返回\",\"dict[str, Any]\"]},\"156\":{\"h\":\"\",\"t\":[\"说明: Get field list of a model.\",\"参数\",\"model (type[BaseModel])\",\"返回\",\"list[ModelField]\"]},\"157\":{\"h\":\"\",\"t\":[\"说明: Get config of a model.\",\"参数\",\"model (type[BaseModel])\",\"返回\",\"Any\"]},\"158\":{\"h\":\"\",\"t\":[\"参数\",\"model (BaseModel)\",\"include (set[str] | None)\",\"exclude (set[str] | None)\",\"by_alias (bool)\",\"exclude_unset (bool)\",\"exclude_defaults (bool)\",\"exclude_none (bool)\",\"返回\",\"dict[str, Any]\"]},\"159\":{\"h\":\"\",\"t\":[\"说明: Validate data with given type.\",\"参数\",\"type_ (type[T])\",\"data (Any)\",\"返回\",\"T\"]},\"160\":{\"h\":\"\",\"t\":[\"说明: Validate JSON with given type.\",\"参数\",\"type_ (type[T])\",\"data (str | bytes)\",\"返回\",\"T\"]},\"161\":{\"h\":\"\",\"t\":[\"说明: Use pydantic v1 like validator generator in pydantic v2\",\"参数\",\"class_ (type[CVC])\",\"返回\",\"type[CVC]\"]},\"162\":{\"h\":\"nonebot.config\",\"t\":[\"本模块定义了 NoneBot 本身运行所需的配置项。\",\"NoneBot 使用 pydantic 以及python-dotenv 来读取配置。\",\"配置项需符合特殊格式或 json 序列化格式 详情见 pydantic Field Type 文档。\"]},\"163\":{\"h\":\"\",\"t\":[\"说明\",\"运行环境配置。大小写不敏感。\",\"将会从 环境变量 > dotenv 配置文件 的优先级读取环境信息。\",\"参数\",\"_env_file (DOTENV_TYPE | None)\",\"_env_file_encoding (str | None)\",\"_env_nested_delimiter (str | None)\",\"**values (Any)\"]},\"164\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明\",\"当前环境名。\",\"NoneBot 将从 .env.{environment} 文件中加载配置。\"]},\"165\":{\"h\":\"\",\"t\":[\"说明\",\"NoneBot 主要配置。大小写不敏感。\",\"除了 NoneBot 的配置项外，还可以自行添加配置项到 .env.{environment} 文件中。 这些配置将会在 json 反序列化后一起带入 Config 类中。\",\"配置方法参考: 配置\",\"参数\",\"_env_file (DOTENV_TYPE | None)\",\"_env_file_encoding (str | None)\",\"_env_nested_delimiter (str | None)\",\"**values (Any)\"]},\"166\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明\",\"NoneBot 运行所使用的 Driver 。继承自 Driver 。\",\"配置格式为 <module>[:<Driver>][+<module>[:<Mixin>]]*。\",\"~ 为 nonebot.drivers. 的缩写。\",\"配置方法参考: 配置驱动器\"]},\"167\":{\"h\":\"\",\"t\":[\"类型: IPvAnyAddress\",\"说明: NoneBot ReverseDriver 服务端监听的 IP/主机名。\"]},\"168\":{\"h\":\"\",\"t\":[\"类型: int\",\"说明: NoneBot ReverseDriver 服务端监听的端口。\"]},\"169\":{\"h\":\"\",\"t\":[\"类型: int | str\",\"说明\",\"NoneBot 日志输出等级，可以为 int 类型等级或等级名称。\",\"参考 记录日志，loguru 日志等级。\",\"提示\",\"日志等级名称应为大写，如 INFO。\",\"用法\",\"LOG_LEVEL=25 LOG_LEVEL=INFO\"]},\"170\":{\"h\":\"\",\"t\":[\"类型: float | None\",\"说明: API 请求超时时间，单位: 秒。\"]},\"171\":{\"h\":\"\",\"t\":[\"类型: set[str]\",\"说明: 机器人超级用户。\",\"用法\",\"SUPERUSERS=[\\\"12345789\\\"]\"]},\"172\":{\"h\":\"\",\"t\":[\"类型: set[str]\",\"说明: 机器人昵称。\"]},\"173\":{\"h\":\"\",\"t\":[\"类型: set[str]\",\"说明\",\"命令的起始标记，用于判断一条消息是不是命令。\",\"参考命令响应规则。\",\"用法\",\"COMMAND_START=[\\\"/\\\", \\\"\\\"]\"]},\"174\":{\"h\":\"\",\"t\":[\"类型: set[str]\",\"说明\",\"命令的分隔标记，用于将文本形式的命令切分为元组（实际的命令名）。\",\"参考命令响应规则。\",\"用法\",\"COMMAND_SEP=[\\\".\\\"]\"]},\"175\":{\"h\":\"\",\"t\":[\"类型: timedelta\",\"说明: 等待用户回复的超时时间。\",\"用法\",\"SESSION_EXPIRE_TIMEOUT=[-][DD]D[,][HH:MM:]SS[.ffffff] SESSION_EXPIRE_TIMEOUT=[±]P[DD]DT[HH]H[MM]M[SS]S # ISO 8601\"]},\"176\":{\"h\":\"nonebot.consts\",\"t\":[\"本模块包含了 NoneBot 事件处理过程中使用到的常量。\"]},\"177\":{\"h\":\"\",\"t\":[\"类型: Literal['_receive_{id}']\",\"说明:receive 存储 key\"]},\"178\":{\"h\":\"\",\"t\":[\"类型: Literal['_last_receive']\",\"说明:last_receive 存储 key\"]},\"179\":{\"h\":\"\",\"t\":[\"类型: Literal['{key}']\",\"说明:arg 存储 key\"]},\"180\":{\"h\":\"\",\"t\":[\"类型: Literal['_current_target']\",\"说明: 当前 reject 目标存储 key\"]},\"181\":{\"h\":\"\",\"t\":[\"类型: Literal['_next_target']\",\"说明: 下一个 reject 目标存储 key\"]},\"182\":{\"h\":\"\",\"t\":[\"类型: Literal['_prefix']\",\"说明: 命令前缀存储 key\"]},\"183\":{\"h\":\"\",\"t\":[\"类型: Literal['command']\",\"说明: 命令元组存储 key\"]},\"184\":{\"h\":\"\",\"t\":[\"类型: Literal['raw_command']\",\"说明: 命令文本存储 key\"]},\"185\":{\"h\":\"\",\"t\":[\"类型: Literal['command_arg']\",\"说明: 命令参数存储 key\"]},\"186\":{\"h\":\"\",\"t\":[\"类型: Literal['command_start']\",\"说明: 命令开头存储 key\"]},\"187\":{\"h\":\"\",\"t\":[\"类型: Literal['command_whitespace']\",\"说明: 命令与参数间空白符存储 key\"]},\"188\":{\"h\":\"\",\"t\":[\"类型: Literal['_args']\",\"说明: shell 命令 parse 后参数字典存储 key\"]},\"189\":{\"h\":\"\",\"t\":[\"类型: Literal['_argv']\",\"说明: shell 命令原始参数列表存储 key\"]},\"190\":{\"h\":\"\",\"t\":[\"类型: Literal['_matched']\",\"说明: 正则匹配结果存储 key\"]},\"191\":{\"h\":\"\",\"t\":[\"类型: Literal['_startswith']\",\"说明: 响应触发前缀 key\"]},\"192\":{\"h\":\"\",\"t\":[\"类型: Literal['_endswith']\",\"说明: 响应触发后缀 key\"]},\"193\":{\"h\":\"\",\"t\":[\"类型: Literal['_fullmatch']\",\"说明: 响应触发完整消息 key\"]},\"194\":{\"h\":\"\",\"t\":[\"类型: Literal['_keyword']\",\"说明: 响应触发关键字 key\"]},\"195\":{\"h\":\"nonebot.exception\",\"t\":[\"本模块包含了所有 NoneBot 运行时可能会抛出的异常。\",\"这些异常并非所有需要用户处理，在 NoneBot 内部运行时被捕获，并进行对应操作。\",\"NoneBotException ├── ParserExit ├── ProcessException | ├── IgnoredException | ├── SkippedException | | └── TypeMisMatch | ├── MockApiException | └── StopPropagation ├── MatcherException | ├── PausedException | ├── RejectedException | └── FinishedException ├── AdapterException | ├── NoLogException | ├── ApiNotAvailable | ├── NetworkError | └── ActionFailed └── DriverException └── WebSocketClosed\"]},\"196\":{\"h\":\"\",\"t\":[\"说明: 所有 NoneBot 发生的异常基类。\",\"参数\",\"auto\"]},\"197\":{\"h\":\"\",\"t\":[\"说明: 处理消息失败时返回的异常。\",\"参数\",\"auto\"]},\"198\":{\"h\":\"\",\"t\":[\"说明: 事件处理过程中发生的异常基类。\",\"参数\",\"auto\"]},\"199\":{\"h\":\"\",\"t\":[\"说明: 指示 NoneBot 应该忽略该事件。可由 PreProcessor 抛出。\",\"参数\",\"reason: 忽略事件的原因\"]},\"200\":{\"h\":\"\",\"t\":[\"说明\",\"指示 NoneBot 立即结束当前 Dependent 的运行。\",\"例如，可以在 Handler 中通过 Matcher.skip 抛出。\",\"参数\",\"auto\",\"用法\",\"def always_skip(): Matcher.skip() @matcher.handle() async def handler(dependency = Depends(always_skip)): # never run\"]},\"201\":{\"h\":\"\",\"t\":[\"说明: 当前 Handler 的参数类型不匹配。\",\"参数\",\"auto\"]},\"202\":{\"h\":\"\",\"t\":[\"说明: 指示 NoneBot 阻止本次 API 调用或修改本次调用返回值，并返回自定义内容。 可由 api hook 抛出。\",\"参数\",\"result: 返回的内容\"]},\"203\":{\"h\":\"\",\"t\":[\"说明\",\"指示 NoneBot 终止事件向下层传播。\",\"在 Matcher.block 为 True 或使用 Matcher.stop_propagation 方法时抛出。\",\"参数\",\"auto\",\"用法\",\"matcher = on_notice(block=True) # 或者 @matcher.handle() async def handler(matcher: Matcher): matcher.stop_propagation()\"]},\"204\":{\"h\":\"\",\"t\":[\"说明: 所有 Matcher 发生的异常基类。\",\"参数\",\"auto\"]},\"205\":{\"h\":\"\",\"t\":[\"说明\",\"指示 NoneBot 结束当前 Handler 并等待下一条消息后继续下一个 Handler。 可用于用户输入新信息。\",\"可以在 Handler 中通过 Matcher.pause 抛出。\",\"参数\",\"auto\",\"用法\",\"@matcher.handle() async def handler(): await matcher.pause(\\\"some message\\\")\"]},\"206\":{\"h\":\"\",\"t\":[\"说明\",\"指示 NoneBot 结束当前 Handler 并等待下一条消息后重新运行当前 Handler。 可用于用户重新输入。\",\"可以在 Handler 中通过 Matcher.reject 抛出。\",\"参数\",\"auto\",\"用法\",\"@matcher.handle() async def handler(): await matcher.reject(\\\"some message\\\")\"]},\"207\":{\"h\":\"\",\"t\":[\"说明\",\"指示 NoneBot 结束当前 Handler 且后续 Handler 不再被运行。可用于结束用户会话。\",\"可以在 Handler 中通过 Matcher.finish 抛出。\",\"参数\",\"auto\",\"用法\",\"@matcher.handle() async def handler(): await matcher.finish(\\\"some message\\\")\"]},\"208\":{\"h\":\"\",\"t\":[\"说明: 代表 Adapter 抛出的异常，所有的 Adapter 都要在内部继承自这个 Exception。\",\"参数\",\"adapter_name: 标识 adapter\"]},\"209\":{\"h\":\"\",\"t\":[\"说明\",\"指示 NoneBot 对当前 Event 进行处理但不显示 Log 信息。\",\"可在 Event.get_log_string 时抛出\",\"参数\",\"auto\"]},\"210\":{\"h\":\"\",\"t\":[\"说明: 在 API 连接不可用时抛出。\",\"参数\",\"auto\"]},\"211\":{\"h\":\"\",\"t\":[\"说明: 在网络出现问题时抛出， 如: API 请求地址不正确, API 请求无返回或返回状态非正常等。\",\"参数\",\"auto\"]},\"212\":{\"h\":\"\",\"t\":[\"说明: API 请求成功返回数据，但 API 操作失败。\",\"参数\",\"auto\"]},\"213\":{\"h\":\"\",\"t\":[\"说明:Driver 抛出的异常基类。\",\"参数\",\"auto\"]},\"214\":{\"h\":\"\",\"t\":[\"说明: WebSocket 连接已关闭。\",\"参数\",\"auto\"]},\"215\":{\"h\":\"nonebot\",\"t\":[\"本模块主要定义了 NoneBot 启动所需函数，供 bot 入口文件调用。\"]},\"216\":{\"h\":\"快捷导入\",\"t\":[\"为方便使用，本模块从子模块导入了部分内容，以下内容可以直接通过本模块导入:\",\"on => on\",\"on_metaevent => on_metaevent\",\"on_message => on_message\",\"on_notice => on_notice\",\"on_request => on_request\",\"on_startswith => on_startswith\",\"on_endswith => on_endswith\",\"on_fullmatch => on_fullmatch\",\"on_keyword => on_keyword\",\"on_command => on_command\",\"on_shell_command => on_shell_command\",\"on_regex => on_regex\",\"on_type => on_type\",\"CommandGroup => CommandGroup\",\"Matchergroup => MatcherGroup\",\"load_plugin => load_plugin\",\"load_plugins => load_plugins\",\"load_all_plugins => load_all_plugins\",\"load_from_json => load_from_json\",\"load_from_toml => load_from_toml\",\"load_builtin_plugin =>load_builtin_plugin\",\"load_builtin_plugins =>load_builtin_plugins\",\"get_plugin => get_plugin\",\"get_plugin_by_module_name =>get_plugin_by_module_name\",\"get_loaded_plugins =>get_loaded_plugins\",\"get_available_plugin_names =>get_available_plugin_names\",\"get_plugin_config => get_plugin_config\",\"require => require\"]},\"217\":{\"h\":\"\",\"t\":[\"说明\",\"获取全局 Driver 实例。\",\"可用于在计划任务的回调等情形中获取当前 Driver 实例。\",\"参数\",\"empty\",\"返回\",\"Driver: 全局 Driver 对象\",\"异常\",\"ValueError: 全局 Driver 对象尚未初始化 (nonebot.init 尚未调用)\",\"用法\",\"driver = nonebot.get_driver()\"]},\"218\":{\"h\":\"\",\"t\":[\"说明: 获取已注册的 Adapter 实例。\",\"重载\",\"1.(name) -> Adapter\",\"参数\",\"name (str): 适配器名称\",\"返回\",\"Adapter: 指定名称的 Adapter 对象\",\"2.(name) -> A\",\"参数\",\"name (type[A]): 适配器类型\",\"返回\",\"A: 指定类型的 Adapter 对象\",\"异常\",\"ValueError: 指定的 Adapter 未注册\",\"ValueError: 全局 Driver 对象尚未初始化 (nonebot.init 尚未调用)\",\"用法\",\"from nonebot.adapters.console import Adapter adapter = nonebot.get_adapter(Adapter)\"]},\"219\":{\"h\":\"\",\"t\":[\"说明: 获取所有已注册的 Adapter 实例。\",\"参数\",\"empty\",\"返回\",\"dict[str, Adapter]: 所有 Adapter 实例字典\",\"异常\",\"ValueError: 全局 Driver 对象尚未初始化 (nonebot.init 尚未调用)\",\"用法\",\"adapters = nonebot.get_adapters()\"]},\"220\":{\"h\":\"\",\"t\":[\"说明: 获取全局 ASGIMixin 对应的 Server App 对象。\",\"参数\",\"empty\",\"返回\",\"Any: Server App 对象\",\"异常\",\"AssertionError: 全局 Driver 对象不是 ASGIMixin 类型\",\"ValueError: 全局 Driver 对象尚未初始化 (nonebot.init 尚未调用)\",\"用法\",\"app = nonebot.get_app()\"]},\"221\":{\"h\":\"\",\"t\":[\"说明: 获取全局 ASGIMixin 对应的 ASGI 对象。\",\"参数\",\"empty\",\"返回\",\"Any: ASGI 对象\",\"异常\",\"AssertionError: 全局 Driver 对象不是 ASGIMixin 类型\",\"ValueError: 全局 Driver 对象尚未初始化 (nonebot.init 尚未调用)\",\"用法\",\"asgi = nonebot.get_asgi()\"]},\"222\":{\"h\":\"\",\"t\":[\"说明\",\"获取一个连接到 NoneBot 的 Bot 对象。\",\"当提供 self_id 时，此函数是 get_bots()[self_id] 的简写； 当不提供时，返回一个 Bot。\",\"参数\",\"self_id (str | None): 用来识别 Bot 的 Bot.self_id 属性\",\"返回\",\"Bot: Bot 对象\",\"异常\",\"KeyError: 对应 self_id 的 Bot 不存在\",\"ValueError: 没有传入 self_id 且没有 Bot 可用\",\"ValueError: 全局 Driver 对象尚未初始化 (nonebot.init 尚未调用)\",\"用法\",\"assert nonebot.get_bot(\\\"12345\\\") == nonebot.get_bots()[\\\"12345\\\"] another_unspecified_bot = nonebot.get_bot()\"]},\"223\":{\"h\":\"\",\"t\":[\"说明: 获取所有连接到 NoneBot 的 Bot 对象。\",\"参数\",\"empty\",\"返回\",\"dict[str, Bot]: 一个以 Bot.self_id 为键\",\"Bot 对象为值的字典\",\"异常\",\"ValueError: 全局 Driver 对象尚未初始化 (nonebot.init 尚未调用)\",\"用法\",\"bots = nonebot.get_bots()\"]},\"224\":{\"h\":\"\",\"t\":[\"说明\",\"初始化 NoneBot 以及 全局 Driver 对象。\",\"NoneBot 将会从 .env 文件中读取环境信息，并使用相应的 env 文件配置。\",\"也可以传入自定义的 _env_file 来指定 NoneBot 从该文件读取配置。\",\"参数\",\"_env_file (DOTENV_TYPE | None): 配置文件名，默认从 .env.{env_name} 中读取配置\",\"**kwargs (Any): 任意变量，将会存储到 Driver.config 对象里\",\"返回\",\"None\",\"用法\",\"nonebot.init(database=Database(...))\"]},\"225\":{\"h\":\"\",\"t\":[\"说明: 启动 NoneBot，即运行全局 Driver 对象。\",\"参数\",\"*args (Any): 传入 Driver.run 的位置参数\",\"**kwargs (Any): 传入 Driver.run 的命名参数\",\"返回\",\"None\",\"用法\",\"nonebot.run(host=\\\"127.0.0.1\\\", port=8080)\"]},\"226\":{\"h\":\"nonebot.log\",\"t\":[\"本模块定义了 NoneBot 的日志记录 Logger。\",\"NoneBot 使用 loguru 来记录日志信息。\",\"自定义 logger 请参考 自定义日志 以及 loguru 文档。\"]},\"227\":{\"h\":\"\",\"t\":[\"类型: Logger\",\"说明\",\"NoneBot 日志记录器对象。\",\"默认信息:\",\"格式: [%(asctime)s %(name)s] %(levelname)s: %(message)s\",\"等级: INFO ，根据 config.log_level 配置改变\",\"输出: 输出至 stdout\",\"用法\",\"from nonebot.log import logger\"]},\"228\":{\"h\":\"\",\"t\":[\"说明: logging 与 loguru 之间的桥梁，将 logging 的日志转发到 loguru。\",\"参数\",\"auto\"]},\"229\":{\"h\":\"\",\"t\":[\"参数\",\"record (logging.LogRecord)\",\"返回\",\"untyped\"]},\"230\":{\"h\":\"\",\"t\":[\"说明: 默认的日志过滤器，根据 config.log_level 配置改变日志等级。\",\"参数\",\"record (Record)\",\"返回\",\"untyped\"]},\"231\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明: 默认日志格式\"]},\"232\":{\"h\":\"nonebot.matcher\",\"t\":[\"本模块实现事件响应器的创建与运行，并提供一些快捷方法来帮助用户更好的与机器人进行对话。\"]},\"233\":{\"h\":\"\",\"t\":[\"说明: 事件响应器类\",\"参数\",\"empty\"]},\"234\":{\"h\":\"\",\"t\":[\"类型: ClassVar[str]\",\"说明: 事件响应器类型\"]},\"235\":{\"h\":\"\",\"t\":[\"类型: ClassVar[Rule]\",\"说明: 事件响应器匹配规则\"]},\"236\":{\"h\":\"\",\"t\":[\"类型: ClassVar[Permission]\",\"说明: 事件响应器触发权限\"]},\"237\":{\"h\":\"\",\"t\":[\"类型: ClassVar[list[Dependent[Any]]]\",\"说明: 事件响应器拥有的事件处理函数列表\"]},\"238\":{\"h\":\"\",\"t\":[\"类型: ClassVar[int]\",\"说明: 事件响应器优先级\"]},\"239\":{\"h\":\"\",\"t\":[\"类型: bool\",\"说明: 事件响应器是否阻止事件传播\"]},\"240\":{\"h\":\"\",\"t\":[\"类型: ClassVar[bool]\",\"说明: 事件响应器是否为临时\"]},\"241\":{\"h\":\"\",\"t\":[\"类型: ClassVar[datetime | None]\",\"说明: 事件响应器过期时间点\"]},\"242\":{\"h\":\"\",\"t\":[\"说明: 创建一个新的事件响应器，并存储至 matchers <#matchers>_\",\"参数\",\"type_ (str): 事件响应器类型，与 event.get_type() 一致时触发，空字符串表示任意\",\"rule (Rule | None): 匹配规则\",\"permission (Permission | None): 权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器，即触发一次后删除\",\"priority (int): 响应优先级\",\"block (bool): 是否阻止事件向更低优先级的响应器传播\",\"plugin (Plugin | None): Deprecated. 事件响应器所在插件\",\"module (ModuleType | None): Deprecated. 事件响应器所在模块\",\"source (MatcherSource | None): 事件响应器源代码上下文信息\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"default_state (T_State | None): 默认状态 state\",\"default_type_updater (T_TypeUpdater | Dependent[str] | None): 默认事件类型更新函数\",\"default_permission_updater (T_PermissionUpdater | Dependent[Permission] | None): 默认会话权限更新函数\",\"返回\",\"type[Matcher]: 新的事件响应器类\"]},\"243\":{\"h\":\"\",\"t\":[\"说明: 销毁当前的事件响应器\",\"参数\",\"empty\",\"返回\",\"None\"]},\"244\":{\"h\":\"\",\"t\":[\"说明: 检查是否满足触发权限\",\"参数\",\"bot (Bot): Bot 对象\",\"event (Event): 上报事件\",\"stack (AsyncExitStack | None): 异步上下文栈\",\"dependency_cache (T_DependencyCache | None): 依赖缓存\",\"返回\",\"bool: 是否满足权限\"]},\"245\":{\"h\":\"\",\"t\":[\"说明: 检查是否满足匹配规则\",\"参数\",\"bot (Bot): Bot 对象\",\"event (Event): 上报事件\",\"state (T_State): 当前状态\",\"stack (AsyncExitStack | None): 异步上下文栈\",\"dependency_cache (T_DependencyCache | None): 依赖缓存\",\"返回\",\"bool: 是否满足匹配规则\"]},\"246\":{\"h\":\"\",\"t\":[\"说明: 装饰一个函数来更改当前事件响应器的默认响应事件类型更新函数\",\"参数\",\"func (T_TypeUpdater): 响应事件类型更新函数\",\"返回\",\"T_TypeUpdater\"]},\"247\":{\"h\":\"\",\"t\":[\"说明: 装饰一个函数来更改当前事件响应器的默认会话权限更新函数\",\"参数\",\"func (T_PermissionUpdater): 会话权限更新函数\",\"返回\",\"T_PermissionUpdater\"]},\"248\":{\"h\":\"\",\"t\":[\"参数\",\"handler (T_Handler)\",\"parameterless (Iterable[Any] | None)\",\"返回\"]},\"249\":{\"h\":\"\",\"t\":[\"说明: 装饰一个函数来向事件响应器直接添加一个处理函数\",\"参数\",\"parameterless (Iterable[Any] | None): 非参数类型依赖列表\",\"返回\",\"(T_Handler) -> T_Handler\"]},\"250\":{\"h\":\"\",\"t\":[\"说明: 装饰一个函数来指示 NoneBot 在接收用户新的一条消息后继续运行该函数\",\"参数\",\"id (str): 消息 ID\",\"parameterless (Iterable[Any] | None): 非参数类型依赖列表\",\"返回\",\"(T_Handler) -> T_Handler\"]},\"251\":{\"h\":\"\",\"t\":[\"说明\",\"装饰一个函数来指示 NoneBot 获取一个参数 key\",\"当要获取的 key 不存在时接收用户新的一条消息再运行该函数， 如果 key 已存在则直接继续运行\",\"参数\",\"key (str): 参数名\",\"prompt (str | Message | MessageSegment | MessageTemplate | None): 在参数不存在时向用户发送的消息\",\"parameterless (Iterable[Any] | None): 非参数类型依赖列表\",\"返回\",\"(T_Handler) -> T_Handler\"]},\"252\":{\"h\":\"\",\"t\":[\"说明: 发送一条消息给当前交互用户\",\"参数\",\"message (str | Message | MessageSegment | MessageTemplate): 消息内容\",\"**kwargs (Any): Bot.send 的参数， 请参考对应 adapter 的 bot 对象 api\",\"返回\",\"Any\"]},\"253\":{\"h\":\"\",\"t\":[\"说明: 发送一条消息给当前交互用户并结束当前事件响应器\",\"参数\",\"message (str | Message | MessageSegment | MessageTemplate | None): 消息内容\",\"**kwargs: Bot.send 的参数， 请参考对应 adapter 的 bot 对象 api\",\"返回\",\"NoReturn\"]},\"254\":{\"h\":\"\",\"t\":[\"说明: 发送一条消息给当前交互用户并暂停事件响应器，在接收用户新的一条消息后继续下一个处理函数\",\"参数\",\"prompt (str | Message | MessageSegment | MessageTemplate | None): 消息内容\",\"**kwargs: Bot.send 的参数， 请参考对应 adapter 的 bot 对象 api\",\"返回\",\"NoReturn\"]},\"255\":{\"h\":\"\",\"t\":[\"说明: 最近使用 got / receive 接收的消息不符合预期， 发送一条消息给当前交互用户并将当前事件处理流程中断在当前位置，在接收用户新的一个事件后从头开始执行当前处理函数\",\"参数\",\"prompt (str | Message | MessageSegment | MessageTemplate | None): 消息内容\",\"**kwargs: Bot.send 的参数， 请参考对应 adapter 的 bot 对象 api\",\"返回\",\"NoReturn\"]},\"256\":{\"h\":\"\",\"t\":[\"说明: 最近使用 got 接收的消息不符合预期， 发送一条消息给当前交互用户并将当前事件处理流程中断在当前位置，在接收用户新的一条消息后从头开始执行当前处理函数\",\"参数\",\"key (str): 参数名\",\"prompt (str | Message | MessageSegment | MessageTemplate | None): 消息内容\",\"**kwargs: Bot.send 的参数， 请参考对应 adapter 的 bot 对象 api\",\"返回\",\"NoReturn\"]},\"257\":{\"h\":\"\",\"t\":[\"说明: 最近使用 receive 接收的消息不符合预期， 发送一条消息给当前交互用户并将当前事件处理流程中断在当前位置，在接收用户新的一个事件后从头开始执行当前处理函数\",\"参数\",\"id (str): 消息 id\",\"prompt (str | Message | MessageSegment | MessageTemplate | None): 消息内容\",\"**kwargs: Bot.send 的参数， 请参考对应 adapter 的 bot 对象 api\",\"返回\",\"NoReturn\"]},\"258\":{\"h\":\"\",\"t\":[\"说明\",\"跳过当前事件处理函数，继续下一个处理函数\",\"通常在事件处理函数的依赖中使用。\",\"参数\",\"empty\",\"返回\",\"NoReturn\"]},\"259\":{\"h\":\"\",\"t\":[\"说明\",\"获取一个 receive 事件\",\"如果没有找到对应的事件，返回 default 值\",\"重载\",\"1.(id) -> Event | None\",\"参数\",\"id (str)\",\"返回\",\"Event | None\",\"2.(id, default) -> Event | T\",\"参数\",\"id (str)\",\"default (T)\",\"返回\",\"Event | T\"]},\"260\":{\"h\":\"\",\"t\":[\"说明: 设置一个 receive 事件\",\"参数\",\"id (str)\",\"event (Event)\",\"返回\",\"None\"]},\"261\":{\"h\":\"\",\"t\":[\"说明\",\"获取最近一次 receive 事件\",\"如果没有事件，返回 default 值\",\"重载\",\"1.() -> Event | None\",\"参数\",\"empty\",\"返回\",\"Event | None\",\"2.(default) -> Event | T\",\"参数\",\"default (T)\",\"返回\",\"Event | T\"]},\"262\":{\"h\":\"\",\"t\":[\"说明\",\"获取一个 got 消息\",\"如果没有找到对应的消息，返回 default 值\",\"重载\",\"1.(key) -> Message | None\",\"参数\",\"key (str)\",\"返回\",\"Message | None\",\"2.(key, default) -> Message | T\",\"参数\",\"key (str)\",\"default (T)\",\"返回\",\"Message | T\"]},\"263\":{\"h\":\"\",\"t\":[\"说明: 设置一个 got 消息\",\"参数\",\"key (str)\",\"message (Message)\",\"返回\",\"None\"]},\"264\":{\"h\":\"\",\"t\":[\"参数\",\"target (str)\",\"cache (bool)\",\"返回\",\"None\"]},\"265\":{\"h\":\"\",\"t\":[\"重载\",\"1.() -> str | None\",\"参数\",\"empty\",\"返回\",\"str | None\",\"2.(default) -> str | T\",\"参数\",\"default (T)\",\"返回\",\"str | T\"]},\"266\":{\"h\":\"\",\"t\":[\"说明: 阻止事件传播\",\"参数\",\"empty\",\"返回\",\"untyped\"]},\"267\":{\"h\":\"\",\"t\":[\"参数\",\"bot (Bot)\",\"event (Event)\",\"stack (AsyncExitStack | None)\",\"dependency_cache (T_DependencyCache | None)\",\"返回\",\"str\"]},\"268\":{\"h\":\"\",\"t\":[\"参数\",\"bot (Bot)\",\"event (Event)\",\"stack (AsyncExitStack | None)\",\"dependency_cache (T_DependencyCache | None)\",\"返回\",\"Permission\"]},\"269\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"untyped\"]},\"270\":{\"h\":\"\",\"t\":[\"参数\",\"bot (Bot)\",\"event (Event)\",\"返回\",\"untyped\"]},\"271\":{\"h\":\"\",\"t\":[\"参数\",\"bot (Bot)\",\"event (Event)\",\"state (T_State)\",\"stack (AsyncExitStack | None)\",\"dependency_cache (T_DependencyCache | None)\",\"返回\",\"untyped\"]},\"272\":{\"h\":\"\",\"t\":[\"参数\",\"bot (Bot)\",\"event (Event)\",\"state (T_State)\",\"stack (AsyncExitStack | None)\",\"dependency_cache (T_DependencyCache | None)\",\"返回\",\"untyped\"]},\"273\":{\"h\":\"\",\"t\":[\"类型: untyped\"]},\"274\":{\"h\":\"\",\"t\":[\"说明\",\"事件响应器管理器\",\"实现了常用字典操作，用于管理事件响应器。\",\"参数\",\"empty\"]},\"275\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"KeysView[int]\"]},\"276\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"ValuesView[list[type[Matcher]]]\"]},\"277\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"ItemsView[int, list[type[Matcher]]]\"]},\"278\":{\"h\":\"\",\"t\":[\"重载\",\"1.(key) -> list[type[Matcher]] | None\",\"参数\",\"key (int)\",\"返回\",\"list[type[Matcher]] | None\",\"2.(key, default) -> list[type[Matcher]] | T\",\"参数\",\"key (int)\",\"default (T)\",\"返回\",\"list[type[Matcher]] | T\"]},\"279\":{\"h\":\"\",\"t\":[\"参数\",\"key (int)\",\"返回\",\"list[type[Matcher]]\"]},\"280\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"tuple[int, list[type[Matcher]]]\"]},\"281\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"None\"]},\"282\":{\"h\":\"\",\"t\":[\"参数\",\"__m (MutableMapping[int, list[type[Matcher]]])\",\"返回\",\"None\"]},\"283\":{\"h\":\"\",\"t\":[\"参数\",\"key (int)\",\"default (list[type[Matcher]])\",\"返回\",\"list[type[Matcher]]\"]},\"284\":{\"h\":\"\",\"t\":[\"说明: 设置事件响应器存储器\",\"参数\",\"provider_class (type[MatcherProvider]): 事件响应器存储器类\",\"返回\",\"None\"]},\"285\":{\"h\":\"\",\"t\":[\"说明: 事件响应器存储器基类\",\"参数\",\"matchers (Mapping[int, list[type[Matcher]]]): 当前存储器中已有的事件响应器\"]},\"286\":{\"h\":\"\",\"t\":[\"类型: untyped\",\"说明: 默认存储器类型\"]},\"287\":{\"h\":\"nonebot.message\",\"t\":[\"本模块定义了事件处理主要流程。\",\"NoneBot 内部处理并按优先级分发事件给所有事件响应器，提供了多个插槽以进行事件的预处理等。\"]},\"288\":{\"h\":\"\",\"t\":[\"说明\",\"事件预处理。\",\"装饰一个函数，使它在每次接收到事件并分发给各响应器之前执行。\",\"参数\",\"func (T_EventPreProcessor)\",\"返回\",\"T_EventPreProcessor\"]},\"289\":{\"h\":\"\",\"t\":[\"说明\",\"事件后处理。\",\"装饰一个函数，使它在每次接收到事件并分发给各响应器之后执行。\",\"参数\",\"func (T_EventPostProcessor)\",\"返回\",\"T_EventPostProcessor\"]},\"290\":{\"h\":\"\",\"t\":[\"说明\",\"运行预处理。\",\"装饰一个函数，使它在每次事件响应器运行前执行。\",\"参数\",\"func (T_RunPreProcessor)\",\"返回\",\"T_RunPreProcessor\"]},\"291\":{\"h\":\"\",\"t\":[\"说明\",\"运行后处理。\",\"装饰一个函数，使它在每次事件响应器运行后执行。\",\"参数\",\"func (T_RunPostProcessor)\",\"返回\",\"T_RunPostProcessor\"]},\"292\":{\"h\":\"\",\"t\":[\"说明: 检查并运行事件响应器。\",\"参数\",\"Matcher (type[Matcher]): 事件响应器\",\"bot (Bot): Bot 对象\",\"event (Event): Event 对象\",\"state (T_State): 会话状态\",\"stack (AsyncExitStack | None): 异步上下文栈\",\"dependency_cache (T_DependencyCache | None): 依赖缓存\",\"返回\",\"None\"]},\"293\":{\"h\":\"\",\"t\":[\"说明: 处理一个事件。调用该函数以实现分发事件。\",\"参数\",\"bot (Bot): Bot 对象\",\"event (Event): Event 对象\",\"返回\",\"None\",\"用法\",\"driver.task_group.start_soon(handle_event, bot, event)\"]},\"294\":{\"h\":\"nonebot.params\",\"t\":[\"本模块定义了依赖注入的各类参数。\"]},\"295\":{\"h\":\"\",\"t\":[\"说明: Arg 参数消息\",\"参数\",\"key (str | None)\",\"返回\",\"Any\"]},\"296\":{\"h\":\"\",\"t\":[\"说明: Arg 参数消息文本\",\"参数\",\"key (str | None)\",\"返回\",\"str\"]},\"297\":{\"h\":\"\",\"t\":[\"说明: 子依赖装饰器\",\"参数\",\"dependency (T_Handler | None): 依赖函数。默认为参数的类型注释。\",\"use_cache (bool): 是否使用缓存。默认为 True。\",\"validate (bool | PydanticFieldInfo): 是否使用 Pydantic 类型校验。默认为 False。\",\"返回\",\"Any\",\"用法\",\"def depend_func() -> Any: return ... def depend_gen_func(): try: yield ... finally: ... async def handler( param_name: Any = Depends(depend_func), gen: Any = Depends(depend_gen_func), ): ...\"]},\"298\":{\"h\":\"\",\"t\":[\"说明\",\"Arg 注入参数\",\"本注入解析事件响应器操作 got 所获取的参数。\",\"可以通过 Arg、ArgStr、ArgPlainText 等函数参数 key 指定获取的参数， 留空则会根据参数名称获取。\",\"参数\",\"*args\",\"key (str)\",\"type (Literal['message', 'str', 'plaintext'])\",\"**kwargs (Any)\"]},\"299\":{\"h\":\"\",\"t\":[\"说明\",\"注入参数。\",\"本注入解析所有类型为且仅为 Bot 及其子类或 None 的参数。\",\"为保证兼容性，本注入还会解析名为 bot 且没有类型注解的参数。\",\"参数\",\"*args\",\"checker (ModelField | None)\",\"**kwargs (Any)\"]},\"300\":{\"h\":\"\",\"t\":[\"说明\",\"注入参数\",\"本注入解析所有类型为且仅为 Event 及其子类或 None 的参数。\",\"为保证兼容性，本注入还会解析名为 event 且没有类型注解的参数。\",\"参数\",\"*args\",\"checker (ModelField | None)\",\"**kwargs (Any)\"]},\"301\":{\"h\":\"\",\"t\":[\"说明\",\"事件处理状态注入参数\",\"本注入解析所有类型为 T_State 的参数。\",\"为保证兼容性，本注入还会解析名为 state 且没有类型注解的参数。\",\"参数\",\"*args\",\"validate (bool)\",\"**kwargs (Any)\"]},\"302\":{\"h\":\"\",\"t\":[\"说明\",\"子依赖注入参数。\",\"本注入解析所有子依赖注入，然后将它们的返回值作为参数值传递给父依赖。\",\"本注入应该具有最高优先级，因此应该在其他参数之前检查。\",\"参数\",\"*args\",\"dependent (Dependent[Any])\",\"use_cache (bool)\",\"**kwargs (Any)\"]},\"303\":{\"h\":\"\",\"t\":[\"说明: Arg 参数消息纯文本\",\"参数\",\"key (str | None)\",\"返回\",\"str\"]},\"304\":{\"h\":\"\",\"t\":[\"说明\",\"默认值注入参数\",\"本注入解析所有剩余未能解析且具有默认值的参数。\",\"本注入参数应该具有最低优先级，因此应该在所有其他注入参数之后使用。\",\"参数\",\"*args\",\"validate (bool)\",\"**kwargs (Any)\"]},\"305\":{\"h\":\"\",\"t\":[\"说明\",\"事件响应器实例注入参数\",\"本注入解析所有类型为且仅为 Matcher 及其子类或 None 的参数。\",\"为保证兼容性，本注入还会解析名为 matcher 且没有类型注解的参数。\",\"参数\",\"*args\",\"checker (ModelField | None)\",\"**kwargs (Any)\"]},\"306\":{\"h\":\"\",\"t\":[\"说明\",\"的异常注入参数\",\"本注入解析所有类型为 Exception 或 None 的参数。\",\"为保证兼容性，本注入还会解析名为 exception 且没有类型注解的参数。\",\"参数\",\"*args\",\"validate (bool)\",\"**kwargs (Any)\"]},\"307\":{\"h\":\"\",\"t\":[\"说明: 类型参数\",\"参数\",\"empty\",\"返回\",\"str\"]},\"308\":{\"h\":\"\",\"t\":[\"说明: 消息参数\",\"参数\",\"empty\",\"返回\",\"Any\"]},\"309\":{\"h\":\"\",\"t\":[\"说明: 纯文本消息参数\",\"参数\",\"empty\",\"返回\",\"str\"]},\"310\":{\"h\":\"\",\"t\":[\"说明:to_me 参数\",\"参数\",\"empty\",\"返回\",\"bool\"]},\"311\":{\"h\":\"\",\"t\":[\"说明: 消息命令元组\",\"参数\",\"empty\",\"返回\",\"tuple[str, ...]\"]},\"312\":{\"h\":\"\",\"t\":[\"说明: 消息命令文本\",\"参数\",\"empty\",\"返回\",\"str\"]},\"313\":{\"h\":\"\",\"t\":[\"说明: 消息命令参数\",\"参数\",\"empty\",\"返回\",\"Any\"]},\"314\":{\"h\":\"\",\"t\":[\"说明: 消息命令开头\",\"参数\",\"empty\",\"返回\",\"str\"]},\"315\":{\"h\":\"\",\"t\":[\"说明: 消息命令与参数之间的空白\",\"参数\",\"empty\",\"返回\",\"str\"]},\"316\":{\"h\":\"\",\"t\":[\"说明: shell 命令解析后的参数字典\",\"参数\",\"empty\",\"返回\",\"Any\"]},\"317\":{\"h\":\"\",\"t\":[\"说明: shell 命令原始参数列表\",\"参数\",\"empty\",\"返回\",\"Any\"]},\"318\":{\"h\":\"\",\"t\":[\"说明: 正则匹配结果\",\"参数\",\"empty\",\"返回\",\"Match[str]\"]},\"319\":{\"h\":\"\",\"t\":[\"说明: 正则匹配结果文本\",\"重载\",\"1.(__group=0) -> str\",\"参数\",\"__group (Literal[0])\",\"返回\",\"str\",\"2.(__group) -> str | Any\",\"参数\",\"__group (str | int)\",\"返回\",\"str | Any\",\"3.(__group1, __group2, *groups) -> tuple[str | Any, ...]\",\"参数\",\"__group1 (str | int)\",\"__group2 (str | int)\",\"*groups (str | int)\",\"返回\",\"tuple[str | Any, ...]\"]},\"320\":{\"h\":\"\",\"t\":[\"说明: 正则匹配结果 group 元组\",\"参数\",\"empty\",\"返回\",\"tuple[Any, ...]\"]},\"321\":{\"h\":\"\",\"t\":[\"说明: 正则匹配结果 group 字典\",\"参数\",\"empty\",\"返回\",\"dict[str, Any]\"]},\"322\":{\"h\":\"\",\"t\":[\"说明: 响应触发前缀\",\"参数\",\"empty\",\"返回\",\"str\"]},\"323\":{\"h\":\"\",\"t\":[\"说明: 响应触发后缀\",\"参数\",\"empty\",\"返回\",\"str\"]},\"324\":{\"h\":\"\",\"t\":[\"说明: 响应触发完整消息\",\"参数\",\"empty\",\"返回\",\"str\"]},\"325\":{\"h\":\"\",\"t\":[\"说明: 响应触发关键字\",\"参数\",\"empty\",\"返回\",\"str\"]},\"326\":{\"h\":\"\",\"t\":[\"说明:receive 事件参数\",\"参数\",\"id (str | None)\",\"default (Any)\",\"返回\",\"Any\"]},\"327\":{\"h\":\"\",\"t\":[\"说明:last_receive 事件参数\",\"参数\",\"default (Any)\",\"返回\",\"Any\"]},\"328\":{\"h\":\"nonebot.permission\",\"t\":[\"本模块是 Matcher.permission 的类型定义。\",\"每个事件响应器 拥有一个 Permission，其中是 PermissionChecker 的集合。 只要有一个 PermissionChecker 检查结果为 True 时就会继续运行。\"]},\"329\":{\"h\":\"\",\"t\":[\"说明\",\"匹配当前事件属于指定会话。\",\"如果 perm 中仅有 User 类型的权限检查函数，则会去除原有检查函数的会话 ID 限制。\",\"参数\",\"*users (str)\",\"perm (Permission | None): 需要同时满足的权限\",\"user: 会话白名单\",\"返回\",\"untyped\"]},\"330\":{\"h\":\"\",\"t\":[\"说明: 检查当前事件是否属于指定会话。\",\"参数\",\"users (tuple[str, ...]): 会话 ID 元组\",\"perm (Permission | None): 需同时满足的权限\"]},\"331\":{\"h\":\"\",\"t\":[\"说明\",\"从事件中获取会话 ID。\",\"如果 perm 中仅有 User 类型的权限检查函数，则会去除原有的会话 ID 限制。\",\"参数\",\"event (Event): Event 对象\",\"perm (Permission | None): 需同时满足的权限\",\"返回\",\"Self\"]},\"332\":{\"h\":\"\",\"t\":[\"说明\",\"指定会话与权限。\",\"如果 perm 中仅有 User 类型的权限检查函数，则会去除原有的会话 ID 限制。\",\"参数\",\"*users (str): 会话白名单\",\"perm (Permission | None): 需同时满足的权限\",\"返回\",\"Self\"]},\"333\":{\"h\":\"\",\"t\":[\"说明\",\"权限类。\",\"当事件传递时，在 Matcher 运行前进行检查。\",\"参数\",\"*checkers (T_PermissionChecker | Dependent[bool]): PermissionChecker\",\"用法\",\"Permission(async_function) | sync_function # 等价于 Permission(async_function, sync_function)\"]},\"334\":{\"h\":\"\",\"t\":[\"类型: set[Dependent[bool]]\",\"说明: 存储 PermissionChecker\"]},\"335\":{\"h\":\"\",\"t\":[\"说明: 检查是否满足某个权限。\",\"参数\",\"bot (Bot): Bot 对象\",\"event (Event): Event 对象\",\"stack (AsyncExitStack | None): 异步上下文栈\",\"dependency_cache (T_DependencyCache | None): 依赖缓存\",\"返回\",\"bool\"]},\"336\":{\"h\":\"\",\"t\":[\"说明: 检查是否为消息事件\",\"参数\",\"auto\"]},\"337\":{\"h\":\"\",\"t\":[\"说明: 检查是否为通知事件\",\"参数\",\"auto\"]},\"338\":{\"h\":\"\",\"t\":[\"说明: 检查是否为请求事件\",\"参数\",\"auto\"]},\"339\":{\"h\":\"\",\"t\":[\"说明: 检查是否为元事件\",\"参数\",\"auto\"]},\"340\":{\"h\":\"\",\"t\":[\"类型:Permission\",\"说明\",\"匹配任意 message 类型事件\",\"仅在需要同时捕获不同类型事件时使用，优先使用 message type 的 Matcher。\"]},\"341\":{\"h\":\"\",\"t\":[\"类型:Permission\",\"说明\",\"匹配任意 notice 类型事件\",\"仅在需要同时捕获不同类型事件时使用，优先使用 notice type 的 Matcher。\"]},\"342\":{\"h\":\"\",\"t\":[\"类型:Permission\",\"说明\",\"匹配任意 request 类型事件\",\"仅在需要同时捕获不同类型事件时使用，优先使用 request type 的 Matcher。\"]},\"343\":{\"h\":\"\",\"t\":[\"类型:Permission\",\"说明\",\"匹配任意 meta_event 类型事件\",\"仅在需要同时捕获不同类型事件时使用，优先使用 meta_event type 的 Matcher。\"]},\"344\":{\"h\":\"\",\"t\":[\"说明: 检查当前事件是否是消息事件且属于超级管理员\",\"参数\",\"auto\"]},\"345\":{\"h\":\"\",\"t\":[\"类型:Permission\",\"说明: 匹配任意超级用户事件\"]},\"346\":{\"h\":\"nonebot.rule\",\"t\":[\"本模块是 Matcher.rule 的类型定义。\",\"每个事件响应器拥有一个Rule，其中是 RuleChecker 的集合。 只有当所有 RuleChecker 检查结果为 True 时继续运行。\"]},\"347\":{\"h\":\"\",\"t\":[\"说明\",\"规则类。\",\"当事件传递时，在 Matcher 运行前进行检查。\",\"参数\",\"*checkers (T_RuleChecker | Dependent[bool]): RuleChecker\",\"用法\",\"Rule(async_function) & sync_function # 等价于 Rule(async_function, sync_function)\"]},\"348\":{\"h\":\"\",\"t\":[\"类型: set[Dependent[bool]]\",\"说明: 存储 RuleChecker\"]},\"349\":{\"h\":\"\",\"t\":[\"说明: 检查是否符合所有规则\",\"参数\",\"bot (Bot): Bot 对象\",\"event (Event): Event 对象\",\"state (T_State): 当前 State\",\"stack (AsyncExitStack | None): 异步上下文栈\",\"dependency_cache (T_DependencyCache | None): 依赖缓存\",\"返回\",\"bool\"]},\"350\":{\"h\":\"\",\"t\":[\"参数\",\"auto\"]},\"351\":{\"h\":\"\",\"t\":[\"说明: TRIE_VALUE(command_start, command)\",\"参数\",\"auto\"]},\"352\":{\"h\":\"\",\"t\":[\"说明: 检查消息纯文本是否以指定字符串开头。\",\"参数\",\"msg (tuple[str, ...]): 指定消息开头字符串元组\",\"ignorecase (bool): 是否忽略大小写\"]},\"353\":{\"h\":\"\",\"t\":[\"说明: 匹配消息纯文本开头。\",\"参数\",\"msg (str | tuple[str, ...]): 指定消息开头字符串元组\",\"ignorecase (bool): 是否忽略大小写\",\"返回\",\"Rule\"]},\"354\":{\"h\":\"\",\"t\":[\"说明: 检查消息纯文本是否以指定字符串结尾。\",\"参数\",\"msg (tuple[str, ...]): 指定消息结尾字符串元组\",\"ignorecase (bool): 是否忽略大小写\"]},\"355\":{\"h\":\"\",\"t\":[\"说明: 匹配消息纯文本结尾。\",\"参数\",\"msg (str | tuple[str, ...]): 指定消息开头字符串元组\",\"ignorecase (bool): 是否忽略大小写\",\"返回\",\"Rule\"]},\"356\":{\"h\":\"\",\"t\":[\"说明: 检查消息纯文本是否与指定字符串全匹配。\",\"参数\",\"msg (tuple[str, ...]): 指定消息全匹配字符串元组\",\"ignorecase (bool): 是否忽略大小写\"]},\"357\":{\"h\":\"\",\"t\":[\"说明: 完全匹配消息。\",\"参数\",\"msg (str | tuple[str, ...]): 指定消息全匹配字符串元组\",\"ignorecase (bool): 是否忽略大小写\",\"返回\",\"Rule\"]},\"358\":{\"h\":\"\",\"t\":[\"说明: 检查消息纯文本是否包含指定关键字。\",\"参数\",\"*keywords (str): 指定关键字元组\"]},\"359\":{\"h\":\"\",\"t\":[\"说明: 匹配消息纯文本关键词。\",\"参数\",\"*keywords (str): 指定关键字元组\",\"返回\",\"Rule\"]},\"360\":{\"h\":\"\",\"t\":[\"说明: 检查消息是否为指定命令。\",\"参数\",\"cmds (list[tuple[str, ...]]): 指定命令元组列表\",\"force_whitespace (str | bool | None): 是否强制命令后必须有指定空白符\"]},\"361\":{\"h\":\"\",\"t\":[\"说明\",\"匹配消息命令。\",\"根据配置里提供的 command_start,command_sep 判断消息是否为命令。\",\"可以通过 Command 获取匹配成功的命令（例: (\\\"test\\\",)）， 通过 RawCommand 获取匹配成功的原始命令文本（例: \\\"/test\\\"）， 通过 CommandArg 获取匹配成功的命令参数。\",\"参数\",\"*cmds (str | tuple[str, ...]): 命令文本或命令元组\",\"force_whitespace (str | bool | None): 是否强制命令后必须有指定空白符\",\"返回\",\"Rule\",\"用法\",\"使用默认 command_start, command_sep 配置情况下：\",\"命令 (\\\"test\\\",) 可以匹配: /test 开头的消息 命令 (\\\"test\\\", \\\"sub\\\") 可以匹配: /test.sub 开头的消息\",\"提示\",\"命令内容与后续消息间无需空格!\"]},\"362\":{\"h\":\"\",\"t\":[\"说明\",\"shell_like 命令参数解析器，解析出错时不会退出程序。\",\"支持 Message 富文本解析。\",\"参数\",\"auto\",\"用法\",\"用法与 argparse.ArgumentParser 相同， 参考文档: argparse\"]},\"363\":{\"h\":\"\",\"t\":[\"重载\",\"1.(args=None, namespace=None) -> tuple[Namespace, list[str | MessageSegment]]\",\"参数\",\"args (Sequence[str | MessageSegment] | None)\",\"namespace (None)\",\"返回\",\"tuple[Namespace, list[str | MessageSegment]]\",\"2.(args, namespace) -> tuple[T, list[str | MessageSegment]]\",\"参数\",\"args (Sequence[str | MessageSegment] | None)\",\"namespace (T)\",\"返回\",\"tuple[T, list[str | MessageSegment]]\",\"3.(*, namespace) -> tuple[T, list[str | MessageSegment]]\",\"参数\",\"namespace (T)\",\"返回\",\"tuple[T, list[str | MessageSegment]]\"]},\"364\":{\"h\":\"\",\"t\":[\"说明: 检查消息是否为指定 shell 命令。\",\"参数\",\"cmds (list[tuple[str, ...]]): 指定命令元组列表\",\"parser (ArgumentParser | None): 可选参数解析器\"]},\"365\":{\"h\":\"\",\"t\":[\"说明\",\"匹配 shell_like 形式的消息命令。\",\"根据配置里提供的 command_start,command_sep 判断消息是否为命令。\",\"可以通过 Command 获取匹配成功的命令 （例: (\\\"test\\\",)）， 通过 RawCommand 获取匹配成功的原始命令文本 （例: \\\"/test\\\"）， 通过 ShellCommandArgv 获取解析前的参数列表 （例: [\\\"arg\\\", \\\"-h\\\"]）， 通过 ShellCommandArgs 获取解析后的参数字典 （例: {\\\"arg\\\": \\\"arg\\\", \\\"h\\\": True}）。\",\"警告\",\"如果参数解析失败，则通过 ShellCommandArgs 获取的将是 ParserExit 异常。\",\"参数\",\"*cmds (str | tuple[str, ...]): 命令文本或命令元组\",\"parser (ArgumentParser | None): ArgumentParser 对象\",\"返回\",\"Rule\",\"用法\",\"使用默认 command_start, command_sep 配置，更多示例参考argparse 标准库文档。\",\"from nonebot.rule import ArgumentParser parser = ArgumentParser() parser.add_argument(\\\"-a\\\", action=\\\"store_true\\\") rule = shell_command(\\\"ls\\\", parser=parser)\",\"提示\",\"命令内容与后续消息间无需空格!\"]},\"366\":{\"h\":\"\",\"t\":[\"说明: 检查消息字符串是否符合指定正则表达式。\",\"参数\",\"regex (str): 正则表达式\",\"flags (int): 正则表达式标记\"]},\"367\":{\"h\":\"\",\"t\":[\"说明\",\"匹配符合正则表达式的消息字符串。\",\"可以通过 RegexStr 获取匹配成功的字符串， 通过 RegexGroup 获取匹配成功的 group 元组， 通过 RegexDict 获取匹配成功的 group 字典。\",\"参数\",\"regex (str): 正则表达式\",\"flags (int | re.RegexFlag): 正则表达式标记\",\"返回\",\"Rule\",\"提示\",\"正则表达式匹配使用 search 而非 match，如需从头匹配请使用 r\\\"^xxx\\\" 来确保匹配开头\",\"提示\",\"正则表达式匹配使用 EventMessage 的 str 字符串， 而非 EventMessage 的 PlainText 纯文本字符串\"]},\"368\":{\"h\":\"\",\"t\":[\"说明: 检查事件是否与机器人有关。\",\"参数\",\"auto\"]},\"369\":{\"h\":\"\",\"t\":[\"说明: 匹配与机器人有关的事件。\",\"参数\",\"empty\",\"返回\",\"Rule\"]},\"370\":{\"h\":\"\",\"t\":[\"说明: 检查事件类型是否为指定类型。\",\"参数\",\"*types (type[Event])\"]},\"371\":{\"h\":\"\",\"t\":[\"说明: 匹配事件类型。\",\"参数\",\"*types (type[Event]): 事件类型\",\"返回\",\"Rule\"]},\"372\":{\"h\":\"nonebot.typing\",\"t\":[\"本模块定义了 NoneBot 模块中共享的一些类型。\",\"使用 Python 的 Type Hint 语法， 参考 PEP 484,PEP 526 和typing。\"]},\"373\":{\"h\":\"\",\"t\":[\"说明: 标记一个方法为父类 interface 的 implement\",\"参数\",\"InterfaceClass (object)\",\"返回\",\"untyped\"]},\"374\":{\"h\":\"\",\"t\":[\"参数\",\"type_ (type[Any])\",\"返回\",\"bool\"]},\"375\":{\"h\":\"\",\"t\":[\"参数\",\"origin (type[Any] | None)\",\"返回\",\"bool\"]},\"376\":{\"h\":\"\",\"t\":[\"说明: 判断是否是 Literal 类型\",\"参数\",\"origin (type[Any] | None)\",\"返回\",\"bool\"]},\"377\":{\"h\":\"\",\"t\":[\"说明: 获取 Literal 类型包含的所有值\",\"参数\",\"type_ (type[Any])\",\"返回\",\"list[Any]\"]},\"378\":{\"h\":\"\",\"t\":[\"说明: 判断是否是 Annotated 类型\",\"参数\",\"origin (type[Any] | None)\",\"返回\",\"bool\"]},\"379\":{\"h\":\"\",\"t\":[\"说明: 判断是否是 None 类型\",\"参数\",\"type_ (type[Any])\",\"返回\",\"bool\"]},\"380\":{\"h\":\"\",\"t\":[\"参数\",\"ref (ForwardRef)\",\"globalns (dict[str, Any])\",\"localns (dict[str, Any])\",\"返回\",\"Any\"]},\"381\":{\"h\":\"\",\"t\":[\"参数\",\"auto\"]},\"382\":{\"h\":\"\",\"t\":[\"类型: dict[Any, Any]\",\"说明: 事件处理状态 State 类型\"]},\"383\":{\"h\":\"\",\"t\":[\"类型: _DependentCallable[Any]\",\"说明\",\"Bot 连接建立时钩子函数\",\"依赖参数:\",\"DependParam: 子依赖参数\",\"BotParam: Bot 对象\",\"DefaultParam: 带有默认值的参数\"]},\"384\":{\"h\":\"\",\"t\":[\"类型: _DependentCallable[Any]\",\"说明\",\"Bot 连接断开时钩子函数\",\"依赖参数:\",\"DependParam: 子依赖参数\",\"BotParam: Bot 对象\",\"DefaultParam: 带有默认值的参数\"]},\"385\":{\"h\":\"\",\"t\":[\"类型: (Bot, str, dict[str, Any]) -> Awaitable[Any]\",\"说明:bot.call_api 钩子函数\"]},\"386\":{\"h\":\"\",\"t\":[\"类型: (Bot, Exception | None, str, dict[str, Any], Any) -> Awaitable[Any]\",\"说明:bot.call_api 后执行的函数，参数分别为 bot, exception, api, data, result\"]},\"387\":{\"h\":\"\",\"t\":[\"类型: _DependentCallable[Any]\",\"说明\",\"事件预处理函数 EventPreProcessor 类型\",\"依赖参数:\",\"DependParam: 子依赖参数\",\"BotParam: Bot 对象\",\"EventParam: Event 对象\",\"StateParam: State 对象\",\"DefaultParam: 带有默认值的参数\"]},\"388\":{\"h\":\"\",\"t\":[\"类型: _DependentCallable[Any]\",\"说明\",\"事件后处理函数 EventPostProcessor 类型\",\"依赖参数:\",\"DependParam: 子依赖参数\",\"BotParam: Bot 对象\",\"EventParam: Event 对象\",\"StateParam: State 对象\",\"DefaultParam: 带有默认值的参数\"]},\"389\":{\"h\":\"\",\"t\":[\"类型: _DependentCallable[Any]\",\"说明\",\"事件响应器运行前预处理函数 RunPreProcessor 类型\",\"依赖参数:\",\"DependParam: 子依赖参数\",\"BotParam: Bot 对象\",\"EventParam: Event 对象\",\"StateParam: State 对象\",\"MatcherParam: Matcher 对象\",\"DefaultParam: 带有默认值的参数\"]},\"390\":{\"h\":\"\",\"t\":[\"类型: _DependentCallable[Any]\",\"说明\",\"事件响应器运行后后处理函数 RunPostProcessor 类型\",\"依赖参数:\",\"DependParam: 子依赖参数\",\"BotParam: Bot 对象\",\"EventParam: Event 对象\",\"StateParam: State 对象\",\"MatcherParam: Matcher 对象\",\"ExceptionParam: 异常对象（可能为 None）\",\"DefaultParam: 带有默认值的参数\"]},\"391\":{\"h\":\"\",\"t\":[\"类型: _DependentCallable[bool]\",\"说明\",\"RuleChecker 即判断是否响应事件的处理函数。\",\"依赖参数:\",\"DependParam: 子依赖参数\",\"BotParam: Bot 对象\",\"EventParam: Event 对象\",\"StateParam: State 对象\",\"DefaultParam: 带有默认值的参数\"]},\"392\":{\"h\":\"\",\"t\":[\"类型: _DependentCallable[bool]\",\"说明\",\"PermissionChecker 即判断事件是否满足权限的处理函数。\",\"依赖参数:\",\"DependParam: 子依赖参数\",\"BotParam: Bot 对象\",\"EventParam: Event 对象\",\"DefaultParam: 带有默认值的参数\"]},\"393\":{\"h\":\"\",\"t\":[\"类型: _DependentCallable[Any]\",\"说明: Handler 处理函数。\"]},\"394\":{\"h\":\"\",\"t\":[\"类型: _DependentCallable[str]\",\"说明\",\"TypeUpdater 在 Matcher.pause, Matcher.reject 时被运行，用于更新响应的事件类型。 默认会更新为 message。\",\"依赖参数:\",\"DependParam: 子依赖参数\",\"BotParam: Bot 对象\",\"EventParam: Event 对象\",\"StateParam: State 对象\",\"MatcherParam: Matcher 对象\",\"DefaultParam: 带有默认值的参数\"]},\"395\":{\"h\":\"\",\"t\":[\"类型: _DependentCallable[Permission]\",\"说明\",\"PermissionUpdater 在 Matcher.pause, Matcher.reject 时被运行，用于更新会话对象权限。 默认会更新为当前事件的触发对象。\",\"依赖参数:\",\"DependParam: 子依赖参数\",\"BotParam: Bot 对象\",\"EventParam: Event 对象\",\"StateParam: State 对象\",\"MatcherParam: Matcher 对象\",\"DefaultParam: 带有默认值的参数\"]},\"396\":{\"h\":\"\",\"t\":[\"类型: dict[_DependentCallable[Any], DependencyCache]\",\"说明: 依赖缓存, 用于存储依赖函数的返回值\"]},\"397\":{\"h\":\"nonebot.utils\",\"t\":[\"本模块包含了 NoneBot 的一些工具函数\"]},\"398\":{\"h\":\"\",\"t\":[\"说明\",\"用于记录带颜色日志时转义 <tag> 类型特殊标签\",\"参考: loguru color 标签\",\"参数\",\"s (str): 需要转义的字符串\",\"返回\",\"str\"]},\"399\":{\"h\":\"\",\"t\":[\"说明: 深度更新合并字典\",\"参数\",\"mapping (dict[K, Any])\",\"*updating_mappings (dict[K, Any])\",\"返回\",\"dict[K, Any]\"]},\"400\":{\"h\":\"\",\"t\":[\"说明: 检查 cls 是否是 class_or_tuple 中的一个类型子类并忽略类型错误。\",\"参数\",\"cls (Any)\",\"class_or_tuple (type[Any] | tuple[type[Any], ...])\",\"返回\",\"bool\"]},\"401\":{\"h\":\"\",\"t\":[\"说明\",\"检查 cls 是否是 class_or_tuple 中的一个类型子类。\",\"特别的：\",\"如果 cls 是 typing.Union 或 types.UnionType 类型， 则会检查其中的所有类型是否是 class_or_tuple 中一个类型的子类或 None。\",\"如果 cls 是 typing.Literal 类型， 则会检查其中的所有值是否是 class_or_tuple 中一个类型的实例。\",\"如果 cls 是 typing.TypeVar 类型， 则会检查其 __bound__ 或 __constraints__ 是否是 class_or_tuple 中一个类型的子类或 None。\",\"参数\",\"cls (Any)\",\"class_or_tuple (type[Any] | tuple[type[Any], ...])\",\"返回\",\"bool\"]},\"402\":{\"h\":\"\",\"t\":[\"说明: 检查 type_ 是否是复杂类型\",\"参数\",\"type_ (type[Any])\",\"返回\",\"bool\"]},\"403\":{\"h\":\"\",\"t\":[\"说明: 检查 call 是否是一个 callable 协程函数\",\"参数\",\"call ((...) -> Any)\",\"返回\",\"bool\"]},\"404\":{\"h\":\"\",\"t\":[\"说明: 检查 call 是否是一个生成器函数\",\"参数\",\"call ((...) -> Any)\",\"返回\",\"bool\"]},\"405\":{\"h\":\"\",\"t\":[\"说明: 检查 call 是否是一个异步生成器函数\",\"参数\",\"call ((...) -> Any)\",\"返回\",\"bool\"]},\"406\":{\"h\":\"\",\"t\":[\"说明: 一个用于包装 sync function 为 async function 的装饰器\",\"参数\",\"call ((P) -> R): 被装饰的同步函数\",\"返回\",\"(P) -> Coroutine[None, None, R]\"]},\"407\":{\"h\":\"\",\"t\":[\"说明: 一个用于包装 sync context manager 为 async context manager 的执行函数\",\"参数\",\"cm (AbstractContextManager[T])\",\"返回\",\"AsyncGenerator[T, None]\"]},\"408\":{\"h\":\"\",\"t\":[\"说明: 运行协程并当遇到指定异常时返回指定值。\",\"重载\",\"1.(coro, exc, return_on_err=None) -> T | None\",\"参数\",\"coro (Coroutine[Any, Any, T])\",\"exc (tuple[type[Exception], ...])\",\"return_on_err (None)\",\"返回\",\"T | None\",\"2.(coro, exc, return_on_err) -> T | R\",\"参数\",\"coro (Coroutine[Any, Any, T])\",\"exc (tuple[type[Exception], ...])\",\"return_on_err (R)\",\"返回\",\"T | R\",\"参数\",\"coro: 要运行的协程\",\"exc: 要捕获的异常\",\"return_on_err: 当发生异常时返回的值\",\"返回\",\"协程的返回值或发生异常时的指定值\"]},\"409\":{\"h\":\"\",\"t\":[\"说明: 运行协程并在取消时屏蔽取消异常。\",\"参数\",\"coro (Coroutine[Any, Any, T]): 要运行的协程\",\"返回\",\"T: 协程的返回值\"]},\"410\":{\"h\":\"\",\"t\":[\"参数\",\"exc_group (BaseExceptionGroup[E])\",\"返回\",\"Generator[E, None, None]\"]},\"411\":{\"h\":\"\",\"t\":[\"说明: 获取对象的名称\",\"参数\",\"obj (Any)\",\"返回\",\"str\"]},\"412\":{\"h\":\"\",\"t\":[\"说明: 转换路径为模块名\",\"参数\",\"path (Path)\",\"返回\",\"str\"]},\"413\":{\"h\":\"\",\"t\":[\"说明: 解析并导入点分表示法的对象\",\"参数\",\"obj_str (str)\",\"default_attr (str)\",\"default_prefix (str | None)\",\"返回\",\"Any\"]},\"414\":{\"h\":\"\",\"t\":[\"说明: 类属性装饰器\",\"参数\",\"func ((Any) -> T)\"]},\"415\":{\"h\":\"\",\"t\":[\"说明: 可以序列化 Message(List[Dataclass]) 的 JSONEncoder\",\"参数\",\"auto\"]},\"416\":{\"h\":\"\",\"t\":[\"参数\",\"o\",\"返回\",\"untyped\"]},\"417\":{\"h\":\"\",\"t\":[\"说明: 用于打印 adapter 的日志。\",\"参数\",\"logger_name (str): adapter 的名称\",\"返回\",\"untyped: 日志记录函数\",\"日志记录函数的参数:\",\"level: 日志等级\",\"message: 日志信息\",\"exception: 异常信息\"]},\"418\":{\"h\":\"日志\",\"t\":[\"无论是在开发还是在生产环境中，日志都是一个重要的功能，可以帮助我们了解运行状况、排查问题等。虽然我们可以使用 print 来将需要的信息输出到控制台，但是这种方式难以控制，而且不利于日志的归档、分析等。NoneBot 使用优秀的 Loguru 库来进行日志记录。\"]},\"419\":{\"h\":\"记录日志\",\"t\":[\"我们可以从 NoneBot 中导入 logger 对象，然后使用 logger 对象的方法来记录日志。\",\"from nonebot import logger logger.trace(\\\"This is a trace message\\\") logger.debug(\\\"This is a debug message\\\") logger.info(\\\"This is an info message\\\") logger.success(\\\"This is a success message\\\") logger.warning(\\\"This is a warning message\\\") logger.error(\\\"This is an error message\\\") logger.critical(\\\"This is a critical message\\\")\",\"我们仅需一行代码即可记录对应级别的日志。日志可以通过配置 LOG_LEVEL 配置项来过滤输出等级，控制台中仅会输出大于等于 LOG_LEVEL 的日志。默认的 LOG_LEVEL 为 INFO，即只会输出 INFO、SUCCESS、WARNING、ERROR、CRITICAL 级别的日志。\",\"如果需要记录 Exception traceback 日志，可以向 logger 添加 exception 选项：\",\"try: 1 / 0 except ZeroDivisionError: logger.opt(exception=True).error(\\\"ZeroDivisionError\\\")\",\"如果需要输出彩色日志，可以向 logger 添加 colors 选项：\",\"logger.opt(colors=True).warning(\\\"We got a <red>BIG</red> problem\\\")\",\"更多日志记录方法请参考 Loguru 文档。\"]},\"420\":{\"h\":\"自定义日志输出\",\"t\":[\"NoneBot 在启动时会添加一个默认的日志处理器，该处理器会将日志输出到stdout，并且根据 LOG_LEVEL 配置项过滤日志等级。\",\"默认的日志格式为：\",\"<g>{time:MM-DD HH:mm:ss}</g> [<lvl>{level}</lvl>] <c><u>{name}</u></c> | {message}\",\"我们可以从 nonebot.log 模块导入以使用 NoneBot 的默认格式和过滤器：\",\"from nonebot.log import default_format, default_filter\",\"如果需要自定义日志格式，我们需要移除 NoneBot 默认的日志处理器并添加新的日志处理器。例如，在机器人入口文件中 nonebot.init 之前添加以下内容：\",\"from nonebot.log import logger_id # 移除 NoneBot 默认的日志处理器 logger.remove(logger_id) # 添加新的日志处理器 logger.add( sys.stdout, level=0, diagnose=True, format=\\\"<g>{time:MM-DD HH:mm:ss}</g> [<lvl>{level}</lvl>] <c><u>{name}</u></c> | {message}\\\", filter=default_filter )\",\"如果想要输出日志到文件，我们可以使用 logger.add 方法添加文件处理器：\",\"logger.add(\\\"error.log\\\", level=\\\"ERROR\\\", format=default_format, rotation=\\\"1 week\\\")\",\"更多日志处理器的使用方法请参考 Loguru 文档。\"]},\"421\":{\"h\":\"重定向 logging 日志\",\"t\":[\"logging 是 Python 标准库中的日志模块，NoneBot 提供了一个 logging handler 用于将 logging 日志重定向到 loguru 处理。\",\"from nonebot.log import LoguruHandler # root logger 添加 LoguruHandler logging.basicConfig(handlers=[LoguruHandler()]) # 或者为其他 logging.Logger 添加 LoguruHandler logger.addHandler(LoguruHandler())\"]},\"422\":{\"h\":\"事件类型与重载\",\"t\":[\"在之前的示例中，我们已经了解了如何获取事件信息以及使用平台接口。但是，事件信息通常不仅仅包含消息这一个内容，还有其他平台提供的信息，例如消息发送时间、消息发送者等等。同时，在使用平台接口时，我们需要确保使用的平台接口与所要发送的平台类型一致，对不同类型的事件需要做出不同的处理。在本章节中，我们将介绍如何获取事件更多的信息以及根据事件类型进行不同的处理。\"]},\"423\":{\"h\":\"事件类型\",\"t\":[\"在 NoneBot 中，事件均是 nonebot.adapters.Event 基类的子类型，基类对一些必要的属性进行了抽象，子类型则根据不同的平台进行了实现。在自定义权限一节中，我们就使用了 Event 的抽象方法 get_user_id 来获取事件发送者 ID，这个方法由协议适配器进行了实现，返回机器人用户对应的平台 ID。更多的基类抽象方法可以在使用适配器中查看。\",\"既然事件是基类的子类型，我们实际可以获得的信息通常多于基类抽象方法所提供的。如果我们不满足于基类能获得的信息，我们可以小小的修改一下事件处理函数的事件参数类型注解，使其变为子类型，这样我们就可以通过协议适配器定义的子类型来获取更多的信息。我们以 Console 协议适配器为例：\",\"from nonebot.adapters.console import MessageEvent @weather.got(\\\"location\\\", prompt=\\\"请输入地名\\\") async def got_location(event: MessageEvent, location: str = ArgPlainText()): await weather.finish(f\\\"{event.time.strftime('%Y-%m-%d')} {location} 的天气是...\\\")\",\"在上面的代码中，我们获取了 Console 协议适配器的消息事件提供的发送时间 time 属性。\",\"注意\",\"如果基类就能满足你的需求，那么就不要修改事件参数类型注解，这样可以使你的代码更加通用，可以在更多平台上运行。如何根据不同平台事件类型进行不同的处理，我们将在重载一节中介绍。\"]},\"424\":{\"h\":\"重载\",\"t\":[\"我们在编写机器人时，常常会遇到这样一个问题：如何对私聊和群聊消息进行不同的处理？如何对不同平台的事件进行不同的处理？针对这些问题，NoneBot 提供了一个便捷而高效的解决方案 ── 重载。简单来说，依赖函数会根据其参数的类型注解来决定是否执行，忽略不符合其参数类型注解的情况。这样，我们就可以通过修改事件参数类型注解来实现对不同事件的处理，或者修改 Bot 参数类型注解来实现使用不同平台的接口。我们以 OneBot 协议适配器为例：\",\"from nonebot.adapters.onebot.v11 import PrivateMessageEvent, GroupMessageEvent @matcher.handle() async def handle_private(event: PrivateMessageEvent): await matcher.finish(\\\"私聊消息\\\") @matcher.handle() async def handle_group(event: GroupMessageEvent): await matcher.finish(\\\"群聊消息\\\")\",\"这样，机器人用户就会在私聊和群聊中分别收到不同的回复。同样的，我们也可以通过修改 Bot 参数类型注解来实现使用不同平台的接口：\",\"from nonebot.adapters.console import Bot as ConsoleBot from nonebot.adapters.onebot.v11 import Bot as OneBot @matcher.handle() async def handle_console(bot: ConsoleBot): await bot.bell() @matcher.handle() async def handle_onebot(bot: OneBot): await bot.send_group_message(group_id=123123, message=\\\"OneBot\\\")\",\"注意\",\"重载机制对所有的参数类型注解都有效，因此，依赖注入也可以使用这个特性来对不同的返回值进行处理。\",\"但 Bot、Event 和 Matcher 三者的参数类型注解具有最高检查优先级，如果三者任一类型注解不匹配，那么其他依赖注入将不会执行（如：Depends）。\",\"提示\",\"如何更好地编写一个跨平台的插件，我们将在最佳实践中介绍。\"]},\"425\":{\"h\":\"响应规则\",\"t\":[\"机器人在实际应用中，往往会接收到多种多样的事件类型，NoneBot 通过响应规则来控制事件的处理。\",\"在指南中，我们为 weather 命令添加了一个 rule=to_me() 参数，这个参数就是一个响应规则，确保只有在私聊或者 @bot 时才会响应。\",\"响应规则是一个 Rule 对象，它由一系列的 RuleChecker 函数组成，每个 RuleChecker 函数都会检查事件是否符合条件，如果所有的检查都通过，则事件会被处理。\"]},\"426\":{\"h\":\"RuleChecker\",\"t\":[\"RuleChecker 是一个返回值为 bool 类型的依赖函数，即 RuleChecker 支持依赖注入。我们可以根据上一节中添加的配置项，在 weather 插件目录中编写一个响应规则：\",\"from nonebot import get_plugin_config from .config import Config plugin_config = get_plugin_config(Config) async def is_enable() -> bool: return plugin_config.weather_plugin_enabled weather = on_command(\\\"天气\\\", rule=is_enable)\",\"在上面的代码中，我们定义了一个函数 is_enable，它会检查配置项 weather_plugin_enabled 是否为 True。这个函数 is_enable 即为一个 RuleChecker。\"]},\"427\":{\"h\":\"Rule\",\"t\":[\"Rule 是若干个 RuleChecker 的集合，它会并发调用每个 RuleChecker，只有当所有 RuleChecker 检查通过时匹配成功。例如：我们可以组合两个 RuleChecker，一个用于检查插件是否启用，一个用于检查用户是否在黑名单中：\",\"from nonebot.rule import Rule from nonebot.adapters import Event async def is_enable() -> bool: return plugin_config.weather_plugin_enabled async def is_blacklisted(event: Event) -> bool: return event.get_user_id() not in BLACKLIST rule = Rule(is_enable, is_blacklisted) weather = on_command(\\\"天气\\\", rule=rule)\"]},\"428\":{\"h\":\"合并响应规则\",\"t\":[\"在定义响应规则时，我们可以将规则进行细分，来更好地复用规则。而在使用时，我们需要合并多个规则。除了使用 Rule 对象来组合多个 RuleChecker 外，我们还可以对 Rule 对象进行合并。在原 weather 插件中，我们可以将 rule=to_me() 与 rule=is_enable 使用 & 运算符合并：\",\"from nonebot.rule import to_me from nonebot import get_plugin_config from .config import Config plugin_config = get_plugin_config(Config) async def is_enable() -> bool: return plugin_config.weather_plugin_enabled weather = on_command( \\\"天气\\\", rule=to_me() & is_enable, aliases={\\\"weather\\\", \\\"查天气\\\"}, priority=plugin_config.weather_command_priority, block=True, )\",\"这样，weather 命令就只会在插件启用且在私聊或者 @bot 时才会响应。\",\"合并响应规则可以有多种形式，例如：\",\"rule1 = Rule(foo_checker) rule2 = Rule(bar_checker) rule = rule1 & rule2 rule = rule1 & bar_checker rule = foo_checker & rule2\",\"同时，我们也无需担心合并了一个 None 值，Rule 会忽略 None 值。\",\"assert (rule & None) is rule\"]},\"429\":{\"h\":\"主动使用响应规则\",\"t\":[\"除了在事件响应器中使用响应规则外，我们也可以主动使用响应规则来判断事件是否符合条件。例如：\",\"rule = Rule(some_checker) result: bool = await rule(bot, event, state)\",\"我们只需要传入 Bot 对象、事件和会话状态，Rule 会并发调用所有 RuleChecker 进行检查，并返回结果。\"]},\"430\":{\"h\":\"内置响应规则\",\"t\":[\"NoneBot 内置了一些常用的响应规则，可以直接通过事件响应器辅助函数或者自行合并其他规则使用。内置响应规则列表可以参考事件响应器进阶\"]},\"431\":{\"h\":\"会话状态\",\"t\":[\"在事件处理流程中，和用户交互的过程即是会话。在会话中，我们可能需要记录一些信息，例如用户的重试次数等等，以便在会话中的不同阶段进行判断和处理。这些信息都可以存储于会话状态中。\",\"NoneBot 中的会话状态是一个字典，可以通过类型 T_State 来获取。字典内可以存储任意类型的数据，但是要注意的是，NoneBot 本身会在会话状态中存储一些信息，因此不要使用 NoneBot 使用的键名。\",\"from nonebot.typing import T_State @matcher.got(\\\"key\\\", prompt=\\\"请输入密码\\\") async def _(state: T_State, key: str = ArgPlainText()): if key != \\\"some password\\\": try_count = state.get(\\\"try_count\\\", 1) if try_count >= 3: await matcher.finish(\\\"密码错误次数过多\\\") else: state[\\\"try_count\\\"] = try_count + 1 await matcher.reject(\\\"密码错误，请重新输入\\\") await matcher.finish(\\\"密码正确\\\")\",\"会话状态的生命周期与事件处理流程相同，在期间的任何一个事件处理函数都可以进行读写。\",\"from nonebot.typing import T_State @matcher.handle() async def _(state: T_State): state[\\\"key\\\"] = \\\"value\\\" @matcher.handle() async def _(state: T_State): await matcher.finish(state[\\\"key\\\"])\",\"会话状态还可以用于发送动态消息，消息模板在发送时会使用会话状态字典进行渲染。消息模板的使用方法已经在消息处理中介绍过，这里不再赘述。\",\"from nonebot.typing import T_State from nonebot.adapters import MessageTemplate @matcher.handle() async def _(state: T_State): state[\\\"username\\\"] = \\\"user\\\" @matcher.got(\\\"password\\\", prompt=MessageTemplate(\\\"请输入 {username} 的密码\\\")) async def _(): await matcher.finish(MessageTemplate(\\\"密码为 {password}\\\"))\"]},\"432\":{\"h\":\"下一步\",\"t\":[\"至此，我们已经了解了 NoneBot 的大多数功能用法，相信你已经可以独自写出一个插件了。现在你可以选择：\",\"即刻开始插件编写！\",\"更深入地了解 NoneBot 的更多功能和原理！\"]},\"433\":{\"h\":\"数据存储\",\"t\":[\"在使用插件的过程中，难免会需要存储一些持久化数据，例如用户的个人信息、群组的信息等。除了使用数据库等第三方存储之外，还可以使用本地文件来自行管理数据。NoneBot 提供了 nonebot-plugin-localstore 插件，可用于获取正确的数据存储路径并写入数据。\"]},\"434\":{\"h\":\"安装插件\",\"t\":[\"在使用前请先安装 nonebot-plugin-localstore 插件至项目环境中，可参考获取商店插件来了解并选择安装插件的方式。如：\",\"在项目目录下执行以下命令：\",\"nb plugin install nonebot-plugin-localstore\"]},\"435\":{\"h\":\"使用插件\",\"t\":[\"nonebot-plugin-localstore 插件兼容 Windows、Linux 和 macOS 等操作系统，使用时无需关心操作系统的差异。同时插件提供 nb-cli 脚本，可以使用 nb localstore 命令来检查数据存储路径。\",\"在使用本插件前同样需要使用 require 方法进行加载并导入需要使用的方法，可参考 跨插件访问 一节进行了解，如：\",\"from nonebot import require require(\\\"nonebot_plugin_localstore\\\") import nonebot_plugin_localstore as store # 获取插件缓存目录 cache_dir = store.get_plugin_cache_dir() # 获取插件缓存文件 cache_file = store.get_plugin_cache_file(\\\"file_name\\\") # 获取插件数据目录 data_dir = store.get_plugin_data_dir() # 获取插件数据文件 data_file = store.get_plugin_data_file(\\\"file_name\\\") # 获取插件配置目录 config_dir = store.get_plugin_config_dir() # 获取插件配置文件 config_file = store.get_plugin_config_file(\\\"file_name\\\")\",\"警告\",\"在 Windows 和 macOS 系统下，插件的数据目录和配置目录是同一个目录，因此在使用时需要注意避免文件名冲突。\",\"插件提供的方法均返回一个 pathlib.Path 路径，可以参考 pathlib 文档来了解如何使用。常用的方法有：\",\"from pathlib import Path data_file = store.get_plugin_data_file(\\\"file_name\\\") # 写入文件内容 data_file.write_text(\\\"Hello World!\\\") # 读取文件内容 data = data_file.read_text()\",\"提示\",\"对于嵌套插件，子插件的存储目录将位于父插件存储目录下。\"]},\"436\":{\"h\":\"配置项\"},\"437\":{\"h\":\"localstore_use_cwd\",\"t\":[\"使用当前工作目录作为数据存储目录，以下数据目录配置项默认值将会对应变更\",\"默认值：False\",\"LOCALSTORE_USE_CWD=true\"]},\"438\":{\"h\":\"localstore_cache_dir\",\"t\":[\"自定义缓存目录\",\"默认值：\",\"当 localstore_use_cwd 为 True 时，缓存目录为 <current_working_directory>/cache，否则：\",\"macOS: ~/Library/Caches/nonebot2\",\"Unix: ~/.cache/nonebot2 (XDG default)\",\"Windows: C:\\\\Users\\\\<username>\\\\AppData\\\\Local\\\\nonebot2\\\\Cache\",\"LOCALSTORE_CACHE_DIR=/tmp/cache\"]},\"439\":{\"h\":\"localstore_data_dir\",\"t\":[\"自定义数据目录\",\"默认值：\",\"当 localstore_use_cwd 为 True 时，数据目录为 <current_working_directory>/data，否则：\",\"macOS: ~/Library/Application Support/nonebot2\",\"Unix: ~/.local/share/nonebot2 or in $XDG_DATA_HOME, if defined\",\"Win XP (not roaming): C:\\\\Documents and Settings\\\\<username>\\\\Application Data\\\\nonebot2\",\"Win 7 (not roaming): C:\\\\Users\\\\<username>\\\\AppData\\\\Local\\\\nonebot2\",\"LOCALSTORE_DATA_DIR=/tmp/data\"]},\"440\":{\"h\":\"localstore_config_dir\",\"t\":[\"自定义配置目录\",\"默认值：\",\"当 localstore_use_cwd 为 True 时，配置目录为 <current_working_directory>/config，否则：\",\"macOS: same as user_data_dir\",\"Unix: ~/.config/nonebot2\",\"Win XP (roaming): C:\\\\Documents and Settings\\\\<username>\\\\Local Settings\\\\Application Data\\\\nonebot2\",\"Win 7 (roaming): C:\\\\Users\\\\<username>\\\\AppData\\\\Roaming\\\\nonebot2\",\"LOCALSTORE_CONFIG_DIR=/tmp/config\"]},\"441\":{\"h\":\"localstore_plugin_cache_dir\",\"t\":[\"自定义插件缓存目录\",\"默认值：{}\",\"LOCALSTORE_PLUGIN_CACHE_DIR=' { \\\"plugin_id\\\": \\\"/tmp/plugin_cache\\\" } '\"]},\"442\":{\"h\":\"localstore_plugin_data_dir\",\"t\":[\"自定义插件数据目录\",\"默认值：{}\",\"LOCALSTORE_PLUGIN_DATA_DIR=' { \\\"plugin_id\\\": \\\"/tmp/plugin_data\\\" } '\"]},\"443\":{\"h\":\"localstore_plugin_config_dir\",\"t\":[\"自定义插件配置目录\",\"默认值：{}\",\"LOCALSTORE_PLUGIN_CONFIG_DIR=' { \\\"plugin_id\\\": \\\"/tmp/plugin_config\\\" } '\"]},\"444\":{\"h\":\"错误跟踪\",\"t\":[\"在应用实际运行过程中，可能会出现各种各样的错误。可能是由于代码逻辑错误，也可能是由于用户输入错误，甚至是由于第三方服务的错误。这些错误都会导致应用的运行出现问题，这时候就需要对错误进行跟踪，以便及时发现问题并进行修复。NoneBot 提供了 nonebot-plugin-sentry 插件，支持 sentry 平台，可以方便地进行错误跟踪。\"]},\"445\":{\"h\":\"安装插件\",\"t\":[\"在使用前请先安装 nonebot-plugin-sentry 插件至项目环境中，可参考获取商店插件来了解并选择安装插件的方式。如：\",\"在项目目录下执行以下命令：\",\"nb plugin install nonebot-plugin-sentry\"]},\"446\":{\"h\":\"使用插件\",\"t\":[\"在安装完成之后，仅需要对插件进行简单的配置即可使用。\"]},\"447\":{\"h\":\"获取 sentry DSN\",\"t\":[\"前往 sentry 平台，注册并创建一个新的项目，然后在项目设置中找到 Client Keys (DSN)，复制其中的 DSN 值。\"]},\"448\":{\"h\":\"配置插件\",\"t\":[\"注意\",\"错误跟踪通常在生产环境中使用，因此开发环境中 sentry_dsn 留空即会停用插件。\",\"在项目 dotenv 配置文件中添加以下配置即可使用：\",\"SENTRY_DSN=<your_sentry_dsn>\"]},\"449\":{\"h\":\"配置项\",\"t\":[\"配置项具体含义参考 Sentry Docs。\",\"sentry_dsn: str\",\"sentry_debug: bool = False\",\"sentry_release: str | None = None\",\"sentry_release: str | None = None\",\"sentry_environment: str | None = nonebot env\",\"sentry_server_name: str | None = None\",\"sentry_sample_rate: float = 1.\",\"sentry_max_breadcrumbs: int = 100\",\"sentry_attach_stacktrace: bool = False\",\"sentry_send_default_pii: bool = False\",\"sentry_in_app_include: List[str] = Field(default_factory=list)\",\"sentry_in_app_exclude: List[str] = Field(default_factory=list)\",\"sentry_request_bodies: str = \\\"medium\\\"\",\"sentry_with_locals: bool = True\",\"sentry_ca_certs: str | None = None\",\"sentry_before_send: Callable[[Any, Any], Any | None] | None = None\",\"sentry_before_breadcrumb: Callable[[Any, Any], Any | None] | None = None\",\"sentry_transport: Any | None = None\",\"sentry_http_proxy: str | None = None\",\"sentry_https_proxy: str | None = None\",\"sentry_shutdown_timeout: int = 2\"]},\"450\":{\"h\":\"定时任务\",\"t\":[\"APScheduler (Advanced Python Scheduler) 是一个 Python 第三方库，其强大的定时任务功能被广泛应用于各个场景。在 NoneBot 中，定时任务作为一个额外功能，依赖于基于 APScheduler 开发的 nonebot-plugin-apscheduler 插件进行支持。\"]},\"451\":{\"h\":\"安装插件\",\"t\":[\"在使用前请先安装 nonebot-plugin-apscheduler 插件至项目环境中，可参考获取商店插件来了解并选择安装插件的方式。如：\",\"在项目目录下执行以下命令：\",\"nb plugin install nonebot-plugin-apscheduler\"]},\"452\":{\"h\":\"使用插件\",\"t\":[\"nonebot-plugin-apscheduler 本质上是对 APScheduler 进行了封装以适用于 NoneBot 开发，因此其使用方式与 APScheduler 本身并无显著区别。在此我们会简要介绍其调用方法，更多的使用方面的功能请参考APScheduler 官方文档。\"]},\"453\":{\"h\":\"导入调度器\",\"t\":[\"由于 nonebot_plugin_apscheduler 作为插件，因此需要在使用前对其进行加载并导入其中的 scheduler 调度器来创建定时任务。使用 require 方法可轻松完成这一过程，可参考 跨插件访问 一节进行了解。\",\"from nonebot import require require(\\\"nonebot_plugin_apscheduler\\\") from nonebot_plugin_apscheduler import scheduler\"]},\"454\":{\"h\":\"添加定时任务\",\"t\":[\"在 APScheduler 官方文档 中提供了以下两种直接添加任务的方式：\",\"from nonebot import require require(\\\"nonebot_plugin_apscheduler\\\") from nonebot_plugin_apscheduler import scheduler # 基于装饰器的方式 @scheduler.scheduled_job(\\\"cron\\\", hour=\\\"*/2\\\", id=\\\"job_0\\\", args=[1], kwargs={arg2: 2}) async def run_every_2_hour(arg1: int, arg2: int): pass # 基于 add_job 方法的方式 def run_every_day(arg1: int, arg2: int): pass scheduler.add_job( run_every_day, \\\"interval\\\", days=1, id=\\\"job_1\\\", args=[1], kwargs={arg2: 2} )\",\"注意\",\"由于 APScheduler 的定时任务并不是由事件响应器所触发的事件，因此其任务函数无法同事件处理函数一样通过依赖注入获取上下文信息，也无法通过事件响应器对象的方法进行任何操作，因此我们需要使用调用平台 API的方式来获取信息或收发消息。\",\"相对于事件处理依赖而言，编写定时任务更像是编写普通的函数，需要我们自行获取信息以及发送信息，请不要将事件处理依赖的特殊语法用于定时任务！\",\"关于 APScheduler 的更多使用方法，可以参考 APScheduler 官方文档 进行了解。\"]},\"455\":{\"h\":\"配置项\"},\"456\":{\"h\":\"apscheduler_autostart\",\"t\":[\"类型: bool\",\"默认值: True\",\"是否自动启动 scheduler ，若不启动需要自行调用 scheduler.start()。\"]},\"457\":{\"h\":\"apscheduler_log_level\",\"t\":[\"类型: int\",\"默认值: 30\",\"apscheduler 输出的日志等级\",\"WARNING = 30 (默认)\",\"INFO = 20\",\"DEBUG = 10 (只有在开启 nonebot 的 debug 模式才会显示 debug 日志)\"]},\"458\":{\"h\":\"apscheduler_config\",\"t\":[\"类型: dict\",\"默认值: { \\\"apscheduler.timezone\\\": \\\"Asia/Shanghai\\\" }\",\"apscheduler 的相关配置。参考配置调度器, 配置参数\",\"配置需要包含 apscheduler. 作为前缀，例如 apscheduler.timezone。\"]},\"459\":{\"h\":\"参与讨论\",\"t\":[\"如果在安装或者开发 NoneBot 过程中遇到了任何问题，或者有新奇的点子，欢迎参与我们的社区讨论：\",\"点击下方链接前往 GitHub，前往 Issues 页面，在 New Issue Template 中选择 Question\",\"NoneBot：\",\"通过 QQ 群（点击下方链接直达）\",\"通过 QQ 频道\",\"通过 Discord 服务器（点击下方链接直达）\"]},\"460\":{\"h\":\"贡献指南\"},\"461\":{\"h\":\"Code of Conduct\",\"t\":[\"请参阅 Code of Conduct。\"]},\"462\":{\"h\":\"参与开发\",\"t\":[\"请参阅 Contributing。\"]},\"463\":{\"h\":\"鸣谢\",\"t\":[\"感谢以下开发者对 NoneBot2 作出的贡献：\"]},\"464\":{\"h\":\"编写适配器\",\"t\":[\"在编写适配器之前，我们需要先了解适配器的功能与组成，适配器通常由 Adapter、Bot、Event 和 Message 四个部分组成，在编写适配器时，我们需要继承 NoneBot 中的基类，并根据实际平台来编写每个部分功能。\"]},\"465\":{\"h\":\"组织结构\",\"t\":[\"NoneBot 适配器项目通常以 nonebot-adapter-{adapter-name} 作为项目名，并以命名空间包的形式编写，即在 nonebot/adapters/{adapter-name} 目录中编写实际代码，例如：\",\"📦 nonebot-adapter-{adapter-name} ├── 📂 nonebot │ ├── 📂 adapters │ │ ├── 📂 {adapter-name} │ │ │ ├── 📜 __init__.py │ │ │ ├── 📜 adapter.py │ │ │ ├── 📜 bot.py │ │ │ ├── 📜 config.py │ │ │ ├── 📜 event.py │ │ │ └── 📜 message.py ├── 📜 pyproject.toml └── 📜 README.md\",\"提示\",\"上述的项目结构仅作推荐，不做强制要求，保证实际可用性即可。\"]},\"466\":{\"h\":\"使用 NB-CLI 创建项目\",\"t\":[\"我们可以使用脚手架快速创建项目：\",\"nb adapter create\",\"按照指引，输入适配器名称以及存储位置，即可创建一个带有基本结构的适配器项目。\"]},\"467\":{\"h\":\"组成部分\",\"t\":[\"提示\",\"本章节的代码中提到的 Adapter、Bot、Event 和 Message 等，均为下文中适配器所编写的类，而非 NoneBot 中的基类。\"]},\"468\":{\"h\":\"Log\",\"t\":[\"适配器在处理时通常需要打印日志，但直接使用 NoneBot 的默认 logger 不方便区分适配器输出和其它日志。因此我们可以使用 NoneBot 提供的 logger_wrapper 方法，自定义一个 log 函数用于快捷打印适配器日志：\",\"from nonebot.utils import logger_wrapper log = logger_wrapper(\\\"your_adapter_name\\\")\",\"这个 log 函数会在默认 logger 中添加适配器名称前缀，它接收三个参数：日志等级、日志内容以及可选的异常，具体用法如下：\",\"from .log import log log(\\\"DEBUG\\\", \\\"A DEBUG log.\\\") log(\\\"INFO\\\", \\\"A INFO log.\\\") try: ... except Exception as e: log(\\\"ERROR\\\", \\\"something error.\\\", e)\"]},\"469\":{\"h\":\"Config\",\"t\":[\"通常适配器需要一些配置项，例如平台连接密钥等。适配器的配置方法与插件配置类似，例如：\",\"from pydantic import BaseModel class Config(BaseModel): xxx_id: str xxx_token: str\",\"配置项的读取将在下方 Adapter 中介绍。\"]},\"470\":{\"h\":\"Adapter\",\"t\":[\"Adapter 负责转换事件、调用接口，以及正确创建 Bot 对象并注册到 NoneBot 中。在编写平台相关内容之前，我们需要继承基类，并实现适配器的基本信息：\",\"from typing import Any from typing_extensions import override from nonebot.drivers import Driver from nonebot import get_plugin_config from nonebot.adapters import Adapter as BaseAdapter from .config import Config class Adapter(BaseAdapter): @override def __init__(self, driver: Driver, **kwargs: Any): super().__init__(driver, **kwargs) # 读取适配器所需的配置项 self.adapter_config: Config = get_plugin_config(Config) @classmethod @override def get_name(cls) -> str: \\\"\\\"\\\"适配器名称\\\"\\\"\\\" return \\\"your_adapter_name\\\"\"]},\"471\":{\"h\":\"与平台交互\",\"t\":[\"NoneBot 提供了多种 Driver 来帮助适配器进行网络通信，主要分为客户端和服务端两种类型。我们需要根据平台文档和特性选择合适的通信方式，并编写相关方法用于初始化适配器，与平台建立连接和进行交互：\"]},\"472\":{\"h\":\"客户端通信方式\",\"t\":[\"import asyncio from typing_extensions import override from nonebot import get_plugin_config from nonebot.exception import WebSocketClosed from nonebot.drivers import Request, WebSocketClientMixin class Adapter(BaseAdapter): @override def __init__(self, driver: Driver, **kwargs: Any): super().__init__(driver, **kwargs) self.adapter_config: Config = get_plugin_config(Config) self.task: Optional[asyncio.Task] = None # 存储 ws 任务 self.setup() def setup(self) -> None: if not isinstance(self.driver, WebSocketClientMixin): # 判断用户配置的Driver类型是否符合适配器要求，不符合时应抛出异常 raise RuntimeError( f\\\"Current driver {self.config.driver} doesn't support websocket client connections!\\\" f\\\"{self.get_name()} Adapter need a WebSocket Client Driver to work.\\\" ) # 在 NoneBot 启动和关闭时进行相关操作 self.driver.on_startup(self.startup) self.driver.on_shutdown(self.shutdown) async def startup(self) -> None: \\\"\\\"\\\"定义启动时的操作，例如和平台建立连接\\\"\\\"\\\" self.task = asyncio.create_task(self._forward_ws()) # 建立 ws 连接 async def _forward_ws(self): request = Request( method=\\\"GET\\\", url=\\\"your_platform_websocket_url\\\", headers={\\\"token\\\": \\\"...\\\"}, # 鉴权请求头 ) while True: try: async with self.websocket(request) as ws: try: # 处理 websocket ... except WebSocketClosed as e: log( \\\"ERROR\\\", \\\"<r><bg #f8bbd0>WebSocket Closed</bg #f8bbd0></r>\\\", e, ) except Exception as e: log( \\\"ERROR\\\", \\\"<r><bg #f8bbd0>Error while process data from \\\" \\\"websocket platform_websocket_url. \\\" \\\"Trying to reconnect...</bg #f8bbd0></r>\\\", e, ) finally: # 这里要断开 Bot 连接 except Exception as e: # 尝试重连 log( \\\"ERROR\\\", \\\"<r><bg #f8bbd0>Error while setup websocket to \\\" \\\"platform_websocket_url. Trying to reconnect...</bg #f8bbd0></r>\\\", e, ) await asyncio.sleep(3) # 重连间隔 async def shutdown(self) -> None: \\\"\\\"\\\"定义关闭时的操作，例如停止任务、断开连接\\\"\\\"\\\" # 断开 ws 连接 if self.task is not None and not self.task.done(): self.task.cancel()\"]},\"473\":{\"h\":\"服务端通信方式\",\"t\":[\"from nonebot import get_plugin_config from nonebot.drivers import ( Request, ASGIMixin, WebSocket, HTTPServerSetup, WebSocketServerSetup ) class Adapter(BaseAdapter): @override def __init__(self, driver: Driver, **kwargs: Any): super().__init__(driver, **kwargs) self.adapter_config: Config = get_plugin_config(Config) self.setup() def setup(self) -> None: if not isinstance(self.driver, ASGIMixin): raise RuntimeError( f\\\"Current driver {self.config.driver} doesn't support asgi server!\\\" f\\\"{self.get_name()} Adapter need a asgi server driver to work.\\\" ) # 建立服务端路由 # HTTP Webhook 路由 http_setup = HTTPServerSetup( URL(\\\"your_webhook_url\\\"), # 路由地址 \\\"POST\\\", # 接收的方法 \\\"WEBHOOK name\\\", # 路由名称 self._handle_http, # 处理函数 ) self.setup_http_server(http_setup) # 反向 Websocket 路由 ws_setup = WebSocketServerSetup( URL(\\\"your_websocket_url\\\"), # 路由地址 \\\"WebSocket name\\\", # 路由名称 self._handle_ws, # 处理函数 ) self.setup_websocket_server(ws_setup) async def _handle_http(self, request: Request) -> Response: \\\"\\\"\\\"HTTP 路由处理函数，只有一个类型为 Request 的参数，且返回值类型为 Response\\\"\\\"\\\" ... return Response( status_code=200, # 状态码 headers={\\\"something\\\": \\\"something\\\"}, # 响应头 content=\\\"xxx\\\", # 响应内容 ) async def _handle_ws(self, websocket: WebSocket) -> Any: \\\"\\\"\\\"WebSocket 路由处理函数，只有一个类型为 WebSocket 的参数\\\"\\\"\\\" ...\",\"更多通信交互方式可以参考以下适配器：\",\"OneBot - WebSocket 客户端、WebSocket 服务端、HTTP WEBHOOK、HTTP POST\",\"QQGuild - WebSocket 服务端\",\"Telegram - HTTP WEBHOOK\"]},\"474\":{\"h\":\"建立 Bot 连接\",\"t\":[\"在与平台建立连接后，我们需要将 Bot 实例化，并调用适配器提供的的 bot_connect 方法告知 NoneBot 建立了 Bot 连接。在与平台断开连接或出现某些异常进行重连时，我们需要调用 bot_disconnect 方法告知 NoneBot 断开了 Bot 连接。\",\"from .bot import Bot class Adapter(BaseAdapter): def _handle_connect(self): bot_id = ... # 通过配置或者平台 API 等方式，获取到 Bot 的 ID bot = Bot(self, self_id=bot_id) # 实例化 Bot self.bot_connect(bot) # 建立 Bot 连接 def _handle_disconnect(self): self.bot_disconnect(bot) # 断开 Bot 连接\"]},\"475\":{\"h\":\"转换 Event 事件\",\"t\":[\"在接收到来自平台的事件数据后，我们需要将其转为适配器的 Event，并调用 Bot 的 handle_event 方法来让 Bot 对事件进行处理：\",\"import asyncio from typing import Any, Dict from nonebot.compat import type_validate_python from .bot import Bot from .event import Event from .log import log class Adapter(BaseAdapter): @classmethod def payload_to_event(cls, payload: Dict[str, Any]) -> Event: \\\"\\\"\\\"根据平台事件的特性，转换平台 payload 为具体 Event Event 模型继承自 pydantic.BaseModel，具体请参考 pydantic 文档 \\\"\\\"\\\" # 做一层异常处理，以应对平台事件数据的变更 try: return type_validate_python(your_event_class, payload) except Exception as e: # 无法正常解析为具体 Event 时，给出日志提示 log( \\\"WARNING\\\", f\\\"Parse event error: {str(payload)}\\\", ) # 也可以尝试转为基础 Event 进行处理 return type_validate_python(Event, payload) async def _forward(self, bot: Bot): payload: Dict[str, Any] # 接收到的事件数据 event = self.payload_to_event(payload) # 让 bot 对事件进行处理 asyncio.create_task(bot.handle_event(event))\"]},\"476\":{\"h\":\"调用平台 API\",\"t\":[\"我们需要实现 Adapter 的 _call_api 方法，使开发者能够调用平台提供的 API。如果通过 WebSocket 通信可以通过 send 方法来发送数据，如果采用 HTTP 请求，则需要通过 NoneBot 提供的 Request 对象，调用 driver 的 request 方法来发送请求。\",\"from typing import Any from typing_extensions import override from nonebot.drivers import Request, WebSocket from .bot import Bot class Adapter(BaseAdapter): @override async def _call_api(self, bot: Bot, api: str, **data: Any) -> Any: log(\\\"DEBUG\\\", f\\\"Calling API <y>{api}</y>\\\") # 给予日志提示 platform_data = your_handle_data_method(data) # 自行将数据转为平台所需要的格式 # 采用 HTTP 请求的方式，需要构造一个 Request 对象 request = Request( method=\\\"GET\\\", # 请求方法 url=api, # 接口地址 headers=..., # 请求头，通常需要包含鉴权信息 params=platform_data, # 自行处理数据的传输形式 # json=platform_data, # data=platform_data, ) # 发送请求，返回结果 return await self.driver.request(request) # 采用 WebSocket 通信的方式，可以直接调用 send 方法发送数据 # 通过某种方式获取到 bot 对应的 websocket 对象 ws: WebSocket = your_get_websocket_method(bot.self_id) await ws.send_text(platform_data) # 发送 str 类型的数据 await ws.send_bytes(platform_data) # 发送 bytes 类型的数据 await ws.send(platform_data) # 是以上两种方式的合体 # 接收并返回结果，同样的，也有 str 和 bytes 的区别 return await ws.receive_text() return await ws.receive_bytes() return await ws.receive()\",\"调用平台 API 实现方式具体可以参考以下适配器：\",\"Websocket:\",\"OneBot V11\",\"OneBot V12\",\"HTTP:\",\"QQ 频道\",\"Telegram\",\"飞书\"]},\"477\":{\"h\":\"Bot\",\"t\":[\"Bot 是机器人开发者能够直接获取并使用的核心对象，负责存储平台机器人相关信息，并提供回复事件、调用 API 的上层方法。我们需要继承基类 Bot，并实现相关方法：\",\"from typing import TYPE_CHECKING, Any, Union from typing_extensions import override from nonebot.message import handle_event from nonebot.adapters import Bot as BaseBot from .event import Event from .message import Message, MessageSegment if TYPE_CHECKING: from .adapter import Adapter class Bot(BaseBot): \\\"\\\"\\\" your_adapter_name 协议 Bot 适配。 \\\"\\\"\\\" @override def __init__(self, adapter: Adapter, self_id: str, **kwargs: Any): super().__init__(adapter, self_id) self.adapter: Adapter = adapter # 一些有关 Bot 的信息也可以在此定义和存储 async def handle_event(self, event: Event): # 根据需要，对事件进行某些预处理，例如： # 检查事件是否和机器人有关操作，去除事件消息首尾的 @bot # 检查事件是否有回复消息，调用平台 API 获取原始消息的消息内容 ... # 调用 handle_event 让 NoneBot 对事件进行处理 await handle_event(self, event) @override async def send( self, event: Event, message: Union[str, Message, MessageSegment], **kwargs: Any, ) -> Any: # 根据平台实现 Bot 回复事件的方法 # 将消息处理为平台所需的格式后，调用发送消息接口进行发送，例如： data = message_to_platform_data(message) await self.send_message( data=data, ... )\"]},\"478\":{\"h\":\"Event\",\"t\":[\"Event 是 NoneBot 中的事件主体对象，所有平台消息在进入处理流程前需要转换为 NoneBot 事件。我们需要继承基类 Event，并实现相关方法：\",\"from typing_extensions import override from nonebot.compat import model_dump from nonebot.adapters import Event as BaseEvent class Event(BaseEvent): @override def get_event_name(self) -> str: # 返回事件的名称，用于日志打印 return \\\"event name\\\" @override def get_event_description(self) -> str: # 返回事件的描述，用于日志打印，请注意转义 loguru tag return escape_tag(repr(model_dump(self))) @override def get_message(self): # 获取事件消息的方法，根据事件具体实现，如果事件非消息类型事件，则抛出异常 raise ValueError(\\\"Event has no message!\\\") @override def get_user_id(self) -> str: # 获取用户 ID 的方法，根据事件具体实现，如果事件没有用户 ID，则抛出异常 raise ValueError(\\\"Event has no context!\\\") @override def get_session_id(self) -> str: # 获取事件会话 ID 的方法，根据事件具体实现，如果事件没有相关 ID，则抛出异常 raise ValueError(\\\"Event has no context!\\\") @override def is_tome(self) -> bool: # 判断事件是否和机器人有关 return False\",\"然后根据平台消息的类型，编写各种不同的事件，并且注意要根据事件类型实现 get_type 方法，具体请参考事件类型。消息类型事件还应重写 get_message 和 get_user_id 等方法，例如：\",\"from .message import Message class HeartbeatEvent(Event): \\\"\\\"\\\"心跳时间，通常为元事件\\\"\\\"\\\" @override def get_type(self) -> str: return \\\"meta_event\\\" class MessageEvent(Event): \\\"\\\"\\\"消息事件\\\"\\\"\\\" message_id: str user_id: str @override def get_type(self) -> str: return \\\"message\\\" @override def get_message(self) -> Message: # 返回事件消息对应的 NoneBot Message 对象 return self.message @override def get_user_id(self) -> str: return self.user_id class JoinRoomEvent(Event): \\\"\\\"\\\"加入房间事件，通常为通知事件\\\"\\\"\\\" user_id: str room_id: str @override def get_type(self) -> str: return \\\"notice\\\" class ApplyAddFriendEvent(Event): \\\"\\\"\\\"申请添加好友事件，通常为请求事件\\\"\\\"\\\" user_id: str @override def get_type(self) -> str: return \\\"request\\\"\"]},\"479\":{\"h\":\"Message\",\"t\":[\"Message 负责正确序列化消息，以便机器人插件处理。我们需要继承 MessageSegment 和 Message 两个类，并实现相关方法：\",\"from typing import Type, Iterable from typing_extensions import override from nonebot.utils import escape_tag from nonebot.adapters import Message as BaseMessage from nonebot.adapters import MessageSegment as BaseMessageSegment class MessageSegment(BaseMessageSegment[\\\"Message\\\"]): @classmethod @override def get_message_class(cls) -> Type[\\\"Message\\\"]: # 返回适配器的 Message 类型本身 return Message @override def __str__(self) -> str: # 返回该消息段的纯文本表现形式，通常在日志中展示 return \\\"text of MessageSegment\\\" @override def is_text(self) -> bool: # 判断该消息段是否为纯文本 return self.type == \\\"text\\\" class Message(BaseMessage[MessageSegment]): @classmethod @override def get_segment_class(cls) -> Type[MessageSegment]: # 返回适配器的 MessageSegment 类型本身 return MessageSegment @staticmethod @override def _construct(msg: str) -> Iterable[MessageSegment]: # 实现从字符串中构造消息数组，如无字符串嵌入格式可直接返回文本类型 MessageSegment ...\",\"然后根据平台具体的消息类型，来实现各种 MessageSegment 消息段，具体可以参考以下适配器：\",\"OneBot\",\"QQGuild\",\"Telegram\"]},\"480\":{\"h\":\"适配器测试\",\"t\":[\"关于适配器测试相关内容在这里不再展开，开发者可以根据需要进行合适的测试。这里为开发者提供几个常见问题的解决方法：\",\"在测试中无法导入 editable 模式安装的适配器代码。在 pytest 的 conftest.py 内添加如下代码：\",\"from pathlib import Path import nonebot.adapters nonebot.adapters.__path__.append( # type: ignore str((Path(__file__).parent.parent / \\\"nonebot\\\" / \\\"adapters\\\").resolve()) )\",\"需要计算适配器测试覆盖率，请在 pyproject.toml 中添加 pytest 配置：\",\"[tool.pytest.ini_options] addopts = \\\"--cov nonebot/adapters/{adapter-name} --cov-report term-missing\\\"\"]},\"481\":{\"h\":\"后续工作\",\"t\":[\"在完成适配器代码的编写后，如果想要将适配器发布到 NoneBot 商店，我们需要将适配器发布到 PyPI 中，然后前往商店页面，切换到适配器页签，点击发布适配器按钮，填写适配器相关信息并提交。\",\"另外建议编写适配器文档或者一些插件开发示例，以便其他开发者使用我们的适配器。\"]},\"482\":{\"h\":\"暑期 2021\",\"t\":[\"开源软件供应链点亮计划 - 暑期 2021 是中国科学院软件研究所与 openEuler 社区共同举办的一项面向高校学生的暑期活动，旨在鼓励在校学生积极参与开源软件的开发维护，促进优秀开源软件社区的蓬勃发展。关于具体的活动规划、报名方式，请查看该活动的 官网 和 帮助文档。\",\"NoneBot 社区有幸作为开源社区参与了本次活动，下面列出了目前我们已经发布的项目，欢迎感兴趣的同学在上面给出的活动官网报名，或通过 contact@nonebot.dev 联系我们。\"]},\"483\":{\"h\":\"NoneBot v1\"},\"484\":{\"h\":\"更新 NoneBot v1 文档中的“指南”部分\",\"t\":[\"由于 NoneBot v1 和 aiocqhttp 最初基于的 QQ 机器人平台不再提供服务，CQHTTP 接口也转型且改名为 OneBot 标准，目前 NoneBot v1 文档的“指南”部分和 aiocqhttp 文档有部分过时内容需要更新。我们希望将其中与旧的机器人平台相关的内容改为基于 go-cqhttp 或通用的 OneBot 表述，同时对 NoneBot v1 的 awesome-bot 示例做一次全面检查，修改其中可能已经不可用的部分。\",\"难度：低\",\"导师：@cleoold\",\"产出要求\",\"修改“指南”文档和 aiocqhttp 文档中与旧的 QQ 机器人平台相关的部分\",\"检查 awesome-bot 示例是否有已经过时/不可用的地方，并更新/修复\",\"修改“图灵机器人”案例，使用其它 AI 聊天 API 提供商（需先做简单调研）\",\"技术要求\",\"熟悉 Python 编程语言及 asyncio 机制\",\"了解 Git 基本用法\",\"了解聊天机器人基本开发过程\",\"了解 VuePress 更佳\"]},\"485\":{\"h\":\"NoneBot v1 API 文档自动生成\",\"t\":[\"目前 NoneBot v1 的文档中“API”部分是手动编写的，在更新代码接口的同时需要手动更新文档，可能造成文档与代码不匹配，形成额外的维护成本。我们希望将 API 文档改为直接编写在 Python docstring 中，通过工具自动生成 API 文档。\",\"难度：中\",\"导师：@cleoold\",\"产出要求\",\"调研市面上常见的 Python API 文档生成工具\",\"在代码中补充 API 文档\",\"编写或应用开源工具自动生成 API 文档\",\"配置 GitHub Actions 或其它 CI 自动化构建和部署 API 文档\",\"技术要求\",\"熟悉 Python 编程语言及 asyncio 和 Type Hints\",\"了解 Git 基本用法\",\"了解 Sphinx 等文档生成工具更佳\",\"了解 GitHub Actions 等 CI 工具更佳\"]},\"486\":{\"h\":\"NoneBot v2\"},\"487\":{\"h\":\"NoneBot v2 自动化测试框架“NoneBug”\",\"t\":[\"在聊天机器人的开发过程中，一套自动化的测试机制是非常重要的，特别是对于 NoneBot 2 这类为大型机器人开发而设计的项目来说，需要手动测试每一个边际条件是非常痛苦的。我们希望能够开发一款基于 NoneBot 2 插件机制的自动化测试框架，为 NoneBot 2 用户提供一套易用便捷、高度灵活的自动化测试框架。\",\"难度：高\",\"导师：@yanyongyu\",\"产出要求\",\"调研现有的 Python 和其它语言集成测试框架\",\"设计 NoneBug 的用户 API 和实现方式\",\"实现 NoneBug 自动化测试框架\",\"编写详细的使用文档\",\"技术要求\",\"熟悉 Python 编程语言及 asyncio 和 Type Hints\",\"了解 Git 基本用法\",\"了解 NoneBot v2 的基本原理和使用方式\",\"了解主流的 Python 自动化测试框架\"]},\"488\":{\"h\":\"NoneBot v2 Telegram 适配器\",\"t\":[\"目前 NoneBot v2 已支持 OneBot、Mirai HTTP API、钉钉协议，社区反馈有更多的平台需求，希望能在 NoneBot v2 获得更多的跨平台支持，提高机器人的便携性。同时，我们也希望随着新平台加入，提升现有 NoneBot v2 核心代码的平台通用性。Telegram 是一款较为广泛使用的安全即时聊天软件，同时其官方提供了丰富的聊天机器人 API，因此我们希望为 NoneBot v2 编写一个 Telegram 适配器来支持 Telegram 机器人的开发。\",\"难度：中\",\"导师：@yanyongyu\",\"产出要求\",\"调研 Telegram Bot API 以及 WebHook 等官方接口\",\"编写 Telegram 适配器并能够使用\",\"代码遵守项目 Contributing 规范\",\"技术要求\",\"熟悉 Python 编程语言及 asyncio 和 Type Hints\",\"了解 Git 基本用法\",\"了解 Web 开发相关知识\",\"了解 Sphinx 等文档生成工具更佳\"]},\"489\":{\"h\":\"NoneBot v2 飞书适配器\",\"t\":[\"目前 NoneBot v2 已支持 OneBot、Mirai HTTP API、钉钉协议，社区反馈有更多的平台需求，希望能在 NoneBot v2 获得更多的跨平台支持，提高机器人的便携性。同时，我们也希望随着新平台加入，提升现有 NoneBot v2 核心代码的平台通用性。飞书是目前企业用户广泛使用的即时聊天和协作软件，其官方提供了丰富的聊天机器人 API，因此我们希望为 NoneBot v2 编写一个飞书适配器来支持飞书机器人的开发。\",\"难度：中\",\"导师：@yanyongyu\",\"产出要求\",\"调研飞书机器人 API 以及 WebHook 等官方接口\",\"编写飞书适配器并能够使用\",\"代码遵守项目 Contributing 规范\",\"技术要求\",\"熟悉 Python 编程语言及 asyncio 和 Type Hints\",\"了解 Git 基本用法\",\"了解 Web 开发相关知识\",\"了解 Sphinx 等文档生成工具更佳\"]},\"490\":{\"h\":\"OneBot\"},\"491\":{\"h\":\"设计 OneBot v12 接口标准\",\"t\":[\"目前的 OneBot 标准的 v11 版本仍然与 QQ 平台有较多耦合，我们希望在 v12 去掉与 QQ 耦合的历史包袱，形成一个通用的、可扩展的、易于使用的同时易于实现的聊天机器人接口标准。\",\"难度：中\",\"导师：@richardchien\",\"产出要求\",\"调研各聊天机器人平台的官方/非官方接口特点\",\"通用化 OneBot 核心 API，分离 QQ 特定的 API，去掉无用 API\",\"优化现有的通信、消息表示机制\",\"补充 QQ 特定的缺失 API\",\"文档需符合风格指南\",\"技术要求\",\"熟悉至少两个聊天平台的聊天机器人开发\",\"了解 Git 基本用法\",\"了解使用不同语言编写聊天机器人时的常用实践\",\"对文档的优雅性与美观性有追求更佳\"]},\"492\":{\"h\":\"实现 Rust 版 libonebot\",\"t\":[\"目前最常用的 OneBot 实现包括 go-cqhttp、onebot-kotlin、node-onebot 等，这些实现都各自重复实现了 Web 通信、消息解析、配置读写等功能，当社区中的开发者想针对一个新的聊天平台实现 OneBot 时，他们往往同样需要再次实现类似逻辑。我们希望使用 Rust 编写一个 libonebot 模块，该模块实现所有 OneBot 实现所共享的功能，从而方便其他开发者们使用 Rust 快速编写具体的 OneBot 实现。同时，我们希望借此项目在聊天机器人社区中推广 Rust 编程语言。\",\"注：这里的逻辑是 libonebot + 针对某聊天平台的对接代码 = 某聊天平台的 OneBot 实现，libonebot 要做的是让 OneBot 实现的开发者只需编写针对特定聊天平台的对接代码，而无需关心 OneBot 标准定义的通信方式、消息格式等。\",\"难度：高\",\"导师：@richardchien\",\"产出要求\",\"实现所有 OneBot 实现所共享的功能，包括 Web 通信、消息解析、配置读写等\",\"充分考虑同时兼容 OneBot v11 和 v12 接口\",\"能够根据用户（OneBot 实现的开发者）所实现的接口自动实现类似 get_available_apis 等接口\",\"编写详细的使用文档\",\"如果可能，与 v12 设计项目联动，实现第一手 v12 支持\",\"技术要求\",\"熟悉聊天机器人开发\",\"熟悉 Rust Web 开发\"]},\"493\":{\"h\":\"实现自选语言版 libonebot\",\"t\":[\"目前最常用的 OneBot 实现包括 go-cqhttp、onebot-kotlin、node-onebot 等，这些实现都各自重复实现了 Web 通信、消息解析、配置读写等功能，当社区中的开发者想针对一个新的聊天平台实现 OneBot 时，他们往往同样需要再次实现类似逻辑。我们希望使用 Python、Go、Kotlin、Node、PHP、C#.NET 等主流语言（任选一个）编写 libonebot 模块，该模块实现所有 OneBot 实现所共享的功能，从而方便其他开发者们使用对应语言快速编写具体的 OneBot 实现。\",\"注：这里的逻辑是 libonebot + 针对某聊天平台的对接代码 = 某聊天平台的 OneBot 实现，libonebot 要做的是让 OneBot 实现的开发者只需编写针对特定聊天平台的对接代码，而无需关心 OneBot 标准定义的通信方式、消息格式等。\",\"难度：中\",\"导师：@richardchien\",\"产出要求\",\"实现所有 OneBot 实现所共享的功能，包括 Web 通信、消息解析、配置读写等\",\"充分考虑同时兼容 OneBot v11 和 v12 接口\",\"编写详细的使用文档\",\"如果可能，实现更多附加特性，如根据用户（OneBot 实现的开发者）所实现的接口自动实现类似 get_available_apis 等接口、实现第一手 v12 支持等\",\"技术要求\",\"熟悉聊天机器人开发\",\"熟悉所选语言的 Web 开发\"]},\"494\":{\"h\":\"暑期 2022\",\"t\":[\"开源之夏 - 暑期 2022 是由开源软件供应链点亮计划发起、由中国科学院软件研究所与 openEuler 社区主办的一项面向高校学生的暑期活动，类似 Google Summer of Code（GSoC），旨在鼓励在校学生积极参与开源软件的开发维护，促进优秀开源软件社区的蓬勃发展。关于具体的活动规划、报名方式，请查看该活动的 官网 和 帮助文档。\",\"NoneBot 社区有幸作为开源社区 参与 了本次活动，下面列出了目前我们已经发布的项目，欢迎感兴趣的同学加入 QQ 群 737131827 或通过 contact@nonebot.dev 联系我们。\"]},\"495\":{\"h\":\"NoneBot2 命令行 CLI 交互体验升级\",\"t\":[\"NoneBot2 为用户提供了命令行脚手架 ──nb-cli，辅助用户更好地上手项目以及进行开发。nb-cli 主要包括：创建项目、运行项目、安装与卸载插件、部署项目等功能。随着 NoneBot2 Beta 版本的发布，脚手架功能存在一定的定位不明确、功能体验不佳。本项目旨在重新设计 nb-cli 功能框架，完善功能，优化用户体验。\",\"难度：进阶\",\"导师：@yanyongyu\",\"产出要求\",\"设计 nb-cli 功能框架 \",\"明确各功能模块\",\"设计用户交互模式\",\"完成 nb-cli 主要功能代码 \",\"项目管理\",\"插件管理\",\"其它\",\"同步更新使用文档\",\"技术要求\",\"熟悉 Python 命令行交互代码编写\",\"熟悉 NoneBot2 框架功能\",\"熟悉 NoneBot2 项目组织方式\",\"成果仓库\",\"https://github.com/nonebot/nb-cli\",\"https://github.com/nonebot/nonebot2\"]},\"496\":{\"h\":\"NoneBot2 命令行即时交互通信设计与实现\",\"t\":[\"NoneBot2 在早期提供了基于网页的 nonebot-plugin-test 插件，无需平台适配接入即可对机器人进行测试，方便了开发者直观的感受机器人文本交互功能。我们希望提供一款基于命令行的适配器/驱动器，用于无平台适配接入、可以运行机器人的场景进行功能体验或测试。\",\"难度：进阶\",\"导师：@mnixry\",\"产出要求\",\"设计命令行与 NoneBot2 通信模式 \",\"直接调用/HTTP/WebSocket\",\"设计命令行交互界面\",\"实现相应适配器/驱动器\",\"同步更新使用说明文档\",\"技术要求\",\"熟悉 Python 命令行交互代码编写\",\"熟悉 NoneBot2 框架功能\",\"熟悉 NoneBot2 项目组织方式\",\"成果仓库\",\"https://github.com/nonebot/adapter-console\"]},\"497\":{\"h\":\"NoneBot2 用户上手与深入教程设计\",\"t\":[\"NoneBot2 为用户提供了详细的文档介绍，辅助用户更好的上手项目以及进行开发。文档分为基础与进阶两个部分。基础部分帮助新用户快速上手开发，主要包括：安装 NoneBot2、使用脚手架、创建配置项目、使用适配器、加载插件、定义消息事件、处理消息事件、调用平台 API 等。进阶部分向已经熟悉开发流程的用户介绍更多高级技巧，主要包括：NoneBot2 工作原理、定时任务、权限控制、钩子函数、跨插件访问、单元测试、发布插件等。目前文档对于用户而言过于费解，导致用户难以理解 NoneBot2 开发。本项目旨在优化文档内容，使其更加通俗易懂，不让文档成为用户上手的阻碍，同时完善进阶内容，让有更复杂需求的用户，同样能从文档中受益。\",\"相关 issue：\",\"https://github.com/nonebot/nonebot2/issues/793\",\"https://github.com/nonebot/nonebot2/issues/295\",\"难度：进阶\",\"导师：@SK-415\",\"产出要求\",\"文档通俗易懂 \",\"附有适当的图片指引（如 asciinema）\",\"内容完整，由浅入深\",\"适当的界面美化，合理分配布局\",\"技术要求\",\"熟悉文档结构组织与语言表达\",\"熟悉 NoneBot2 框架功能\",\"熟悉 NoneBot2 项目组织方式\",\"成果仓库\",\"https://github.com/nonebot/nonebot2\"]},\"498\":{\"h\":\"暑期 2023\",\"t\":[\"开源之夏 - 暑期 2023 是由开源软件供应链点亮计划发起、由中国科学院软件研究所与 openEuler 社区主办的一项面向高校学生的暑期活动，类似 Google Summer of Code（GSoC），旨在鼓励在校学生积极参与开源软件的开发维护，促进优秀开源软件社区的蓬勃发展。关于具体的活动规划、报名方式，请查看该活动的 官网 和 帮助文档。\",\"NoneBot 社区有幸作为开源社区 参与 了本次活动，下面列出了目前我们已经发布的项目，欢迎感兴趣的同学通过 contact@nonebot.dev 联系我们。\"]},\"499\":{\"h\":\"NoneBot 项目管理图形化面板\",\"t\":[\"NoneBot 目前提供了开箱即用的命令行脚手架来帮助初次使用的用户更快的上手编写应用。但是，对于未有一定开发经验的用户，命令行的使用仍具有一定的困难。此外，其他项目如 koishi、vue 等，均可通过图形化界面的形式为用户提供更便捷的项目开发。因此，我们希望借助现有命令行脚手架的可扩展特性，提供一个项目管理面板服务，以网页的形式帮助用户开发 NoneBot 应用。\",\"难度：进阶\",\"导师：@mnixry\",\"产出要求\",\"设计并实现项目管理面板相关功能 \",\"创建与管理项目\",\"配置与运行项目\",\"NoneBot 插件管理\",\"实现相应 nb-cli 插件提供面板服务\",\"代码符合 NoneBot Contributing 规范\",\"技术要求\",\"熟悉 nb-cli 相关功能\",\"熟悉 NoneBot 框架功能\",\"熟悉前后端相关实现方式\",\"成果仓库\",\"https://github.com/nonebot/cli-plugin-webui\"]},\"500\":{\"h\":\"NoneBot Discord 适配器\",\"t\":[\"NoneBot 作为一个跨平台聊天机器人框架，目前已有 OneBot、飞书、Telegram、QQ 频道等诸多平台的适配支持。作为众多用户期待的平台适配之一，我们希望借此机会接入 Discord 聊天机器人。\",\"难度：进阶\",\"导师：@iyume\",\"产出要求\",\"调研 Discord Bot 相关功能与接口\",\"设计与编写 NoneBot Discord 适配器\",\"代码符合 NoneBot Contributing 规范\",\"技术要求\",\"熟悉 NoneBot 框架功能\",\"熟悉 NoneBot 各模块职责与适配器编写\",\"成果仓库\",\"https://github.com/nonebot/adapter-discord\"]},\"501\":{\"h\":\"NoneBot 数据库支持插件\",\"t\":[\"NoneBot 的插件系统为用户实现应用提供了极高的便捷性，但因此也增加了插件统一管理的难度。目前，我们发现许多用户发布的插件中存在文件存储结构化数据、数据存放散乱等现象，同时插件间也可能产生冲突。因此，我们希望提供一个统一的数据存储与管理方式，便于用户读写应用数据。\",\"难度：进阶\",\"导师：@yanyongyu\",\"产出要求\",\"设计并实现 ORM 插件 \",\"提供关系模型定义功能\",\"提供模型迁移与管理功能\",\"能较好的支持 Python 类型检查与推导\",\"编写相应的用户使用文档\",\"代码符合 NoneBot Contributing 规范\",\"技术要求\",\"熟悉 NoneBot 框架功能与插件编写\",\"熟悉 SQLAlchemy 等 ORM 框架 \",\"熟悉 SQLAlchemy ORM\",\"熟悉 alembic 等迁移工具\",\"熟悉 nb-cli 插件编写\",\"成果仓库\",\"https://github.com/nonebot/plugin-orm\"]},\"502\":{\"h\":\"暑期 2024\",\"t\":[\"开源之夏 - 暑期 2024 是中国科学院软件研究所发起的开源软件供应链点亮计划系列暑期活动，旨在鼓励高校学生积极参与开源软件的开发维护，促进优秀开源软件社区的蓬勃发展。活动联合各大开源社区，针对重要开源软件的开发与维护提供项目开发任务，并向全球高校学生开放报名。关于具体的活动规划、报名方式，请查看该活动的 官网 和 帮助文档。\",\"NoneBot 社区有幸作为开源社区 参与 了本次活动，下面列出了目前我们已经发布的项目，欢迎感兴趣的同学通过 contact@nonebot.dev 联系我们。\"]},\"503\":{\"h\":\"NonePress 官网组件库更新与优化\",\"t\":[\"NoneBot 官网目前采用基于 TailwindCSS 自研的 NonePress 组件库及 Docusaurus 框架进行构建。由于相关依赖版本迭代迅速，目前官网组件库已产生了较大的版本落后。本项目希望在跟进框架新版本的基础上，对文档整体视觉体验进行重新设计，提升页面的无障碍访问性，基于 React Hydrate 特性实现完整的静态网站生成（SSG）以提升搜索引擎优化（SEO）水平。在解决以上问题的基础上，可对网页的开发以及生产构建性能做相应的优化提升，例如在生产构建使用自有的 webpack loader、替换现有的热重载逻辑以减少开发环境启动耗时等。\",\"难度：进阶\",\"导师：@yanyongyu\",\"产出要求\",\"基于 Docusaurus v3 重构 NonePress 组件库及相关插件 \",\"升级相关依赖并重新打造 Docusaurus theme（布局与组件）\",\"根据需求实现/修改 Docusaurus 插件使得官网内容构建正常\",\"能够提升页面渲染性能与 MDX 相关能力\",\"升级官网采用新版组件库 \",\"Algolia 索引与 SEO 正常\",\"桌面端与移动端显示正常\",\"优化官网开发与生产构建体验\",\"（可选）优化官网部分页面 \",\"优化官网过长的 changelog\",\"优化官网插件商店的展示细节\",\"技术要求\",\"熟练掌握 TS、PostCSS、TSX、MDX等相关技术\",\"掌握 React、Docusaurus、tailwind css 等框架\",\"熟悉静态网站生成 SSG、SEO 优化与 Algolia 索引原理等\",\"成果仓库\",\"https://github.com/nonebot/docusaurus-theme-nonepress\"]},\"504\":{\"h\":\"NoneFlow 社区自动化工作流管理优化\",\"t\":[\"NoneFlow 在 NoneBot 社区中承担着重要的角色，它由 NoneBot 框架基于 GitHub APP 编写而成，能够自动化的完成许多复杂流程的处理，如：用户请求提交插件到商店时进行自动化检测，并在人工审核通过后自动存储至 registry；定时自动更新 registry 内插件信息，跟进插件新版本情况等。但是，在长期的使用中发现了一些问题和不足的地方，例如：项目本身结构复杂耦合，添加新自动化流程与维护现有流程困难；目前采用了 GitHub 用户名作为插件作者名，但已有不少插件作者改名；插件存储至 registry 并定时更新，缺少统计相关信息以帮助商店更好的展示当前插件状态；插件作者想要修改插件信息时无法便捷的找到操作方式等。本项目希望针对以上问题与不足的地方进行修复与优化，提升用户体验。\",\"难度：进阶\",\"导师：@uy/sun\",\"产出要求\",\"重构现有工作流处理结构 \",\"整合现有 Issue、Pull Request、Git 相关操作\",\"提供用户修改信息的处理方式\",\"正确处理 PR 的 Open、Close、Draft 状态\",\"修复流程中存在的问题 \",\"插件作者名正确展示\",\"registry 定时更新中需要插件测试环境隔离\",\"在 registry 定时更新的同时提供统计数据\",\"技术要求\",\"掌握 GitHub APP 开发 \",\"熟悉 GitHub REST API、GraphQL 等\",\"熟悉 GitHub APP 权限限制\",\"熟悉 NoneBot 框架与 Python 相关技术\",\"熟悉 Git、GitHub Action、GitHub 工作流\",\"成果仓库\",\"https://github.com/nonebot/noneflow\"]},\"505\":{\"h\":\"NoneBlockly 低代码框架开发\",\"t\":[\"经过深入分析社区反馈，我们发现部分新手因不熟悉编程概念或框架本身而遇到问题。为了解决初学者在使用面向开发者的聊天机器人框架 NoneBot 时遇到的挑战，我们计划引入 Blockly 提供低代码编程支持。通过减少常见的编码错误和降低入门门槛，使框架对初学者更加友好，从而提升用户体验并有助于 NoneBot 生态的成长。本项目将基于 Blockly 实现 NoneBot 插件的低代码编写，使得用户能够快速搭建聊天机器人。\",\"难度：进阶\",\"导师：@mnixry\",\"产出要求\",\"实现 NoneBlockly 低代码开发框架 \",\"能够基于 Alconna 编写跨平台插件\",\"确保插件对 Python 和 NoneBot 版本的兼容性\",\"支持对多种类型 NoneBot 事件的响应\",\"支持对 NoneBot 消息对象的便捷操作\",\"集成 localstore 文件存储、apscheduler 定时任务、网络请求等常用功能\",\"对接 NB-CLI 脚手架，通过脚手架扩展使用低代码框架\",\"技术要求\",\"掌握 Python 与 NoneBot 框架的使用 \",\"熟悉 NoneBot 插件的开发，包括事件响应与消息处理等\",\"熟悉 NoneBot 生态组件（Alconna、localstore、apscheduler等）的使用\",\"了解 NB-CLI 脚手架的扩展开发\",\"熟悉 Blockly 低代码框架的使用和开发\",\"成果仓库\",\"https://github.com/nonebot/noneblockly\"]},\"506\":{\"h\":\"手动创建项目\",\"t\":[\"在快速上手中，我们已经介绍了如何安装和使用 nb-cli 创建一个项目。在本章节中，我们将简要介绍如何在不使用 nb-cli 的方式创建一个机器人项目的最小实例并启动。如果你想要了解 NoneBot 的启动流程，也可以阅读本章节。\",\"警告\",\"我们十分不推荐直接创建机器人项目，请优先考虑使用 nb-cli 进行项目创建。\",\"一个机器人项目的最小实例中至少需要包含以下内容:\",\"入口文件：初始化并运行机器人的 Python 文件\",\"配置文件：存储机器人启动所需的配置\",\"插件：为机器人提供具体的功能\",\"下面我们创建一个项目文件夹，来存放项目所需文件，以下步骤均在该文件夹中进行。\"]},\"507\":{\"h\":\"安装依赖\",\"t\":[\"在创建项目前，我们首先需要将项目所需依赖安装至环境中。\",\"（可选）创建虚拟环境，以 venv 为例\",\"python -m venv .venv --prompt nonebot2 # windows .venv\\\\Scripts\\\\activate # linux/macOS source .venv/bin/activate\",\"安装 nonebot2 以及驱动器\",\"pip install 'nonebot2[fastapi]'\",\"驱动器包名可以在 驱动器商店 中找到。\",\"安装适配器\",\"pip install nonebot-adapter-console\",\"适配器包名可以在 适配器商店 中找到。\"]},\"508\":{\"h\":\"创建配置文件\",\"t\":[\"配置文件用于存放 NoneBot 运行所需要的配置项，使用 pydantic 以及 python-dotenv 来读取配置。配置项需符合 dotenv 格式，复杂类型数据需使用 JSON 格式填写。具体可选配置方式以及配置项详情参考配置。\",\"在项目文件夹中创建一个 .env 文本文件，并写入以下内容:\",\"HOST=0.0.0.0 # 配置 NoneBot 监听的 IP / 主机名 PORT=8080 # 配置 NoneBot 监听的端口 COMMAND_START=[\\\"/\\\"] # 配置命令起始字符 COMMAND_SEP=[\\\".\\\"] # 配置命令分割字符\"]},\"509\":{\"h\":\"创建入口文件\",\"t\":[\"入口文件（ Entrypoint ）顾名思义，是用来初始化并运行机器人的 Python 文件。入口文件需要完成框架的初始化、注册适配器、加载插件等工作。\",\"提示\",\"如果你使用 nb-cli 创建项目，入口文件不会被创建，该文件功能会被 nb run 命令代替。\",\"在项目文件夹中创建一个 bot.py 文件，并写入以下内容:\",\"import nonebot from nonebot.adapters.console import Adapter as ConsoleAdapter # 避免重复命名 # 初始化 NoneBot nonebot.init() # 注册适配器 driver = nonebot.get_driver() driver.register_adapter(ConsoleAdapter) # 在这里加载插件 nonebot.load_builtin_plugins(\\\"echo\\\") # 内置插件 # nonebot.load_plugin(\\\"thirdparty_plugin\\\") # 第三方插件 # nonebot.load_plugins(\\\"awesome_bot/plugins\\\") # 本地插件 if __name__ == \\\"__main__\\\": nonebot.run()\",\"我们暂时不需要了解其中内容的含义，这些将会在稍后的章节中逐一介绍。在创建完成以上文件并确认已安装所需适配器和插件后，即可运行机器人。\"]},\"510\":{\"h\":\"运行机器人\",\"t\":[\"在项目文件夹中，使用配置好环境的 Python 解释器运行入口文件（如果使用虚拟环境，请先激活虚拟环境）:\",\"python bot.py\",\"如果你后续使用了 nb-cli ，你仍可以使用 nb run 命令来运行机器人，nb-cli 会自动检测入口文件 bot.py 是否存在并运行。同时，你也可以使用 nb run --reload 来自动检测代码的更改并自动重新运行入口文件。\"]},\"511\":{\"h\":\"插件编写准备\",\"t\":[\"在正式编写插件之前，我们需要先了解一下插件的概念。\"]},\"512\":{\"h\":\"插件结构\",\"t\":[\"在 NoneBot 中，插件即是 Python 的一个模块（module）。NoneBot 会在导入时对这些模块做一些特殊的处理使得他们成为一个插件。插件间应尽量减少耦合，可以进行有限制的相互调用，NoneBot 能够正确解析插件间的依赖关系。\"]},\"513\":{\"h\":\"单文件插件\",\"t\":[\"一个普通的 .py 文件即可以作为一个插件，例如创建一个 foo.py 文件：\",\"📂 plugins └── 📜 foo.py\",\"这个时候模块 foo 已经可以被称为一个插件了，尽管它还什么都没做。\"]},\"514\":{\"h\":\"包插件\",\"t\":[\"一个包含 __init__.py 的文件夹即是一个常规 Python 包 package，例如创建一个 foo 文件夹：\",\"📂 plugins └── 📂 foo └── 📜 __init__.py\",\"这个时候包 foo 同样是一个合法的插件，插件内容可以在 __init__.py 文件中编写。\"]},\"515\":{\"h\":\"创建插件\",\"t\":[\"注意\",\"如果在之前的快速上手章节中已经使用 bootstrap 模板创建了项目，那么你需要做出如下修改：\",\"在项目目录中创建一个两层文件夹 awesome_bot/plugins\",\"📦 awesome-bot ├── 📂 awesome_bot │ └── 📂 plugins ├── 📜 pyproject.toml └── 📜 README.md\",\"修改 pyproject.toml 文件中的 nonebot 配置项，在 plugin_dirs 中添加 awesome_bot/plugins\",\"[tool.nonebot] plugin_dirs = [\\\"awesome_bot/plugins\\\"]\",\"注意\",\"如果在之前的创建项目章节中手动创建了相关文件，那么你需要做出如下修改：\",\"在项目目录中创建一个两层文件夹 awesome_bot/plugins\",\"📦 awesome-bot ├── 📂 awesome_bot │ └── 📂 plugins └── 📜 bot.py\",\"修改 bot.py 文件中的加载插件部分，取消注释或者添加如下代码\",\"# 在这里加载插件 nonebot.load_builtin_plugins(\\\"echo\\\") # 内置插件 nonebot.load_plugins(\\\"awesome_bot/plugins\\\") # 本地插件\",\"创建插件可以通过 nb-cli 命令从完整模板创建，也可以手动新建空白文件。通过以下命令创建一个名为 weather 的插件：\",\"$ nb plugin create [?] 插件名称: weather [?] 使用嵌套插件? (y/N) N [?] 输出目录: awesome_bot/plugins\",\"nb-cli 会在 awesome_bot/plugins 目录下创建一个名为 weather 的文件夹，其中包含的文件将在稍后章节中用到。\",\"📦 awesome-bot ├── 📂 awesome_bot │ └── 📂 plugins | └── 📂 foo | ├── 📜 __init__.py | └── 📜 config.py ├── 📜 pyproject.toml └── 📜 README.md\"]},\"516\":{\"h\":\"加载插件\",\"t\":[\"警告\",\"请勿在插件被加载前 import 插件模块，这会导致 NoneBot 无法将其转换为插件而出现意料之外的情况。\",\"加载插件是在机器人入口文件中完成的，需要在框架初始化之后，运行之前进行。\",\"请注意，加载的插件模块名称（插件文件名或文件夹名）不能相同，且每一个插件只能被加载一次，重复加载将会导致异常。\",\"如果你使用 nb-cli 管理插件，那么你可以跳过这一节，nb-cli 将会自动处理加载。\",\"如果你使用自定义的入口文件bot.py，那么你需要在 bot.py 中加载插件。\",\"import nonebot nonebot.init() # 加载插件 nonebot.run()\",\"加载插件的方式有多种，但在底层的加载逻辑是一致的。以下是为加载插件提供的几种方式：\"]},\"517\":{\"h\":\"\",\"t\":[\"通过点分割模块名称或使用 pathlib 的 Path 对象来加载插件。通常用于加载第三方插件或者项目插件。例如：\",\"from pathlib import Path nonebot.load_plugin(\\\"path.to.your.plugin\\\") # 加载第三方插件 nonebot.load_plugin(Path(\\\"./path/to/your/plugin.py\\\")) # 加载项目插件\",\"注意\",\"请注意，本地插件的路径应该为相对机器人 入口文件（通常为 bot.py） 可导入的，例如在项目 plugins 目录下。\"]},\"518\":{\"h\":\"\",\"t\":[\"加载传入插件目录中的所有插件，通常用于加载一系列本地编写的项目插件。例如：\",\"nonebot.load_plugins(\\\"src/plugins\\\", \\\"path/to/your/plugins\\\")\",\"注意\",\"请注意，插件目录应该为相对机器人 入口文件（通常为 bot.py） 可导入的，例如在项目 plugins 目录下。\"]},\"519\":{\"h\":\"\",\"t\":[\"这种加载方式是以上两种方式的混合，加载所有传入的插件模块名称，以及所有给定目录下的插件。例如：\",\"nonebot.load_all_plugins([\\\"path.to.your.plugin\\\"], [\\\"path/to/your/plugins\\\"])\"]},\"520\":{\"h\":\"\",\"t\":[\"通过 JSON 文件加载插件，是 load_all_plugins 的 JSON 变种。通过读取 JSON 文件中的 plugins 字段和 plugin_dirs 字段进行加载。例如：\",\"{ \\\"plugins\\\": [\\\"path.to.your.plugin\\\"], \\\"plugin_dirs\\\": [\\\"path/to/your/plugins\\\"] }\",\"nonebot.load_from_json(\\\"plugin_config.json\\\", encoding=\\\"utf-8\\\")\",\"提示\",\"如果 JSON 配置文件中的字段无法满足你的需求，可以使用 load_all_plugins 方法自行读取配置来加载插件。\"]},\"521\":{\"h\":\"\",\"t\":[\"通过 TOML 文件加载插件，是 load_all_plugins 的 TOML 变种。通过读取 TOML 文件中的 [tool.nonebot] Table 中的 plugins 和 plugin_dirs Array 进行加载。例如：\",\"[tool.nonebot] plugins = [\\\"path.to.your.plugin\\\"] plugin_dirs = [\\\"path/to/your/plugins\\\"]\",\"nonebot.load_from_toml(\\\"plugin_config.toml\\\", encoding=\\\"utf-8\\\")\",\"提示\",\"如果 TOML 配置文件中的字段无法满足你的需求，可以使用 load_all_plugins 方法自行读取配置来加载插件。\"]},\"522\":{\"h\":\"\",\"t\":[\"加载一个内置插件，传入的插件名必须为 NoneBot 内置插件。该方法是 load_plugin 的封装。例如：\",\"nonebot.load_builtin_plugin(\\\"echo\\\")\"]},\"523\":{\"h\":\"\",\"t\":[\"加载传入插件列表中的所有内置插件。例如：\",\"nonebot.load_builtin_plugins(\\\"echo\\\", \\\"single_session\\\")\"]},\"524\":{\"h\":\"其他加载方式\",\"t\":[\"有关其他插件加载的方式，可参考跨插件访问和嵌套插件。\"]},\"525\":{\"h\":\"机器人的构成\",\"t\":[\"了解机器人的基本构成有助于你更好地使用 NoneBot，本章节将介绍 NoneBot 中的基本组成部分，稍后的文档中将会使用到这些概念。\",\"使用 NoneBot 框架搭建的机器人具有以下几个基本组成部分：\",\"NoneBot 机器人框架主体：负责连接各个组成部分，提供基本的机器人功能\",\"驱动器 Driver：客户端/服务端的功能实现，负责接收和发送消息（通常为 HTTP 通信）\",\"适配器 Adapter：驱动器的上层，负责将平台消息与 NoneBot 事件/操作系统的消息格式相互转换\",\"插件 Plugin：机器人的功能实现，通常为负责处理事件并进行一系列的操作\",\"除 NoneBot 机器人框架主体外，其他部分均可按需选择、互相搭配，但由于平台的兼容性问题，部分插件可能仅在某些特定平台上可用（这由插件编写者决定）。\",\"在接下来的章节中，我们将重点介绍机器人功能实现，即插件 Plugin 部分。\"]},\"526\":{\"h\":\"事件响应器\",\"t\":[\"事件响应器（Matcher）是对接收到的事件进行响应的基本单元，所有的事件响应器都继承自 Matcher 基类。\",\"在 NoneBot 中，事件响应器可以通过一系列特定的规则筛选出具有某种特征的事件，并按照特定的流程交由预定义的事件处理依赖进行处理。例如，在快速上手中，我们使用了内置插件 echo ，它定义的事件响应器能响应机器人用户发送的“/echo hello world”消息，提取“hello world”信息并作为回复消息发送。\"]},\"527\":{\"h\":\"事件响应器辅助函数\",\"t\":[\"NoneBot 中所有事件响应器均继承自 Matcher 基类，但直接使用 Matcher.new() 方法创建事件响应器过于繁琐且不能记录插件信息。因此，NoneBot 中提供了一系列“事件响应器辅助函数”（下称“辅助函数”）来辅助我们用最简的方式创建带有不同规则预设的事件响应器，提高代码可读性和书写效率。通常情况下，我们只需要使用辅助函数即可完成事件响应器的创建。\",\"在 NoneBot 中，辅助函数以 on() 或 on_<type/rule>() 形式出现（例如 on_command()），调用后根据不同的参数返回一个 Type[Matcher] 类型的新事件响应器。\",\"目前 NoneBot 提供了多种功能各异的辅助函数、具有共同命令名称前缀的命令组以及具有共同参数的响应器组，均可以从 nonebot 模块直接导入使用，具体内容参考事件响应器进阶。\"]},\"528\":{\"h\":\"创建事件响应器\",\"t\":[\"在上一节创建插件中，我们创建了一个 weather 插件，现在我们来实现他的功能。\",\"我们直接使用 on_command() 辅助函数来创建一个事件响应器：\",\"from nonebot import on_command weather = on_command(\\\"天气\\\")\",\"这样，我们就获得一个名为 weather 的事件响应器了，这个事件响应器会对 /天气 开头的消息进行响应。\",\"提示\",\"如果一条消息中包含“@机器人”或以“机器人的昵称”开始，例如 @bot /天气 时，协议适配器会将 event.is_tome() 判断为 True ，同时也会自动去除 @bot，即事件响应器收到的信息内容为 /天气，方便进行命令匹配。\"]},\"529\":{\"h\":\"为事件响应器添加参数\",\"t\":[\"在辅助函数中，我们可以添加一些参数来对事件响应器进行更加精细的调整，例如事件响应器的优先级、匹配规则等。例如：\",\"from nonebot import on_command from nonebot.rule import to_me weather = on_command(\\\"天气\\\", rule=to_me(), aliases={\\\"weather\\\", \\\"查天气\\\"}, priority=10, block=True)\",\"这样，我们就获得了一个可以响应 天气、weather、查天气 三个命令的响应规则，需要私聊或 @bot 时才会响应，优先级为 10（越小越优先），阻断事件向后续优先级传播的事件响应器了。这些内容的意义和使用方法将会在后续的章节中一一介绍。\",\"提示\",\"需要注意的是，不同的辅助函数有不同的可选参数，在使用之前可以参考事件响应器进阶 - 基本辅助函数或 API 文档。\"]},\"530\":{\"h\":\"处理消息\",\"t\":[\"在不同平台中，一条消息可能会有承载有各种不同的表现形式，它可能是一段纯文本、一张图片、一段语音、一篇富文本文章，也有可能是多种类型的组合等等。\",\"在 NoneBot 中，为确保消息的正常处理与跨平台兼容性，采用了扁平化的消息序列形式，即 Message 对象。消息序列是 NoneBot 中的消息载体，无论是接收还是发送的消息，都采用消息序列的形式进行处理。\"]},\"531\":{\"h\":\"认识消息类型\"},\"532\":{\"h\":\"消息序列\",\"t\":[\"在 NoneBot 中，消息序列 Message 的主要作用是用于表达“一串消息”。由于消息序列继承自 List[MessageSegment]，所以 Message 的本质是由若干消息段所组成的序列。因此，消息序列的使用方法与 List 有很多相似之处，例如切片、索引、拼接等。\",\"在上一节的使用依赖注入中，我们已经通过依赖注入 CommandArg() 获取了命令的参数，它的类型即是消息序列。我们使用了消息序列的 extract_plain_text() 方法来获取消息序列中的纯文本内容。\"]},\"533\":{\"h\":\"消息段\",\"t\":[\"顾名思义，消息段 MessageSegment 是一段消息。由于消息序列的本质是由若干消息段所组成的序列，消息段可以被认为是构成消息序列的最小单位。简单来说，消息序列类似于一个自然段，而消息段则是组成自然段的一句话。同时，作为特殊消息载体的存在，绝大多数的平台都有着独特的消息类型，这些独特的内容均需要由对应的协议适配器所提供，以适应不同平台中的消息模式。这也意味着，你需要导入对应的协议适配器中的消息序列和消息段后才能使用其特殊的工厂方法。\",\"注意\",\"消息段的类型是由协议适配器提供的，因此你需要参考协议适配器的文档并导入对应的消息段后才能使用其特殊的消息类型。\",\"在上一节的使用依赖注入中，我们导入的为 nonebot.adapters.Message 抽象基类，因此我们无法使用平台特有的消息类型。仅能使用 str 作为纯文本消息回复。\"]},\"534\":{\"h\":\"使用消息序列\",\"t\":[\"注意\",\"在以下的示例中，为了更好的理解多种类型的消息组成方式，我们将使用 Console 协议适配器来演示消息序列的使用方法。在实际使用中，你需要确保你使用的消息序列类型与你所要发送的平台类型一致。\",\"通常情况下，适配器在接收到消息时，会将消息转换为消息序列，可以通过依赖注入 EventMessage，或者使用 event.get_message() 获取。\",\"由于消息序列是 List[MessageSegment] 的子类，所以你总是可以用和操作 List 类似的方式来处理消息序列。例如：\",\">>> from nonebot.adapters.console import Message, MessageSegment >>> message = Message([ MessageSegment(type=\\\"text\\\", data={\\\"text\\\":\\\"hello\\\"}), MessageSegment(type=\\\"markdown\\\", data={\\\"markup\\\":\\\"**world**\\\"}), ]) >>> for segment in message: ... print(segment.type, segment.data) ... text {'text': 'hello'} markdown {'markup': '**world**'} >>> len(message) 2\"]},\"535\":{\"h\":\"构造消息序列\",\"t\":[\"在使用事件响应器操作发送消息时，既可以使用 str 作为消息，也可以使用 Message、MessageSegment 或者 MessageTemplate。那么，我们就需要先构造一个消息序列。消息序列可以通过多种方式构造：\"]},\"536\":{\"h\":\"直接构造\",\"t\":[\"Message 类可以直接实例化，支持 str、MessageSegment、Iterable[MessageSegment] 或适配器自定义类型的参数。\",\"from nonebot.adapters.console import Message, MessageSegment # str Message(\\\"Hello, world!\\\") # MessageSegment Message(MessageSegment.text(\\\"Hello, world!\\\")) # List[MessageSegment] Message([MessageSegment.text(\\\"Hello, world!\\\")])\"]},\"537\":{\"h\":\"运算构造\",\"t\":[\"Message 对象可以通过 str、MessageSegment 相加构造，详情请参考拼接消息。\"]},\"538\":{\"h\":\"从字典数组构造\",\"t\":[\"Message 对象支持 Pydantic 自定义类型构造，可以使用 Pydantic 的 TypeAdapter 方法进行构造。\",\"from pydantic import TypeAdapter from nonebot.adapters.console import Message, MessageSegment # 由字典构造消息段 TypeAdapter(MessageSegment).validate_python( {\\\"type\\\": \\\"text\\\", \\\"data\\\": {\\\"text\\\": \\\"text\\\"}} ) == MessageSegment.text(\\\"text\\\") # 由字典数组构造消息序列 TypeAdapter(Message).validate_python( [MessageSegment.text(\\\"text\\\"), {\\\"type\\\": \\\"text\\\", \\\"data\\\": {\\\"text\\\": \\\"text\\\"}}], ) == Message([MessageSegment.text(\\\"text\\\"), MessageSegment.text(\\\"text\\\")])\"]},\"539\":{\"h\":\"获取消息纯文本\",\"t\":[\"由于消息中存在各种类型的消息段，因此 str(message) 通常不能得到消息的纯文本，而是一个消息序列的字符串表示。\",\"NoneBot 为消息段定义了一个方法 is_text() ，可以用于判断消息段是否为纯文本；也可以使用 message.extract_plain_text() 方法获取消息纯文本。\",\"from nonebot.adapters.console import Message, MessageSegment # 判断消息段是否为纯文本 MessageSegment.text(\\\"text\\\").is_text() == True # 提取消息纯文本字符串 Message( [MessageSegment.text(\\\"text\\\"), MessageSegment.markdown(\\\"**markup**\\\")] ).extract_plain_text() == \\\"text\\\"\"]},\"540\":{\"h\":\"遍历\",\"t\":[\"消息序列继承自 List[MessageSegment] ，因此可以使用 for 循环遍历消息段。\",\"for segment in message: ...\"]},\"541\":{\"h\":\"比较\",\"t\":[\"消息和消息段都可以使用 == 或 != 运算符比较是否相同。\",\"MessageSegment.text(\\\"text\\\") != MessageSegment.text(\\\"foo\\\") some_message == Message([MessageSegment.text(\\\"text\\\")])\"]},\"542\":{\"h\":\"检查消息段\",\"t\":[\"我们可以通过 in 运算符或消息序列的 has 方法来：\",\"# 是否存在消息段 MessageSegment.text(\\\"text\\\") in message # 是否存在指定类型的消息段 \\\"text\\\" in message\",\"我们还可以使用消息序列的 only 方法来检查消息中是否仅包含指定的消息段。\",\"# 是否都为指定消息段 message.only(MessageSegment.text(\\\"test\\\")) # 是否仅包含指定类型的消息段 message.only(\\\"text\\\")\"]},\"543\":{\"h\":\"过滤、索引与切片\",\"t\":[\"消息序列对列表的索引与切片进行了增强，在原有列表 int 索引与 slice 切片的基础上，支持 type 过滤索引与切片。\",\"from nonebot.adapters.console import Message, MessageSegment message = Message( [ MessageSegment.text(\\\"test\\\"), MessageSegment.markdown(\\\"test2\\\"), MessageSegment.markdown(\\\"test3\\\"), MessageSegment.text(\\\"test4\\\"), ] ) # 索引 message[0] == MessageSegment.text(\\\"test\\\") # 切片 message[0:2] == Message( [MessageSegment.text(\\\"test\\\"), MessageSegment.markdown(\\\"test2\\\")] ) # 类型过滤 message[\\\"markdown\\\"] == Message( [MessageSegment.markdown(\\\"test2\\\"), MessageSegment.markdown(\\\"test3\\\")] ) # 类型索引 message[\\\"markdown\\\", 0] == MessageSegment.markdown(\\\"test2\\\") # 类型切片 message[\\\"markdown\\\", 0:2] == Message( [MessageSegment.markdown(\\\"test2\\\"), MessageSegment.markdown(\\\"test3\\\")] )\",\"我们也可以通过消息序列的 include、exclude 方法进行类型过滤。\",\"message.include(\\\"text\\\", \\\"markdown\\\") message.exclude(\\\"text\\\")\",\"同样的，消息序列对列表的 index、count 方法也进行了增强，可以用于索引指定类型的消息段。\",\"# 指定类型首个消息段索引 message.index(\\\"markdown\\\") == 1 # 指定类型消息段数量 message.count(\\\"markdown\\\") == 2\",\"此外，消息序列添加了一个 get 方法，可以用于获取指定类型指定个数的消息段。\",\"# 获取指定类型指定个数的消息段 message.get(\\\"markdown\\\", 1) == Message([MessageSegment.markdown(\\\"test2\\\")])\"]},\"544\":{\"h\":\"拼接消息\",\"t\":[\"str、Message、MessageSegment 对象之间可以直接相加，相加均会返回一个新的 Message 对象。\",\"# 消息序列与消息段相加 Message([MessageSegment.text(\\\"text\\\")]) + MessageSegment.text(\\\"text\\\") # 消息序列与字符串相加 Message([MessageSegment.text(\\\"text\\\")]) + \\\"text\\\" # 消息序列与消息序列相加 Message([MessageSegment.text(\\\"text\\\")]) + Message([MessageSegment.text(\\\"text\\\")]) # 字符串与消息序列相加 \\\"text\\\" + Message([MessageSegment.text(\\\"text\\\")]) # 消息段与消息段相加 MessageSegment.text(\\\"text\\\") + MessageSegment.text(\\\"text\\\") # 消息段与字符串相加 MessageSegment.text(\\\"text\\\") + \\\"text\\\" # 消息段与消息序列相加 MessageSegment.text(\\\"text\\\") + Message([MessageSegment.text(\\\"text\\\")]) # 字符串与消息段相加 \\\"text\\\" + MessageSegment.text(\\\"text\\\")\",\"如果需要在当前消息序列后直接拼接新的消息段，可以使用 Message.append、Message.extend 方法，或者使用自加。\",\"msg = Message([MessageSegment.text(\\\"text\\\")]) # 自加 msg += \\\"text\\\" msg += MessageSegment.text(\\\"text\\\") msg += Message([MessageSegment.text(\\\"text\\\")]) # 附加 msg.append(\\\"text\\\") msg.append(MessageSegment.text(\\\"text\\\")) # 扩展 msg.extend([MessageSegment.text(\\\"text\\\")])\",\"我们也可以通过消息段或消息序列的 join 方法来拼接一串消息：\",\"seg = MessageSegment.text(\\\"text\\\") msg = seg.join( [ MessageSegment.text(\\\"first\\\"), Message( [ MessageSegment.text(\\\"second\\\"), MessageSegment.text(\\\"third\\\"), ] ) ] ) msg == Message( [ MessageSegment.text(\\\"first\\\"), MessageSegment.text(\\\"text\\\"), MessageSegment.text(\\\"second\\\"), MessageSegment.text(\\\"third\\\"), ] )\"]},\"545\":{\"h\":\"使用消息模板\",\"t\":[\"为了提供安全可靠的跨平台模板字符，我们提供了一个消息模板功能来构建消息序列\",\"它在以下常见场景中尤其有用：\",\"多行富文本编排（包含图片，文字以及表情等）\",\"客制化（由 Bot 最终用户提供消息模板时）\",\"在事实上，它的用法和 str.format 极为相近，所以你在使用的时候，总是可以参考Python 文档来达到你想要的效果，这里给出几个简单的例子。\",\"默认情况下，消息模板采用 str 纯文本形式的格式化：\",\">>> from nonebot.adapters import MessageTemplate >>> MessageTemplate(\\\"{} {}\\\").format(\\\"hello\\\", \\\"world\\\") 'hello world'\",\"如果 Message.template 构建消息模板，那么消息模板将采用消息序列形式的格式化，此时的消息将会是平台特定的：\",\"注意\",\"使用 Message.template 构建消息模板时，应注意消息序列为平台适配器提供的类型，不能使用 nonebot.adapters.Message 基类作为模板构建。使用基类构建模板与使用 str 构建模板的效果是一样的，因此请使用上述的 MessageTemplate 类直接构建模板。：\",\">>> from nonebot.adapters.console import Message, MessageSegment >>> Message.template(\\\"{} {}\\\").format(\\\"hello\\\", \\\"world\\\") Message( MessageSegment.text(\\\"hello\\\"), MessageSegment.text(\\\" \\\"), MessageSegment.text(\\\"world\\\") )\",\"消息模板支持使用消息段进行格式化：\",\">>> from nonebot.adapters.console import Message, MessageSegment >>> Message.template(\\\"{}{}\\\").format(MessageSegment.markdown(\\\"**markup**\\\"), \\\"world\\\") Message( MessageSegment(type='markdown', data={'markup': '**markup**'}), MessageSegment(type='text', data={'text': 'world'}) )\",\"消息模板同样支持使用消息序列作为模板：\",\">>> from nonebot.adapters.console import Message, MessageSegment >>> Message.template( ... MessageSegment.text(\\\"{user_id}\\\") + MessageSegment.emoji(\\\"tada\\\") + ... MessageSegment.text(\\\"{message}\\\") ... ).format_map({\\\"user_id\\\": 123456, \\\"message\\\": \\\"hello world\\\"}) Message( MessageSegment(type='text', data={'text': '123456'}), MessageSegment(type='emoji', data={'emoji': 'tada'}), MessageSegment(type='text', data={'text': 'hello world'}) )\",\"注意\",\"只有消息序列中的文本类型消息段才能被格式化，其他类型的消息段将会原样添加。\",\"消息模板支持使用拓展控制符来控制消息段类型：\",\">>> from nonebot.adapters.console import Message, MessageSegment >>> Message.template(\\\"{name:emoji}\\\").format(name='tada') Message(MessageSegment(type='emoji', data={'name': 'tada'}))\"]},\"546\":{\"h\":\"使用适配器\",\"t\":[\"适配器 (Adapter) 是机器人与平台交互的核心桥梁，它负责在驱动器和机器人插件之间转换与传递消息。\"]},\"547\":{\"h\":\"适配器功能与组成\",\"t\":[\"适配器通常有两种功能，分别是接收事件和调用平台接口。其中，接收事件是指将驱动器收到的事件消息转换为 NoneBot 定义的事件模型，然后交由机器人插件处理；调用平台接口是指将机器人插件调用平台接口的数据转换为平台指定的格式，然后交由驱动器发送，并接收接口返回数据。\",\"为了实现这两种功能，适配器通常由四个部分组成：\",\"Adapter：负责转换事件和调用接口，正确创建 Bot 对象并注册到 NoneBot 中。\",\"Bot：负责存储平台机器人相关信息，并提供回复事件的方法。\",\"Event：负责定义事件内容，以及事件主体对象。\",\"Message：负责正确序列化消息，以便机器人插件处理。\"]},\"548\":{\"h\":\"注册适配器\",\"t\":[\"在使用适配器之前，我们需要先将适配器注册到驱动器中，这样适配器就可以通过驱动器接收事件和调用接口了。我们以 Console 适配器为例，来看看如何注册适配器：\",\"import nonebot from nonebot.adapters.console import Adapter driver = nonebot.get_driver() driver.register_adapter(Adapter)\",\"我们首先需要从适配器模块中导入所需要的适配器类，然后通过驱动器的 register_adapter 方法将适配器注册到驱动器中即可。如果我们需要多平台支持，可以多次调用 register_adapter 方法来注册多个适配器。\"]},\"549\":{\"h\":\"获取已注册的适配器\",\"t\":[\"NoneBot 提供了 get_adapter 方法来获取已注册的适配器，我们可以通过适配器的名称或类型来获取指定的适配器实例：\",\"import nonebot from nonebot.adapters.console import Adapter adapters = nonebot.get_adapters() console_adapter = nonebot.get_adapter(Adapter) console_adapter = nonebot.get_adapter(Adapter.get_name())\"]},\"550\":{\"h\":\"获取 Bot 对象\",\"t\":[\"当前所有适配器已连接的 Bot 对象可以通过 get_bots 方法获取，这是一个以机器人 ID 为键的字典：\",\"import nonebot bots = nonebot.get_bots()\",\"我们也可以通过 get_bot 方法获取指定 ID 的 Bot 对象。如果省略 ID 参数，将会返回所有 Bot 中的第一个：\",\"import nonebot bot = nonebot.get_bot(\\\"bot_id\\\")\",\"如果需要获取指定适配器连接的 Bot 对象，我们可以通过适配器的 bots 属性获取，这也是一个以机器人 ID 为键的字典：\",\"import nonebot from nonebot.adapters.console import Adapter console_adapter = nonebot.get_adapter(Adapter) bots = console_adapter.bots\",\"Bot 对象都具有一个 self_id 属性，它是机器人的唯一 ID，由适配器填写，通常为机器人的帐号 ID 或者 APP ID。\"]},\"551\":{\"h\":\"获取事件通用信息\",\"t\":[\"适配器的所有事件模型均继承自 Event 基类，在事件类型与重载一节中，我们也提到了如何使用基类抽象方法来获取事件通用信息。基类能提供如下信息：\"]},\"552\":{\"h\":\"事件类型\",\"t\":[\"事件类型通常为 meta_event、message、notice、request。\",\"type: str = event.get_type()\"]},\"553\":{\"h\":\"事件名称\",\"t\":[\"事件名称由适配器定义，通常用于日志记录。\",\"name: str = event.get_event_name()\"]},\"554\":{\"h\":\"事件描述\",\"t\":[\"事件描述由适配器定义，通常用于日志记录。\",\"description: str = event.get_event_description()\"]},\"555\":{\"h\":\"事件日志字符串\",\"t\":[\"事件日志字符串由事件名称和事件描述组成，用于日志记录。\",\"log: str = event.get_log_string()\"]},\"556\":{\"h\":\"事件主体 ID\",\"t\":[\"事件主体 ID 通常为机器人用户 ID。\",\"user_id: str = event.get_user_id()\"]},\"557\":{\"h\":\"事件会话 ID\",\"t\":[\"事件会话 ID 通常为机器人用户 ID 与群聊/频道 ID 组合而成。\",\"session_id: str = event.get_session_id()\"]},\"558\":{\"h\":\"事件消息\",\"t\":[\"如果事件包含消息，则可以通过该方法获取，否则会产生异常。\",\"message: Message = event.get_message()\"]},\"559\":{\"h\":\"事件纯文本消息\",\"t\":[\"通常为事件消息的纯文本内容，如果事件不包含消息，则会产生异常。\",\"text: str = event.get_plaintext()\"]},\"560\":{\"h\":\"事件是否与机器人有关\",\"t\":[\"由适配器实现的判断，通常将事件目标主体为机器人、消息中包含“@机器人”或以“机器人的昵称”开始视为与机器人有关。\",\"is_tome: bool = event.is_tome()\"]},\"561\":{\"h\":\"更多\",\"t\":[\"官方支持的适配器和社区贡献的适配器均可在商店中查看。如果你想要开发自己的适配器，可以参考开发文档。欢迎通过商店发布你的适配器。\"]},\"562\":{\"h\":\"选择驱动器\",\"t\":[\"驱动器 (Driver) 是机器人运行的基石，它是机器人初始化的第一步，主要负责数据收发。\",\"提示\",\"驱动器的选择通常与机器人所使用的协议适配器相关，如果不知道该选择哪个驱动器，可以先阅读相关协议适配器文档说明。\",\"提示\",\"如何安装驱动器请参考安装驱动器。\"]},\"563\":{\"h\":\"驱动器类型\",\"t\":[\"驱动器类型大体上可以分为两种：\",\"Forward：即客户端型驱动器，多用于使用 HTTP 轮询，连接 WebSocket 服务器等情形。\",\"Reverse：即服务端型驱动器，多用于使用 WebHook，接收 WebSocket 客户端连接等情形。\",\"客户端型驱动器可以分为以下两种：\",\"异步发送 HTTP 请求，自定义 HTTP Method、URL、Header、Body、Cookie、Proxy、Timeout 等。\",\"异步建立 WebSocket 连接上下文，自定义 WebSocket URL、Header、Cookie、Proxy、Timeout 等。\",\"服务端型驱动器目前有：\",\"ASGI 应用框架，具有以下功能： \",\"协议适配器自定义 HTTP 上报地址以及对上报数据处理的回调函数。\",\"协议适配器自定义 WebSocket 连接请求地址以及对 WebSocket 请求处理的回调函数。\",\"用户可以向 ASGI 应用添加任何服务端相关功能，如：添加自定义路由。\"]},\"564\":{\"h\":\"配置驱动器\",\"t\":[\"驱动器的配置方法已经在配置章节中简单进行了介绍，这里将详细介绍驱动器配置的格式。\",\"NoneBot 中的客户端和服务端型驱动器可以相互配合使用，但服务端型驱动器仅能选择一个。所有驱动器模块都会包含一个 Driver 子类，即驱动器类，他可以作为驱动器单独运行。同时，客户端驱动器模块中还会提供一个 Mixin 子类，用于在与其他驱动器配合使用时加载。因此，驱动器配置格式采用特殊语法：<module>[:<Driver>][+<module>[:<Mixin>]]*。\",\"其中，<module> 代表驱动器模块路径；<Driver> 代表驱动器类名，默认为 Driver；<Mixin> 代表驱动器混入类名，默认为 Mixin。即，我们需要选择一个主要驱动器，然后在其基础上配合使用其他驱动器的功能。主要驱动器可以为客户端或服务端类型，但混入类驱动器只能为客户端类型。\",\"特别的，为了简化内置驱动器模块路径，我们可以使用 ~ 符号作为内置驱动器模块路径的前缀，如 ~fastapi 代表使用内置驱动器 fastapi。NoneBot 内置了多个驱动器适配，但需要安装额外依赖才能使用，具体请参考安装驱动器。常见的驱动器配置如下：\",\"DRIVER=~fastapi DRIVER=~aiohttp DRIVER=~httpx+~websockets DRIVER=~fastapi+~httpx+~websockets\"]},\"565\":{\"h\":\"获取驱动器\",\"t\":[\"在 NoneBot 框架初始化完成后，我们就可以通过 get_driver() 方法获取全局驱动器实例：\",\"from nonebot import get_driver driver = get_driver()\"]},\"566\":{\"h\":\"内置驱动器\"},\"567\":{\"h\":\"None\",\"t\":[\"**类型：**服务端驱动器\",\"NoneBot 内置的空驱动器，不提供任何收发数据功能，可以在不需要外部网络连接时使用。\",\"DRIVER=~none\"]},\"568\":{\"h\":\"FastAPI（默认）\",\"t\":[\"**类型：**ASGI 服务端驱动器\",\"FastAPI is a modern, fast (high-performance), web framework for building APIs with Python 3.6+ based on standard Python type hints.\",\"FastAPI 是一个易上手、高性能的异步 Web 框架，具有极佳的编写体验。 FastAPI 可以通过类型注解、依赖注入等方式实现输入参数校验、自动生成 API 文档等功能，也可以挂载其他 ASGI、WSGI 应用。\",\"DRIVER=~fastapi\"]},\"569\":{\"h\":\"FastAPI 配置项\"},\"570\":{\"h\":\"\",\"t\":[\"类型：str | None 默认值：None 说明：FastAPI 提供的 OpenAPI JSON 定义地址，如果为 None，则不提供 OpenAPI JSON 定义。\"]},\"571\":{\"h\":\"\",\"t\":[\"类型：str | None 默认值：None 说明：FastAPI 提供的 Swagger 文档地址，如果为 None，则不提供 Swagger 文档。\"]},\"572\":{\"h\":\"\",\"t\":[\"类型：str | None 默认值：None 说明：FastAPI 提供的 ReDoc 文档地址，如果为 None，则不提供 ReDoc 文档。\"]},\"573\":{\"h\":\"\",\"t\":[\"类型：bool 默认值：True 说明：FastAPI 提供的 OpenAPI JSON 定义中是否包含适配器路由的 Schema。\"]},\"574\":{\"h\":\"\",\"t\":[\"警告\",\"不推荐开启该配置项，在 Windows 平台上开启该功能有可能会造成预料之外的影响！替代方案：使用 nb-cli 命令行工具以及参数 --reload 启动 NoneBot。\",\"nb run --reload\",\"开启该功能后，在 uvicorn 运行时（FastAPI 提供的 ASGI 底层，即 reload 功能的实际来源），asyncio 使用的事件循环会被 uvicorn 从默认的 ProactorEventLoop 强制切换到 SelectorEventLoop。\",\"相关信息参考 uvicorn#529，uvicorn#1070，uvicorn#1257\",\"后者（SelectorEventLoop）在 Windows 平台的可使用性不如前者（ProactorEventLoop），包括但不限于\",\"不支持创建子进程\",\"最多只支持 512 个套接字\",\"...\",\"具体信息参考 Python 文档\",\"所以，一些使用了 asyncio 的库因此可能无法正常工作，如：\",\"playwright\",\"如果在开启该功能后，原本正常运行的代码报错，且打印的异常堆栈信息和 asyncio 有关（异常一般为 NotImplementedError）， 你可能就需要考虑相关库对事件循环的支持，以及是否启用该功能。\",\"类型：bool 默认值：False 说明：是否开启 uvicorn 的 reload 功能，需要在机器人入口文件提供 ASGI 应用路径。\",\"app = nonebot.get_asgi() nonebot.run(app=\\\"bot:app\\\")\"]},\"575\":{\"h\":\"\",\"t\":[\"类型：List[str] | None 默认值：None 说明：重载监控文件夹列表，默认为 uvicorn 默认值\"]},\"576\":{\"h\":\"\",\"t\":[\"类型：float | None 默认值：None 说明：重载延迟，默认为 uvicorn 默认值\"]},\"577\":{\"h\":\"\",\"t\":[\"类型：List[str] | None 默认值：None 说明：要监听的文件列表，支持 glob pattern，默认为 uvicorn 默认值\"]},\"578\":{\"h\":\"\",\"t\":[\"类型：List[str] | None 默认值：None 说明：不要监听的文件列表，支持 glob pattern，默认为 uvicorn 默认值\"]},\"579\":{\"h\":\"\",\"t\":[\"类型：Dist[str, Any] 默认值：{} 说明：传递给 FastAPI 的其他参数\"]},\"580\":{\"h\":\"Quart\",\"t\":[\"**类型：**ASGI 服务端驱动器\",\"Quart is an asyncio reimplementation of the popular Flask microframework API.\",\"Quart 是一个类 Flask 的异步版本，拥有与 Flask 非常相似的接口和使用方法。\",\"DRIVER=~quart\"]},\"581\":{\"h\":\"Quart 配置项\"},\"582\":{\"h\":\"\",\"t\":[\"警告\",\"不推荐开启该配置项，在 Windows 平台上开启该功能有可能会造成预料之外的影响！替代方案：使用 nb-cli 命令行工具以及参数 --reload 启动 NoneBot。\",\"nb run --reload\",\"类型：bool 默认值：False 说明：是否开启 uvicorn 的 reload 功能，需要在机器人入口文件提供 ASGI 应用路径。\",\"app = nonebot.get_asgi() nonebot.run(app=\\\"bot:app\\\")\"]},\"583\":{\"h\":\"\",\"t\":[\"类型：List[str] | None 默认值：None 说明：重载监控文件夹列表，默认为 uvicorn 默认值\"]},\"584\":{\"h\":\"\",\"t\":[\"类型：float | None 默认值：None 说明：重载延迟，默认为 uvicorn 默认值\"]},\"585\":{\"h\":\"\",\"t\":[\"类型：List[str] | None 默认值：None 说明：要监听的文件列表，支持 glob pattern，默认为 uvicorn 默认值\"]},\"586\":{\"h\":\"\",\"t\":[\"类型：List[str] | None 默认值：None 说明：不要监听的文件列表，支持 glob pattern，默认为 uvicorn 默认值\"]},\"587\":{\"h\":\"\",\"t\":[\"类型：Dist[str, Any] 默认值：{} 说明：传递给 Quart 的其他参数\"]},\"588\":{\"h\":\"HTTPX\",\"t\":[\"**类型：**HTTP 客户端驱动器\",\"注意\",\"本驱动器仅支持 HTTP 请求，不支持 WebSocket 连接请求。\",\"HTTPX is a fully featured HTTP client for Python 3, which provides sync and async APIs, and support for both HTTP/1.1 and HTTP/2.\",\"DRIVER=~httpx\"]},\"589\":{\"h\":\"websockets\",\"t\":[\"**类型：**WebSocket 客户端驱动器\",\"注意\",\"本驱动器仅支持 WebSocket 连接请求，不支持 HTTP 请求。\",\"websockets is a library for building WebSocket servers and clients in Python with a focus on correctness, simplicity, robustness, and performance.\",\"DRIVER=~websockets\"]},\"590\":{\"h\":\"AIOHTTP\",\"t\":[\"**类型：**HTTP/WebSocket 客户端驱动器\",\"AIOHTTP: Asynchronous HTTP Client/Server for asyncio and Python.\",\"DRIVER=~aiohttp\"]},\"591\":{\"h\":\"事件响应器存储\",\"t\":[\"事件响应器是 NoneBot 处理事件的核心，它们默认存储在一个字典中。在进入会话状态后，事件响应器将会转为临时响应器，作为最高优先级同样存储于该字典中。因此，事件响应器的存储类似于会话存储，它决定了整个 NoneBot 对事件的处理行为。\",\"NoneBot 默认使用 Python 的字典将事件响应器存储于内存中，但是我们也可以自定义事件响应器存储，将事件响应器存储于其他地方，例如 Redis 等。这样我们就可以实现持久化、在多实例间共享会话状态等功能。\"]},\"592\":{\"h\":\"编写存储提供者\",\"t\":[\"事件响应器的存储提供者 MatcherProvider 抽象类继承自 MutableMapping[int, list[type[Matcher]]]，即以优先级为键，以事件响应器列表为值的映射。我们可以方便地进行逐优先级事件传播。\",\"编写一个自定义的存储提供者，只需要继承并实现 MatcherProvider 抽象类：\",\"from nonebot.matcher import MatcherProvider class CustomProvider(MatcherProvider): ...\"]},\"593\":{\"h\":\"设置存储提供者\",\"t\":[\"我们可以通过 matchers.set_provider 方法设置存储提供者：\",\"from nonebot.matcher import matchers matchers.set_provider(CustomProvider) assert isinstance(matchers.provider, CustomProvider)\"]},\"594\":{\"h\":\"事件响应器进阶\",\"t\":[\"在指南与深入中，我们已经介绍了事件响应器的基本用法以及响应规则、权限控制等功能。在这一节中，我们将介绍事件响应器的组成，内置的响应规则，与第三方响应规则拓展。\",\"提示\",\"事件响应器允许继承，你可以通过直接继承 Matcher 类来创建一个新的事件响应器。\"]},\"595\":{\"h\":\"事件响应器组成\"},\"596\":{\"h\":\"事件响应器类型\",\"t\":[\"事件响应器类型 type 即是该响应器所要响应的事件类型，只有在接收到的事件类型与该响应器的类型相同时，才会触发该响应器。如果类型为空字符串 \\\"\\\"，则响应器将会响应所有类型的事件。事件响应器类型的检查在所有其他检查（权限控制、响应规则）之前进行。\",\"NoneBot 内置了四种常用事件类型：meta_event、message、notice、request，分别对应元事件、消息、通知、请求。通常情况下，协议适配器会将事件合理地分类至这四种类型中。如果有其他类型的事件需要响应，可以自行定义新的类型。\"]},\"597\":{\"h\":\"事件触发权限\",\"t\":[\"事件触发权限 permission 是一个 Permission 对象，这在权限控制一节中已经介绍过。事件触发权限会在事件响应器的类型检查通过后进行检查，如果权限检查通过，则执行响应规则检查。\"]},\"598\":{\"h\":\"事件响应规则\",\"t\":[\"事件响应规则 rule 是一个 Rule 对象，这在响应规则一节中已经介绍过。事件响应器的响应规则会在事件响应器的权限检查通过后进行匹配，如果响应规则检查通过，则触发该响应器。\"]},\"599\":{\"h\":\"响应优先级\",\"t\":[\"响应优先级 priority 是一个正整数，用于指定响应器的优先级。响应器的优先级越小，越先被触发。如果响应器的优先级相同，则按照响应器的注册顺序进行触发。\"]},\"600\":{\"h\":\"阻断\",\"t\":[\"阻断 block 是一个布尔值，用于指定响应器是否阻断事件的传播。如果阻断为 True，则在该响应器被触发后，事件将不会再传播给其他下一优先级的响应器。\",\"NoneBot 内置的事件响应器中，所有非 command 规则的 message 类型的事件响应器都会阻断事件传递，其他则不会。\",\"在部分情况中，可以使用 stop_propagation 方法动态阻止事件传播，该方法需要 handler 在参数中获取 matcher 实例后调用方法。\"]},\"601\":{\"h\":\"有效期\",\"t\":[\"事件响应器的有效期分为 temp 和 expire_time 。temp 是一个布尔值，用于指定响应器是否为临时响应器。如果为 True，则该响应器在被触发后会被自动销毁。expire_time 是一个 datetime 对象，用于指定响应器的过期时间。如果 expire_time 不为 None，则在该时间点后，该响应器会被自动销毁。\"]},\"602\":{\"h\":\"默认状态\",\"t\":[\"事件响应器的默认状态 default_state 是一个 dict 对象，用于指定响应器的默认状态。在响应器被触发时，响应器将会初始化默认状态然后开始执行事件处理流程。\"]},\"603\":{\"h\":\"基本辅助函数\",\"t\":[\"NoneBot 为四种类型的事件响应器提供了五个基本的辅助函数：\",\"on：创建任何类型的事件响应器。\",\"on_metaevent：创建元事件响应器。\",\"on_message：创建消息事件响应器。\",\"on_request：创建请求事件响应器。\",\"on_notice：创建通知事件响应器。\",\"除了 on 函数具有一个 type 参数外，其余参数均相同：\",\"rule：响应规则，可以是 Rule 对象或者 RuleChecker 函数。\",\"permission：事件触发权限，可以是 Permission 对象或者 PermissionChecker 函数。\",\"handlers：事件处理函数列表。\",\"temp：是否为临时响应器。\",\"expire_time：响应器的过期时间。\",\"priority：响应器的优先级。\",\"block：是否阻断事件传播。\",\"state：响应器的默认状态。\",\"在消息类型的事件响应器的基础上，NoneBot 还内置了一些常用的响应规则，并结合为辅助函数来方便我们快速创建指定功能的响应器。下面我们逐个介绍。\"]},\"604\":{\"h\":\"内置响应规则\",\"t\":[\"提示\",\"响应规则的使用方法可以参考 深入 - 响应规则。\"]},\"605\":{\"h\":\"\",\"t\":[\"startswith 响应规则用于匹配消息纯文本部分的开头是否与指定字符串（或一系列字符串）相同。可选参数 ignorecase 用于指定是否忽略大小写，默认为 False。\",\"例如，我们可以创建一个匹配消息开头为 ! 或者 / 的规则：\",\"from nonebot.rule import startswith rule = startswith((\\\"!\\\", \\\"/\\\"), ignorecase=False)\",\"也可以直接使用辅助函数新建一个响应器：\",\"from nonebot import on_startswith matcher = on_startswith((\\\"!\\\", \\\"/\\\"), ignorecase=False)\"]},\"606\":{\"h\":\"\",\"t\":[\"endswith 响应规则用于匹配消息纯文本部分的结尾是否与指定字符串（或一系列字符串）相同。可选参数 ignorecase 用于指定是否忽略大小写，默认为 False。\",\"例如，我们可以创建一个匹配消息结尾为 . 或者 。 的规则：\",\"from nonebot.rule import endswith rule = endswith((\\\".\\\", \\\"。\\\"), ignorecase=False)\",\"也可以直接使用辅助函数新建一个响应器：\",\"from nonebot import on_endswith matcher = on_endswith((\\\".\\\", \\\"。\\\"), ignorecase=False)\"]},\"607\":{\"h\":\"\",\"t\":[\"fullmatch 响应规则用于匹配消息纯文本部分是否与指定字符串（或一系列字符串）完全相同。可选参数 ignorecase 用于指定是否忽略大小写，默认为 False。\",\"例如，我们可以创建一个匹配消息为 ping 或者 pong 的规则：\",\"from nonebot.rule import fullmatch rule = fullmatch((\\\"ping\\\", \\\"pong\\\"), ignorecase=False)\",\"也可以直接使用辅助函数新建一个响应器：\",\"from nonebot import on_fullmatch matcher = on_fullmatch((\\\"ping\\\", \\\"pong\\\"), ignorecase=False)\"]},\"608\":{\"h\":\"\",\"t\":[\"keyword 响应规则用于匹配消息纯文本部分是否包含指定字符串（或一系列字符串）。\",\"例如，我们可以创建一个匹配消息中包含 hello 或者 hi 的规则：\",\"from nonebot.rule import keyword rule = keyword(\\\"hello\\\", \\\"hi\\\")\",\"也可以直接使用辅助函数新建一个响应器：\",\"from nonebot import on_keyword matcher = on_keyword({\\\"hello\\\", \\\"hi\\\"})\"]},\"609\":{\"h\":\"\",\"t\":[\"command 是最常用的响应规则，它用于匹配消息是否为命令。它会根据配置中的 Command Start 和 Command Separator 来判断消息是否为命令。\",\"例如，当我们配置了 Command Start 为 /，Command Separator 为 . 时：\",\"from nonebot.rule import command # 匹配 \\\"/help\\\" 或者 \\\"/帮助\\\" 开头的消息 rule = command(\\\"help\\\", \\\"帮助\\\") # 匹配 \\\"/help.cmd\\\" 开头的消息 rule = command((\\\"help\\\", \\\"cmd\\\"))\",\"也可以直接使用辅助函数新建一个响应器：\",\"from nonebot import on_command matcher = on_command(\\\"help\\\", aliases={\\\"帮助\\\"})\",\"此外，command 响应规则默认允许消息命令与参数间不加空格，如果需要严格匹配命令与参数间的空白符，可以使用 command 函数的 force_whitespace 参数。force_whitespace 参数可以是 bool 类型或者具体的字符串，默认为 False。如果为 True，则命令与参数间必须有任意个数的空白符；如果为字符串，则命令与参数间必须有且与给定字符串一致的空白符。\",\"rule = command(\\\"help\\\", force_whitespace=True) rule = command(\\\"help\\\", force_whitespace=\\\" \\\")\",\"命令解析后的结果可以通过 Command、RawCommand、CommandArg、CommandStart、CommandWhitespace 依赖注入获取。\"]},\"610\":{\"h\":\"\",\"t\":[\"shell_command 响应规则用于匹配类 shell 命令形式的消息。它首先与 command 响应规则一样进行命令匹配，如果匹配成功，则会进行进一步的参数解析。参数解析采用 argparse 标准库进行，在此基础上添加了消息序列 Message 支持。\",\"例如，我们可以创建一个匹配 /cmd 命令并且带有 -v 选项与默认 -h 帮助选项的规则：\",\"from nonebot.rule import shell_command, ArgumentParser parser = ArgumentParser() parser.add_argument(\\\"-v\\\", \\\"--verbose\\\", action=\\\"store_true\\\") rule = shell_command(\\\"cmd\\\", parser=parser)\",\"更多关于 argparse 的使用方法请参考 argparse 文档。我们也可以选择不提供 parser 参数，这样 shell_command 将不会解析参数，但会提供参数列表 argv。\",\"直接使用辅助函数新建一个响应器：\",\"from nonebot import on_shell_command from nonebot.rule import ArgumentParser parser = ArgumentParser() parser.add_argument(\\\"-v\\\", \\\"--verbose\\\", action=\\\"store_true\\\") matcher = on_shell_command(\\\"cmd\\\", parser=parser)\",\"参数解析后的结果可以通过 ShellCommandArgv、ShellCommandArgs 依赖注入获取。\"]},\"611\":{\"h\":\"\",\"t\":[\"regex 响应规则用于匹配消息是否与指定正则表达式匹配。\",\"提示\",\"正则表达式匹配使用 search 而非 match，如需从头匹配请使用 r\\\"^xxx\\\" 模式来确保匹配开头。\",\"例如，我们可以创建一个匹配消息中包含字母并且忽略大小写的规则：\",\"from nonebot.rule import regex rule = regex(r\\\"[a-z]+\\\", flags=re.IGNORECASE)\",\"也可以直接使用辅助函数新建一个响应器：\",\"from nonebot import on_regex matcher = on_regex(r\\\"[a-z]+\\\", flags=re.IGNORECASE)\",\"正则匹配后的结果可以通过 RegexStr、RegexGroup、RegexDict 依赖注入获取。\"]},\"612\":{\"h\":\"\",\"t\":[\"to_me 响应规则用于匹配事件是否与机器人相关。\",\"例如：\",\"from nonebot.rule import to_me rule = to_me()\"]},\"613\":{\"h\":\"\",\"t\":[\"is_type 响应规则用于匹配事件类型是否为指定类型（或者一系列类型）。\",\"例如，我们可以创建一个匹配 OneBot v11 私聊和群聊消息事件的规则：\",\"from nonebot.rule import is_type from nonebot.adapters.onebot.v11 import PrivateMessageEvent, GroupMessageEvent rule = is_type(PrivateMessageEvent, GroupMessageEvent)\"]},\"614\":{\"h\":\"响应器组\",\"t\":[\"为了更方便的管理一系列功能相近的响应器，NoneBot 提供了两种响应器组，它们可以帮助我们进行响应器的统一管理。\"]},\"615\":{\"h\":\"\",\"t\":[\"CommandGroup 可以用于管理一系列具有相同前置命令的子命令响应器。\",\"例如，我们创建 /cmd、/cmd.sub、/cmd.help 三个命令，他们具有相同的优先级：\",\"from nonebot import CommandGroup group = CommandGroup(\\\"cmd\\\", priority=10) cmd = group.command(tuple()) sub_cmd = group.command(\\\"sub\\\") help_cmd = group.command(\\\"help\\\")\",\"命令别名 aliases 默认不会添加 CommandGroup 设定的前缀，如果需要为 aliases 添加前缀，可以添加 prefix_aliases=True 参数:\",\"from nonebot import CommandGroup group = CommandGroup(\\\"cmd\\\", prefix_aliases=True) cmd = group.command(tuple()) help_cmd = group.command(\\\"help\\\", aliases={\\\"帮助\\\"})\",\"这样就能成功匹配 /cmd、/cmd.help、/cmd.帮助 命令。如果未设置，将默认匹配 /cmd、/cmd.help、/帮助 命令。\"]},\"616\":{\"h\":\"\",\"t\":[\"MatcherGroup 可以用于管理一系列具有相同属性的响应器。\",\"例如，我们创建一个具有相同响应规则的响应器组：\",\"from nonebot.rule import to_me from nonebot import MatcherGroup group = MatcherGroup(rule=to_me()) matcher1 = group.on_message() matcher2 = group.on_message()\"]},\"617\":{\"h\":\"第三方响应规则\"},\"618\":{\"h\":\"Alconna\",\"t\":[\"nonebot-plugin-alconna 是一类提供了拓展响应规则的插件。 该插件使用 Alconna 作为命令解析器， 是一个简单、灵活、高效的命令参数解析器, 并且不局限于解析命令式字符串。\",\"该插件提供了一类新的事件响应器辅助函数 on_alconna，以及 AlconnaResult 等依赖注入函数。\",\"基于 Alconna 的特性，该插件同时提供了一系列便捷的消息段标注。 标注可用于在 Alconna 中匹配消息中除 text 外的其他消息段，也可用于快速创建各适配器下的消息段。所有标注位于 nonebot_plugin_alconna.adapters 中。\",\"该插件同时通过提供 UniMessage (通用消息模型) 实现了跨平台接收和发送消息的功能。\",\"详情请阅读最佳实践中的 命令解析拓展 章节。\"]},\"619\":{\"h\":\"插件信息\",\"t\":[\"NoneBot 是一个插件化的框架，可以通过加载插件来扩展功能。同时，我们也可以通过 NoneBot 的插件系统来获取相关信息，例如插件的名称、使用方法，用于收集帮助信息等。下面我们将介绍如何为插件添加元数据，以及如何获取插件信息。\"]},\"620\":{\"h\":\"插件元数据\",\"t\":[\"在 NoneBot 中，插件 Plugin 对象中存储了插件系统所需要的一系列信息。包括插件的索引名称、插件模块、插件中的事件响应器、插件父子关系等。通常，只有插件开发者才需要关心这些信息，而插件使用者或者机器人用户想要看到的是插件使用方法等帮助信息。因此，我们可以为插件添加插件元数据 PluginMetadata，它允许插件开发者为插件添加一些额外的信息。这些信息编写于插件模块的顶层，可以直接通过源码查看，或者通过 NoneBot 插件系统获取收集到的信息，通过其他方式发送给机器人用户等。\",\"现在，假设我们有一个插件 example, 它的模块结构如下：\",\"📦 awesome-bot ├── 📂 awesome_bot │ └── 📂 plugins | └── 📂 example | ├── 📜 __init__.py | └── 📜 config.py ├── 📜 pyproject.toml └── 📜 README.md\",\"我们需要在插件顶层模块 example/__init__.py 中添加插件元数据，如下所示：\",\"from nonebot.plugin import PluginMetadata from .config import Config __plugin_meta__ = PluginMetadata( name=\\\"示例插件\\\", description=\\\"这是一个示例插件\\\", usage=\\\"没什么用\\\", type=\\\"application\\\", config=Config, extra={}, )\",\"我们可以看到，插件元数据 PluginMetadata 有三个基本属性：插件名称、插件描述、插件使用方法。除此之外，还有几个可选的属性（具体填写见发布插件章节）：\",\"type：插件类别，发布插件必填。当前有效类别有：library（为其他插件编写提供功能），application（向机器人用户提供功能）；\",\"homepage：插件项目主页，发布插件必填；\",\"config：插件的配置类，如无配置类可不填；\",\"supported_adapters：支持的适配器模块名集合，若插件可以保证兼容所有适配器（即仅使用基本适配器功能）可不填写；\",\"extra：一个字典，可以用于存储任意信息。其他插件可以通过约定 extra 字典的键名来达成收集某些特殊信息的目的。\",\"请注意，这里的插件名称是供使用者或机器人用户查看的，与插件索引名称无关。插件索引名称（插件模块名称）仅用于 NoneBot 插件系统内部索引。\"]},\"621\":{\"h\":\"获取插件信息\",\"t\":[\"NoneBot 提供了多种获取插件对象的方法，例如获取当前所有已导入的插件：\",\"import nonebot plugins: set[Plugin] = nonebot.get_loaded_plugins()\",\"也可以通过插件索引名称获取插件对象：\",\"import nonebot plugin: Plugin | None = nonebot.get_plugin(\\\"example\\\")\",\"或者通过模块路径获取插件对象：\",\"import nonebot plugin: Plugin | None = nonebot.get_plugin_by_module_name(\\\"awesome_bot.plugins.example\\\")\",\"如果需要获取所有当前声明的插件名称（可能还未加载），可以使用 get_available_plugin_names 函数：\",\"import nonebot plugin_names: set[str] = nonebot.get_available_plugin_names()\",\"插件对象 Plugin 中包含了多个属性：\",\"name：插件索引名称\",\"module：插件模块\",\"module_name：插件模块路径\",\"manager：插件管理器\",\"matcher：插件中定义的事件响应器\",\"parent_plugin：插件的父插件\",\"sub_plugins：插件的子插件集合\",\"metadata：插件元数据\",\"通过这些属性以及插件元数据，我们就可以收集所需要的插件信息了。\"]},\"622\":{\"h\":\"嵌套插件\",\"t\":[\"NoneBot 支持嵌套插件，即一个插件可以包含其他插件。通过这种方式，我们可以将一个大型插件拆分成多个功能子插件，使得插件更加清晰、易于维护。我们可以直接在插件中使用 NoneBot 加载插件的方法来加载子插件。\"]},\"623\":{\"h\":\"创建嵌套插件\",\"t\":[\"我们可以在使用 nb-cli 命令创建插件时，选择直接通过模板创建一个嵌套插件：\",\"$ nb plugin create [?] 插件名称: parent [?] 使用嵌套插件? (y/N) Y [?] 输出目录: awesome_bot/plugins\",\"或者使用 nb plugin create --sub-plugin 选项直接创建一个嵌套插件。\"]},\"624\":{\"h\":\"已有插件\",\"t\":[\"如果你已经有一个插件，想要在其中嵌套加载子插件，可以在插件的 __init__.py 中添加如下代码：\",\"import nonebot from pathlib import Path sub_plugins = nonebot.load_plugins( str(Path(__file__).parent.joinpath(\\\"plugins\\\").resolve()) )\",\"这样，parent 插件就会加载 parent/plugins 目录下的所有插件。NoneBot 会正确识别这些插件的父子关系，你可以在 parent 的插件信息中看到这些子插件的信息，也可以在子插件信息中看到它们的父插件信息。\"]},\"625\":{\"h\":\"跨插件访问\",\"t\":[\"NoneBot 插件化系统的设计使得插件之间可以功能独立、各司其职，我们可以更好地维护和扩展插件。但是，有时候我们可能需要在不同插件之间调用功能。NoneBot 生态中就有一类插件，它们专为其他插件提供功能支持，如：定时任务插件、数据存储插件等。这时候我们就需要在插件之间进行跨插件访问。\"]},\"626\":{\"h\":\"插件跟踪\",\"t\":[\"由于 NoneBot 插件系统通过 Import Hooks 的方式实现插件加载与跟踪管理，因此我们不能在 NoneBot 跟踪插件前进行模块 import，这会导致插件加载失败。即，我们不能在使用 NoneBot 提供的加载插件方法前，直接使用 import 语句导入插件。\",\"对于在项目目录下的插件，我们通常直接使用 load_from_toml 等方法一次性加载所有插件。由于这些插件已经被声明，即便插件导入顺序不同，NoneBot 也能正确跟踪插件。此时，我们不需要对跨插件访问进行特殊处理。但当我们使用了外部插件，如果没有事先声明或加载插件，NoneBot 并不会将其当作插件进行跟踪，可能会出现意料之外的错误出现。\",\"简单来说，我们必须在 import 外部插件之前，确保依赖的外部插件已经被声明或加载。\"]},\"627\":{\"h\":\"插件依赖声明\",\"t\":[\"NoneBot 提供了一种方法来确保我们依赖的插件已经被正确加载，即使用 require 函数。通过 require 函数，我们可以在当前插件中声明依赖的插件，NoneBot 会在加载当前插件时，检查依赖的插件是否已经被加载，如果没有，会尝试优先加载依赖的插件。\",\"假设我们有一个插件 a 依赖于插件 b，我们可以在插件 a 中使用 require 函数声明其依赖于插件 b：\",\"from nonebot import require require(\\\"b\\\") from b import some_function\",\"其中，require 函数的参数为插件索引名称或者外部插件的模块名称。在完成依赖声明后，我们可以在插件 a 中直接导入插件 b 所提供的功能。\"]},\"628\":{\"h\":\"添加路由\",\"t\":[\"在驱动器一节中，我们了解了驱动器的两种类型。既然驱动器可以作为服务端运行，那么我们就可以向驱动器添加路由规则，从而实现自定义的 API 接口等功能。在添加路由规则时，我们需要注意驱动器的类型，详情可以参考选择驱动器。\",\"NoneBot 中，我们可以通过两种途径向 ASGI 驱动器添加路由规则：\",\"通过 NoneBot 的兼容层建立路由规则。\",\"直接向 ASGI 应用添加路由规则。\",\"这两种途径各有优劣，前者可以在各种服务端型驱动器下运行，但并不能直接使用 ASGI 应用框架提供的特性与功能；后者直接使用 ASGI 应用，更自由、功能完整，但只能在特定类型驱动器下运行。\",\"在向驱动器添加路由规则时，我们需要注意驱动器是否为服务端类型，我们可以通过以下方式判断：\",\"from nonebot import get_driver from nonebot.drivers import ASGIMixin # highlight-next-line can_use = isinstance(get_driver(), ASGIMixin)\"]},\"629\":{\"h\":\"通过兼容层添加路由\",\"t\":[\"NoneBot 兼容层定义了两个数据类 HTTPServerSetup 和 WebSocketServerSetup，分别用于定义 HTTP 服务端和 WebSocket 服务端的路由规则。\"]},\"630\":{\"h\":\"HTTP 路由\",\"t\":[\"HTTPServerSetup 具有四个属性：\",\"path：路由路径，不支持特殊占位表达式。类型为 URL。\",\"method：请求方法。类型为 str。\",\"name：路由名称，不可重复。类型为 str。\",\"handle_func：路由处理函数。类型为 Callable[[Request], Awaitable[Response]]。\",\"例如，我们添加一个 /hello 的路由，当请求方法为 GET 时，返回 200 OK 以及返回体信息：\",\"from nonebot import get_driver from nonebot.drivers import URL, Request, Response, ASGIMixin, HTTPServerSetup async def hello(request: Request) -> Response: return Response(200, content=\\\"Hello, world!\\\") if isinstance((driver := get_driver()), ASGIMixin): driver.setup_http_server( HTTPServerSetup( path=URL(\\\"/hello\\\"), method=\\\"GET\\\", name=\\\"hello\\\", handle_func=hello, ) )\",\"对于 Request 和 Response 的详细信息，可以参考 API 文档。\"]},\"631\":{\"h\":\"WebSocket 路由\",\"t\":[\"WebSocketServerSetup 具有三个属性：\",\"path：路由路径，不支持特殊占位表达式。类型为 URL。\",\"name：路由名称，不可重复。类型为 str。\",\"handle_func：路由处理函数。类型为 Callable[[WebSocket], Awaitable[Any]]。\",\"例如，我们添加一个 /ws 的路由，发送所有接收到的数据：\",\"from nonebot import get_driver from nonebot.drivers import URL, ASGIMixin, WebSocket, WebSocketServerSetup async def ws_handler(ws: WebSocket): await ws.accept() try: while True: data = await ws.receive() await ws.send(data) except WebSocketClosed as e: # handle closed ... finally: with contextlib.suppress(Exception): await websocket.close() # do some cleanup if isinstance((driver := get_driver()), ASGIMixin): driver.setup_websocket_server( WebSocketServerSetup( path=URL(\\\"/ws\\\"), name=\\\"ws\\\", handle_func=ws_handler, ) )\",\"对于 WebSocket 的详细信息，可以参考 API 文档。\"]},\"632\":{\"h\":\"使用 ASGI 应用添加路由\"},\"633\":{\"h\":\"获取 ASGI 应用\",\"t\":[\"NoneBot 服务端类型的驱动器具有两个属性 server_app 和 asgi，分别对应驱动框架应用和 ASGI 应用。通常情况下，这两个应用是同一个对象。我们可以通过 get_app() 方法快速获取：\",\"import nonebot app = nonebot.get_app() asgi = nonebot.get_asgi()\"]},\"634\":{\"h\":\"添加路由规则\",\"t\":[\"在获取到了 ASGI 应用后，我们就可以直接使用 ASGI 应用框架提供的功能来添加路由规则了。这里我们以 FastAPI 为例，演示如何添加路由规则。\",\"在下面的代码中，我们添加了一个 GET 类型的 /api 路由，具体方法参考 FastAPI 文档。\",\"import nonebot from fastapi import FastAPI app: FastAPI = nonebot.get_app() @app.get(\\\"/api\\\") async def custom_api(): return {\\\"message\\\": \\\"Hello, world!\\\"}\"]},\"635\":{\"h\":\"钩子函数\",\"t\":[\"钩子编程（hooking），也称作“挂钩”，是计算机程序设计术语，指通过拦截软件模块间的函数调用、消息传递、事件传递来修改或扩展操作系统、应用程序或其他软件组件的行为的各种技术。处理被拦截的函数调用、事件、消息的代码，被称为钩子（hook）。\",\"在 NoneBot 中有一系列预定义的钩子函数，可以分为两类：全局钩子函数和事件处理钩子函数，这些钩子函数可以用装饰器的形式来使用。\"]},\"636\":{\"h\":\"全局钩子函数\",\"t\":[\"全局钩子函数是指 NoneBot 针对其本身运行过程的钩子函数。\",\"这些钩子函数是由驱动器来运行的，故需要先获得全局驱动器。\"]},\"637\":{\"h\":\"启动准备\",\"t\":[\"这个钩子函数会在 NoneBot 启动时运行。很多时候，我们并不希望在模块被导入时就执行一些耗时操作，如：连接数据库，这时候我们可以在这个钩子函数中进行这些操作。\",\"from nonebot import get_driver driver = get_driver() @driver.on_startup async def do_something(): pass\"]},\"638\":{\"h\":\"终止处理\",\"t\":[\"这个钩子函数会在 NoneBot 终止时运行。我们可以在这个钩子函数中进行一些清理工作，如：关闭数据库连接。\",\"from nonebot import get_driver driver = get_driver() @driver.on_shutdown async def do_something(): pass\"]},\"639\":{\"h\":\"Bot 连接处理\",\"t\":[\"这个钩子函数会在任何协议适配器连接 Bot 对象至 NoneBot 时运行。支持依赖注入，可以直接注入 Bot 对象。\",\"from nonebot import get_driver driver = get_driver() @driver.on_bot_connect async def do_something(bot: Bot): pass\"]},\"640\":{\"h\":\"Bot 断开处理\",\"t\":[\"这个钩子函数会在 Bot 断开与 NoneBot 的连接时运行。支持依赖注入，可以直接注入 Bot 对象。\",\"from nonebot import get_driver driver = get_driver() @driver.on_bot_disconnect async def do_something(bot: Bot): pass\"]},\"641\":{\"h\":\"事件处理钩子函数\",\"t\":[\"这些钩子函数指的是影响 NoneBot 进行事件处理的函数, 这些函数可以跟普通的事件处理函数一样接受相应的参数。\"]},\"642\":{\"h\":\"事件预处理\",\"t\":[\"这个钩子函数会在 NoneBot 接收到新的事件时运行。支持依赖注入，可以注入 Bot 对象、事件、会话状态。在这个钩子函数内抛出 nonebot.exception.IgnoredException 会使 NoneBot 忽略该事件。\",\"from nonebot.exception import IgnoredException from nonebot.message import event_preprocessor @event_preprocessor async def do_something(event: Event): if not event.is_tome(): raise IgnoredException(\\\"some reason\\\")\"]},\"643\":{\"h\":\"事件后处理\",\"t\":[\"这个钩子函数会在 NoneBot 处理事件完成后运行。支持依赖注入，可以注入 Bot 对象、事件、会话状态。\",\"from nonebot.message import event_postprocessor @event_postprocessor async def do_something(event: Event): pass\"]},\"644\":{\"h\":\"运行预处理\",\"t\":[\"这个钩子函数会在 NoneBot 运行事件响应器前运行。支持依赖注入，可以注入 Bot 对象、事件、事件响应器、会话状态。在这个钩子函数内抛出 nonebot.exception.IgnoredException 也会使 NoneBot 忽略本次运行。\",\"from nonebot.message import run_preprocessor from nonebot.exception import IgnoredException @run_preprocessor async def do_something(event: Event, matcher: Matcher): if not event.is_tome(): raise IgnoredException(\\\"some reason\\\")\"]},\"645\":{\"h\":\"运行后处理\",\"t\":[\"这个钩子函数会在 NoneBot 运行事件响应器后运行。支持依赖注入，可以注入 Bot 对象、事件、事件响应器、会话状态、运行中产生的异常。\",\"from nonebot.message import run_postprocessor @run_postprocessor async def do_something(event: Event, matcher: Matcher, exception: Optional[Exception]): pass\"]},\"646\":{\"h\":\"平台接口调用钩子\",\"t\":[\"这个钩子函数会在 Bot 对象调用平台接口时运行。在这个钩子函数中，我们可以通过引起 MockApiException 异常来阻止 Bot 对象调用平台接口并返回指定的结果。\",\"from nonebot.adapters import Bot from nonebot.exception import MockApiException @Bot.on_calling_api async def handle_api_call(bot: Bot, api: str, data: Dict[str, Any]): if api == \\\"send_msg\\\": raise MockApiException(result={\\\"message_id\\\": 123})\"]},\"647\":{\"h\":\"平台接口调用后钩子\",\"t\":[\"这个钩子函数会在 Bot 对象调用平台接口后运行。在这个钩子函数中，我们可以通过引起 MockApiException 异常来忽略平台接口返回的结果并返回指定的结果。\",\"from nonebot.adapters import Bot from nonebot.exception import MockApiException @Bot.on_called_api async def handle_api_result( bot: Bot, exception: Optional[Exception], api: str, data: Dict[str, Any], result: Any ): if not exception and api == \\\"send_msg\\\": raise MockApiException(result={**result, \\\"message_id\\\": 123})\"]},\"648\":{\"h\":\"会话更新\",\"t\":[\"在 NoneBot 中，在某个事件响应器对事件响应后，即是进入了会话状态，会话状态会持续到整个事件响应流程结束。会话过程中，机器人可以与用户进行多次交互。每次需要等待用户事件时，NoneBot 将会复制一个新的临时事件响应器，并更新该事件响应器使其响应当前会话主体的消息，这个过程称为会话更新。\",\"会话更新分为两部分：更新事件响应器类型和更新事件触发权限。\"]},\"649\":{\"h\":\"更新事件响应器类型\",\"t\":[\"通常情况下，与机器人用户进行的会话都是通过消息事件进行的，因此会话更新后的默认响应事件类型为 message。如果希望接收一个特定类型的消息，比如 notice 等，我们需要自定义响应事件类型更新函数。响应事件类型更新函数是一个 Dependent，可以使用依赖注入。\",\"foo = on_message() @foo.type_updater async def _() -> str: return \\\"notice\\\"\",\"在注册了上述响应事件类型更新函数后，当我们需要等待用户事件时，将只会响应 notice 类型的事件。如果希望在会话过程中的不同阶段响应不同类型的事件，我们就需要使用更复杂的逻辑来更新响应事件类型（如：根据会话状态），这里将不再展示。\"]},\"650\":{\"h\":\"更新事件触发权限\",\"t\":[\"会话通常是由机器人与用户进行的一对一交互，因此会话更新后的默认触发权限为当前事件的会话 ID。这个会话 ID 由协议适配器生成，通常由用户 ID 和群 ID 等组成。如果希望实现更复杂的会话功能（如：多用户同时参与的会话），我们需要自定义触发权限更新函数。触发权限更新函数是一个 Dependent，可以使用依赖注入。\",\"from nonebot.permission import User foo = on_message() @foo.permission_updater async def _(event: Event, matcher: Matcher) -> Permission: return Permission(User.from_event(event, perm=matcher.permission))\",\"上述权限更新函数是默认的权限更新函数，它将会话的触发权限更新为当前事件的会话 ID。如果我们希望响应多个用户的消息，我们可以如下修改：\",\"from nonebot.permission import USER foo = on_message() @foo.permission_updater async def _(matcher: Matcher) -> Permission: return USER(\\\"session1\\\", \\\"session2\\\", perm=matcher.permission)\",\"请注意，此处为全大写字母的 USER 权限，它可以匹配多个会话 ID。通过这种方式，我们可以实现多用户同时参与的会话。\",\"我们已经了解了如何控制会话的更新，相信你已经能够实现更复杂的会话功能了，例如多人小游戏等等。欢迎将你的作品分享到插件商店。\"]},\"651\":{\"h\":\"nonebot.compat\",\"t\":[\"本模块为 Pydantic 版本兼容层模块\",\"为兼容 Pydantic V1 与 V2 版本，定义了一系列兼容函数与类供使用。\"]},\"652\":{\"h\":\"\",\"t\":[\"类型: untyped\",\"说明: Alias of Ellipsis for compatibility with pydantic v1\"]},\"653\":{\"h\":\"\",\"t\":[\"说明: Pydantic Undefined object\"]},\"654\":{\"h\":\"\",\"t\":[\"说明: Pydantic Undefined type\"]},\"655\":{\"h\":\"\",\"t\":[\"类型: untyped\",\"说明: Default config for validations\"]},\"656\":{\"h\":\"\",\"t\":[\"说明: FieldInfo class with extra property for compatibility with pydantic v1\",\"参数\",\"default (Any)\",\"**kwargs (Any)\"]},\"657\":{\"h\":\"\",\"t\":[\"类型: dict[str, Any]\",\"说明\",\"Extra data that is not part of the standard pydantic fields.\",\"For compatibility with pydantic v1.\"]},\"658\":{\"h\":\"\",\"t\":[\"说明: ModelField class for compatibility with pydantic v1\",\"参数\",\"auto\"]},\"659\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明: The name of the field.\"]},\"660\":{\"h\":\"\",\"t\":[\"类型: Any\",\"说明: The annotation of the field.\"]},\"661\":{\"h\":\"\",\"t\":[\"类型: FieldInfo\",\"说明: The FieldInfo of the field.\"]},\"662\":{\"h\":\"\",\"t\":[\"说明: Construct a ModelField from given infos.\",\"参数\",\"name (str)\",\"annotation (Any)\",\"field_info (FieldInfo | None)\",\"返回\",\"Self\"]},\"663\":{\"h\":\"\",\"t\":[\"说明: Get the default value of the field.\",\"参数\",\"empty\",\"返回\",\"Any\"]},\"664\":{\"h\":\"\",\"t\":[\"说明: Validate the value pass to the field.\",\"参数\",\"value (Any)\",\"返回\",\"Any\"]},\"665\":{\"h\":\"\",\"t\":[\"说明: Get FieldInfo init kwargs from a FieldInfo instance.\",\"参数\",\"field_info (BaseFieldInfo)\",\"返回\",\"dict[str, Any]\"]},\"666\":{\"h\":\"\",\"t\":[\"说明: Get field list of a model.\",\"参数\",\"model (type[BaseModel])\",\"返回\",\"list[ModelField]\"]},\"667\":{\"h\":\"\",\"t\":[\"说明: Get config of a model.\",\"参数\",\"model (type[BaseModel])\",\"返回\",\"Any\"]},\"668\":{\"h\":\"\",\"t\":[\"参数\",\"model (BaseModel)\",\"include (set[str] | None)\",\"exclude (set[str] | None)\",\"by_alias (bool)\",\"exclude_unset (bool)\",\"exclude_defaults (bool)\",\"exclude_none (bool)\",\"返回\",\"dict[str, Any]\"]},\"669\":{\"h\":\"\",\"t\":[\"说明: Validate data with given type.\",\"参数\",\"type_ (type[T])\",\"data (Any)\",\"返回\",\"T\"]},\"670\":{\"h\":\"\",\"t\":[\"说明: Validate JSON with given type.\",\"参数\",\"type_ (type[T])\",\"data (str | bytes)\",\"返回\",\"T\"]},\"671\":{\"h\":\"\",\"t\":[\"说明: Use pydantic v1 like validator generator in pydantic v2\",\"参数\",\"class_ (type[CVC])\",\"返回\",\"type[CVC]\"]},\"672\":{\"h\":\"nonebot.config\",\"t\":[\"本模块定义了 NoneBot 本身运行所需的配置项。\",\"NoneBot 使用 pydantic 以及python-dotenv 来读取配置。\",\"配置项需符合特殊格式或 json 序列化格式 详情见 pydantic Field Type 文档。\"]},\"673\":{\"h\":\"\",\"t\":[\"说明\",\"运行环境配置。大小写不敏感。\",\"将会从 环境变量 > dotenv 配置文件 的优先级读取环境信息。\",\"参数\",\"_env_file (DOTENV_TYPE | None)\",\"_env_file_encoding (str | None)\",\"_env_nested_delimiter (str | None)\",\"**values (Any)\"]},\"674\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明\",\"当前环境名。\",\"NoneBot 将从 .env.{environment} 文件中加载配置。\"]},\"675\":{\"h\":\"\",\"t\":[\"说明\",\"NoneBot 主要配置。大小写不敏感。\",\"除了 NoneBot 的配置项外，还可以自行添加配置项到 .env.{environment} 文件中。 这些配置将会在 json 反序列化后一起带入 Config 类中。\",\"配置方法参考: 配置\",\"参数\",\"_env_file (DOTENV_TYPE | None)\",\"_env_file_encoding (str | None)\",\"_env_nested_delimiter (str | None)\",\"**values (Any)\"]},\"676\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明\",\"NoneBot 运行所使用的 Driver 。继承自 Driver 。\",\"配置格式为 <module>[:<Driver>][+<module>[:<Mixin>]]*。\",\"~ 为 nonebot.drivers. 的缩写。\",\"配置方法参考: 配置驱动器\"]},\"677\":{\"h\":\"\",\"t\":[\"类型: IPvAnyAddress\",\"说明: NoneBot ReverseDriver 服务端监听的 IP/主机名。\"]},\"678\":{\"h\":\"\",\"t\":[\"类型: int\",\"说明: NoneBot ReverseDriver 服务端监听的端口。\"]},\"679\":{\"h\":\"\",\"t\":[\"类型: int | str\",\"说明\",\"NoneBot 日志输出等级，可以为 int 类型等级或等级名称。\",\"参考 记录日志，loguru 日志等级。\",\"提示\",\"日志等级名称应为大写，如 INFO。\",\"用法\",\"LOG_LEVEL=25 LOG_LEVEL=INFO\"]},\"680\":{\"h\":\"\",\"t\":[\"类型: float | None\",\"说明: API 请求超时时间，单位: 秒。\"]},\"681\":{\"h\":\"\",\"t\":[\"类型: set[str]\",\"说明: 机器人超级用户。\",\"用法\",\"SUPERUSERS=[\\\"12345789\\\"]\"]},\"682\":{\"h\":\"\",\"t\":[\"类型: set[str]\",\"说明: 机器人昵称。\"]},\"683\":{\"h\":\"\",\"t\":[\"类型: set[str]\",\"说明\",\"命令的起始标记，用于判断一条消息是不是命令。\",\"参考命令响应规则。\",\"用法\",\"COMMAND_START=[\\\"/\\\", \\\"\\\"]\"]},\"684\":{\"h\":\"\",\"t\":[\"类型: set[str]\",\"说明\",\"命令的分隔标记，用于将文本形式的命令切分为元组（实际的命令名）。\",\"参考命令响应规则。\",\"用法\",\"COMMAND_SEP=[\\\".\\\"]\"]},\"685\":{\"h\":\"\",\"t\":[\"类型: timedelta\",\"说明: 等待用户回复的超时时间。\",\"用法\",\"SESSION_EXPIRE_TIMEOUT=[-][DD]D[,][HH:MM:]SS[.ffffff] SESSION_EXPIRE_TIMEOUT=[±]P[DD]DT[HH]H[MM]M[SS]S # ISO 8601\"]},\"686\":{\"h\":\"nonebot.consts\",\"t\":[\"本模块包含了 NoneBot 事件处理过程中使用到的常量。\"]},\"687\":{\"h\":\"\",\"t\":[\"类型: Literal['_receive_{id}']\",\"说明:receive 存储 key\"]},\"688\":{\"h\":\"\",\"t\":[\"类型: Literal['_last_receive']\",\"说明:last_receive 存储 key\"]},\"689\":{\"h\":\"\",\"t\":[\"类型: Literal['{key}']\",\"说明:arg 存储 key\"]},\"690\":{\"h\":\"\",\"t\":[\"类型: Literal['_current_target']\",\"说明: 当前 reject 目标存储 key\"]},\"691\":{\"h\":\"\",\"t\":[\"类型: Literal['_next_target']\",\"说明: 下一个 reject 目标存储 key\"]},\"692\":{\"h\":\"\",\"t\":[\"类型: Literal['_pause_result']\",\"说明:pause prompt 发送结果存储 key\"]},\"693\":{\"h\":\"\",\"t\":[\"类型: Literal['_reject_{key}_result']\",\"说明:reject prompt 发送结果存储 key\"]},\"694\":{\"h\":\"\",\"t\":[\"类型: Literal['_prefix']\",\"说明: 命令前缀存储 key\"]},\"695\":{\"h\":\"\",\"t\":[\"类型: Literal['command']\",\"说明: 命令元组存储 key\"]},\"696\":{\"h\":\"\",\"t\":[\"类型: Literal['raw_command']\",\"说明: 命令文本存储 key\"]},\"697\":{\"h\":\"\",\"t\":[\"类型: Literal['command_arg']\",\"说明: 命令参数存储 key\"]},\"698\":{\"h\":\"\",\"t\":[\"类型: Literal['command_start']\",\"说明: 命令开头存储 key\"]},\"699\":{\"h\":\"\",\"t\":[\"类型: Literal['command_whitespace']\",\"说明: 命令与参数间空白符存储 key\"]},\"700\":{\"h\":\"\",\"t\":[\"类型: Literal['_args']\",\"说明: shell 命令 parse 后参数字典存储 key\"]},\"701\":{\"h\":\"\",\"t\":[\"类型: Literal['_argv']\",\"说明: shell 命令原始参数列表存储 key\"]},\"702\":{\"h\":\"\",\"t\":[\"类型: Literal['_matched']\",\"说明: 正则匹配结果存储 key\"]},\"703\":{\"h\":\"\",\"t\":[\"类型: Literal['_startswith']\",\"说明: 响应触发前缀 key\"]},\"704\":{\"h\":\"\",\"t\":[\"类型: Literal['_endswith']\",\"说明: 响应触发后缀 key\"]},\"705\":{\"h\":\"\",\"t\":[\"类型: Literal['_fullmatch']\",\"说明: 响应触发完整消息 key\"]},\"706\":{\"h\":\"\",\"t\":[\"类型: Literal['_keyword']\",\"说明: 响应触发关键字 key\"]},\"707\":{\"h\":\"nonebot.exception\",\"t\":[\"本模块包含了所有 NoneBot 运行时可能会抛出的异常。\",\"这些异常并非所有需要用户处理，在 NoneBot 内部运行时被捕获，并进行对应操作。\",\"NoneBotException ├── ParserExit ├── ProcessException | ├── IgnoredException | ├── SkippedException | | └── TypeMisMatch | ├── MockApiException | └── StopPropagation ├── MatcherException | ├── PausedException | ├── RejectedException | └── FinishedException ├── AdapterException | ├── NoLogException | ├── ApiNotAvailable | ├── NetworkError | └── ActionFailed └── DriverException └── WebSocketClosed\"]},\"708\":{\"h\":\"\",\"t\":[\"说明: 所有 NoneBot 发生的异常基类。\",\"参数\",\"auto\"]},\"709\":{\"h\":\"\",\"t\":[\"说明: 处理消息失败时返回的异常。\",\"参数\",\"auto\"]},\"710\":{\"h\":\"\",\"t\":[\"说明: 事件处理过程中发生的异常基类。\",\"参数\",\"auto\"]},\"711\":{\"h\":\"\",\"t\":[\"说明: 指示 NoneBot 应该忽略该事件。可由 PreProcessor 抛出。\",\"参数\",\"reason: 忽略事件的原因\"]},\"712\":{\"h\":\"\",\"t\":[\"说明\",\"指示 NoneBot 立即结束当前 Dependent 的运行。\",\"例如，可以在 Handler 中通过 Matcher.skip 抛出。\",\"参数\",\"auto\",\"用法\",\"def always_skip(): Matcher.skip() @matcher.handle() async def handler(dependency = Depends(always_skip)): # never run\"]},\"713\":{\"h\":\"\",\"t\":[\"说明: 当前 Handler 的参数类型不匹配。\",\"参数\",\"auto\"]},\"714\":{\"h\":\"\",\"t\":[\"说明: 指示 NoneBot 阻止本次 API 调用或修改本次调用返回值，并返回自定义内容。 可由 api hook 抛出。\",\"参数\",\"result: 返回的内容\"]},\"715\":{\"h\":\"\",\"t\":[\"说明\",\"指示 NoneBot 终止事件向下层传播。\",\"在 Matcher.block 为 True 或使用 Matcher.stop_propagation 方法时抛出。\",\"参数\",\"auto\",\"用法\",\"matcher = on_notice(block=True) # 或者 @matcher.handle() async def handler(matcher: Matcher): matcher.stop_propagation()\"]},\"716\":{\"h\":\"\",\"t\":[\"说明: 所有 Matcher 发生的异常基类。\",\"参数\",\"auto\"]},\"717\":{\"h\":\"\",\"t\":[\"说明\",\"指示 NoneBot 结束当前 Handler 并等待下一条消息后继续下一个 Handler。 可用于用户输入新信息。\",\"可以在 Handler 中通过 Matcher.pause 抛出。\",\"参数\",\"auto\",\"用法\",\"@matcher.handle() async def handler(): await matcher.pause(\\\"some message\\\")\"]},\"718\":{\"h\":\"\",\"t\":[\"说明\",\"指示 NoneBot 结束当前 Handler 并等待下一条消息后重新运行当前 Handler。 可用于用户重新输入。\",\"可以在 Handler 中通过 Matcher.reject 抛出。\",\"参数\",\"auto\",\"用法\",\"@matcher.handle() async def handler(): await matcher.reject(\\\"some message\\\")\"]},\"719\":{\"h\":\"\",\"t\":[\"说明\",\"指示 NoneBot 结束当前 Handler 且后续 Handler 不再被运行。可用于结束用户会话。\",\"可以在 Handler 中通过 Matcher.finish 抛出。\",\"参数\",\"auto\",\"用法\",\"@matcher.handle() async def handler(): await matcher.finish(\\\"some message\\\")\"]},\"720\":{\"h\":\"\",\"t\":[\"说明: 代表 Adapter 抛出的异常，所有的 Adapter 都要在内部继承自这个 Exception。\",\"参数\",\"adapter_name: 标识 adapter\"]},\"721\":{\"h\":\"\",\"t\":[\"说明\",\"指示 NoneBot 对当前 Event 进行处理但不显示 Log 信息。\",\"可在 Event.get_log_string 时抛出\",\"参数\",\"auto\"]},\"722\":{\"h\":\"\",\"t\":[\"说明: 在 API 连接不可用时抛出。\",\"参数\",\"auto\"]},\"723\":{\"h\":\"\",\"t\":[\"说明: 在网络出现问题时抛出， 如: API 请求地址不正确, API 请求无返回或返回状态非正常等。\",\"参数\",\"auto\"]},\"724\":{\"h\":\"\",\"t\":[\"说明: API 请求成功返回数据，但 API 操作失败。\",\"参数\",\"auto\"]},\"725\":{\"h\":\"\",\"t\":[\"说明:Driver 抛出的异常基类。\",\"参数\",\"auto\"]},\"726\":{\"h\":\"\",\"t\":[\"说明: WebSocket 连接已关闭。\",\"参数\",\"auto\"]},\"727\":{\"h\":\"nonebot\",\"t\":[\"本模块主要定义了 NoneBot 启动所需函数，供 bot 入口文件调用。\"]},\"728\":{\"h\":\"快捷导入\",\"t\":[\"为方便使用，本模块从子模块导入了部分内容，以下内容可以直接通过本模块导入:\",\"on => on\",\"on_metaevent => on_metaevent\",\"on_message => on_message\",\"on_notice => on_notice\",\"on_request => on_request\",\"on_startswith => on_startswith\",\"on_endswith => on_endswith\",\"on_fullmatch => on_fullmatch\",\"on_keyword => on_keyword\",\"on_command => on_command\",\"on_shell_command => on_shell_command\",\"on_regex => on_regex\",\"on_type => on_type\",\"CommandGroup => CommandGroup\",\"Matchergroup => MatcherGroup\",\"load_plugin => load_plugin\",\"load_plugins => load_plugins\",\"load_all_plugins => load_all_plugins\",\"load_from_json => load_from_json\",\"load_from_toml => load_from_toml\",\"load_builtin_plugin =>load_builtin_plugin\",\"load_builtin_plugins =>load_builtin_plugins\",\"get_plugin => get_plugin\",\"get_plugin_by_module_name =>get_plugin_by_module_name\",\"get_loaded_plugins =>get_loaded_plugins\",\"get_available_plugin_names =>get_available_plugin_names\",\"get_plugin_config => get_plugin_config\",\"require => require\"]},\"729\":{\"h\":\"\",\"t\":[\"说明\",\"获取全局 Driver 实例。\",\"可用于在计划任务的回调等情形中获取当前 Driver 实例。\",\"参数\",\"empty\",\"返回\",\"Driver: 全局 Driver 对象\",\"异常\",\"ValueError: 全局 Driver 对象尚未初始化 (nonebot.init 尚未调用)\",\"用法\",\"driver = nonebot.get_driver()\"]},\"730\":{\"h\":\"\",\"t\":[\"说明: 获取已注册的 Adapter 实例。\",\"重载\",\"1.(name) -> Adapter\",\"参数\",\"name (str): 适配器名称\",\"返回\",\"Adapter: 指定名称的 Adapter 对象\",\"2.(name) -> A\",\"参数\",\"name (type[A]): 适配器类型\",\"返回\",\"A: 指定类型的 Adapter 对象\",\"异常\",\"ValueError: 指定的 Adapter 未注册\",\"ValueError: 全局 Driver 对象尚未初始化 (nonebot.init 尚未调用)\",\"用法\",\"from nonebot.adapters.console import Adapter adapter = nonebot.get_adapter(Adapter)\"]},\"731\":{\"h\":\"\",\"t\":[\"说明: 获取所有已注册的 Adapter 实例。\",\"参数\",\"empty\",\"返回\",\"dict[str, Adapter]: 所有 Adapter 实例字典\",\"异常\",\"ValueError: 全局 Driver 对象尚未初始化 (nonebot.init 尚未调用)\",\"用法\",\"adapters = nonebot.get_adapters()\"]},\"732\":{\"h\":\"\",\"t\":[\"说明: 获取全局 ASGIMixin 对应的 Server App 对象。\",\"参数\",\"empty\",\"返回\",\"Any: Server App 对象\",\"异常\",\"AssertionError: 全局 Driver 对象不是 ASGIMixin 类型\",\"ValueError: 全局 Driver 对象尚未初始化 (nonebot.init 尚未调用)\",\"用法\",\"app = nonebot.get_app()\"]},\"733\":{\"h\":\"\",\"t\":[\"说明: 获取全局 ASGIMixin 对应的 ASGI 对象。\",\"参数\",\"empty\",\"返回\",\"Any: ASGI 对象\",\"异常\",\"AssertionError: 全局 Driver 对象不是 ASGIMixin 类型\",\"ValueError: 全局 Driver 对象尚未初始化 (nonebot.init 尚未调用)\",\"用法\",\"asgi = nonebot.get_asgi()\"]},\"734\":{\"h\":\"\",\"t\":[\"说明\",\"获取一个连接到 NoneBot 的 Bot 对象。\",\"当提供 self_id 时，此函数是 get_bots()[self_id] 的简写； 当不提供时，返回一个 Bot。\",\"参数\",\"self_id (str | None): 用来识别 Bot 的 Bot.self_id 属性\",\"返回\",\"Bot: Bot 对象\",\"异常\",\"KeyError: 对应 self_id 的 Bot 不存在\",\"ValueError: 没有传入 self_id 且没有 Bot 可用\",\"ValueError: 全局 Driver 对象尚未初始化 (nonebot.init 尚未调用)\",\"用法\",\"assert nonebot.get_bot(\\\"12345\\\") == nonebot.get_bots()[\\\"12345\\\"] another_unspecified_bot = nonebot.get_bot()\"]},\"735\":{\"h\":\"\",\"t\":[\"说明: 获取所有连接到 NoneBot 的 Bot 对象。\",\"参数\",\"empty\",\"返回\",\"dict[str, Bot]: 一个以 Bot.self_id 为键\",\"Bot 对象为值的字典\",\"异常\",\"ValueError: 全局 Driver 对象尚未初始化 (nonebot.init 尚未调用)\",\"用法\",\"bots = nonebot.get_bots()\"]},\"736\":{\"h\":\"\",\"t\":[\"说明\",\"初始化 NoneBot 以及 全局 Driver 对象。\",\"NoneBot 将会从 .env 文件中读取环境信息，并使用相应的 env 文件配置。\",\"也可以传入自定义的 _env_file 来指定 NoneBot 从该文件读取配置。\",\"参数\",\"_env_file (DOTENV_TYPE | None): 配置文件名，默认从 .env.{env_name} 中读取配置\",\"**kwargs (Any): 任意变量，将会存储到 Driver.config 对象里\",\"返回\",\"None\",\"用法\",\"nonebot.init(database=Database(...))\"]},\"737\":{\"h\":\"\",\"t\":[\"说明: 启动 NoneBot，即运行全局 Driver 对象。\",\"参数\",\"*args (Any): 传入 Driver.run 的位置参数\",\"**kwargs (Any): 传入 Driver.run 的命名参数\",\"返回\",\"None\",\"用法\",\"nonebot.run(host=\\\"127.0.0.1\\\", port=8080)\"]},\"738\":{\"h\":\"nonebot.log\",\"t\":[\"本模块定义了 NoneBot 的日志记录 Logger。\",\"NoneBot 使用 loguru 来记录日志信息。\",\"自定义 logger 请参考 自定义日志 以及 loguru 文档。\"]},\"739\":{\"h\":\"\",\"t\":[\"类型: Logger\",\"说明\",\"NoneBot 日志记录器对象。\",\"默认信息:\",\"格式: [%(asctime)s %(name)s] %(levelname)s: %(message)s\",\"等级: INFO ，根据 config.log_level 配置改变\",\"输出: 输出至 stdout\",\"用法\",\"from nonebot.log import logger\"]},\"740\":{\"h\":\"\",\"t\":[\"说明: logging 与 loguru 之间的桥梁，将 logging 的日志转发到 loguru。\",\"参数\",\"auto\"]},\"741\":{\"h\":\"\",\"t\":[\"参数\",\"record (logging.LogRecord)\",\"返回\",\"untyped\"]},\"742\":{\"h\":\"\",\"t\":[\"说明: 默认的日志过滤器，根据 config.log_level 配置改变日志等级。\",\"参数\",\"record (Record)\",\"返回\",\"untyped\"]},\"743\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明: 默认日志格式\"]},\"744\":{\"h\":\"nonebot.matcher\",\"t\":[\"本模块实现事件响应器的创建与运行，并提供一些快捷方法来帮助用户更好的与机器人进行对话。\"]},\"745\":{\"h\":\"\",\"t\":[\"类型: untyped\",\"说明: 默认存储器类型\"]},\"746\":{\"h\":\"\",\"t\":[\"说明: 事件响应器类\",\"参数\",\"empty\"]},\"747\":{\"h\":\"\",\"t\":[\"类型: ClassVar[str]\",\"说明: 事件响应器类型\"]},\"748\":{\"h\":\"\",\"t\":[\"类型: ClassVar[Rule]\",\"说明: 事件响应器匹配规则\"]},\"749\":{\"h\":\"\",\"t\":[\"类型: ClassVar[Permission]\",\"说明: 事件响应器触发权限\"]},\"750\":{\"h\":\"\",\"t\":[\"类型: ClassVar[list[Dependent[Any]]]\",\"说明: 事件响应器拥有的事件处理函数列表\"]},\"751\":{\"h\":\"\",\"t\":[\"类型: ClassVar[int]\",\"说明: 事件响应器优先级\"]},\"752\":{\"h\":\"\",\"t\":[\"类型: bool\",\"说明: 事件响应器是否阻止事件传播\"]},\"753\":{\"h\":\"\",\"t\":[\"类型: ClassVar[bool]\",\"说明: 事件响应器是否为临时\"]},\"754\":{\"h\":\"\",\"t\":[\"类型: ClassVar[datetime | None]\",\"说明: 事件响应器过期时间点\"]},\"755\":{\"h\":\"\",\"t\":[\"说明: 创建一个新的事件响应器，并存储至 matchers <#matchers>_\",\"参数\",\"type_ (str): 事件响应器类型，与 event.get_type() 一致时触发，空字符串表示任意\",\"rule (Rule | None): 匹配规则\",\"permission (Permission | None): 权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器，即触发一次后删除\",\"priority (int): 响应优先级\",\"block (bool): 是否阻止事件向更低优先级的响应器传播\",\"plugin (Plugin | None): Deprecated. 事件响应器所在插件\",\"module (ModuleType | None): Deprecated. 事件响应器所在模块\",\"source (MatcherSource | None): 事件响应器源代码上下文信息\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"default_state (T_State | None): 默认状态 state\",\"default_type_updater (T_TypeUpdater | Dependent[str] | None): 默认事件类型更新函数\",\"default_permission_updater (T_PermissionUpdater | Dependent[Permission] | None): 默认会话权限更新函数\",\"返回\",\"type[Matcher]: 新的事件响应器类\"]},\"756\":{\"h\":\"\",\"t\":[\"说明: 销毁当前的事件响应器\",\"参数\",\"empty\",\"返回\",\"None\"]},\"757\":{\"h\":\"\",\"t\":[\"说明: 检查是否满足触发权限\",\"参数\",\"bot (Bot): Bot 对象\",\"event (Event): 上报事件\",\"stack (AsyncExitStack | None): 异步上下文栈\",\"dependency_cache (T_DependencyCache | None): 依赖缓存\",\"返回\",\"bool: 是否满足权限\"]},\"758\":{\"h\":\"\",\"t\":[\"说明: 检查是否满足匹配规则\",\"参数\",\"bot (Bot): Bot 对象\",\"event (Event): 上报事件\",\"state (T_State): 当前状态\",\"stack (AsyncExitStack | None): 异步上下文栈\",\"dependency_cache (T_DependencyCache | None): 依赖缓存\",\"返回\",\"bool: 是否满足匹配规则\"]},\"759\":{\"h\":\"\",\"t\":[\"说明: 装饰一个函数来更改当前事件响应器的默认响应事件类型更新函数\",\"参数\",\"func (T_TypeUpdater): 响应事件类型更新函数\",\"返回\",\"T_TypeUpdater\"]},\"760\":{\"h\":\"\",\"t\":[\"说明: 装饰一个函数来更改当前事件响应器的默认会话权限更新函数\",\"参数\",\"func (T_PermissionUpdater): 会话权限更新函数\",\"返回\",\"T_PermissionUpdater\"]},\"761\":{\"h\":\"\",\"t\":[\"参数\",\"handler (T_Handler)\",\"parameterless (Iterable[Any] | None)\",\"返回\"]},\"762\":{\"h\":\"\",\"t\":[\"说明: 装饰一个函数来向事件响应器直接添加一个处理函数\",\"参数\",\"parameterless (Iterable[Any] | None): 非参数类型依赖列表\",\"返回\",\"(T_Handler) -> T_Handler\"]},\"763\":{\"h\":\"\",\"t\":[\"说明: 装饰一个函数来指示 NoneBot 在接收用户新的一条消息后继续运行该函数\",\"参数\",\"id (str): 消息 ID\",\"parameterless (Iterable[Any] | None): 非参数类型依赖列表\",\"返回\",\"(T_Handler) -> T_Handler\"]},\"764\":{\"h\":\"\",\"t\":[\"说明\",\"装饰一个函数来指示 NoneBot 获取一个参数 key\",\"当要获取的 key 不存在时接收用户新的一条消息再运行该函数， 如果 key 已存在则直接继续运行\",\"参数\",\"key (str): 参数名\",\"prompt (str | Message | MessageSegment | MessageTemplate | None): 在参数不存在时向用户发送的消息\",\"parameterless (Iterable[Any] | None): 非参数类型依赖列表\",\"返回\",\"(T_Handler) -> T_Handler\"]},\"765\":{\"h\":\"\",\"t\":[\"说明: 发送一条消息给当前交互用户\",\"参数\",\"message (str | Message | MessageSegment | MessageTemplate): 消息内容\",\"**kwargs (Any): Bot.send 的参数， 请参考对应 adapter 的 bot 对象 api\",\"返回\",\"Any\"]},\"766\":{\"h\":\"\",\"t\":[\"说明: 发送一条消息给当前交互用户并结束当前事件响应器\",\"参数\",\"message (str | Message | MessageSegment | MessageTemplate | None): 消息内容\",\"**kwargs: Bot.send 的参数， 请参考对应 adapter 的 bot 对象 api\",\"返回\",\"NoReturn\"]},\"767\":{\"h\":\"\",\"t\":[\"说明: 发送一条消息给当前交互用户并暂停事件响应器，在接收用户新的一条消息后继续下一个处理函数\",\"参数\",\"prompt (str | Message | MessageSegment | MessageTemplate | None): 消息内容\",\"**kwargs: Bot.send 的参数， 请参考对应 adapter 的 bot 对象 api\",\"返回\",\"NoReturn\"]},\"768\":{\"h\":\"\",\"t\":[\"说明: 最近使用 got / receive 接收的消息不符合预期， 发送一条消息给当前交互用户并将当前事件处理流程中断在当前位置，在接收用户新的一个事件后从头开始执行当前处理函数\",\"参数\",\"prompt (str | Message | MessageSegment | MessageTemplate | None): 消息内容\",\"**kwargs: Bot.send 的参数， 请参考对应 adapter 的 bot 对象 api\",\"返回\",\"NoReturn\"]},\"769\":{\"h\":\"\",\"t\":[\"说明: 最近使用 got 接收的消息不符合预期， 发送一条消息给当前交互用户并将当前事件处理流程中断在当前位置，在接收用户新的一条消息后从头开始执行当前处理函数\",\"参数\",\"key (str): 参数名\",\"prompt (str | Message | MessageSegment | MessageTemplate | None): 消息内容\",\"**kwargs: Bot.send 的参数， 请参考对应 adapter 的 bot 对象 api\",\"返回\",\"NoReturn\"]},\"770\":{\"h\":\"\",\"t\":[\"说明: 最近使用 receive 接收的消息不符合预期， 发送一条消息给当前交互用户并将当前事件处理流程中断在当前位置，在接收用户新的一个事件后从头开始执行当前处理函数\",\"参数\",\"id (str): 消息 id\",\"prompt (str | Message | MessageSegment | MessageTemplate | None): 消息内容\",\"**kwargs: Bot.send 的参数， 请参考对应 adapter 的 bot 对象 api\",\"返回\",\"NoReturn\"]},\"771\":{\"h\":\"\",\"t\":[\"说明\",\"跳过当前事件处理函数，继续下一个处理函数\",\"通常在事件处理函数的依赖中使用。\",\"参数\",\"empty\",\"返回\",\"NoReturn\"]},\"772\":{\"h\":\"\",\"t\":[\"说明\",\"获取一个 receive 事件\",\"如果没有找到对应的事件，返回 default 值\",\"重载\",\"1.(id) -> Event | None\",\"参数\",\"id (str)\",\"返回\",\"Event | None\",\"2.(id, default) -> Event | T\",\"参数\",\"id (str)\",\"default (T)\",\"返回\",\"Event | T\"]},\"773\":{\"h\":\"\",\"t\":[\"说明: 设置一个 receive 事件\",\"参数\",\"id (str)\",\"event (Event)\",\"返回\",\"None\"]},\"774\":{\"h\":\"\",\"t\":[\"说明\",\"获取最近一次 receive 事件\",\"如果没有事件，返回 default 值\",\"重载\",\"1.() -> Event | None\",\"参数\",\"empty\",\"返回\",\"Event | None\",\"2.(default) -> Event | T\",\"参数\",\"default (T)\",\"返回\",\"Event | T\"]},\"775\":{\"h\":\"\",\"t\":[\"说明\",\"获取一个 got 消息\",\"如果没有找到对应的消息，返回 default 值\",\"重载\",\"1.(key) -> Message | None\",\"参数\",\"key (str)\",\"返回\",\"Message | None\",\"2.(key, default) -> Message | T\",\"参数\",\"key (str)\",\"default (T)\",\"返回\",\"Message | T\"]},\"776\":{\"h\":\"\",\"t\":[\"说明: 设置一个 got 消息\",\"参数\",\"key (str)\",\"message (Message)\",\"返回\",\"None\"]},\"777\":{\"h\":\"\",\"t\":[\"参数\",\"target (str)\",\"cache (bool)\",\"返回\",\"None\"]},\"778\":{\"h\":\"\",\"t\":[\"重载\",\"1.() -> str | None\",\"参数\",\"empty\",\"返回\",\"str | None\",\"2.(default) -> str | T\",\"参数\",\"default (T)\",\"返回\",\"str | T\"]},\"779\":{\"h\":\"\",\"t\":[\"说明: 阻止事件传播\",\"参数\",\"empty\",\"返回\",\"untyped\"]},\"780\":{\"h\":\"\",\"t\":[\"参数\",\"bot (Bot)\",\"event (Event)\",\"stack (AsyncExitStack | None)\",\"dependency_cache (T_DependencyCache | None)\",\"返回\",\"str\"]},\"781\":{\"h\":\"\",\"t\":[\"参数\",\"bot (Bot)\",\"event (Event)\",\"stack (AsyncExitStack | None)\",\"dependency_cache (T_DependencyCache | None)\",\"返回\",\"Permission\"]},\"782\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"untyped\"]},\"783\":{\"h\":\"\",\"t\":[\"参数\",\"bot (Bot)\",\"event (Event)\",\"返回\",\"untyped\"]},\"784\":{\"h\":\"\",\"t\":[\"参数\",\"bot (Bot)\",\"event (Event)\",\"state (T_State)\",\"stack (AsyncExitStack | None)\",\"dependency_cache (T_DependencyCache | None)\",\"返回\",\"untyped\"]},\"785\":{\"h\":\"\",\"t\":[\"参数\",\"bot (Bot)\",\"event (Event)\",\"state (T_State)\",\"stack (AsyncExitStack | None)\",\"dependency_cache (T_DependencyCache | None)\",\"返回\",\"untyped\"]},\"786\":{\"h\":\"\",\"t\":[\"说明\",\"事件响应器管理器\",\"实现了常用字典操作，用于管理事件响应器。\",\"参数\",\"empty\"]},\"787\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"KeysView[int]\"]},\"788\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"ValuesView[list[type[Matcher]]]\"]},\"789\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"ItemsView[int, list[type[Matcher]]]\"]},\"790\":{\"h\":\"\",\"t\":[\"重载\",\"1.(key) -> list[type[Matcher]] | None\",\"参数\",\"key (int)\",\"返回\",\"list[type[Matcher]] | None\",\"2.(key, default) -> list[type[Matcher]] | T\",\"参数\",\"key (int)\",\"default (T)\",\"返回\",\"list[type[Matcher]] | T\"]},\"791\":{\"h\":\"\",\"t\":[\"参数\",\"key (int)\",\"返回\",\"list[type[Matcher]]\"]},\"792\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"tuple[int, list[type[Matcher]]]\"]},\"793\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"None\"]},\"794\":{\"h\":\"\",\"t\":[\"参数\",\"m (MutableMapping[int, list[type[Matcher]]])\",\"返回\",\"None\"]},\"795\":{\"h\":\"\",\"t\":[\"参数\",\"key (int)\",\"default (list[type[Matcher]])\",\"返回\",\"list[type[Matcher]]\"]},\"796\":{\"h\":\"\",\"t\":[\"说明: 设置事件响应器存储器\",\"参数\",\"provider_class (type[MatcherProvider]): 事件响应器存储器类\",\"返回\",\"None\"]},\"797\":{\"h\":\"\",\"t\":[\"说明: 事件响应器存储器基类\",\"参数\",\"matchers (Mapping[int, list[type[Matcher]]]): 当前存储器中已有的事件响应器\"]},\"798\":{\"h\":\"\",\"t\":[\"类型: untyped\"]},\"799\":{\"h\":\"nonebot.message\",\"t\":[\"本模块定义了事件处理主要流程。\",\"NoneBot 内部处理并按优先级分发事件给所有事件响应器，提供了多个插槽以进行事件的预处理等。\"]},\"800\":{\"h\":\"\",\"t\":[\"说明\",\"事件预处理。\",\"装饰一个函数，使它在每次接收到事件并分发给各响应器之前执行。\",\"参数\",\"func (T_EventPreProcessor)\",\"返回\",\"T_EventPreProcessor\"]},\"801\":{\"h\":\"\",\"t\":[\"说明\",\"事件后处理。\",\"装饰一个函数，使它在每次接收到事件并分发给各响应器之后执行。\",\"参数\",\"func (T_EventPostProcessor)\",\"返回\",\"T_EventPostProcessor\"]},\"802\":{\"h\":\"\",\"t\":[\"说明\",\"运行预处理。\",\"装饰一个函数，使它在每次事件响应器运行前执行。\",\"参数\",\"func (T_RunPreProcessor)\",\"返回\",\"T_RunPreProcessor\"]},\"803\":{\"h\":\"\",\"t\":[\"说明\",\"运行后处理。\",\"装饰一个函数，使它在每次事件响应器运行后执行。\",\"参数\",\"func (T_RunPostProcessor)\",\"返回\",\"T_RunPostProcessor\"]},\"804\":{\"h\":\"\",\"t\":[\"说明: 检查并运行事件响应器。\",\"参数\",\"Matcher (type[Matcher]): 事件响应器\",\"bot (Bot): Bot 对象\",\"event (Event): Event 对象\",\"state (T_State): 会话状态\",\"stack (AsyncExitStack | None): 异步上下文栈\",\"dependency_cache (T_DependencyCache | None): 依赖缓存\",\"返回\",\"None\"]},\"805\":{\"h\":\"\",\"t\":[\"说明: 处理一个事件。调用该函数以实现分发事件。\",\"参数\",\"bot (Bot): Bot 对象\",\"event (Event): Event 对象\",\"返回\",\"None\",\"用法\",\"driver.task_group.start_soon(handle_event, bot, event)\"]},\"806\":{\"h\":\"nonebot.params\",\"t\":[\"本模块定义了依赖注入的各类参数。\"]},\"807\":{\"h\":\"\",\"t\":[\"说明: Arg 参数消息\",\"参数\",\"key (str | None)\",\"返回\",\"Any\"]},\"808\":{\"h\":\"\",\"t\":[\"说明\",\"Arg 注入参数\",\"本注入解析事件响应器操作 got 所获取的参数。\",\"可以通过 Arg、ArgStr、ArgPlainText 等函数参数 key 指定获取的参数， 留空则会根据参数名称获取。\",\"参数\",\"*args\",\"key (str)\",\"type (Literal['message', 'str', 'plaintext', 'prompt'])\",\"**kwargs (Any)\"]},\"809\":{\"h\":\"\",\"t\":[\"说明: Arg 参数消息纯文本\",\"参数\",\"key (str | None)\",\"返回\",\"str\"]},\"810\":{\"h\":\"\",\"t\":[\"说明:arg prompt 发送结果\",\"参数\",\"key (str | None)\",\"返回\",\"Any\"]},\"811\":{\"h\":\"\",\"t\":[\"说明: Arg 参数消息文本\",\"参数\",\"key (str | None)\",\"返回\",\"str\"]},\"812\":{\"h\":\"\",\"t\":[\"说明\",\"注入参数。\",\"本注入解析所有类型为且仅为 Bot 及其子类或 None 的参数。\",\"为保证兼容性，本注入还会解析名为 bot 且没有类型注解的参数。\",\"参数\",\"*args\",\"checker (ModelField | None)\",\"**kwargs (Any)\"]},\"813\":{\"h\":\"\",\"t\":[\"说明\",\"默认值注入参数\",\"本注入解析所有剩余未能解析且具有默认值的参数。\",\"本注入参数应该具有最低优先级，因此应该在所有其他注入参数之后使用。\",\"参数\",\"*args\",\"validate (bool)\",\"**kwargs (Any)\"]},\"814\":{\"h\":\"\",\"t\":[\"说明\",\"子依赖注入参数。\",\"本注入解析所有子依赖注入，然后将它们的返回值作为参数值传递给父依赖。\",\"本注入应该具有最高优先级，因此应该在其他参数之前检查。\",\"参数\",\"*args\",\"dependent (Dependent[Any])\",\"use_cache (bool)\",\"**kwargs (Any)\"]},\"815\":{\"h\":\"\",\"t\":[\"说明: 子依赖装饰器\",\"参数\",\"dependency (T_Handler | None): 依赖函数。默认为参数的类型注释。\",\"use_cache (bool): 是否使用缓存。默认为 True。\",\"validate (bool | PydanticFieldInfo): 是否使用 Pydantic 类型校验。默认为 False。\",\"返回\",\"Any\",\"用法\",\"def depend_func() -> Any: return ... def depend_gen_func(): try: yield ... finally: ... async def handler( param_name: Any = Depends(depend_func), gen: Any = Depends(depend_gen_func), ): ...\"]},\"816\":{\"h\":\"\",\"t\":[\"说明\",\"注入参数\",\"本注入解析所有类型为且仅为 Event 及其子类或 None 的参数。\",\"为保证兼容性，本注入还会解析名为 event 且没有类型注解的参数。\",\"参数\",\"*args\",\"checker (ModelField | None)\",\"**kwargs (Any)\"]},\"817\":{\"h\":\"\",\"t\":[\"说明\",\"的异常注入参数\",\"本注入解析所有类型为 Exception 或 None 的参数。\",\"为保证兼容性，本注入还会解析名为 exception 且没有类型注解的参数。\",\"参数\",\"*args\",\"validate (bool)\",\"**kwargs (Any)\"]},\"818\":{\"h\":\"\",\"t\":[\"说明\",\"事件响应器实例注入参数\",\"本注入解析所有类型为且仅为 Matcher 及其子类或 None 的参数。\",\"为保证兼容性，本注入还会解析名为 matcher 且没有类型注解的参数。\",\"参数\",\"*args\",\"checker (ModelField | None)\",\"**kwargs (Any)\"]},\"819\":{\"h\":\"\",\"t\":[\"说明\",\"事件处理状态注入参数\",\"本注入解析所有类型为 T_State 的参数。\",\"为保证兼容性，本注入还会解析名为 state 且没有类型注解的参数。\",\"参数\",\"*args\",\"validate (bool)\",\"**kwargs (Any)\"]},\"820\":{\"h\":\"\",\"t\":[\"说明: 类型参数\",\"参数\",\"empty\",\"返回\",\"str\"]},\"821\":{\"h\":\"\",\"t\":[\"说明: 消息参数\",\"参数\",\"empty\",\"返回\",\"Any\"]},\"822\":{\"h\":\"\",\"t\":[\"说明: 纯文本消息参数\",\"参数\",\"empty\",\"返回\",\"str\"]},\"823\":{\"h\":\"\",\"t\":[\"说明:to_me 参数\",\"参数\",\"empty\",\"返回\",\"bool\"]},\"824\":{\"h\":\"\",\"t\":[\"说明: 消息命令元组\",\"参数\",\"empty\",\"返回\",\"tuple[str, ...]\"]},\"825\":{\"h\":\"\",\"t\":[\"说明: 消息命令文本\",\"参数\",\"empty\",\"返回\",\"str\"]},\"826\":{\"h\":\"\",\"t\":[\"说明: 消息命令参数\",\"参数\",\"empty\",\"返回\",\"Any\"]},\"827\":{\"h\":\"\",\"t\":[\"说明: 消息命令开头\",\"参数\",\"empty\",\"返回\",\"str\"]},\"828\":{\"h\":\"\",\"t\":[\"说明: 消息命令与参数之间的空白\",\"参数\",\"empty\",\"返回\",\"str\"]},\"829\":{\"h\":\"\",\"t\":[\"说明: shell 命令解析后的参数字典\",\"参数\",\"empty\",\"返回\",\"Any\"]},\"830\":{\"h\":\"\",\"t\":[\"说明: shell 命令原始参数列表\",\"参数\",\"empty\",\"返回\",\"Any\"]},\"831\":{\"h\":\"\",\"t\":[\"说明: 正则匹配结果\",\"参数\",\"empty\",\"返回\",\"Match[str]\"]},\"832\":{\"h\":\"\",\"t\":[\"说明: 正则匹配结果文本\",\"重载\",\"1.(group, /) -> str\",\"参数\",\"group (Literal[0])\",\"返回\",\"str\",\"2.(group, /) -> str | Any\",\"参数\",\"group (str | int)\",\"返回\",\"str | Any\",\"3.(group1, group2, /, *groups) -> tuple[str | Any, ...]\",\"参数\",\"group1 (str | int)\",\"group2 (str | int)\",\"*groups (str | int)\",\"返回\",\"tuple[str | Any, ...]\"]},\"833\":{\"h\":\"\",\"t\":[\"说明: 正则匹配结果 group 元组\",\"参数\",\"empty\",\"返回\",\"tuple[Any, ...]\"]},\"834\":{\"h\":\"\",\"t\":[\"说明: 正则匹配结果 group 字典\",\"参数\",\"empty\",\"返回\",\"dict[str, Any]\"]},\"835\":{\"h\":\"\",\"t\":[\"说明: 响应触发前缀\",\"参数\",\"empty\",\"返回\",\"str\"]},\"836\":{\"h\":\"\",\"t\":[\"说明: 响应触发后缀\",\"参数\",\"empty\",\"返回\",\"str\"]},\"837\":{\"h\":\"\",\"t\":[\"说明: 响应触发完整消息\",\"参数\",\"empty\",\"返回\",\"str\"]},\"838\":{\"h\":\"\",\"t\":[\"说明: 响应触发关键字\",\"参数\",\"empty\",\"返回\",\"str\"]},\"839\":{\"h\":\"\",\"t\":[\"说明:receive 事件参数\",\"参数\",\"id (str | None)\",\"default (Any)\",\"返回\",\"Any\"]},\"840\":{\"h\":\"\",\"t\":[\"说明:last_receive 事件参数\",\"参数\",\"default (Any)\",\"返回\",\"Any\"]},\"841\":{\"h\":\"\",\"t\":[\"说明:receive prompt 发送结果\",\"参数\",\"id (str | None)\",\"返回\",\"Any\"]},\"842\":{\"h\":\"\",\"t\":[\"说明:pause prompt 发送结果\",\"参数\",\"empty\",\"返回\",\"Any\"]},\"843\":{\"h\":\"nonebot.permission\",\"t\":[\"本模块是 Matcher.permission 的类型定义。\",\"每个事件响应器 拥有一个 Permission，其中是 PermissionChecker 的集合。 只要有一个 PermissionChecker 检查结果为 True 时就会继续运行。\"]},\"844\":{\"h\":\"\",\"t\":[\"说明\",\"匹配当前事件属于指定会话。\",\"如果 perm 中仅有 User 类型的权限检查函数，则会去除原有检查函数的会话 ID 限制。\",\"参数\",\"*users (str)\",\"perm (Permission | None): 需要同时满足的权限\",\"user: 会话白名单\",\"返回\",\"untyped\"]},\"845\":{\"h\":\"\",\"t\":[\"说明\",\"权限类。\",\"当事件传递时，在 Matcher 运行前进行检查。\",\"参数\",\"*checkers (T_PermissionChecker | Dependent[bool]): PermissionChecker\",\"用法\",\"Permission(async_function) | sync_function # 等价于 Permission(async_function, sync_function)\"]},\"846\":{\"h\":\"\",\"t\":[\"类型: set[Dependent[bool]]\",\"说明: 存储 PermissionChecker\"]},\"847\":{\"h\":\"\",\"t\":[\"说明: 检查是否满足某个权限。\",\"参数\",\"bot (Bot): Bot 对象\",\"event (Event): Event 对象\",\"stack (AsyncExitStack | None): 异步上下文栈\",\"dependency_cache (T_DependencyCache | None): 依赖缓存\",\"返回\",\"bool\"]},\"848\":{\"h\":\"\",\"t\":[\"说明: 检查当前事件是否属于指定会话。\",\"参数\",\"users (tuple[str, ...]): 会话 ID 元组\",\"perm (Permission | None): 需同时满足的权限\"]},\"849\":{\"h\":\"\",\"t\":[\"说明\",\"从事件中获取会话 ID。\",\"如果 perm 中仅有 User 类型的权限检查函数，则会去除原有的会话 ID 限制。\",\"参数\",\"event (Event): Event 对象\",\"perm (Permission | None): 需同时满足的权限\",\"返回\",\"Self\"]},\"850\":{\"h\":\"\",\"t\":[\"说明\",\"指定会话与权限。\",\"如果 perm 中仅有 User 类型的权限检查函数，则会去除原有的会话 ID 限制。\",\"参数\",\"*users (str): 会话白名单\",\"perm (Permission | None): 需同时满足的权限\",\"返回\",\"Self\"]},\"851\":{\"h\":\"\",\"t\":[\"说明: 检查是否为消息事件\",\"参数\",\"auto\"]},\"852\":{\"h\":\"\",\"t\":[\"说明: 检查是否为通知事件\",\"参数\",\"auto\"]},\"853\":{\"h\":\"\",\"t\":[\"说明: 检查是否为请求事件\",\"参数\",\"auto\"]},\"854\":{\"h\":\"\",\"t\":[\"说明: 检查是否为元事件\",\"参数\",\"auto\"]},\"855\":{\"h\":\"\",\"t\":[\"类型:Permission\",\"说明\",\"匹配任意 message 类型事件\",\"仅在需要同时捕获不同类型事件时使用，优先使用 message type 的 Matcher。\"]},\"856\":{\"h\":\"\",\"t\":[\"类型:Permission\",\"说明\",\"匹配任意 notice 类型事件\",\"仅在需要同时捕获不同类型事件时使用，优先使用 notice type 的 Matcher。\"]},\"857\":{\"h\":\"\",\"t\":[\"类型:Permission\",\"说明\",\"匹配任意 request 类型事件\",\"仅在需要同时捕获不同类型事件时使用，优先使用 request type 的 Matcher。\"]},\"858\":{\"h\":\"\",\"t\":[\"类型:Permission\",\"说明\",\"匹配任意 meta_event 类型事件\",\"仅在需要同时捕获不同类型事件时使用，优先使用 meta_event type 的 Matcher。\"]},\"859\":{\"h\":\"\",\"t\":[\"说明: 检查当前事件是否是消息事件且属于超级管理员\",\"参数\",\"auto\"]},\"860\":{\"h\":\"\",\"t\":[\"类型:Permission\",\"说明: 匹配任意超级用户事件\"]},\"861\":{\"h\":\"nonebot.rule\",\"t\":[\"本模块是 Matcher.rule 的类型定义。\",\"每个事件响应器拥有一个Rule，其中是 RuleChecker 的集合。 只有当所有 RuleChecker 检查结果为 True 时继续运行。\"]},\"862\":{\"h\":\"\",\"t\":[\"说明\",\"规则类。\",\"当事件传递时，在 Matcher 运行前进行检查。\",\"参数\",\"*checkers (T_RuleChecker | Dependent[bool]): RuleChecker\",\"用法\",\"Rule(async_function) & sync_function # 等价于 Rule(async_function, sync_function)\"]},\"863\":{\"h\":\"\",\"t\":[\"类型: set[Dependent[bool]]\",\"说明: 存储 RuleChecker\"]},\"864\":{\"h\":\"\",\"t\":[\"说明: 检查是否符合所有规则\",\"参数\",\"bot (Bot): Bot 对象\",\"event (Event): Event 对象\",\"state (T_State): 当前 State\",\"stack (AsyncExitStack | None): 异步上下文栈\",\"dependency_cache (T_DependencyCache | None): 依赖缓存\",\"返回\",\"bool\"]},\"865\":{\"h\":\"\",\"t\":[\"参数\",\"auto\"]},\"866\":{\"h\":\"\",\"t\":[\"说明: TRIE_VALUE(command_start, command)\",\"参数\",\"auto\"]},\"867\":{\"h\":\"\",\"t\":[\"说明: 检查消息纯文本是否以指定字符串开头。\",\"参数\",\"msg (tuple[str, ...]): 指定消息开头字符串元组\",\"ignorecase (bool): 是否忽略大小写\"]},\"868\":{\"h\":\"\",\"t\":[\"说明: 匹配消息纯文本开头。\",\"参数\",\"msg (str | tuple[str, ...]): 指定消息开头字符串元组\",\"ignorecase (bool): 是否忽略大小写\",\"返回\",\"Rule\"]},\"869\":{\"h\":\"\",\"t\":[\"说明: 检查消息纯文本是否以指定字符串结尾。\",\"参数\",\"msg (tuple[str, ...]): 指定消息结尾字符串元组\",\"ignorecase (bool): 是否忽略大小写\"]},\"870\":{\"h\":\"\",\"t\":[\"说明: 匹配消息纯文本结尾。\",\"参数\",\"msg (str | tuple[str, ...]): 指定消息开头字符串元组\",\"ignorecase (bool): 是否忽略大小写\",\"返回\",\"Rule\"]},\"871\":{\"h\":\"\",\"t\":[\"说明: 检查消息纯文本是否与指定字符串全匹配。\",\"参数\",\"msg (tuple[str, ...]): 指定消息全匹配字符串元组\",\"ignorecase (bool): 是否忽略大小写\"]},\"872\":{\"h\":\"\",\"t\":[\"说明: 完全匹配消息。\",\"参数\",\"msg (str | tuple[str, ...]): 指定消息全匹配字符串元组\",\"ignorecase (bool): 是否忽略大小写\",\"返回\",\"Rule\"]},\"873\":{\"h\":\"\",\"t\":[\"说明: 检查消息纯文本是否包含指定关键字。\",\"参数\",\"*keywords (str): 指定关键字元组\"]},\"874\":{\"h\":\"\",\"t\":[\"说明: 匹配消息纯文本关键词。\",\"参数\",\"*keywords (str): 指定关键字元组\",\"返回\",\"Rule\"]},\"875\":{\"h\":\"\",\"t\":[\"说明: 检查消息是否为指定命令。\",\"参数\",\"cmds (list[tuple[str, ...]]): 指定命令元组列表\",\"force_whitespace (str | bool | None): 是否强制命令后必须有指定空白符\"]},\"876\":{\"h\":\"\",\"t\":[\"说明\",\"匹配消息命令。\",\"根据配置里提供的 command_start,command_sep 判断消息是否为命令。\",\"可以通过 Command 获取匹配成功的命令（例: (\\\"test\\\",)）， 通过 RawCommand 获取匹配成功的原始命令文本（例: \\\"/test\\\"）， 通过 CommandArg 获取匹配成功的命令参数。\",\"参数\",\"*cmds (str | tuple[str, ...]): 命令文本或命令元组\",\"force_whitespace (str | bool | None): 是否强制命令后必须有指定空白符\",\"返回\",\"Rule\",\"用法\",\"使用默认 command_start, command_sep 配置情况下：\",\"命令 (\\\"test\\\",) 可以匹配: /test 开头的消息 命令 (\\\"test\\\", \\\"sub\\\") 可以匹配: /test.sub 开头的消息\",\"提示\",\"命令内容与后续消息间无需空格!\"]},\"877\":{\"h\":\"\",\"t\":[\"说明\",\"shell_like 命令参数解析器，解析出错时不会退出程序。\",\"支持 Message 富文本解析。\",\"参数\",\"auto\",\"用法\",\"用法与 argparse.ArgumentParser 相同， 参考文档: argparse\"]},\"878\":{\"h\":\"\",\"t\":[\"重载\",\"1.(args=None, namespace=None) -> tuple[Namespace, list[str | MessageSegment]]\",\"参数\",\"args (Sequence[str | MessageSegment] | None)\",\"namespace (None)\",\"返回\",\"tuple[Namespace, list[str | MessageSegment]]\",\"2.(args, namespace) -> tuple[T, list[str | MessageSegment]]\",\"参数\",\"args (Sequence[str | MessageSegment] | None)\",\"namespace (T)\",\"返回\",\"tuple[T, list[str | MessageSegment]]\",\"3.(*, namespace) -> tuple[T, list[str | MessageSegment]]\",\"参数\",\"namespace (T)\",\"返回\",\"tuple[T, list[str | MessageSegment]]\"]},\"879\":{\"h\":\"\",\"t\":[\"说明: 检查消息是否为指定 shell 命令。\",\"参数\",\"cmds (list[tuple[str, ...]]): 指定命令元组列表\",\"parser (ArgumentParser | None): 可选参数解析器\"]},\"880\":{\"h\":\"\",\"t\":[\"说明\",\"匹配 shell_like 形式的消息命令。\",\"根据配置里提供的 command_start,command_sep 判断消息是否为命令。\",\"可以通过 Command 获取匹配成功的命令 （例: (\\\"test\\\",)）， 通过 RawCommand 获取匹配成功的原始命令文本 （例: \\\"/test\\\"）， 通过 ShellCommandArgv 获取解析前的参数列表 （例: [\\\"arg\\\", \\\"-h\\\"]）， 通过 ShellCommandArgs 获取解析后的参数字典 （例: {\\\"arg\\\": \\\"arg\\\", \\\"h\\\": True}）。\",\"警告\",\"如果参数解析失败，则通过 ShellCommandArgs 获取的将是 ParserExit 异常。\",\"参数\",\"*cmds (str | tuple[str, ...]): 命令文本或命令元组\",\"parser (ArgumentParser | None): ArgumentParser 对象\",\"返回\",\"Rule\",\"用法\",\"使用默认 command_start, command_sep 配置，更多示例参考argparse 标准库文档。\",\"from nonebot.rule import ArgumentParser parser = ArgumentParser() parser.add_argument(\\\"-a\\\", action=\\\"store_true\\\") rule = shell_command(\\\"ls\\\", parser=parser)\",\"提示\",\"命令内容与后续消息间无需空格!\"]},\"881\":{\"h\":\"\",\"t\":[\"说明: 检查消息字符串是否符合指定正则表达式。\",\"参数\",\"regex (str): 正则表达式\",\"flags (int): 正则表达式标记\"]},\"882\":{\"h\":\"\",\"t\":[\"说明\",\"匹配符合正则表达式的消息字符串。\",\"可以通过 RegexStr 获取匹配成功的字符串， 通过 RegexGroup 获取匹配成功的 group 元组， 通过 RegexDict 获取匹配成功的 group 字典。\",\"参数\",\"regex (str): 正则表达式\",\"flags (int | re.RegexFlag): 正则表达式标记\",\"返回\",\"Rule\",\"提示\",\"正则表达式匹配使用 search 而非 match，如需从头匹配请使用 r\\\"^xxx\\\" 来确保匹配开头\",\"提示\",\"正则表达式匹配使用 EventMessage 的 str 字符串， 而非 EventMessage 的 PlainText 纯文本字符串\"]},\"883\":{\"h\":\"\",\"t\":[\"说明: 检查事件是否与机器人有关。\",\"参数\",\"auto\"]},\"884\":{\"h\":\"\",\"t\":[\"说明: 匹配与机器人有关的事件。\",\"参数\",\"empty\",\"返回\",\"Rule\"]},\"885\":{\"h\":\"\",\"t\":[\"说明: 检查事件类型是否为指定类型。\",\"参数\",\"*types (type[Event])\"]},\"886\":{\"h\":\"\",\"t\":[\"说明: 匹配事件类型。\",\"参数\",\"*types (type[Event]): 事件类型\",\"返回\",\"Rule\"]},\"887\":{\"h\":\"nonebot.typing\",\"t\":[\"本模块定义了 NoneBot 模块中共享的一些类型。\",\"使用 Python 的 Type Hint 语法， 参考 PEP 484,PEP 526 和typing。\"]},\"888\":{\"h\":\"\",\"t\":[\"说明: 标记一个方法为父类 interface 的 implement\",\"参数\",\"InterfaceClass (object)\",\"返回\",\"untyped\"]},\"889\":{\"h\":\"\",\"t\":[\"参数\",\"type_ (type[Any])\",\"返回\",\"bool\"]},\"890\":{\"h\":\"\",\"t\":[\"参数\",\"origin (type[Any] | None)\",\"返回\",\"bool\"]},\"891\":{\"h\":\"\",\"t\":[\"说明: 判断是否是 Literal 类型\",\"参数\",\"origin (type[Any] | None)\",\"返回\",\"bool\"]},\"892\":{\"h\":\"\",\"t\":[\"说明: 获取 Literal 类型包含的所有值\",\"参数\",\"type_ (type[Any])\",\"返回\",\"list[Any]\"]},\"893\":{\"h\":\"\",\"t\":[\"说明: 判断是否是 Annotated 类型\",\"参数\",\"origin (type[Any] | None)\",\"返回\",\"bool\"]},\"894\":{\"h\":\"\",\"t\":[\"说明: 判断是否是 None 类型\",\"参数\",\"type_ (type[Any])\",\"返回\",\"bool\"]},\"895\":{\"h\":\"\",\"t\":[\"参数\",\"ref (ForwardRef)\",\"globalns (dict[str, Any])\",\"localns (dict[str, Any])\",\"返回\",\"Any\"]},\"896\":{\"h\":\"\",\"t\":[\"参数\",\"auto\"]},\"897\":{\"h\":\"\",\"t\":[\"类型: dict[Any, Any]\",\"说明: 事件处理状态 State 类型\"]},\"898\":{\"h\":\"\",\"t\":[\"类型: _DependentCallable[Any]\",\"说明\",\"Bot 连接建立时钩子函数\",\"依赖参数:\",\"DependParam: 子依赖参数\",\"BotParam: Bot 对象\",\"DefaultParam: 带有默认值的参数\"]},\"899\":{\"h\":\"\",\"t\":[\"类型: _DependentCallable[Any]\",\"说明\",\"Bot 连接断开时钩子函数\",\"依赖参数:\",\"DependParam: 子依赖参数\",\"BotParam: Bot 对象\",\"DefaultParam: 带有默认值的参数\"]},\"900\":{\"h\":\"\",\"t\":[\"类型: (Bot, str, dict[str, Any]) -> Awaitable[Any]\",\"说明:bot.call_api 钩子函数\"]},\"901\":{\"h\":\"\",\"t\":[\"类型: (Bot, Exception | None, str, dict[str, Any], Any) -> Awaitable[Any]\",\"说明:bot.call_api 后执行的函数，参数分别为 bot, exception, api, data, result\"]},\"902\":{\"h\":\"\",\"t\":[\"类型: _DependentCallable[Any]\",\"说明\",\"事件预处理函数 EventPreProcessor 类型\",\"依赖参数:\",\"DependParam: 子依赖参数\",\"BotParam: Bot 对象\",\"EventParam: Event 对象\",\"StateParam: State 对象\",\"DefaultParam: 带有默认值的参数\"]},\"903\":{\"h\":\"\",\"t\":[\"类型: _DependentCallable[Any]\",\"说明\",\"事件后处理函数 EventPostProcessor 类型\",\"依赖参数:\",\"DependParam: 子依赖参数\",\"BotParam: Bot 对象\",\"EventParam: Event 对象\",\"StateParam: State 对象\",\"DefaultParam: 带有默认值的参数\"]},\"904\":{\"h\":\"\",\"t\":[\"类型: _DependentCallable[Any]\",\"说明\",\"事件响应器运行前预处理函数 RunPreProcessor 类型\",\"依赖参数:\",\"DependParam: 子依赖参数\",\"BotParam: Bot 对象\",\"EventParam: Event 对象\",\"StateParam: State 对象\",\"MatcherParam: Matcher 对象\",\"DefaultParam: 带有默认值的参数\"]},\"905\":{\"h\":\"\",\"t\":[\"类型: _DependentCallable[Any]\",\"说明\",\"事件响应器运行后后处理函数 RunPostProcessor 类型\",\"依赖参数:\",\"DependParam: 子依赖参数\",\"BotParam: Bot 对象\",\"EventParam: Event 对象\",\"StateParam: State 对象\",\"MatcherParam: Matcher 对象\",\"ExceptionParam: 异常对象（可能为 None）\",\"DefaultParam: 带有默认值的参数\"]},\"906\":{\"h\":\"\",\"t\":[\"类型: _DependentCallable[bool]\",\"说明\",\"RuleChecker 即判断是否响应事件的处理函数。\",\"依赖参数:\",\"DependParam: 子依赖参数\",\"BotParam: Bot 对象\",\"EventParam: Event 对象\",\"StateParam: State 对象\",\"DefaultParam: 带有默认值的参数\"]},\"907\":{\"h\":\"\",\"t\":[\"类型: _DependentCallable[bool]\",\"说明\",\"PermissionChecker 即判断事件是否满足权限的处理函数。\",\"依赖参数:\",\"DependParam: 子依赖参数\",\"BotParam: Bot 对象\",\"EventParam: Event 对象\",\"DefaultParam: 带有默认值的参数\"]},\"908\":{\"h\":\"\",\"t\":[\"类型: _DependentCallable[Any]\",\"说明: Handler 处理函数。\"]},\"909\":{\"h\":\"\",\"t\":[\"类型: _DependentCallable[str]\",\"说明\",\"TypeUpdater 在 Matcher.pause, Matcher.reject 时被运行，用于更新响应的事件类型。 默认会更新为 message。\",\"依赖参数:\",\"DependParam: 子依赖参数\",\"BotParam: Bot 对象\",\"EventParam: Event 对象\",\"StateParam: State 对象\",\"MatcherParam: Matcher 对象\",\"DefaultParam: 带有默认值的参数\"]},\"910\":{\"h\":\"\",\"t\":[\"类型: _DependentCallable[Permission]\",\"说明\",\"PermissionUpdater 在 Matcher.pause, Matcher.reject 时被运行，用于更新会话对象权限。 默认会更新为当前事件的触发对象。\",\"依赖参数:\",\"DependParam: 子依赖参数\",\"BotParam: Bot 对象\",\"EventParam: Event 对象\",\"StateParam: State 对象\",\"MatcherParam: Matcher 对象\",\"DefaultParam: 带有默认值的参数\"]},\"911\":{\"h\":\"\",\"t\":[\"类型: dict[_DependentCallable[Any], DependencyCache]\",\"说明: 依赖缓存, 用于存储依赖函数的返回值\"]},\"912\":{\"h\":\"nonebot.utils\",\"t\":[\"本模块包含了 NoneBot 的一些工具函数\"]},\"913\":{\"h\":\"\",\"t\":[\"说明\",\"用于记录带颜色日志时转义 <tag> 类型特殊标签\",\"参考: loguru color 标签\",\"参数\",\"s (str): 需要转义的字符串\",\"返回\",\"str\"]},\"914\":{\"h\":\"\",\"t\":[\"说明: 深度更新合并字典\",\"参数\",\"mapping (dict[K, Any])\",\"*updating_mappings (dict[K, Any])\",\"返回\",\"dict[K, Any]\"]},\"915\":{\"h\":\"\",\"t\":[\"说明: 检查 cls 是否是 class_or_tuple 中的一个类型子类并忽略类型错误。\",\"参数\",\"cls (Any)\",\"class_or_tuple (type[Any] | tuple[type[Any], ...])\",\"返回\",\"bool\"]},\"916\":{\"h\":\"\",\"t\":[\"说明\",\"检查 cls 是否是 class_or_tuple 中的一个类型子类。\",\"特别的：\",\"如果 cls 是 typing.Union 或 types.UnionType 类型， 则会检查其中的所有类型是否是 class_or_tuple 中一个类型的子类或 None。\",\"如果 cls 是 typing.Literal 类型， 则会检查其中的所有值是否是 class_or_tuple 中一个类型的实例。\",\"如果 cls 是 typing.TypeVar 类型， 则会检查其 __bound__ 或 __constraints__ 是否是 class_or_tuple 中一个类型的子类或 None。\",\"参数\",\"cls (Any)\",\"class_or_tuple (type[Any] | tuple[type[Any], ...])\",\"返回\",\"bool\"]},\"917\":{\"h\":\"\",\"t\":[\"说明: 检查 type_ 是否是复杂类型\",\"参数\",\"type_ (type[Any])\",\"返回\",\"bool\"]},\"918\":{\"h\":\"\",\"t\":[\"说明: 检查 call 是否是一个 callable 协程函数\",\"参数\",\"call ((...) -> Any)\",\"返回\",\"bool\"]},\"919\":{\"h\":\"\",\"t\":[\"说明: 检查 call 是否是一个生成器函数\",\"参数\",\"call ((...) -> Any)\",\"返回\",\"bool\"]},\"920\":{\"h\":\"\",\"t\":[\"说明: 检查 call 是否是一个异步生成器函数\",\"参数\",\"call ((...) -> Any)\",\"返回\",\"bool\"]},\"921\":{\"h\":\"\",\"t\":[\"说明: 一个用于包装 sync function 为 async function 的装饰器\",\"参数\",\"call ((P) -> R): 被装饰的同步函数\",\"返回\",\"(P) -> Coroutine[None, None, R]\"]},\"922\":{\"h\":\"\",\"t\":[\"说明: 一个用于包装 sync context manager 为 async context manager 的执行函数\",\"参数\",\"cm (AbstractContextManager[T])\",\"返回\",\"AsyncGenerator[T, None]\"]},\"923\":{\"h\":\"\",\"t\":[\"说明: 运行协程并当遇到指定异常时返回指定值。\",\"重载\",\"1.(coro, exc, return_on_err=None) -> T | None\",\"参数\",\"coro (Coroutine[Any, Any, T])\",\"exc (tuple[type[Exception], ...])\",\"return_on_err (None)\",\"返回\",\"T | None\",\"2.(coro, exc, return_on_err) -> T | R\",\"参数\",\"coro (Coroutine[Any, Any, T])\",\"exc (tuple[type[Exception], ...])\",\"return_on_err (R)\",\"返回\",\"T | R\",\"参数\",\"coro: 要运行的协程\",\"exc: 要捕获的异常\",\"return_on_err: 当发生异常时返回的值\",\"返回\",\"协程的返回值或发生异常时的指定值\"]},\"924\":{\"h\":\"\",\"t\":[\"说明: 运行协程并在取消时屏蔽取消异常。\",\"参数\",\"coro (Coroutine[Any, Any, T]): 要运行的协程\",\"返回\",\"T: 协程的返回值\"]},\"925\":{\"h\":\"\",\"t\":[\"参数\",\"exc_group (BaseExceptionGroup[E])\",\"返回\",\"Generator[E, None, None]\"]},\"926\":{\"h\":\"\",\"t\":[\"说明: 获取对象的名称\",\"参数\",\"obj (Any)\",\"返回\",\"str\"]},\"927\":{\"h\":\"\",\"t\":[\"说明: 转换路径为模块名\",\"参数\",\"path (Path)\",\"返回\",\"str\"]},\"928\":{\"h\":\"\",\"t\":[\"说明: 解析并导入点分表示法的对象\",\"参数\",\"obj_str (str)\",\"default_attr (str)\",\"default_prefix (str | None)\",\"返回\",\"Any\"]},\"929\":{\"h\":\"\",\"t\":[\"说明: 类属性装饰器\",\"参数\",\"func ((Any) -> T)\"]},\"930\":{\"h\":\"\",\"t\":[\"说明: 可以序列化 Message(List[Dataclass]) 的 JSONEncoder\",\"参数\",\"auto\"]},\"931\":{\"h\":\"\",\"t\":[\"参数\",\"o\",\"返回\",\"untyped\"]},\"932\":{\"h\":\"\",\"t\":[\"说明: 用于打印 adapter 的日志。\",\"参数\",\"logger_name (str): adapter 的名称\",\"返回\",\"untyped: 日志记录函数\",\"日志记录函数的参数:\",\"level: 日志等级\",\"message: 日志信息\",\"exception: 异常信息\"]},\"933\":{\"h\":\"日志\",\"t\":[\"无论是在开发还是在生产环境中，日志都是一个重要的功能，可以帮助我们了解运行状况、排查问题等。虽然我们可以使用 print 来将需要的信息输出到控制台，但是这种方式难以控制，而且不利于日志的归档、分析等。NoneBot 使用优秀的 Loguru 库来进行日志记录。\"]},\"934\":{\"h\":\"记录日志\",\"t\":[\"我们可以从 NoneBot 中导入 logger 对象，然后使用 logger 对象的方法来记录日志。\",\"from nonebot import logger logger.trace(\\\"This is a trace message\\\") logger.debug(\\\"This is a debug message\\\") logger.info(\\\"This is an info message\\\") logger.success(\\\"This is a success message\\\") logger.warning(\\\"This is a warning message\\\") logger.error(\\\"This is an error message\\\") logger.critical(\\\"This is a critical message\\\")\",\"我们仅需一行代码即可记录对应级别的日志。日志可以通过配置 LOG_LEVEL 配置项来过滤输出等级，控制台中仅会输出大于等于 LOG_LEVEL 的日志。默认的 LOG_LEVEL 为 INFO，即只会输出 INFO、SUCCESS、WARNING、ERROR、CRITICAL 级别的日志。\",\"如果需要记录 Exception traceback 日志，可以向 logger 添加 exception 选项：\",\"try: 1 / 0 except ZeroDivisionError: logger.opt(exception=True).error(\\\"ZeroDivisionError\\\")\",\"如果需要输出彩色日志，可以向 logger 添加 colors 选项：\",\"logger.opt(colors=True).warning(\\\"We got a <red>BIG</red> problem\\\")\",\"更多日志记录方法请参考 Loguru 文档。\"]},\"935\":{\"h\":\"自定义日志输出\",\"t\":[\"NoneBot 在启动时会添加一个默认的日志处理器，该处理器会将日志输出到stdout，并且根据 LOG_LEVEL 配置项过滤日志等级。\",\"默认的日志格式为：\",\"<g>{time:MM-DD HH:mm:ss}</g> [<lvl>{level}</lvl>] <c><u>{name}</u></c> | {message}\",\"我们可以从 nonebot.log 模块导入以使用 NoneBot 的默认格式和过滤器：\",\"from nonebot.log import default_format, default_filter\",\"如果需要自定义日志格式，我们需要移除 NoneBot 默认的日志处理器并添加新的日志处理器。例如，在机器人入口文件中 nonebot.init 之前添加以下内容：\",\"from nonebot.log import logger_id # 移除 NoneBot 默认的日志处理器 logger.remove(logger_id) # 添加新的日志处理器 logger.add( sys.stdout, level=0, diagnose=True, format=\\\"<g>{time:MM-DD HH:mm:ss}</g> [<lvl>{level}</lvl>] <c><u>{name}</u></c> | {message}\\\", filter=default_filter )\",\"如果想要输出日志到文件，我们可以使用 logger.add 方法添加文件处理器：\",\"logger.add(\\\"error.log\\\", level=\\\"ERROR\\\", format=default_format, rotation=\\\"1 week\\\")\",\"更多日志处理器的使用方法请参考 Loguru 文档。\"]},\"936\":{\"h\":\"重定向 logging 日志\",\"t\":[\"logging 是 Python 标准库中的日志模块，NoneBot 提供了一个 logging handler 用于将 logging 日志重定向到 loguru 处理。\",\"from nonebot.log import LoguruHandler # root logger 添加 LoguruHandler logging.basicConfig(handlers=[LoguruHandler()]) # 或者为其他 logging.Logger 添加 LoguruHandler logger.addHandler(LoguruHandler())\"]},\"937\":{\"h\":\"事件类型与重载\",\"t\":[\"在之前的示例中，我们已经了解了如何获取事件信息以及使用平台接口。但是，事件信息通常不仅仅包含消息这一个内容，还有其他平台提供的信息，例如消息发送时间、消息发送者等等。同时，在使用平台接口时，我们需要确保使用的平台接口与所要发送的平台类型一致，对不同类型的事件需要做出不同的处理。在本章节中，我们将介绍如何获取事件更多的信息以及根据事件类型进行不同的处理。\"]},\"938\":{\"h\":\"事件类型\",\"t\":[\"在 NoneBot 中，事件均是 nonebot.adapters.Event 基类的子类型，基类对一些必要的属性进行了抽象，子类型则根据不同的平台进行了实现。在自定义权限一节中，我们就使用了 Event 的抽象方法 get_user_id 来获取事件发送者 ID，这个方法由协议适配器进行了实现，返回机器人用户对应的平台 ID。更多的基类抽象方法可以在使用适配器中查看。\",\"既然事件是基类的子类型，我们实际可以获得的信息通常多于基类抽象方法所提供的。如果我们不满足于基类能获得的信息，我们可以小小的修改一下事件处理函数的事件参数类型注解，使其变为子类型，这样我们就可以通过协议适配器定义的子类型来获取更多的信息。我们以 Console 协议适配器为例：\",\"from nonebot.adapters.console import MessageEvent @weather.got(\\\"location\\\", prompt=\\\"请输入地名\\\") async def got_location(event: MessageEvent, location: str = ArgPlainText()): await weather.finish(f\\\"{event.time.strftime('%Y-%m-%d')} {location} 的天气是...\\\")\",\"在上面的代码中，我们获取了 Console 协议适配器的消息事件提供的发送时间 time 属性。\",\"注意\",\"如果基类就能满足你的需求，那么就不要修改事件参数类型注解，这样可以使你的代码更加通用，可以在更多平台上运行。如何根据不同平台事件类型进行不同的处理，我们将在重载一节中介绍。\"]},\"939\":{\"h\":\"重载\",\"t\":[\"我们在编写机器人时，常常会遇到这样一个问题：如何对私聊和群聊消息进行不同的处理？如何对不同平台的事件进行不同的处理？针对这些问题，NoneBot 提供了一个便捷而高效的解决方案 ── 重载。简单来说，依赖函数会根据其参数的类型注解来决定是否执行，忽略不符合其参数类型注解的情况。这样，我们就可以通过修改事件参数类型注解来实现对不同事件的处理，或者修改 Bot 参数类型注解来实现使用不同平台的接口。我们以 OneBot 协议适配器为例：\",\"from nonebot.adapters.onebot.v11 import PrivateMessageEvent, GroupMessageEvent @matcher.handle() async def handle_private(event: PrivateMessageEvent): await matcher.finish(\\\"私聊消息\\\") @matcher.handle() async def handle_group(event: GroupMessageEvent): await matcher.finish(\\\"群聊消息\\\")\",\"这样，机器人用户就会在私聊和群聊中分别收到不同的回复。同样的，我们也可以通过修改 Bot 参数类型注解来实现使用不同平台的接口：\",\"from nonebot.adapters.console import Bot as ConsoleBot from nonebot.adapters.onebot.v11 import Bot as OneBot @matcher.handle() async def handle_console(bot: ConsoleBot): await bot.bell() @matcher.handle() async def handle_onebot(bot: OneBot): await bot.send_group_message(group_id=123123, message=\\\"OneBot\\\")\",\"注意\",\"重载机制对所有的参数类型注解都有效，因此，依赖注入也可以使用这个特性来对不同的返回值进行处理。\",\"但 Bot、Event 和 Matcher 三者的参数类型注解具有最高检查优先级，如果三者任一类型注解不匹配，那么其他依赖注入将不会执行（如：Depends）。\",\"提示\",\"如何更好地编写一个跨平台的插件，我们将在最佳实践中介绍。\"]},\"940\":{\"h\":\"响应规则\",\"t\":[\"机器人在实际应用中，往往会接收到多种多样的事件类型，NoneBot 通过响应规则来控制事件的处理。\",\"在指南中，我们为 weather 命令添加了一个 rule=to_me() 参数，这个参数就是一个响应规则，确保只有在私聊或者 @bot 时才会响应。\",\"响应规则是一个 Rule 对象，它由一系列的 RuleChecker 函数组成，每个 RuleChecker 函数都会检查事件是否符合条件，如果所有的检查都通过，则事件会被处理。\"]},\"941\":{\"h\":\"RuleChecker\",\"t\":[\"RuleChecker 是一个返回值为 bool 类型的依赖函数，即 RuleChecker 支持依赖注入。我们可以根据上一节中添加的配置项，在 weather 插件目录中编写一个响应规则：\",\"from nonebot import get_plugin_config from .config import Config plugin_config = get_plugin_config(Config) async def is_enable() -> bool: return plugin_config.weather_plugin_enabled weather = on_command(\\\"天气\\\", rule=is_enable)\",\"在上面的代码中，我们定义了一个函数 is_enable，它会检查配置项 weather_plugin_enabled 是否为 True。这个函数 is_enable 即为一个 RuleChecker。\"]},\"942\":{\"h\":\"Rule\",\"t\":[\"Rule 是若干个 RuleChecker 的集合，它会并发调用每个 RuleChecker，只有当所有 RuleChecker 检查通过时匹配成功。例如：我们可以组合两个 RuleChecker，一个用于检查插件是否启用，一个用于检查用户是否在黑名单中：\",\"from nonebot.rule import Rule from nonebot.adapters import Event async def is_enable() -> bool: return plugin_config.weather_plugin_enabled async def is_blacklisted(event: Event) -> bool: return event.get_user_id() not in BLACKLIST rule = Rule(is_enable, is_blacklisted) weather = on_command(\\\"天气\\\", rule=rule)\"]},\"943\":{\"h\":\"合并响应规则\",\"t\":[\"在定义响应规则时，我们可以将规则进行细分，来更好地复用规则。而在使用时，我们需要合并多个规则。除了使用 Rule 对象来组合多个 RuleChecker 外，我们还可以对 Rule 对象进行合并。在原 weather 插件中，我们可以将 rule=to_me() 与 rule=is_enable 使用 & 运算符合并：\",\"from nonebot.rule import to_me from nonebot import get_plugin_config from .config import Config plugin_config = get_plugin_config(Config) async def is_enable() -> bool: return plugin_config.weather_plugin_enabled weather = on_command( \\\"天气\\\", rule=to_me() & is_enable, aliases={\\\"weather\\\", \\\"查天气\\\"}, priority=plugin_config.weather_command_priority, block=True, )\",\"这样，weather 命令就只会在插件启用且在私聊或者 @bot 时才会响应。\",\"合并响应规则可以有多种形式，例如：\",\"rule1 = Rule(foo_checker) rule2 = Rule(bar_checker) rule = rule1 & rule2 rule = rule1 & bar_checker rule = foo_checker & rule2\",\"同时，我们也无需担心合并了一个 None 值，Rule 会忽略 None 值。\",\"assert (rule & None) is rule\"]},\"944\":{\"h\":\"主动使用响应规则\",\"t\":[\"除了在事件响应器中使用响应规则外，我们也可以主动使用响应规则来判断事件是否符合条件。例如：\",\"rule = Rule(some_checker) result: bool = await rule(bot, event, state)\",\"我们只需要传入 Bot 对象、事件和会话状态，Rule 会并发调用所有 RuleChecker 进行检查，并返回结果。\"]},\"945\":{\"h\":\"内置响应规则\",\"t\":[\"NoneBot 内置了一些常用的响应规则，可以直接通过事件响应器辅助函数或者自行合并其他规则使用。内置响应规则列表可以参考事件响应器进阶\"]},\"946\":{\"h\":\"会话状态\",\"t\":[\"在事件处理流程中，和用户交互的过程即是会话。在会话中，我们可能需要记录一些信息，例如用户的重试次数等等，以便在会话中的不同阶段进行判断和处理。这些信息都可以存储于会话状态中。\",\"NoneBot 中的会话状态是一个字典，可以通过类型 T_State 来获取。字典内可以存储任意类型的数据，但是要注意的是，NoneBot 本身会在会话状态中存储一些信息，因此不要使用 NoneBot 使用的键名。\",\"from nonebot.typing import T_State @matcher.got(\\\"key\\\", prompt=\\\"请输入密码\\\") async def _(state: T_State, key: str = ArgPlainText()): if key != \\\"some password\\\": try_count = state.get(\\\"try_count\\\", 1) if try_count >= 3: await matcher.finish(\\\"密码错误次数过多\\\") else: state[\\\"try_count\\\"] = try_count + 1 await matcher.reject(\\\"密码错误，请重新输入\\\") await matcher.finish(\\\"密码正确\\\")\",\"会话状态的生命周期与事件处理流程相同，在期间的任何一个事件处理函数都可以进行读写。\",\"from nonebot.typing import T_State @matcher.handle() async def _(state: T_State): state[\\\"key\\\"] = \\\"value\\\" @matcher.handle() async def _(state: T_State): await matcher.finish(state[\\\"key\\\"])\",\"会话状态还可以用于发送动态消息，消息模板在发送时会使用会话状态字典进行渲染。消息模板的使用方法已经在消息处理中介绍过，这里不再赘述。\",\"from nonebot.typing import T_State from nonebot.adapters import MessageTemplate @matcher.handle() async def _(state: T_State): state[\\\"username\\\"] = \\\"user\\\" @matcher.got(\\\"password\\\", prompt=MessageTemplate(\\\"请输入 {username} 的密码\\\")) async def _(): await matcher.finish(MessageTemplate(\\\"密码为 {password}\\\"))\"]},\"947\":{\"h\":\"下一步\",\"t\":[\"至此，我们已经了解了 NoneBot 的大多数功能用法，相信你已经可以独自写出一个插件了。现在你可以选择：\",\"即刻开始插件编写！\",\"更深入地了解 NoneBot 的更多功能和原理！\"]},\"948\":{\"h\":\"数据存储\",\"t\":[\"在使用插件的过程中，难免会需要存储一些持久化数据，例如用户的个人信息、群组的信息等。除了使用数据库等第三方存储之外，还可以使用本地文件来自行管理数据。NoneBot 提供了 nonebot-plugin-localstore 插件，可用于获取正确的数据存储路径并写入数据。\"]},\"949\":{\"h\":\"安装插件\",\"t\":[\"在使用前请先安装 nonebot-plugin-localstore 插件至项目环境中，可参考获取商店插件来了解并选择安装插件的方式。如：\",\"在项目目录下执行以下命令：\",\"nb plugin install nonebot-plugin-localstore\"]},\"950\":{\"h\":\"使用插件\",\"t\":[\"nonebot-plugin-localstore 插件兼容 Windows、Linux 和 macOS 等操作系统，使用时无需关心操作系统的差异。同时插件提供 nb-cli 脚本，可以使用 nb localstore 命令来检查数据存储路径。\",\"在使用本插件前同样需要使用 require 方法进行加载并导入需要使用的方法，可参考 跨插件访问 一节进行了解，如：\",\"from nonebot import require require(\\\"nonebot_plugin_localstore\\\") import nonebot_plugin_localstore as store # 获取插件缓存目录 cache_dir = store.get_plugin_cache_dir() # 获取插件缓存文件 cache_file = store.get_plugin_cache_file(\\\"file_name\\\") # 获取插件数据目录 data_dir = store.get_plugin_data_dir() # 获取插件数据文件 data_file = store.get_plugin_data_file(\\\"file_name\\\") # 获取插件配置目录 config_dir = store.get_plugin_config_dir() # 获取插件配置文件 config_file = store.get_plugin_config_file(\\\"file_name\\\")\",\"警告\",\"在 Windows 和 macOS 系统下，插件的数据目录和配置目录是同一个目录，因此在使用时需要注意避免文件名冲突。\",\"插件提供的方法均返回一个 pathlib.Path 路径，可以参考 pathlib 文档来了解如何使用。常用的方法有：\",\"from pathlib import Path data_file = store.get_plugin_data_file(\\\"file_name\\\") # 写入文件内容 data_file.write_text(\\\"Hello World!\\\") # 读取文件内容 data = data_file.read_text()\",\"提示\",\"对于嵌套插件，子插件的存储目录将位于父插件存储目录下。\"]},\"951\":{\"h\":\"配置项\"},\"952\":{\"h\":\"localstore_use_cwd\",\"t\":[\"使用当前工作目录作为数据存储目录，以下数据目录配置项默认值将会对应变更\",\"默认值：False\",\"LOCALSTORE_USE_CWD=true\"]},\"953\":{\"h\":\"localstore_cache_dir\",\"t\":[\"自定义缓存目录\",\"默认值：\",\"当 localstore_use_cwd 为 True 时，缓存目录为 <current_working_directory>/cache，否则：\",\"macOS: ~/Library/Caches/nonebot2\",\"Unix: ~/.cache/nonebot2 (XDG default)\",\"Windows: C:\\\\Users\\\\<username>\\\\AppData\\\\Local\\\\nonebot2\\\\Cache\",\"LOCALSTORE_CACHE_DIR=/tmp/cache\"]},\"954\":{\"h\":\"localstore_data_dir\",\"t\":[\"自定义数据目录\",\"默认值：\",\"当 localstore_use_cwd 为 True 时，数据目录为 <current_working_directory>/data，否则：\",\"macOS: ~/Library/Application Support/nonebot2\",\"Unix: ~/.local/share/nonebot2 or in $XDG_DATA_HOME, if defined\",\"Win XP (not roaming): C:\\\\Documents and Settings\\\\<username>\\\\Application Data\\\\nonebot2\",\"Win 7 (not roaming): C:\\\\Users\\\\<username>\\\\AppData\\\\Local\\\\nonebot2\",\"LOCALSTORE_DATA_DIR=/tmp/data\"]},\"955\":{\"h\":\"localstore_config_dir\",\"t\":[\"自定义配置目录\",\"默认值：\",\"当 localstore_use_cwd 为 True 时，配置目录为 <current_working_directory>/config，否则：\",\"macOS: same as user_data_dir\",\"Unix: ~/.config/nonebot2\",\"Win XP (roaming): C:\\\\Documents and Settings\\\\<username>\\\\Local Settings\\\\Application Data\\\\nonebot2\",\"Win 7 (roaming): C:\\\\Users\\\\<username>\\\\AppData\\\\Roaming\\\\nonebot2\",\"LOCALSTORE_CONFIG_DIR=/tmp/config\"]},\"956\":{\"h\":\"localstore_plugin_cache_dir\",\"t\":[\"自定义插件缓存目录\",\"默认值：{}\",\"LOCALSTORE_PLUGIN_CACHE_DIR=' { \\\"plugin_id\\\": \\\"/tmp/plugin_cache\\\" } '\"]},\"957\":{\"h\":\"localstore_plugin_data_dir\",\"t\":[\"自定义插件数据目录\",\"默认值：{}\",\"LOCALSTORE_PLUGIN_DATA_DIR=' { \\\"plugin_id\\\": \\\"/tmp/plugin_data\\\" } '\"]},\"958\":{\"h\":\"localstore_plugin_config_dir\",\"t\":[\"自定义插件配置目录\",\"默认值：{}\",\"LOCALSTORE_PLUGIN_CONFIG_DIR=' { \\\"plugin_id\\\": \\\"/tmp/plugin_config\\\" } '\"]},\"959\":{\"h\":\"错误跟踪\",\"t\":[\"在应用实际运行过程中，可能会出现各种各样的错误。可能是由于代码逻辑错误，也可能是由于用户输入错误，甚至是由于第三方服务的错误。这些错误都会导致应用的运行出现问题，这时候就需要对错误进行跟踪，以便及时发现问题并进行修复。NoneBot 提供了 nonebot-plugin-sentry 插件，支持 sentry 平台，可以方便地进行错误跟踪。\"]},\"960\":{\"h\":\"安装插件\",\"t\":[\"在使用前请先安装 nonebot-plugin-sentry 插件至项目环境中，可参考获取商店插件来了解并选择安装插件的方式。如：\",\"在项目目录下执行以下命令：\",\"nb plugin install nonebot-plugin-sentry\"]},\"961\":{\"h\":\"使用插件\",\"t\":[\"在安装完成之后，仅需要对插件进行简单的配置即可使用。\"]},\"962\":{\"h\":\"获取 sentry DSN\",\"t\":[\"前往 sentry 平台，注册并创建一个新的项目，然后在项目设置中找到 Client Keys (DSN)，复制其中的 DSN 值。\"]},\"963\":{\"h\":\"配置插件\",\"t\":[\"注意\",\"错误跟踪通常在生产环境中使用，因此开发环境中 sentry_dsn 留空即会停用插件。\",\"在项目 dotenv 配置文件中添加以下配置即可使用：\",\"SENTRY_DSN=<your_sentry_dsn>\"]},\"964\":{\"h\":\"配置项\",\"t\":[\"配置项具体含义参考 Sentry Docs。\",\"sentry_dsn: str\",\"sentry_debug: bool = False\",\"sentry_release: str | None = None\",\"sentry_release: str | None = None\",\"sentry_environment: str | None = nonebot env\",\"sentry_server_name: str | None = None\",\"sentry_sample_rate: float = 1.\",\"sentry_max_breadcrumbs: int = 100\",\"sentry_attach_stacktrace: bool = False\",\"sentry_send_default_pii: bool = False\",\"sentry_in_app_include: List[str] = Field(default_factory=list)\",\"sentry_in_app_exclude: List[str] = Field(default_factory=list)\",\"sentry_request_bodies: str = \\\"medium\\\"\",\"sentry_with_locals: bool = True\",\"sentry_ca_certs: str | None = None\",\"sentry_before_send: Callable[[Any, Any], Any | None] | None = None\",\"sentry_before_breadcrumb: Callable[[Any, Any], Any | None] | None = None\",\"sentry_transport: Any | None = None\",\"sentry_http_proxy: str | None = None\",\"sentry_https_proxy: str | None = None\",\"sentry_shutdown_timeout: int = 2\"]},\"965\":{\"h\":\"定时任务\",\"t\":[\"APScheduler (Advanced Python Scheduler) 是一个 Python 第三方库，其强大的定时任务功能被广泛应用于各个场景。在 NoneBot 中，定时任务作为一个额外功能，依赖于基于 APScheduler 开发的 nonebot-plugin-apscheduler 插件进行支持。\"]},\"966\":{\"h\":\"安装插件\",\"t\":[\"在使用前请先安装 nonebot-plugin-apscheduler 插件至项目环境中，可参考获取商店插件来了解并选择安装插件的方式。如：\",\"在项目目录下执行以下命令：\",\"nb plugin install nonebot-plugin-apscheduler\"]},\"967\":{\"h\":\"使用插件\",\"t\":[\"nonebot-plugin-apscheduler 本质上是对 APScheduler 进行了封装以适用于 NoneBot 开发，因此其使用方式与 APScheduler 本身并无显著区别。在此我们会简要介绍其调用方法，更多的使用方面的功能请参考APScheduler 官方文档。\"]},\"968\":{\"h\":\"导入调度器\",\"t\":[\"由于 nonebot_plugin_apscheduler 作为插件，因此需要在使用前对其进行加载并导入其中的 scheduler 调度器来创建定时任务。使用 require 方法可轻松完成这一过程，可参考 跨插件访问 一节进行了解。\",\"from nonebot import require require(\\\"nonebot_plugin_apscheduler\\\") from nonebot_plugin_apscheduler import scheduler\"]},\"969\":{\"h\":\"添加定时任务\",\"t\":[\"在 APScheduler 官方文档 中提供了以下两种直接添加任务的方式：\",\"from nonebot import require require(\\\"nonebot_plugin_apscheduler\\\") from nonebot_plugin_apscheduler import scheduler # 基于装饰器的方式 @scheduler.scheduled_job(\\\"cron\\\", hour=\\\"*/2\\\", id=\\\"job_0\\\", args=[1], kwargs={arg2: 2}) async def run_every_2_hour(arg1: int, arg2: int): pass # 基于 add_job 方法的方式 def run_every_day(arg1: int, arg2: int): pass scheduler.add_job( run_every_day, \\\"interval\\\", days=1, id=\\\"job_1\\\", args=[1], kwargs={arg2: 2} )\",\"注意\",\"由于 APScheduler 的定时任务并不是由事件响应器所触发的事件，因此其任务函数无法同事件处理函数一样通过依赖注入获取上下文信息，也无法通过事件响应器对象的方法进行任何操作，因此我们需要使用调用平台 API的方式来获取信息或收发消息。\",\"相对于事件处理依赖而言，编写定时任务更像是编写普通的函数，需要我们自行获取信息以及发送信息，请不要将事件处理依赖的特殊语法用于定时任务！\",\"关于 APScheduler 的更多使用方法，可以参考 APScheduler 官方文档 进行了解。\"]},\"970\":{\"h\":\"配置项\"},\"971\":{\"h\":\"apscheduler_autostart\",\"t\":[\"类型: bool\",\"默认值: True\",\"是否自动启动 scheduler ，若不启动需要自行调用 scheduler.start()。\"]},\"972\":{\"h\":\"apscheduler_log_level\",\"t\":[\"类型: int\",\"默认值: 30\",\"apscheduler 输出的日志等级\",\"WARNING = 30 (默认)\",\"INFO = 20\",\"DEBUG = 10 (只有在开启 nonebot 的 debug 模式才会显示 debug 日志)\"]},\"973\":{\"h\":\"apscheduler_config\",\"t\":[\"类型: dict\",\"默认值: { \\\"apscheduler.timezone\\\": \\\"Asia/Shanghai\\\" }\",\"apscheduler 的相关配置。参考配置调度器, 配置参数\",\"配置需要包含 apscheduler. 作为前缀，例如 apscheduler.timezone。\"]},\"974\":{\"h\":\"参与讨论\",\"t\":[\"如果在安装或者开发 NoneBot 过程中遇到了任何问题，或者有新奇的点子，欢迎参与我们的社区讨论：\",\"点击下方链接前往 GitHub，前往 Issues 页面，在 New Issue Template 中选择 Question\",\"NoneBot：\",\"通过 QQ 群（点击下方链接直达）\",\"通过 QQ 频道\",\"通过 Discord 服务器（点击下方链接直达）\"]},\"975\":{\"h\":\"贡献指南\"},\"976\":{\"h\":\"Code of Conduct\",\"t\":[\"请参阅 Code of Conduct。\"]},\"977\":{\"h\":\"参与开发\",\"t\":[\"请参阅 Contributing。\"]},\"978\":{\"h\":\"鸣谢\",\"t\":[\"感谢以下开发者对 NoneBot2 作出的贡献：\"]},\"979\":{\"h\":\"编写适配器\",\"t\":[\"在编写适配器之前，我们需要先了解适配器的功能与组成，适配器通常由 Adapter、Bot、Event 和 Message 四个部分组成，在编写适配器时，我们需要继承 NoneBot 中的基类，并根据实际平台来编写每个部分功能。\"]},\"980\":{\"h\":\"组织结构\",\"t\":[\"NoneBot 适配器项目通常以 nonebot-adapter-{adapter-name} 作为项目名，并以命名空间包的形式编写，即在 nonebot/adapters/{adapter-name} 目录中编写实际代码，例如：\",\"📦 nonebot-adapter-{adapter-name} ├── 📂 nonebot │ ├── 📂 adapters │ │ ├── 📂 {adapter-name} │ │ │ ├── 📜 __init__.py │ │ │ ├── 📜 adapter.py │ │ │ ├── 📜 bot.py │ │ │ ├── 📜 config.py │ │ │ ├── 📜 event.py │ │ │ └── 📜 message.py ├── 📜 pyproject.toml └── 📜 README.md\",\"提示\",\"上述的项目结构仅作推荐，不做强制要求，保证实际可用性即可。\"]},\"981\":{\"h\":\"使用 NB-CLI 创建项目\",\"t\":[\"我们可以使用脚手架快速创建项目：\",\"nb adapter create\",\"按照指引，输入适配器名称以及存储位置，即可创建一个带有基本结构的适配器项目。\"]},\"982\":{\"h\":\"组成部分\",\"t\":[\"提示\",\"本章节的代码中提到的 Adapter、Bot、Event 和 Message 等，均为下文中适配器所编写的类，而非 NoneBot 中的基类。\"]},\"983\":{\"h\":\"Log\",\"t\":[\"适配器在处理时通常需要打印日志，但直接使用 NoneBot 的默认 logger 不方便区分适配器输出和其它日志。因此我们可以使用 NoneBot 提供的 logger_wrapper 方法，自定义一个 log 函数用于快捷打印适配器日志：\",\"from nonebot.utils import logger_wrapper log = logger_wrapper(\\\"your_adapter_name\\\")\",\"这个 log 函数会在默认 logger 中添加适配器名称前缀，它接收三个参数：日志等级、日志内容以及可选的异常，具体用法如下：\",\"from .log import log log(\\\"DEBUG\\\", \\\"A DEBUG log.\\\") log(\\\"INFO\\\", \\\"A INFO log.\\\") try: ... except Exception as e: log(\\\"ERROR\\\", \\\"something error.\\\", e)\"]},\"984\":{\"h\":\"Config\",\"t\":[\"通常适配器需要一些配置项，例如平台连接密钥等。适配器的配置方法与插件配置类似，例如：\",\"from pydantic import BaseModel class Config(BaseModel): xxx_id: str xxx_token: str\",\"配置项的读取将在下方 Adapter 中介绍。\"]},\"985\":{\"h\":\"Adapter\",\"t\":[\"Adapter 负责转换事件、调用接口，以及正确创建 Bot 对象并注册到 NoneBot 中。在编写平台相关内容之前，我们需要继承基类，并实现适配器的基本信息：\",\"from typing import Any from typing_extensions import override from nonebot.drivers import Driver from nonebot import get_plugin_config from nonebot.adapters import Adapter as BaseAdapter from .config import Config class Adapter(BaseAdapter): @override def __init__(self, driver: Driver, **kwargs: Any): super().__init__(driver, **kwargs) # 读取适配器所需的配置项 self.adapter_config: Config = get_plugin_config(Config) @classmethod @override def get_name(cls) -> str: \\\"\\\"\\\"适配器名称\\\"\\\"\\\" return \\\"your_adapter_name\\\"\"]},\"986\":{\"h\":\"与平台交互\",\"t\":[\"NoneBot 提供了多种 Driver 来帮助适配器进行网络通信，主要分为客户端和服务端两种类型。我们需要根据平台文档和特性选择合适的通信方式，并编写相关方法用于初始化适配器，与平台建立连接和进行交互：\"]},\"987\":{\"h\":\"客户端通信方式\",\"t\":[\"import asyncio from typing_extensions import override from nonebot import get_plugin_config from nonebot.exception import WebSocketClosed from nonebot.drivers import Request, WebSocketClientMixin class Adapter(BaseAdapter): @override def __init__(self, driver: Driver, **kwargs: Any): super().__init__(driver, **kwargs) self.adapter_config: Config = get_plugin_config(Config) self.task: Optional[asyncio.Task] = None # 存储 ws 任务 self.setup() def setup(self) -> None: if not isinstance(self.driver, WebSocketClientMixin): # 判断用户配置的Driver类型是否符合适配器要求，不符合时应抛出异常 raise RuntimeError( f\\\"Current driver {self.config.driver} doesn't support websocket client connections!\\\" f\\\"{self.get_name()} Adapter need a WebSocket Client Driver to work.\\\" ) # 在 NoneBot 启动和关闭时进行相关操作 self.driver.on_startup(self.startup) self.driver.on_shutdown(self.shutdown) async def startup(self) -> None: \\\"\\\"\\\"定义启动时的操作，例如和平台建立连接\\\"\\\"\\\" self.task = asyncio.create_task(self._forward_ws()) # 建立 ws 连接 async def _forward_ws(self): request = Request( method=\\\"GET\\\", url=\\\"your_platform_websocket_url\\\", headers={\\\"token\\\": \\\"...\\\"}, # 鉴权请求头 ) while True: try: async with self.websocket(request) as ws: try: # 处理 websocket ... except WebSocketClosed as e: log( \\\"ERROR\\\", \\\"<r><bg #f8bbd0>WebSocket Closed</bg #f8bbd0></r>\\\", e, ) except Exception as e: log( \\\"ERROR\\\", \\\"<r><bg #f8bbd0>Error while process data from \\\" \\\"websocket platform_websocket_url. \\\" \\\"Trying to reconnect...</bg #f8bbd0></r>\\\", e, ) finally: # 这里要断开 Bot 连接 except Exception as e: # 尝试重连 log( \\\"ERROR\\\", \\\"<r><bg #f8bbd0>Error while setup websocket to \\\" \\\"platform_websocket_url. Trying to reconnect...</bg #f8bbd0></r>\\\", e, ) await asyncio.sleep(3) # 重连间隔 async def shutdown(self) -> None: \\\"\\\"\\\"定义关闭时的操作，例如停止任务、断开连接\\\"\\\"\\\" # 断开 ws 连接 if self.task is not None and not self.task.done(): self.task.cancel()\"]},\"988\":{\"h\":\"服务端通信方式\",\"t\":[\"from nonebot import get_plugin_config from nonebot.drivers import ( Request, ASGIMixin, WebSocket, HTTPServerSetup, WebSocketServerSetup ) class Adapter(BaseAdapter): @override def __init__(self, driver: Driver, **kwargs: Any): super().__init__(driver, **kwargs) self.adapter_config: Config = get_plugin_config(Config) self.setup() def setup(self) -> None: if not isinstance(self.driver, ASGIMixin): raise RuntimeError( f\\\"Current driver {self.config.driver} doesn't support asgi server!\\\" f\\\"{self.get_name()} Adapter need a asgi server driver to work.\\\" ) # 建立服务端路由 # HTTP Webhook 路由 http_setup = HTTPServerSetup( URL(\\\"your_webhook_url\\\"), # 路由地址 \\\"POST\\\", # 接收的方法 \\\"WEBHOOK name\\\", # 路由名称 self._handle_http, # 处理函数 ) self.setup_http_server(http_setup) # 反向 Websocket 路由 ws_setup = WebSocketServerSetup( URL(\\\"your_websocket_url\\\"), # 路由地址 \\\"WebSocket name\\\", # 路由名称 self._handle_ws, # 处理函数 ) self.setup_websocket_server(ws_setup) async def _handle_http(self, request: Request) -> Response: \\\"\\\"\\\"HTTP 路由处理函数，只有一个类型为 Request 的参数，且返回值类型为 Response\\\"\\\"\\\" ... return Response( status_code=200, # 状态码 headers={\\\"something\\\": \\\"something\\\"}, # 响应头 content=\\\"xxx\\\", # 响应内容 ) async def _handle_ws(self, websocket: WebSocket) -> Any: \\\"\\\"\\\"WebSocket 路由处理函数，只有一个类型为 WebSocket 的参数\\\"\\\"\\\" ...\",\"更多通信交互方式可以参考以下适配器：\",\"OneBot - WebSocket 客户端、WebSocket 服务端、HTTP WEBHOOK、HTTP POST\",\"QQGuild - WebSocket 服务端\",\"Telegram - HTTP WEBHOOK\"]},\"989\":{\"h\":\"建立 Bot 连接\",\"t\":[\"在与平台建立连接后，我们需要将 Bot 实例化，并调用适配器提供的的 bot_connect 方法告知 NoneBot 建立了 Bot 连接。在与平台断开连接或出现某些异常进行重连时，我们需要调用 bot_disconnect 方法告知 NoneBot 断开了 Bot 连接。\",\"from .bot import Bot class Adapter(BaseAdapter): def _handle_connect(self): bot_id = ... # 通过配置或者平台 API 等方式，获取到 Bot 的 ID bot = Bot(self, self_id=bot_id) # 实例化 Bot self.bot_connect(bot) # 建立 Bot 连接 def _handle_disconnect(self): self.bot_disconnect(bot) # 断开 Bot 连接\"]},\"990\":{\"h\":\"转换 Event 事件\",\"t\":[\"在接收到来自平台的事件数据后，我们需要将其转为适配器的 Event，并调用 Bot 的 handle_event 方法来让 Bot 对事件进行处理：\",\"import asyncio from typing import Any, Dict from nonebot.compat import type_validate_python from .bot import Bot from .event import Event from .log import log class Adapter(BaseAdapter): @classmethod def payload_to_event(cls, payload: Dict[str, Any]) -> Event: \\\"\\\"\\\"根据平台事件的特性，转换平台 payload 为具体 Event Event 模型继承自 pydantic.BaseModel，具体请参考 pydantic 文档 \\\"\\\"\\\" # 做一层异常处理，以应对平台事件数据的变更 try: return type_validate_python(your_event_class, payload) except Exception as e: # 无法正常解析为具体 Event 时，给出日志提示 log( \\\"WARNING\\\", f\\\"Parse event error: {str(payload)}\\\", ) # 也可以尝试转为基础 Event 进行处理 return type_validate_python(Event, payload) async def _forward(self, bot: Bot): payload: Dict[str, Any] # 接收到的事件数据 event = self.payload_to_event(payload) # 让 bot 对事件进行处理 asyncio.create_task(bot.handle_event(event))\"]},\"991\":{\"h\":\"调用平台 API\",\"t\":[\"我们需要实现 Adapter 的 _call_api 方法，使开发者能够调用平台提供的 API。如果通过 WebSocket 通信可以通过 send 方法来发送数据，如果采用 HTTP 请求，则需要通过 NoneBot 提供的 Request 对象，调用 driver 的 request 方法来发送请求。\",\"from typing import Any from typing_extensions import override from nonebot.drivers import Request, WebSocket from .bot import Bot class Adapter(BaseAdapter): @override async def _call_api(self, bot: Bot, api: str, **data: Any) -> Any: log(\\\"DEBUG\\\", f\\\"Calling API <y>{api}</y>\\\") # 给予日志提示 platform_data = your_handle_data_method(data) # 自行将数据转为平台所需要的格式 # 采用 HTTP 请求的方式，需要构造一个 Request 对象 request = Request( method=\\\"GET\\\", # 请求方法 url=api, # 接口地址 headers=..., # 请求头，通常需要包含鉴权信息 params=platform_data, # 自行处理数据的传输形式 # json=platform_data, # data=platform_data, ) # 发送请求，返回结果 return await self.driver.request(request) # 采用 WebSocket 通信的方式，可以直接调用 send 方法发送数据 # 通过某种方式获取到 bot 对应的 websocket 对象 ws: WebSocket = your_get_websocket_method(bot.self_id) await ws.send_text(platform_data) # 发送 str 类型的数据 await ws.send_bytes(platform_data) # 发送 bytes 类型的数据 await ws.send(platform_data) # 是以上两种方式的合体 # 接收并返回结果，同样的，也有 str 和 bytes 的区别 return await ws.receive_text() return await ws.receive_bytes() return await ws.receive()\",\"调用平台 API 实现方式具体可以参考以下适配器：\",\"Websocket:\",\"OneBot V11\",\"OneBot V12\",\"HTTP:\",\"QQ 频道\",\"Telegram\",\"飞书\"]},\"992\":{\"h\":\"Bot\",\"t\":[\"Bot 是机器人开发者能够直接获取并使用的核心对象，负责存储平台机器人相关信息，并提供回复事件、调用 API 的上层方法。我们需要继承基类 Bot，并实现相关方法：\",\"from typing import TYPE_CHECKING, Any, Union from typing_extensions import override from nonebot.message import handle_event from nonebot.adapters import Bot as BaseBot from .event import Event from .message import Message, MessageSegment if TYPE_CHECKING: from .adapter import Adapter class Bot(BaseBot): \\\"\\\"\\\" your_adapter_name 协议 Bot 适配。 \\\"\\\"\\\" @override def __init__(self, adapter: Adapter, self_id: str, **kwargs: Any): super().__init__(adapter, self_id) self.adapter: Adapter = adapter # 一些有关 Bot 的信息也可以在此定义和存储 async def handle_event(self, event: Event): # 根据需要，对事件进行某些预处理，例如： # 检查事件是否和机器人有关操作，去除事件消息首尾的 @bot # 检查事件是否有回复消息，调用平台 API 获取原始消息的消息内容 ... # 调用 handle_event 让 NoneBot 对事件进行处理 await handle_event(self, event) @override async def send( self, event: Event, message: Union[str, Message, MessageSegment], **kwargs: Any, ) -> Any: # 根据平台实现 Bot 回复事件的方法 # 将消息处理为平台所需的格式后，调用发送消息接口进行发送，例如： data = message_to_platform_data(message) await self.send_message( data=data, ... )\"]},\"993\":{\"h\":\"Event\",\"t\":[\"Event 是 NoneBot 中的事件主体对象，所有平台消息在进入处理流程前需要转换为 NoneBot 事件。我们需要继承基类 Event，并实现相关方法：\",\"from typing_extensions import override from nonebot.compat import model_dump from nonebot.adapters import Event as BaseEvent class Event(BaseEvent): @override def get_event_name(self) -> str: # 返回事件的名称，用于日志打印 return \\\"event name\\\" @override def get_event_description(self) -> str: # 返回事件的描述，用于日志打印，请注意转义 loguru tag return escape_tag(repr(model_dump(self))) @override def get_message(self): # 获取事件消息的方法，根据事件具体实现，如果事件非消息类型事件，则抛出异常 raise ValueError(\\\"Event has no message!\\\") @override def get_user_id(self) -> str: # 获取用户 ID 的方法，根据事件具体实现，如果事件没有用户 ID，则抛出异常 raise ValueError(\\\"Event has no context!\\\") @override def get_session_id(self) -> str: # 获取事件会话 ID 的方法，根据事件具体实现，如果事件没有相关 ID，则抛出异常 raise ValueError(\\\"Event has no context!\\\") @override def is_tome(self) -> bool: # 判断事件是否和机器人有关 return False\",\"然后根据平台消息的类型，编写各种不同的事件，并且注意要根据事件类型实现 get_type 方法，具体请参考事件类型。消息类型事件还应重写 get_message 和 get_user_id 等方法，例如：\",\"from .message import Message class HeartbeatEvent(Event): \\\"\\\"\\\"心跳时间，通常为元事件\\\"\\\"\\\" @override def get_type(self) -> str: return \\\"meta_event\\\" class MessageEvent(Event): \\\"\\\"\\\"消息事件\\\"\\\"\\\" message_id: str user_id: str @override def get_type(self) -> str: return \\\"message\\\" @override def get_message(self) -> Message: # 返回事件消息对应的 NoneBot Message 对象 return self.message @override def get_user_id(self) -> str: return self.user_id class JoinRoomEvent(Event): \\\"\\\"\\\"加入房间事件，通常为通知事件\\\"\\\"\\\" user_id: str room_id: str @override def get_type(self) -> str: return \\\"notice\\\" class ApplyAddFriendEvent(Event): \\\"\\\"\\\"申请添加好友事件，通常为请求事件\\\"\\\"\\\" user_id: str @override def get_type(self) -> str: return \\\"request\\\"\"]},\"994\":{\"h\":\"Message\",\"t\":[\"Message 负责正确序列化消息，以便机器人插件处理。我们需要继承 MessageSegment 和 Message 两个类，并实现相关方法：\",\"from typing import Type, Iterable from typing_extensions import override from nonebot.utils import escape_tag from nonebot.adapters import Message as BaseMessage from nonebot.adapters import MessageSegment as BaseMessageSegment class MessageSegment(BaseMessageSegment[\\\"Message\\\"]): @classmethod @override def get_message_class(cls) -> Type[\\\"Message\\\"]: # 返回适配器的 Message 类型本身 return Message @override def __str__(self) -> str: # 返回该消息段的纯文本表现形式，通常在日志中展示 return \\\"text of MessageSegment\\\" @override def is_text(self) -> bool: # 判断该消息段是否为纯文本 return self.type == \\\"text\\\" class Message(BaseMessage[MessageSegment]): @classmethod @override def get_segment_class(cls) -> Type[MessageSegment]: # 返回适配器的 MessageSegment 类型本身 return MessageSegment @staticmethod @override def _construct(msg: str) -> Iterable[MessageSegment]: # 实现从字符串中构造消息数组，如无字符串嵌入格式可直接返回文本类型 MessageSegment ...\",\"然后根据平台具体的消息类型，来实现各种 MessageSegment 消息段，具体可以参考以下适配器：\",\"OneBot\",\"QQGuild\",\"Telegram\"]},\"995\":{\"h\":\"适配器测试\",\"t\":[\"关于适配器测试相关内容在这里不再展开，开发者可以根据需要进行合适的测试。这里为开发者提供几个常见问题的解决方法：\",\"在测试中无法导入 editable 模式安装的适配器代码。在 pytest 的 conftest.py 内添加如下代码：\",\"from pathlib import Path import nonebot.adapters nonebot.adapters.__path__.append( # type: ignore str((Path(__file__).parent.parent / \\\"nonebot\\\" / \\\"adapters\\\").resolve()) )\",\"需要计算适配器测试覆盖率，请在 pyproject.toml 中添加 pytest 配置：\",\"[tool.pytest.ini_options] addopts = \\\"--cov nonebot/adapters/{adapter-name} --cov-report term-missing\\\"\"]},\"996\":{\"h\":\"后续工作\",\"t\":[\"在完成适配器代码的编写后，如果想要将适配器发布到 NoneBot 商店，我们需要将适配器发布到 PyPI 中，然后前往商店页面，切换到适配器页签，点击发布适配器按钮，填写适配器相关信息并提交。\",\"另外建议编写适配器文档或者一些插件开发示例，以便其他开发者使用我们的适配器。\"]},\"997\":{\"h\":\"暑期 2021\",\"t\":[\"开源软件供应链点亮计划 - 暑期 2021 是中国科学院软件研究所与 openEuler 社区共同举办的一项面向高校学生的暑期活动，旨在鼓励在校学生积极参与开源软件的开发维护，促进优秀开源软件社区的蓬勃发展。关于具体的活动规划、报名方式，请查看该活动的 官网 和 帮助文档。\",\"NoneBot 社区有幸作为开源社区参与了本次活动，下面列出了目前我们已经发布的项目，欢迎感兴趣的同学在上面给出的活动官网报名，或通过 contact@nonebot.dev 联系我们。\"]},\"998\":{\"h\":\"NoneBot v1\"},\"999\":{\"h\":\"更新 NoneBot v1 文档中的“指南”部分\",\"t\":[\"由于 NoneBot v1 和 aiocqhttp 最初基于的 QQ 机器人平台不再提供服务，CQHTTP 接口也转型且改名为 OneBot 标准，目前 NoneBot v1 文档的“指南”部分和 aiocqhttp 文档有部分过时内容需要更新。我们希望将其中与旧的机器人平台相关的内容改为基于 go-cqhttp 或通用的 OneBot 表述，同时对 NoneBot v1 的 awesome-bot 示例做一次全面检查，修改其中可能已经不可用的部分。\",\"难度：低\",\"导师：@cleoold\",\"产出要求\",\"修改“指南”文档和 aiocqhttp 文档中与旧的 QQ 机器人平台相关的部分\",\"检查 awesome-bot 示例是否有已经过时/不可用的地方，并更新/修复\",\"修改“图灵机器人”案例，使用其它 AI 聊天 API 提供商（需先做简单调研）\",\"技术要求\",\"熟悉 Python 编程语言及 asyncio 机制\",\"了解 Git 基本用法\",\"了解聊天机器人基本开发过程\",\"了解 VuePress 更佳\"]},\"1000\":{\"h\":\"NoneBot v1 API 文档自动生成\",\"t\":[\"目前 NoneBot v1 的文档中“API”部分是手动编写的，在更新代码接口的同时需要手动更新文档，可能造成文档与代码不匹配，形成额外的维护成本。我们希望将 API 文档改为直接编写在 Python docstring 中，通过工具自动生成 API 文档。\",\"难度：中\",\"导师：@cleoold\",\"产出要求\",\"调研市面上常见的 Python API 文档生成工具\",\"在代码中补充 API 文档\",\"编写或应用开源工具自动生成 API 文档\",\"配置 GitHub Actions 或其它 CI 自动化构建和部署 API 文档\",\"技术要求\",\"熟悉 Python 编程语言及 asyncio 和 Type Hints\",\"了解 Git 基本用法\",\"了解 Sphinx 等文档生成工具更佳\",\"了解 GitHub Actions 等 CI 工具更佳\"]},\"1001\":{\"h\":\"NoneBot v2\"},\"1002\":{\"h\":\"NoneBot v2 自动化测试框架“NoneBug”\",\"t\":[\"在聊天机器人的开发过程中，一套自动化的测试机制是非常重要的，特别是对于 NoneBot 2 这类为大型机器人开发而设计的项目来说，需要手动测试每一个边际条件是非常痛苦的。我们希望能够开发一款基于 NoneBot 2 插件机制的自动化测试框架，为 NoneBot 2 用户提供一套易用便捷、高度灵活的自动化测试框架。\",\"难度：高\",\"导师：@yanyongyu\",\"产出要求\",\"调研现有的 Python 和其它语言集成测试框架\",\"设计 NoneBug 的用户 API 和实现方式\",\"实现 NoneBug 自动化测试框架\",\"编写详细的使用文档\",\"技术要求\",\"熟悉 Python 编程语言及 asyncio 和 Type Hints\",\"了解 Git 基本用法\",\"了解 NoneBot v2 的基本原理和使用方式\",\"了解主流的 Python 自动化测试框架\"]},\"1003\":{\"h\":\"NoneBot v2 Telegram 适配器\",\"t\":[\"目前 NoneBot v2 已支持 OneBot、Mirai HTTP API、钉钉协议，社区反馈有更多的平台需求，希望能在 NoneBot v2 获得更多的跨平台支持，提高机器人的便携性。同时，我们也希望随着新平台加入，提升现有 NoneBot v2 核心代码的平台通用性。Telegram 是一款较为广泛使用的安全即时聊天软件，同时其官方提供了丰富的聊天机器人 API，因此我们希望为 NoneBot v2 编写一个 Telegram 适配器来支持 Telegram 机器人的开发。\",\"难度：中\",\"导师：@yanyongyu\",\"产出要求\",\"调研 Telegram Bot API 以及 WebHook 等官方接口\",\"编写 Telegram 适配器并能够使用\",\"代码遵守项目 Contributing 规范\",\"技术要求\",\"熟悉 Python 编程语言及 asyncio 和 Type Hints\",\"了解 Git 基本用法\",\"了解 Web 开发相关知识\",\"了解 Sphinx 等文档生成工具更佳\"]},\"1004\":{\"h\":\"NoneBot v2 飞书适配器\",\"t\":[\"目前 NoneBot v2 已支持 OneBot、Mirai HTTP API、钉钉协议，社区反馈有更多的平台需求，希望能在 NoneBot v2 获得更多的跨平台支持，提高机器人的便携性。同时，我们也希望随着新平台加入，提升现有 NoneBot v2 核心代码的平台通用性。飞书是目前企业用户广泛使用的即时聊天和协作软件，其官方提供了丰富的聊天机器人 API，因此我们希望为 NoneBot v2 编写一个飞书适配器来支持飞书机器人的开发。\",\"难度：中\",\"导师：@yanyongyu\",\"产出要求\",\"调研飞书机器人 API 以及 WebHook 等官方接口\",\"编写飞书适配器并能够使用\",\"代码遵守项目 Contributing 规范\",\"技术要求\",\"熟悉 Python 编程语言及 asyncio 和 Type Hints\",\"了解 Git 基本用法\",\"了解 Web 开发相关知识\",\"了解 Sphinx 等文档生成工具更佳\"]},\"1005\":{\"h\":\"OneBot\"},\"1006\":{\"h\":\"设计 OneBot v12 接口标准\",\"t\":[\"目前的 OneBot 标准的 v11 版本仍然与 QQ 平台有较多耦合，我们希望在 v12 去掉与 QQ 耦合的历史包袱，形成一个通用的、可扩展的、易于使用的同时易于实现的聊天机器人接口标准。\",\"难度：中\",\"导师：@richardchien\",\"产出要求\",\"调研各聊天机器人平台的官方/非官方接口特点\",\"通用化 OneBot 核心 API，分离 QQ 特定的 API，去掉无用 API\",\"优化现有的通信、消息表示机制\",\"补充 QQ 特定的缺失 API\",\"文档需符合风格指南\",\"技术要求\",\"熟悉至少两个聊天平台的聊天机器人开发\",\"了解 Git 基本用法\",\"了解使用不同语言编写聊天机器人时的常用实践\",\"对文档的优雅性与美观性有追求更佳\"]},\"1007\":{\"h\":\"实现 Rust 版 libonebot\",\"t\":[\"目前最常用的 OneBot 实现包括 go-cqhttp、onebot-kotlin、node-onebot 等，这些实现都各自重复实现了 Web 通信、消息解析、配置读写等功能，当社区中的开发者想针对一个新的聊天平台实现 OneBot 时，他们往往同样需要再次实现类似逻辑。我们希望使用 Rust 编写一个 libonebot 模块，该模块实现所有 OneBot 实现所共享的功能，从而方便其他开发者们使用 Rust 快速编写具体的 OneBot 实现。同时，我们希望借此项目在聊天机器人社区中推广 Rust 编程语言。\",\"注：这里的逻辑是 libonebot + 针对某聊天平台的对接代码 = 某聊天平台的 OneBot 实现，libonebot 要做的是让 OneBot 实现的开发者只需编写针对特定聊天平台的对接代码，而无需关心 OneBot 标准定义的通信方式、消息格式等。\",\"难度：高\",\"导师：@richardchien\",\"产出要求\",\"实现所有 OneBot 实现所共享的功能，包括 Web 通信、消息解析、配置读写等\",\"充分考虑同时兼容 OneBot v11 和 v12 接口\",\"能够根据用户（OneBot 实现的开发者）所实现的接口自动实现类似 get_available_apis 等接口\",\"编写详细的使用文档\",\"如果可能，与 v12 设计项目联动，实现第一手 v12 支持\",\"技术要求\",\"熟悉聊天机器人开发\",\"熟悉 Rust Web 开发\"]},\"1008\":{\"h\":\"实现自选语言版 libonebot\",\"t\":[\"目前最常用的 OneBot 实现包括 go-cqhttp、onebot-kotlin、node-onebot 等，这些实现都各自重复实现了 Web 通信、消息解析、配置读写等功能，当社区中的开发者想针对一个新的聊天平台实现 OneBot 时，他们往往同样需要再次实现类似逻辑。我们希望使用 Python、Go、Kotlin、Node、PHP、C#.NET 等主流语言（任选一个）编写 libonebot 模块，该模块实现所有 OneBot 实现所共享的功能，从而方便其他开发者们使用对应语言快速编写具体的 OneBot 实现。\",\"注：这里的逻辑是 libonebot + 针对某聊天平台的对接代码 = 某聊天平台的 OneBot 实现，libonebot 要做的是让 OneBot 实现的开发者只需编写针对特定聊天平台的对接代码，而无需关心 OneBot 标准定义的通信方式、消息格式等。\",\"难度：中\",\"导师：@richardchien\",\"产出要求\",\"实现所有 OneBot 实现所共享的功能，包括 Web 通信、消息解析、配置读写等\",\"充分考虑同时兼容 OneBot v11 和 v12 接口\",\"编写详细的使用文档\",\"如果可能，实现更多附加特性，如根据用户（OneBot 实现的开发者）所实现的接口自动实现类似 get_available_apis 等接口、实现第一手 v12 支持等\",\"技术要求\",\"熟悉聊天机器人开发\",\"熟悉所选语言的 Web 开发\"]},\"1009\":{\"h\":\"暑期 2022\",\"t\":[\"开源之夏 - 暑期 2022 是由开源软件供应链点亮计划发起、由中国科学院软件研究所与 openEuler 社区主办的一项面向高校学生的暑期活动，类似 Google Summer of Code（GSoC），旨在鼓励在校学生积极参与开源软件的开发维护，促进优秀开源软件社区的蓬勃发展。关于具体的活动规划、报名方式，请查看该活动的 官网 和 帮助文档。\",\"NoneBot 社区有幸作为开源社区 参与 了本次活动，下面列出了目前我们已经发布的项目，欢迎感兴趣的同学加入 QQ 群 737131827 或通过 contact@nonebot.dev 联系我们。\"]},\"1010\":{\"h\":\"NoneBot2 命令行 CLI 交互体验升级\",\"t\":[\"NoneBot2 为用户提供了命令行脚手架 ──nb-cli，辅助用户更好地上手项目以及进行开发。nb-cli 主要包括：创建项目、运行项目、安装与卸载插件、部署项目等功能。随着 NoneBot2 Beta 版本的发布，脚手架功能存在一定的定位不明确、功能体验不佳。本项目旨在重新设计 nb-cli 功能框架，完善功能，优化用户体验。\",\"难度：进阶\",\"导师：@yanyongyu\",\"产出要求\",\"设计 nb-cli 功能框架 \",\"明确各功能模块\",\"设计用户交互模式\",\"完成 nb-cli 主要功能代码 \",\"项目管理\",\"插件管理\",\"其它\",\"同步更新使用文档\",\"技术要求\",\"熟悉 Python 命令行交互代码编写\",\"熟悉 NoneBot2 框架功能\",\"熟悉 NoneBot2 项目组织方式\",\"成果仓库\",\"https://github.com/nonebot/nb-cli\",\"https://github.com/nonebot/nonebot2\"]},\"1011\":{\"h\":\"NoneBot2 命令行即时交互通信设计与实现\",\"t\":[\"NoneBot2 在早期提供了基于网页的 nonebot-plugin-test 插件，无需平台适配接入即可对机器人进行测试，方便了开发者直观的感受机器人文本交互功能。我们希望提供一款基于命令行的适配器/驱动器，用于无平台适配接入、可以运行机器人的场景进行功能体验或测试。\",\"难度：进阶\",\"导师：@mnixry\",\"产出要求\",\"设计命令行与 NoneBot2 通信模式 \",\"直接调用/HTTP/WebSocket\",\"设计命令行交互界面\",\"实现相应适配器/驱动器\",\"同步更新使用说明文档\",\"技术要求\",\"熟悉 Python 命令行交互代码编写\",\"熟悉 NoneBot2 框架功能\",\"熟悉 NoneBot2 项目组织方式\",\"成果仓库\",\"https://github.com/nonebot/adapter-console\"]},\"1012\":{\"h\":\"NoneBot2 用户上手与深入教程设计\",\"t\":[\"NoneBot2 为用户提供了详细的文档介绍，辅助用户更好的上手项目以及进行开发。文档分为基础与进阶两个部分。基础部分帮助新用户快速上手开发，主要包括：安装 NoneBot2、使用脚手架、创建配置项目、使用适配器、加载插件、定义消息事件、处理消息事件、调用平台 API 等。进阶部分向已经熟悉开发流程的用户介绍更多高级技巧，主要包括：NoneBot2 工作原理、定时任务、权限控制、钩子函数、跨插件访问、单元测试、发布插件等。目前文档对于用户而言过于费解，导致用户难以理解 NoneBot2 开发。本项目旨在优化文档内容，使其更加通俗易懂，不让文档成为用户上手的阻碍，同时完善进阶内容，让有更复杂需求的用户，同样能从文档中受益。\",\"相关 issue：\",\"https://github.com/nonebot/nonebot2/issues/793\",\"https://github.com/nonebot/nonebot2/issues/295\",\"难度：进阶\",\"导师：@SK-415\",\"产出要求\",\"文档通俗易懂 \",\"附有适当的图片指引（如 asciinema）\",\"内容完整，由浅入深\",\"适当的界面美化，合理分配布局\",\"技术要求\",\"熟悉文档结构组织与语言表达\",\"熟悉 NoneBot2 框架功能\",\"熟悉 NoneBot2 项目组织方式\",\"成果仓库\",\"https://github.com/nonebot/nonebot2\"]},\"1013\":{\"h\":\"暑期 2023\",\"t\":[\"开源之夏 - 暑期 2023 是由开源软件供应链点亮计划发起、由中国科学院软件研究所与 openEuler 社区主办的一项面向高校学生的暑期活动，类似 Google Summer of Code（GSoC），旨在鼓励在校学生积极参与开源软件的开发维护，促进优秀开源软件社区的蓬勃发展。关于具体的活动规划、报名方式，请查看该活动的 官网 和 帮助文档。\",\"NoneBot 社区有幸作为开源社区 参与 了本次活动，下面列出了目前我们已经发布的项目，欢迎感兴趣的同学通过 contact@nonebot.dev 联系我们。\"]},\"1014\":{\"h\":\"NoneBot 项目管理图形化面板\",\"t\":[\"NoneBot 目前提供了开箱即用的命令行脚手架来帮助初次使用的用户更快的上手编写应用。但是，对于未有一定开发经验的用户，命令行的使用仍具有一定的困难。此外，其他项目如 koishi、vue 等，均可通过图形化界面的形式为用户提供更便捷的项目开发。因此，我们希望借助现有命令行脚手架的可扩展特性，提供一个项目管理面板服务，以网页的形式帮助用户开发 NoneBot 应用。\",\"难度：进阶\",\"导师：@mnixry\",\"产出要求\",\"设计并实现项目管理面板相关功能 \",\"创建与管理项目\",\"配置与运行项目\",\"NoneBot 插件管理\",\"实现相应 nb-cli 插件提供面板服务\",\"代码符合 NoneBot Contributing 规范\",\"技术要求\",\"熟悉 nb-cli 相关功能\",\"熟悉 NoneBot 框架功能\",\"熟悉前后端相关实现方式\",\"成果仓库\",\"https://github.com/nonebot/cli-plugin-webui\"]},\"1015\":{\"h\":\"NoneBot Discord 适配器\",\"t\":[\"NoneBot 作为一个跨平台聊天机器人框架，目前已有 OneBot、飞书、Telegram、QQ 频道等诸多平台的适配支持。作为众多用户期待的平台适配之一，我们希望借此机会接入 Discord 聊天机器人。\",\"难度：进阶\",\"导师：@iyume\",\"产出要求\",\"调研 Discord Bot 相关功能与接口\",\"设计与编写 NoneBot Discord 适配器\",\"代码符合 NoneBot Contributing 规范\",\"技术要求\",\"熟悉 NoneBot 框架功能\",\"熟悉 NoneBot 各模块职责与适配器编写\",\"成果仓库\",\"https://github.com/nonebot/adapter-discord\"]},\"1016\":{\"h\":\"NoneBot 数据库支持插件\",\"t\":[\"NoneBot 的插件系统为用户实现应用提供了极高的便捷性，但因此也增加了插件统一管理的难度。目前，我们发现许多用户发布的插件中存在文件存储结构化数据、数据存放散乱等现象，同时插件间也可能产生冲突。因此，我们希望提供一个统一的数据存储与管理方式，便于用户读写应用数据。\",\"难度：进阶\",\"导师：@yanyongyu\",\"产出要求\",\"设计并实现 ORM 插件 \",\"提供关系模型定义功能\",\"提供模型迁移与管理功能\",\"能较好的支持 Python 类型检查与推导\",\"编写相应的用户使用文档\",\"代码符合 NoneBot Contributing 规范\",\"技术要求\",\"熟悉 NoneBot 框架功能与插件编写\",\"熟悉 SQLAlchemy 等 ORM 框架 \",\"熟悉 SQLAlchemy ORM\",\"熟悉 alembic 等迁移工具\",\"熟悉 nb-cli 插件编写\",\"成果仓库\",\"https://github.com/nonebot/plugin-orm\"]},\"1017\":{\"h\":\"暑期 2024\",\"t\":[\"开源之夏 - 暑期 2024 是中国科学院软件研究所发起的开源软件供应链点亮计划系列暑期活动，旨在鼓励高校学生积极参与开源软件的开发维护，促进优秀开源软件社区的蓬勃发展。活动联合各大开源社区，针对重要开源软件的开发与维护提供项目开发任务，并向全球高校学生开放报名。关于具体的活动规划、报名方式，请查看该活动的 官网 和 帮助文档。\",\"NoneBot 社区有幸作为开源社区 参与 了本次活动，下面列出了目前我们已经发布的项目，欢迎感兴趣的同学通过 contact@nonebot.dev 联系我们。\"]},\"1018\":{\"h\":\"NonePress 官网组件库更新与优化\",\"t\":[\"NoneBot 官网目前采用基于 TailwindCSS 自研的 NonePress 组件库及 Docusaurus 框架进行构建。由于相关依赖版本迭代迅速，目前官网组件库已产生了较大的版本落后。本项目希望在跟进框架新版本的基础上，对文档整体视觉体验进行重新设计，提升页面的无障碍访问性，基于 React Hydrate 特性实现完整的静态网站生成（SSG）以提升搜索引擎优化（SEO）水平。在解决以上问题的基础上，可对网页的开发以及生产构建性能做相应的优化提升，例如在生产构建使用自有的 webpack loader、替换现有的热重载逻辑以减少开发环境启动耗时等。\",\"难度：进阶\",\"导师：@yanyongyu\",\"产出要求\",\"基于 Docusaurus v3 重构 NonePress 组件库及相关插件 \",\"升级相关依赖并重新打造 Docusaurus theme（布局与组件）\",\"根据需求实现/修改 Docusaurus 插件使得官网内容构建正常\",\"能够提升页面渲染性能与 MDX 相关能力\",\"升级官网采用新版组件库 \",\"Algolia 索引与 SEO 正常\",\"桌面端与移动端显示正常\",\"优化官网开发与生产构建体验\",\"（可选）优化官网部分页面 \",\"优化官网过长的 changelog\",\"优化官网插件商店的展示细节\",\"技术要求\",\"熟练掌握 TS、PostCSS、TSX、MDX等相关技术\",\"掌握 React、Docusaurus、tailwind css 等框架\",\"熟悉静态网站生成 SSG、SEO 优化与 Algolia 索引原理等\",\"成果仓库\",\"https://github.com/nonebot/docusaurus-theme-nonepress\"]},\"1019\":{\"h\":\"NoneFlow 社区自动化工作流管理优化\",\"t\":[\"NoneFlow 在 NoneBot 社区中承担着重要的角色，它由 NoneBot 框架基于 GitHub APP 编写而成，能够自动化的完成许多复杂流程的处理，如：用户请求提交插件到商店时进行自动化检测，并在人工审核通过后自动存储至 registry；定时自动更新 registry 内插件信息，跟进插件新版本情况等。但是，在长期的使用中发现了一些问题和不足的地方，例如：项目本身结构复杂耦合，添加新自动化流程与维护现有流程困难；目前采用了 GitHub 用户名作为插件作者名，但已有不少插件作者改名；插件存储至 registry 并定时更新，缺少统计相关信息以帮助商店更好的展示当前插件状态；插件作者想要修改插件信息时无法便捷的找到操作方式等。本项目希望针对以上问题与不足的地方进行修复与优化，提升用户体验。\",\"难度：进阶\",\"导师：@uy/sun\",\"产出要求\",\"重构现有工作流处理结构 \",\"整合现有 Issue、Pull Request、Git 相关操作\",\"提供用户修改信息的处理方式\",\"正确处理 PR 的 Open、Close、Draft 状态\",\"修复流程中存在的问题 \",\"插件作者名正确展示\",\"registry 定时更新中需要插件测试环境隔离\",\"在 registry 定时更新的同时提供统计数据\",\"技术要求\",\"掌握 GitHub APP 开发 \",\"熟悉 GitHub REST API、GraphQL 等\",\"熟悉 GitHub APP 权限限制\",\"熟悉 NoneBot 框架与 Python 相关技术\",\"熟悉 Git、GitHub Action、GitHub 工作流\",\"成果仓库\",\"https://github.com/nonebot/noneflow\"]},\"1020\":{\"h\":\"NoneBlockly 低代码框架开发\",\"t\":[\"经过深入分析社区反馈，我们发现部分新手因不熟悉编程概念或框架本身而遇到问题。为了解决初学者在使用面向开发者的聊天机器人框架 NoneBot 时遇到的挑战，我们计划引入 Blockly 提供低代码编程支持。通过减少常见的编码错误和降低入门门槛，使框架对初学者更加友好，从而提升用户体验并有助于 NoneBot 生态的成长。本项目将基于 Blockly 实现 NoneBot 插件的低代码编写，使得用户能够快速搭建聊天机器人。\",\"难度：进阶\",\"导师：@mnixry\",\"产出要求\",\"实现 NoneBlockly 低代码开发框架 \",\"能够基于 Alconna 编写跨平台插件\",\"确保插件对 Python 和 NoneBot 版本的兼容性\",\"支持对多种类型 NoneBot 事件的响应\",\"支持对 NoneBot 消息对象的便捷操作\",\"集成 localstore 文件存储、apscheduler 定时任务、网络请求等常用功能\",\"对接 NB-CLI 脚手架，通过脚手架扩展使用低代码框架\",\"技术要求\",\"掌握 Python 与 NoneBot 框架的使用 \",\"熟悉 NoneBot 插件的开发，包括事件响应与消息处理等\",\"熟悉 NoneBot 生态组件（Alconna、localstore、apscheduler等）的使用\",\"了解 NB-CLI 脚手架的扩展开发\",\"熟悉 Blockly 低代码框架的使用和开发\",\"成果仓库\",\"https://github.com/nonebot/noneblockly\"]},\"1021\":{\"h\":\"手动创建项目\",\"t\":[\"在快速上手中，我们已经介绍了如何安装和使用 nb-cli 创建一个项目。在本章节中，我们将简要介绍如何在不使用 nb-cli 的方式创建一个机器人项目的最小实例并启动。如果你想要了解 NoneBot 的启动流程，也可以阅读本章节。\",\"警告\",\"我们十分不推荐直接创建机器人项目，请优先考虑使用 nb-cli 进行项目创建。\",\"一个机器人项目的最小实例中至少需要包含以下内容:\",\"入口文件：初始化并运行机器人的 Python 文件\",\"配置文件：存储机器人启动所需的配置\",\"插件：为机器人提供具体的功能\",\"下面我们创建一个项目文件夹，来存放项目所需文件，以下步骤均在该文件夹中进行。\"]},\"1022\":{\"h\":\"安装依赖\",\"t\":[\"在创建项目前，我们首先需要将项目所需依赖安装至环境中。\",\"（可选）创建虚拟环境，以 venv 为例\",\"python -m venv .venv --prompt nonebot2 # windows .venv\\\\Scripts\\\\activate # linux/macOS source .venv/bin/activate\",\"安装 nonebot2 以及驱动器\",\"pip install 'nonebot2[fastapi]'\",\"驱动器包名可以在 驱动器商店 中找到。\",\"安装适配器\",\"pip install nonebot-adapter-console\",\"适配器包名可以在 适配器商店 中找到。\"]},\"1023\":{\"h\":\"创建配置文件\",\"t\":[\"配置文件用于存放 NoneBot 运行所需要的配置项，使用 pydantic 以及 python-dotenv 来读取配置。配置项需符合 dotenv 格式，复杂类型数据需使用 JSON 格式填写。具体可选配置方式以及配置项详情参考配置。\",\"在项目文件夹中创建一个 .env 文本文件，并写入以下内容:\",\"HOST=0.0.0.0 # 配置 NoneBot 监听的 IP / 主机名 PORT=8080 # 配置 NoneBot 监听的端口 COMMAND_START=[\\\"/\\\"] # 配置命令起始字符 COMMAND_SEP=[\\\".\\\"] # 配置命令分割字符\"]},\"1024\":{\"h\":\"创建入口文件\",\"t\":[\"入口文件（ Entrypoint ）顾名思义，是用来初始化并运行机器人的 Python 文件。入口文件需要完成框架的初始化、注册适配器、加载插件等工作。\",\"提示\",\"如果你使用 nb-cli 创建项目，入口文件不会被创建，该文件功能会被 nb run 命令代替。\",\"在项目文件夹中创建一个 bot.py 文件，并写入以下内容:\",\"import nonebot from nonebot.adapters.console import Adapter as ConsoleAdapter # 避免重复命名 # 初始化 NoneBot nonebot.init() # 注册适配器 driver = nonebot.get_driver() driver.register_adapter(ConsoleAdapter) # 在这里加载插件 nonebot.load_builtin_plugins(\\\"echo\\\") # 内置插件 # nonebot.load_plugin(\\\"thirdparty_plugin\\\") # 第三方插件 # nonebot.load_plugins(\\\"awesome_bot/plugins\\\") # 本地插件 if __name__ == \\\"__main__\\\": nonebot.run()\",\"我们暂时不需要了解其中内容的含义，这些将会在稍后的章节中逐一介绍。在创建完成以上文件并确认已安装所需适配器和插件后，即可运行机器人。\"]},\"1025\":{\"h\":\"运行机器人\",\"t\":[\"在项目文件夹中，使用配置好环境的 Python 解释器运行入口文件（如果使用虚拟环境，请先激活虚拟环境）:\",\"python bot.py\",\"如果你后续使用了 nb-cli ，你仍可以使用 nb run 命令来运行机器人，nb-cli 会自动检测入口文件 bot.py 是否存在并运行。同时，你也可以使用 nb run --reload 来自动检测代码的更改并自动重新运行入口文件。\"]},\"1026\":{\"h\":\"插件编写准备\",\"t\":[\"在正式编写插件之前，我们需要先了解一下插件的概念。\"]},\"1027\":{\"h\":\"插件结构\",\"t\":[\"在 NoneBot 中，插件即是 Python 的一个模块（module）。NoneBot 会在导入时对这些模块做一些特殊的处理使得他们成为一个插件。插件间应尽量减少耦合，可以进行有限制的相互调用，NoneBot 能够正确解析插件间的依赖关系。\"]},\"1028\":{\"h\":\"单文件插件\",\"t\":[\"一个普通的 .py 文件即可以作为一个插件，例如创建一个 foo.py 文件：\",\"📂 plugins └── 📜 foo.py\",\"这个时候模块 foo 已经可以被称为一个插件了，尽管它还什么都没做。\"]},\"1029\":{\"h\":\"包插件\",\"t\":[\"一个包含 __init__.py 的文件夹即是一个常规 Python 包 package，例如创建一个 foo 文件夹：\",\"📂 plugins └── 📂 foo └── 📜 __init__.py\",\"这个时候包 foo 同样是一个合法的插件，插件内容可以在 __init__.py 文件中编写。\"]},\"1030\":{\"h\":\"创建插件\",\"t\":[\"注意\",\"如果在之前的快速上手章节中已经使用 bootstrap 模板创建了项目，那么你需要做出如下修改：\",\"在项目目录中创建一个两层文件夹 awesome_bot/plugins\",\"📦 awesome-bot ├── 📂 awesome_bot │ └── 📂 plugins ├── 📜 pyproject.toml └── 📜 README.md\",\"修改 pyproject.toml 文件中的 nonebot 配置项，在 plugin_dirs 中添加 awesome_bot/plugins\",\"[tool.nonebot] plugin_dirs = [\\\"awesome_bot/plugins\\\"]\",\"注意\",\"如果在之前的创建项目章节中手动创建了相关文件，那么你需要做出如下修改：\",\"在项目目录中创建一个两层文件夹 awesome_bot/plugins\",\"📦 awesome-bot ├── 📂 awesome_bot │ └── 📂 plugins └── 📜 bot.py\",\"修改 bot.py 文件中的加载插件部分，取消注释或者添加如下代码\",\"# 在这里加载插件 nonebot.load_builtin_plugins(\\\"echo\\\") # 内置插件 nonebot.load_plugins(\\\"awesome_bot/plugins\\\") # 本地插件\",\"创建插件可以通过 nb-cli 命令从完整模板创建，也可以手动新建空白文件。通过以下命令创建一个名为 weather 的插件：\",\"$ nb plugin create [?] 插件名称: weather [?] 使用嵌套插件? (y/N) N [?] 输出目录: awesome_bot/plugins\",\"nb-cli 会在 awesome_bot/plugins 目录下创建一个名为 weather 的文件夹，其中包含的文件将在稍后章节中用到。\",\"📦 awesome-bot ├── 📂 awesome_bot │ └── 📂 plugins | └── 📂 foo | ├── 📜 __init__.py | └── 📜 config.py ├── 📜 pyproject.toml └── 📜 README.md\"]},\"1031\":{\"h\":\"加载插件\",\"t\":[\"警告\",\"请勿在插件被加载前 import 插件模块，这会导致 NoneBot 无法将其转换为插件而出现意料之外的情况。\",\"加载插件是在机器人入口文件中完成的，需要在框架初始化之后，运行之前进行。\",\"请注意，加载的插件模块名称（插件文件名或文件夹名）不能相同，且每一个插件只能被加载一次，重复加载将会导致异常。\",\"如果你使用 nb-cli 管理插件，那么你可以跳过这一节，nb-cli 将会自动处理加载。\",\"如果你使用自定义的入口文件bot.py，那么你需要在 bot.py 中加载插件。\",\"import nonebot nonebot.init() # 加载插件 nonebot.run()\",\"加载插件的方式有多种，但在底层的加载逻辑是一致的。以下是为加载插件提供的几种方式：\"]},\"1032\":{\"h\":\"\",\"t\":[\"通过点分割模块名称或使用 pathlib 的 Path 对象来加载插件。通常用于加载第三方插件或者项目插件。例如：\",\"from pathlib import Path nonebot.load_plugin(\\\"path.to.your.plugin\\\") # 加载第三方插件 nonebot.load_plugin(Path(\\\"./path/to/your/plugin.py\\\")) # 加载项目插件\",\"注意\",\"请注意，本地插件的路径应该为相对机器人 入口文件（通常为 bot.py） 可导入的，例如在项目 plugins 目录下。\"]},\"1033\":{\"h\":\"\",\"t\":[\"加载传入插件目录中的所有插件，通常用于加载一系列本地编写的项目插件。例如：\",\"nonebot.load_plugins(\\\"src/plugins\\\", \\\"path/to/your/plugins\\\")\",\"注意\",\"请注意，插件目录应该为相对机器人 入口文件（通常为 bot.py） 可导入的，例如在项目 plugins 目录下。\"]},\"1034\":{\"h\":\"\",\"t\":[\"这种加载方式是以上两种方式的混合，加载所有传入的插件模块名称，以及所有给定目录下的插件。例如：\",\"nonebot.load_all_plugins([\\\"path.to.your.plugin\\\"], [\\\"path/to/your/plugins\\\"])\"]},\"1035\":{\"h\":\"\",\"t\":[\"通过 JSON 文件加载插件，是 load_all_plugins 的 JSON 变种。通过读取 JSON 文件中的 plugins 字段和 plugin_dirs 字段进行加载。例如：\",\"{ \\\"plugins\\\": [\\\"path.to.your.plugin\\\"], \\\"plugin_dirs\\\": [\\\"path/to/your/plugins\\\"] }\",\"nonebot.load_from_json(\\\"plugin_config.json\\\", encoding=\\\"utf-8\\\")\",\"提示\",\"如果 JSON 配置文件中的字段无法满足你的需求，可以使用 load_all_plugins 方法自行读取配置来加载插件。\"]},\"1036\":{\"h\":\"\",\"t\":[\"通过 TOML 文件加载插件，是 load_all_plugins 的 TOML 变种。通过读取 TOML 文件中的 [tool.nonebot] Table 中的 plugins 和 plugin_dirs Array 进行加载。例如：\",\"[tool.nonebot] plugins = [\\\"path.to.your.plugin\\\"] plugin_dirs = [\\\"path/to/your/plugins\\\"]\",\"nonebot.load_from_toml(\\\"plugin_config.toml\\\", encoding=\\\"utf-8\\\")\",\"提示\",\"如果 TOML 配置文件中的字段无法满足你的需求，可以使用 load_all_plugins 方法自行读取配置来加载插件。\"]},\"1037\":{\"h\":\"\",\"t\":[\"加载一个内置插件，传入的插件名必须为 NoneBot 内置插件。该方法是 load_plugin 的封装。例如：\",\"nonebot.load_builtin_plugin(\\\"echo\\\")\"]},\"1038\":{\"h\":\"\",\"t\":[\"加载传入插件列表中的所有内置插件。例如：\",\"nonebot.load_builtin_plugins(\\\"echo\\\", \\\"single_session\\\")\"]},\"1039\":{\"h\":\"其他加载方式\",\"t\":[\"有关其他插件加载的方式，可参考跨插件访问和嵌套插件。\"]},\"1040\":{\"h\":\"机器人的构成\",\"t\":[\"了解机器人的基本构成有助于你更好地使用 NoneBot，本章节将介绍 NoneBot 中的基本组成部分，稍后的文档中将会使用到这些概念。\",\"使用 NoneBot 框架搭建的机器人具有以下几个基本组成部分：\",\"NoneBot 机器人框架主体：负责连接各个组成部分，提供基本的机器人功能\",\"驱动器 Driver：客户端/服务端的功能实现，负责接收和发送消息（通常为 HTTP 通信）\",\"适配器 Adapter：驱动器的上层，负责将平台消息与 NoneBot 事件/操作系统的消息格式相互转换\",\"插件 Plugin：机器人的功能实现，通常为负责处理事件并进行一系列的操作\",\"除 NoneBot 机器人框架主体外，其他部分均可按需选择、互相搭配，但由于平台的兼容性问题，部分插件可能仅在某些特定平台上可用（这由插件编写者决定）。\",\"在接下来的章节中，我们将重点介绍机器人功能实现，即插件 Plugin 部分。\"]},\"1041\":{\"h\":\"事件响应器\",\"t\":[\"事件响应器（Matcher）是对接收到的事件进行响应的基本单元，所有的事件响应器都继承自 Matcher 基类。\",\"在 NoneBot 中，事件响应器可以通过一系列特定的规则筛选出具有某种特征的事件，并按照特定的流程交由预定义的事件处理依赖进行处理。例如，在快速上手中，我们使用了内置插件 echo ，它定义的事件响应器能响应机器人用户发送的“/echo hello world”消息，提取“hello world”信息并作为回复消息发送。\"]},\"1042\":{\"h\":\"事件响应器辅助函数\",\"t\":[\"NoneBot 中所有事件响应器均继承自 Matcher 基类，但直接使用 Matcher.new() 方法创建事件响应器过于繁琐且不能记录插件信息。因此，NoneBot 中提供了一系列“事件响应器辅助函数”（下称“辅助函数”）来辅助我们用最简的方式创建带有不同规则预设的事件响应器，提高代码可读性和书写效率。通常情况下，我们只需要使用辅助函数即可完成事件响应器的创建。\",\"在 NoneBot 中，辅助函数以 on() 或 on_<type/rule>() 形式出现（例如 on_command()），调用后根据不同的参数返回一个 Type[Matcher] 类型的新事件响应器。\",\"目前 NoneBot 提供了多种功能各异的辅助函数、具有共同命令名称前缀的命令组以及具有共同参数的响应器组，均可以从 nonebot 模块直接导入使用，具体内容参考事件响应器进阶。\"]},\"1043\":{\"h\":\"创建事件响应器\",\"t\":[\"在上一节创建插件中，我们创建了一个 weather 插件，现在我们来实现他的功能。\",\"我们直接使用 on_command() 辅助函数来创建一个事件响应器：\",\"from nonebot import on_command weather = on_command(\\\"天气\\\")\",\"这样，我们就获得一个名为 weather 的事件响应器了，这个事件响应器会对 /天气 开头的消息进行响应。\",\"提示\",\"如果一条消息中包含“@机器人”或以“机器人的昵称”开始，例如 @bot /天气 时，协议适配器会将 event.is_tome() 判断为 True ，同时也会自动去除 @bot，即事件响应器收到的信息内容为 /天气，方便进行命令匹配。\"]},\"1044\":{\"h\":\"为事件响应器添加参数\",\"t\":[\"在辅助函数中，我们可以添加一些参数来对事件响应器进行更加精细的调整，例如事件响应器的优先级、匹配规则等。例如：\",\"from nonebot import on_command from nonebot.rule import to_me weather = on_command(\\\"天气\\\", rule=to_me(), aliases={\\\"weather\\\", \\\"查天气\\\"}, priority=10, block=True)\",\"这样，我们就获得了一个可以响应 天气、weather、查天气 三个命令的响应规则，需要私聊或 @bot 时才会响应，优先级为 10（越小越优先），阻断事件向后续优先级传播的事件响应器了。这些内容的意义和使用方法将会在后续的章节中一一介绍。\",\"提示\",\"需要注意的是，不同的辅助函数有不同的可选参数，在使用之前可以参考事件响应器进阶 - 基本辅助函数或 API 文档。\"]},\"1045\":{\"h\":\"处理消息\",\"t\":[\"在不同平台中，一条消息可能会有承载有各种不同的表现形式，它可能是一段纯文本、一张图片、一段语音、一篇富文本文章，也有可能是多种类型的组合等等。\",\"在 NoneBot 中，为确保消息的正常处理与跨平台兼容性，采用了扁平化的消息序列形式，即 Message 对象。消息序列是 NoneBot 中的消息载体，无论是接收还是发送的消息，都采用消息序列的形式进行处理。\"]},\"1046\":{\"h\":\"认识消息类型\"},\"1047\":{\"h\":\"消息序列\",\"t\":[\"在 NoneBot 中，消息序列 Message 的主要作用是用于表达“一串消息”。由于消息序列继承自 List[MessageSegment]，所以 Message 的本质是由若干消息段所组成的序列。因此，消息序列的使用方法与 List 有很多相似之处，例如切片、索引、拼接等。\",\"在上一节的使用依赖注入中，我们已经通过依赖注入 CommandArg() 获取了命令的参数，它的类型即是消息序列。我们使用了消息序列的 extract_plain_text() 方法来获取消息序列中的纯文本内容。\"]},\"1048\":{\"h\":\"消息段\",\"t\":[\"顾名思义，消息段 MessageSegment 是一段消息。由于消息序列的本质是由若干消息段所组成的序列，消息段可以被认为是构成消息序列的最小单位。简单来说，消息序列类似于一个自然段，而消息段则是组成自然段的一句话。同时，作为特殊消息载体的存在，绝大多数的平台都有着独特的消息类型，这些独特的内容均需要由对应的协议适配器所提供，以适应不同平台中的消息模式。这也意味着，你需要导入对应的协议适配器中的消息序列和消息段后才能使用其特殊的工厂方法。\",\"注意\",\"消息段的类型是由协议适配器提供的，因此你需要参考协议适配器的文档并导入对应的消息段后才能使用其特殊的消息类型。\",\"在上一节的使用依赖注入中，我们导入的为 nonebot.adapters.Message 抽象基类，因此我们无法使用平台特有的消息类型。仅能使用 str 作为纯文本消息回复。\"]},\"1049\":{\"h\":\"使用消息序列\",\"t\":[\"注意\",\"在以下的示例中，为了更好的理解多种类型的消息组成方式，我们将使用 Console 协议适配器来演示消息序列的使用方法。在实际使用中，你需要确保你使用的消息序列类型与你所要发送的平台类型一致。\",\"通常情况下，适配器在接收到消息时，会将消息转换为消息序列，可以通过依赖注入 EventMessage，或者使用 event.get_message() 获取。\",\"由于消息序列是 List[MessageSegment] 的子类，所以你总是可以用和操作 List 类似的方式来处理消息序列。例如：\",\">>> from nonebot.adapters.console import Message, MessageSegment >>> message = Message([ MessageSegment(type=\\\"text\\\", data={\\\"text\\\":\\\"hello\\\"}), MessageSegment(type=\\\"markdown\\\", data={\\\"markup\\\":\\\"**world**\\\"}), ]) >>> for segment in message: ... print(segment.type, segment.data) ... text {'text': 'hello'} markdown {'markup': '**world**'} >>> len(message) 2\"]},\"1050\":{\"h\":\"构造消息序列\",\"t\":[\"在使用事件响应器操作发送消息时，既可以使用 str 作为消息，也可以使用 Message、MessageSegment 或者 MessageTemplate。那么，我们就需要先构造一个消息序列。消息序列可以通过多种方式构造：\"]},\"1051\":{\"h\":\"直接构造\",\"t\":[\"Message 类可以直接实例化，支持 str、MessageSegment、Iterable[MessageSegment] 或适配器自定义类型的参数。\",\"from nonebot.adapters.console import Message, MessageSegment # str Message(\\\"Hello, world!\\\") # MessageSegment Message(MessageSegment.text(\\\"Hello, world!\\\")) # List[MessageSegment] Message([MessageSegment.text(\\\"Hello, world!\\\")])\"]},\"1052\":{\"h\":\"运算构造\",\"t\":[\"Message 对象可以通过 str、MessageSegment 相加构造，详情请参考拼接消息。\"]},\"1053\":{\"h\":\"从字典数组构造\",\"t\":[\"Message 对象支持 Pydantic 自定义类型构造，可以使用 Pydantic 的 TypeAdapter 方法进行构造。\",\"from pydantic import TypeAdapter from nonebot.adapters.console import Message, MessageSegment # 由字典构造消息段 TypeAdapter(MessageSegment).validate_python( {\\\"type\\\": \\\"text\\\", \\\"data\\\": {\\\"text\\\": \\\"text\\\"}} ) == MessageSegment.text(\\\"text\\\") # 由字典数组构造消息序列 TypeAdapter(Message).validate_python( [MessageSegment.text(\\\"text\\\"), {\\\"type\\\": \\\"text\\\", \\\"data\\\": {\\\"text\\\": \\\"text\\\"}}], ) == Message([MessageSegment.text(\\\"text\\\"), MessageSegment.text(\\\"text\\\")])\"]},\"1054\":{\"h\":\"获取消息纯文本\",\"t\":[\"由于消息中存在各种类型的消息段，因此 str(message) 通常不能得到消息的纯文本，而是一个消息序列的字符串表示。\",\"NoneBot 为消息段定义了一个方法 is_text() ，可以用于判断消息段是否为纯文本；也可以使用 message.extract_plain_text() 方法获取消息纯文本。\",\"from nonebot.adapters.console import Message, MessageSegment # 判断消息段是否为纯文本 MessageSegment.text(\\\"text\\\").is_text() == True # 提取消息纯文本字符串 Message( [MessageSegment.text(\\\"text\\\"), MessageSegment.markdown(\\\"**markup**\\\")] ).extract_plain_text() == \\\"text\\\"\"]},\"1055\":{\"h\":\"遍历\",\"t\":[\"消息序列继承自 List[MessageSegment] ，因此可以使用 for 循环遍历消息段。\",\"for segment in message: ...\"]},\"1056\":{\"h\":\"比较\",\"t\":[\"消息和消息段都可以使用 == 或 != 运算符比较是否相同。\",\"MessageSegment.text(\\\"text\\\") != MessageSegment.text(\\\"foo\\\") some_message == Message([MessageSegment.text(\\\"text\\\")])\"]},\"1057\":{\"h\":\"检查消息段\",\"t\":[\"我们可以通过 in 运算符或消息序列的 has 方法来：\",\"# 是否存在消息段 MessageSegment.text(\\\"text\\\") in message # 是否存在指定类型的消息段 \\\"text\\\" in message\",\"我们还可以使用消息序列的 only 方法来检查消息中是否仅包含指定的消息段。\",\"# 是否都为指定消息段 message.only(MessageSegment.text(\\\"test\\\")) # 是否仅包含指定类型的消息段 message.only(\\\"text\\\")\"]},\"1058\":{\"h\":\"过滤、索引与切片\",\"t\":[\"消息序列对列表的索引与切片进行了增强，在原有列表 int 索引与 slice 切片的基础上，支持 type 过滤索引与切片。\",\"from nonebot.adapters.console import Message, MessageSegment message = Message( [ MessageSegment.text(\\\"test\\\"), MessageSegment.markdown(\\\"test2\\\"), MessageSegment.markdown(\\\"test3\\\"), MessageSegment.text(\\\"test4\\\"), ] ) # 索引 message[0] == MessageSegment.text(\\\"test\\\") # 切片 message[0:2] == Message( [MessageSegment.text(\\\"test\\\"), MessageSegment.markdown(\\\"test2\\\")] ) # 类型过滤 message[\\\"markdown\\\"] == Message( [MessageSegment.markdown(\\\"test2\\\"), MessageSegment.markdown(\\\"test3\\\")] ) # 类型索引 message[\\\"markdown\\\", 0] == MessageSegment.markdown(\\\"test2\\\") # 类型切片 message[\\\"markdown\\\", 0:2] == Message( [MessageSegment.markdown(\\\"test2\\\"), MessageSegment.markdown(\\\"test3\\\")] )\",\"我们也可以通过消息序列的 include、exclude 方法进行类型过滤。\",\"message.include(\\\"text\\\", \\\"markdown\\\") message.exclude(\\\"text\\\")\",\"同样的，消息序列对列表的 index、count 方法也进行了增强，可以用于索引指定类型的消息段。\",\"# 指定类型首个消息段索引 message.index(\\\"markdown\\\") == 1 # 指定类型消息段数量 message.count(\\\"markdown\\\") == 2\",\"此外，消息序列添加了一个 get 方法，可以用于获取指定类型指定个数的消息段。\",\"# 获取指定类型指定个数的消息段 message.get(\\\"markdown\\\", 1) == Message([MessageSegment.markdown(\\\"test2\\\")])\"]},\"1059\":{\"h\":\"拼接消息\",\"t\":[\"str、Message、MessageSegment 对象之间可以直接相加，相加均会返回一个新的 Message 对象。\",\"# 消息序列与消息段相加 Message([MessageSegment.text(\\\"text\\\")]) + MessageSegment.text(\\\"text\\\") # 消息序列与字符串相加 Message([MessageSegment.text(\\\"text\\\")]) + \\\"text\\\" # 消息序列与消息序列相加 Message([MessageSegment.text(\\\"text\\\")]) + Message([MessageSegment.text(\\\"text\\\")]) # 字符串与消息序列相加 \\\"text\\\" + Message([MessageSegment.text(\\\"text\\\")]) # 消息段与消息段相加 MessageSegment.text(\\\"text\\\") + MessageSegment.text(\\\"text\\\") # 消息段与字符串相加 MessageSegment.text(\\\"text\\\") + \\\"text\\\" # 消息段与消息序列相加 MessageSegment.text(\\\"text\\\") + Message([MessageSegment.text(\\\"text\\\")]) # 字符串与消息段相加 \\\"text\\\" + MessageSegment.text(\\\"text\\\")\",\"如果需要在当前消息序列后直接拼接新的消息段，可以使用 Message.append、Message.extend 方法，或者使用自加。\",\"msg = Message([MessageSegment.text(\\\"text\\\")]) # 自加 msg += \\\"text\\\" msg += MessageSegment.text(\\\"text\\\") msg += Message([MessageSegment.text(\\\"text\\\")]) # 附加 msg.append(\\\"text\\\") msg.append(MessageSegment.text(\\\"text\\\")) # 扩展 msg.extend([MessageSegment.text(\\\"text\\\")])\",\"我们也可以通过消息段或消息序列的 join 方法来拼接一串消息：\",\"seg = MessageSegment.text(\\\"text\\\") msg = seg.join( [ MessageSegment.text(\\\"first\\\"), Message( [ MessageSegment.text(\\\"second\\\"), MessageSegment.text(\\\"third\\\"), ] ) ] ) msg == Message( [ MessageSegment.text(\\\"first\\\"), MessageSegment.text(\\\"text\\\"), MessageSegment.text(\\\"second\\\"), MessageSegment.text(\\\"third\\\"), ] )\"]},\"1060\":{\"h\":\"使用消息模板\",\"t\":[\"为了提供安全可靠的跨平台模板字符，我们提供了一个消息模板功能来构建消息序列\",\"它在以下常见场景中尤其有用：\",\"多行富文本编排（包含图片，文字以及表情等）\",\"客制化（由 Bot 最终用户提供消息模板时）\",\"在事实上，它的用法和 str.format 极为相近，所以你在使用的时候，总是可以参考Python 文档来达到你想要的效果，这里给出几个简单的例子。\",\"默认情况下，消息模板采用 str 纯文本形式的格式化：\",\">>> from nonebot.adapters import MessageTemplate >>> MessageTemplate(\\\"{} {}\\\").format(\\\"hello\\\", \\\"world\\\") 'hello world'\",\"如果 Message.template 构建消息模板，那么消息模板将采用消息序列形式的格式化，此时的消息将会是平台特定的：\",\"注意\",\"使用 Message.template 构建消息模板时，应注意消息序列为平台适配器提供的类型，不能使用 nonebot.adapters.Message 基类作为模板构建。使用基类构建模板与使用 str 构建模板的效果是一样的，因此请使用上述的 MessageTemplate 类直接构建模板。：\",\">>> from nonebot.adapters.console import Message, MessageSegment >>> Message.template(\\\"{} {}\\\").format(\\\"hello\\\", \\\"world\\\") Message( MessageSegment.text(\\\"hello\\\"), MessageSegment.text(\\\" \\\"), MessageSegment.text(\\\"world\\\") )\",\"消息模板支持使用消息段进行格式化：\",\">>> from nonebot.adapters.console import Message, MessageSegment >>> Message.template(\\\"{}{}\\\").format(MessageSegment.markdown(\\\"**markup**\\\"), \\\"world\\\") Message( MessageSegment(type='markdown', data={'markup': '**markup**'}), MessageSegment(type='text', data={'text': 'world'}) )\",\"消息模板同样支持使用消息序列作为模板：\",\">>> from nonebot.adapters.console import Message, MessageSegment >>> Message.template( ... MessageSegment.text(\\\"{user_id}\\\") + MessageSegment.emoji(\\\"tada\\\") + ... MessageSegment.text(\\\"{message}\\\") ... ).format_map({\\\"user_id\\\": 123456, \\\"message\\\": \\\"hello world\\\"}) Message( MessageSegment(type='text', data={'text': '123456'}), MessageSegment(type='emoji', data={'emoji': 'tada'}), MessageSegment(type='text', data={'text': 'hello world'}) )\",\"注意\",\"只有消息序列中的文本类型消息段才能被格式化，其他类型的消息段将会原样添加。\",\"消息模板支持使用拓展控制符来控制消息段类型：\",\">>> from nonebot.adapters.console import Message, MessageSegment >>> Message.template(\\\"{name:emoji}\\\").format(name='tada') Message(MessageSegment(type='emoji', data={'name': 'tada'}))\"]},\"1061\":{\"h\":\"使用适配器\",\"t\":[\"适配器 (Adapter) 是机器人与平台交互的核心桥梁，它负责在驱动器和机器人插件之间转换与传递消息。\"]},\"1062\":{\"h\":\"适配器功能与组成\",\"t\":[\"适配器通常有两种功能，分别是接收事件和调用平台接口。其中，接收事件是指将驱动器收到的事件消息转换为 NoneBot 定义的事件模型，然后交由机器人插件处理；调用平台接口是指将机器人插件调用平台接口的数据转换为平台指定的格式，然后交由驱动器发送，并接收接口返回数据。\",\"为了实现这两种功能，适配器通常由四个部分组成：\",\"Adapter：负责转换事件和调用接口，正确创建 Bot 对象并注册到 NoneBot 中。\",\"Bot：负责存储平台机器人相关信息，并提供回复事件的方法。\",\"Event：负责定义事件内容，以及事件主体对象。\",\"Message：负责正确序列化消息，以便机器人插件处理。\"]},\"1063\":{\"h\":\"注册适配器\",\"t\":[\"在使用适配器之前，我们需要先将适配器注册到驱动器中，这样适配器就可以通过驱动器接收事件和调用接口了。我们以 Console 适配器为例，来看看如何注册适配器：\",\"import nonebot from nonebot.adapters.console import Adapter driver = nonebot.get_driver() driver.register_adapter(Adapter)\",\"我们首先需要从适配器模块中导入所需要的适配器类，然后通过驱动器的 register_adapter 方法将适配器注册到驱动器中即可。如果我们需要多平台支持，可以多次调用 register_adapter 方法来注册多个适配器。\"]},\"1064\":{\"h\":\"获取已注册的适配器\",\"t\":[\"NoneBot 提供了 get_adapter 方法来获取已注册的适配器，我们可以通过适配器的名称或类型来获取指定的适配器实例：\",\"import nonebot from nonebot.adapters.console import Adapter adapters = nonebot.get_adapters() console_adapter = nonebot.get_adapter(Adapter) console_adapter = nonebot.get_adapter(Adapter.get_name())\"]},\"1065\":{\"h\":\"获取 Bot 对象\",\"t\":[\"当前所有适配器已连接的 Bot 对象可以通过 get_bots 方法获取，这是一个以机器人 ID 为键的字典：\",\"import nonebot bots = nonebot.get_bots()\",\"我们也可以通过 get_bot 方法获取指定 ID 的 Bot 对象。如果省略 ID 参数，将会返回所有 Bot 中的第一个：\",\"import nonebot bot = nonebot.get_bot(\\\"bot_id\\\")\",\"如果需要获取指定适配器连接的 Bot 对象，我们可以通过适配器的 bots 属性获取，这也是一个以机器人 ID 为键的字典：\",\"import nonebot from nonebot.adapters.console import Adapter console_adapter = nonebot.get_adapter(Adapter) bots = console_adapter.bots\",\"Bot 对象都具有一个 self_id 属性，它是机器人的唯一 ID，由适配器填写，通常为机器人的帐号 ID 或者 APP ID。\"]},\"1066\":{\"h\":\"获取事件通用信息\",\"t\":[\"适配器的所有事件模型均继承自 Event 基类，在事件类型与重载一节中，我们也提到了如何使用基类抽象方法来获取事件通用信息。基类能提供如下信息：\"]},\"1067\":{\"h\":\"事件类型\",\"t\":[\"事件类型通常为 meta_event、message、notice、request。\",\"type: str = event.get_type()\"]},\"1068\":{\"h\":\"事件名称\",\"t\":[\"事件名称由适配器定义，通常用于日志记录。\",\"name: str = event.get_event_name()\"]},\"1069\":{\"h\":\"事件描述\",\"t\":[\"事件描述由适配器定义，通常用于日志记录。\",\"description: str = event.get_event_description()\"]},\"1070\":{\"h\":\"事件日志字符串\",\"t\":[\"事件日志字符串由事件名称和事件描述组成，用于日志记录。\",\"log: str = event.get_log_string()\"]},\"1071\":{\"h\":\"事件主体 ID\",\"t\":[\"事件主体 ID 通常为机器人用户 ID。\",\"user_id: str = event.get_user_id()\"]},\"1072\":{\"h\":\"事件会话 ID\",\"t\":[\"事件会话 ID 通常为机器人用户 ID 与群聊/频道 ID 组合而成。\",\"session_id: str = event.get_session_id()\"]},\"1073\":{\"h\":\"事件消息\",\"t\":[\"如果事件包含消息，则可以通过该方法获取，否则会产生异常。\",\"message: Message = event.get_message()\"]},\"1074\":{\"h\":\"事件纯文本消息\",\"t\":[\"通常为事件消息的纯文本内容，如果事件不包含消息，则会产生异常。\",\"text: str = event.get_plaintext()\"]},\"1075\":{\"h\":\"事件是否与机器人有关\",\"t\":[\"由适配器实现的判断，通常将事件目标主体为机器人、消息中包含“@机器人”或以“机器人的昵称”开始视为与机器人有关。\",\"is_tome: bool = event.is_tome()\"]},\"1076\":{\"h\":\"更多\",\"t\":[\"官方支持的适配器和社区贡献的适配器均可在商店中查看。如果你想要开发自己的适配器，可以参考开发文档。欢迎通过商店发布你的适配器。\"]},\"1077\":{\"h\":\"选择驱动器\",\"t\":[\"驱动器 (Driver) 是机器人运行的基石，它是机器人初始化的第一步，主要负责数据收发。\",\"提示\",\"驱动器的选择通常与机器人所使用的协议适配器相关，如果不知道该选择哪个驱动器，可以先阅读相关协议适配器文档说明。\",\"提示\",\"如何安装驱动器请参考安装驱动器。\"]},\"1078\":{\"h\":\"驱动器类型\",\"t\":[\"驱动器类型大体上可以分为两种：\",\"Forward：即客户端型驱动器，多用于使用 HTTP 轮询，连接 WebSocket 服务器等情形。\",\"Reverse：即服务端型驱动器，多用于使用 WebHook，接收 WebSocket 客户端连接等情形。\",\"客户端型驱动器可以分为以下两种：\",\"异步发送 HTTP 请求，自定义 HTTP Method、URL、Header、Body、Cookie、Proxy、Timeout 等。\",\"异步建立 WebSocket 连接上下文，自定义 WebSocket URL、Header、Cookie、Proxy、Timeout 等。\",\"服务端型驱动器目前有：\",\"ASGI 应用框架，具有以下功能： \",\"协议适配器自定义 HTTP 上报地址以及对上报数据处理的回调函数。\",\"协议适配器自定义 WebSocket 连接请求地址以及对 WebSocket 请求处理的回调函数。\",\"用户可以向 ASGI 应用添加任何服务端相关功能，如：添加自定义路由。\"]},\"1079\":{\"h\":\"配置驱动器\",\"t\":[\"驱动器的配置方法已经在配置章节中简单进行了介绍，这里将详细介绍驱动器配置的格式。\",\"NoneBot 中的客户端和服务端型驱动器可以相互配合使用，但服务端型驱动器仅能选择一个。所有驱动器模块都会包含一个 Driver 子类，即驱动器类，他可以作为驱动器单独运行。同时，客户端驱动器模块中还会提供一个 Mixin 子类，用于在与其他驱动器配合使用时加载。因此，驱动器配置格式采用特殊语法：<module>[:<Driver>][+<module>[:<Mixin>]]*。\",\"其中，<module> 代表驱动器模块路径；<Driver> 代表驱动器类名，默认为 Driver；<Mixin> 代表驱动器混入类名，默认为 Mixin。即，我们需要选择一个主要驱动器，然后在其基础上配合使用其他驱动器的功能。主要驱动器可以为客户端或服务端类型，但混入类驱动器只能为客户端类型。\",\"特别的，为了简化内置驱动器模块路径，我们可以使用 ~ 符号作为内置驱动器模块路径的前缀，如 ~fastapi 代表使用内置驱动器 fastapi。NoneBot 内置了多个驱动器适配，但需要安装额外依赖才能使用，具体请参考安装驱动器。常见的驱动器配置如下：\",\"DRIVER=~fastapi DRIVER=~aiohttp DRIVER=~httpx+~websockets DRIVER=~fastapi+~httpx+~websockets\"]},\"1080\":{\"h\":\"获取驱动器\",\"t\":[\"在 NoneBot 框架初始化完成后，我们就可以通过 get_driver() 方法获取全局驱动器实例：\",\"from nonebot import get_driver driver = get_driver()\"]},\"1081\":{\"h\":\"内置驱动器\"},\"1082\":{\"h\":\"None\",\"t\":[\"**类型：**服务端驱动器\",\"NoneBot 内置的空驱动器，不提供任何收发数据功能，可以在不需要外部网络连接时使用。\",\"DRIVER=~none\"]},\"1083\":{\"h\":\"FastAPI（默认）\",\"t\":[\"**类型：**ASGI 服务端驱动器\",\"FastAPI is a modern, fast (high-performance), web framework for building APIs with Python 3.6+ based on standard Python type hints.\",\"FastAPI 是一个易上手、高性能的异步 Web 框架，具有极佳的编写体验。 FastAPI 可以通过类型注解、依赖注入等方式实现输入参数校验、自动生成 API 文档等功能，也可以挂载其他 ASGI、WSGI 应用。\",\"DRIVER=~fastapi\"]},\"1084\":{\"h\":\"FastAPI 配置项\"},\"1085\":{\"h\":\"\",\"t\":[\"类型：str | None 默认值：None 说明：FastAPI 提供的 OpenAPI JSON 定义地址，如果为 None，则不提供 OpenAPI JSON 定义。\"]},\"1086\":{\"h\":\"\",\"t\":[\"类型：str | None 默认值：None 说明：FastAPI 提供的 Swagger 文档地址，如果为 None，则不提供 Swagger 文档。\"]},\"1087\":{\"h\":\"\",\"t\":[\"类型：str | None 默认值：None 说明：FastAPI 提供的 ReDoc 文档地址，如果为 None，则不提供 ReDoc 文档。\"]},\"1088\":{\"h\":\"\",\"t\":[\"类型：bool 默认值：True 说明：FastAPI 提供的 OpenAPI JSON 定义中是否包含适配器路由的 Schema。\"]},\"1089\":{\"h\":\"\",\"t\":[\"警告\",\"不推荐开启该配置项，在 Windows 平台上开启该功能有可能会造成预料之外的影响！替代方案：使用 nb-cli 命令行工具以及参数 --reload 启动 NoneBot。\",\"nb run --reload\",\"开启该功能后，在 uvicorn 运行时（FastAPI 提供的 ASGI 底层，即 reload 功能的实际来源），asyncio 使用的事件循环会被 uvicorn 从默认的 ProactorEventLoop 强制切换到 SelectorEventLoop。\",\"相关信息参考 uvicorn#529，uvicorn#1070，uvicorn#1257\",\"后者（SelectorEventLoop）在 Windows 平台的可使用性不如前者（ProactorEventLoop），包括但不限于\",\"不支持创建子进程\",\"最多只支持 512 个套接字\",\"...\",\"具体信息参考 Python 文档\",\"所以，一些使用了 asyncio 的库因此可能无法正常工作，如：\",\"playwright\",\"如果在开启该功能后，原本正常运行的代码报错，且打印的异常堆栈信息和 asyncio 有关（异常一般为 NotImplementedError）， 你可能就需要考虑相关库对事件循环的支持，以及是否启用该功能。\",\"类型：bool 默认值：False 说明：是否开启 uvicorn 的 reload 功能，需要在机器人入口文件提供 ASGI 应用路径。\",\"app = nonebot.get_asgi() nonebot.run(app=\\\"bot:app\\\")\"]},\"1090\":{\"h\":\"\",\"t\":[\"类型：List[str] | None 默认值：None 说明：重载监控文件夹列表，默认为 uvicorn 默认值\"]},\"1091\":{\"h\":\"\",\"t\":[\"类型：float | None 默认值：None 说明：重载延迟，默认为 uvicorn 默认值\"]},\"1092\":{\"h\":\"\",\"t\":[\"类型：List[str] | None 默认值：None 说明：要监听的文件列表，支持 glob pattern，默认为 uvicorn 默认值\"]},\"1093\":{\"h\":\"\",\"t\":[\"类型：List[str] | None 默认值：None 说明：不要监听的文件列表，支持 glob pattern，默认为 uvicorn 默认值\"]},\"1094\":{\"h\":\"\",\"t\":[\"类型：Dist[str, Any] 默认值：{} 说明：传递给 FastAPI 的其他参数\"]},\"1095\":{\"h\":\"Quart\",\"t\":[\"**类型：**ASGI 服务端驱动器\",\"Quart is an asyncio reimplementation of the popular Flask microframework API.\",\"Quart 是一个类 Flask 的异步版本，拥有与 Flask 非常相似的接口和使用方法。\",\"DRIVER=~quart\"]},\"1096\":{\"h\":\"Quart 配置项\"},\"1097\":{\"h\":\"\",\"t\":[\"警告\",\"不推荐开启该配置项，在 Windows 平台上开启该功能有可能会造成预料之外的影响！替代方案：使用 nb-cli 命令行工具以及参数 --reload 启动 NoneBot。\",\"nb run --reload\",\"类型：bool 默认值：False 说明：是否开启 uvicorn 的 reload 功能，需要在机器人入口文件提供 ASGI 应用路径。\",\"app = nonebot.get_asgi() nonebot.run(app=\\\"bot:app\\\")\"]},\"1098\":{\"h\":\"\",\"t\":[\"类型：List[str] | None 默认值：None 说明：重载监控文件夹列表，默认为 uvicorn 默认值\"]},\"1099\":{\"h\":\"\",\"t\":[\"类型：float | None 默认值：None 说明：重载延迟，默认为 uvicorn 默认值\"]},\"1100\":{\"h\":\"\",\"t\":[\"类型：List[str] | None 默认值：None 说明：要监听的文件列表，支持 glob pattern，默认为 uvicorn 默认值\"]},\"1101\":{\"h\":\"\",\"t\":[\"类型：List[str] | None 默认值：None 说明：不要监听的文件列表，支持 glob pattern，默认为 uvicorn 默认值\"]},\"1102\":{\"h\":\"\",\"t\":[\"类型：Dist[str, Any] 默认值：{} 说明：传递给 Quart 的其他参数\"]},\"1103\":{\"h\":\"HTTPX\",\"t\":[\"**类型：**HTTP 客户端驱动器\",\"注意\",\"本驱动器仅支持 HTTP 请求，不支持 WebSocket 连接请求。\",\"HTTPX is a fully featured HTTP client for Python 3, which provides sync and async APIs, and support for both HTTP/1.1 and HTTP/2.\",\"DRIVER=~httpx\"]},\"1104\":{\"h\":\"websockets\",\"t\":[\"**类型：**WebSocket 客户端驱动器\",\"注意\",\"本驱动器仅支持 WebSocket 连接请求，不支持 HTTP 请求。\",\"websockets is a library for building WebSocket servers and clients in Python with a focus on correctness, simplicity, robustness, and performance.\",\"DRIVER=~websockets\"]},\"1105\":{\"h\":\"AIOHTTP\",\"t\":[\"**类型：**HTTP/WebSocket 客户端驱动器\",\"AIOHTTP: Asynchronous HTTP Client/Server for asyncio and Python.\",\"DRIVER=~aiohttp\"]},\"1106\":{\"h\":\"事件响应器存储\",\"t\":[\"事件响应器是 NoneBot 处理事件的核心，它们默认存储在一个字典中。在进入会话状态后，事件响应器将会转为临时响应器，作为最高优先级同样存储于该字典中。因此，事件响应器的存储类似于会话存储，它决定了整个 NoneBot 对事件的处理行为。\",\"NoneBot 默认使用 Python 的字典将事件响应器存储于内存中，但是我们也可以自定义事件响应器存储，将事件响应器存储于其他地方，例如 Redis 等。这样我们就可以实现持久化、在多实例间共享会话状态等功能。\"]},\"1107\":{\"h\":\"编写存储提供者\",\"t\":[\"事件响应器的存储提供者 MatcherProvider 抽象类继承自 MutableMapping[int, list[type[Matcher]]]，即以优先级为键，以事件响应器列表为值的映射。我们可以方便地进行逐优先级事件传播。\",\"编写一个自定义的存储提供者，只需要继承并实现 MatcherProvider 抽象类：\",\"from nonebot.matcher import MatcherProvider class CustomProvider(MatcherProvider): ...\"]},\"1108\":{\"h\":\"设置存储提供者\",\"t\":[\"我们可以通过 matchers.set_provider 方法设置存储提供者：\",\"from nonebot.matcher import matchers matchers.set_provider(CustomProvider) assert isinstance(matchers.provider, CustomProvider)\"]},\"1109\":{\"h\":\"事件响应器进阶\",\"t\":[\"在指南与深入中，我们已经介绍了事件响应器的基本用法以及响应规则、权限控制等功能。在这一节中，我们将介绍事件响应器的组成，内置的响应规则，与第三方响应规则拓展。\",\"提示\",\"事件响应器允许继承，你可以通过直接继承 Matcher 类来创建一个新的事件响应器。\"]},\"1110\":{\"h\":\"事件响应器组成\"},\"1111\":{\"h\":\"事件响应器类型\",\"t\":[\"事件响应器类型 type 即是该响应器所要响应的事件类型，只有在接收到的事件类型与该响应器的类型相同时，才会触发该响应器。如果类型为空字符串 \\\"\\\"，则响应器将会响应所有类型的事件。事件响应器类型的检查在所有其他检查（权限控制、响应规则）之前进行。\",\"NoneBot 内置了四种常用事件类型：meta_event、message、notice、request，分别对应元事件、消息、通知、请求。通常情况下，协议适配器会将事件合理地分类至这四种类型中。如果有其他类型的事件需要响应，可以自行定义新的类型。\"]},\"1112\":{\"h\":\"事件触发权限\",\"t\":[\"事件触发权限 permission 是一个 Permission 对象，这在权限控制一节中已经介绍过。事件触发权限会在事件响应器的类型检查通过后进行检查，如果权限检查通过，则执行响应规则检查。\"]},\"1113\":{\"h\":\"事件响应规则\",\"t\":[\"事件响应规则 rule 是一个 Rule 对象，这在响应规则一节中已经介绍过。事件响应器的响应规则会在事件响应器的权限检查通过后进行匹配，如果响应规则检查通过，则触发该响应器。\"]},\"1114\":{\"h\":\"响应优先级\",\"t\":[\"响应优先级 priority 是一个正整数，用于指定响应器的优先级。响应器的优先级越小，越先被触发。如果响应器的优先级相同，则按照响应器的注册顺序进行触发。\"]},\"1115\":{\"h\":\"阻断\",\"t\":[\"阻断 block 是一个布尔值，用于指定响应器是否阻断事件的传播。如果阻断为 True，则在该响应器被触发后，事件将不会再传播给其他下一优先级的响应器。\",\"NoneBot 内置的事件响应器中，所有非 command 规则的 message 类型的事件响应器都会阻断事件传递，其他则不会。\",\"在部分情况中，可以使用 stop_propagation 方法动态阻止事件传播，该方法需要 handler 在参数中获取 matcher 实例后调用方法。\"]},\"1116\":{\"h\":\"有效期\",\"t\":[\"事件响应器的有效期分为 temp 和 expire_time 。temp 是一个布尔值，用于指定响应器是否为临时响应器。如果为 True，则该响应器在被触发后会被自动销毁。expire_time 是一个 datetime 对象，用于指定响应器的过期时间。如果 expire_time 不为 None，则在该时间点后，该响应器会被自动销毁。\"]},\"1117\":{\"h\":\"默认状态\",\"t\":[\"事件响应器的默认状态 default_state 是一个 dict 对象，用于指定响应器的默认状态。在响应器被触发时，响应器将会初始化默认状态然后开始执行事件处理流程。\"]},\"1118\":{\"h\":\"基本辅助函数\",\"t\":[\"NoneBot 为四种类型的事件响应器提供了五个基本的辅助函数：\",\"on：创建任何类型的事件响应器。\",\"on_metaevent：创建元事件响应器。\",\"on_message：创建消息事件响应器。\",\"on_request：创建请求事件响应器。\",\"on_notice：创建通知事件响应器。\",\"除了 on 函数具有一个 type 参数外，其余参数均相同：\",\"rule：响应规则，可以是 Rule 对象或者 RuleChecker 函数。\",\"permission：事件触发权限，可以是 Permission 对象或者 PermissionChecker 函数。\",\"handlers：事件处理函数列表。\",\"temp：是否为临时响应器。\",\"expire_time：响应器的过期时间。\",\"priority：响应器的优先级。\",\"block：是否阻断事件传播。\",\"state：响应器的默认状态。\",\"在消息类型的事件响应器的基础上，NoneBot 还内置了一些常用的响应规则，并结合为辅助函数来方便我们快速创建指定功能的响应器。下面我们逐个介绍。\"]},\"1119\":{\"h\":\"内置响应规则\",\"t\":[\"提示\",\"响应规则的使用方法可以参考 深入 - 响应规则。\"]},\"1120\":{\"h\":\"\",\"t\":[\"startswith 响应规则用于匹配消息纯文本部分的开头是否与指定字符串（或一系列字符串）相同。可选参数 ignorecase 用于指定是否忽略大小写，默认为 False。\",\"例如，我们可以创建一个匹配消息开头为 ! 或者 / 的规则：\",\"from nonebot.rule import startswith rule = startswith((\\\"!\\\", \\\"/\\\"), ignorecase=False)\",\"也可以直接使用辅助函数新建一个响应器：\",\"from nonebot import on_startswith matcher = on_startswith((\\\"!\\\", \\\"/\\\"), ignorecase=False)\"]},\"1121\":{\"h\":\"\",\"t\":[\"endswith 响应规则用于匹配消息纯文本部分的结尾是否与指定字符串（或一系列字符串）相同。可选参数 ignorecase 用于指定是否忽略大小写，默认为 False。\",\"例如，我们可以创建一个匹配消息结尾为 . 或者 。 的规则：\",\"from nonebot.rule import endswith rule = endswith((\\\".\\\", \\\"。\\\"), ignorecase=False)\",\"也可以直接使用辅助函数新建一个响应器：\",\"from nonebot import on_endswith matcher = on_endswith((\\\".\\\", \\\"。\\\"), ignorecase=False)\"]},\"1122\":{\"h\":\"\",\"t\":[\"fullmatch 响应规则用于匹配消息纯文本部分是否与指定字符串（或一系列字符串）完全相同。可选参数 ignorecase 用于指定是否忽略大小写，默认为 False。\",\"例如，我们可以创建一个匹配消息为 ping 或者 pong 的规则：\",\"from nonebot.rule import fullmatch rule = fullmatch((\\\"ping\\\", \\\"pong\\\"), ignorecase=False)\",\"也可以直接使用辅助函数新建一个响应器：\",\"from nonebot import on_fullmatch matcher = on_fullmatch((\\\"ping\\\", \\\"pong\\\"), ignorecase=False)\"]},\"1123\":{\"h\":\"\",\"t\":[\"keyword 响应规则用于匹配消息纯文本部分是否包含指定字符串（或一系列字符串）。\",\"例如，我们可以创建一个匹配消息中包含 hello 或者 hi 的规则：\",\"from nonebot.rule import keyword rule = keyword(\\\"hello\\\", \\\"hi\\\")\",\"也可以直接使用辅助函数新建一个响应器：\",\"from nonebot import on_keyword matcher = on_keyword({\\\"hello\\\", \\\"hi\\\"})\"]},\"1124\":{\"h\":\"\",\"t\":[\"command 是最常用的响应规则，它用于匹配消息是否为命令。它会根据配置中的 Command Start 和 Command Separator 来判断消息是否为命令。\",\"例如，当我们配置了 Command Start 为 /，Command Separator 为 . 时：\",\"from nonebot.rule import command # 匹配 \\\"/help\\\" 或者 \\\"/帮助\\\" 开头的消息 rule = command(\\\"help\\\", \\\"帮助\\\") # 匹配 \\\"/help.cmd\\\" 开头的消息 rule = command((\\\"help\\\", \\\"cmd\\\"))\",\"也可以直接使用辅助函数新建一个响应器：\",\"from nonebot import on_command matcher = on_command(\\\"help\\\", aliases={\\\"帮助\\\"})\",\"此外，command 响应规则默认允许消息命令与参数间不加空格，如果需要严格匹配命令与参数间的空白符，可以使用 command 函数的 force_whitespace 参数。force_whitespace 参数可以是 bool 类型或者具体的字符串，默认为 False。如果为 True，则命令与参数间必须有任意个数的空白符；如果为字符串，则命令与参数间必须有且与给定字符串一致的空白符。\",\"rule = command(\\\"help\\\", force_whitespace=True) rule = command(\\\"help\\\", force_whitespace=\\\" \\\")\",\"命令解析后的结果可以通过 Command、RawCommand、CommandArg、CommandStart、CommandWhitespace 依赖注入获取。\"]},\"1125\":{\"h\":\"\",\"t\":[\"shell_command 响应规则用于匹配类 shell 命令形式的消息。它首先与 command 响应规则一样进行命令匹配，如果匹配成功，则会进行进一步的参数解析。参数解析采用 argparse 标准库进行，在此基础上添加了消息序列 Message 支持。\",\"例如，我们可以创建一个匹配 /cmd 命令并且带有 -v 选项与默认 -h 帮助选项的规则：\",\"from nonebot.rule import shell_command, ArgumentParser parser = ArgumentParser() parser.add_argument(\\\"-v\\\", \\\"--verbose\\\", action=\\\"store_true\\\") rule = shell_command(\\\"cmd\\\", parser=parser)\",\"更多关于 argparse 的使用方法请参考 argparse 文档。我们也可以选择不提供 parser 参数，这样 shell_command 将不会解析参数，但会提供参数列表 argv。\",\"直接使用辅助函数新建一个响应器：\",\"from nonebot import on_shell_command from nonebot.rule import ArgumentParser parser = ArgumentParser() parser.add_argument(\\\"-v\\\", \\\"--verbose\\\", action=\\\"store_true\\\") matcher = on_shell_command(\\\"cmd\\\", parser=parser)\",\"参数解析后的结果可以通过 ShellCommandArgv、ShellCommandArgs 依赖注入获取。\"]},\"1126\":{\"h\":\"\",\"t\":[\"regex 响应规则用于匹配消息是否与指定正则表达式匹配。\",\"提示\",\"正则表达式匹配使用 search 而非 match，如需从头匹配请使用 r\\\"^xxx\\\" 模式来确保匹配开头。\",\"例如，我们可以创建一个匹配消息中包含字母并且忽略大小写的规则：\",\"from nonebot.rule import regex rule = regex(r\\\"[a-z]+\\\", flags=re.IGNORECASE)\",\"也可以直接使用辅助函数新建一个响应器：\",\"from nonebot import on_regex matcher = on_regex(r\\\"[a-z]+\\\", flags=re.IGNORECASE)\",\"正则匹配后的结果可以通过 RegexStr、RegexGroup、RegexDict 依赖注入获取。\"]},\"1127\":{\"h\":\"\",\"t\":[\"to_me 响应规则用于匹配事件是否与机器人相关。\",\"例如：\",\"from nonebot.rule import to_me rule = to_me()\"]},\"1128\":{\"h\":\"\",\"t\":[\"is_type 响应规则用于匹配事件类型是否为指定类型（或者一系列类型）。\",\"例如，我们可以创建一个匹配 OneBot v11 私聊和群聊消息事件的规则：\",\"from nonebot.rule import is_type from nonebot.adapters.onebot.v11 import PrivateMessageEvent, GroupMessageEvent rule = is_type(PrivateMessageEvent, GroupMessageEvent)\"]},\"1129\":{\"h\":\"响应器组\",\"t\":[\"为了更方便的管理一系列功能相近的响应器，NoneBot 提供了两种响应器组，它们可以帮助我们进行响应器的统一管理。\"]},\"1130\":{\"h\":\"\",\"t\":[\"CommandGroup 可以用于管理一系列具有相同前置命令的子命令响应器。\",\"例如，我们创建 /cmd、/cmd.sub、/cmd.help 三个命令，他们具有相同的优先级：\",\"from nonebot import CommandGroup group = CommandGroup(\\\"cmd\\\", priority=10) cmd = group.command(tuple()) sub_cmd = group.command(\\\"sub\\\") help_cmd = group.command(\\\"help\\\")\",\"命令别名 aliases 默认不会添加 CommandGroup 设定的前缀，如果需要为 aliases 添加前缀，可以添加 prefix_aliases=True 参数:\",\"from nonebot import CommandGroup group = CommandGroup(\\\"cmd\\\", prefix_aliases=True) cmd = group.command(tuple()) help_cmd = group.command(\\\"help\\\", aliases={\\\"帮助\\\"})\",\"这样就能成功匹配 /cmd、/cmd.help、/cmd.帮助 命令。如果未设置，将默认匹配 /cmd、/cmd.help、/帮助 命令。\"]},\"1131\":{\"h\":\"\",\"t\":[\"MatcherGroup 可以用于管理一系列具有相同属性的响应器。\",\"例如，我们创建一个具有相同响应规则的响应器组：\",\"from nonebot.rule import to_me from nonebot import MatcherGroup group = MatcherGroup(rule=to_me()) matcher1 = group.on_message() matcher2 = group.on_message()\"]},\"1132\":{\"h\":\"第三方响应规则\"},\"1133\":{\"h\":\"Alconna\",\"t\":[\"nonebot-plugin-alconna 是一类提供了拓展响应规则的插件。 该插件使用 Alconna 作为命令解析器， 是一个简单、灵活、高效的命令参数解析器, 并且不局限于解析命令式字符串。\",\"该插件提供了一类新的事件响应器辅助函数 on_alconna，以及 AlconnaResult 等依赖注入函数。\",\"基于 Alconna 的特性，该插件同时提供了一系列便捷的消息段标注。 标注可用于在 Alconna 中匹配消息中除 text 外的其他消息段，也可用于快速创建各适配器下的消息段。所有标注位于 nonebot_plugin_alconna.adapters 中。\",\"该插件同时通过提供 UniMessage (通用消息模型) 实现了跨平台接收和发送消息的功能。\",\"详情请阅读最佳实践中的 命令解析拓展 章节。\"]},\"1134\":{\"h\":\"插件信息\",\"t\":[\"NoneBot 是一个插件化的框架，可以通过加载插件来扩展功能。同时，我们也可以通过 NoneBot 的插件系统来获取相关信息，例如插件的名称、使用方法，用于收集帮助信息等。下面我们将介绍如何为插件添加元数据，以及如何获取插件信息。\"]},\"1135\":{\"h\":\"插件元数据\",\"t\":[\"在 NoneBot 中，插件 Plugin 对象中存储了插件系统所需要的一系列信息。包括插件的索引名称、插件模块、插件中的事件响应器、插件父子关系等。通常，只有插件开发者才需要关心这些信息，而插件使用者或者机器人用户想要看到的是插件使用方法等帮助信息。因此，我们可以为插件添加插件元数据 PluginMetadata，它允许插件开发者为插件添加一些额外的信息。这些信息编写于插件模块的顶层，可以直接通过源码查看，或者通过 NoneBot 插件系统获取收集到的信息，通过其他方式发送给机器人用户等。\",\"现在，假设我们有一个插件 example, 它的模块结构如下：\",\"📦 awesome-bot ├── 📂 awesome_bot │ └── 📂 plugins | └── 📂 example | ├── 📜 __init__.py | └── 📜 config.py ├── 📜 pyproject.toml └── 📜 README.md\",\"我们需要在插件顶层模块 example/__init__.py 中添加插件元数据，如下所示：\",\"from nonebot.plugin import PluginMetadata from .config import Config __plugin_meta__ = PluginMetadata( name=\\\"示例插件\\\", description=\\\"这是一个示例插件\\\", usage=\\\"没什么用\\\", type=\\\"application\\\", config=Config, extra={}, )\",\"我们可以看到，插件元数据 PluginMetadata 有三个基本属性：插件名称、插件描述、插件使用方法。除此之外，还有几个可选的属性（具体填写见发布插件章节）：\",\"type：插件类别，发布插件必填。当前有效类别有：library（为其他插件编写提供功能），application（向机器人用户提供功能）；\",\"homepage：插件项目主页，发布插件必填；\",\"config：插件的配置类，如无配置类可不填；\",\"supported_adapters：支持的适配器模块名集合，若插件可以保证兼容所有适配器（即仅使用基本适配器功能）可不填写；\",\"extra：一个字典，可以用于存储任意信息。其他插件可以通过约定 extra 字典的键名来达成收集某些特殊信息的目的。\",\"请注意，这里的插件名称是供使用者或机器人用户查看的，与插件索引名称无关。插件索引名称（插件模块名称）仅用于 NoneBot 插件系统内部索引。\"]},\"1136\":{\"h\":\"获取插件信息\",\"t\":[\"NoneBot 提供了多种获取插件对象的方法，例如获取当前所有已导入的插件：\",\"import nonebot plugins: set[Plugin] = nonebot.get_loaded_plugins()\",\"也可以通过插件索引名称获取插件对象：\",\"import nonebot plugin: Plugin | None = nonebot.get_plugin(\\\"example\\\")\",\"或者通过模块路径获取插件对象：\",\"import nonebot plugin: Plugin | None = nonebot.get_plugin_by_module_name(\\\"awesome_bot.plugins.example\\\")\",\"如果需要获取所有当前声明的插件名称（可能还未加载），可以使用 get_available_plugin_names 函数：\",\"import nonebot plugin_names: set[str] = nonebot.get_available_plugin_names()\",\"插件对象 Plugin 中包含了多个属性：\",\"name：插件索引名称\",\"module：插件模块\",\"module_name：插件模块路径\",\"manager：插件管理器\",\"matcher：插件中定义的事件响应器\",\"parent_plugin：插件的父插件\",\"sub_plugins：插件的子插件集合\",\"metadata：插件元数据\",\"通过这些属性以及插件元数据，我们就可以收集所需要的插件信息了。\"]},\"1137\":{\"h\":\"嵌套插件\",\"t\":[\"NoneBot 支持嵌套插件，即一个插件可以包含其他插件。通过这种方式，我们可以将一个大型插件拆分成多个功能子插件，使得插件更加清晰、易于维护。我们可以直接在插件中使用 NoneBot 加载插件的方法来加载子插件。\"]},\"1138\":{\"h\":\"创建嵌套插件\",\"t\":[\"我们可以在使用 nb-cli 命令创建插件时，选择直接通过模板创建一个嵌套插件：\",\"$ nb plugin create [?] 插件名称: parent [?] 使用嵌套插件? (y/N) Y [?] 输出目录: awesome_bot/plugins\",\"或者使用 nb plugin create --sub-plugin 选项直接创建一个嵌套插件。\"]},\"1139\":{\"h\":\"已有插件\",\"t\":[\"如果你已经有一个插件，想要在其中嵌套加载子插件，可以在插件的 __init__.py 中添加如下代码：\",\"import nonebot from pathlib import Path sub_plugins = nonebot.load_plugins( str(Path(__file__).parent.joinpath(\\\"plugins\\\").resolve()) )\",\"这样，parent 插件就会加载 parent/plugins 目录下的所有插件。NoneBot 会正确识别这些插件的父子关系，你可以在 parent 的插件信息中看到这些子插件的信息，也可以在子插件信息中看到它们的父插件信息。\"]},\"1140\":{\"h\":\"跨插件访问\",\"t\":[\"NoneBot 插件化系统的设计使得插件之间可以功能独立、各司其职，我们可以更好地维护和扩展插件。但是，有时候我们可能需要在不同插件之间调用功能。NoneBot 生态中就有一类插件，它们专为其他插件提供功能支持，如：定时任务插件、数据存储插件等。这时候我们就需要在插件之间进行跨插件访问。\"]},\"1141\":{\"h\":\"插件跟踪\",\"t\":[\"由于 NoneBot 插件系统通过 Import Hooks 的方式实现插件加载与跟踪管理，因此我们不能在 NoneBot 跟踪插件前进行模块 import，这会导致插件加载失败。即，我们不能在使用 NoneBot 提供的加载插件方法前，直接使用 import 语句导入插件。\",\"对于在项目目录下的插件，我们通常直接使用 load_from_toml 等方法一次性加载所有插件。由于这些插件已经被声明，即便插件导入顺序不同，NoneBot 也能正确跟踪插件。此时，我们不需要对跨插件访问进行特殊处理。但当我们使用了外部插件，如果没有事先声明或加载插件，NoneBot 并不会将其当作插件进行跟踪，可能会出现意料之外的错误出现。\",\"简单来说，我们必须在 import 外部插件之前，确保依赖的外部插件已经被声明或加载。\"]},\"1142\":{\"h\":\"插件依赖声明\",\"t\":[\"NoneBot 提供了一种方法来确保我们依赖的插件已经被正确加载，即使用 require 函数。通过 require 函数，我们可以在当前插件中声明依赖的插件，NoneBot 会在加载当前插件时，检查依赖的插件是否已经被加载，如果没有，会尝试优先加载依赖的插件。\",\"假设我们有一个插件 a 依赖于插件 b，我们可以在插件 a 中使用 require 函数声明其依赖于插件 b：\",\"from nonebot import require require(\\\"b\\\") from b import some_function\",\"其中，require 函数的参数为插件索引名称或者外部插件的模块名称。在完成依赖声明后，我们可以在插件 a 中直接导入插件 b 所提供的功能。\"]},\"1143\":{\"h\":\"添加路由\",\"t\":[\"在驱动器一节中，我们了解了驱动器的两种类型。既然驱动器可以作为服务端运行，那么我们就可以向驱动器添加路由规则，从而实现自定义的 API 接口等功能。在添加路由规则时，我们需要注意驱动器的类型，详情可以参考选择驱动器。\",\"NoneBot 中，我们可以通过两种途径向 ASGI 驱动器添加路由规则：\",\"通过 NoneBot 的兼容层建立路由规则。\",\"直接向 ASGI 应用添加路由规则。\",\"这两种途径各有优劣，前者可以在各种服务端型驱动器下运行，但并不能直接使用 ASGI 应用框架提供的特性与功能；后者直接使用 ASGI 应用，更自由、功能完整，但只能在特定类型驱动器下运行。\",\"在向驱动器添加路由规则时，我们需要注意驱动器是否为服务端类型，我们可以通过以下方式判断：\",\"from nonebot import get_driver from nonebot.drivers import ASGIMixin # highlight-next-line can_use = isinstance(get_driver(), ASGIMixin)\"]},\"1144\":{\"h\":\"通过兼容层添加路由\",\"t\":[\"NoneBot 兼容层定义了两个数据类 HTTPServerSetup 和 WebSocketServerSetup，分别用于定义 HTTP 服务端和 WebSocket 服务端的路由规则。\"]},\"1145\":{\"h\":\"HTTP 路由\",\"t\":[\"HTTPServerSetup 具有四个属性：\",\"path：路由路径，不支持特殊占位表达式。类型为 URL。\",\"method：请求方法。类型为 str。\",\"name：路由名称，不可重复。类型为 str。\",\"handle_func：路由处理函数。类型为 Callable[[Request], Awaitable[Response]]。\",\"例如，我们添加一个 /hello 的路由，当请求方法为 GET 时，返回 200 OK 以及返回体信息：\",\"from nonebot import get_driver from nonebot.drivers import URL, Request, Response, ASGIMixin, HTTPServerSetup async def hello(request: Request) -> Response: return Response(200, content=\\\"Hello, world!\\\") if isinstance((driver := get_driver()), ASGIMixin): driver.setup_http_server( HTTPServerSetup( path=URL(\\\"/hello\\\"), method=\\\"GET\\\", name=\\\"hello\\\", handle_func=hello, ) )\",\"对于 Request 和 Response 的详细信息，可以参考 API 文档。\"]},\"1146\":{\"h\":\"WebSocket 路由\",\"t\":[\"WebSocketServerSetup 具有三个属性：\",\"path：路由路径，不支持特殊占位表达式。类型为 URL。\",\"name：路由名称，不可重复。类型为 str。\",\"handle_func：路由处理函数。类型为 Callable[[WebSocket], Awaitable[Any]]。\",\"例如，我们添加一个 /ws 的路由，发送所有接收到的数据：\",\"from nonebot import get_driver from nonebot.drivers import URL, ASGIMixin, WebSocket, WebSocketServerSetup async def ws_handler(ws: WebSocket): await ws.accept() try: while True: data = await ws.receive() await ws.send(data) except WebSocketClosed as e: # handle closed ... finally: with contextlib.suppress(Exception): await websocket.close() # do some cleanup if isinstance((driver := get_driver()), ASGIMixin): driver.setup_websocket_server( WebSocketServerSetup( path=URL(\\\"/ws\\\"), name=\\\"ws\\\", handle_func=ws_handler, ) )\",\"对于 WebSocket 的详细信息，可以参考 API 文档。\"]},\"1147\":{\"h\":\"使用 ASGI 应用添加路由\"},\"1148\":{\"h\":\"获取 ASGI 应用\",\"t\":[\"NoneBot 服务端类型的驱动器具有两个属性 server_app 和 asgi，分别对应驱动框架应用和 ASGI 应用。通常情况下，这两个应用是同一个对象。我们可以通过 get_app() 方法快速获取：\",\"import nonebot app = nonebot.get_app() asgi = nonebot.get_asgi()\"]},\"1149\":{\"h\":\"添加路由规则\",\"t\":[\"在获取到了 ASGI 应用后，我们就可以直接使用 ASGI 应用框架提供的功能来添加路由规则了。这里我们以 FastAPI 为例，演示如何添加路由规则。\",\"在下面的代码中，我们添加了一个 GET 类型的 /api 路由，具体方法参考 FastAPI 文档。\",\"import nonebot from fastapi import FastAPI app: FastAPI = nonebot.get_app() @app.get(\\\"/api\\\") async def custom_api(): return {\\\"message\\\": \\\"Hello, world!\\\"}\"]},\"1150\":{\"h\":\"钩子函数\",\"t\":[\"钩子编程（hooking），也称作“挂钩”，是计算机程序设计术语，指通过拦截软件模块间的函数调用、消息传递、事件传递来修改或扩展操作系统、应用程序或其他软件组件的行为的各种技术。处理被拦截的函数调用、事件、消息的代码，被称为钩子（hook）。\",\"在 NoneBot 中有一系列预定义的钩子函数，可以分为两类：全局钩子函数和事件处理钩子函数，这些钩子函数可以用装饰器的形式来使用。\"]},\"1151\":{\"h\":\"全局钩子函数\",\"t\":[\"全局钩子函数是指 NoneBot 针对其本身运行过程的钩子函数。\",\"这些钩子函数是由驱动器来运行的，故需要先获得全局驱动器。\"]},\"1152\":{\"h\":\"启动准备\",\"t\":[\"这个钩子函数会在 NoneBot 启动时运行。很多时候，我们并不希望在模块被导入时就执行一些耗时操作，如：连接数据库，这时候我们可以在这个钩子函数中进行这些操作。\",\"from nonebot import get_driver driver = get_driver() @driver.on_startup async def do_something(): pass\"]},\"1153\":{\"h\":\"终止处理\",\"t\":[\"这个钩子函数会在 NoneBot 终止时运行。我们可以在这个钩子函数中进行一些清理工作，如：关闭数据库连接。\",\"from nonebot import get_driver driver = get_driver() @driver.on_shutdown async def do_something(): pass\"]},\"1154\":{\"h\":\"Bot 连接处理\",\"t\":[\"这个钩子函数会在任何协议适配器连接 Bot 对象至 NoneBot 时运行。支持依赖注入，可以直接注入 Bot 对象。\",\"from nonebot import get_driver driver = get_driver() @driver.on_bot_connect async def do_something(bot: Bot): pass\"]},\"1155\":{\"h\":\"Bot 断开处理\",\"t\":[\"这个钩子函数会在 Bot 断开与 NoneBot 的连接时运行。支持依赖注入，可以直接注入 Bot 对象。\",\"from nonebot import get_driver driver = get_driver() @driver.on_bot_disconnect async def do_something(bot: Bot): pass\"]},\"1156\":{\"h\":\"事件处理钩子函数\",\"t\":[\"这些钩子函数指的是影响 NoneBot 进行事件处理的函数, 这些函数可以跟普通的事件处理函数一样接受相应的参数。\"]},\"1157\":{\"h\":\"事件预处理\",\"t\":[\"这个钩子函数会在 NoneBot 接收到新的事件时运行。支持依赖注入，可以注入 Bot 对象、事件、会话状态。在这个钩子函数内抛出 nonebot.exception.IgnoredException 会使 NoneBot 忽略该事件。\",\"from nonebot.exception import IgnoredException from nonebot.message import event_preprocessor @event_preprocessor async def do_something(event: Event): if not event.is_tome(): raise IgnoredException(\\\"some reason\\\")\"]},\"1158\":{\"h\":\"事件后处理\",\"t\":[\"这个钩子函数会在 NoneBot 处理事件完成后运行。支持依赖注入，可以注入 Bot 对象、事件、会话状态。\",\"from nonebot.message import event_postprocessor @event_postprocessor async def do_something(event: Event): pass\"]},\"1159\":{\"h\":\"运行预处理\",\"t\":[\"这个钩子函数会在 NoneBot 运行事件响应器前运行。支持依赖注入，可以注入 Bot 对象、事件、事件响应器、会话状态。在这个钩子函数内抛出 nonebot.exception.IgnoredException 也会使 NoneBot 忽略本次运行。\",\"from nonebot.message import run_preprocessor from nonebot.exception import IgnoredException @run_preprocessor async def do_something(event: Event, matcher: Matcher): if not event.is_tome(): raise IgnoredException(\\\"some reason\\\")\"]},\"1160\":{\"h\":\"运行后处理\",\"t\":[\"这个钩子函数会在 NoneBot 运行事件响应器后运行。支持依赖注入，可以注入 Bot 对象、事件、事件响应器、会话状态、运行中产生的异常。\",\"from nonebot.message import run_postprocessor @run_postprocessor async def do_something(event: Event, matcher: Matcher, exception: Optional[Exception]): pass\"]},\"1161\":{\"h\":\"平台接口调用钩子\",\"t\":[\"这个钩子函数会在 Bot 对象调用平台接口时运行。在这个钩子函数中，我们可以通过引起 MockApiException 异常来阻止 Bot 对象调用平台接口并返回指定的结果。\",\"from nonebot.adapters import Bot from nonebot.exception import MockApiException @Bot.on_calling_api async def handle_api_call(bot: Bot, api: str, data: Dict[str, Any]): if api == \\\"send_msg\\\": raise MockApiException(result={\\\"message_id\\\": 123})\"]},\"1162\":{\"h\":\"平台接口调用后钩子\",\"t\":[\"这个钩子函数会在 Bot 对象调用平台接口后运行。在这个钩子函数中，我们可以通过引起 MockApiException 异常来忽略平台接口返回的结果并返回指定的结果。\",\"from nonebot.adapters import Bot from nonebot.exception import MockApiException @Bot.on_called_api async def handle_api_result( bot: Bot, exception: Optional[Exception], api: str, data: Dict[str, Any], result: Any ): if not exception and api == \\\"send_msg\\\": raise MockApiException(result={**result, \\\"message_id\\\": 123})\"]},\"1163\":{\"h\":\"会话更新\",\"t\":[\"在 NoneBot 中，在某个事件响应器对事件响应后，即是进入了会话状态，会话状态会持续到整个事件响应流程结束。会话过程中，机器人可以与用户进行多次交互。每次需要等待用户事件时，NoneBot 将会复制一个新的临时事件响应器，并更新该事件响应器使其响应当前会话主体的消息，这个过程称为会话更新。\",\"会话更新分为两部分：更新事件响应器类型和更新事件触发权限。\"]},\"1164\":{\"h\":\"更新事件响应器类型\",\"t\":[\"通常情况下，与机器人用户进行的会话都是通过消息事件进行的，因此会话更新后的默认响应事件类型为 message。如果希望接收一个特定类型的消息，比如 notice 等，我们需要自定义响应事件类型更新函数。响应事件类型更新函数是一个 Dependent，可以使用依赖注入。\",\"foo = on_message() @foo.type_updater async def _() -> str: return \\\"notice\\\"\",\"在注册了上述响应事件类型更新函数后，当我们需要等待用户事件时，将只会响应 notice 类型的事件。如果希望在会话过程中的不同阶段响应不同类型的事件，我们就需要使用更复杂的逻辑来更新响应事件类型（如：根据会话状态），这里将不再展示。\"]},\"1165\":{\"h\":\"更新事件触发权限\",\"t\":[\"会话通常是由机器人与用户进行的一对一交互，因此会话更新后的默认触发权限为当前事件的会话 ID。这个会话 ID 由协议适配器生成，通常由用户 ID 和群 ID 等组成。如果希望实现更复杂的会话功能（如：多用户同时参与的会话），我们需要自定义触发权限更新函数。触发权限更新函数是一个 Dependent，可以使用依赖注入。\",\"from nonebot.permission import User foo = on_message() @foo.permission_updater async def _(event: Event, matcher: Matcher) -> Permission: return Permission(User.from_event(event, perm=matcher.permission))\",\"上述权限更新函数是默认的权限更新函数，它将会话的触发权限更新为当前事件的会话 ID。如果我们希望响应多个用户的消息，我们可以如下修改：\",\"from nonebot.permission import USER foo = on_message() @foo.permission_updater async def _(matcher: Matcher) -> Permission: return USER(\\\"session1\\\", \\\"session2\\\", perm=matcher.permission)\",\"请注意，此处为全大写字母的 USER 权限，它可以匹配多个会话 ID。通过这种方式，我们可以实现多用户同时参与的会话。\",\"我们已经了解了如何控制会话的更新，相信你已经能够实现更复杂的会话功能了，例如多人小游戏等等。欢迎将你的作品分享到插件商店。\"]},\"1166\":{\"h\":\"nonebot.compat\",\"t\":[\"本模块为 Pydantic 版本兼容层模块\",\"为兼容 Pydantic V1 与 V2 版本，定义了一系列兼容函数与类供使用。\"]},\"1167\":{\"h\":\"\",\"t\":[\"类型: untyped\",\"说明: Alias of Ellipsis for compatibility with pydantic v1\"]},\"1168\":{\"h\":\"\",\"t\":[\"说明: Pydantic Undefined object\"]},\"1169\":{\"h\":\"\",\"t\":[\"说明: Pydantic Undefined type\"]},\"1170\":{\"h\":\"\",\"t\":[\"类型: untyped\",\"说明: Default config for validations\"]},\"1171\":{\"h\":\"\",\"t\":[\"说明: FieldInfo class with extra property for compatibility with pydantic v1\",\"参数\",\"default (Any)\",\"**kwargs (Any)\"]},\"1172\":{\"h\":\"\",\"t\":[\"类型: dict[str, Any]\",\"说明\",\"Extra data that is not part of the standard pydantic fields.\",\"For compatibility with pydantic v1.\"]},\"1173\":{\"h\":\"\",\"t\":[\"说明: ModelField class for compatibility with pydantic v1\",\"参数\",\"auto\"]},\"1174\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明: The name of the field.\"]},\"1175\":{\"h\":\"\",\"t\":[\"类型: Any\",\"说明: The annotation of the field.\"]},\"1176\":{\"h\":\"\",\"t\":[\"类型: FieldInfo\",\"说明: The FieldInfo of the field.\"]},\"1177\":{\"h\":\"\",\"t\":[\"说明: Construct a ModelField from given infos.\",\"参数\",\"name (str)\",\"annotation (Any)\",\"field_info (FieldInfo | None)\",\"返回\",\"Self\"]},\"1178\":{\"h\":\"\",\"t\":[\"说明: Get the default value of the field.\",\"参数\",\"empty\",\"返回\",\"Any\"]},\"1179\":{\"h\":\"\",\"t\":[\"说明: Validate the value pass to the field.\",\"参数\",\"value (Any)\",\"返回\",\"Any\"]},\"1180\":{\"h\":\"\",\"t\":[\"说明: Get FieldInfo init kwargs from a FieldInfo instance.\",\"参数\",\"field_info (BaseFieldInfo)\",\"返回\",\"dict[str, Any]\"]},\"1181\":{\"h\":\"\",\"t\":[\"说明: Get field list of a model.\",\"参数\",\"model (type[BaseModel])\",\"返回\",\"list[ModelField]\"]},\"1182\":{\"h\":\"\",\"t\":[\"说明: Get config of a model.\",\"参数\",\"model (type[BaseModel])\",\"返回\",\"Any\"]},\"1183\":{\"h\":\"\",\"t\":[\"参数\",\"model (BaseModel)\",\"include (set[str] | None)\",\"exclude (set[str] | None)\",\"by_alias (bool)\",\"exclude_unset (bool)\",\"exclude_defaults (bool)\",\"exclude_none (bool)\",\"返回\",\"dict[str, Any]\"]},\"1184\":{\"h\":\"\",\"t\":[\"说明: Validate data with given type.\",\"参数\",\"type_ (type[T])\",\"data (Any)\",\"返回\",\"T\"]},\"1185\":{\"h\":\"\",\"t\":[\"说明: Validate JSON with given type.\",\"参数\",\"type_ (type[T])\",\"data (str | bytes)\",\"返回\",\"T\"]},\"1186\":{\"h\":\"\",\"t\":[\"说明: Use pydantic v1 like validator generator in pydantic v2\",\"参数\",\"class_ (type[CVC])\",\"返回\",\"type[CVC]\"]},\"1187\":{\"h\":\"nonebot.config\",\"t\":[\"本模块定义了 NoneBot 本身运行所需的配置项。\",\"NoneBot 使用 pydantic 以及python-dotenv 来读取配置。\",\"配置项需符合特殊格式或 json 序列化格式 详情见 pydantic Field Type 文档。\"]},\"1188\":{\"h\":\"\",\"t\":[\"说明\",\"运行环境配置。大小写不敏感。\",\"将会从 环境变量 > dotenv 配置文件 的优先级读取环境信息。\",\"参数\",\"_env_file (DOTENV_TYPE | None)\",\"_env_file_encoding (str | None)\",\"_env_nested_delimiter (str | None)\",\"**values (Any)\"]},\"1189\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明\",\"当前环境名。\",\"NoneBot 将从 .env.{environment} 文件中加载配置。\"]},\"1190\":{\"h\":\"\",\"t\":[\"说明\",\"NoneBot 主要配置。大小写不敏感。\",\"除了 NoneBot 的配置项外，还可以自行添加配置项到 .env.{environment} 文件中。 这些配置将会在 json 反序列化后一起带入 Config 类中。\",\"配置方法参考: 配置\",\"参数\",\"_env_file (DOTENV_TYPE | None)\",\"_env_file_encoding (str | None)\",\"_env_nested_delimiter (str | None)\",\"**values (Any)\"]},\"1191\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明\",\"NoneBot 运行所使用的 Driver 。继承自 Driver 。\",\"配置格式为 <module>[:<Driver>][+<module>[:<Mixin>]]*。\",\"~ 为 nonebot.drivers. 的缩写。\",\"配置方法参考: 配置驱动器\"]},\"1192\":{\"h\":\"\",\"t\":[\"类型: IPvAnyAddress\",\"说明: NoneBot ReverseDriver 服务端监听的 IP/主机名。\"]},\"1193\":{\"h\":\"\",\"t\":[\"类型: int\",\"说明: NoneBot ReverseDriver 服务端监听的端口。\"]},\"1194\":{\"h\":\"\",\"t\":[\"类型: int | str\",\"说明\",\"NoneBot 日志输出等级，可以为 int 类型等级或等级名称。\",\"参考 记录日志，loguru 日志等级。\",\"提示\",\"日志等级名称应为大写，如 INFO。\",\"用法\",\"LOG_LEVEL=25 LOG_LEVEL=INFO\"]},\"1195\":{\"h\":\"\",\"t\":[\"类型: float | None\",\"说明: API 请求超时时间，单位: 秒。\"]},\"1196\":{\"h\":\"\",\"t\":[\"类型: set[str]\",\"说明: 机器人超级用户。\",\"用法\",\"SUPERUSERS=[\\\"12345789\\\"]\"]},\"1197\":{\"h\":\"\",\"t\":[\"类型: set[str]\",\"说明: 机器人昵称。\"]},\"1198\":{\"h\":\"\",\"t\":[\"类型: set[str]\",\"说明\",\"命令的起始标记，用于判断一条消息是不是命令。\",\"参考命令响应规则。\",\"用法\",\"COMMAND_START=[\\\"/\\\", \\\"\\\"]\"]},\"1199\":{\"h\":\"\",\"t\":[\"类型: set[str]\",\"说明\",\"命令的分隔标记，用于将文本形式的命令切分为元组（实际的命令名）。\",\"参考命令响应规则。\",\"用法\",\"COMMAND_SEP=[\\\".\\\"]\"]},\"1200\":{\"h\":\"\",\"t\":[\"类型: timedelta\",\"说明: 等待用户回复的超时时间。\",\"用法\",\"SESSION_EXPIRE_TIMEOUT=[-][DD]D[,][HH:MM:]SS[.ffffff] SESSION_EXPIRE_TIMEOUT=[±]P[DD]DT[HH]H[MM]M[SS]S # ISO 8601\"]},\"1201\":{\"h\":\"nonebot.consts\",\"t\":[\"本模块包含了 NoneBot 事件处理过程中使用到的常量。\"]},\"1202\":{\"h\":\"\",\"t\":[\"类型: Literal['_receive_{id}']\",\"说明:receive 存储 key\"]},\"1203\":{\"h\":\"\",\"t\":[\"类型: Literal['_last_receive']\",\"说明:last_receive 存储 key\"]},\"1204\":{\"h\":\"\",\"t\":[\"类型: Literal['{key}']\",\"说明:arg 存储 key\"]},\"1205\":{\"h\":\"\",\"t\":[\"类型: Literal['_current_target']\",\"说明: 当前 reject 目标存储 key\"]},\"1206\":{\"h\":\"\",\"t\":[\"类型: Literal['_next_target']\",\"说明: 下一个 reject 目标存储 key\"]},\"1207\":{\"h\":\"\",\"t\":[\"类型: Literal['_pause_result']\",\"说明:pause prompt 发送结果存储 key\"]},\"1208\":{\"h\":\"\",\"t\":[\"类型: Literal['_reject_{key}_result']\",\"说明:reject prompt 发送结果存储 key\"]},\"1209\":{\"h\":\"\",\"t\":[\"类型: Literal['_prefix']\",\"说明: 命令前缀存储 key\"]},\"1210\":{\"h\":\"\",\"t\":[\"类型: Literal['command']\",\"说明: 命令元组存储 key\"]},\"1211\":{\"h\":\"\",\"t\":[\"类型: Literal['raw_command']\",\"说明: 命令文本存储 key\"]},\"1212\":{\"h\":\"\",\"t\":[\"类型: Literal['command_arg']\",\"说明: 命令参数存储 key\"]},\"1213\":{\"h\":\"\",\"t\":[\"类型: Literal['command_start']\",\"说明: 命令开头存储 key\"]},\"1214\":{\"h\":\"\",\"t\":[\"类型: Literal['command_whitespace']\",\"说明: 命令与参数间空白符存储 key\"]},\"1215\":{\"h\":\"\",\"t\":[\"类型: Literal['_args']\",\"说明: shell 命令 parse 后参数字典存储 key\"]},\"1216\":{\"h\":\"\",\"t\":[\"类型: Literal['_argv']\",\"说明: shell 命令原始参数列表存储 key\"]},\"1217\":{\"h\":\"\",\"t\":[\"类型: Literal['_matched']\",\"说明: 正则匹配结果存储 key\"]},\"1218\":{\"h\":\"\",\"t\":[\"类型: Literal['_startswith']\",\"说明: 响应触发前缀 key\"]},\"1219\":{\"h\":\"\",\"t\":[\"类型: Literal['_endswith']\",\"说明: 响应触发后缀 key\"]},\"1220\":{\"h\":\"\",\"t\":[\"类型: Literal['_fullmatch']\",\"说明: 响应触发完整消息 key\"]},\"1221\":{\"h\":\"\",\"t\":[\"类型: Literal['_keyword']\",\"说明: 响应触发关键字 key\"]},\"1222\":{\"h\":\"nonebot.exception\",\"t\":[\"本模块包含了所有 NoneBot 运行时可能会抛出的异常。\",\"这些异常并非所有需要用户处理，在 NoneBot 内部运行时被捕获，并进行对应操作。\",\"NoneBotException ├── ParserExit ├── ProcessException | ├── IgnoredException | ├── SkippedException | | └── TypeMisMatch | ├── MockApiException | └── StopPropagation ├── MatcherException | ├── PausedException | ├── RejectedException | └── FinishedException ├── AdapterException | ├── NoLogException | ├── ApiNotAvailable | ├── NetworkError | └── ActionFailed └── DriverException └── WebSocketClosed\"]},\"1223\":{\"h\":\"\",\"t\":[\"说明: 所有 NoneBot 发生的异常基类。\",\"参数\",\"auto\"]},\"1224\":{\"h\":\"\",\"t\":[\"说明: 处理消息失败时返回的异常。\",\"参数\",\"auto\"]},\"1225\":{\"h\":\"\",\"t\":[\"说明: 事件处理过程中发生的异常基类。\",\"参数\",\"auto\"]},\"1226\":{\"h\":\"\",\"t\":[\"说明: 指示 NoneBot 应该忽略该事件。可由 PreProcessor 抛出。\",\"参数\",\"reason: 忽略事件的原因\"]},\"1227\":{\"h\":\"\",\"t\":[\"说明\",\"指示 NoneBot 立即结束当前 Dependent 的运行。\",\"例如，可以在 Handler 中通过 Matcher.skip 抛出。\",\"参数\",\"auto\",\"用法\",\"def always_skip(): Matcher.skip() @matcher.handle() async def handler(dependency = Depends(always_skip)): # never run\"]},\"1228\":{\"h\":\"\",\"t\":[\"说明: 当前 Handler 的参数类型不匹配。\",\"参数\",\"auto\"]},\"1229\":{\"h\":\"\",\"t\":[\"说明: 指示 NoneBot 阻止本次 API 调用或修改本次调用返回值，并返回自定义内容。 可由 api hook 抛出。\",\"参数\",\"result: 返回的内容\"]},\"1230\":{\"h\":\"\",\"t\":[\"说明\",\"指示 NoneBot 终止事件向下层传播。\",\"在 Matcher.block 为 True 或使用 Matcher.stop_propagation 方法时抛出。\",\"参数\",\"auto\",\"用法\",\"matcher = on_notice(block=True) # 或者 @matcher.handle() async def handler(matcher: Matcher): matcher.stop_propagation()\"]},\"1231\":{\"h\":\"\",\"t\":[\"说明: 所有 Matcher 发生的异常基类。\",\"参数\",\"auto\"]},\"1232\":{\"h\":\"\",\"t\":[\"说明\",\"指示 NoneBot 结束当前 Handler 并等待下一条消息后继续下一个 Handler。 可用于用户输入新信息。\",\"可以在 Handler 中通过 Matcher.pause 抛出。\",\"参数\",\"auto\",\"用法\",\"@matcher.handle() async def handler(): await matcher.pause(\\\"some message\\\")\"]},\"1233\":{\"h\":\"\",\"t\":[\"说明\",\"指示 NoneBot 结束当前 Handler 并等待下一条消息后重新运行当前 Handler。 可用于用户重新输入。\",\"可以在 Handler 中通过 Matcher.reject 抛出。\",\"参数\",\"auto\",\"用法\",\"@matcher.handle() async def handler(): await matcher.reject(\\\"some message\\\")\"]},\"1234\":{\"h\":\"\",\"t\":[\"说明\",\"指示 NoneBot 结束当前 Handler 且后续 Handler 不再被运行。可用于结束用户会话。\",\"可以在 Handler 中通过 Matcher.finish 抛出。\",\"参数\",\"auto\",\"用法\",\"@matcher.handle() async def handler(): await matcher.finish(\\\"some message\\\")\"]},\"1235\":{\"h\":\"\",\"t\":[\"说明: 代表 Adapter 抛出的异常，所有的 Adapter 都要在内部继承自这个 Exception。\",\"参数\",\"adapter_name: 标识 adapter\"]},\"1236\":{\"h\":\"\",\"t\":[\"说明\",\"指示 NoneBot 对当前 Event 进行处理但不显示 Log 信息。\",\"可在 Event.get_log_string 时抛出\",\"参数\",\"auto\"]},\"1237\":{\"h\":\"\",\"t\":[\"说明: 在 API 连接不可用时抛出。\",\"参数\",\"auto\"]},\"1238\":{\"h\":\"\",\"t\":[\"说明: 在网络出现问题时抛出， 如: API 请求地址不正确, API 请求无返回或返回状态非正常等。\",\"参数\",\"auto\"]},\"1239\":{\"h\":\"\",\"t\":[\"说明: API 请求成功返回数据，但 API 操作失败。\",\"参数\",\"auto\"]},\"1240\":{\"h\":\"\",\"t\":[\"说明:Driver 抛出的异常基类。\",\"参数\",\"auto\"]},\"1241\":{\"h\":\"\",\"t\":[\"说明: WebSocket 连接已关闭。\",\"参数\",\"auto\"]},\"1242\":{\"h\":\"nonebot\",\"t\":[\"本模块主要定义了 NoneBot 启动所需函数，供 bot 入口文件调用。\"]},\"1243\":{\"h\":\"快捷导入\",\"t\":[\"为方便使用，本模块从子模块导入了部分内容，以下内容可以直接通过本模块导入:\",\"on => on\",\"on_metaevent => on_metaevent\",\"on_message => on_message\",\"on_notice => on_notice\",\"on_request => on_request\",\"on_startswith => on_startswith\",\"on_endswith => on_endswith\",\"on_fullmatch => on_fullmatch\",\"on_keyword => on_keyword\",\"on_command => on_command\",\"on_shell_command => on_shell_command\",\"on_regex => on_regex\",\"on_type => on_type\",\"CommandGroup => CommandGroup\",\"Matchergroup => MatcherGroup\",\"load_plugin => load_plugin\",\"load_plugins => load_plugins\",\"load_all_plugins => load_all_plugins\",\"load_from_json => load_from_json\",\"load_from_toml => load_from_toml\",\"load_builtin_plugin =>load_builtin_plugin\",\"load_builtin_plugins =>load_builtin_plugins\",\"get_plugin => get_plugin\",\"get_plugin_by_module_name =>get_plugin_by_module_name\",\"get_loaded_plugins =>get_loaded_plugins\",\"get_available_plugin_names =>get_available_plugin_names\",\"get_plugin_config => get_plugin_config\",\"require => require\"]},\"1244\":{\"h\":\"\",\"t\":[\"说明\",\"获取全局 Driver 实例。\",\"可用于在计划任务的回调等情形中获取当前 Driver 实例。\",\"参数\",\"empty\",\"返回\",\"Driver: 全局 Driver 对象\",\"异常\",\"ValueError: 全局 Driver 对象尚未初始化 (nonebot.init 尚未调用)\",\"用法\",\"driver = nonebot.get_driver()\"]},\"1245\":{\"h\":\"\",\"t\":[\"说明: 获取已注册的 Adapter 实例。\",\"重载\",\"1.(name) -> Adapter\",\"参数\",\"name (str): 适配器名称\",\"返回\",\"Adapter: 指定名称的 Adapter 对象\",\"2.(name) -> A\",\"参数\",\"name (type[A]): 适配器类型\",\"返回\",\"A: 指定类型的 Adapter 对象\",\"异常\",\"ValueError: 指定的 Adapter 未注册\",\"ValueError: 全局 Driver 对象尚未初始化 (nonebot.init 尚未调用)\",\"用法\",\"from nonebot.adapters.console import Adapter adapter = nonebot.get_adapter(Adapter)\"]},\"1246\":{\"h\":\"\",\"t\":[\"说明: 获取所有已注册的 Adapter 实例。\",\"参数\",\"empty\",\"返回\",\"dict[str, Adapter]: 所有 Adapter 实例字典\",\"异常\",\"ValueError: 全局 Driver 对象尚未初始化 (nonebot.init 尚未调用)\",\"用法\",\"adapters = nonebot.get_adapters()\"]},\"1247\":{\"h\":\"\",\"t\":[\"说明: 获取全局 ASGIMixin 对应的 Server App 对象。\",\"参数\",\"empty\",\"返回\",\"Any: Server App 对象\",\"异常\",\"AssertionError: 全局 Driver 对象不是 ASGIMixin 类型\",\"ValueError: 全局 Driver 对象尚未初始化 (nonebot.init 尚未调用)\",\"用法\",\"app = nonebot.get_app()\"]},\"1248\":{\"h\":\"\",\"t\":[\"说明: 获取全局 ASGIMixin 对应的 ASGI 对象。\",\"参数\",\"empty\",\"返回\",\"Any: ASGI 对象\",\"异常\",\"AssertionError: 全局 Driver 对象不是 ASGIMixin 类型\",\"ValueError: 全局 Driver 对象尚未初始化 (nonebot.init 尚未调用)\",\"用法\",\"asgi = nonebot.get_asgi()\"]},\"1249\":{\"h\":\"\",\"t\":[\"说明\",\"获取一个连接到 NoneBot 的 Bot 对象。\",\"当提供 self_id 时，此函数是 get_bots()[self_id] 的简写； 当不提供时，返回一个 Bot。\",\"参数\",\"self_id (str | None): 用来识别 Bot 的 Bot.self_id 属性\",\"返回\",\"Bot: Bot 对象\",\"异常\",\"KeyError: 对应 self_id 的 Bot 不存在\",\"ValueError: 没有传入 self_id 且没有 Bot 可用\",\"ValueError: 全局 Driver 对象尚未初始化 (nonebot.init 尚未调用)\",\"用法\",\"assert nonebot.get_bot(\\\"12345\\\") == nonebot.get_bots()[\\\"12345\\\"] another_unspecified_bot = nonebot.get_bot()\"]},\"1250\":{\"h\":\"\",\"t\":[\"说明: 获取所有连接到 NoneBot 的 Bot 对象。\",\"参数\",\"empty\",\"返回\",\"dict[str, Bot]: 一个以 Bot.self_id 为键\",\"Bot 对象为值的字典\",\"异常\",\"ValueError: 全局 Driver 对象尚未初始化 (nonebot.init 尚未调用)\",\"用法\",\"bots = nonebot.get_bots()\"]},\"1251\":{\"h\":\"\",\"t\":[\"说明\",\"初始化 NoneBot 以及 全局 Driver 对象。\",\"NoneBot 将会从 .env 文件中读取环境信息，并使用相应的 env 文件配置。\",\"也可以传入自定义的 _env_file 来指定 NoneBot 从该文件读取配置。\",\"参数\",\"_env_file (DOTENV_TYPE | None): 配置文件名，默认从 .env.{env_name} 中读取配置\",\"**kwargs (Any): 任意变量，将会存储到 Driver.config 对象里\",\"返回\",\"None\",\"用法\",\"nonebot.init(database=Database(...))\"]},\"1252\":{\"h\":\"\",\"t\":[\"说明: 启动 NoneBot，即运行全局 Driver 对象。\",\"参数\",\"*args (Any): 传入 Driver.run 的位置参数\",\"**kwargs (Any): 传入 Driver.run 的命名参数\",\"返回\",\"None\",\"用法\",\"nonebot.run(host=\\\"127.0.0.1\\\", port=8080)\"]},\"1253\":{\"h\":\"nonebot.log\",\"t\":[\"本模块定义了 NoneBot 的日志记录 Logger。\",\"NoneBot 使用 loguru 来记录日志信息。\",\"自定义 logger 请参考 自定义日志 以及 loguru 文档。\"]},\"1254\":{\"h\":\"\",\"t\":[\"类型: Logger\",\"说明\",\"NoneBot 日志记录器对象。\",\"默认信息:\",\"格式: [%(asctime)s %(name)s] %(levelname)s: %(message)s\",\"等级: INFO ，根据 config.log_level 配置改变\",\"输出: 输出至 stdout\",\"用法\",\"from nonebot.log import logger\"]},\"1255\":{\"h\":\"\",\"t\":[\"说明: logging 与 loguru 之间的桥梁，将 logging 的日志转发到 loguru。\",\"参数\",\"auto\"]},\"1256\":{\"h\":\"\",\"t\":[\"参数\",\"record (logging.LogRecord)\",\"返回\",\"untyped\"]},\"1257\":{\"h\":\"\",\"t\":[\"说明: 默认的日志过滤器，根据 config.log_level 配置改变日志等级。\",\"参数\",\"record (Record)\",\"返回\",\"untyped\"]},\"1258\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明: 默认日志格式\"]},\"1259\":{\"h\":\"nonebot.matcher\",\"t\":[\"本模块实现事件响应器的创建与运行，并提供一些快捷方法来帮助用户更好的与机器人进行对话。\"]},\"1260\":{\"h\":\"\",\"t\":[\"类型: untyped\",\"说明: 默认存储器类型\"]},\"1261\":{\"h\":\"\",\"t\":[\"说明: 事件响应器类\",\"参数\",\"empty\"]},\"1262\":{\"h\":\"\",\"t\":[\"类型: ClassVar[str]\",\"说明: 事件响应器类型\"]},\"1263\":{\"h\":\"\",\"t\":[\"类型: ClassVar[Rule]\",\"说明: 事件响应器匹配规则\"]},\"1264\":{\"h\":\"\",\"t\":[\"类型: ClassVar[Permission]\",\"说明: 事件响应器触发权限\"]},\"1265\":{\"h\":\"\",\"t\":[\"类型: ClassVar[list[Dependent[Any]]]\",\"说明: 事件响应器拥有的事件处理函数列表\"]},\"1266\":{\"h\":\"\",\"t\":[\"类型: ClassVar[int]\",\"说明: 事件响应器优先级\"]},\"1267\":{\"h\":\"\",\"t\":[\"类型: bool\",\"说明: 事件响应器是否阻止事件传播\"]},\"1268\":{\"h\":\"\",\"t\":[\"类型: ClassVar[bool]\",\"说明: 事件响应器是否为临时\"]},\"1269\":{\"h\":\"\",\"t\":[\"类型: ClassVar[datetime | None]\",\"说明: 事件响应器过期时间点\"]},\"1270\":{\"h\":\"\",\"t\":[\"说明: 创建一个新的事件响应器，并存储至 matchers <#matchers>_\",\"参数\",\"type_ (str): 事件响应器类型，与 event.get_type() 一致时触发，空字符串表示任意\",\"rule (Rule | None): 匹配规则\",\"permission (Permission | None): 权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器，即触发一次后删除\",\"priority (int): 响应优先级\",\"block (bool): 是否阻止事件向更低优先级的响应器传播\",\"plugin (Plugin | None): Deprecated. 事件响应器所在插件\",\"module (ModuleType | None): Deprecated. 事件响应器所在模块\",\"source (MatcherSource | None): 事件响应器源代码上下文信息\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"default_state (T_State | None): 默认状态 state\",\"default_type_updater (T_TypeUpdater | Dependent[str] | None): 默认事件类型更新函数\",\"default_permission_updater (T_PermissionUpdater | Dependent[Permission] | None): 默认会话权限更新函数\",\"返回\",\"type[Matcher]: 新的事件响应器类\"]},\"1271\":{\"h\":\"\",\"t\":[\"说明: 销毁当前的事件响应器\",\"参数\",\"empty\",\"返回\",\"None\"]},\"1272\":{\"h\":\"\",\"t\":[\"说明: 检查是否满足触发权限\",\"参数\",\"bot (Bot): Bot 对象\",\"event (Event): 上报事件\",\"stack (AsyncExitStack | None): 异步上下文栈\",\"dependency_cache (T_DependencyCache | None): 依赖缓存\",\"返回\",\"bool: 是否满足权限\"]},\"1273\":{\"h\":\"\",\"t\":[\"说明: 检查是否满足匹配规则\",\"参数\",\"bot (Bot): Bot 对象\",\"event (Event): 上报事件\",\"state (T_State): 当前状态\",\"stack (AsyncExitStack | None): 异步上下文栈\",\"dependency_cache (T_DependencyCache | None): 依赖缓存\",\"返回\",\"bool: 是否满足匹配规则\"]},\"1274\":{\"h\":\"\",\"t\":[\"说明: 装饰一个函数来更改当前事件响应器的默认响应事件类型更新函数\",\"参数\",\"func (T_TypeUpdater): 响应事件类型更新函数\",\"返回\",\"T_TypeUpdater\"]},\"1275\":{\"h\":\"\",\"t\":[\"说明: 装饰一个函数来更改当前事件响应器的默认会话权限更新函数\",\"参数\",\"func (T_PermissionUpdater): 会话权限更新函数\",\"返回\",\"T_PermissionUpdater\"]},\"1276\":{\"h\":\"\",\"t\":[\"参数\",\"handler (T_Handler)\",\"parameterless (Iterable[Any] | None)\",\"返回\"]},\"1277\":{\"h\":\"\",\"t\":[\"说明: 装饰一个函数来向事件响应器直接添加一个处理函数\",\"参数\",\"parameterless (Iterable[Any] | None): 非参数类型依赖列表\",\"返回\",\"(T_Handler) -> T_Handler\"]},\"1278\":{\"h\":\"\",\"t\":[\"说明: 装饰一个函数来指示 NoneBot 在接收用户新的一条消息后继续运行该函数\",\"参数\",\"id (str): 消息 ID\",\"parameterless (Iterable[Any] | None): 非参数类型依赖列表\",\"返回\",\"(T_Handler) -> T_Handler\"]},\"1279\":{\"h\":\"\",\"t\":[\"说明\",\"装饰一个函数来指示 NoneBot 获取一个参数 key\",\"当要获取的 key 不存在时接收用户新的一条消息再运行该函数， 如果 key 已存在则直接继续运行\",\"参数\",\"key (str): 参数名\",\"prompt (str | Message | MessageSegment | MessageTemplate | None): 在参数不存在时向用户发送的消息\",\"parameterless (Iterable[Any] | None): 非参数类型依赖列表\",\"返回\",\"(T_Handler) -> T_Handler\"]},\"1280\":{\"h\":\"\",\"t\":[\"说明: 发送一条消息给当前交互用户\",\"参数\",\"message (str | Message | MessageSegment | MessageTemplate): 消息内容\",\"**kwargs (Any): Bot.send 的参数， 请参考对应 adapter 的 bot 对象 api\",\"返回\",\"Any\"]},\"1281\":{\"h\":\"\",\"t\":[\"说明: 发送一条消息给当前交互用户并结束当前事件响应器\",\"参数\",\"message (str | Message | MessageSegment | MessageTemplate | None): 消息内容\",\"**kwargs: Bot.send 的参数， 请参考对应 adapter 的 bot 对象 api\",\"返回\",\"NoReturn\"]},\"1282\":{\"h\":\"\",\"t\":[\"说明: 发送一条消息给当前交互用户并暂停事件响应器，在接收用户新的一条消息后继续下一个处理函数\",\"参数\",\"prompt (str | Message | MessageSegment | MessageTemplate | None): 消息内容\",\"**kwargs: Bot.send 的参数， 请参考对应 adapter 的 bot 对象 api\",\"返回\",\"NoReturn\"]},\"1283\":{\"h\":\"\",\"t\":[\"说明: 最近使用 got / receive 接收的消息不符合预期， 发送一条消息给当前交互用户并将当前事件处理流程中断在当前位置，在接收用户新的一个事件后从头开始执行当前处理函数\",\"参数\",\"prompt (str | Message | MessageSegment | MessageTemplate | None): 消息内容\",\"**kwargs: Bot.send 的参数， 请参考对应 adapter 的 bot 对象 api\",\"返回\",\"NoReturn\"]},\"1284\":{\"h\":\"\",\"t\":[\"说明: 最近使用 got 接收的消息不符合预期， 发送一条消息给当前交互用户并将当前事件处理流程中断在当前位置，在接收用户新的一条消息后从头开始执行当前处理函数\",\"参数\",\"key (str): 参数名\",\"prompt (str | Message | MessageSegment | MessageTemplate | None): 消息内容\",\"**kwargs: Bot.send 的参数， 请参考对应 adapter 的 bot 对象 api\",\"返回\",\"NoReturn\"]},\"1285\":{\"h\":\"\",\"t\":[\"说明: 最近使用 receive 接收的消息不符合预期， 发送一条消息给当前交互用户并将当前事件处理流程中断在当前位置，在接收用户新的一个事件后从头开始执行当前处理函数\",\"参数\",\"id (str): 消息 id\",\"prompt (str | Message | MessageSegment | MessageTemplate | None): 消息内容\",\"**kwargs: Bot.send 的参数， 请参考对应 adapter 的 bot 对象 api\",\"返回\",\"NoReturn\"]},\"1286\":{\"h\":\"\",\"t\":[\"说明\",\"跳过当前事件处理函数，继续下一个处理函数\",\"通常在事件处理函数的依赖中使用。\",\"参数\",\"empty\",\"返回\",\"NoReturn\"]},\"1287\":{\"h\":\"\",\"t\":[\"说明\",\"获取一个 receive 事件\",\"如果没有找到对应的事件，返回 default 值\",\"重载\",\"1.(id) -> Event | None\",\"参数\",\"id (str)\",\"返回\",\"Event | None\",\"2.(id, default) -> Event | T\",\"参数\",\"id (str)\",\"default (T)\",\"返回\",\"Event | T\"]},\"1288\":{\"h\":\"\",\"t\":[\"说明: 设置一个 receive 事件\",\"参数\",\"id (str)\",\"event (Event)\",\"返回\",\"None\"]},\"1289\":{\"h\":\"\",\"t\":[\"说明\",\"获取最近一次 receive 事件\",\"如果没有事件，返回 default 值\",\"重载\",\"1.() -> Event | None\",\"参数\",\"empty\",\"返回\",\"Event | None\",\"2.(default) -> Event | T\",\"参数\",\"default (T)\",\"返回\",\"Event | T\"]},\"1290\":{\"h\":\"\",\"t\":[\"说明\",\"获取一个 got 消息\",\"如果没有找到对应的消息，返回 default 值\",\"重载\",\"1.(key) -> Message | None\",\"参数\",\"key (str)\",\"返回\",\"Message | None\",\"2.(key, default) -> Message | T\",\"参数\",\"key (str)\",\"default (T)\",\"返回\",\"Message | T\"]},\"1291\":{\"h\":\"\",\"t\":[\"说明: 设置一个 got 消息\",\"参数\",\"key (str)\",\"message (Message)\",\"返回\",\"None\"]},\"1292\":{\"h\":\"\",\"t\":[\"参数\",\"target (str)\",\"cache (bool)\",\"返回\",\"None\"]},\"1293\":{\"h\":\"\",\"t\":[\"重载\",\"1.() -> str | None\",\"参数\",\"empty\",\"返回\",\"str | None\",\"2.(default) -> str | T\",\"参数\",\"default (T)\",\"返回\",\"str | T\"]},\"1294\":{\"h\":\"\",\"t\":[\"说明: 阻止事件传播\",\"参数\",\"empty\",\"返回\",\"untyped\"]},\"1295\":{\"h\":\"\",\"t\":[\"参数\",\"bot (Bot)\",\"event (Event)\",\"stack (AsyncExitStack | None)\",\"dependency_cache (T_DependencyCache | None)\",\"返回\",\"str\"]},\"1296\":{\"h\":\"\",\"t\":[\"参数\",\"bot (Bot)\",\"event (Event)\",\"stack (AsyncExitStack | None)\",\"dependency_cache (T_DependencyCache | None)\",\"返回\",\"Permission\"]},\"1297\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"untyped\"]},\"1298\":{\"h\":\"\",\"t\":[\"参数\",\"bot (Bot)\",\"event (Event)\",\"返回\",\"untyped\"]},\"1299\":{\"h\":\"\",\"t\":[\"参数\",\"bot (Bot)\",\"event (Event)\",\"state (T_State)\",\"stack (AsyncExitStack | None)\",\"dependency_cache (T_DependencyCache | None)\",\"返回\",\"untyped\"]},\"1300\":{\"h\":\"\",\"t\":[\"参数\",\"bot (Bot)\",\"event (Event)\",\"state (T_State)\",\"stack (AsyncExitStack | None)\",\"dependency_cache (T_DependencyCache | None)\",\"返回\",\"untyped\"]},\"1301\":{\"h\":\"\",\"t\":[\"说明\",\"事件响应器管理器\",\"实现了常用字典操作，用于管理事件响应器。\",\"参数\",\"empty\"]},\"1302\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"KeysView[int]\"]},\"1303\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"ValuesView[list[type[Matcher]]]\"]},\"1304\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"ItemsView[int, list[type[Matcher]]]\"]},\"1305\":{\"h\":\"\",\"t\":[\"重载\",\"1.(key) -> list[type[Matcher]] | None\",\"参数\",\"key (int)\",\"返回\",\"list[type[Matcher]] | None\",\"2.(key, default) -> list[type[Matcher]] | T\",\"参数\",\"key (int)\",\"default (T)\",\"返回\",\"list[type[Matcher]] | T\"]},\"1306\":{\"h\":\"\",\"t\":[\"参数\",\"key (int)\",\"返回\",\"list[type[Matcher]]\"]},\"1307\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"tuple[int, list[type[Matcher]]]\"]},\"1308\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"None\"]},\"1309\":{\"h\":\"\",\"t\":[\"参数\",\"m (MutableMapping[int, list[type[Matcher]]])\",\"返回\",\"None\"]},\"1310\":{\"h\":\"\",\"t\":[\"参数\",\"key (int)\",\"default (list[type[Matcher]])\",\"返回\",\"list[type[Matcher]]\"]},\"1311\":{\"h\":\"\",\"t\":[\"说明: 设置事件响应器存储器\",\"参数\",\"provider_class (type[MatcherProvider]): 事件响应器存储器类\",\"返回\",\"None\"]},\"1312\":{\"h\":\"\",\"t\":[\"说明: 事件响应器存储器基类\",\"参数\",\"matchers (Mapping[int, list[type[Matcher]]]): 当前存储器中已有的事件响应器\"]},\"1313\":{\"h\":\"\",\"t\":[\"类型: untyped\"]},\"1314\":{\"h\":\"nonebot.message\",\"t\":[\"本模块定义了事件处理主要流程。\",\"NoneBot 内部处理并按优先级分发事件给所有事件响应器，提供了多个插槽以进行事件的预处理等。\"]},\"1315\":{\"h\":\"\",\"t\":[\"说明\",\"事件预处理。\",\"装饰一个函数，使它在每次接收到事件并分发给各响应器之前执行。\",\"参数\",\"func (T_EventPreProcessor)\",\"返回\",\"T_EventPreProcessor\"]},\"1316\":{\"h\":\"\",\"t\":[\"说明\",\"事件后处理。\",\"装饰一个函数，使它在每次接收到事件并分发给各响应器之后执行。\",\"参数\",\"func (T_EventPostProcessor)\",\"返回\",\"T_EventPostProcessor\"]},\"1317\":{\"h\":\"\",\"t\":[\"说明\",\"运行预处理。\",\"装饰一个函数，使它在每次事件响应器运行前执行。\",\"参数\",\"func (T_RunPreProcessor)\",\"返回\",\"T_RunPreProcessor\"]},\"1318\":{\"h\":\"\",\"t\":[\"说明\",\"运行后处理。\",\"装饰一个函数，使它在每次事件响应器运行后执行。\",\"参数\",\"func (T_RunPostProcessor)\",\"返回\",\"T_RunPostProcessor\"]},\"1319\":{\"h\":\"\",\"t\":[\"说明: 检查并运行事件响应器。\",\"参数\",\"Matcher (type[Matcher]): 事件响应器\",\"bot (Bot): Bot 对象\",\"event (Event): Event 对象\",\"state (T_State): 会话状态\",\"stack (AsyncExitStack | None): 异步上下文栈\",\"dependency_cache (T_DependencyCache | None): 依赖缓存\",\"返回\",\"None\"]},\"1320\":{\"h\":\"\",\"t\":[\"说明: 处理一个事件。调用该函数以实现分发事件。\",\"参数\",\"bot (Bot): Bot 对象\",\"event (Event): Event 对象\",\"返回\",\"None\",\"用法\",\"driver.task_group.start_soon(handle_event, bot, event)\"]},\"1321\":{\"h\":\"nonebot.params\",\"t\":[\"本模块定义了依赖注入的各类参数。\"]},\"1322\":{\"h\":\"\",\"t\":[\"说明: Arg 参数消息\",\"参数\",\"key (str | None)\",\"返回\",\"Any\"]},\"1323\":{\"h\":\"\",\"t\":[\"说明\",\"Arg 注入参数\",\"本注入解析事件响应器操作 got 所获取的参数。\",\"可以通过 Arg、ArgStr、ArgPlainText 等函数参数 key 指定获取的参数， 留空则会根据参数名称获取。\",\"参数\",\"*args\",\"key (str)\",\"type (Literal['message', 'str', 'plaintext', 'prompt'])\",\"**kwargs (Any)\"]},\"1324\":{\"h\":\"\",\"t\":[\"说明: Arg 参数消息纯文本\",\"参数\",\"key (str | None)\",\"返回\",\"str\"]},\"1325\":{\"h\":\"\",\"t\":[\"说明:arg prompt 发送结果\",\"参数\",\"key (str | None)\",\"返回\",\"Any\"]},\"1326\":{\"h\":\"\",\"t\":[\"说明: Arg 参数消息文本\",\"参数\",\"key (str | None)\",\"返回\",\"str\"]},\"1327\":{\"h\":\"\",\"t\":[\"说明\",\"注入参数。\",\"本注入解析所有类型为且仅为 Bot 及其子类或 None 的参数。\",\"为保证兼容性，本注入还会解析名为 bot 且没有类型注解的参数。\",\"参数\",\"*args\",\"checker (ModelField | None)\",\"**kwargs (Any)\"]},\"1328\":{\"h\":\"\",\"t\":[\"说明\",\"默认值注入参数\",\"本注入解析所有剩余未能解析且具有默认值的参数。\",\"本注入参数应该具有最低优先级，因此应该在所有其他注入参数之后使用。\",\"参数\",\"*args\",\"validate (bool)\",\"**kwargs (Any)\"]},\"1329\":{\"h\":\"\",\"t\":[\"说明\",\"子依赖注入参数。\",\"本注入解析所有子依赖注入，然后将它们的返回值作为参数值传递给父依赖。\",\"本注入应该具有最高优先级，因此应该在其他参数之前检查。\",\"参数\",\"*args\",\"dependent (Dependent[Any])\",\"use_cache (bool)\",\"**kwargs (Any)\"]},\"1330\":{\"h\":\"\",\"t\":[\"说明: 子依赖装饰器\",\"参数\",\"dependency (T_Handler | None): 依赖函数。默认为参数的类型注释。\",\"use_cache (bool): 是否使用缓存。默认为 True。\",\"validate (bool | PydanticFieldInfo): 是否使用 Pydantic 类型校验。默认为 False。\",\"返回\",\"Any\",\"用法\",\"def depend_func() -> Any: return ... def depend_gen_func(): try: yield ... finally: ... async def handler( param_name: Any = Depends(depend_func), gen: Any = Depends(depend_gen_func), ): ...\"]},\"1331\":{\"h\":\"\",\"t\":[\"说明\",\"注入参数\",\"本注入解析所有类型为且仅为 Event 及其子类或 None 的参数。\",\"为保证兼容性，本注入还会解析名为 event 且没有类型注解的参数。\",\"参数\",\"*args\",\"checker (ModelField | None)\",\"**kwargs (Any)\"]},\"1332\":{\"h\":\"\",\"t\":[\"说明\",\"的异常注入参数\",\"本注入解析所有类型为 Exception 或 None 的参数。\",\"为保证兼容性，本注入还会解析名为 exception 且没有类型注解的参数。\",\"参数\",\"*args\",\"validate (bool)\",\"**kwargs (Any)\"]},\"1333\":{\"h\":\"\",\"t\":[\"说明\",\"事件响应器实例注入参数\",\"本注入解析所有类型为且仅为 Matcher 及其子类或 None 的参数。\",\"为保证兼容性，本注入还会解析名为 matcher 且没有类型注解的参数。\",\"参数\",\"*args\",\"checker (ModelField | None)\",\"**kwargs (Any)\"]},\"1334\":{\"h\":\"\",\"t\":[\"说明\",\"事件处理状态注入参数\",\"本注入解析所有类型为 T_State 的参数。\",\"为保证兼容性，本注入还会解析名为 state 且没有类型注解的参数。\",\"参数\",\"*args\",\"validate (bool)\",\"**kwargs (Any)\"]},\"1335\":{\"h\":\"\",\"t\":[\"说明: 类型参数\",\"参数\",\"empty\",\"返回\",\"str\"]},\"1336\":{\"h\":\"\",\"t\":[\"说明: 消息参数\",\"参数\",\"empty\",\"返回\",\"Any\"]},\"1337\":{\"h\":\"\",\"t\":[\"说明: 纯文本消息参数\",\"参数\",\"empty\",\"返回\",\"str\"]},\"1338\":{\"h\":\"\",\"t\":[\"说明:to_me 参数\",\"参数\",\"empty\",\"返回\",\"bool\"]},\"1339\":{\"h\":\"\",\"t\":[\"说明: 消息命令元组\",\"参数\",\"empty\",\"返回\",\"tuple[str, ...]\"]},\"1340\":{\"h\":\"\",\"t\":[\"说明: 消息命令文本\",\"参数\",\"empty\",\"返回\",\"str\"]},\"1341\":{\"h\":\"\",\"t\":[\"说明: 消息命令参数\",\"参数\",\"empty\",\"返回\",\"Any\"]},\"1342\":{\"h\":\"\",\"t\":[\"说明: 消息命令开头\",\"参数\",\"empty\",\"返回\",\"str\"]},\"1343\":{\"h\":\"\",\"t\":[\"说明: 消息命令与参数之间的空白\",\"参数\",\"empty\",\"返回\",\"str\"]},\"1344\":{\"h\":\"\",\"t\":[\"说明: shell 命令解析后的参数字典\",\"参数\",\"empty\",\"返回\",\"Any\"]},\"1345\":{\"h\":\"\",\"t\":[\"说明: shell 命令原始参数列表\",\"参数\",\"empty\",\"返回\",\"Any\"]},\"1346\":{\"h\":\"\",\"t\":[\"说明: 正则匹配结果\",\"参数\",\"empty\",\"返回\",\"Match[str]\"]},\"1347\":{\"h\":\"\",\"t\":[\"说明: 正则匹配结果文本\",\"重载\",\"1.(group, /) -> str\",\"参数\",\"group (Literal[0])\",\"返回\",\"str\",\"2.(group, /) -> str | Any\",\"参数\",\"group (str | int)\",\"返回\",\"str | Any\",\"3.(group1, group2, /, *groups) -> tuple[str | Any, ...]\",\"参数\",\"group1 (str | int)\",\"group2 (str | int)\",\"*groups (str | int)\",\"返回\",\"tuple[str | Any, ...]\"]},\"1348\":{\"h\":\"\",\"t\":[\"说明: 正则匹配结果 group 元组\",\"参数\",\"empty\",\"返回\",\"tuple[Any, ...]\"]},\"1349\":{\"h\":\"\",\"t\":[\"说明: 正则匹配结果 group 字典\",\"参数\",\"empty\",\"返回\",\"dict[str, Any]\"]},\"1350\":{\"h\":\"\",\"t\":[\"说明: 响应触发前缀\",\"参数\",\"empty\",\"返回\",\"str\"]},\"1351\":{\"h\":\"\",\"t\":[\"说明: 响应触发后缀\",\"参数\",\"empty\",\"返回\",\"str\"]},\"1352\":{\"h\":\"\",\"t\":[\"说明: 响应触发完整消息\",\"参数\",\"empty\",\"返回\",\"str\"]},\"1353\":{\"h\":\"\",\"t\":[\"说明: 响应触发关键字\",\"参数\",\"empty\",\"返回\",\"str\"]},\"1354\":{\"h\":\"\",\"t\":[\"说明:receive 事件参数\",\"参数\",\"id (str | None)\",\"default (Any)\",\"返回\",\"Any\"]},\"1355\":{\"h\":\"\",\"t\":[\"说明:last_receive 事件参数\",\"参数\",\"default (Any)\",\"返回\",\"Any\"]},\"1356\":{\"h\":\"\",\"t\":[\"说明:receive prompt 发送结果\",\"参数\",\"id (str | None)\",\"返回\",\"Any\"]},\"1357\":{\"h\":\"\",\"t\":[\"说明:pause prompt 发送结果\",\"参数\",\"empty\",\"返回\",\"Any\"]},\"1358\":{\"h\":\"nonebot.permission\",\"t\":[\"本模块是 Matcher.permission 的类型定义。\",\"每个事件响应器 拥有一个 Permission，其中是 PermissionChecker 的集合。 只要有一个 PermissionChecker 检查结果为 True 时就会继续运行。\"]},\"1359\":{\"h\":\"\",\"t\":[\"说明\",\"匹配当前事件属于指定会话。\",\"如果 perm 中仅有 User 类型的权限检查函数，则会去除原有检查函数的会话 ID 限制。\",\"参数\",\"*users (str)\",\"perm (Permission | None): 需要同时满足的权限\",\"user: 会话白名单\",\"返回\",\"untyped\"]},\"1360\":{\"h\":\"\",\"t\":[\"说明\",\"权限类。\",\"当事件传递时，在 Matcher 运行前进行检查。\",\"参数\",\"*checkers (T_PermissionChecker | Dependent[bool]): PermissionChecker\",\"用法\",\"Permission(async_function) | sync_function # 等价于 Permission(async_function, sync_function)\"]},\"1361\":{\"h\":\"\",\"t\":[\"类型: set[Dependent[bool]]\",\"说明: 存储 PermissionChecker\"]},\"1362\":{\"h\":\"\",\"t\":[\"说明: 检查是否满足某个权限。\",\"参数\",\"bot (Bot): Bot 对象\",\"event (Event): Event 对象\",\"stack (AsyncExitStack | None): 异步上下文栈\",\"dependency_cache (T_DependencyCache | None): 依赖缓存\",\"返回\",\"bool\"]},\"1363\":{\"h\":\"\",\"t\":[\"说明: 检查当前事件是否属于指定会话。\",\"参数\",\"users (tuple[str, ...]): 会话 ID 元组\",\"perm (Permission | None): 需同时满足的权限\"]},\"1364\":{\"h\":\"\",\"t\":[\"说明\",\"从事件中获取会话 ID。\",\"如果 perm 中仅有 User 类型的权限检查函数，则会去除原有的会话 ID 限制。\",\"参数\",\"event (Event): Event 对象\",\"perm (Permission | None): 需同时满足的权限\",\"返回\",\"Self\"]},\"1365\":{\"h\":\"\",\"t\":[\"说明\",\"指定会话与权限。\",\"如果 perm 中仅有 User 类型的权限检查函数，则会去除原有的会话 ID 限制。\",\"参数\",\"*users (str): 会话白名单\",\"perm (Permission | None): 需同时满足的权限\",\"返回\",\"Self\"]},\"1366\":{\"h\":\"\",\"t\":[\"说明: 检查是否为消息事件\",\"参数\",\"auto\"]},\"1367\":{\"h\":\"\",\"t\":[\"说明: 检查是否为通知事件\",\"参数\",\"auto\"]},\"1368\":{\"h\":\"\",\"t\":[\"说明: 检查是否为请求事件\",\"参数\",\"auto\"]},\"1369\":{\"h\":\"\",\"t\":[\"说明: 检查是否为元事件\",\"参数\",\"auto\"]},\"1370\":{\"h\":\"\",\"t\":[\"类型:Permission\",\"说明\",\"匹配任意 message 类型事件\",\"仅在需要同时捕获不同类型事件时使用，优先使用 message type 的 Matcher。\"]},\"1371\":{\"h\":\"\",\"t\":[\"类型:Permission\",\"说明\",\"匹配任意 notice 类型事件\",\"仅在需要同时捕获不同类型事件时使用，优先使用 notice type 的 Matcher。\"]},\"1372\":{\"h\":\"\",\"t\":[\"类型:Permission\",\"说明\",\"匹配任意 request 类型事件\",\"仅在需要同时捕获不同类型事件时使用，优先使用 request type 的 Matcher。\"]},\"1373\":{\"h\":\"\",\"t\":[\"类型:Permission\",\"说明\",\"匹配任意 meta_event 类型事件\",\"仅在需要同时捕获不同类型事件时使用，优先使用 meta_event type 的 Matcher。\"]},\"1374\":{\"h\":\"\",\"t\":[\"说明: 检查当前事件是否是消息事件且属于超级管理员\",\"参数\",\"auto\"]},\"1375\":{\"h\":\"\",\"t\":[\"类型:Permission\",\"说明: 匹配任意超级用户事件\"]},\"1376\":{\"h\":\"nonebot.rule\",\"t\":[\"本模块是 Matcher.rule 的类型定义。\",\"每个事件响应器拥有一个Rule，其中是 RuleChecker 的集合。 只有当所有 RuleChecker 检查结果为 True 时继续运行。\"]},\"1377\":{\"h\":\"\",\"t\":[\"说明\",\"规则类。\",\"当事件传递时，在 Matcher 运行前进行检查。\",\"参数\",\"*checkers (T_RuleChecker | Dependent[bool]): RuleChecker\",\"用法\",\"Rule(async_function) & sync_function # 等价于 Rule(async_function, sync_function)\"]},\"1378\":{\"h\":\"\",\"t\":[\"类型: set[Dependent[bool]]\",\"说明: 存储 RuleChecker\"]},\"1379\":{\"h\":\"\",\"t\":[\"说明: 检查是否符合所有规则\",\"参数\",\"bot (Bot): Bot 对象\",\"event (Event): Event 对象\",\"state (T_State): 当前 State\",\"stack (AsyncExitStack | None): 异步上下文栈\",\"dependency_cache (T_DependencyCache | None): 依赖缓存\",\"返回\",\"bool\"]},\"1380\":{\"h\":\"\",\"t\":[\"参数\",\"auto\"]},\"1381\":{\"h\":\"\",\"t\":[\"说明: TRIE_VALUE(command_start, command)\",\"参数\",\"auto\"]},\"1382\":{\"h\":\"\",\"t\":[\"说明: 检查消息纯文本是否以指定字符串开头。\",\"参数\",\"msg (tuple[str, ...]): 指定消息开头字符串元组\",\"ignorecase (bool): 是否忽略大小写\"]},\"1383\":{\"h\":\"\",\"t\":[\"说明: 匹配消息纯文本开头。\",\"参数\",\"msg (str | tuple[str, ...]): 指定消息开头字符串元组\",\"ignorecase (bool): 是否忽略大小写\",\"返回\",\"Rule\"]},\"1384\":{\"h\":\"\",\"t\":[\"说明: 检查消息纯文本是否以指定字符串结尾。\",\"参数\",\"msg (tuple[str, ...]): 指定消息结尾字符串元组\",\"ignorecase (bool): 是否忽略大小写\"]},\"1385\":{\"h\":\"\",\"t\":[\"说明: 匹配消息纯文本结尾。\",\"参数\",\"msg (str | tuple[str, ...]): 指定消息开头字符串元组\",\"ignorecase (bool): 是否忽略大小写\",\"返回\",\"Rule\"]},\"1386\":{\"h\":\"\",\"t\":[\"说明: 检查消息纯文本是否与指定字符串全匹配。\",\"参数\",\"msg (tuple[str, ...]): 指定消息全匹配字符串元组\",\"ignorecase (bool): 是否忽略大小写\"]},\"1387\":{\"h\":\"\",\"t\":[\"说明: 完全匹配消息。\",\"参数\",\"msg (str | tuple[str, ...]): 指定消息全匹配字符串元组\",\"ignorecase (bool): 是否忽略大小写\",\"返回\",\"Rule\"]},\"1388\":{\"h\":\"\",\"t\":[\"说明: 检查消息纯文本是否包含指定关键字。\",\"参数\",\"*keywords (str): 指定关键字元组\"]},\"1389\":{\"h\":\"\",\"t\":[\"说明: 匹配消息纯文本关键词。\",\"参数\",\"*keywords (str): 指定关键字元组\",\"返回\",\"Rule\"]},\"1390\":{\"h\":\"\",\"t\":[\"说明: 检查消息是否为指定命令。\",\"参数\",\"cmds (list[tuple[str, ...]]): 指定命令元组列表\",\"force_whitespace (str | bool | None): 是否强制命令后必须有指定空白符\"]},\"1391\":{\"h\":\"\",\"t\":[\"说明\",\"匹配消息命令。\",\"根据配置里提供的 command_start,command_sep 判断消息是否为命令。\",\"可以通过 Command 获取匹配成功的命令（例: (\\\"test\\\",)）， 通过 RawCommand 获取匹配成功的原始命令文本（例: \\\"/test\\\"）， 通过 CommandArg 获取匹配成功的命令参数。\",\"参数\",\"*cmds (str | tuple[str, ...]): 命令文本或命令元组\",\"force_whitespace (str | bool | None): 是否强制命令后必须有指定空白符\",\"返回\",\"Rule\",\"用法\",\"使用默认 command_start, command_sep 配置情况下：\",\"命令 (\\\"test\\\",) 可以匹配: /test 开头的消息 命令 (\\\"test\\\", \\\"sub\\\") 可以匹配: /test.sub 开头的消息\",\"提示\",\"命令内容与后续消息间无需空格!\"]},\"1392\":{\"h\":\"\",\"t\":[\"说明\",\"shell_like 命令参数解析器，解析出错时不会退出程序。\",\"支持 Message 富文本解析。\",\"参数\",\"auto\",\"用法\",\"用法与 argparse.ArgumentParser 相同， 参考文档: argparse\"]},\"1393\":{\"h\":\"\",\"t\":[\"重载\",\"1.(args=None, namespace=None) -> tuple[Namespace, list[str | MessageSegment]]\",\"参数\",\"args (Sequence[str | MessageSegment] | None)\",\"namespace (None)\",\"返回\",\"tuple[Namespace, list[str | MessageSegment]]\",\"2.(args, namespace) -> tuple[T, list[str | MessageSegment]]\",\"参数\",\"args (Sequence[str | MessageSegment] | None)\",\"namespace (T)\",\"返回\",\"tuple[T, list[str | MessageSegment]]\",\"3.(*, namespace) -> tuple[T, list[str | MessageSegment]]\",\"参数\",\"namespace (T)\",\"返回\",\"tuple[T, list[str | MessageSegment]]\"]},\"1394\":{\"h\":\"\",\"t\":[\"说明: 检查消息是否为指定 shell 命令。\",\"参数\",\"cmds (list[tuple[str, ...]]): 指定命令元组列表\",\"parser (ArgumentParser | None): 可选参数解析器\"]},\"1395\":{\"h\":\"\",\"t\":[\"说明\",\"匹配 shell_like 形式的消息命令。\",\"根据配置里提供的 command_start,command_sep 判断消息是否为命令。\",\"可以通过 Command 获取匹配成功的命令 （例: (\\\"test\\\",)）， 通过 RawCommand 获取匹配成功的原始命令文本 （例: \\\"/test\\\"）， 通过 ShellCommandArgv 获取解析前的参数列表 （例: [\\\"arg\\\", \\\"-h\\\"]）， 通过 ShellCommandArgs 获取解析后的参数字典 （例: {\\\"arg\\\": \\\"arg\\\", \\\"h\\\": True}）。\",\"警告\",\"如果参数解析失败，则通过 ShellCommandArgs 获取的将是 ParserExit 异常。\",\"参数\",\"*cmds (str | tuple[str, ...]): 命令文本或命令元组\",\"parser (ArgumentParser | None): ArgumentParser 对象\",\"返回\",\"Rule\",\"用法\",\"使用默认 command_start, command_sep 配置，更多示例参考argparse 标准库文档。\",\"from nonebot.rule import ArgumentParser parser = ArgumentParser() parser.add_argument(\\\"-a\\\", action=\\\"store_true\\\") rule = shell_command(\\\"ls\\\", parser=parser)\",\"提示\",\"命令内容与后续消息间无需空格!\"]},\"1396\":{\"h\":\"\",\"t\":[\"说明: 检查消息字符串是否符合指定正则表达式。\",\"参数\",\"regex (str): 正则表达式\",\"flags (int): 正则表达式标记\"]},\"1397\":{\"h\":\"\",\"t\":[\"说明\",\"匹配符合正则表达式的消息字符串。\",\"可以通过 RegexStr 获取匹配成功的字符串， 通过 RegexGroup 获取匹配成功的 group 元组， 通过 RegexDict 获取匹配成功的 group 字典。\",\"参数\",\"regex (str): 正则表达式\",\"flags (int | re.RegexFlag): 正则表达式标记\",\"返回\",\"Rule\",\"提示\",\"正则表达式匹配使用 search 而非 match，如需从头匹配请使用 r\\\"^xxx\\\" 来确保匹配开头\",\"提示\",\"正则表达式匹配使用 EventMessage 的 str 字符串， 而非 EventMessage 的 PlainText 纯文本字符串\"]},\"1398\":{\"h\":\"\",\"t\":[\"说明: 检查事件是否与机器人有关。\",\"参数\",\"auto\"]},\"1399\":{\"h\":\"\",\"t\":[\"说明: 匹配与机器人有关的事件。\",\"参数\",\"empty\",\"返回\",\"Rule\"]},\"1400\":{\"h\":\"\",\"t\":[\"说明: 检查事件类型是否为指定类型。\",\"参数\",\"*types (type[Event])\"]},\"1401\":{\"h\":\"\",\"t\":[\"说明: 匹配事件类型。\",\"参数\",\"*types (type[Event]): 事件类型\",\"返回\",\"Rule\"]},\"1402\":{\"h\":\"nonebot.typing\",\"t\":[\"本模块定义了 NoneBot 模块中共享的一些类型。\",\"使用 Python 的 Type Hint 语法， 参考 PEP 484,PEP 526 和typing。\"]},\"1403\":{\"h\":\"\",\"t\":[\"说明: 标记一个方法为父类 interface 的 implement\",\"参数\",\"InterfaceClass (object)\",\"返回\",\"untyped\"]},\"1404\":{\"h\":\"\",\"t\":[\"参数\",\"type_ (type[Any])\",\"返回\",\"bool\"]},\"1405\":{\"h\":\"\",\"t\":[\"参数\",\"origin (type[Any] | None)\",\"返回\",\"bool\"]},\"1406\":{\"h\":\"\",\"t\":[\"说明: 判断是否是 Literal 类型\",\"参数\",\"origin (type[Any] | None)\",\"返回\",\"bool\"]},\"1407\":{\"h\":\"\",\"t\":[\"说明: 获取 Literal 类型包含的所有值\",\"参数\",\"type_ (type[Any])\",\"返回\",\"list[Any]\"]},\"1408\":{\"h\":\"\",\"t\":[\"说明: 判断是否是 Annotated 类型\",\"参数\",\"origin (type[Any] | None)\",\"返回\",\"bool\"]},\"1409\":{\"h\":\"\",\"t\":[\"说明: 判断是否是 None 类型\",\"参数\",\"type_ (type[Any])\",\"返回\",\"bool\"]},\"1410\":{\"h\":\"\",\"t\":[\"参数\",\"ref (ForwardRef)\",\"globalns (dict[str, Any])\",\"localns (dict[str, Any])\",\"返回\",\"Any\"]},\"1411\":{\"h\":\"\",\"t\":[\"参数\",\"auto\"]},\"1412\":{\"h\":\"\",\"t\":[\"类型: dict[Any, Any]\",\"说明: 事件处理状态 State 类型\"]},\"1413\":{\"h\":\"\",\"t\":[\"类型: _DependentCallable[Any]\",\"说明\",\"Bot 连接建立时钩子函数\",\"依赖参数:\",\"DependParam: 子依赖参数\",\"BotParam: Bot 对象\",\"DefaultParam: 带有默认值的参数\"]},\"1414\":{\"h\":\"\",\"t\":[\"类型: _DependentCallable[Any]\",\"说明\",\"Bot 连接断开时钩子函数\",\"依赖参数:\",\"DependParam: 子依赖参数\",\"BotParam: Bot 对象\",\"DefaultParam: 带有默认值的参数\"]},\"1415\":{\"h\":\"\",\"t\":[\"类型: (Bot, str, dict[str, Any]) -> Awaitable[Any]\",\"说明:bot.call_api 钩子函数\"]},\"1416\":{\"h\":\"\",\"t\":[\"类型: (Bot, Exception | None, str, dict[str, Any], Any) -> Awaitable[Any]\",\"说明:bot.call_api 后执行的函数，参数分别为 bot, exception, api, data, result\"]},\"1417\":{\"h\":\"\",\"t\":[\"类型: _DependentCallable[Any]\",\"说明\",\"事件预处理函数 EventPreProcessor 类型\",\"依赖参数:\",\"DependParam: 子依赖参数\",\"BotParam: Bot 对象\",\"EventParam: Event 对象\",\"StateParam: State 对象\",\"DefaultParam: 带有默认值的参数\"]},\"1418\":{\"h\":\"\",\"t\":[\"类型: _DependentCallable[Any]\",\"说明\",\"事件后处理函数 EventPostProcessor 类型\",\"依赖参数:\",\"DependParam: 子依赖参数\",\"BotParam: Bot 对象\",\"EventParam: Event 对象\",\"StateParam: State 对象\",\"DefaultParam: 带有默认值的参数\"]},\"1419\":{\"h\":\"\",\"t\":[\"类型: _DependentCallable[Any]\",\"说明\",\"事件响应器运行前预处理函数 RunPreProcessor 类型\",\"依赖参数:\",\"DependParam: 子依赖参数\",\"BotParam: Bot 对象\",\"EventParam: Event 对象\",\"StateParam: State 对象\",\"MatcherParam: Matcher 对象\",\"DefaultParam: 带有默认值的参数\"]},\"1420\":{\"h\":\"\",\"t\":[\"类型: _DependentCallable[Any]\",\"说明\",\"事件响应器运行后后处理函数 RunPostProcessor 类型\",\"依赖参数:\",\"DependParam: 子依赖参数\",\"BotParam: Bot 对象\",\"EventParam: Event 对象\",\"StateParam: State 对象\",\"MatcherParam: Matcher 对象\",\"ExceptionParam: 异常对象（可能为 None）\",\"DefaultParam: 带有默认值的参数\"]},\"1421\":{\"h\":\"\",\"t\":[\"类型: _DependentCallable[bool]\",\"说明\",\"RuleChecker 即判断是否响应事件的处理函数。\",\"依赖参数:\",\"DependParam: 子依赖参数\",\"BotParam: Bot 对象\",\"EventParam: Event 对象\",\"StateParam: State 对象\",\"DefaultParam: 带有默认值的参数\"]},\"1422\":{\"h\":\"\",\"t\":[\"类型: _DependentCallable[bool]\",\"说明\",\"PermissionChecker 即判断事件是否满足权限的处理函数。\",\"依赖参数:\",\"DependParam: 子依赖参数\",\"BotParam: Bot 对象\",\"EventParam: Event 对象\",\"DefaultParam: 带有默认值的参数\"]},\"1423\":{\"h\":\"\",\"t\":[\"类型: _DependentCallable[Any]\",\"说明: Handler 处理函数。\"]},\"1424\":{\"h\":\"\",\"t\":[\"类型: _DependentCallable[str]\",\"说明\",\"TypeUpdater 在 Matcher.pause, Matcher.reject 时被运行，用于更新响应的事件类型。 默认会更新为 message。\",\"依赖参数:\",\"DependParam: 子依赖参数\",\"BotParam: Bot 对象\",\"EventParam: Event 对象\",\"StateParam: State 对象\",\"MatcherParam: Matcher 对象\",\"DefaultParam: 带有默认值的参数\"]},\"1425\":{\"h\":\"\",\"t\":[\"类型: _DependentCallable[Permission]\",\"说明\",\"PermissionUpdater 在 Matcher.pause, Matcher.reject 时被运行，用于更新会话对象权限。 默认会更新为当前事件的触发对象。\",\"依赖参数:\",\"DependParam: 子依赖参数\",\"BotParam: Bot 对象\",\"EventParam: Event 对象\",\"StateParam: State 对象\",\"MatcherParam: Matcher 对象\",\"DefaultParam: 带有默认值的参数\"]},\"1426\":{\"h\":\"\",\"t\":[\"类型: dict[_DependentCallable[Any], DependencyCache]\",\"说明: 依赖缓存, 用于存储依赖函数的返回值\"]},\"1427\":{\"h\":\"nonebot.utils\",\"t\":[\"本模块包含了 NoneBot 的一些工具函数\"]},\"1428\":{\"h\":\"\",\"t\":[\"说明\",\"用于记录带颜色日志时转义 <tag> 类型特殊标签\",\"参考: loguru color 标签\",\"参数\",\"s (str): 需要转义的字符串\",\"返回\",\"str\"]},\"1429\":{\"h\":\"\",\"t\":[\"说明: 深度更新合并字典\",\"参数\",\"mapping (dict[K, Any])\",\"*updating_mappings (dict[K, Any])\",\"返回\",\"dict[K, Any]\"]},\"1430\":{\"h\":\"\",\"t\":[\"说明: 检查 cls 是否是 class_or_tuple 中的一个类型子类并忽略类型错误。\",\"参数\",\"cls (Any)\",\"class_or_tuple (type[Any] | tuple[type[Any], ...])\",\"返回\",\"bool\"]},\"1431\":{\"h\":\"\",\"t\":[\"说明\",\"检查 cls 是否是 class_or_tuple 中的一个类型子类。\",\"特别的：\",\"如果 cls 是 typing.Union 或 types.UnionType 类型， 则会检查其中的所有类型是否是 class_or_tuple 中一个类型的子类或 None。\",\"如果 cls 是 typing.Literal 类型， 则会检查其中的所有值是否是 class_or_tuple 中一个类型的实例。\",\"如果 cls 是 typing.TypeVar 类型， 则会检查其 __bound__ 或 __constraints__ 是否是 class_or_tuple 中一个类型的子类或 None。\",\"参数\",\"cls (Any)\",\"class_or_tuple (type[Any] | tuple[type[Any], ...])\",\"返回\",\"bool\"]},\"1432\":{\"h\":\"\",\"t\":[\"说明: 检查 type_ 是否是复杂类型\",\"参数\",\"type_ (type[Any])\",\"返回\",\"bool\"]},\"1433\":{\"h\":\"\",\"t\":[\"说明: 检查 call 是否是一个 callable 协程函数\",\"参数\",\"call ((...) -> Any)\",\"返回\",\"bool\"]},\"1434\":{\"h\":\"\",\"t\":[\"说明: 检查 call 是否是一个生成器函数\",\"参数\",\"call ((...) -> Any)\",\"返回\",\"bool\"]},\"1435\":{\"h\":\"\",\"t\":[\"说明: 检查 call 是否是一个异步生成器函数\",\"参数\",\"call ((...) -> Any)\",\"返回\",\"bool\"]},\"1436\":{\"h\":\"\",\"t\":[\"说明: 一个用于包装 sync function 为 async function 的装饰器\",\"参数\",\"call ((P) -> R): 被装饰的同步函数\",\"返回\",\"(P) -> Coroutine[None, None, R]\"]},\"1437\":{\"h\":\"\",\"t\":[\"说明: 一个用于包装 sync context manager 为 async context manager 的执行函数\",\"参数\",\"cm (AbstractContextManager[T])\",\"返回\",\"AsyncGenerator[T, None]\"]},\"1438\":{\"h\":\"\",\"t\":[\"说明: 运行协程并当遇到指定异常时返回指定值。\",\"重载\",\"1.(coro, exc, return_on_err=None) -> T | None\",\"参数\",\"coro (Coroutine[Any, Any, T])\",\"exc (tuple[type[Exception], ...])\",\"return_on_err (None)\",\"返回\",\"T | None\",\"2.(coro, exc, return_on_err) -> T | R\",\"参数\",\"coro (Coroutine[Any, Any, T])\",\"exc (tuple[type[Exception], ...])\",\"return_on_err (R)\",\"返回\",\"T | R\",\"参数\",\"coro: 要运行的协程\",\"exc: 要捕获的异常\",\"return_on_err: 当发生异常时返回的值\",\"返回\",\"协程的返回值或发生异常时的指定值\"]},\"1439\":{\"h\":\"\",\"t\":[\"说明: 运行协程并在取消时屏蔽取消异常。\",\"参数\",\"coro (Coroutine[Any, Any, T]): 要运行的协程\",\"返回\",\"T: 协程的返回值\"]},\"1440\":{\"h\":\"\",\"t\":[\"参数\",\"exc_group (BaseExceptionGroup[E])\",\"返回\",\"Generator[E, None, None]\"]},\"1441\":{\"h\":\"\",\"t\":[\"说明: 获取对象的名称\",\"参数\",\"obj (Any)\",\"返回\",\"str\"]},\"1442\":{\"h\":\"\",\"t\":[\"说明: 转换路径为模块名\",\"参数\",\"path (Path)\",\"返回\",\"str\"]},\"1443\":{\"h\":\"\",\"t\":[\"说明: 解析并导入点分表示法的对象\",\"参数\",\"obj_str (str)\",\"default_attr (str)\",\"default_prefix (str | None)\",\"返回\",\"Any\"]},\"1444\":{\"h\":\"\",\"t\":[\"说明: 类属性装饰器\",\"参数\",\"func ((Any) -> T)\"]},\"1445\":{\"h\":\"\",\"t\":[\"说明: 可以序列化 Message(List[Dataclass]) 的 JSONEncoder\",\"参数\",\"auto\"]},\"1446\":{\"h\":\"\",\"t\":[\"参数\",\"o\",\"返回\",\"untyped\"]},\"1447\":{\"h\":\"\",\"t\":[\"说明: 用于打印 adapter 的日志。\",\"参数\",\"logger_name (str): adapter 的名称\",\"返回\",\"untyped: 日志记录函数\",\"日志记录函数的参数:\",\"level: 日志等级\",\"message: 日志信息\",\"exception: 异常信息\"]},\"1448\":{\"h\":\"日志\",\"t\":[\"无论是在开发还是在生产环境中，日志都是一个重要的功能，可以帮助我们了解运行状况、排查问题等。虽然我们可以使用 print 来将需要的信息输出到控制台，但是这种方式难以控制，而且不利于日志的归档、分析等。NoneBot 使用优秀的 Loguru 库来进行日志记录。\"]},\"1449\":{\"h\":\"记录日志\",\"t\":[\"我们可以从 NoneBot 中导入 logger 对象，然后使用 logger 对象的方法来记录日志。\",\"from nonebot import logger logger.trace(\\\"This is a trace message\\\") logger.debug(\\\"This is a debug message\\\") logger.info(\\\"This is an info message\\\") logger.success(\\\"This is a success message\\\") logger.warning(\\\"This is a warning message\\\") logger.error(\\\"This is an error message\\\") logger.critical(\\\"This is a critical message\\\")\",\"我们仅需一行代码即可记录对应级别的日志。日志可以通过配置 LOG_LEVEL 配置项来过滤输出等级，控制台中仅会输出大于等于 LOG_LEVEL 的日志。默认的 LOG_LEVEL 为 INFO，即只会输出 INFO、SUCCESS、WARNING、ERROR、CRITICAL 级别的日志。\",\"如果需要记录 Exception traceback 日志，可以向 logger 添加 exception 选项：\",\"try: 1 / 0 except ZeroDivisionError: logger.opt(exception=True).error(\\\"ZeroDivisionError\\\")\",\"如果需要输出彩色日志，可以向 logger 添加 colors 选项：\",\"logger.opt(colors=True).warning(\\\"We got a <red>BIG</red> problem\\\")\",\"更多日志记录方法请参考 Loguru 文档。\"]},\"1450\":{\"h\":\"自定义日志输出\",\"t\":[\"NoneBot 在启动时会添加一个默认的日志处理器，该处理器会将日志输出到stdout，并且根据 LOG_LEVEL 配置项过滤日志等级。\",\"默认的日志格式为：\",\"<g>{time:MM-DD HH:mm:ss}</g> [<lvl>{level}</lvl>] <c><u>{name}</u></c> | {message}\",\"我们可以从 nonebot.log 模块导入以使用 NoneBot 的默认格式和过滤器：\",\"from nonebot.log import default_format, default_filter\",\"如果需要自定义日志格式，我们需要移除 NoneBot 默认的日志处理器并添加新的日志处理器。例如，在机器人入口文件中 nonebot.init 之前添加以下内容：\",\"from nonebot.log import logger_id # 移除 NoneBot 默认的日志处理器 logger.remove(logger_id) # 添加新的日志处理器 logger.add( sys.stdout, level=0, diagnose=True, format=\\\"<g>{time:MM-DD HH:mm:ss}</g> [<lvl>{level}</lvl>] <c><u>{name}</u></c> | {message}\\\", filter=default_filter )\",\"如果想要输出日志到文件，我们可以使用 logger.add 方法添加文件处理器：\",\"logger.add(\\\"error.log\\\", level=\\\"ERROR\\\", format=default_format, rotation=\\\"1 week\\\")\",\"更多日志处理器的使用方法请参考 Loguru 文档。\"]},\"1451\":{\"h\":\"重定向 logging 日志\",\"t\":[\"logging 是 Python 标准库中的日志模块，NoneBot 提供了一个 logging handler 用于将 logging 日志重定向到 loguru 处理。\",\"from nonebot.log import LoguruHandler # root logger 添加 LoguruHandler logging.basicConfig(handlers=[LoguruHandler()]) # 或者为其他 logging.Logger 添加 LoguruHandler logger.addHandler(LoguruHandler())\"]},\"1452\":{\"h\":\"事件类型与重载\",\"t\":[\"在之前的示例中，我们已经了解了如何获取事件信息以及使用平台接口。但是，事件信息通常不仅仅包含消息这一个内容，还有其他平台提供的信息，例如消息发送时间、消息发送者等等。同时，在使用平台接口时，我们需要确保使用的平台接口与所要发送的平台类型一致，对不同类型的事件需要做出不同的处理。在本章节中，我们将介绍如何获取事件更多的信息以及根据事件类型进行不同的处理。\"]},\"1453\":{\"h\":\"事件类型\",\"t\":[\"在 NoneBot 中，事件均是 nonebot.adapters.Event 基类的子类型，基类对一些必要的属性进行了抽象，子类型则根据不同的平台进行了实现。在自定义权限一节中，我们就使用了 Event 的抽象方法 get_user_id 来获取事件发送者 ID，这个方法由协议适配器进行了实现，返回机器人用户对应的平台 ID。更多的基类抽象方法可以在使用适配器中查看。\",\"既然事件是基类的子类型，我们实际可以获得的信息通常多于基类抽象方法所提供的。如果我们不满足于基类能获得的信息，我们可以小小的修改一下事件处理函数的事件参数类型注解，使其变为子类型，这样我们就可以通过协议适配器定义的子类型来获取更多的信息。我们以 Console 协议适配器为例：\",\"from nonebot.adapters.console import MessageEvent @weather.got(\\\"location\\\", prompt=\\\"请输入地名\\\") async def got_location(event: MessageEvent, location: str = ArgPlainText()): await weather.finish(f\\\"{event.time.strftime('%Y-%m-%d')} {location} 的天气是...\\\")\",\"在上面的代码中，我们获取了 Console 协议适配器的消息事件提供的发送时间 time 属性。\",\"注意\",\"如果基类就能满足你的需求，那么就不要修改事件参数类型注解，这样可以使你的代码更加通用，可以在更多平台上运行。如何根据不同平台事件类型进行不同的处理，我们将在重载一节中介绍。\"]},\"1454\":{\"h\":\"重载\",\"t\":[\"我们在编写机器人时，常常会遇到这样一个问题：如何对私聊和群聊消息进行不同的处理？如何对不同平台的事件进行不同的处理？针对这些问题，NoneBot 提供了一个便捷而高效的解决方案 ── 重载。简单来说，依赖函数会根据其参数的类型注解来决定是否执行，忽略不符合其参数类型注解的情况。这样，我们就可以通过修改事件参数类型注解来实现对不同事件的处理，或者修改 Bot 参数类型注解来实现使用不同平台的接口。我们以 OneBot 协议适配器为例：\",\"from nonebot.adapters.onebot.v11 import PrivateMessageEvent, GroupMessageEvent @matcher.handle() async def handle_private(event: PrivateMessageEvent): await matcher.finish(\\\"私聊消息\\\") @matcher.handle() async def handle_group(event: GroupMessageEvent): await matcher.finish(\\\"群聊消息\\\")\",\"这样，机器人用户就会在私聊和群聊中分别收到不同的回复。同样的，我们也可以通过修改 Bot 参数类型注解来实现使用不同平台的接口：\",\"from nonebot.adapters.console import Bot as ConsoleBot from nonebot.adapters.onebot.v11 import Bot as OneBot @matcher.handle() async def handle_console(bot: ConsoleBot): await bot.bell() @matcher.handle() async def handle_onebot(bot: OneBot): await bot.send_group_message(group_id=123123, message=\\\"OneBot\\\")\",\"注意\",\"重载机制对所有的参数类型注解都有效，因此，依赖注入也可以使用这个特性来对不同的返回值进行处理。\",\"但 Bot、Event 和 Matcher 三者的参数类型注解具有最高检查优先级，如果三者任一类型注解不匹配，那么其他依赖注入将不会执行（如：Depends）。\",\"提示\",\"如何更好地编写一个跨平台的插件，我们将在最佳实践中介绍。\"]},\"1455\":{\"h\":\"响应规则\",\"t\":[\"机器人在实际应用中，往往会接收到多种多样的事件类型，NoneBot 通过响应规则来控制事件的处理。\",\"在指南中，我们为 weather 命令添加了一个 rule=to_me() 参数，这个参数就是一个响应规则，确保只有在私聊或者 @bot 时才会响应。\",\"响应规则是一个 Rule 对象，它由一系列的 RuleChecker 函数组成，每个 RuleChecker 函数都会检查事件是否符合条件，如果所有的检查都通过，则事件会被处理。\"]},\"1456\":{\"h\":\"RuleChecker\",\"t\":[\"RuleChecker 是一个返回值为 bool 类型的依赖函数，即 RuleChecker 支持依赖注入。我们可以根据上一节中添加的配置项，在 weather 插件目录中编写一个响应规则：\",\"from nonebot import get_plugin_config from .config import Config plugin_config = get_plugin_config(Config) async def is_enable() -> bool: return plugin_config.weather_plugin_enabled weather = on_command(\\\"天气\\\", rule=is_enable)\",\"在上面的代码中，我们定义了一个函数 is_enable，它会检查配置项 weather_plugin_enabled 是否为 True。这个函数 is_enable 即为一个 RuleChecker。\"]},\"1457\":{\"h\":\"Rule\",\"t\":[\"Rule 是若干个 RuleChecker 的集合，它会并发调用每个 RuleChecker，只有当所有 RuleChecker 检查通过时匹配成功。例如：我们可以组合两个 RuleChecker，一个用于检查插件是否启用，一个用于检查用户是否在黑名单中：\",\"from nonebot.rule import Rule from nonebot.adapters import Event async def is_enable() -> bool: return plugin_config.weather_plugin_enabled async def is_blacklisted(event: Event) -> bool: return event.get_user_id() not in BLACKLIST rule = Rule(is_enable, is_blacklisted) weather = on_command(\\\"天气\\\", rule=rule)\"]},\"1458\":{\"h\":\"合并响应规则\",\"t\":[\"在定义响应规则时，我们可以将规则进行细分，来更好地复用规则。而在使用时，我们需要合并多个规则。除了使用 Rule 对象来组合多个 RuleChecker 外，我们还可以对 Rule 对象进行合并。在原 weather 插件中，我们可以将 rule=to_me() 与 rule=is_enable 使用 & 运算符合并：\",\"from nonebot.rule import to_me from nonebot import get_plugin_config from .config import Config plugin_config = get_plugin_config(Config) async def is_enable() -> bool: return plugin_config.weather_plugin_enabled weather = on_command( \\\"天气\\\", rule=to_me() & is_enable, aliases={\\\"weather\\\", \\\"查天气\\\"}, priority=plugin_config.weather_command_priority, block=True, )\",\"这样，weather 命令就只会在插件启用且在私聊或者 @bot 时才会响应。\",\"合并响应规则可以有多种形式，例如：\",\"rule1 = Rule(foo_checker) rule2 = Rule(bar_checker) rule = rule1 & rule2 rule = rule1 & bar_checker rule = foo_checker & rule2\",\"同时，我们也无需担心合并了一个 None 值，Rule 会忽略 None 值。\",\"assert (rule & None) is rule\"]},\"1459\":{\"h\":\"主动使用响应规则\",\"t\":[\"除了在事件响应器中使用响应规则外，我们也可以主动使用响应规则来判断事件是否符合条件。例如：\",\"rule = Rule(some_checker) result: bool = await rule(bot, event, state)\",\"我们只需要传入 Bot 对象、事件和会话状态，Rule 会并发调用所有 RuleChecker 进行检查，并返回结果。\"]},\"1460\":{\"h\":\"内置响应规则\",\"t\":[\"NoneBot 内置了一些常用的响应规则，可以直接通过事件响应器辅助函数或者自行合并其他规则使用。内置响应规则列表可以参考事件响应器进阶\"]},\"1461\":{\"h\":\"会话状态\",\"t\":[\"在事件处理流程中，和用户交互的过程即是会话。在会话中，我们可能需要记录一些信息，例如用户的重试次数等等，以便在会话中的不同阶段进行判断和处理。这些信息都可以存储于会话状态中。\",\"NoneBot 中的会话状态是一个字典，可以通过类型 T_State 来获取。字典内可以存储任意类型的数据，但是要注意的是，NoneBot 本身会在会话状态中存储一些信息，因此不要使用 NoneBot 使用的键名。\",\"from nonebot.typing import T_State @matcher.got(\\\"key\\\", prompt=\\\"请输入密码\\\") async def _(state: T_State, key: str = ArgPlainText()): if key != \\\"some password\\\": try_count = state.get(\\\"try_count\\\", 1) if try_count >= 3: await matcher.finish(\\\"密码错误次数过多\\\") else: state[\\\"try_count\\\"] = try_count + 1 await matcher.reject(\\\"密码错误，请重新输入\\\") await matcher.finish(\\\"密码正确\\\")\",\"会话状态的生命周期与事件处理流程相同，在期间的任何一个事件处理函数都可以进行读写。\",\"from nonebot.typing import T_State @matcher.handle() async def _(state: T_State): state[\\\"key\\\"] = \\\"value\\\" @matcher.handle() async def _(state: T_State): await matcher.finish(state[\\\"key\\\"])\",\"会话状态还可以用于发送动态消息，消息模板在发送时会使用会话状态字典进行渲染。消息模板的使用方法已经在消息处理中介绍过，这里不再赘述。\",\"from nonebot.typing import T_State from nonebot.adapters import MessageTemplate @matcher.handle() async def _(state: T_State): state[\\\"username\\\"] = \\\"user\\\" @matcher.got(\\\"password\\\", prompt=MessageTemplate(\\\"请输入 {username} 的密码\\\")) async def _(): await matcher.finish(MessageTemplate(\\\"密码为 {password}\\\"))\"]},\"1462\":{\"h\":\"下一步\",\"t\":[\"至此，我们已经了解了 NoneBot 的大多数功能用法，相信你已经可以独自写出一个插件了。现在你可以选择：\",\"即刻开始插件编写！\",\"更深入地了解 NoneBot 的更多功能和原理！\"]},\"1463\":{\"h\":\"数据存储\",\"t\":[\"在使用插件的过程中，难免会需要存储一些持久化数据，例如用户的个人信息、群组的信息等。除了使用数据库等第三方存储之外，还可以使用本地文件来自行管理数据。NoneBot 提供了 nonebot-plugin-localstore 插件，可用于获取正确的数据存储路径并写入数据。\"]},\"1464\":{\"h\":\"安装插件\",\"t\":[\"在使用前请先安装 nonebot-plugin-localstore 插件至项目环境中，可参考获取商店插件来了解并选择安装插件的方式。如：\",\"在项目目录下执行以下命令：\",\"nb plugin install nonebot-plugin-localstore\"]},\"1465\":{\"h\":\"使用插件\",\"t\":[\"nonebot-plugin-localstore 插件兼容 Windows、Linux 和 macOS 等操作系统，使用时无需关心操作系统的差异。同时插件提供 nb-cli 脚本，可以使用 nb localstore 命令来检查数据存储路径。\",\"在使用本插件前同样需要使用 require 方法进行加载并导入需要使用的方法，可参考 跨插件访问 一节进行了解，如：\",\"from nonebot import require require(\\\"nonebot_plugin_localstore\\\") import nonebot_plugin_localstore as store # 获取插件缓存目录 cache_dir = store.get_plugin_cache_dir() # 获取插件缓存文件 cache_file = store.get_plugin_cache_file(\\\"file_name\\\") # 获取插件数据目录 data_dir = store.get_plugin_data_dir() # 获取插件数据文件 data_file = store.get_plugin_data_file(\\\"file_name\\\") # 获取插件配置目录 config_dir = store.get_plugin_config_dir() # 获取插件配置文件 config_file = store.get_plugin_config_file(\\\"file_name\\\")\",\"警告\",\"在 Windows 和 macOS 系统下，插件的数据目录和配置目录是同一个目录，因此在使用时需要注意避免文件名冲突。\",\"插件提供的方法均返回一个 pathlib.Path 路径，可以参考 pathlib 文档来了解如何使用。常用的方法有：\",\"from pathlib import Path data_file = store.get_plugin_data_file(\\\"file_name\\\") # 写入文件内容 data_file.write_text(\\\"Hello World!\\\") # 读取文件内容 data = data_file.read_text()\",\"提示\",\"对于嵌套插件，子插件的存储目录将位于父插件存储目录下。\"]},\"1466\":{\"h\":\"配置项\"},\"1467\":{\"h\":\"localstore_use_cwd\",\"t\":[\"使用当前工作目录作为数据存储目录，以下数据目录配置项默认值将会对应变更\",\"默认值：False\",\"LOCALSTORE_USE_CWD=true\"]},\"1468\":{\"h\":\"localstore_cache_dir\",\"t\":[\"自定义缓存目录\",\"默认值：\",\"当 localstore_use_cwd 为 True 时，缓存目录为 <current_working_directory>/cache，否则：\",\"macOS: ~/Library/Caches/nonebot2\",\"Unix: ~/.cache/nonebot2 (XDG default)\",\"Windows: C:\\\\Users\\\\<username>\\\\AppData\\\\Local\\\\nonebot2\\\\Cache\",\"LOCALSTORE_CACHE_DIR=/tmp/cache\"]},\"1469\":{\"h\":\"localstore_data_dir\",\"t\":[\"自定义数据目录\",\"默认值：\",\"当 localstore_use_cwd 为 True 时，数据目录为 <current_working_directory>/data，否则：\",\"macOS: ~/Library/Application Support/nonebot2\",\"Unix: ~/.local/share/nonebot2 or in $XDG_DATA_HOME, if defined\",\"Win XP (not roaming): C:\\\\Documents and Settings\\\\<username>\\\\Application Data\\\\nonebot2\",\"Win 7 (not roaming): C:\\\\Users\\\\<username>\\\\AppData\\\\Local\\\\nonebot2\",\"LOCALSTORE_DATA_DIR=/tmp/data\"]},\"1470\":{\"h\":\"localstore_config_dir\",\"t\":[\"自定义配置目录\",\"默认值：\",\"当 localstore_use_cwd 为 True 时，配置目录为 <current_working_directory>/config，否则：\",\"macOS: same as user_data_dir\",\"Unix: ~/.config/nonebot2\",\"Win XP (roaming): C:\\\\Documents and Settings\\\\<username>\\\\Local Settings\\\\Application Data\\\\nonebot2\",\"Win 7 (roaming): C:\\\\Users\\\\<username>\\\\AppData\\\\Roaming\\\\nonebot2\",\"LOCALSTORE_CONFIG_DIR=/tmp/config\"]},\"1471\":{\"h\":\"localstore_plugin_cache_dir\",\"t\":[\"自定义插件缓存目录\",\"默认值：{}\",\"LOCALSTORE_PLUGIN_CACHE_DIR=' { \\\"plugin_id\\\": \\\"/tmp/plugin_cache\\\" } '\"]},\"1472\":{\"h\":\"localstore_plugin_data_dir\",\"t\":[\"自定义插件数据目录\",\"默认值：{}\",\"LOCALSTORE_PLUGIN_DATA_DIR=' { \\\"plugin_id\\\": \\\"/tmp/plugin_data\\\" } '\"]},\"1473\":{\"h\":\"localstore_plugin_config_dir\",\"t\":[\"自定义插件配置目录\",\"默认值：{}\",\"LOCALSTORE_PLUGIN_CONFIG_DIR=' { \\\"plugin_id\\\": \\\"/tmp/plugin_config\\\" } '\"]},\"1474\":{\"h\":\"错误跟踪\",\"t\":[\"在应用实际运行过程中，可能会出现各种各样的错误。可能是由于代码逻辑错误，也可能是由于用户输入错误，甚至是由于第三方服务的错误。这些错误都会导致应用的运行出现问题，这时候就需要对错误进行跟踪，以便及时发现问题并进行修复。NoneBot 提供了 nonebot-plugin-sentry 插件，支持 sentry 平台，可以方便地进行错误跟踪。\"]},\"1475\":{\"h\":\"安装插件\",\"t\":[\"在使用前请先安装 nonebot-plugin-sentry 插件至项目环境中，可参考获取商店插件来了解并选择安装插件的方式。如：\",\"在项目目录下执行以下命令：\",\"nb plugin install nonebot-plugin-sentry\"]},\"1476\":{\"h\":\"使用插件\",\"t\":[\"在安装完成之后，仅需要对插件进行简单的配置即可使用。\"]},\"1477\":{\"h\":\"获取 sentry DSN\",\"t\":[\"前往 sentry 平台，注册并创建一个新的项目，然后在项目设置中找到 Client Keys (DSN)，复制其中的 DSN 值。\"]},\"1478\":{\"h\":\"配置插件\",\"t\":[\"注意\",\"错误跟踪通常在生产环境中使用，因此开发环境中 sentry_dsn 留空即会停用插件。\",\"在项目 dotenv 配置文件中添加以下配置即可使用：\",\"SENTRY_DSN=<your_sentry_dsn>\"]},\"1479\":{\"h\":\"配置项\",\"t\":[\"配置项具体含义参考 Sentry Docs。\",\"sentry_dsn: str\",\"sentry_debug: bool = False\",\"sentry_release: str | None = None\",\"sentry_release: str | None = None\",\"sentry_environment: str | None = nonebot env\",\"sentry_server_name: str | None = None\",\"sentry_sample_rate: float = 1.\",\"sentry_max_breadcrumbs: int = 100\",\"sentry_attach_stacktrace: bool = False\",\"sentry_send_default_pii: bool = False\",\"sentry_in_app_include: List[str] = Field(default_factory=list)\",\"sentry_in_app_exclude: List[str] = Field(default_factory=list)\",\"sentry_request_bodies: str = \\\"medium\\\"\",\"sentry_with_locals: bool = True\",\"sentry_ca_certs: str | None = None\",\"sentry_before_send: Callable[[Any, Any], Any | None] | None = None\",\"sentry_before_breadcrumb: Callable[[Any, Any], Any | None] | None = None\",\"sentry_transport: Any | None = None\",\"sentry_http_proxy: str | None = None\",\"sentry_https_proxy: str | None = None\",\"sentry_shutdown_timeout: int = 2\"]},\"1480\":{\"h\":\"定时任务\",\"t\":[\"APScheduler (Advanced Python Scheduler) 是一个 Python 第三方库，其强大的定时任务功能被广泛应用于各个场景。在 NoneBot 中，定时任务作为一个额外功能，依赖于基于 APScheduler 开发的 nonebot-plugin-apscheduler 插件进行支持。\"]},\"1481\":{\"h\":\"安装插件\",\"t\":[\"在使用前请先安装 nonebot-plugin-apscheduler 插件至项目环境中，可参考获取商店插件来了解并选择安装插件的方式。如：\",\"在项目目录下执行以下命令：\",\"nb plugin install nonebot-plugin-apscheduler\"]},\"1482\":{\"h\":\"使用插件\",\"t\":[\"nonebot-plugin-apscheduler 本质上是对 APScheduler 进行了封装以适用于 NoneBot 开发，因此其使用方式与 APScheduler 本身并无显著区别。在此我们会简要介绍其调用方法，更多的使用方面的功能请参考APScheduler 官方文档。\"]},\"1483\":{\"h\":\"导入调度器\",\"t\":[\"由于 nonebot_plugin_apscheduler 作为插件，因此需要在使用前对其进行加载并导入其中的 scheduler 调度器来创建定时任务。使用 require 方法可轻松完成这一过程，可参考 跨插件访问 一节进行了解。\",\"from nonebot import require require(\\\"nonebot_plugin_apscheduler\\\") from nonebot_plugin_apscheduler import scheduler\"]},\"1484\":{\"h\":\"添加定时任务\",\"t\":[\"在 APScheduler 官方文档 中提供了以下两种直接添加任务的方式：\",\"from nonebot import require require(\\\"nonebot_plugin_apscheduler\\\") from nonebot_plugin_apscheduler import scheduler # 基于装饰器的方式 @scheduler.scheduled_job(\\\"cron\\\", hour=\\\"*/2\\\", id=\\\"job_0\\\", args=[1], kwargs={arg2: 2}) async def run_every_2_hour(arg1: int, arg2: int): pass # 基于 add_job 方法的方式 def run_every_day(arg1: int, arg2: int): pass scheduler.add_job( run_every_day, \\\"interval\\\", days=1, id=\\\"job_1\\\", args=[1], kwargs={arg2: 2} )\",\"注意\",\"由于 APScheduler 的定时任务并不是由事件响应器所触发的事件，因此其任务函数无法同事件处理函数一样通过依赖注入获取上下文信息，也无法通过事件响应器对象的方法进行任何操作，因此我们需要使用调用平台 API的方式来获取信息或收发消息。\",\"相对于事件处理依赖而言，编写定时任务更像是编写普通的函数，需要我们自行获取信息以及发送信息，请不要将事件处理依赖的特殊语法用于定时任务！\",\"关于 APScheduler 的更多使用方法，可以参考 APScheduler 官方文档 进行了解。\"]},\"1485\":{\"h\":\"配置项\"},\"1486\":{\"h\":\"apscheduler_autostart\",\"t\":[\"类型: bool\",\"默认值: True\",\"是否自动启动 scheduler ，若不启动需要自行调用 scheduler.start()。\"]},\"1487\":{\"h\":\"apscheduler_log_level\",\"t\":[\"类型: int\",\"默认值: 30\",\"apscheduler 输出的日志等级\",\"WARNING = 30 (默认)\",\"INFO = 20\",\"DEBUG = 10 (只有在开启 nonebot 的 debug 模式才会显示 debug 日志)\"]},\"1488\":{\"h\":\"apscheduler_config\",\"t\":[\"类型: dict\",\"默认值: { \\\"apscheduler.timezone\\\": \\\"Asia/Shanghai\\\" }\",\"apscheduler 的相关配置。参考配置调度器, 配置参数\",\"配置需要包含 apscheduler. 作为前缀，例如 apscheduler.timezone。\"]},\"1489\":{\"h\":\"参与讨论\",\"t\":[\"如果在安装或者开发 NoneBot 过程中遇到了任何问题，或者有新奇的点子，欢迎参与我们的社区讨论：\",\"点击下方链接前往 GitHub，前往 Issues 页面，在 New Issue Template 中选择 Question\",\"NoneBot：\",\"通过 QQ 群（点击下方链接直达）\",\"通过 QQ 频道\",\"通过 Discord 服务器（点击下方链接直达）\"]},\"1490\":{\"h\":\"贡献指南\"},\"1491\":{\"h\":\"Code of Conduct\",\"t\":[\"请参阅 Code of Conduct。\"]},\"1492\":{\"h\":\"参与开发\",\"t\":[\"请参阅 Contributing。\"]},\"1493\":{\"h\":\"鸣谢\",\"t\":[\"感谢以下开发者对 NoneBot2 作出的贡献：\"]},\"1494\":{\"h\":\"编写适配器\",\"t\":[\"在编写适配器之前，我们需要先了解适配器的功能与组成，适配器通常由 Adapter、Bot、Event 和 Message 四个部分组成，在编写适配器时，我们需要继承 NoneBot 中的基类，并根据实际平台来编写每个部分功能。\"]},\"1495\":{\"h\":\"组织结构\",\"t\":[\"NoneBot 适配器项目通常以 nonebot-adapter-{adapter-name} 作为项目名，并以命名空间包的形式编写，即在 nonebot/adapters/{adapter-name} 目录中编写实际代码，例如：\",\"📦 nonebot-adapter-{adapter-name} ├── 📂 nonebot │ ├── 📂 adapters │ │ ├── 📂 {adapter-name} │ │ │ ├── 📜 __init__.py │ │ │ ├── 📜 adapter.py │ │ │ ├── 📜 bot.py │ │ │ ├── 📜 config.py │ │ │ ├── 📜 event.py │ │ │ └── 📜 message.py ├── 📜 pyproject.toml └── 📜 README.md\",\"提示\",\"上述的项目结构仅作推荐，不做强制要求，保证实际可用性即可。\"]},\"1496\":{\"h\":\"使用 NB-CLI 创建项目\",\"t\":[\"我们可以使用脚手架快速创建项目：\",\"nb adapter create\",\"按照指引，输入适配器名称以及存储位置，即可创建一个带有基本结构的适配器项目。\"]},\"1497\":{\"h\":\"组成部分\",\"t\":[\"提示\",\"本章节的代码中提到的 Adapter、Bot、Event 和 Message 等，均为下文中适配器所编写的类，而非 NoneBot 中的基类。\"]},\"1498\":{\"h\":\"Log\",\"t\":[\"适配器在处理时通常需要打印日志，但直接使用 NoneBot 的默认 logger 不方便区分适配器输出和其它日志。因此我们可以使用 NoneBot 提供的 logger_wrapper 方法，自定义一个 log 函数用于快捷打印适配器日志：\",\"from nonebot.utils import logger_wrapper log = logger_wrapper(\\\"your_adapter_name\\\")\",\"这个 log 函数会在默认 logger 中添加适配器名称前缀，它接收三个参数：日志等级、日志内容以及可选的异常，具体用法如下：\",\"from .log import log log(\\\"DEBUG\\\", \\\"A DEBUG log.\\\") log(\\\"INFO\\\", \\\"A INFO log.\\\") try: ... except Exception as e: log(\\\"ERROR\\\", \\\"something error.\\\", e)\"]},\"1499\":{\"h\":\"Config\",\"t\":[\"通常适配器需要一些配置项，例如平台连接密钥等。适配器的配置方法与插件配置类似，例如：\",\"from pydantic import BaseModel class Config(BaseModel): xxx_id: str xxx_token: str\",\"配置项的读取将在下方 Adapter 中介绍。\"]},\"1500\":{\"h\":\"Adapter\",\"t\":[\"Adapter 负责转换事件、调用接口，以及正确创建 Bot 对象并注册到 NoneBot 中。在编写平台相关内容之前，我们需要继承基类，并实现适配器的基本信息：\",\"from typing import Any from typing_extensions import override from nonebot.drivers import Driver from nonebot import get_plugin_config from nonebot.adapters import Adapter as BaseAdapter from .config import Config class Adapter(BaseAdapter): @override def __init__(self, driver: Driver, **kwargs: Any): super().__init__(driver, **kwargs) # 读取适配器所需的配置项 self.adapter_config: Config = get_plugin_config(Config) @classmethod @override def get_name(cls) -> str: \\\"\\\"\\\"适配器名称\\\"\\\"\\\" return \\\"your_adapter_name\\\"\"]},\"1501\":{\"h\":\"与平台交互\",\"t\":[\"NoneBot 提供了多种 Driver 来帮助适配器进行网络通信，主要分为客户端和服务端两种类型。我们需要根据平台文档和特性选择合适的通信方式，并编写相关方法用于初始化适配器，与平台建立连接和进行交互：\"]},\"1502\":{\"h\":\"客户端通信方式\",\"t\":[\"import asyncio from typing_extensions import override from nonebot import get_plugin_config from nonebot.exception import WebSocketClosed from nonebot.drivers import Request, WebSocketClientMixin class Adapter(BaseAdapter): @override def __init__(self, driver: Driver, **kwargs: Any): super().__init__(driver, **kwargs) self.adapter_config: Config = get_plugin_config(Config) self.task: Optional[asyncio.Task] = None # 存储 ws 任务 self.setup() def setup(self) -> None: if not isinstance(self.driver, WebSocketClientMixin): # 判断用户配置的Driver类型是否符合适配器要求，不符合时应抛出异常 raise RuntimeError( f\\\"Current driver {self.config.driver} doesn't support websocket client connections!\\\" f\\\"{self.get_name()} Adapter need a WebSocket Client Driver to work.\\\" ) # 在 NoneBot 启动和关闭时进行相关操作 self.driver.on_startup(self.startup) self.driver.on_shutdown(self.shutdown) async def startup(self) -> None: \\\"\\\"\\\"定义启动时的操作，例如和平台建立连接\\\"\\\"\\\" self.task = asyncio.create_task(self._forward_ws()) # 建立 ws 连接 async def _forward_ws(self): request = Request( method=\\\"GET\\\", url=\\\"your_platform_websocket_url\\\", headers={\\\"token\\\": \\\"...\\\"}, # 鉴权请求头 ) while True: try: async with self.websocket(request) as ws: try: # 处理 websocket ... except WebSocketClosed as e: log( \\\"ERROR\\\", \\\"<r><bg #f8bbd0>WebSocket Closed</bg #f8bbd0></r>\\\", e, ) except Exception as e: log( \\\"ERROR\\\", \\\"<r><bg #f8bbd0>Error while process data from \\\" \\\"websocket platform_websocket_url. \\\" \\\"Trying to reconnect...</bg #f8bbd0></r>\\\", e, ) finally: # 这里要断开 Bot 连接 except Exception as e: # 尝试重连 log( \\\"ERROR\\\", \\\"<r><bg #f8bbd0>Error while setup websocket to \\\" \\\"platform_websocket_url. Trying to reconnect...</bg #f8bbd0></r>\\\", e, ) await asyncio.sleep(3) # 重连间隔 async def shutdown(self) -> None: \\\"\\\"\\\"定义关闭时的操作，例如停止任务、断开连接\\\"\\\"\\\" # 断开 ws 连接 if self.task is not None and not self.task.done(): self.task.cancel()\"]},\"1503\":{\"h\":\"服务端通信方式\",\"t\":[\"from nonebot import get_plugin_config from nonebot.drivers import ( Request, ASGIMixin, WebSocket, HTTPServerSetup, WebSocketServerSetup ) class Adapter(BaseAdapter): @override def __init__(self, driver: Driver, **kwargs: Any): super().__init__(driver, **kwargs) self.adapter_config: Config = get_plugin_config(Config) self.setup() def setup(self) -> None: if not isinstance(self.driver, ASGIMixin): raise RuntimeError( f\\\"Current driver {self.config.driver} doesn't support asgi server!\\\" f\\\"{self.get_name()} Adapter need a asgi server driver to work.\\\" ) # 建立服务端路由 # HTTP Webhook 路由 http_setup = HTTPServerSetup( URL(\\\"your_webhook_url\\\"), # 路由地址 \\\"POST\\\", # 接收的方法 \\\"WEBHOOK name\\\", # 路由名称 self._handle_http, # 处理函数 ) self.setup_http_server(http_setup) # 反向 Websocket 路由 ws_setup = WebSocketServerSetup( URL(\\\"your_websocket_url\\\"), # 路由地址 \\\"WebSocket name\\\", # 路由名称 self._handle_ws, # 处理函数 ) self.setup_websocket_server(ws_setup) async def _handle_http(self, request: Request) -> Response: \\\"\\\"\\\"HTTP 路由处理函数，只有一个类型为 Request 的参数，且返回值类型为 Response\\\"\\\"\\\" ... return Response( status_code=200, # 状态码 headers={\\\"something\\\": \\\"something\\\"}, # 响应头 content=\\\"xxx\\\", # 响应内容 ) async def _handle_ws(self, websocket: WebSocket) -> Any: \\\"\\\"\\\"WebSocket 路由处理函数，只有一个类型为 WebSocket 的参数\\\"\\\"\\\" ...\",\"更多通信交互方式可以参考以下适配器：\",\"OneBot - WebSocket 客户端、WebSocket 服务端、HTTP WEBHOOK、HTTP POST\",\"QQGuild - WebSocket 服务端\",\"Telegram - HTTP WEBHOOK\"]},\"1504\":{\"h\":\"建立 Bot 连接\",\"t\":[\"在与平台建立连接后，我们需要将 Bot 实例化，并调用适配器提供的的 bot_connect 方法告知 NoneBot 建立了 Bot 连接。在与平台断开连接或出现某些异常进行重连时，我们需要调用 bot_disconnect 方法告知 NoneBot 断开了 Bot 连接。\",\"from .bot import Bot class Adapter(BaseAdapter): def _handle_connect(self): bot_id = ... # 通过配置或者平台 API 等方式，获取到 Bot 的 ID bot = Bot(self, self_id=bot_id) # 实例化 Bot self.bot_connect(bot) # 建立 Bot 连接 def _handle_disconnect(self): self.bot_disconnect(bot) # 断开 Bot 连接\"]},\"1505\":{\"h\":\"转换 Event 事件\",\"t\":[\"在接收到来自平台的事件数据后，我们需要将其转为适配器的 Event，并调用 Bot 的 handle_event 方法来让 Bot 对事件进行处理：\",\"import asyncio from typing import Any, Dict from nonebot.compat import type_validate_python from .bot import Bot from .event import Event from .log import log class Adapter(BaseAdapter): @classmethod def payload_to_event(cls, payload: Dict[str, Any]) -> Event: \\\"\\\"\\\"根据平台事件的特性，转换平台 payload 为具体 Event Event 模型继承自 pydantic.BaseModel，具体请参考 pydantic 文档 \\\"\\\"\\\" # 做一层异常处理，以应对平台事件数据的变更 try: return type_validate_python(your_event_class, payload) except Exception as e: # 无法正常解析为具体 Event 时，给出日志提示 log( \\\"WARNING\\\", f\\\"Parse event error: {str(payload)}\\\", ) # 也可以尝试转为基础 Event 进行处理 return type_validate_python(Event, payload) async def _forward(self, bot: Bot): payload: Dict[str, Any] # 接收到的事件数据 event = self.payload_to_event(payload) # 让 bot 对事件进行处理 asyncio.create_task(bot.handle_event(event))\"]},\"1506\":{\"h\":\"调用平台 API\",\"t\":[\"我们需要实现 Adapter 的 _call_api 方法，使开发者能够调用平台提供的 API。如果通过 WebSocket 通信可以通过 send 方法来发送数据，如果采用 HTTP 请求，则需要通过 NoneBot 提供的 Request 对象，调用 driver 的 request 方法来发送请求。\",\"from typing import Any from typing_extensions import override from nonebot.drivers import Request, WebSocket from .bot import Bot class Adapter(BaseAdapter): @override async def _call_api(self, bot: Bot, api: str, **data: Any) -> Any: log(\\\"DEBUG\\\", f\\\"Calling API <y>{api}</y>\\\") # 给予日志提示 platform_data = your_handle_data_method(data) # 自行将数据转为平台所需要的格式 # 采用 HTTP 请求的方式，需要构造一个 Request 对象 request = Request( method=\\\"GET\\\", # 请求方法 url=api, # 接口地址 headers=..., # 请求头，通常需要包含鉴权信息 params=platform_data, # 自行处理数据的传输形式 # json=platform_data, # data=platform_data, ) # 发送请求，返回结果 return await self.driver.request(request) # 采用 WebSocket 通信的方式，可以直接调用 send 方法发送数据 # 通过某种方式获取到 bot 对应的 websocket 对象 ws: WebSocket = your_get_websocket_method(bot.self_id) await ws.send_text(platform_data) # 发送 str 类型的数据 await ws.send_bytes(platform_data) # 发送 bytes 类型的数据 await ws.send(platform_data) # 是以上两种方式的合体 # 接收并返回结果，同样的，也有 str 和 bytes 的区别 return await ws.receive_text() return await ws.receive_bytes() return await ws.receive()\",\"调用平台 API 实现方式具体可以参考以下适配器：\",\"Websocket:\",\"OneBot V11\",\"OneBot V12\",\"HTTP:\",\"QQ 频道\",\"Telegram\",\"飞书\"]},\"1507\":{\"h\":\"Bot\",\"t\":[\"Bot 是机器人开发者能够直接获取并使用的核心对象，负责存储平台机器人相关信息，并提供回复事件、调用 API 的上层方法。我们需要继承基类 Bot，并实现相关方法：\",\"from typing import TYPE_CHECKING, Any, Union from typing_extensions import override from nonebot.message import handle_event from nonebot.adapters import Bot as BaseBot from .event import Event from .message import Message, MessageSegment if TYPE_CHECKING: from .adapter import Adapter class Bot(BaseBot): \\\"\\\"\\\" your_adapter_name 协议 Bot 适配。 \\\"\\\"\\\" @override def __init__(self, adapter: Adapter, self_id: str, **kwargs: Any): super().__init__(adapter, self_id) self.adapter: Adapter = adapter # 一些有关 Bot 的信息也可以在此定义和存储 async def handle_event(self, event: Event): # 根据需要，对事件进行某些预处理，例如： # 检查事件是否和机器人有关操作，去除事件消息首尾的 @bot # 检查事件是否有回复消息，调用平台 API 获取原始消息的消息内容 ... # 调用 handle_event 让 NoneBot 对事件进行处理 await handle_event(self, event) @override async def send( self, event: Event, message: Union[str, Message, MessageSegment], **kwargs: Any, ) -> Any: # 根据平台实现 Bot 回复事件的方法 # 将消息处理为平台所需的格式后，调用发送消息接口进行发送，例如： data = message_to_platform_data(message) await self.send_message( data=data, ... )\"]},\"1508\":{\"h\":\"Event\",\"t\":[\"Event 是 NoneBot 中的事件主体对象，所有平台消息在进入处理流程前需要转换为 NoneBot 事件。我们需要继承基类 Event，并实现相关方法：\",\"from typing_extensions import override from nonebot.compat import model_dump from nonebot.adapters import Event as BaseEvent class Event(BaseEvent): @override def get_event_name(self) -> str: # 返回事件的名称，用于日志打印 return \\\"event name\\\" @override def get_event_description(self) -> str: # 返回事件的描述，用于日志打印，请注意转义 loguru tag return escape_tag(repr(model_dump(self))) @override def get_message(self): # 获取事件消息的方法，根据事件具体实现，如果事件非消息类型事件，则抛出异常 raise ValueError(\\\"Event has no message!\\\") @override def get_user_id(self) -> str: # 获取用户 ID 的方法，根据事件具体实现，如果事件没有用户 ID，则抛出异常 raise ValueError(\\\"Event has no context!\\\") @override def get_session_id(self) -> str: # 获取事件会话 ID 的方法，根据事件具体实现，如果事件没有相关 ID，则抛出异常 raise ValueError(\\\"Event has no context!\\\") @override def is_tome(self) -> bool: # 判断事件是否和机器人有关 return False\",\"然后根据平台消息的类型，编写各种不同的事件，并且注意要根据事件类型实现 get_type 方法，具体请参考事件类型。消息类型事件还应重写 get_message 和 get_user_id 等方法，例如：\",\"from .message import Message class HeartbeatEvent(Event): \\\"\\\"\\\"心跳时间，通常为元事件\\\"\\\"\\\" @override def get_type(self) -> str: return \\\"meta_event\\\" class MessageEvent(Event): \\\"\\\"\\\"消息事件\\\"\\\"\\\" message_id: str user_id: str @override def get_type(self) -> str: return \\\"message\\\" @override def get_message(self) -> Message: # 返回事件消息对应的 NoneBot Message 对象 return self.message @override def get_user_id(self) -> str: return self.user_id class JoinRoomEvent(Event): \\\"\\\"\\\"加入房间事件，通常为通知事件\\\"\\\"\\\" user_id: str room_id: str @override def get_type(self) -> str: return \\\"notice\\\" class ApplyAddFriendEvent(Event): \\\"\\\"\\\"申请添加好友事件，通常为请求事件\\\"\\\"\\\" user_id: str @override def get_type(self) -> str: return \\\"request\\\"\"]},\"1509\":{\"h\":\"Message\",\"t\":[\"Message 负责正确序列化消息，以便机器人插件处理。我们需要继承 MessageSegment 和 Message 两个类，并实现相关方法：\",\"from typing import Type, Iterable from typing_extensions import override from nonebot.utils import escape_tag from nonebot.adapters import Message as BaseMessage from nonebot.adapters import MessageSegment as BaseMessageSegment class MessageSegment(BaseMessageSegment[\\\"Message\\\"]): @classmethod @override def get_message_class(cls) -> Type[\\\"Message\\\"]: # 返回适配器的 Message 类型本身 return Message @override def __str__(self) -> str: # 返回该消息段的纯文本表现形式，通常在日志中展示 return \\\"text of MessageSegment\\\" @override def is_text(self) -> bool: # 判断该消息段是否为纯文本 return self.type == \\\"text\\\" class Message(BaseMessage[MessageSegment]): @classmethod @override def get_segment_class(cls) -> Type[MessageSegment]: # 返回适配器的 MessageSegment 类型本身 return MessageSegment @staticmethod @override def _construct(msg: str) -> Iterable[MessageSegment]: # 实现从字符串中构造消息数组，如无字符串嵌入格式可直接返回文本类型 MessageSegment ...\",\"然后根据平台具体的消息类型，来实现各种 MessageSegment 消息段，具体可以参考以下适配器：\",\"OneBot\",\"QQGuild\",\"Telegram\"]},\"1510\":{\"h\":\"适配器测试\",\"t\":[\"关于适配器测试相关内容在这里不再展开，开发者可以根据需要进行合适的测试。这里为开发者提供几个常见问题的解决方法：\",\"在测试中无法导入 editable 模式安装的适配器代码。在 pytest 的 conftest.py 内添加如下代码：\",\"from pathlib import Path import nonebot.adapters nonebot.adapters.__path__.append( # type: ignore str((Path(__file__).parent.parent / \\\"nonebot\\\" / \\\"adapters\\\").resolve()) )\",\"需要计算适配器测试覆盖率，请在 pyproject.toml 中添加 pytest 配置：\",\"[tool.pytest.ini_options] addopts = \\\"--cov nonebot/adapters/{adapter-name} --cov-report term-missing\\\"\"]},\"1511\":{\"h\":\"后续工作\",\"t\":[\"在完成适配器代码的编写后，如果想要将适配器发布到 NoneBot 商店，我们需要将适配器发布到 PyPI 中，然后前往商店页面，切换到适配器页签，点击发布适配器按钮，填写适配器相关信息并提交。\",\"另外建议编写适配器文档或者一些插件开发示例，以便其他开发者使用我们的适配器。\"]},\"1512\":{\"h\":\"暑期 2021\",\"t\":[\"开源软件供应链点亮计划 - 暑期 2021 是中国科学院软件研究所与 openEuler 社区共同举办的一项面向高校学生的暑期活动，旨在鼓励在校学生积极参与开源软件的开发维护，促进优秀开源软件社区的蓬勃发展。关于具体的活动规划、报名方式，请查看该活动的 官网 和 帮助文档。\",\"NoneBot 社区有幸作为开源社区参与了本次活动，下面列出了目前我们已经发布的项目，欢迎感兴趣的同学在上面给出的活动官网报名，或通过 contact@nonebot.dev 联系我们。\"]},\"1513\":{\"h\":\"NoneBot v1\"},\"1514\":{\"h\":\"更新 NoneBot v1 文档中的“指南”部分\",\"t\":[\"由于 NoneBot v1 和 aiocqhttp 最初基于的 QQ 机器人平台不再提供服务，CQHTTP 接口也转型且改名为 OneBot 标准，目前 NoneBot v1 文档的“指南”部分和 aiocqhttp 文档有部分过时内容需要更新。我们希望将其中与旧的机器人平台相关的内容改为基于 go-cqhttp 或通用的 OneBot 表述，同时对 NoneBot v1 的 awesome-bot 示例做一次全面检查，修改其中可能已经不可用的部分。\",\"难度：低\",\"导师：@cleoold\",\"产出要求\",\"修改“指南”文档和 aiocqhttp 文档中与旧的 QQ 机器人平台相关的部分\",\"检查 awesome-bot 示例是否有已经过时/不可用的地方，并更新/修复\",\"修改“图灵机器人”案例，使用其它 AI 聊天 API 提供商（需先做简单调研）\",\"技术要求\",\"熟悉 Python 编程语言及 asyncio 机制\",\"了解 Git 基本用法\",\"了解聊天机器人基本开发过程\",\"了解 VuePress 更佳\"]},\"1515\":{\"h\":\"NoneBot v1 API 文档自动生成\",\"t\":[\"目前 NoneBot v1 的文档中“API”部分是手动编写的，在更新代码接口的同时需要手动更新文档，可能造成文档与代码不匹配，形成额外的维护成本。我们希望将 API 文档改为直接编写在 Python docstring 中，通过工具自动生成 API 文档。\",\"难度：中\",\"导师：@cleoold\",\"产出要求\",\"调研市面上常见的 Python API 文档生成工具\",\"在代码中补充 API 文档\",\"编写或应用开源工具自动生成 API 文档\",\"配置 GitHub Actions 或其它 CI 自动化构建和部署 API 文档\",\"技术要求\",\"熟悉 Python 编程语言及 asyncio 和 Type Hints\",\"了解 Git 基本用法\",\"了解 Sphinx 等文档生成工具更佳\",\"了解 GitHub Actions 等 CI 工具更佳\"]},\"1516\":{\"h\":\"NoneBot v2\"},\"1517\":{\"h\":\"NoneBot v2 自动化测试框架“NoneBug”\",\"t\":[\"在聊天机器人的开发过程中，一套自动化的测试机制是非常重要的，特别是对于 NoneBot 2 这类为大型机器人开发而设计的项目来说，需要手动测试每一个边际条件是非常痛苦的。我们希望能够开发一款基于 NoneBot 2 插件机制的自动化测试框架，为 NoneBot 2 用户提供一套易用便捷、高度灵活的自动化测试框架。\",\"难度：高\",\"导师：@yanyongyu\",\"产出要求\",\"调研现有的 Python 和其它语言集成测试框架\",\"设计 NoneBug 的用户 API 和实现方式\",\"实现 NoneBug 自动化测试框架\",\"编写详细的使用文档\",\"技术要求\",\"熟悉 Python 编程语言及 asyncio 和 Type Hints\",\"了解 Git 基本用法\",\"了解 NoneBot v2 的基本原理和使用方式\",\"了解主流的 Python 自动化测试框架\"]},\"1518\":{\"h\":\"NoneBot v2 Telegram 适配器\",\"t\":[\"目前 NoneBot v2 已支持 OneBot、Mirai HTTP API、钉钉协议，社区反馈有更多的平台需求，希望能在 NoneBot v2 获得更多的跨平台支持，提高机器人的便携性。同时，我们也希望随着新平台加入，提升现有 NoneBot v2 核心代码的平台通用性。Telegram 是一款较为广泛使用的安全即时聊天软件，同时其官方提供了丰富的聊天机器人 API，因此我们希望为 NoneBot v2 编写一个 Telegram 适配器来支持 Telegram 机器人的开发。\",\"难度：中\",\"导师：@yanyongyu\",\"产出要求\",\"调研 Telegram Bot API 以及 WebHook 等官方接口\",\"编写 Telegram 适配器并能够使用\",\"代码遵守项目 Contributing 规范\",\"技术要求\",\"熟悉 Python 编程语言及 asyncio 和 Type Hints\",\"了解 Git 基本用法\",\"了解 Web 开发相关知识\",\"了解 Sphinx 等文档生成工具更佳\"]},\"1519\":{\"h\":\"NoneBot v2 飞书适配器\",\"t\":[\"目前 NoneBot v2 已支持 OneBot、Mirai HTTP API、钉钉协议，社区反馈有更多的平台需求，希望能在 NoneBot v2 获得更多的跨平台支持，提高机器人的便携性。同时，我们也希望随着新平台加入，提升现有 NoneBot v2 核心代码的平台通用性。飞书是目前企业用户广泛使用的即时聊天和协作软件，其官方提供了丰富的聊天机器人 API，因此我们希望为 NoneBot v2 编写一个飞书适配器来支持飞书机器人的开发。\",\"难度：中\",\"导师：@yanyongyu\",\"产出要求\",\"调研飞书机器人 API 以及 WebHook 等官方接口\",\"编写飞书适配器并能够使用\",\"代码遵守项目 Contributing 规范\",\"技术要求\",\"熟悉 Python 编程语言及 asyncio 和 Type Hints\",\"了解 Git 基本用法\",\"了解 Web 开发相关知识\",\"了解 Sphinx 等文档生成工具更佳\"]},\"1520\":{\"h\":\"OneBot\"},\"1521\":{\"h\":\"设计 OneBot v12 接口标准\",\"t\":[\"目前的 OneBot 标准的 v11 版本仍然与 QQ 平台有较多耦合，我们希望在 v12 去掉与 QQ 耦合的历史包袱，形成一个通用的、可扩展的、易于使用的同时易于实现的聊天机器人接口标准。\",\"难度：中\",\"导师：@richardchien\",\"产出要求\",\"调研各聊天机器人平台的官方/非官方接口特点\",\"通用化 OneBot 核心 API，分离 QQ 特定的 API，去掉无用 API\",\"优化现有的通信、消息表示机制\",\"补充 QQ 特定的缺失 API\",\"文档需符合风格指南\",\"技术要求\",\"熟悉至少两个聊天平台的聊天机器人开发\",\"了解 Git 基本用法\",\"了解使用不同语言编写聊天机器人时的常用实践\",\"对文档的优雅性与美观性有追求更佳\"]},\"1522\":{\"h\":\"实现 Rust 版 libonebot\",\"t\":[\"目前最常用的 OneBot 实现包括 go-cqhttp、onebot-kotlin、node-onebot 等，这些实现都各自重复实现了 Web 通信、消息解析、配置读写等功能，当社区中的开发者想针对一个新的聊天平台实现 OneBot 时，他们往往同样需要再次实现类似逻辑。我们希望使用 Rust 编写一个 libonebot 模块，该模块实现所有 OneBot 实现所共享的功能，从而方便其他开发者们使用 Rust 快速编写具体的 OneBot 实现。同时，我们希望借此项目在聊天机器人社区中推广 Rust 编程语言。\",\"注：这里的逻辑是 libonebot + 针对某聊天平台的对接代码 = 某聊天平台的 OneBot 实现，libonebot 要做的是让 OneBot 实现的开发者只需编写针对特定聊天平台的对接代码，而无需关心 OneBot 标准定义的通信方式、消息格式等。\",\"难度：高\",\"导师：@richardchien\",\"产出要求\",\"实现所有 OneBot 实现所共享的功能，包括 Web 通信、消息解析、配置读写等\",\"充分考虑同时兼容 OneBot v11 和 v12 接口\",\"能够根据用户（OneBot 实现的开发者）所实现的接口自动实现类似 get_available_apis 等接口\",\"编写详细的使用文档\",\"如果可能，与 v12 设计项目联动，实现第一手 v12 支持\",\"技术要求\",\"熟悉聊天机器人开发\",\"熟悉 Rust Web 开发\"]},\"1523\":{\"h\":\"实现自选语言版 libonebot\",\"t\":[\"目前最常用的 OneBot 实现包括 go-cqhttp、onebot-kotlin、node-onebot 等，这些实现都各自重复实现了 Web 通信、消息解析、配置读写等功能，当社区中的开发者想针对一个新的聊天平台实现 OneBot 时，他们往往同样需要再次实现类似逻辑。我们希望使用 Python、Go、Kotlin、Node、PHP、C#.NET 等主流语言（任选一个）编写 libonebot 模块，该模块实现所有 OneBot 实现所共享的功能，从而方便其他开发者们使用对应语言快速编写具体的 OneBot 实现。\",\"注：这里的逻辑是 libonebot + 针对某聊天平台的对接代码 = 某聊天平台的 OneBot 实现，libonebot 要做的是让 OneBot 实现的开发者只需编写针对特定聊天平台的对接代码，而无需关心 OneBot 标准定义的通信方式、消息格式等。\",\"难度：中\",\"导师：@richardchien\",\"产出要求\",\"实现所有 OneBot 实现所共享的功能，包括 Web 通信、消息解析、配置读写等\",\"充分考虑同时兼容 OneBot v11 和 v12 接口\",\"编写详细的使用文档\",\"如果可能，实现更多附加特性，如根据用户（OneBot 实现的开发者）所实现的接口自动实现类似 get_available_apis 等接口、实现第一手 v12 支持等\",\"技术要求\",\"熟悉聊天机器人开发\",\"熟悉所选语言的 Web 开发\"]},\"1524\":{\"h\":\"暑期 2022\",\"t\":[\"开源之夏 - 暑期 2022 是由开源软件供应链点亮计划发起、由中国科学院软件研究所与 openEuler 社区主办的一项面向高校学生的暑期活动，类似 Google Summer of Code（GSoC），旨在鼓励在校学生积极参与开源软件的开发维护，促进优秀开源软件社区的蓬勃发展。关于具体的活动规划、报名方式，请查看该活动的 官网 和 帮助文档。\",\"NoneBot 社区有幸作为开源社区 参与 了本次活动，下面列出了目前我们已经发布的项目，欢迎感兴趣的同学加入 QQ 群 737131827 或通过 contact@nonebot.dev 联系我们。\"]},\"1525\":{\"h\":\"NoneBot2 命令行 CLI 交互体验升级\",\"t\":[\"NoneBot2 为用户提供了命令行脚手架 ──nb-cli，辅助用户更好地上手项目以及进行开发。nb-cli 主要包括：创建项目、运行项目、安装与卸载插件、部署项目等功能。随着 NoneBot2 Beta 版本的发布，脚手架功能存在一定的定位不明确、功能体验不佳。本项目旨在重新设计 nb-cli 功能框架，完善功能，优化用户体验。\",\"难度：进阶\",\"导师：@yanyongyu\",\"产出要求\",\"设计 nb-cli 功能框架 \",\"明确各功能模块\",\"设计用户交互模式\",\"完成 nb-cli 主要功能代码 \",\"项目管理\",\"插件管理\",\"其它\",\"同步更新使用文档\",\"技术要求\",\"熟悉 Python 命令行交互代码编写\",\"熟悉 NoneBot2 框架功能\",\"熟悉 NoneBot2 项目组织方式\",\"成果仓库\",\"https://github.com/nonebot/nb-cli\",\"https://github.com/nonebot/nonebot2\"]},\"1526\":{\"h\":\"NoneBot2 命令行即时交互通信设计与实现\",\"t\":[\"NoneBot2 在早期提供了基于网页的 nonebot-plugin-test 插件，无需平台适配接入即可对机器人进行测试，方便了开发者直观的感受机器人文本交互功能。我们希望提供一款基于命令行的适配器/驱动器，用于无平台适配接入、可以运行机器人的场景进行功能体验或测试。\",\"难度：进阶\",\"导师：@mnixry\",\"产出要求\",\"设计命令行与 NoneBot2 通信模式 \",\"直接调用/HTTP/WebSocket\",\"设计命令行交互界面\",\"实现相应适配器/驱动器\",\"同步更新使用说明文档\",\"技术要求\",\"熟悉 Python 命令行交互代码编写\",\"熟悉 NoneBot2 框架功能\",\"熟悉 NoneBot2 项目组织方式\",\"成果仓库\",\"https://github.com/nonebot/adapter-console\"]},\"1527\":{\"h\":\"NoneBot2 用户上手与深入教程设计\",\"t\":[\"NoneBot2 为用户提供了详细的文档介绍，辅助用户更好的上手项目以及进行开发。文档分为基础与进阶两个部分。基础部分帮助新用户快速上手开发，主要包括：安装 NoneBot2、使用脚手架、创建配置项目、使用适配器、加载插件、定义消息事件、处理消息事件、调用平台 API 等。进阶部分向已经熟悉开发流程的用户介绍更多高级技巧，主要包括：NoneBot2 工作原理、定时任务、权限控制、钩子函数、跨插件访问、单元测试、发布插件等。目前文档对于用户而言过于费解，导致用户难以理解 NoneBot2 开发。本项目旨在优化文档内容，使其更加通俗易懂，不让文档成为用户上手的阻碍，同时完善进阶内容，让有更复杂需求的用户，同样能从文档中受益。\",\"相关 issue：\",\"https://github.com/nonebot/nonebot2/issues/793\",\"https://github.com/nonebot/nonebot2/issues/295\",\"难度：进阶\",\"导师：@SK-415\",\"产出要求\",\"文档通俗易懂 \",\"附有适当的图片指引（如 asciinema）\",\"内容完整，由浅入深\",\"适当的界面美化，合理分配布局\",\"技术要求\",\"熟悉文档结构组织与语言表达\",\"熟悉 NoneBot2 框架功能\",\"熟悉 NoneBot2 项目组织方式\",\"成果仓库\",\"https://github.com/nonebot/nonebot2\"]},\"1528\":{\"h\":\"暑期 2023\",\"t\":[\"开源之夏 - 暑期 2023 是由开源软件供应链点亮计划发起、由中国科学院软件研究所与 openEuler 社区主办的一项面向高校学生的暑期活动，类似 Google Summer of Code（GSoC），旨在鼓励在校学生积极参与开源软件的开发维护，促进优秀开源软件社区的蓬勃发展。关于具体的活动规划、报名方式，请查看该活动的 官网 和 帮助文档。\",\"NoneBot 社区有幸作为开源社区 参与 了本次活动，下面列出了目前我们已经发布的项目，欢迎感兴趣的同学通过 contact@nonebot.dev 联系我们。\"]},\"1529\":{\"h\":\"NoneBot 项目管理图形化面板\",\"t\":[\"NoneBot 目前提供了开箱即用的命令行脚手架来帮助初次使用的用户更快的上手编写应用。但是，对于未有一定开发经验的用户，命令行的使用仍具有一定的困难。此外，其他项目如 koishi、vue 等，均可通过图形化界面的形式为用户提供更便捷的项目开发。因此，我们希望借助现有命令行脚手架的可扩展特性，提供一个项目管理面板服务，以网页的形式帮助用户开发 NoneBot 应用。\",\"难度：进阶\",\"导师：@mnixry\",\"产出要求\",\"设计并实现项目管理面板相关功能 \",\"创建与管理项目\",\"配置与运行项目\",\"NoneBot 插件管理\",\"实现相应 nb-cli 插件提供面板服务\",\"代码符合 NoneBot Contributing 规范\",\"技术要求\",\"熟悉 nb-cli 相关功能\",\"熟悉 NoneBot 框架功能\",\"熟悉前后端相关实现方式\",\"成果仓库\",\"https://github.com/nonebot/cli-plugin-webui\"]},\"1530\":{\"h\":\"NoneBot Discord 适配器\",\"t\":[\"NoneBot 作为一个跨平台聊天机器人框架，目前已有 OneBot、飞书、Telegram、QQ 频道等诸多平台的适配支持。作为众多用户期待的平台适配之一，我们希望借此机会接入 Discord 聊天机器人。\",\"难度：进阶\",\"导师：@iyume\",\"产出要求\",\"调研 Discord Bot 相关功能与接口\",\"设计与编写 NoneBot Discord 适配器\",\"代码符合 NoneBot Contributing 规范\",\"技术要求\",\"熟悉 NoneBot 框架功能\",\"熟悉 NoneBot 各模块职责与适配器编写\",\"成果仓库\",\"https://github.com/nonebot/adapter-discord\"]},\"1531\":{\"h\":\"NoneBot 数据库支持插件\",\"t\":[\"NoneBot 的插件系统为用户实现应用提供了极高的便捷性，但因此也增加了插件统一管理的难度。目前，我们发现许多用户发布的插件中存在文件存储结构化数据、数据存放散乱等现象，同时插件间也可能产生冲突。因此，我们希望提供一个统一的数据存储与管理方式，便于用户读写应用数据。\",\"难度：进阶\",\"导师：@yanyongyu\",\"产出要求\",\"设计并实现 ORM 插件 \",\"提供关系模型定义功能\",\"提供模型迁移与管理功能\",\"能较好的支持 Python 类型检查与推导\",\"编写相应的用户使用文档\",\"代码符合 NoneBot Contributing 规范\",\"技术要求\",\"熟悉 NoneBot 框架功能与插件编写\",\"熟悉 SQLAlchemy 等 ORM 框架 \",\"熟悉 SQLAlchemy ORM\",\"熟悉 alembic 等迁移工具\",\"熟悉 nb-cli 插件编写\",\"成果仓库\",\"https://github.com/nonebot/plugin-orm\"]},\"1532\":{\"h\":\"暑期 2024\",\"t\":[\"开源之夏 - 暑期 2024 是中国科学院软件研究所发起的开源软件供应链点亮计划系列暑期活动，旨在鼓励高校学生积极参与开源软件的开发维护，促进优秀开源软件社区的蓬勃发展。活动联合各大开源社区，针对重要开源软件的开发与维护提供项目开发任务，并向全球高校学生开放报名。关于具体的活动规划、报名方式，请查看该活动的 官网 和 帮助文档。\",\"NoneBot 社区有幸作为开源社区 参与 了本次活动，下面列出了目前我们已经发布的项目，欢迎感兴趣的同学通过 contact@nonebot.dev 联系我们。\"]},\"1533\":{\"h\":\"NonePress 官网组件库更新与优化\",\"t\":[\"NoneBot 官网目前采用基于 TailwindCSS 自研的 NonePress 组件库及 Docusaurus 框架进行构建。由于相关依赖版本迭代迅速，目前官网组件库已产生了较大的版本落后。本项目希望在跟进框架新版本的基础上，对文档整体视觉体验进行重新设计，提升页面的无障碍访问性，基于 React Hydrate 特性实现完整的静态网站生成（SSG）以提升搜索引擎优化（SEO）水平。在解决以上问题的基础上，可对网页的开发以及生产构建性能做相应的优化提升，例如在生产构建使用自有的 webpack loader、替换现有的热重载逻辑以减少开发环境启动耗时等。\",\"难度：进阶\",\"导师：@yanyongyu\",\"产出要求\",\"基于 Docusaurus v3 重构 NonePress 组件库及相关插件 \",\"升级相关依赖并重新打造 Docusaurus theme（布局与组件）\",\"根据需求实现/修改 Docusaurus 插件使得官网内容构建正常\",\"能够提升页面渲染性能与 MDX 相关能力\",\"升级官网采用新版组件库 \",\"Algolia 索引与 SEO 正常\",\"桌面端与移动端显示正常\",\"优化官网开发与生产构建体验\",\"（可选）优化官网部分页面 \",\"优化官网过长的 changelog\",\"优化官网插件商店的展示细节\",\"技术要求\",\"熟练掌握 TS、PostCSS、TSX、MDX等相关技术\",\"掌握 React、Docusaurus、tailwind css 等框架\",\"熟悉静态网站生成 SSG、SEO 优化与 Algolia 索引原理等\",\"成果仓库\",\"https://github.com/nonebot/docusaurus-theme-nonepress\"]},\"1534\":{\"h\":\"NoneFlow 社区自动化工作流管理优化\",\"t\":[\"NoneFlow 在 NoneBot 社区中承担着重要的角色，它由 NoneBot 框架基于 GitHub APP 编写而成，能够自动化的完成许多复杂流程的处理，如：用户请求提交插件到商店时进行自动化检测，并在人工审核通过后自动存储至 registry；定时自动更新 registry 内插件信息，跟进插件新版本情况等。但是，在长期的使用中发现了一些问题和不足的地方，例如：项目本身结构复杂耦合，添加新自动化流程与维护现有流程困难；目前采用了 GitHub 用户名作为插件作者名，但已有不少插件作者改名；插件存储至 registry 并定时更新，缺少统计相关信息以帮助商店更好的展示当前插件状态；插件作者想要修改插件信息时无法便捷的找到操作方式等。本项目希望针对以上问题与不足的地方进行修复与优化，提升用户体验。\",\"难度：进阶\",\"导师：@uy/sun\",\"产出要求\",\"重构现有工作流处理结构 \",\"整合现有 Issue、Pull Request、Git 相关操作\",\"提供用户修改信息的处理方式\",\"正确处理 PR 的 Open、Close、Draft 状态\",\"修复流程中存在的问题 \",\"插件作者名正确展示\",\"registry 定时更新中需要插件测试环境隔离\",\"在 registry 定时更新的同时提供统计数据\",\"技术要求\",\"掌握 GitHub APP 开发 \",\"熟悉 GitHub REST API、GraphQL 等\",\"熟悉 GitHub APP 权限限制\",\"熟悉 NoneBot 框架与 Python 相关技术\",\"熟悉 Git、GitHub Action、GitHub 工作流\",\"成果仓库\",\"https://github.com/nonebot/noneflow\"]},\"1535\":{\"h\":\"NoneBlockly 低代码框架开发\",\"t\":[\"经过深入分析社区反馈，我们发现部分新手因不熟悉编程概念或框架本身而遇到问题。为了解决初学者在使用面向开发者的聊天机器人框架 NoneBot 时遇到的挑战，我们计划引入 Blockly 提供低代码编程支持。通过减少常见的编码错误和降低入门门槛，使框架对初学者更加友好，从而提升用户体验并有助于 NoneBot 生态的成长。本项目将基于 Blockly 实现 NoneBot 插件的低代码编写，使得用户能够快速搭建聊天机器人。\",\"难度：进阶\",\"导师：@mnixry\",\"产出要求\",\"实现 NoneBlockly 低代码开发框架 \",\"能够基于 Alconna 编写跨平台插件\",\"确保插件对 Python 和 NoneBot 版本的兼容性\",\"支持对多种类型 NoneBot 事件的响应\",\"支持对 NoneBot 消息对象的便捷操作\",\"集成 localstore 文件存储、apscheduler 定时任务、网络请求等常用功能\",\"对接 NB-CLI 脚手架，通过脚手架扩展使用低代码框架\",\"技术要求\",\"掌握 Python 与 NoneBot 框架的使用 \",\"熟悉 NoneBot 插件的开发，包括事件响应与消息处理等\",\"熟悉 NoneBot 生态组件（Alconna、localstore、apscheduler等）的使用\",\"了解 NB-CLI 脚手架的扩展开发\",\"熟悉 Blockly 低代码框架的使用和开发\",\"成果仓库\",\"https://github.com/nonebot/noneblockly\"]},\"1536\":{\"h\":\"手动创建项目\",\"t\":[\"在快速上手中，我们已经介绍了如何安装和使用 nb-cli 创建一个项目。在本章节中，我们将简要介绍如何在不使用 nb-cli 的方式创建一个机器人项目的最小实例并启动。如果你想要了解 NoneBot 的启动流程，也可以阅读本章节。\",\"警告\",\"我们十分不推荐直接创建机器人项目，请优先考虑使用 nb-cli 进行项目创建。\",\"一个机器人项目的最小实例中至少需要包含以下内容:\",\"入口文件：初始化并运行机器人的 Python 文件\",\"配置文件：存储机器人启动所需的配置\",\"插件：为机器人提供具体的功能\",\"下面我们创建一个项目文件夹，来存放项目所需文件，以下步骤均在该文件夹中进行。\"]},\"1537\":{\"h\":\"安装依赖\",\"t\":[\"在创建项目前，我们首先需要将项目所需依赖安装至环境中。\",\"（可选）创建虚拟环境，以 venv 为例\",\"python -m venv .venv --prompt nonebot2 # windows .venv\\\\Scripts\\\\activate # linux/macOS source .venv/bin/activate\",\"安装 nonebot2 以及驱动器\",\"pip install 'nonebot2[fastapi]'\",\"驱动器包名可以在 驱动器商店 中找到。\",\"安装适配器\",\"pip install nonebot-adapter-console\",\"适配器包名可以在 适配器商店 中找到。\"]},\"1538\":{\"h\":\"创建配置文件\",\"t\":[\"配置文件用于存放 NoneBot 运行所需要的配置项，使用 pydantic 以及 python-dotenv 来读取配置。配置项需符合 dotenv 格式，复杂类型数据需使用 JSON 格式填写。具体可选配置方式以及配置项详情参考配置。\",\"在项目文件夹中创建一个 .env 文本文件，并写入以下内容:\",\"HOST=0.0.0.0 # 配置 NoneBot 监听的 IP / 主机名 PORT=8080 # 配置 NoneBot 监听的端口 COMMAND_START=[\\\"/\\\"] # 配置命令起始字符 COMMAND_SEP=[\\\".\\\"] # 配置命令分割字符\"]},\"1539\":{\"h\":\"创建入口文件\",\"t\":[\"入口文件（ Entrypoint ）顾名思义，是用来初始化并运行机器人的 Python 文件。入口文件需要完成框架的初始化、注册适配器、加载插件等工作。\",\"提示\",\"如果你使用 nb-cli 创建项目，入口文件不会被创建，该文件功能会被 nb run 命令代替。\",\"在项目文件夹中创建一个 bot.py 文件，并写入以下内容:\",\"import nonebot from nonebot.adapters.console import Adapter as ConsoleAdapter # 避免重复命名 # 初始化 NoneBot nonebot.init() # 注册适配器 driver = nonebot.get_driver() driver.register_adapter(ConsoleAdapter) # 在这里加载插件 nonebot.load_builtin_plugins(\\\"echo\\\") # 内置插件 # nonebot.load_plugin(\\\"thirdparty_plugin\\\") # 第三方插件 # nonebot.load_plugins(\\\"awesome_bot/plugins\\\") # 本地插件 if __name__ == \\\"__main__\\\": nonebot.run()\",\"我们暂时不需要了解其中内容的含义，这些将会在稍后的章节中逐一介绍。在创建完成以上文件并确认已安装所需适配器和插件后，即可运行机器人。\"]},\"1540\":{\"h\":\"运行机器人\",\"t\":[\"在项目文件夹中，使用配置好环境的 Python 解释器运行入口文件（如果使用虚拟环境，请先激活虚拟环境）:\",\"python bot.py\",\"如果你后续使用了 nb-cli ，你仍可以使用 nb run 命令来运行机器人，nb-cli 会自动检测入口文件 bot.py 是否存在并运行。同时，你也可以使用 nb run --reload 来自动检测代码的更改并自动重新运行入口文件。\"]},\"1541\":{\"h\":\"插件编写准备\",\"t\":[\"在正式编写插件之前，我们需要先了解一下插件的概念。\"]},\"1542\":{\"h\":\"插件结构\",\"t\":[\"在 NoneBot 中，插件即是 Python 的一个模块（module）。NoneBot 会在导入时对这些模块做一些特殊的处理使得他们成为一个插件。插件间应尽量减少耦合，可以进行有限制的相互调用，NoneBot 能够正确解析插件间的依赖关系。\"]},\"1543\":{\"h\":\"单文件插件\",\"t\":[\"一个普通的 .py 文件即可以作为一个插件，例如创建一个 foo.py 文件：\",\"📂 plugins └── 📜 foo.py\",\"这个时候模块 foo 已经可以被称为一个插件了，尽管它还什么都没做。\"]},\"1544\":{\"h\":\"包插件\",\"t\":[\"一个包含 __init__.py 的文件夹即是一个常规 Python 包 package，例如创建一个 foo 文件夹：\",\"📂 plugins └── 📂 foo └── 📜 __init__.py\",\"这个时候包 foo 同样是一个合法的插件，插件内容可以在 __init__.py 文件中编写。\"]},\"1545\":{\"h\":\"创建插件\",\"t\":[\"注意\",\"如果在之前的快速上手章节中已经使用 bootstrap 模板创建了项目，那么你需要做出如下修改：\",\"在项目目录中创建一个两层文件夹 awesome_bot/plugins\",\"📦 awesome-bot ├── 📂 awesome_bot │ └── 📂 plugins ├── 📜 pyproject.toml └── 📜 README.md\",\"修改 pyproject.toml 文件中的 nonebot 配置项，在 plugin_dirs 中添加 awesome_bot/plugins\",\"[tool.nonebot] plugin_dirs = [\\\"awesome_bot/plugins\\\"]\",\"注意\",\"如果在之前的创建项目章节中手动创建了相关文件，那么你需要做出如下修改：\",\"在项目目录中创建一个两层文件夹 awesome_bot/plugins\",\"📦 awesome-bot ├── 📂 awesome_bot │ └── 📂 plugins └── 📜 bot.py\",\"修改 bot.py 文件中的加载插件部分，取消注释或者添加如下代码\",\"# 在这里加载插件 nonebot.load_builtin_plugins(\\\"echo\\\") # 内置插件 nonebot.load_plugins(\\\"awesome_bot/plugins\\\") # 本地插件\",\"创建插件可以通过 nb-cli 命令从完整模板创建，也可以手动新建空白文件。通过以下命令创建一个名为 weather 的插件：\",\"$ nb plugin create [?] 插件名称: weather [?] 使用嵌套插件? (y/N) N [?] 输出目录: awesome_bot/plugins\",\"nb-cli 会在 awesome_bot/plugins 目录下创建一个名为 weather 的文件夹，其中包含的文件将在稍后章节中用到。\",\"📦 awesome-bot ├── 📂 awesome_bot │ └── 📂 plugins | └── 📂 foo | ├── 📜 __init__.py | └── 📜 config.py ├── 📜 pyproject.toml └── 📜 README.md\"]},\"1546\":{\"h\":\"加载插件\",\"t\":[\"警告\",\"请勿在插件被加载前 import 插件模块，这会导致 NoneBot 无法将其转换为插件而出现意料之外的情况。\",\"加载插件是在机器人入口文件中完成的，需要在框架初始化之后，运行之前进行。\",\"请注意，加载的插件模块名称（插件文件名或文件夹名）不能相同，且每一个插件只能被加载一次，重复加载将会导致异常。\",\"如果你使用 nb-cli 管理插件，那么你可以跳过这一节，nb-cli 将会自动处理加载。\",\"如果你使用自定义的入口文件bot.py，那么你需要在 bot.py 中加载插件。\",\"import nonebot nonebot.init() # 加载插件 nonebot.run()\",\"加载插件的方式有多种，但在底层的加载逻辑是一致的。以下是为加载插件提供的几种方式：\"]},\"1547\":{\"h\":\"\",\"t\":[\"通过点分割模块名称或使用 pathlib 的 Path 对象来加载插件。通常用于加载第三方插件或者项目插件。例如：\",\"from pathlib import Path nonebot.load_plugin(\\\"path.to.your.plugin\\\") # 加载第三方插件 nonebot.load_plugin(Path(\\\"./path/to/your/plugin.py\\\")) # 加载项目插件\",\"注意\",\"请注意，本地插件的路径应该为相对机器人 入口文件（通常为 bot.py） 可导入的，例如在项目 plugins 目录下。\"]},\"1548\":{\"h\":\"\",\"t\":[\"加载传入插件目录中的所有插件，通常用于加载一系列本地编写的项目插件。例如：\",\"nonebot.load_plugins(\\\"src/plugins\\\", \\\"path/to/your/plugins\\\")\",\"注意\",\"请注意，插件目录应该为相对机器人 入口文件（通常为 bot.py） 可导入的，例如在项目 plugins 目录下。\"]},\"1549\":{\"h\":\"\",\"t\":[\"这种加载方式是以上两种方式的混合，加载所有传入的插件模块名称，以及所有给定目录下的插件。例如：\",\"nonebot.load_all_plugins([\\\"path.to.your.plugin\\\"], [\\\"path/to/your/plugins\\\"])\"]},\"1550\":{\"h\":\"\",\"t\":[\"通过 JSON 文件加载插件，是 load_all_plugins 的 JSON 变种。通过读取 JSON 文件中的 plugins 字段和 plugin_dirs 字段进行加载。例如：\",\"{ \\\"plugins\\\": [\\\"path.to.your.plugin\\\"], \\\"plugin_dirs\\\": [\\\"path/to/your/plugins\\\"] }\",\"nonebot.load_from_json(\\\"plugin_config.json\\\", encoding=\\\"utf-8\\\")\",\"提示\",\"如果 JSON 配置文件中的字段无法满足你的需求，可以使用 load_all_plugins 方法自行读取配置来加载插件。\"]},\"1551\":{\"h\":\"\",\"t\":[\"通过 TOML 文件加载插件，是 load_all_plugins 的 TOML 变种。通过读取 TOML 文件中的 [tool.nonebot] Table 中的 plugins 和 plugin_dirs Array 进行加载。例如：\",\"[tool.nonebot] plugins = [\\\"path.to.your.plugin\\\"] plugin_dirs = [\\\"path/to/your/plugins\\\"]\",\"nonebot.load_from_toml(\\\"plugin_config.toml\\\", encoding=\\\"utf-8\\\")\",\"提示\",\"如果 TOML 配置文件中的字段无法满足你的需求，可以使用 load_all_plugins 方法自行读取配置来加载插件。\"]},\"1552\":{\"h\":\"\",\"t\":[\"加载一个内置插件，传入的插件名必须为 NoneBot 内置插件。该方法是 load_plugin 的封装。例如：\",\"nonebot.load_builtin_plugin(\\\"echo\\\")\"]},\"1553\":{\"h\":\"\",\"t\":[\"加载传入插件列表中的所有内置插件。例如：\",\"nonebot.load_builtin_plugins(\\\"echo\\\", \\\"single_session\\\")\"]},\"1554\":{\"h\":\"其他加载方式\",\"t\":[\"有关其他插件加载的方式，可参考跨插件访问和嵌套插件。\"]},\"1555\":{\"h\":\"机器人的构成\",\"t\":[\"了解机器人的基本构成有助于你更好地使用 NoneBot，本章节将介绍 NoneBot 中的基本组成部分，稍后的文档中将会使用到这些概念。\",\"使用 NoneBot 框架搭建的机器人具有以下几个基本组成部分：\",\"NoneBot 机器人框架主体：负责连接各个组成部分，提供基本的机器人功能\",\"驱动器 Driver：客户端/服务端的功能实现，负责接收和发送消息（通常为 HTTP 通信）\",\"适配器 Adapter：驱动器的上层，负责将平台消息与 NoneBot 事件/操作系统的消息格式相互转换\",\"插件 Plugin：机器人的功能实现，通常为负责处理事件并进行一系列的操作\",\"除 NoneBot 机器人框架主体外，其他部分均可按需选择、互相搭配，但由于平台的兼容性问题，部分插件可能仅在某些特定平台上可用（这由插件编写者决定）。\",\"在接下来的章节中，我们将重点介绍机器人功能实现，即插件 Plugin 部分。\"]},\"1556\":{\"h\":\"事件响应器\",\"t\":[\"事件响应器（Matcher）是对接收到的事件进行响应的基本单元，所有的事件响应器都继承自 Matcher 基类。\",\"在 NoneBot 中，事件响应器可以通过一系列特定的规则筛选出具有某种特征的事件，并按照特定的流程交由预定义的事件处理依赖进行处理。例如，在快速上手中，我们使用了内置插件 echo ，它定义的事件响应器能响应机器人用户发送的“/echo hello world”消息，提取“hello world”信息并作为回复消息发送。\"]},\"1557\":{\"h\":\"事件响应器辅助函数\",\"t\":[\"NoneBot 中所有事件响应器均继承自 Matcher 基类，但直接使用 Matcher.new() 方法创建事件响应器过于繁琐且不能记录插件信息。因此，NoneBot 中提供了一系列“事件响应器辅助函数”（下称“辅助函数”）来辅助我们用最简的方式创建带有不同规则预设的事件响应器，提高代码可读性和书写效率。通常情况下，我们只需要使用辅助函数即可完成事件响应器的创建。\",\"在 NoneBot 中，辅助函数以 on() 或 on_<type/rule>() 形式出现（例如 on_command()），调用后根据不同的参数返回一个 Type[Matcher] 类型的新事件响应器。\",\"目前 NoneBot 提供了多种功能各异的辅助函数、具有共同命令名称前缀的命令组以及具有共同参数的响应器组，均可以从 nonebot 模块直接导入使用，具体内容参考事件响应器进阶。\"]},\"1558\":{\"h\":\"创建事件响应器\",\"t\":[\"在上一节创建插件中，我们创建了一个 weather 插件，现在我们来实现他的功能。\",\"我们直接使用 on_command() 辅助函数来创建一个事件响应器：\",\"from nonebot import on_command weather = on_command(\\\"天气\\\")\",\"这样，我们就获得一个名为 weather 的事件响应器了，这个事件响应器会对 /天气 开头的消息进行响应。\",\"提示\",\"如果一条消息中包含“@机器人”或以“机器人的昵称”开始，例如 @bot /天气 时，协议适配器会将 event.is_tome() 判断为 True ，同时也会自动去除 @bot，即事件响应器收到的信息内容为 /天气，方便进行命令匹配。\"]},\"1559\":{\"h\":\"为事件响应器添加参数\",\"t\":[\"在辅助函数中，我们可以添加一些参数来对事件响应器进行更加精细的调整，例如事件响应器的优先级、匹配规则等。例如：\",\"from nonebot import on_command from nonebot.rule import to_me weather = on_command(\\\"天气\\\", rule=to_me(), aliases={\\\"weather\\\", \\\"查天气\\\"}, priority=10, block=True)\",\"这样，我们就获得了一个可以响应 天气、weather、查天气 三个命令的响应规则，需要私聊或 @bot 时才会响应，优先级为 10（越小越优先），阻断事件向后续优先级传播的事件响应器了。这些内容的意义和使用方法将会在后续的章节中一一介绍。\",\"提示\",\"需要注意的是，不同的辅助函数有不同的可选参数，在使用之前可以参考事件响应器进阶 - 基本辅助函数或 API 文档。\"]},\"1560\":{\"h\":\"处理消息\",\"t\":[\"在不同平台中，一条消息可能会有承载有各种不同的表现形式，它可能是一段纯文本、一张图片、一段语音、一篇富文本文章，也有可能是多种类型的组合等等。\",\"在 NoneBot 中，为确保消息的正常处理与跨平台兼容性，采用了扁平化的消息序列形式，即 Message 对象。消息序列是 NoneBot 中的消息载体，无论是接收还是发送的消息，都采用消息序列的形式进行处理。\"]},\"1561\":{\"h\":\"认识消息类型\"},\"1562\":{\"h\":\"消息序列\",\"t\":[\"在 NoneBot 中，消息序列 Message 的主要作用是用于表达“一串消息”。由于消息序列继承自 List[MessageSegment]，所以 Message 的本质是由若干消息段所组成的序列。因此，消息序列的使用方法与 List 有很多相似之处，例如切片、索引、拼接等。\",\"在上一节的使用依赖注入中，我们已经通过依赖注入 CommandArg() 获取了命令的参数，它的类型即是消息序列。我们使用了消息序列的 extract_plain_text() 方法来获取消息序列中的纯文本内容。\"]},\"1563\":{\"h\":\"消息段\",\"t\":[\"顾名思义，消息段 MessageSegment 是一段消息。由于消息序列的本质是由若干消息段所组成的序列，消息段可以被认为是构成消息序列的最小单位。简单来说，消息序列类似于一个自然段，而消息段则是组成自然段的一句话。同时，作为特殊消息载体的存在，绝大多数的平台都有着独特的消息类型，这些独特的内容均需要由对应的协议适配器所提供，以适应不同平台中的消息模式。这也意味着，你需要导入对应的协议适配器中的消息序列和消息段后才能使用其特殊的工厂方法。\",\"注意\",\"消息段的类型是由协议适配器提供的，因此你需要参考协议适配器的文档并导入对应的消息段后才能使用其特殊的消息类型。\",\"在上一节的使用依赖注入中，我们导入的为 nonebot.adapters.Message 抽象基类，因此我们无法使用平台特有的消息类型。仅能使用 str 作为纯文本消息回复。\"]},\"1564\":{\"h\":\"使用消息序列\",\"t\":[\"注意\",\"在以下的示例中，为了更好的理解多种类型的消息组成方式，我们将使用 Console 协议适配器来演示消息序列的使用方法。在实际使用中，你需要确保你使用的消息序列类型与你所要发送的平台类型一致。\",\"通常情况下，适配器在接收到消息时，会将消息转换为消息序列，可以通过依赖注入 EventMessage，或者使用 event.get_message() 获取。\",\"由于消息序列是 List[MessageSegment] 的子类，所以你总是可以用和操作 List 类似的方式来处理消息序列。例如：\",\">>> from nonebot.adapters.console import Message, MessageSegment >>> message = Message([ MessageSegment(type=\\\"text\\\", data={\\\"text\\\":\\\"hello\\\"}), MessageSegment(type=\\\"markdown\\\", data={\\\"markup\\\":\\\"**world**\\\"}), ]) >>> for segment in message: ... print(segment.type, segment.data) ... text {'text': 'hello'} markdown {'markup': '**world**'} >>> len(message) 2\"]},\"1565\":{\"h\":\"构造消息序列\",\"t\":[\"在使用事件响应器操作发送消息时，既可以使用 str 作为消息，也可以使用 Message、MessageSegment 或者 MessageTemplate。那么，我们就需要先构造一个消息序列。消息序列可以通过多种方式构造：\"]},\"1566\":{\"h\":\"直接构造\",\"t\":[\"Message 类可以直接实例化，支持 str、MessageSegment、Iterable[MessageSegment] 或适配器自定义类型的参数。\",\"from nonebot.adapters.console import Message, MessageSegment # str Message(\\\"Hello, world!\\\") # MessageSegment Message(MessageSegment.text(\\\"Hello, world!\\\")) # List[MessageSegment] Message([MessageSegment.text(\\\"Hello, world!\\\")])\"]},\"1567\":{\"h\":\"运算构造\",\"t\":[\"Message 对象可以通过 str、MessageSegment 相加构造，详情请参考拼接消息。\"]},\"1568\":{\"h\":\"从字典数组构造\",\"t\":[\"Message 对象支持 Pydantic 自定义类型构造，可以使用 Pydantic 的 TypeAdapter 方法进行构造。\",\"from pydantic import TypeAdapter from nonebot.adapters.console import Message, MessageSegment # 由字典构造消息段 TypeAdapter(MessageSegment).validate_python( {\\\"type\\\": \\\"text\\\", \\\"data\\\": {\\\"text\\\": \\\"text\\\"}} ) == MessageSegment.text(\\\"text\\\") # 由字典数组构造消息序列 TypeAdapter(Message).validate_python( [MessageSegment.text(\\\"text\\\"), {\\\"type\\\": \\\"text\\\", \\\"data\\\": {\\\"text\\\": \\\"text\\\"}}], ) == Message([MessageSegment.text(\\\"text\\\"), MessageSegment.text(\\\"text\\\")])\"]},\"1569\":{\"h\":\"获取消息纯文本\",\"t\":[\"由于消息中存在各种类型的消息段，因此 str(message) 通常不能得到消息的纯文本，而是一个消息序列的字符串表示。\",\"NoneBot 为消息段定义了一个方法 is_text() ，可以用于判断消息段是否为纯文本；也可以使用 message.extract_plain_text() 方法获取消息纯文本。\",\"from nonebot.adapters.console import Message, MessageSegment # 判断消息段是否为纯文本 MessageSegment.text(\\\"text\\\").is_text() == True # 提取消息纯文本字符串 Message( [MessageSegment.text(\\\"text\\\"), MessageSegment.markdown(\\\"**markup**\\\")] ).extract_plain_text() == \\\"text\\\"\"]},\"1570\":{\"h\":\"遍历\",\"t\":[\"消息序列继承自 List[MessageSegment] ，因此可以使用 for 循环遍历消息段。\",\"for segment in message: ...\"]},\"1571\":{\"h\":\"比较\",\"t\":[\"消息和消息段都可以使用 == 或 != 运算符比较是否相同。\",\"MessageSegment.text(\\\"text\\\") != MessageSegment.text(\\\"foo\\\") some_message == Message([MessageSegment.text(\\\"text\\\")])\"]},\"1572\":{\"h\":\"检查消息段\",\"t\":[\"我们可以通过 in 运算符或消息序列的 has 方法来：\",\"# 是否存在消息段 MessageSegment.text(\\\"text\\\") in message # 是否存在指定类型的消息段 \\\"text\\\" in message\",\"我们还可以使用消息序列的 only 方法来检查消息中是否仅包含指定的消息段。\",\"# 是否都为指定消息段 message.only(MessageSegment.text(\\\"test\\\")) # 是否仅包含指定类型的消息段 message.only(\\\"text\\\")\"]},\"1573\":{\"h\":\"过滤、索引与切片\",\"t\":[\"消息序列对列表的索引与切片进行了增强，在原有列表 int 索引与 slice 切片的基础上，支持 type 过滤索引与切片。\",\"from nonebot.adapters.console import Message, MessageSegment message = Message( [ MessageSegment.text(\\\"test\\\"), MessageSegment.markdown(\\\"test2\\\"), MessageSegment.markdown(\\\"test3\\\"), MessageSegment.text(\\\"test4\\\"), ] ) # 索引 message[0] == MessageSegment.text(\\\"test\\\") # 切片 message[0:2] == Message( [MessageSegment.text(\\\"test\\\"), MessageSegment.markdown(\\\"test2\\\")] ) # 类型过滤 message[\\\"markdown\\\"] == Message( [MessageSegment.markdown(\\\"test2\\\"), MessageSegment.markdown(\\\"test3\\\")] ) # 类型索引 message[\\\"markdown\\\", 0] == MessageSegment.markdown(\\\"test2\\\") # 类型切片 message[\\\"markdown\\\", 0:2] == Message( [MessageSegment.markdown(\\\"test2\\\"), MessageSegment.markdown(\\\"test3\\\")] )\",\"我们也可以通过消息序列的 include、exclude 方法进行类型过滤。\",\"message.include(\\\"text\\\", \\\"markdown\\\") message.exclude(\\\"text\\\")\",\"同样的，消息序列对列表的 index、count 方法也进行了增强，可以用于索引指定类型的消息段。\",\"# 指定类型首个消息段索引 message.index(\\\"markdown\\\") == 1 # 指定类型消息段数量 message.count(\\\"markdown\\\") == 2\",\"此外，消息序列添加了一个 get 方法，可以用于获取指定类型指定个数的消息段。\",\"# 获取指定类型指定个数的消息段 message.get(\\\"markdown\\\", 1) == Message([MessageSegment.markdown(\\\"test2\\\")])\"]},\"1574\":{\"h\":\"拼接消息\",\"t\":[\"str、Message、MessageSegment 对象之间可以直接相加，相加均会返回一个新的 Message 对象。\",\"# 消息序列与消息段相加 Message([MessageSegment.text(\\\"text\\\")]) + MessageSegment.text(\\\"text\\\") # 消息序列与字符串相加 Message([MessageSegment.text(\\\"text\\\")]) + \\\"text\\\" # 消息序列与消息序列相加 Message([MessageSegment.text(\\\"text\\\")]) + Message([MessageSegment.text(\\\"text\\\")]) # 字符串与消息序列相加 \\\"text\\\" + Message([MessageSegment.text(\\\"text\\\")]) # 消息段与消息段相加 MessageSegment.text(\\\"text\\\") + MessageSegment.text(\\\"text\\\") # 消息段与字符串相加 MessageSegment.text(\\\"text\\\") + \\\"text\\\" # 消息段与消息序列相加 MessageSegment.text(\\\"text\\\") + Message([MessageSegment.text(\\\"text\\\")]) # 字符串与消息段相加 \\\"text\\\" + MessageSegment.text(\\\"text\\\")\",\"如果需要在当前消息序列后直接拼接新的消息段，可以使用 Message.append、Message.extend 方法，或者使用自加。\",\"msg = Message([MessageSegment.text(\\\"text\\\")]) # 自加 msg += \\\"text\\\" msg += MessageSegment.text(\\\"text\\\") msg += Message([MessageSegment.text(\\\"text\\\")]) # 附加 msg.append(\\\"text\\\") msg.append(MessageSegment.text(\\\"text\\\")) # 扩展 msg.extend([MessageSegment.text(\\\"text\\\")])\",\"我们也可以通过消息段或消息序列的 join 方法来拼接一串消息：\",\"seg = MessageSegment.text(\\\"text\\\") msg = seg.join( [ MessageSegment.text(\\\"first\\\"), Message( [ MessageSegment.text(\\\"second\\\"), MessageSegment.text(\\\"third\\\"), ] ) ] ) msg == Message( [ MessageSegment.text(\\\"first\\\"), MessageSegment.text(\\\"text\\\"), MessageSegment.text(\\\"second\\\"), MessageSegment.text(\\\"third\\\"), ] )\"]},\"1575\":{\"h\":\"使用消息模板\",\"t\":[\"为了提供安全可靠的跨平台模板字符，我们提供了一个消息模板功能来构建消息序列\",\"它在以下常见场景中尤其有用：\",\"多行富文本编排（包含图片，文字以及表情等）\",\"客制化（由 Bot 最终用户提供消息模板时）\",\"在事实上，它的用法和 str.format 极为相近，所以你在使用的时候，总是可以参考Python 文档来达到你想要的效果，这里给出几个简单的例子。\",\"默认情况下，消息模板采用 str 纯文本形式的格式化：\",\">>> from nonebot.adapters import MessageTemplate >>> MessageTemplate(\\\"{} {}\\\").format(\\\"hello\\\", \\\"world\\\") 'hello world'\",\"如果 Message.template 构建消息模板，那么消息模板将采用消息序列形式的格式化，此时的消息将会是平台特定的：\",\"注意\",\"使用 Message.template 构建消息模板时，应注意消息序列为平台适配器提供的类型，不能使用 nonebot.adapters.Message 基类作为模板构建。使用基类构建模板与使用 str 构建模板的效果是一样的，因此请使用上述的 MessageTemplate 类直接构建模板。：\",\">>> from nonebot.adapters.console import Message, MessageSegment >>> Message.template(\\\"{} {}\\\").format(\\\"hello\\\", \\\"world\\\") Message( MessageSegment.text(\\\"hello\\\"), MessageSegment.text(\\\" \\\"), MessageSegment.text(\\\"world\\\") )\",\"消息模板支持使用消息段进行格式化：\",\">>> from nonebot.adapters.console import Message, MessageSegment >>> Message.template(\\\"{}{}\\\").format(MessageSegment.markdown(\\\"**markup**\\\"), \\\"world\\\") Message( MessageSegment(type='markdown', data={'markup': '**markup**'}), MessageSegment(type='text', data={'text': 'world'}) )\",\"消息模板同样支持使用消息序列作为模板：\",\">>> from nonebot.adapters.console import Message, MessageSegment >>> Message.template( ... MessageSegment.text(\\\"{user_id}\\\") + MessageSegment.emoji(\\\"tada\\\") + ... MessageSegment.text(\\\"{message}\\\") ... ).format_map({\\\"user_id\\\": 123456, \\\"message\\\": \\\"hello world\\\"}) Message( MessageSegment(type='text', data={'text': '123456'}), MessageSegment(type='emoji', data={'emoji': 'tada'}), MessageSegment(type='text', data={'text': 'hello world'}) )\",\"注意\",\"只有消息序列中的文本类型消息段才能被格式化，其他类型的消息段将会原样添加。\",\"消息模板支持使用拓展控制符来控制消息段类型：\",\">>> from nonebot.adapters.console import Message, MessageSegment >>> Message.template(\\\"{name:emoji}\\\").format(name='tada') Message(MessageSegment(type='emoji', data={'name': 'tada'}))\"]},\"1576\":{\"h\":\"nonebot.adapters\",\"t\":[\"本模块定义了协议适配基类，各协议请继承以下基类。\",\"使用 Driver.register_adapter 注册适配器。\"]},\"1577\":{\"h\":\"\",\"t\":[\"说明\",\"Bot 基类。\",\"用于处理上报消息，并提供 API 调用接口。\",\"参数\",\"adapter (Adapter): 协议适配器实例\",\"self_id (str): 机器人 ID\"]},\"1578\":{\"h\":\"\",\"t\":[\"类型:Adapter\",\"说明: 协议适配器实例\"]},\"1579\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明: 机器人 ID\"]},\"1580\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明: 协议适配器名称\"]},\"1581\":{\"h\":\"\",\"t\":[\"类型:Config\",\"说明: 全局 NoneBot 配置\"]},\"1582\":{\"h\":\"\",\"t\":[\"说明: 调用机器人 API 接口，可以通过该函数或直接通过 bot 属性进行调用\",\"参数\",\"api (str): API 名称\",\"**data (Any): API 数据\",\"返回\",\"Any\",\"用法\",\"await bot.call_api(\\\"send_msg\\\", message=\\\"hello world\\\") await bot.send_msg(message=\\\"hello world\\\")\"]},\"1583\":{\"h\":\"\",\"t\":[\"说明: 调用机器人基础发送消息接口\",\"参数\",\"event (Event): 上报事件\",\"message (str | Message | MessageSegment): 要发送的消息\",\"**kwargs (Any): 任意额外参数\",\"返回\",\"Any\"]},\"1584\":{\"h\":\"\",\"t\":[\"说明\",\"调用 api 预处理。\",\"钩子函数参数:\",\"bot: 当前 bot 对象\",\"api: 调用的 api 名称\",\"data: api 调用的参数字典\",\"参数\",\"func (T_CallingAPIHook)\",\"返回\",\"T_CallingAPIHook\"]},\"1585\":{\"h\":\"\",\"t\":[\"说明\",\"调用 api 后处理。\",\"钩子函数参数:\",\"bot: 当前 bot 对象\",\"exception: 调用 api 时发生的错误\",\"api: 调用的 api 名称\",\"data: api 调用的参数字典\",\"result: api 调用的返回\",\"参数\",\"func (T_CalledAPIHook)\",\"返回\",\"T_CalledAPIHook\"]},\"1586\":{\"h\":\"\",\"t\":[\"说明: Event 基类。提供获取关键信息的方法，其余信息可直接获取。\",\"参数\",\"auto\"]},\"1587\":{\"h\":\"\",\"t\":[\"说明: 获取事件类型的方法，类型通常为 NoneBot 内置的四种类型。\",\"参数\",\"empty\",\"返回\",\"str\"]},\"1588\":{\"h\":\"\",\"t\":[\"说明: 获取事件名称的方法。\",\"参数\",\"empty\",\"返回\",\"str\"]},\"1589\":{\"h\":\"\",\"t\":[\"说明: 获取事件描述的方法，通常为事件具体内容。\",\"参数\",\"empty\",\"返回\",\"str\"]},\"1590\":{\"h\":\"\",\"t\":[\"说明\",\"获取事件日志信息的方法。\",\"通常你不需要修改这个方法，只有当希望 NoneBot 隐藏该事件日志时， 可以抛出 NoLogException 异常。\",\"参数\",\"empty\",\"返回\",\"str\",\"异常\",\"NoLogException: 希望 NoneBot 隐藏该事件日志\"]},\"1591\":{\"h\":\"\",\"t\":[\"说明: 获取事件主体 id 的方法，通常是用户 id 。\",\"参数\",\"empty\",\"返回\",\"str\"]},\"1592\":{\"h\":\"\",\"t\":[\"说明: 获取会话 id 的方法，用于判断当前事件属于哪一个会话， 通常是用户 id、群组 id 组合。\",\"参数\",\"empty\",\"返回\",\"str\"]},\"1593\":{\"h\":\"\",\"t\":[\"说明: 获取事件消息内容的方法。\",\"参数\",\"empty\",\"返回\",\"Message\"]},\"1594\":{\"h\":\"\",\"t\":[\"说明\",\"获取消息纯文本的方法。\",\"通常不需要修改，默认通过 get_message().extract_plain_text 获取。\",\"参数\",\"empty\",\"返回\",\"str\"]},\"1595\":{\"h\":\"\",\"t\":[\"说明: 获取事件是否与机器人有关的方法。\",\"参数\",\"empty\",\"返回\",\"bool\"]},\"1596\":{\"h\":\"\",\"t\":[\"说明\",\"协议适配器基类。\",\"通常，在 Adapter 中编写协议通信相关代码，如: 建立通信连接、处理接收与发送 data 等。\",\"参数\",\"driver (Driver): Driver 实例\",\"**kwargs (Any): 其他由 Driver.register_adapter 传入的额外参数\"]},\"1597\":{\"h\":\"\",\"t\":[\"类型:Driver\",\"说明: 实例\"]},\"1598\":{\"h\":\"\",\"t\":[\"类型: dict[str, Bot]\",\"说明: 本协议适配器已建立连接的 Bot 实例\"]},\"1599\":{\"h\":\"\",\"t\":[\"说明: 当前协议适配器的名称\",\"参数\",\"empty\",\"返回\",\"str\"]},\"1600\":{\"h\":\"\",\"t\":[\"类型:Config\",\"说明: 全局 NoneBot 配置\"]},\"1601\":{\"h\":\"\",\"t\":[\"说明\",\"告知 NoneBot 建立了一个新的 Bot 连接。\",\"当有新的 Bot 实例连接建立成功时调用。\",\"参数\",\"bot (Bot): Bot 实例\",\"返回\",\"None\"]},\"1602\":{\"h\":\"\",\"t\":[\"说明\",\"告知 NoneBot Bot 连接已断开。\",\"当有 Bot 实例连接断开时调用。\",\"参数\",\"bot (Bot): Bot 实例\",\"返回\",\"None\"]},\"1603\":{\"h\":\"\",\"t\":[\"说明: 设置一个 HTTP 服务器路由配置\",\"参数\",\"setup (HTTPServerSetup)\",\"返回\",\"untyped\"]},\"1604\":{\"h\":\"\",\"t\":[\"说明: 设置一个 WebSocket 服务器路由配置\",\"参数\",\"setup (WebSocketServerSetup)\",\"返回\",\"untyped\"]},\"1605\":{\"h\":\"\",\"t\":[\"说明: 进行一个 HTTP 客户端请求\",\"参数\",\"setup (Request)\",\"返回\",\"Response\"]},\"1606\":{\"h\":\"\",\"t\":[\"说明: 建立一个 WebSocket 客户端连接请求\",\"参数\",\"setup (Request)\",\"返回\",\"AsyncGenerator[WebSocket, None]\"]},\"1607\":{\"h\":\"\",\"t\":[\"参数\",\"func (LIFESPAN_FUNC)\",\"返回\",\"LIFESPAN_FUNC\"]},\"1608\":{\"h\":\"\",\"t\":[\"说明: 消息序列\",\"参数\",\"message: 消息内容\"]},\"1609\":{\"h\":\"\",\"t\":[\"说明\",\"创建消息模板。\",\"用法和 str.format 大致相同，支持以 Message 对象作为消息模板并输出消息对象。 并且提供了拓展的格式化控制符， 可以通过该消息类型的 MessageSegment 工厂方法创建消息。\",\"参数\",\"format_string (str | TM): 格式化模板\",\"返回\",\"MessageTemplate[Self]: 消息格式化器\"]},\"1610\":{\"h\":\"\",\"t\":[\"说明: 获取消息段类型\",\"参数\",\"empty\",\"返回\",\"type[TMS]\"]},\"1611\":{\"h\":\"\",\"t\":[\"说明: 构造消息数组\",\"参数\",\"msg (str)\",\"返回\",\"Iterable[TMS]\"]},\"1612\":{\"h\":\"\",\"t\":[\"重载\",\"1.(args) -> Self\",\"参数\",\"args (str): 消息段类型\",\"返回\",\"Self: 所有类型为 args 的消息段\",\"2.(args) -> TMS\",\"参数\",\"args (tuple[str, int]): 消息段类型和索引\",\"返回\",\"TMS: 类型为 args[0] 的消息段第 args[1] 个\",\"3.(args) -> Self\",\"参数\",\"args (tuple[str, slice]): 消息段类型和切片\",\"返回\",\"Self: 类型为 args[0] 的消息段切片 args[1]\",\"4.(args) -> TMS\",\"参数\",\"args (int): 索引\",\"返回\",\"TMS: 第 args 个消息段\",\"5.(args) -> Self\",\"参数\",\"args (slice): 切片\",\"返回\",\"Self: 消息切片 args\"]},\"1613\":{\"h\":\"\",\"t\":[\"说明: 检查消息段是否存在\",\"参数\",\"value (TMS | str): 消息段或消息段类型\",\"返回\",\"bool: 消息内是否存在给定消息段或给定类型的消息段\"]},\"1614\":{\"h\":\"\",\"t\":[\"说明: 与 __contains__ 相同\",\"参数\",\"value (TMS | str)\",\"返回\",\"bool\"]},\"1615\":{\"h\":\"\",\"t\":[\"说明: 索引消息段\",\"参数\",\"value (TMS | str): 消息段或者消息段类型\",\"*args (SupportsIndex)\",\"arg: start 与 end\",\"返回\",\"int: 索引 index\",\"异常\",\"ValueError: 消息段不存在\"]},\"1616\":{\"h\":\"\",\"t\":[\"说明: 获取指定类型的消息段\",\"参数\",\"type_ (str): 消息段类型\",\"count (int | None): 获取个数\",\"返回\",\"Self: 构建的新消息\"]},\"1617\":{\"h\":\"\",\"t\":[\"说明: 计算指定消息段的个数\",\"参数\",\"value (TMS | str): 消息段或消息段类型\",\"返回\",\"int: 个数\"]},\"1618\":{\"h\":\"\",\"t\":[\"说明: 检查消息中是否仅包含指定消息段\",\"参数\",\"value (TMS | str): 指定消息段或消息段类型\",\"返回\",\"bool: 是否仅包含指定消息段\"]},\"1619\":{\"h\":\"\",\"t\":[\"说明: 添加一个消息段到消息数组末尾。\",\"参数\",\"obj (str | TMS): 要添加的消息段\",\"返回\",\"Self\"]},\"1620\":{\"h\":\"\",\"t\":[\"说明: 拼接一个消息数组或多个消息段到消息数组末尾。\",\"参数\",\"obj (Self | Iterable[TMS]): 要添加的消息数组\",\"返回\",\"Self\"]},\"1621\":{\"h\":\"\",\"t\":[\"说明: 将多个消息连接并将自身作为分割\",\"参数\",\"iterable (Iterable[TMS | Self]): 要连接的消息\",\"返回\",\"Self: 连接后的消息\"]},\"1622\":{\"h\":\"\",\"t\":[\"说明: 深拷贝消息\",\"参数\",\"empty\",\"返回\",\"Self\"]},\"1623\":{\"h\":\"\",\"t\":[\"说明: 过滤消息\",\"参数\",\"*types (str): 包含的消息段类型\",\"返回\",\"Self: 新构造的消息\"]},\"1624\":{\"h\":\"\",\"t\":[\"说明: 过滤消息\",\"参数\",\"*types (str): 不包含的消息段类型\",\"返回\",\"Self: 新构造的消息\"]},\"1625\":{\"h\":\"\",\"t\":[\"说明: 提取消息内纯文本消息\",\"参数\",\"empty\",\"返回\",\"str\"]},\"1626\":{\"h\":\"\",\"t\":[\"说明: 消息段基类\",\"参数\",\"auto\"]},\"1627\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明: 消息段类型\"]},\"1628\":{\"h\":\"\",\"t\":[\"类型: dict[str, Any]\",\"说明: 消息段数据\"]},\"1629\":{\"h\":\"\",\"t\":[\"说明: 获取消息数组类型\",\"参数\",\"empty\",\"返回\",\"type[TM]\"]},\"1630\":{\"h\":\"\",\"t\":[\"说明: 该消息段所代表的 str，在命令匹配部分使用\",\"参数\",\"empty\",\"返回\",\"str\"]},\"1631\":{\"h\":\"\",\"t\":[\"参数\",\"other (str | TMS | Iterable[TMS])\",\"返回\",\"TM\"]},\"1632\":{\"h\":\"\",\"t\":[\"参数\",\"key (str)\",\"default (Any)\",\"返回\",\"untyped\"]},\"1633\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"untyped\"]},\"1634\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"untyped\"]},\"1635\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"untyped\"]},\"1636\":{\"h\":\"\",\"t\":[\"参数\",\"iterable (Iterable[TMS | TM])\",\"返回\",\"TM\"]},\"1637\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"Self\"]},\"1638\":{\"h\":\"\",\"t\":[\"说明: 当前消息段是否为纯文本\",\"参数\",\"empty\",\"返回\",\"bool\"]},\"1639\":{\"h\":\"\",\"t\":[\"说明: 消息模板格式化实现类。\",\"参数\",\"template (str | TM): 模板\",\"factory (type[str] | type[TM]): 消息类型工厂，默认为 str\",\"private_getattr (bool): 是否允许在模板中访问私有属性，默认为 False\"]},\"1640\":{\"h\":\"\",\"t\":[\"参数\",\"spec (FormatSpecFunc_T)\",\"name (str | None)\",\"返回\",\"FormatSpecFunc_T\"]},\"1641\":{\"h\":\"\",\"t\":[\"说明: 根据传入参数和模板生成消息对象\",\"参数\",\"*args\",\"**kwargs\",\"返回\",\"TF\"]},\"1642\":{\"h\":\"\",\"t\":[\"说明: 根据传入字典和模板生成消息对象, 在传入字段名不是有效标识符时有用\",\"参数\",\"mapping (Mapping[str, Any])\",\"返回\",\"TF\"]},\"1643\":{\"h\":\"\",\"t\":[\"参数\",\"format_string (str)\",\"args (Sequence[Any])\",\"kwargs (Mapping[str, Any])\",\"返回\",\"TF\"]},\"1644\":{\"h\":\"\",\"t\":[\"参数\",\"field_name (str)\",\"args (Sequence[Any])\",\"kwargs (Mapping[str, Any])\",\"返回\",\"tuple[Any, int | str]\"]},\"1645\":{\"h\":\"\",\"t\":[\"参数\",\"value (Any)\",\"format_spec (str)\",\"返回\",\"Any\"]},\"1646\":{\"h\":\"nonebot.dependencies\",\"t\":[\"本模块模块实现了依赖注入的定义与处理。\"]},\"1647\":{\"h\":\"\",\"t\":[\"说明\",\"依赖注入的基本单元 —— 参数。\",\"继承自 pydantic.fields.FieldInfo，用于描述参数信息（不包括参数名）。\",\"参数\",\"*args\",\"validate (bool)\",\"**kwargs (Any)\"]},\"1648\":{\"h\":\"\",\"t\":[\"说明: 依赖注入容器\",\"参数\",\"call: 依赖注入的可调用对象，可以是任何 Callable 对象\",\"pre_checkers: 依赖注入解析前的参数检查\",\"params: 具名参数列表\",\"parameterless: 匿名参数列表\",\"allow_types: 允许的参数类型\"]},\"1649\":{\"h\":\"\",\"t\":[\"参数\",\"call (_DependentCallable[R])\",\"allow_types (tuple[type[Param], ...])\",\"返回\",\"tuple[ModelField, ...]\"]},\"1650\":{\"h\":\"\",\"t\":[\"参数\",\"parameterless (tuple[Any, ...])\",\"allow_types (tuple[type[Param], ...])\",\"返回\",\"tuple[Param, ...]\"]},\"1651\":{\"h\":\"\",\"t\":[\"参数\",\"call (_DependentCallable[R])\",\"parameterless (Iterable[Any] | None)\",\"allow_types (Iterable[type[Param]])\",\"返回\",\"Dependent[R]\"]},\"1652\":{\"h\":\"\",\"t\":[\"参数\",\"**params (Any)\",\"返回\",\"None\"]},\"1653\":{\"h\":\"\",\"t\":[\"参数\",\"**params (Any)\",\"返回\",\"dict[str, Any]\"]},\"1654\":{\"h\":\"nonebot.dependencies.utils\"},\"1655\":{\"h\":\"\",\"t\":[\"说明: 获取可调用对象签名\",\"参数\",\"call ((...) -> Any)\",\"返回\",\"inspect.Signature\"]},\"1656\":{\"h\":\"\",\"t\":[\"说明: 获取参数的类型注解\",\"参数\",\"param (inspect.Parameter)\",\"globalns (dict[str, Any])\",\"返回\",\"Any\"]},\"1657\":{\"h\":\"\",\"t\":[\"说明: 检查字段类型是否匹配\",\"参数\",\"field (ModelField)\",\"value (Any)\",\"返回\",\"Any\"]},\"1658\":{\"h\":\"nonebot.drivers.aiohttp\",\"t\":[\"AIOHTTP 驱动适配器。\",\"nb driver install aiohttp # 或者 pip install nonebot2[aiohttp]\",\"提示\",\"本驱动仅支持客户端连接\"]},\"1659\":{\"h\":\"\",\"t\":[\"参数\",\"params (QueryTypes)\",\"headers (HeaderTypes)\",\"cookies (CookieTypes)\",\"version (str | HTTPVersion)\",\"timeout (float | None)\",\"proxy (str | None)\"]},\"1660\":{\"h\":\"\",\"t\":[\"参数\",\"setup (Request)\",\"返回\",\"Response\"]},\"1661\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"None\"]},\"1662\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"None\"]},\"1663\":{\"h\":\"\",\"t\":[\"说明: AIOHTTP Mixin\",\"参数\",\"auto\"]},\"1664\":{\"h\":\"\",\"t\":[\"参数\",\"setup (Request)\",\"返回\",\"Response\"]},\"1665\":{\"h\":\"\",\"t\":[\"参数\",\"setup (Request)\",\"返回\",\"AsyncGenerator[WebSocket, None]\"]},\"1666\":{\"h\":\"\",\"t\":[\"参数\",\"params (QueryTypes)\",\"headers (HeaderTypes)\",\"cookies (CookieTypes)\",\"version (str | HTTPVersion)\",\"timeout (float | None)\",\"proxy (str | None)\",\"返回\",\"Session\"]},\"1667\":{\"h\":\"\",\"t\":[\"说明: AIOHTTP Websocket Wrapper\",\"参数\",\"request (Request)\",\"session (aiohttp.ClientSession)\",\"websocket (aiohttp.ClientWebSocketResponse)\"]},\"1668\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"untyped\"]},\"1669\":{\"h\":\"\",\"t\":[\"参数\",\"code (int)\",\"reason (str)\",\"返回\",\"untyped\"]},\"1670\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"str\"]},\"1671\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"str\"]},\"1672\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"bytes\"]},\"1673\":{\"h\":\"\",\"t\":[\"参数\",\"data (str)\",\"返回\",\"None\"]},\"1674\":{\"h\":\"\",\"t\":[\"参数\",\"data (bytes)\",\"返回\",\"None\"]},\"1675\":{\"h\":\"\",\"t\":[\"参数\",\"env (Env)\",\"config (Config)\"]},\"1676\":{\"h\":\"nonebot.drivers.fastapi\",\"t\":[\"FastAPI 驱动适配\",\"nb driver install fastapi # 或者 pip install nonebot2[fastapi]\",\"提示\",\"本驱动仅支持服务端连接\"]},\"1677\":{\"h\":\"\",\"t\":[\"说明: FastAPI 驱动框架设置，详情参考 FastAPI 文档\",\"参数\",\"auto\"]},\"1678\":{\"h\":\"\",\"t\":[\"类型: str | None\",\"说明:openapi.json 地址，默认为 None 即关闭\"]},\"1679\":{\"h\":\"\",\"t\":[\"类型: str | None\",\"说明:swagger 地址，默认为 None 即关闭\"]},\"1680\":{\"h\":\"\",\"t\":[\"类型: str | None\",\"说明:redoc 地址，默认为 None 即关闭\"]},\"1681\":{\"h\":\"\",\"t\":[\"类型: bool\",\"说明: 是否包含适配器路由的 schema，默认为 True\"]},\"1682\":{\"h\":\"\",\"t\":[\"类型: bool\",\"说明: 开启/关闭冷重载\"]},\"1683\":{\"h\":\"\",\"t\":[\"类型: list[str] | None\",\"说明: 重载监控文件夹列表，默认为 uvicorn 默认值\"]},\"1684\":{\"h\":\"\",\"t\":[\"类型: float\",\"说明: 重载延迟，默认为 uvicorn 默认值\"]},\"1685\":{\"h\":\"\",\"t\":[\"类型: list[str] | None\",\"说明: 要监听的文件列表，支持 glob pattern，默认为 uvicorn 默认值\"]},\"1686\":{\"h\":\"\",\"t\":[\"类型: list[str] | None\",\"说明: 不要监听的文件列表，支持 glob pattern，默认为 uvicorn 默认值\"]},\"1687\":{\"h\":\"\",\"t\":[\"类型: dict[str, Any]\",\"说明: 传递给 FastAPI 的其他参数。\"]},\"1688\":{\"h\":\"\",\"t\":[\"说明: FastAPI 驱动框架。\",\"参数\",\"env (Env)\",\"config (NoneBotConfig)\"]},\"1689\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明: 驱动名称: fastapi\"]},\"1690\":{\"h\":\"\",\"t\":[\"类型: FastAPI\",\"说明:FastAPI APP 对象\"]},\"1691\":{\"h\":\"\",\"t\":[\"类型: FastAPI\",\"说明:FastAPI APP 对象\"]},\"1692\":{\"h\":\"\",\"t\":[\"类型: logging.Logger\",\"说明: fastapi 使用的 logger\"]},\"1693\":{\"h\":\"\",\"t\":[\"参数\",\"setup (HTTPServerSetup)\",\"返回\",\"untyped\"]},\"1694\":{\"h\":\"\",\"t\":[\"参数\",\"setup (WebSocketServerSetup)\",\"返回\",\"None\"]},\"1695\":{\"h\":\"\",\"t\":[\"说明: 使用 uvicorn 启动 FastAPI\",\"参数\",\"host (str | None)\",\"port (int | None)\",\"*args\",\"app (str | None)\",\"**kwargs\",\"返回\",\"untyped\"]},\"1696\":{\"h\":\"\",\"t\":[\"说明: FastAPI WebSocket Wrapper\",\"参数\",\"request (BaseRequest)\",\"websocket (WebSocket)\"]},\"1697\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"None\"]},\"1698\":{\"h\":\"\",\"t\":[\"参数\",\"code (int)\",\"reason (str)\",\"返回\",\"None\"]},\"1699\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"str | bytes\"]},\"1700\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"str\"]},\"1701\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"bytes\"]},\"1702\":{\"h\":\"\",\"t\":[\"参数\",\"data (str)\",\"返回\",\"None\"]},\"1703\":{\"h\":\"\",\"t\":[\"参数\",\"data (bytes)\",\"返回\",\"None\"]},\"1704\":{\"h\":\"nonebot.drivers.httpx\",\"t\":[\"HTTPX 驱动适配\",\"nb driver install httpx # 或者 pip install nonebot2[httpx]\",\"提示\",\"本驱动仅支持客户端 HTTP 连接\"]},\"1705\":{\"h\":\"\",\"t\":[\"参数\",\"params (QueryTypes)\",\"headers (HeaderTypes)\",\"cookies (CookieTypes)\",\"version (str | HTTPVersion)\",\"timeout (float | None)\",\"proxy (str | None)\"]},\"1706\":{\"h\":\"\",\"t\":[\"参数\",\"setup (Request)\",\"返回\",\"Response\"]},\"1707\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"None\"]},\"1708\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"None\"]},\"1709\":{\"h\":\"\",\"t\":[\"说明: HTTPX Mixin\",\"参数\",\"auto\"]},\"1710\":{\"h\":\"\",\"t\":[\"参数\",\"setup (Request)\",\"返回\",\"Response\"]},\"1711\":{\"h\":\"\",\"t\":[\"参数\",\"params (QueryTypes)\",\"headers (HeaderTypes)\",\"cookies (CookieTypes)\",\"version (str | HTTPVersion)\",\"timeout (float | None)\",\"proxy (str | None)\",\"返回\",\"Session\"]},\"1712\":{\"h\":\"\",\"t\":[\"参数\",\"env (Env)\",\"config (Config)\"]},\"1713\":{\"h\":\"nonebot.drivers\",\"t\":[\"本模块定义了驱动适配器基类。\",\"各驱动请继承以下基类。\"]},\"1714\":{\"h\":\"\",\"t\":[\"说明: 可与其他驱动器共用的混入基类。\",\"参数\",\"auto\"]},\"1715\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明: 混入驱动类型名称\"]},\"1716\":{\"h\":\"\",\"t\":[\"说明\",\"驱动器基类。\",\"驱动器控制框架的启动和停止，适配器的注册，以及机器人生命周期管理。\",\"参数\",\"env (Env): 包含环境信息的 Env 对象\",\"config (Config): 包含配置信息的 Config 对象\"]},\"1717\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明: 环境名称\"]},\"1718\":{\"h\":\"\",\"t\":[\"类型:Config\",\"说明: 全局配置对象\"]},\"1719\":{\"h\":\"\",\"t\":[\"类型: dict[str, Bot]\",\"说明: 获取当前所有已连接的 Bot\"]},\"1720\":{\"h\":\"\",\"t\":[\"说明: 注册一个协议适配器\",\"参数\",\"adapter (type[Adapter]): 适配器类\",\"**kwargs: 其他传递给适配器的参数\",\"返回\",\"None\"]},\"1721\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明: 驱动类型名称\"]},\"1722\":{\"h\":\"\",\"t\":[\"类型: untyped\",\"说明: 驱动专属 logger 日志记录器\"]},\"1723\":{\"h\":\"\",\"t\":[\"说明: 启动驱动框架\",\"参数\",\"*args\",\"**kwargs\",\"返回\",\"untyped\"]},\"1724\":{\"h\":\"\",\"t\":[\"说明: 注册一个启动时执行的函数\",\"参数\",\"func (LIFESPAN_FUNC)\",\"返回\",\"LIFESPAN_FUNC\"]},\"1725\":{\"h\":\"\",\"t\":[\"说明: 注册一个停止时执行的函数\",\"参数\",\"func (LIFESPAN_FUNC)\",\"返回\",\"LIFESPAN_FUNC\"]},\"1726\":{\"h\":\"\",\"t\":[\"说明\",\"装饰一个函数使他在 bot 连接成功时执行。\",\"钩子函数参数:\",\"bot: 当前连接上的 Bot 对象\",\"参数\",\"func (T_BotConnectionHook)\",\"返回\",\"T_BotConnectionHook\"]},\"1727\":{\"h\":\"\",\"t\":[\"说明\",\"装饰一个函数使他在 bot 连接断开时执行。\",\"钩子函数参数:\",\"bot: 当前连接上的 Bot 对象\",\"参数\",\"func (T_BotDisconnectionHook)\",\"返回\",\"T_BotDisconnectionHook\"]},\"1728\":{\"h\":\"\",\"t\":[\"参数\",\"cookies (CookieTypes)\"]},\"1729\":{\"h\":\"\",\"t\":[\"参数\",\"name (str)\",\"value (str)\",\"domain (str)\",\"path (str)\",\"返回\",\"None\"]},\"1730\":{\"h\":\"\",\"t\":[\"参数\",\"name (str)\",\"default (str | None)\",\"domain (str | None)\",\"path (str | None)\",\"返回\",\"str | None\"]},\"1731\":{\"h\":\"\",\"t\":[\"参数\",\"name (str)\",\"domain (str | None)\",\"path (str | None)\",\"返回\",\"None\"]},\"1732\":{\"h\":\"\",\"t\":[\"参数\",\"domain (str | None)\",\"path (str | None)\",\"返回\",\"None\"]},\"1733\":{\"h\":\"\",\"t\":[\"参数\",\"cookies (CookieTypes)\",\"返回\",\"None\"]},\"1734\":{\"h\":\"\",\"t\":[\"参数\",\"request (Request)\",\"返回\",\"dict[str, str]\"]},\"1735\":{\"h\":\"\",\"t\":[\"参数\",\"method (str | bytes)\",\"url (URL | str | RawURL)\",\"params (QueryTypes)\",\"headers (HeaderTypes)\",\"cookies (CookieTypes)\",\"content (ContentTypes)\",\"data (DataTypes)\",\"json (Any)\",\"files (FilesTypes)\",\"version (str | HTTPVersion)\",\"timeout (float | None)\",\"proxy (str | None)\"]},\"1736\":{\"h\":\"\",\"t\":[\"参数\",\"status_code (int)\",\"headers (HeaderTypes)\",\"content (ContentTypes)\",\"request (Request | None)\"]},\"1737\":{\"h\":\"\",\"t\":[\"说明\",\"ASGI 服务端基类。\",\"将后端框架封装，以满足适配器使用。\",\"参数\",\"auto\"]},\"1738\":{\"h\":\"\",\"t\":[\"类型: Any\",\"说明: 驱动 APP 对象\"]},\"1739\":{\"h\":\"\",\"t\":[\"类型: Any\",\"说明: 驱动 ASGI 对象\"]},\"1740\":{\"h\":\"\",\"t\":[\"说明: 设置一个 HTTP 服务器路由配置\",\"参数\",\"setup (HTTPServerSetup)\",\"返回\",\"None\"]},\"1741\":{\"h\":\"\",\"t\":[\"说明: 设置一个 WebSocket 服务器路由配置\",\"参数\",\"setup (WebSocketServerSetup)\",\"返回\",\"None\"]},\"1742\":{\"h\":\"\",\"t\":[\"参数\",\"request (Request)\"]},\"1743\":{\"h\":\"\",\"t\":[\"类型: bool\",\"说明: 连接是否已经关闭\"]},\"1744\":{\"h\":\"\",\"t\":[\"说明: 接受 WebSocket 连接请求\",\"参数\",\"empty\",\"返回\",\"None\"]},\"1745\":{\"h\":\"\",\"t\":[\"说明: 关闭 WebSocket 连接请求\",\"参数\",\"code (int)\",\"reason (str)\",\"返回\",\"None\"]},\"1746\":{\"h\":\"\",\"t\":[\"说明: 接收一条 WebSocket text/bytes 信息\",\"参数\",\"empty\",\"返回\",\"str | bytes\"]},\"1747\":{\"h\":\"\",\"t\":[\"说明: 接收一条 WebSocket text 信息\",\"参数\",\"empty\",\"返回\",\"str\"]},\"1748\":{\"h\":\"\",\"t\":[\"说明: 接收一条 WebSocket binary 信息\",\"参数\",\"empty\",\"返回\",\"bytes\"]},\"1749\":{\"h\":\"\",\"t\":[\"说明: 发送一条 WebSocket text/bytes 信息\",\"参数\",\"data (str | bytes)\",\"返回\",\"None\"]},\"1750\":{\"h\":\"\",\"t\":[\"说明: 发送一条 WebSocket text 信息\",\"参数\",\"data (str)\",\"返回\",\"None\"]},\"1751\":{\"h\":\"\",\"t\":[\"说明: 发送一条 WebSocket binary 信息\",\"参数\",\"data (bytes)\",\"返回\",\"None\"]},\"1752\":{\"h\":\"\",\"t\":[\"说明: An enumeration.\",\"参数\",\"auto\",\"H10: '1.0'\",\"H11: '1.1'\",\"H2: '2'\"]},\"1753\":{\"h\":\"\",\"t\":[\"说明: 客户端混入基类。\",\"参数\",\"auto\"]},\"1754\":{\"h\":\"\",\"t\":[\"说明: 服务端混入基类。\",\"参数\",\"auto\"]},\"1755\":{\"h\":\"\",\"t\":[\"类型: ForwardMixin\",\"说明\",\"支持客户端请求的驱动器。\",\"Deprecated，请使用 ForwardMixin 或其子类代替。\"]},\"1756\":{\"h\":\"\",\"t\":[\"类型: ReverseMixin\",\"说明\",\"支持服务端请求的驱动器。\",\"Deprecated，请使用 ReverseMixin 或其子类代替。\"]},\"1757\":{\"h\":\"\",\"t\":[\"说明: 将一个驱动器和多个混入类合并。\",\"重载\",\"1.(driver) -> type[D]\",\"参数\",\"driver (type[D])\",\"返回\",\"type[D]\",\"2.(driver, __m, /, *mixins) -> type[CombinedDriver]\",\"参数\",\"driver (type[D])\",\"__m (type[Mixin])\",\"*mixins (type[Mixin])\",\"返回\",\"type[CombinedDriver]\"]},\"1758\":{\"h\":\"\",\"t\":[\"说明: HTTP 客户端混入基类。\",\"参数\",\"auto\"]},\"1759\":{\"h\":\"\",\"t\":[\"说明: 发送一个 HTTP 请求\",\"参数\",\"setup (Request)\",\"返回\",\"Response\"]},\"1760\":{\"h\":\"\",\"t\":[\"说明: 获取一个 HTTP 会话\",\"参数\",\"params (QueryTypes)\",\"headers (HeaderTypes)\",\"cookies (CookieTypes)\",\"version (str | HTTPVersion)\",\"timeout (float | None)\",\"proxy (str | None)\",\"返回\",\"HTTPClientSession\"]},\"1761\":{\"h\":\"\",\"t\":[\"说明: HTTP 服务器路由配置。\",\"参数\",\"auto\"]},\"1762\":{\"h\":\"\",\"t\":[\"说明: WebSocket 客户端混入基类。\",\"参数\",\"auto\"]},\"1763\":{\"h\":\"\",\"t\":[\"说明: 发起一个 WebSocket 连接\",\"参数\",\"setup (Request)\",\"返回\",\"AsyncGenerator[WebSocket, None]\"]},\"1764\":{\"h\":\"\",\"t\":[\"说明: WebSocket 服务器路由配置。\",\"参数\",\"auto\"]},\"1765\":{\"h\":\"nonebot.drivers.none\",\"t\":[\"None 驱动适配\",\"提示\",\"本驱动不支持任何服务器或客户端连接\"]},\"1766\":{\"h\":\"\",\"t\":[\"说明: None 驱动框架\",\"参数\",\"env (Env)\",\"config (Config)\"]},\"1767\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明: 驱动名称: none\"]},\"1768\":{\"h\":\"\",\"t\":[\"类型: untyped\",\"说明: none driver 使用的 logger\"]},\"1769\":{\"h\":\"\",\"t\":[\"说明: 启动 none driver\",\"参数\",\"*args\",\"**kwargs\",\"返回\",\"untyped\"]},\"1770\":{\"h\":\"\",\"t\":[\"说明: 退出 none driver\",\"参数\",\"force (bool): 强制退出\",\"返回\",\"untyped\"]},\"1771\":{\"h\":\"nonebot.drivers.quart\",\"t\":[\"Quart 驱动适配\",\"nb driver install quart # 或者 pip install nonebot2[quart]\",\"提示\",\"本驱动仅支持服务端连接\"]},\"1772\":{\"h\":\"\",\"t\":[\"说明: Quart 驱动框架设置\",\"参数\",\"auto\"]},\"1773\":{\"h\":\"\",\"t\":[\"类型: bool\",\"说明: 开启/关闭冷重载\"]},\"1774\":{\"h\":\"\",\"t\":[\"类型: list[str] | None\",\"说明: 重载监控文件夹列表，默认为 uvicorn 默认值\"]},\"1775\":{\"h\":\"\",\"t\":[\"类型: float\",\"说明: 重载延迟，默认为 uvicorn 默认值\"]},\"1776\":{\"h\":\"\",\"t\":[\"类型: list[str] | None\",\"说明: 要监听的文件列表，支持 glob pattern，默认为 uvicorn 默认值\"]},\"1777\":{\"h\":\"\",\"t\":[\"类型: list[str] | None\",\"说明: 不要监听的文件列表，支持 glob pattern，默认为 uvicorn 默认值\"]},\"1778\":{\"h\":\"\",\"t\":[\"类型: dict[str, Any]\",\"说明: 传递给 Quart 的其他参数。\"]},\"1779\":{\"h\":\"\",\"t\":[\"说明: Quart 驱动框架\",\"参数\",\"env (Env)\",\"config (NoneBotConfig)\"]},\"1780\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明: 驱动名称: quart\"]},\"1781\":{\"h\":\"\",\"t\":[\"类型: Quart\",\"说明:Quart 对象\"]},\"1782\":{\"h\":\"\",\"t\":[\"类型: untyped\",\"说明:Quart 对象\"]},\"1783\":{\"h\":\"\",\"t\":[\"类型: untyped\",\"说明: Quart 使用的 logger\"]},\"1784\":{\"h\":\"\",\"t\":[\"参数\",\"setup (HTTPServerSetup)\",\"返回\",\"untyped\"]},\"1785\":{\"h\":\"\",\"t\":[\"参数\",\"setup (WebSocketServerSetup)\",\"返回\",\"None\"]},\"1786\":{\"h\":\"\",\"t\":[\"说明: 使用 uvicorn 启动 Quart\",\"参数\",\"host (str | None)\",\"port (int | None)\",\"*args\",\"app (str | None)\",\"**kwargs\",\"返回\",\"untyped\"]},\"1787\":{\"h\":\"\",\"t\":[\"说明: Quart WebSocket Wrapper\",\"参数\",\"request (BaseRequest)\",\"websocket_ctx (WebsocketContext)\"]},\"1788\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"untyped\"]},\"1789\":{\"h\":\"\",\"t\":[\"参数\",\"code (int)\",\"reason (str)\",\"返回\",\"untyped\"]},\"1790\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"str | bytes\"]},\"1791\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"str\"]},\"1792\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"bytes\"]},\"1793\":{\"h\":\"\",\"t\":[\"参数\",\"data (str)\",\"返回\",\"untyped\"]},\"1794\":{\"h\":\"\",\"t\":[\"参数\",\"data (bytes)\",\"返回\",\"untyped\"]},\"1795\":{\"h\":\"nonebot.drivers.websockets\",\"t\":[\"websockets 驱动适配\",\"nb driver install websockets # 或者 pip install nonebot2[websockets]\",\"提示\",\"本驱动仅支持客户端 WebSocket 连接\"]},\"1796\":{\"h\":\"\",\"t\":[\"参数\",\"func ((P) -> Coroutine[Any, Any, T])\",\"返回\",\"(P) -> Coroutine[Any, Any, T]\"]},\"1797\":{\"h\":\"\",\"t\":[\"说明: Websockets Mixin\",\"参数\",\"auto\"]},\"1798\":{\"h\":\"\",\"t\":[\"参数\",\"setup (Request)\",\"返回\",\"AsyncGenerator[WebSocket, None]\"]},\"1799\":{\"h\":\"\",\"t\":[\"说明: Websockets WebSocket Wrapper\",\"参数\",\"request (Request)\",\"websocket (WebSocketClientProtocol)\"]},\"1800\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"untyped\"]},\"1801\":{\"h\":\"\",\"t\":[\"参数\",\"code (int)\",\"reason (str)\",\"返回\",\"untyped\"]},\"1802\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"str | bytes\"]},\"1803\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"str\"]},\"1804\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"bytes\"]},\"1805\":{\"h\":\"\",\"t\":[\"参数\",\"data (str)\",\"返回\",\"None\"]},\"1806\":{\"h\":\"\",\"t\":[\"参数\",\"data (bytes)\",\"返回\",\"None\"]},\"1807\":{\"h\":\"\",\"t\":[\"参数\",\"env (Env)\",\"config (Config)\"]},\"1808\":{\"h\":\"nonebot.plugin\",\"t\":[\"本模块为 NoneBot 插件开发提供便携的定义函数。\"]},\"1809\":{\"h\":\"快捷导入\",\"t\":[\"为方便使用，本模块从子模块导入了部分内容，以下内容可以直接通过本模块导入:\",\"on => on\",\"on_metaevent => on_metaevent\",\"on_message => on_message\",\"on_notice => on_notice\",\"on_request => on_request\",\"on_startswith => on_startswith\",\"on_endswith => on_endswith\",\"on_fullmatch => on_fullmatch\",\"on_keyword => on_keyword\",\"on_command => on_command\",\"on_shell_command => on_shell_command\",\"on_regex => on_regex\",\"on_type => on_type\",\"CommandGroup => CommandGroup\",\"Matchergroup => MatcherGroup\",\"load_plugin => load_plugin\",\"load_plugins => load_plugins\",\"load_all_plugins => load_all_plugins\",\"load_from_json => load_from_json\",\"load_from_toml => load_from_toml\",\"load_builtin_plugin =>load_builtin_plugin\",\"load_builtin_plugins =>load_builtin_plugins\",\"require => require\",\"PluginMetadata => PluginMetadata\"]},\"1810\":{\"h\":\"\",\"t\":[\"说明\",\"获取已经导入的某个插件。\",\"如果为 load_plugins 文件夹导入的插件，则为文件(夹)名。\",\"如果为嵌套的子插件，标识符为 父插件标识符:子插件文件(夹)名。\",\"参数\",\"plugin_id (str): 插件标识符，即 Plugin.id_。\",\"返回\",\"Plugin | None\"]},\"1811\":{\"h\":\"\",\"t\":[\"说明\",\"通过模块名获取已经导入的某个插件。\",\"如果提供的模块名为某个插件的子模块，同样会返回该插件。\",\"参数\",\"module_name (str): 模块名，即 Plugin.module_name。\",\"返回\",\"Plugin | None\"]},\"1812\":{\"h\":\"\",\"t\":[\"说明: 获取当前已导入的所有插件。\",\"参数\",\"empty\",\"返回\",\"set[Plugin]\"]},\"1813\":{\"h\":\"\",\"t\":[\"说明: 获取当前所有可用的插件标识符（包含尚未加载的插件）。\",\"参数\",\"empty\",\"返回\",\"set[str]\"]},\"1814\":{\"h\":\"\",\"t\":[\"说明: 从全局配置获取当前插件需要的配置项。\",\"参数\",\"config (type[C])\",\"返回\",\"C\"]},\"1815\":{\"h\":\"nonebot.plugin.load\",\"t\":[\"本模块定义插件加载接口。\"]},\"1816\":{\"h\":\"\",\"t\":[\"说明: 加载单个插件，可以是本地插件或是通过 pip 安装的插件。\",\"参数\",\"module_path (str | Path): 插件名称 path.to.your.plugin 或插件路径 pathlib.Path(path/to/your/plugin)\",\"返回\",\"Plugin | None\"]},\"1817\":{\"h\":\"\",\"t\":[\"说明: 导入文件夹下多个插件，以 _ 开头的插件不会被导入!\",\"参数\",\"*plugin_dir (str): 文件夹路径\",\"返回\",\"set[Plugin]\"]},\"1818\":{\"h\":\"\",\"t\":[\"说明: 导入指定列表中的插件以及指定目录下多个插件，以 _ 开头的插件不会被导入!\",\"参数\",\"module_path (Iterable[str]): 指定插件集合\",\"plugin_dir (Iterable[str]): 指定文件夹路径集合\",\"返回\",\"set[Plugin]\"]},\"1819\":{\"h\":\"\",\"t\":[\"说明: 导入指定 json 文件中的 plugins 以及 plugin_dirs 下多个插件。 以 _ 开头的插件不会被导入!\",\"参数\",\"file_path (str): 指定 json 文件路径\",\"encoding (str): 指定 json 文件编码\",\"返回\",\"set[Plugin]\",\"用法\",\"{ \\\"plugins\\\": [\\\"some_plugin\\\"], \\\"plugin_dirs\\\": [\\\"some_dir\\\"] }\",\"nonebot.load_from_json(\\\"plugins.json\\\")\"]},\"1820\":{\"h\":\"\",\"t\":[\"说明: 导入指定 toml 文件 [tool.nonebot] 中的 plugins 以及 plugin_dirs 下多个插件。 以 _ 开头的插件不会被导入!\",\"参数\",\"file_path (str): 指定 toml 文件路径\",\"encoding (str): 指定 toml 文件编码\",\"返回\",\"set[Plugin]\",\"用法\",\"[tool.nonebot] plugins = [\\\"some_plugin\\\"] plugin_dirs = [\\\"some_dir\\\"]\",\"nonebot.load_from_toml(\\\"pyproject.toml\\\")\"]},\"1821\":{\"h\":\"\",\"t\":[\"说明: 导入 NoneBot 内置插件。\",\"参数\",\"name (str): 插件名称\",\"返回\",\"Plugin | None\"]},\"1822\":{\"h\":\"\",\"t\":[\"说明: 导入多个 NoneBot 内置插件。\",\"参数\",\"*plugins (str): 插件名称列表\",\"返回\",\"set[Plugin]\"]},\"1823\":{\"h\":\"\",\"t\":[\"说明: 声明依赖插件。\",\"参数\",\"name (str): 插件模块名或插件标识符，仅在已声明插件的情况下可使用标识符。\",\"返回\",\"ModuleType\",\"异常\",\"RuntimeError: 插件无法加载\"]},\"1824\":{\"h\":\"\",\"t\":[\"说明\",\"获取已加载插件的适配器支持状态集合。\",\"如果传入了多个插件名称，返回值会自动取交集。\",\"参数\",\"*names (str): 插件名称列表。\",\"返回\",\"set[str] | None\",\"异常\",\"RuntimeError: 插件未加载\",\"ValueError: 插件缺少元数据\"]},\"1825\":{\"h\":\"nonebot.plugin.manager\",\"t\":[\"本模块实现插件加载流程。\",\"参考: import hooks, PEP302\"]},\"1826\":{\"h\":\"\",\"t\":[\"说明: 插件管理器。\",\"参数\",\"plugins (Iterable[str] | None): 独立插件模块名集合。\",\"search_path (Iterable[str] | None): 插件搜索路径（文件夹），相对于当前工作目录。\"]},\"1827\":{\"h\":\"\",\"t\":[\"类型: set[str]\",\"说明: 返回所有独立插件标识符。\"]},\"1828\":{\"h\":\"\",\"t\":[\"类型: set[str]\",\"说明: 返回已搜索到的插件标识符。\"]},\"1829\":{\"h\":\"\",\"t\":[\"类型: set[str]\",\"说明: 返回当前插件管理器中可用的插件标识符。\"]},\"1830\":{\"h\":\"\",\"t\":[\"类型: dict[str, str]\",\"说明: 返回当前插件管理器中控制的插件标识符与模块路径映射字典。\"]},\"1831\":{\"h\":\"\",\"t\":[\"说明\",\"加载指定插件。\",\"可以使用完整插件模块名或者插件标识符加载。\",\"参数\",\"name (str): 插件名称或插件标识符。\",\"返回\",\"Plugin | None\"]},\"1832\":{\"h\":\"\",\"t\":[\"说明: 加载所有可用插件。\",\"参数\",\"empty\",\"返回\",\"set[Plugin]\"]},\"1833\":{\"h\":\"\",\"t\":[\"参数\",\"auto\"]},\"1834\":{\"h\":\"\",\"t\":[\"参数\",\"fullname (str)\",\"path (Sequence[str] | None)\",\"target (ModuleType | None)\",\"返回\",\"untyped\"]},\"1835\":{\"h\":\"\",\"t\":[\"参数\",\"manager (PluginManager)\",\"fullname (str)\",\"path (str)\"]},\"1836\":{\"h\":\"\",\"t\":[\"参数\",\"spec\",\"返回\",\"ModuleType | None\"]},\"1837\":{\"h\":\"\",\"t\":[\"参数\",\"module (ModuleType)\",\"返回\",\"None\"]},\"1838\":{\"h\":\"nonebot.plugin.model\",\"t\":[\"本模块定义插件相关信息。\"]},\"1839\":{\"h\":\"\",\"t\":[\"说明: 插件元信息，由插件编写者提供\",\"参数\",\"auto\"]},\"1840\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明: 插件名称\"]},\"1841\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明: 插件功能介绍\"]},\"1842\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明: 插件使用方法\"]},\"1843\":{\"h\":\"\",\"t\":[\"类型: str | None\",\"说明: 插件类型，用于商店分类\"]},\"1844\":{\"h\":\"\",\"t\":[\"类型: str | None\",\"说明: 插件主页\"]},\"1845\":{\"h\":\"\",\"t\":[\"类型: type[BaseModel] | None\",\"说明: 插件配置项\"]},\"1846\":{\"h\":\"\",\"t\":[\"类型: set[str] | None\",\"说明\",\"插件支持的适配器模块路径\",\"格式为 <module>[:<Adapter>]，~ 为 nonebot.adapters. 的缩写。\",\"None 表示支持所有适配器。\"]},\"1847\":{\"h\":\"\",\"t\":[\"类型: dict[Any, Any]\",\"说明: 插件额外信息，可由插件编写者自由扩展定义\"]},\"1848\":{\"h\":\"\",\"t\":[\"说明: 获取当前已安装的插件支持适配器类列表\",\"参数\",\"empty\",\"返回\",\"set[type[Adapter]] | None\"]},\"1849\":{\"h\":\"\",\"t\":[\"说明: 存储插件信息\",\"参数\",\"auto\"]},\"1850\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明: 插件名称，NoneBot 使用 文件/文件夹 名称作为插件名称\"]},\"1851\":{\"h\":\"\",\"t\":[\"类型: ModuleType\",\"说明: 插件模块对象\"]},\"1852\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明: 点分割模块路径\"]},\"1853\":{\"h\":\"\",\"t\":[\"类型:PluginManager\",\"说明: 导入该插件的插件管理器\"]},\"1854\":{\"h\":\"\",\"t\":[\"类型: set[type[Matcher]]\",\"说明: 插件加载时定义的 Matcher\"]},\"1855\":{\"h\":\"\",\"t\":[\"类型: Plugin | None\",\"说明: 父插件\"]},\"1856\":{\"h\":\"\",\"t\":[\"类型: set[Plugin]\",\"说明: 子插件集合\"]},\"1857\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明: 插件索引标识\"]},\"1858\":{\"h\":\"nonebot.plugin.on\",\"t\":[\"本模块定义事件响应器便携定义函数。\"]},\"1859\":{\"h\":\"\",\"t\":[\"说明: 存储一个事件响应器到插件。\",\"参数\",\"matcher (type[Matcher]): 事件响应器\",\"返回\",\"None\"]},\"1860\":{\"h\":\"\",\"t\":[\"说明\",\"获取事件响应器定义所在插件。\",\"Deprecated, 请使用 get_matcher_source 获取信息。\",\"参数\",\"depth (int): 调用栈深度\",\"返回\",\"Plugin | None\"]},\"1861\":{\"h\":\"\",\"t\":[\"说明\",\"获取事件响应器定义所在模块。\",\"Deprecated, 请使用 get_matcher_source 获取信息。\",\"参数\",\"depth (int): 调用栈深度\",\"返回\",\"ModuleType | None\"]},\"1862\":{\"h\":\"\",\"t\":[\"说明: 获取事件响应器定义所在源码信息。\",\"参数\",\"depth (int): 调用栈深度\",\"返回\",\"MatcherSource | None\"]},\"1863\":{\"h\":\"\",\"t\":[\"说明: 注册一个基础事件响应器，可自定义类型。\",\"参数\",\"type (str): 事件响应器类型\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"1864\":{\"h\":\"\",\"t\":[\"说明: 注册一个元事件响应器。\",\"参数\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"1865\":{\"h\":\"\",\"t\":[\"说明: 注册一个消息事件响应器。\",\"参数\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"1866\":{\"h\":\"\",\"t\":[\"说明: 注册一个通知事件响应器。\",\"参数\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"1867\":{\"h\":\"\",\"t\":[\"说明: 注册一个请求事件响应器。\",\"参数\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"1868\":{\"h\":\"\",\"t\":[\"说明: 注册一个消息事件响应器，并且当消息的文本部分以指定内容开头时响应。\",\"参数\",\"msg (str | tuple[str, ...]): 指定消息开头内容\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"ignorecase (bool): 是否忽略大小写\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"1869\":{\"h\":\"\",\"t\":[\"说明: 注册一个消息事件响应器，并且当消息的文本部分以指定内容结尾时响应。\",\"参数\",\"msg (str | tuple[str, ...]): 指定消息结尾内容\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"ignorecase (bool): 是否忽略大小写\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"1870\":{\"h\":\"\",\"t\":[\"说明: 注册一个消息事件响应器，并且当消息的文本部分与指定内容完全一致时响应。\",\"参数\",\"msg (str | tuple[str, ...]): 指定消息全匹配内容\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"ignorecase (bool): 是否忽略大小写\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"1871\":{\"h\":\"\",\"t\":[\"说明: 注册一个消息事件响应器，并且当消息纯文本部分包含关键词时响应。\",\"参数\",\"keywords (set[str]): 关键词列表\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"1872\":{\"h\":\"\",\"t\":[\"说明\",\"注册一个消息事件响应器，并且当消息以指定命令开头时响应。\",\"命令匹配规则参考: 命令形式匹配 <rule.md#command-command>_\",\"参数\",\"cmd (str | tuple[str, ...]): 指定命令内容\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"aliases (set[str | tuple[str, ...]] | None): 命令别名\",\"force_whitespace (str | bool | None): 是否强制命令后必须有指定空白符\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"1873\":{\"h\":\"\",\"t\":[\"说明\",\"注册一个支持 shell_like 解析参数的命令消息事件响应器。\",\"与普通的 on_command 不同的是，在添加 parser 参数时, 响应器会自动处理消息。\",\"可以通过 ShellCommandArgv 获取原始参数列表， 通过 ShellCommandArgs 获取解析后的参数字典。\",\"参数\",\"cmd (str | tuple[str, ...]): 指定命令内容\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"aliases (set[str | tuple[str, ...]] | None): 命令别名\",\"parser (ArgumentParser | None): nonebot.rule.ArgumentParser 对象\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"1874\":{\"h\":\"\",\"t\":[\"说明\",\"注册一个消息事件响应器，并且当消息匹配正则表达式时响应。\",\"命令匹配规则参考: 正则匹配 <rule.md#regex-regex-flags-0>_\",\"参数\",\"pattern (str): 正则表达式\",\"flags (int | re.RegexFlag): 正则匹配标志\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"1875\":{\"h\":\"\",\"t\":[\"说明: 注册一个事件响应器，并且当事件为指定类型时响应。\",\"参数\",\"types (type[Event] | tuple[type[Event], ...]): 事件类型\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"1876\":{\"h\":\"\",\"t\":[\"参数\",\"cmd (str | tuple[str, ...])\",\"prefix_aliases (bool)\",\"rule (Rule | T_RuleChecker | None)\",\"permission (Permission | T_PermissionChecker | None)\",\"handlers (list[T_Handler | Dependent[Any]] | None)\",\"temp (bool)\",\"expire_time (datetime | timedelta | None)\",\"priority (int)\",\"block (bool)\",\"state (T_State | None)\"]},\"1877\":{\"h\":\"\",\"t\":[\"说明: 注册一个新的命令。新参数将会覆盖命令组默认值\",\"参数\",\"cmd (str | tuple[str, ...]): 指定命令内容\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"aliases (set[str | tuple[str, ...]] | None): 命令别名\",\"force_whitespace (str | bool | None): 是否强制命令后必须有指定空白符\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"1878\":{\"h\":\"\",\"t\":[\"说明: 注册一个新的 shell_like 命令。新参数将会覆盖命令组默认值\",\"参数\",\"cmd (str | tuple[str, ...]): 指定命令内容\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"aliases (set[str | tuple[str, ...]] | None): 命令别名\",\"parser (ArgumentParser | None): nonebot.rule.ArgumentParser 对象\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"1879\":{\"h\":\"\",\"t\":[\"参数\",\"type (str)\",\"rule (Rule | T_RuleChecker | None)\",\"permission (Permission | T_PermissionChecker | None)\",\"handlers (list[T_Handler | Dependent[Any]] | None)\",\"temp (bool)\",\"expire_time (datetime | timedelta | None)\",\"priority (int)\",\"block (bool)\",\"state (T_State | None)\"]},\"1880\":{\"h\":\"\",\"t\":[\"说明: 注册一个基础事件响应器，可自定义类型。\",\"参数\",\"type (str): 事件响应器类型\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"1881\":{\"h\":\"\",\"t\":[\"说明: 注册一个元事件响应器。\",\"参数\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"1882\":{\"h\":\"\",\"t\":[\"说明: 注册一个消息事件响应器。\",\"参数\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"1883\":{\"h\":\"\",\"t\":[\"说明: 注册一个通知事件响应器。\",\"参数\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"1884\":{\"h\":\"\",\"t\":[\"说明: 注册一个请求事件响应器。\",\"参数\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"1885\":{\"h\":\"\",\"t\":[\"说明: 注册一个消息事件响应器，并且当消息的文本部分以指定内容开头时响应。\",\"参数\",\"msg (str | tuple[str, ...]): 指定消息开头内容\",\"ignorecase (bool): 是否忽略大小写\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"1886\":{\"h\":\"\",\"t\":[\"说明: 注册一个消息事件响应器，并且当消息的文本部分以指定内容结尾时响应。\",\"参数\",\"msg (str | tuple[str, ...]): 指定消息结尾内容\",\"ignorecase (bool): 是否忽略大小写\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"1887\":{\"h\":\"\",\"t\":[\"说明: 注册一个消息事件响应器，并且当消息的文本部分与指定内容完全一致时响应。\",\"参数\",\"msg (str | tuple[str, ...]): 指定消息全匹配内容\",\"ignorecase (bool): 是否忽略大小写\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"1888\":{\"h\":\"\",\"t\":[\"说明: 注册一个消息事件响应器，并且当消息纯文本部分包含关键词时响应。\",\"参数\",\"keywords (set[str]): 关键词列表\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"1889\":{\"h\":\"\",\"t\":[\"说明\",\"注册一个消息事件响应器，并且当消息以指定命令开头时响应。\",\"命令匹配规则参考: 命令形式匹配 <rule.md#command-command>_\",\"参数\",\"cmd (str | tuple[str, ...]): 指定命令内容\",\"aliases (set[str | tuple[str, ...]] | None): 命令别名\",\"force_whitespace (str | bool | None): 是否强制命令后必须有指定空白符\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"1890\":{\"h\":\"\",\"t\":[\"说明\",\"注册一个支持 shell_like 解析参数的命令消息事件响应器。\",\"与普通的 on_command 不同的是，在添加 parser 参数时, 响应器会自动处理消息。\",\"可以通过 ShellCommandArgv 获取原始参数列表， 通过 ShellCommandArgs 获取解析后的参数字典。\",\"参数\",\"cmd (str | tuple[str, ...]): 指定命令内容\",\"aliases (set[str | tuple[str, ...]] | None): 命令别名\",\"parser (ArgumentParser | None): nonebot.rule.ArgumentParser 对象\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"1891\":{\"h\":\"\",\"t\":[\"说明\",\"注册一个消息事件响应器，并且当消息匹配正则表达式时响应。\",\"命令匹配规则参考: 正则匹配 <rule.md#regex-regex-flags-0>_\",\"参数\",\"pattern (str): 正则表达式\",\"flags (int | re.RegexFlag): 正则匹配标志\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"1892\":{\"h\":\"\",\"t\":[\"说明: 注册一个事件响应器，并且当事件为指定类型时响应。\",\"参数\",\"types (type[Event] | tuple[type[Event]]): 事件类型\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"1893\":{\"h\":\"Alconna 本体\",\"t\":[\"Alconna 隶属于 ArcletProject，是一个简单、灵活、高效的命令参数解析器, 并且不局限于解析命令式字符串。\",\"我们通过一个例子来讲解 Alconna 的核心 —— Args, Subcommand, Option：\",\"from arclet.alconna import Alconna, Args, Subcommand, Option alc = Alconna( \\\"pip\\\", Subcommand( \\\"install\\\", Args[\\\"package\\\", str], Option(\\\"-r|--requirement\\\", Args[\\\"file\\\", str]), Option(\\\"-i|--index-url\\\", Args[\\\"url\\\", str]), ) ) res = alc.parse(\\\"pip install nonebot2 -i URL\\\") print(res) # matched=True, header_match=(origin='pip' result='pip' matched=True groups={}), subcommands={'install': (value=Ellipsis args={'package': 'nonebot2'} options={'index-url': (value=None args={'url': 'URL'})} subcommands={})}, other_args={'package': 'nonebot2', 'url': 'URL'} print(res.all_matched_args) # {'package': 'nonebot2', 'url': 'URL'}\",\"这段代码通过Alconna创捷了一个接受主命令名为pip, 子命令为install且子命令接受一个 Args 参数package和二个 Option 参数-r和-i的命令参数解析器, 通过parse方法返回解析结果 Arparma 的实例。\"]},\"1894\":{\"h\":\"命令头\",\"t\":[\"命令头是指命令的前缀 (Prefix) 与命令名 (Command) 的组合，例如 !help 中的 ! 与 help。\",\"前缀\",\"命令名\",\"匹配内容\",\"说明\",\"-\",\"\\\"foo\\\"\",\"\\\"foo\\\"\",\"无前缀的纯文字头\",\"-\",\"123\",\"123\",\"无前缀的元素头\",\"-\",\"\\\"re:\\\\d{2}\\\"\",\"\\\"32\\\"\",\"无前缀的正则头\",\"-\",\"int\",\"123 或 \\\"456\\\"\",\"无前缀的类型头\",\"[int, bool]\",\"-\",\"True 或 123\",\"无名的元素类头\",\"[\\\"foo\\\", \\\"bar\\\"]\",\"-\",\"\\\"foo\\\" 或 \\\"bar\\\"\",\"无名的纯文字头\",\"[\\\"foo\\\", \\\"bar\\\"]\",\"\\\"baz\\\"\",\"\\\"foobaz\\\" 或 \\\"barbaz\\\"\",\"纯文字头\",\"[int, bool]\",\"\\\"foo\\\"\",\"[123, \\\"foo\\\"] 或 [False, \\\"foo\\\"]\",\"类型头\",\"[123, 4567]\",\"\\\"foo\\\"\",\"[123, \\\"foo\\\"] 或 [4567, \\\"foo\\\"]\",\"元素头\",\"[nepattern.NUMBER]\",\"\\\"bar\\\"\",\"[123, \\\"bar\\\"] 或 [123.456, \\\"bar\\\"]\",\"表达式头\",\"[123, \\\"foo\\\"]\",\"\\\"bar\\\"\",\"[123, \\\"bar\\\"] 或 \\\"foobar\\\" 或 [\\\"foo\\\", \\\"bar\\\"]\",\"混合头\",\"[(int, \\\"foo\\\"), (456, \\\"bar\\\")]\",\"\\\"baz\\\"\",\"[123, \\\"foobaz\\\"] 或 [456, \\\"foobaz\\\"] 或 [456, \\\"barbaz\\\"]\",\"对头\",\"对于无前缀的类型头，此时会将传入的值尝试转为 BasePattern，例如 int 会转为 nepattern.INTEGER。如此该命令头会匹配对应的类型， 例如 int 会匹配 123 或 \\\"456\\\"，但不会匹配 \\\"foo\\\"。解析后，Alconna 会将命令头匹配到的值转为对应的类型，例如 int 会将 \\\"123\\\" 转为 123。\",\"提示\",\"正则内容只在命令名上生效，前缀中的正则会被转义\",\"除了通过传入 re:xxx 来使用正则表达式外，Alconna 还提供了一种更加简洁的方式来使用正则表达式，称为 Bracket Header：\",\"from alconna import Alconna alc = Alconna(\\\".rd{roll:int}\\\") assert alc.parse(\\\".rd123\\\").header[\\\"roll\\\"] == 123\",\"Bracket Header 类似 python 里的 f-string 写法，通过 \\\"{}\\\" 声明匹配类型\",\"\\\"{}\\\" 中的内容为 \\\"name:type or pat\\\"：\",\"\\\"{}\\\", \\\"{:}\\\" ⇔ \\\"(.+)\\\", 占位符\",\"\\\"{foo}\\\" ⇔ \\\"(?P&lt;foo&gt;.+)\\\"\",\"\\\"{:\\\\d+}\\\" ⇔ \\\"(\\\\d+)\\\"\",\"\\\"{foo:int}\\\" ⇔ \\\"(?P&lt;foo&gt;\\\\d+)\\\"，其中 \\\"int\\\" 部分若能转为 BasePattern 则读取里面的表达式\"]},\"1895\":{\"h\":\"参数声明(Args)\",\"t\":[\"Args 是用于声明命令参数的组件， 可以通过以下几种方式构造 Args ：\",\"Args[key, var, default][key1, var1, default1][...]\",\"Args[(key, var, default)]\",\"Args.key[var, default]\",\"其中，key 一定是字符串，而 var 一般为参数的类型，default 为具体的值或者 arclet.alconna.args.Field\",\"其与函数签名类似，但是允许含有默认值的参数在前；同时支持 keyword-only 参数不依照构造顺序传入 （但是仍需要在非 keyword-only 参数之后）。\"]},\"1896\":{\"h\":\"key\",\"t\":[\"key 的作用是用以标记解析出来的参数并存放于 Arparma 中，以方便用户调用。\",\"其有三种为 Args 注解的标识符: ?、/、 !, 标识符与 key 之间建议以 ; 分隔：\",\"! 标识符表示该处传入的参数应不是规定的类型，或不在指定的值中。\",\"? 标识符表示该参数为可选参数，会在无参数匹配时跳过。\",\"/ 标识符表示该参数的类型注解需要隐藏。\",\"另外，对于参数的注释也可以标记在 key 中，其与 key 或者标识符 以 # 分割：foo#这是注释;? 或 foo?#这是注释\",\"提示\",\"Args 中的 key 在实际命令中并不需要传入（keyword 参数除外）：\",\"from arclet.alconna import Alconna, Args alc = Alconna(\\\"test\\\", Args[\\\"foo\\\", str]) alc.parse(\\\"test --foo abc\\\") # 错误 alc.parse(\\\"test abc\\\") # 正确\",\"若需要 test --foo abc，你应该使用 Option：\",\"from arclet.alconna import Alconna, Args, Option alc = Alconna(\\\"test\\\", Option(\\\"--foo\\\", Args[\\\"foo\\\", str]))\"]},\"1897\":{\"h\":\"var\",\"t\":[\"var 负责命令参数的类型检查与类型转化\",\"Args 的var表面上看需要传入一个 type，但实际上它需要的是一个 nepattern.BasePattern 的实例：\",\"from arclet.alconna import Args from nepattern import BasePattern # 表示 foo 参数需要匹配一个 @number 样式的字符串 args = Args[\\\"foo\\\", BasePattern(\\\"@\\\\d+\\\")]\",\"pip 示例中可以传入 str 是因为 str 已经注册在了 nepattern.global_patterns 中，因此会替换为 nepattern.global_patterns[str]\",\"nepattern.global_patterns默认支持的类型有：\",\"str: 匹配任意字符串\",\"int: 匹配整数\",\"float: 匹配浮点数\",\"bool: 匹配 True 与 False 以及他们小写形式\",\"hex: 匹配 0x 开头的十六进制字符串\",\"url: 匹配网址\",\"email: 匹配 xxxx@xxx 的字符串\",\"ipv4: 匹配 xxx.xxx.xxx.xxx 的字符串\",\"list: 匹配类似 [\\\"foo\\\",\\\"bar\\\",\\\"baz\\\"] 的字符串\",\"dict: 匹配类似 {\\\"foo\\\":\\\"bar\\\",\\\"baz\\\":\\\"qux\\\"} 的字符串\",\"datetime: 传入一个 datetime 支持的格式字符串，或时间戳\",\"Any: 匹配任意类型\",\"AnyString: 匹配任意类型，转为 str\",\"Number: 匹配 int 与 float，转为 int\",\"同时可以使用 typing 中的类型：\",\"Literal[X]: 匹配其中的任意一个值\",\"Union[X, Y]: 匹配其中的任意一个类型\",\"Optional[xxx]: 会自动将默认值设为 None，并在解析失败时使用默认值\",\"List[X]: 匹配一个列表，其中的元素为 X 类型\",\"Dict[X, Y]: 匹配一个字典，其中的 key 为 X 类型，value 为 Y 类型\",\"...\",\"提示\",\"几类特殊的传入标记：\",\"\\\"foo\\\": 匹配字符串 \\\"foo\\\" (若没有某个 BasePattern 与之关联)\",\"RawStr(\\\"foo\\\"): 匹配字符串 \\\"foo\\\" (即使有 BasePattern 与之关联也不会被替换)\",\"\\\"foo|bar|baz\\\": 匹配 \\\"foo\\\" 或 \\\"bar\\\" 或 \\\"baz\\\"\",\"[foo, bar, Baz, ...]: 匹配其中的任意一个值或类型\",\"Callable[[X], Y]: 匹配一个参数为 X 类型的值，并返回通过该函数调用得到的 Y 类型的值\",\"\\\"re:xxx\\\": 匹配一个正则表达式 xxx，会返回 Match[0]\",\"\\\"rep:xxx\\\": 匹配一个正则表达式 xxx，会返回 re.Match 对象\",\"{foo: bar, baz: qux}: 匹配字典中的任意一个键, 并返回对应的值 (特殊的键 ... 会匹配任意的值)\",\"...\",\"特别的，你可以不传入 var，此时会使用 key 作为 var, 匹配 key 字符串。\"]},\"1898\":{\"h\":\"MultiVar 与 KeyWordVar\",\"t\":[\"MultiVar 是一个特殊的标注，用于告知解析器该参数可以接受多个值，类似于函数中的 *args，其构造方法形如 MultiVar(str)。\",\"同样的还有 KeyWordVar，类似于函数中的 *, name: type，其构造方法形如 KeyWordVar(str)，用于告知解析器该参数为一个 keyword-only 参数。\",\"提示\",\"MultiVar 与 KeyWordVar 组合时，代表该参数为一个可接受多个 key-value 的参数，类似于函数中的 **kwargs，其构造方法形如 MultiVar(KeyWordVar(str))\",\"MultiVar 与 KeyWordVar 也可以传入 default 参数，用于指定默认值\",\"MultiVar 不能在 KeyWordVar 之后传入\"]},\"1899\":{\"h\":\"default\",\"t\":[\"default 传入的是该参数的默认值或者 Field，以携带对于该参数的更多信息。\",\"默认情况下 (即不声明) default 的值为特殊值 Empty。这也意味着你可以将默认值设置为 None 表示默认值为空值。\",\"Field 构造需要的参数说明如下：\",\"default: 参数单元的默认值\",\"alias: 参数单元默认值的别名\",\"completion: 参数单元的补全说明生成函数\",\"unmatch_tips: 参数单元的错误提示生成函数，其接收一个表示匹配失败的元素的参数\",\"missing_tips: 参数单元的缺失提示生成函数\"]},\"1900\":{\"h\":\"选项与子命令(Option & Subcommand)\",\"t\":[\"Option 和 Subcommand 可以传入一组 alias，如 Option(\\\"--foo|-F|--FOO|-f\\\")，Subcommand(\\\"foo\\\", alias=[\\\"F\\\"])\",\"传入别名后，选项与子命令会选择其中长度最长的作为其名称。若传入为 \\\"--foo|-f\\\"，则命令名称为 \\\"--foo\\\"\",\"特别提醒!!!\",\"Option 的名字或别名没有要求必须在前面写上 -\",\"Option 与 Subcommand 的唯一区别在于 Subcommand 可以传入自己的 Option 与 Subcommand\",\"他们拥有如下共同参数：\",\"help_text: 传入该组件的帮助信息\",\"dest: 被指定为解析完成时标注匹配结果的标识符，不传入时默认为选项或子命令的名称 (name)\",\"requires: 一段指定顺序的字符串列表，作为唯一的前置序列与命令嵌套替换 对于命令 test foo bar baz qux <a:int> 来讲，因为foo bar baz 仅需要判断是否相等, 所以可以这么编写：\",\"Alconna(\\\"test\\\", Option(\\\"qux\\\", Args.a[int], requires=[\\\"foo\\\", \\\"bar\\\", \\\"baz\\\"]))\",\"default: 默认值，在该组件未被解析时使用使用该值替换。 特别的，使用 OptionResult 或 SubcomanndResult 可以设置包括参数字典在内的默认值：\",\"from arclet.alconna import Option, OptionResult opt1 = Option(\\\"--foo\\\", default=False) opt2 = Option(\\\"--foo\\\", default=OptionResult(value=False, args={\\\"bar\\\": 1}))\"]},\"1901\":{\"h\":\"Action\",\"t\":[\"Option 可以特别设置传入一类 Action，作为解析操作\",\"Action 分为三类：\",\"store: 无 Args 时， 仅存储一个值， 默认为 Ellipsis； 有 Args 时， 后续的解析结果会覆盖之前的值\",\"append: 无 Args 时， 将多个值存为列表， 默认为 Ellipsis； 有 Args 时， 每个解析结果会追加到列表中, 当存在默认值并且不为列表时， 会自动将默认值变成列表， 以保证追加的正确性\",\"count: 无 Args 时， 计数器加一； 有 Args 时， 表现与 STORE 相同, 当存在默认值并且不为数字时， 会自动将默认值变成 1， 以保证计数器的正确性。\",\"Alconna 提供了预制的几类 Action：\",\"store(默认)，store_value，store_true，store_false\",\"append，append_value\",\"count\"]},\"1902\":{\"h\":\"解析结果(Arparma)\",\"t\":[\"Alconna.parse 会返回由 Arparma 承载的解析结果\",\"Arparma 有如下属性：\",\"调试类\",\"matched: 是否匹配成功\",\"error_data: 解析失败时剩余的数据\",\"error_info: 解析失败时的异常内容\",\"origin: 原始命令，可以类型标注\",\"分析类\",\"header_match: 命令头部的解析结果，包括原始头部、解析后头部、解析结果与可能的正则匹配组\",\"main_args: 命令的主参数的解析结果\",\"options: 命令所有选项的解析结果\",\"subcommands: 命令所有子命令的解析结果\",\"other_args: 除主参数外的其他解析结果\",\"all_matched_args: 所有 Args 的解析结果\",\"Arparma 同时提供了便捷的查询方法 query[type]()，会根据传入的 path 查找参数并返回\",\"path 支持如下:\",\"main_args, options, ...: 返回对应的属性\",\"args: 返回 all_matched_args\",\"main_args.xxx, options.xxx, ...: 返回字典中 xxx键对应的值\",\"args.xxx: 返回 all_matched_args 中 xxx键对应的值\",\"options.foo, foo: 返回选项 foo 的解析结果 (OptionResult)\",\"options.foo.value, foo.value: 返回选项 foo 的解析值\",\"options.foo.args, foo.args: 返回选项 foo 的解析参数字典\",\"options.foo.args.bar, foo.bar: 返回选项 foo 的参数字典中 bar 键对应的值 ...\"]},\"1903\":{\"h\":\"元数据(CommandMeta)\",\"t\":[\"Alconna 的元数据相当于其配置，拥有以下条目：\",\"description: 命令的描述\",\"usage: 命令的用法\",\"example: 命令的使用样例\",\"author: 命令的作者\",\"fuzzy_match: 命令是否开启模糊匹配\",\"fuzzy_threshold: 模糊匹配阈值\",\"raise_exception: 命令是否抛出异常\",\"hide: 命令是否对 manager 隐藏\",\"hide_shortcut: 命令的快捷指令是否在 help 信息中隐藏\",\"keep_crlf: 命令解析时是否保留换行字符\",\"compact: 命令是否允许第一个参数紧随头部\",\"strict: 命令是否严格匹配，若为 False 则未知参数将作为名为 $extra 的参数\",\"context_style: 命令上下文插值的风格，None 为关闭，bracket 为 {...}，parentheses 为 $(...)\",\"extra: 命令的自定义额外信息\",\"元数据一定使用 meta=... 形式传入：\",\"from arclet.alconna import Alconna, CommandMeta alc = Alconna(..., meta=CommandMeta(\\\"foo\\\", example=\\\"bar\\\"))\"]},\"1904\":{\"h\":\"命名空间配置\",\"t\":[\"命名空间配置 （以下简称命名空间） 相当于 Alconna 的默认配置，其优先度低于 CommandMeta。\",\"Alconna 默认使用 \\\"Alconna\\\" 命名空间。\",\"命名空间有以下几个属性：\",\"name: 命名空间名称\",\"prefixes: 默认前缀配置\",\"separators: 默认分隔符配置\",\"formatter_type: 默认格式化器类型\",\"fuzzy_match: 默认是否开启模糊匹配\",\"raise_exception: 默认是否抛出异常\",\"builtin_option_name: 默认的内置选项名称(--help, --shortcut, --comp)\",\"disable_builtin_options: 默认禁用的内置选项(--help, --shortcut, --comp)\",\"enable_message_cache: 默认是否启用消息缓存\",\"compact: 默认是否开启紧凑模式\",\"strict: 命令是否严格匹配\",\"context_style: 命令上下文插值的风格\",\"...\"]},\"1905\":{\"h\":\"新建命名空间并替换\",\"t\":[\"from arclet.alconna import Alconna, namespace, Namespace, Subcommand, Args, config ns = Namespace(\\\"foo\\\", prefixes=[\\\"/\\\"]) # 创建 \\\"foo\\\"命名空间配置, 它要求创建的Alconna的主命令前缀必须是/ alc = Alconna(\\\"pip\\\", Subcommand(\\\"install\\\", Args[\\\"package\\\", str]), namespace=ns) # 在创建Alconna时候传入命名空间以替换默认命名空间 # 可以通过with方式创建命名空间 with namespace(\\\"bar\\\") as np1: np1.prefixes = [\\\"!\\\"] # 以上下文管理器方式配置命名空间，此时配置会自动注入上下文内创建的命令 np1.formatter_type = ShellTextFormatter # 设置此命名空间下的命令的 formatter 默认为 ShellTextFormatter np1.builtin_option_name[\\\"help\\\"] = {\\\"帮助\\\", \\\"-h\\\"} # 设置此命名空间下的命令的帮助选项名称 # 你还可以使用config来管理所有命名空间并切换至任意命名空间 config.namespaces[\\\"foo\\\"] = ns # 将命名空间挂载到 config 上 alc = Alconna(\\\"pip\\\", Subcommand(\\\"install\\\", Args[\\\"package\\\", str]), namespace=config.namespaces[\\\"foo\\\"]) # 也是同样可以切换到\\\"foo\\\"命名空间\"]},\"1906\":{\"h\":\"修改默认的命名空间\",\"t\":[\"from arclet.alconna import config, namespace, Namespace config.default_namespace.prefixes = [...] # 直接修改默认配置 np = Namespace(\\\"xxx\\\", prefixes=[...]) config.default_namespace = np # 更换默认的命名空间 with namespace(config.default_namespace.name) as np: np.prefixes = [...]\"]},\"1907\":{\"h\":\"快捷指令\",\"t\":[\"快捷命令可以做到标识一段命令, 并且传递参数给原命令\",\"一般情况下你可以通过 Alconna.shortcut 进行快捷指令操作 (创建，删除)\",\"shortcut 的第一个参数为快捷指令名称，第二个参数为 ShortcutArgs，作为快捷指令的配置：\",\"class ShortcutArgs(TypedDict): \\\"\\\"\\\"快捷指令参数\\\"\\\"\\\" command: NotRequired[str] \\\"\\\"\\\"快捷指令的命令\\\"\\\"\\\" args: NotRequired[list[Any]] \\\"\\\"\\\"快捷指令的附带参数\\\"\\\"\\\" fuzzy: NotRequired[bool] \\\"\\\"\\\"是否允许命令后随参数\\\"\\\"\\\" prefix: NotRequired[bool] \\\"\\\"\\\"是否调用时保留指令前缀\\\"\\\"\\\" wrapper: NotRequired[ShortcutRegWrapper] \\\"\\\"\\\"快捷指令的正则匹配结果的额外处理函数\\\"\\\"\\\" humanized: NotRequired[str] \\\"\\\"\\\"快捷指令的人类可读描述\\\"\\\"\\\"\"]},\"1908\":{\"h\":\"args的使用\",\"t\":[\"from arclet.alconna import Alconna, Args alc = Alconna(\\\"setu\\\", Args[\\\"count\\\", int]) alc.shortcut(\\\"涩图(\\\\d+)张\\\", {\\\"args\\\": [\\\"{0}\\\"]}) # 'Alconna::setu 的快捷指令: \\\"涩图(\\\\\\\\d+)张\\\" 添加成功' alc.parse(\\\"涩图3张\\\").query(\\\"count\\\") # 3\"]},\"1909\":{\"h\":\"command的使用\",\"t\":[\"from arclet.alconna import Alconna, Args alc = Alconna(\\\"eval\\\", Args[\\\"content\\\", str]) alc.shortcut(\\\"echo\\\", {\\\"command\\\": \\\"eval print(\\\\\\\\'{*}\\\\\\\\')\\\"}) # 'Alconna::eval 的快捷指令: \\\"echo\\\" 添加成功' alc.shortcut(\\\"echo\\\", delete=True) # 删除快捷指令 # 'Alconna::eval 的快捷指令: \\\"echo\\\" 删除成功' @alc.bind() # 绑定一个命令执行器, 若匹配成功则会传入参数, 自动执行命令执行器 def cb(content: str): eval(content, {}, {}) alc.parse('eval print(\\\\\\\\\\\"hello world\\\\\\\\\\\")') # hello world alc.parse(\\\"echo hello world!\\\") # hello world!\",\"当 fuzzy 为 False 时，第一个例子中传入 \\\"涩图1张 abc\\\" 之类的快捷指令将视为解析失败\",\"快捷指令允许三类特殊的 placeholder：\",\"{%X}: 如 setu {%0}，表示此处填入快捷指令后随的第 X 个参数。\",\"例如，若快捷指令为 涩图, 配置为 {\\\"command\\\": \\\"setu {%0}\\\"}, 则指令 涩图 1 相当于 setu 1\",\"{*}: 表示此处填入所有后随参数，并且可以通过 {*X} 的方式指定组合参数之间的分隔符。\",\"{X}: 表示此处填入可能的正则匹配的组：\",\"若 command 中存在匹配组 (xxx)，则 {X} 表示第 X 个匹配组的内容\",\"若 command 中存储匹配组 (?P<xxx>...), 则 {X} 表示 名字 为 X 的匹配结果\",\"除此之外, 通过 Alconna 内置选项 --shortcut 可以动态操作快捷指令\",\"例如：\",\"cmd --shortcut <key> <cmd> 来增加一个快捷指令\",\"cmd --shortcut list 来列出当前指令的所有快捷指令\",\"cmd --shortcut delete key 来删除一个快捷指令\",\"from arclet.alconna import Alconna, Args alc = Alconna(\\\"eval\\\", Args[\\\"content\\\", str]) alc.shortcut(\\\"echo\\\", {\\\"command\\\": \\\"eval print(\\\\\\\\'{*}\\\\\\\\')\\\"}) alc.parse(\\\"eval --shortcut list\\\") # 'echo'\"]},\"1910\":{\"h\":\"紧凑命令\",\"t\":[\"Alconna, Option 与 Subcommand 可以设置 compact=True 使得解析命令时允许名称与后随参数之间没有分隔：\",\"from arclet.alconna import Alconna, Option, CommandMeta, Args alc = Alconna(\\\"test\\\", Args[\\\"foo\\\", int], Option(\\\"BAR\\\", Args[\\\"baz\\\", str], compact=True), meta=CommandMeta(compact=True)) assert alc.parse(\\\"test123 BARabc\\\").matched\",\"这使得我们可以实现如下命令：\",\"from arclet.alconna import Alconna, Option, Args, append alc = Alconna(\\\"gcc\\\", Option(\\\"--flag|-F\\\", Args[\\\"content\\\", str], action=append, compact=True)) print(alc.parse(\\\"gcc -Fabc -Fdef -Fxyz\\\").query[list](\\\"flag.content\\\")) # ['abc', 'def', 'xyz']\",\"当 Option 的 action 为 count 时，其自动支持 compact 特性：\",\"from arclet.alconna import Alconna, Option, count alc = Alconna(\\\"pp\\\", Option(\\\"--verbose|-v\\\", action=count, default=0)) print(alc.parse(\\\"pp -vvv\\\").query[int](\\\"verbose.value\\\")) # 3\"]},\"1911\":{\"h\":\"模糊匹配\",\"t\":[\"模糊匹配会应用在任意需要进行名称判断的地方，如 命令名称，选项名称 和 参数名称 (如指定需要传入参数名称)。\",\"from arclet.alconna import Alconna, CommandMeta alc = Alconna(\\\"test_fuzzy\\\", meta=CommandMeta(fuzzy_match=True)) alc.parse(\\\"test_fuzy\\\") # test_fuzy is not matched. Do you mean \\\"test_fuzzy\\\"?\"]},\"1912\":{\"h\":\"半自动补全\",\"t\":[\"半自动补全为用户提供了推荐后续输入的功能\",\"补全默认通过 --comp 或 -cp 或 ? 触发：（命名空间配置可修改名称）\",\"from arclet.alconna import Alconna, Args, Option alc = Alconna(\\\"test\\\", Args[\\\"abc\\\", int]) + Option(\\\"foo\\\") + Option(\\\"bar\\\") alc.parse(\\\"test --comp\\\") ''' output 以下是建议的输入： * <abc: int> * --help * -h * -sct * --shortcut * foo * bar '''\"]},\"1913\":{\"h\":\"Duplication\",\"t\":[\"Duplication 用来提供更好的自动补全，类似于 ArgParse 的 Namespace\",\"普通情况下使用，需要利用到 ArgsStub、OptionStub 和 SubcommandStub 三个部分\",\"以pip为例，其对应的 Duplication 应如下构造:\",\"from arclet.alconna import Alconna, Args, Option, OptionResult, Duplication, SubcommandStub, Subcommand, count class MyDup(Duplication): verbose: OptionResult install: SubcommandStub alc = Alconna( \\\"pip\\\", Subcommand( \\\"install\\\", Args[\\\"package\\\", str], Option(\\\"-r|--requirement\\\", Args[\\\"file\\\", str]), Option(\\\"-i|--index-url\\\", Args[\\\"url\\\", str]), ), Option(\\\"-v|--version\\\"), Option(\\\"-v|--verbose\\\", action=count), ) res = alc.parse(\\\"pip -v install ...\\\") # 不使用duplication获得的提示较少 print(res.query(\\\"install\\\")) # (value=Ellipsis args={'package': '...'} options={} subcommands={}) result = alc.parse(\\\"pip -v install ...\\\", duplication=MyDup) print(result.install) # SubcommandStub(_origin=Subcommand('install', args=Args('package': str)), _value=Ellipsis, available=True, args=ArgsStub(_origin=Args('package': str), _value={'package': '...'}, available=True), dest='install', options=[OptionStub(_origin=Option('requirement', args=Args('file': str)), _value=None, available=False, args=ArgsStub(_origin=Args('file': str), _value={}, available=False), dest='requirement', aliases=['r', 'requirement'], name='requirement'), OptionStub(_origin=Option('index-url', args=Args('url': str)), _value=None, available=False, args=ArgsStub(_origin=Args('url': str), _value={}, available=False), dest='index-url', aliases=['index-url', 'i'], name='index-url')], subcommands=[], name='install')\",\"Duplication 也可以如 Namespace 一样直接标明参数名称和类型：\",\"from typing import Optional from arclet.alconna import Duplication class MyDup(Duplication): package: str file: Optional[str] = None url: Optional[str] = None\"]},\"1914\":{\"h\":\"上下文插值\",\"t\":[\"当 context_style 条目被设置后，传入的命令中符合上下文插值的字段会被自动替换成当前上下文中的信息。\",\"上下文可以在 parse 中传入：\",\"from arclet.alconna import Alconna, Args, CommandMeta alc = Alconna(\\\"test\\\", Args[\\\"foo\\\", int], meta=CommandMeta(context_style=\\\"parentheses\\\")) alc.parse(\\\"test $(bar)\\\", {\\\"bar\\\": 123}) # {\\\"foo\\\": 123}\",\"context_style 的值分两种：\",\"\\\"bracket\\\": 插值格式为 {...}，例如 {foo}\",\"\\\"parentheses\\\": 插值格式为 $(...)，例如 $(bar)\"]},\"1915\":{\"h\":\"配置项\"},\"1916\":{\"h\":\"alconna_auto_send_output\",\"t\":[\"类型: bool\",\"默认值: False\",\"是否全局启用输出信息自动发送，不启用则会在触发特殊内置选项后仍然将解析结果传递至响应器。\"]},\"1917\":{\"h\":\"alconna_use_command_start\",\"t\":[\"类型: bool\",\"默认值: False\",\"是否读取 Nonebot 的配置项 COMMAND_START 来作为全局的 Alconna 命令前缀\"]},\"1918\":{\"h\":\"alconna_auto_completion\",\"t\":[\"类型: bool\",\"默认值: False\",\"是否全局启用命令自动补全，启用后会在参数缺失或触发 --comp 选项时自自动启用交互式补全。\"]},\"1919\":{\"h\":\"alconna_use_origin\",\"t\":[\"类型: bool\",\"默认值: False\",\"是否全局使用原始消息 (即未经过 to_me 等处理的)，该选项会影响到 Alconna 的匹配行为。\"]},\"1920\":{\"h\":\"alconna_use_command_sep\",\"t\":[\"类型: bool\",\"默认值: False\",\"是否读取 Nonebot 的配置项 COMMAND_SEP 来作为全局的 Alconna 命令分隔符。\"]},\"1921\":{\"h\":\"alconna_global_extensions\",\"t\":[\"类型: List[str]\",\"默认值: []\",\"全局加载的扩展，路径以 . 分隔，如 foo.bar.baz:DemoExtension。\"]},\"1922\":{\"h\":\"alconna_context_style\",\"t\":[\"类型: Optional[Literal[\\\"bracket\\\", \\\"parentheses\\\"]]\",\"默认值: None\",\"全局命令上下文插值的风格，None 为关闭，bracket 为 {...}，parentheses 为 $(...)。\"]},\"1923\":{\"h\":\"alconna_enable_saa_patch\",\"t\":[\"类型: bool\",\"默认值: False\",\"是否启用 SAA 补丁。\"]},\"1924\":{\"h\":\"alconna_apply_filehost\",\"t\":[\"类型: bool\",\"默认值: False\",\"是否启用文件托管。\"]},\"1925\":{\"h\":\"alconna_apply_fetch_targets\",\"t\":[\"类型: bool\",\"默认值: False\",\"是否启动时拉取一次发送对象列表。\"]},\"1926\":{\"h\":\"用户指南\",\"t\":[\"nonebot-plugin-orm 功能强大且复杂，使用上有一定难度。 不过，对于用户而言，只需要掌握部分功能即可。\",\"注意\",\"请注意区分插件的项目名（如：nonebot-plugin-wordcloud）和模块名（如：nonebot_plugin_wordcloud）。nonebot-plugin-orm 中统一使用插件模块名。参见 插件命名规范。\"]},\"1927\":{\"h\":\"示例\"},\"1928\":{\"h\":\"创建新机器人\",\"t\":[\"我们想要创建一个机器人，并安装 nonebot-plugin-wordcloud 插件，只需要执行以下命令：\",\"nb init # 初始化项目文件夹 pip install nonebot-plugin-orm[sqlite] # 安装 nonebot-plugin-orm，并附带 SQLite 支持 nb plugin install nonebot-plugin-wordcloud # 安装插件 # nb orm heads # 查看有什么插件使用到了数据库（可选） nb orm upgrade # 升级数据库 # nb orm check # 检查一下数据库模式是否与模型定义一致（可选） nb run # 启动机器人\"]},\"1929\":{\"h\":\"卸载插件\",\"t\":[\"我们已经安装了 nonebot-plugin-wordcloud 插件，但是现在想要卸载它，并且删除它的数据，只需要执行以下命令：\",\"nb plugin uninstall nonebot-plugin-wordcloud # 卸载插件 # nb orm heads # 查看有什么插件使用到了数据库。（可选） nb orm downgrade nonebot_plugin_wordcloud@base # 降级数据库，删除数据 # nb orm check # 检查一下数据库模式是否与模型定义一致（可选）\"]},\"1930\":{\"h\":\"CLI\",\"t\":[\"接下来，让我们了解下示例中出现的 CLI 命令的含义：\"]},\"1931\":{\"h\":\"heads\",\"t\":[\"显示所有的分支头。一般一个分支对应一个插件。\",\"nb orm heads\",\"输出格式为 <迁移 ID> (<插件模块名>) (<头部类型>)：\",\"46327b837dd8 (nonebot_plugin_chatrecorder) (head) 9492159f98f7 (nonebot_plugin_user) (head) 71a72119935f (nonebot_plugin_session_orm) (effective head) ade8cdca5470 (nonebot_plugin_wordcloud) (head)\"]},\"1932\":{\"h\":\"upgrade\",\"t\":[\"升级数据库。每次安装新的插件或更新插件版本后，都需要执行此命令。\",\"nb orm upgrade <插件模块名>@<迁移 ID>\",\"其中，<插件模块名>@<迁移 ID> 是可选参数。如果不指定，则会将所有分支升级到最新版本，这也是最常见的用法：\",\"nb orm upgrade\"]},\"1933\":{\"h\":\"downgrade\",\"t\":[\"降级数据库。当需要回滚插件版本或删除插件时，可以执行此命令。\",\"nb orm downgrade <插件模块名>@<迁移 ID>\",\"其中，<迁移 ID> 也可以是 base，即回滚到初始状态。常用于卸载插件后删除其数据：\",\"nb orm downgrade <插件模块名>@base\"]},\"1934\":{\"h\":\"check\",\"t\":[\"检查数据库模式是否与模型定义一致。机器人启动前会自动运行此命令（ALEMBIC_STARTUP_CHECK=true 时），并在检查失败时阻止启动。\",\"nb orm check\"]},\"1935\":{\"h\":\"配置\"},\"1936\":{\"h\":\"sqlalchemy_database_url\",\"t\":[\"默认数据库连接 URL。参见 数据库驱动和后端 和 引擎配置 — SQLAlchemy 2.0 文档。\",\"SQLALCHEMY_DATABASE_URL=dialect+driver://username:password@host:port/database\"]},\"1937\":{\"h\":\"sqlalchemy_bind\",\"t\":[\"bind keys（一般为插件模块名）到数据库连接 URL、create_async_engine() 参数字典或 AsyncEngine 实例的字典。 例如，我们想要让 nonebot-plugin-wordcloud 插件使用一个 SQLite 数据库，并开启 Echo 选项 便于 debug，而其他插件使用默认的 PostgreSQL 数据库，可以这样配置：\",\"SQLALCHEMY_BINDS='{ \\\"\\\": \\\"postgresql+psycopg://scott:tiger@localhost/mydatabase\\\", \\\"nonebot_plugin_wordcloud\\\": { \\\"url\\\": \\\"sqlite+aiosqlite://\\\", \\\"echo\\\": true } }'\"]},\"1938\":{\"h\":\"sqlalchemy_engine_options\",\"t\":[\"create_async_engine() 默认参数字典。\",\"SQLALCHEMY_ENGINE_OPTIONS='{ \\\"pool_size\\\": 5, \\\"max_overflow\\\": 10, \\\"pool_timeout\\\": 30, \\\"pool_recycle\\\": 3600, \\\"echo\\\": true }'\"]},\"1939\":{\"h\":\"sqlalchemy_echo\",\"t\":[\"开启 Echo 选项 和 Echo Pool 选项 便于 debug。\",\"SQLALCHEMY_ECHO=true\",\"注意\",\"以上配置之间有覆盖关系，遵循特殊优先于一般的原则，具体为 sqlalchemy_database_url > sqlalchemy_bind > sqlalchemy_echo > sqlalchemy_engine_options。 但覆盖顺序并非显而易见，出于清晰考虑，请只配置必要的选项。\"]},\"1940\":{\"h\":\"模拟网络通信\",\"t\":[\"NoneBot 驱动器提供了多种方法来帮助适配器进行网络通信，主要包括客户端和服务端两种类型。模拟网络通信可以帮助我们更加接近实际机器人应用场景，进行更加真实的集成测试。同时，通过这种途径，我们还可以完成对适配器的测试。\",\"NoneBot 中的网络通信主要包括以下几种：\",\"HTTP 服务端（WebHook）\",\"WebSocket 服务端\",\"HTTP 客户端\",\"WebSocket 客户端\",\"下面我们将分别介绍如何使用 NoneBug 来模拟这几种通信方式。\"]},\"1941\":{\"h\":\"测试 HTTP 服务端\",\"t\":[\"当 NoneBot 作为 ASGI 服务端应用时，我们可以定义一系列的路由来处理 HTTP 请求，适配器同样也可以通过定义路由来响应机器人相关的网络通信。下面假设我们使用了一个适配器 fake ，它定义了一个路由 /fake/http ，用于接收平台 WebHook 并处理。实际应用测试时，应将该路由地址替换为真实适配器注册的路由地址。\",\"我们首先需要获取测试用模拟客户端：\",\"from nonebug import App @pytest.mark.asyncio async def test_http_server(app: App): async with app.test_server() as ctx: client = ctx.get_client()\",\"默认情况下，app.test_server() 会通过 nonebot.get_asgi 获取测试对象，我们也可以通过参数指定 ASGI 应用：\",\"async with app.test_server(asgi=asgi_app) as ctx: ...\",\"获取到模拟客户端后，即可像 requests、httpx 等库类似的方法进行使用：\",\"import nonebot from nonebug import App from nonebot.adapters.fake import Adapter @pytest.mark.asyncio async def test_http_server(app: App): adapter = nonebot.get_adapter(Adapter) async with app.test_server() as ctx: client = ctx.get_client() response = await client.post(\\\"/fake/http\\\", json={\\\"bot_id\\\": \\\"fake\\\"}) assert response.status_code == 200 assert response.json() == {\\\"status\\\": \\\"success\\\"} assert \\\"fake\\\" in nonebot.get_bots() adapter.bot_disconnect(nonebot.get_bot(\\\"fake\\\"))\",\"在上面的测试中，我们向 /fake/http 发送了一个模拟 POST 请求，适配器将会对该请求进行处理，我们可以通过检查请求返回是否正确、Bot 对象是否创建等途径来验证机器人是否正确运行。在完成测试后，我们通常需要对 Bot 对象进行清理，以避免对其他测试产生影响。\"]},\"1942\":{\"h\":\"测试 WebSocket 服务端\",\"t\":[\"当 NoneBot 作为 ASGI 服务端应用时，我们还可以定义一系列的路由来处理 WebSocket 通信。下面假设我们使用了一个适配器 fake ，它定义了一个路由 /fake/ws ，用于处理平台 WebSocket 连接信息。实际应用测试时，应将该路由地址替换为真实适配器注册的路由地址。\",\"我们同样需要通过 app.test_server() 获取测试用模拟客户端，这里就不再赘述。在获取到模拟客户端后，我们可以通过 client.websocket_connect 方法来模拟 WebSocket 连接：\",\"import nonebot from nonebug import App from nonebot.adapters.fake import Adapter @pytest.mark.asyncio async def test_ws_server(app: App): adapter = nonebot.get_adapter(Adapter) async with app.test_server() as ctx: client = ctx.get_client() async with client.websocket_connect(\\\"/fake/ws\\\") as ws: await ws.send_json({\\\"bot_id\\\": \\\"fake\\\"}) response = await ws.receive_json() assert response == {\\\"status\\\": \\\"success\\\"} assert \\\"fake\\\" in nonebot.get_bots()\",\"在上面的测试中，我们向 /fake/ws 进行了 WebSocket 模拟通信，通过发送消息与机器人进行交互，然后检查机器人发送的信息是否正确。\"]},\"1943\":{\"h\":\"测试 HTTP 客户端\",\"t\":[\"暂不支持\"]},\"1944\":{\"h\":\"测试 WebSocket 客户端\",\"t\":[\"暂不支持\"]},\"1945\":{\"h\":\"nonebot.adapters\",\"t\":[\"本模块定义了协议适配基类，各协议请继承以下基类。\",\"使用 Driver.register_adapter 注册适配器。\"]},\"1946\":{\"h\":\"\",\"t\":[\"说明\",\"协议适配器基类。\",\"通常，在 Adapter 中编写协议通信相关代码，如: 建立通信连接、处理接收与发送 data 等。\",\"参数\",\"driver (Driver): Driver 实例\",\"**kwargs (Any): 其他由 Driver.register_adapter 传入的额外参数\"]},\"1947\":{\"h\":\"\",\"t\":[\"类型:Driver\",\"说明: 实例\"]},\"1948\":{\"h\":\"\",\"t\":[\"类型: dict[str, Bot]\",\"说明: 本协议适配器已建立连接的 Bot 实例\"]},\"1949\":{\"h\":\"\",\"t\":[\"说明: 当前协议适配器的名称\",\"参数\",\"empty\",\"返回\",\"str\"]},\"1950\":{\"h\":\"\",\"t\":[\"类型:Config\",\"说明: 全局 NoneBot 配置\"]},\"1951\":{\"h\":\"\",\"t\":[\"说明\",\"告知 NoneBot 建立了一个新的 Bot 连接。\",\"当有新的 Bot 实例连接建立成功时调用。\",\"参数\",\"bot (Bot): Bot 实例\",\"返回\",\"None\"]},\"1952\":{\"h\":\"\",\"t\":[\"说明\",\"告知 NoneBot Bot 连接已断开。\",\"当有 Bot 实例连接断开时调用。\",\"参数\",\"bot (Bot): Bot 实例\",\"返回\",\"None\"]},\"1953\":{\"h\":\"\",\"t\":[\"说明: 设置一个 HTTP 服务器路由配置\",\"参数\",\"setup (HTTPServerSetup)\",\"返回\",\"untyped\"]},\"1954\":{\"h\":\"\",\"t\":[\"说明: 设置一个 WebSocket 服务器路由配置\",\"参数\",\"setup (WebSocketServerSetup)\",\"返回\",\"untyped\"]},\"1955\":{\"h\":\"\",\"t\":[\"说明: 进行一个 HTTP 客户端请求\",\"参数\",\"setup (Request)\",\"返回\",\"Response\"]},\"1956\":{\"h\":\"\",\"t\":[\"说明: 建立一个 WebSocket 客户端连接请求\",\"参数\",\"setup (Request)\",\"返回\",\"AsyncGenerator[WebSocket, None]\"]},\"1957\":{\"h\":\"\",\"t\":[\"参数\",\"func (LIFESPAN_FUNC)\",\"返回\",\"LIFESPAN_FUNC\"]},\"1958\":{\"h\":\"\",\"t\":[\"说明\",\"Bot 基类。\",\"用于处理上报消息，并提供 API 调用接口。\",\"参数\",\"adapter (Adapter): 协议适配器实例\",\"self_id (str): 机器人 ID\"]},\"1959\":{\"h\":\"\",\"t\":[\"类型:Adapter\",\"说明: 协议适配器实例\"]},\"1960\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明: 机器人 ID\"]},\"1961\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明: 协议适配器名称\"]},\"1962\":{\"h\":\"\",\"t\":[\"类型:Config\",\"说明: 全局 NoneBot 配置\"]},\"1963\":{\"h\":\"\",\"t\":[\"说明: 调用机器人 API 接口，可以通过该函数或直接通过 bot 属性进行调用\",\"参数\",\"api (str): API 名称\",\"**data (Any): API 数据\",\"返回\",\"Any\",\"用法\",\"await bot.call_api(\\\"send_msg\\\", message=\\\"hello world\\\") await bot.send_msg(message=\\\"hello world\\\")\"]},\"1964\":{\"h\":\"\",\"t\":[\"说明: 调用机器人基础发送消息接口\",\"参数\",\"event (Event): 上报事件\",\"message (str | Message | MessageSegment): 要发送的消息\",\"**kwargs (Any): 任意额外参数\",\"返回\",\"Any\"]},\"1965\":{\"h\":\"\",\"t\":[\"说明\",\"调用 api 预处理。\",\"钩子函数参数:\",\"bot: 当前 bot 对象\",\"api: 调用的 api 名称\",\"data: api 调用的参数字典\",\"参数\",\"func (T_CallingAPIHook)\",\"返回\",\"T_CallingAPIHook\"]},\"1966\":{\"h\":\"\",\"t\":[\"说明\",\"调用 api 后处理。\",\"钩子函数参数:\",\"bot: 当前 bot 对象\",\"exception: 调用 api 时发生的错误\",\"api: 调用的 api 名称\",\"data: api 调用的参数字典\",\"result: api 调用的返回\",\"参数\",\"func (T_CalledAPIHook)\",\"返回\",\"T_CalledAPIHook\"]},\"1967\":{\"h\":\"\",\"t\":[\"说明: Event 基类。提供获取关键信息的方法，其余信息可直接获取。\",\"参数\",\"auto\"]},\"1968\":{\"h\":\"\",\"t\":[\"说明: 获取事件类型的方法，类型通常为 NoneBot 内置的四种类型。\",\"参数\",\"empty\",\"返回\",\"str\"]},\"1969\":{\"h\":\"\",\"t\":[\"说明: 获取事件名称的方法。\",\"参数\",\"empty\",\"返回\",\"str\"]},\"1970\":{\"h\":\"\",\"t\":[\"说明: 获取事件描述的方法，通常为事件具体内容。\",\"参数\",\"empty\",\"返回\",\"str\"]},\"1971\":{\"h\":\"\",\"t\":[\"说明\",\"获取事件日志信息的方法。\",\"通常你不需要修改这个方法，只有当希望 NoneBot 隐藏该事件日志时， 可以抛出 NoLogException 异常。\",\"参数\",\"empty\",\"返回\",\"str\",\"异常\",\"NoLogException: 希望 NoneBot 隐藏该事件日志\"]},\"1972\":{\"h\":\"\",\"t\":[\"说明: 获取事件主体 id 的方法，通常是用户 id 。\",\"参数\",\"empty\",\"返回\",\"str\"]},\"1973\":{\"h\":\"\",\"t\":[\"说明: 获取会话 id 的方法，用于判断当前事件属于哪一个会话， 通常是用户 id、群组 id 组合。\",\"参数\",\"empty\",\"返回\",\"str\"]},\"1974\":{\"h\":\"\",\"t\":[\"说明: 获取事件消息内容的方法。\",\"参数\",\"empty\",\"返回\",\"Message\"]},\"1975\":{\"h\":\"\",\"t\":[\"说明\",\"获取消息纯文本的方法。\",\"通常不需要修改，默认通过 get_message().extract_plain_text 获取。\",\"参数\",\"empty\",\"返回\",\"str\"]},\"1976\":{\"h\":\"\",\"t\":[\"说明: 获取事件是否与机器人有关的方法。\",\"参数\",\"empty\",\"返回\",\"bool\"]},\"1977\":{\"h\":\"\",\"t\":[\"说明: 消息序列\",\"参数\",\"message: 消息内容\"]},\"1978\":{\"h\":\"\",\"t\":[\"说明\",\"创建消息模板。\",\"用法和 str.format 大致相同，支持以 Message 对象作为消息模板并输出消息对象。 并且提供了拓展的格式化控制符， 可以通过该消息类型的 MessageSegment 工厂方法创建消息。\",\"参数\",\"format_string (str | TM): 格式化模板\",\"返回\",\"MessageTemplate[Self]: 消息格式化器\"]},\"1979\":{\"h\":\"\",\"t\":[\"说明: 获取消息段类型\",\"参数\",\"empty\",\"返回\",\"type[TMS]\"]},\"1980\":{\"h\":\"\",\"t\":[\"说明: 构造消息数组\",\"参数\",\"msg (str)\",\"返回\",\"Iterable[TMS]\"]},\"1981\":{\"h\":\"\",\"t\":[\"重载\",\"1.(args) -> Self\",\"参数\",\"args (str): 消息段类型\",\"返回\",\"Self: 所有类型为 args 的消息段\",\"2.(args) -> TMS\",\"参数\",\"args (tuple[str, int]): 消息段类型和索引\",\"返回\",\"TMS: 类型为 args[0] 的消息段第 args[1] 个\",\"3.(args) -> Self\",\"参数\",\"args (tuple[str, slice]): 消息段类型和切片\",\"返回\",\"Self: 类型为 args[0] 的消息段切片 args[1]\",\"4.(args) -> TMS\",\"参数\",\"args (int): 索引\",\"返回\",\"TMS: 第 args 个消息段\",\"5.(args) -> Self\",\"参数\",\"args (slice): 切片\",\"返回\",\"Self: 消息切片 args\"]},\"1982\":{\"h\":\"\",\"t\":[\"说明: 检查消息段是否存在\",\"参数\",\"value (TMS | str): 消息段或消息段类型\",\"返回\",\"bool: 消息内是否存在给定消息段或给定类型的消息段\"]},\"1983\":{\"h\":\"\",\"t\":[\"说明: 与 __contains__ 相同\",\"参数\",\"value (TMS | str)\",\"返回\",\"bool\"]},\"1984\":{\"h\":\"\",\"t\":[\"说明: 索引消息段\",\"参数\",\"value (TMS | str): 消息段或者消息段类型\",\"*args (SupportsIndex)\",\"arg: start 与 end\",\"返回\",\"int: 索引 index\",\"异常\",\"ValueError: 消息段不存在\"]},\"1985\":{\"h\":\"\",\"t\":[\"说明: 获取指定类型的消息段\",\"参数\",\"type_ (str): 消息段类型\",\"count (int | None): 获取个数\",\"返回\",\"Self: 构建的新消息\"]},\"1986\":{\"h\":\"\",\"t\":[\"说明: 计算指定消息段的个数\",\"参数\",\"value (TMS | str): 消息段或消息段类型\",\"返回\",\"int: 个数\"]},\"1987\":{\"h\":\"\",\"t\":[\"说明: 检查消息中是否仅包含指定消息段\",\"参数\",\"value (TMS | str): 指定消息段或消息段类型\",\"返回\",\"bool: 是否仅包含指定消息段\"]},\"1988\":{\"h\":\"\",\"t\":[\"说明: 添加一个消息段到消息数组末尾。\",\"参数\",\"obj (str | TMS): 要添加的消息段\",\"返回\",\"Self\"]},\"1989\":{\"h\":\"\",\"t\":[\"说明: 拼接一个消息数组或多个消息段到消息数组末尾。\",\"参数\",\"obj (Self | Iterable[TMS]): 要添加的消息数组\",\"返回\",\"Self\"]},\"1990\":{\"h\":\"\",\"t\":[\"说明: 将多个消息连接并将自身作为分割\",\"参数\",\"iterable (Iterable[TMS | Self]): 要连接的消息\",\"返回\",\"Self: 连接后的消息\"]},\"1991\":{\"h\":\"\",\"t\":[\"说明: 深拷贝消息\",\"参数\",\"empty\",\"返回\",\"Self\"]},\"1992\":{\"h\":\"\",\"t\":[\"说明: 过滤消息\",\"参数\",\"*types (str): 包含的消息段类型\",\"返回\",\"Self: 新构造的消息\"]},\"1993\":{\"h\":\"\",\"t\":[\"说明: 过滤消息\",\"参数\",\"*types (str): 不包含的消息段类型\",\"返回\",\"Self: 新构造的消息\"]},\"1994\":{\"h\":\"\",\"t\":[\"说明: 提取消息内纯文本消息\",\"参数\",\"empty\",\"返回\",\"str\"]},\"1995\":{\"h\":\"\",\"t\":[\"说明: 消息段基类\",\"参数\",\"auto\"]},\"1996\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明: 消息段类型\"]},\"1997\":{\"h\":\"\",\"t\":[\"类型: dict[str, Any]\",\"说明: 消息段数据\"]},\"1998\":{\"h\":\"\",\"t\":[\"说明: 获取消息数组类型\",\"参数\",\"empty\",\"返回\",\"type[TM]\"]},\"1999\":{\"h\":\"\",\"t\":[\"说明: 该消息段所代表的 str，在命令匹配部分使用\",\"参数\",\"empty\",\"返回\",\"str\"]},\"2000\":{\"h\":\"\",\"t\":[\"参数\",\"other (str | TMS | Iterable[TMS])\",\"返回\",\"TM\"]},\"2001\":{\"h\":\"\",\"t\":[\"参数\",\"key (str)\",\"default (Any)\",\"返回\",\"untyped\"]},\"2002\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"untyped\"]},\"2003\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"untyped\"]},\"2004\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"untyped\"]},\"2005\":{\"h\":\"\",\"t\":[\"参数\",\"iterable (Iterable[TMS | TM])\",\"返回\",\"TM\"]},\"2006\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"Self\"]},\"2007\":{\"h\":\"\",\"t\":[\"说明: 当前消息段是否为纯文本\",\"参数\",\"empty\",\"返回\",\"bool\"]},\"2008\":{\"h\":\"\",\"t\":[\"说明: 消息模板格式化实现类。\",\"参数\",\"template (str | TM): 模板\",\"factory (type[str] | type[TM]): 消息类型工厂，默认为 str\",\"private_getattr (bool): 是否允许在模板中访问私有属性，默认为 False\"]},\"2009\":{\"h\":\"\",\"t\":[\"参数\",\"spec (FormatSpecFunc_T)\",\"name (str | None)\",\"返回\",\"FormatSpecFunc_T\"]},\"2010\":{\"h\":\"\",\"t\":[\"说明: 根据传入参数和模板生成消息对象\",\"参数\",\"*args\",\"**kwargs\",\"返回\",\"TF\"]},\"2011\":{\"h\":\"\",\"t\":[\"说明: 根据传入字典和模板生成消息对象, 在传入字段名不是有效标识符时有用\",\"参数\",\"mapping (Mapping[str, Any])\",\"返回\",\"TF\"]},\"2012\":{\"h\":\"\",\"t\":[\"参数\",\"format_string (str)\",\"args (Sequence[Any])\",\"kwargs (Mapping[str, Any])\",\"返回\",\"TF\"]},\"2013\":{\"h\":\"\",\"t\":[\"参数\",\"field_name (str)\",\"args (Sequence[Any])\",\"kwargs (Mapping[str, Any])\",\"返回\",\"tuple[Any, int | str]\"]},\"2014\":{\"h\":\"\",\"t\":[\"参数\",\"value (Any)\",\"format_spec (str)\",\"返回\",\"Any\"]},\"2015\":{\"h\":\"nonebot.dependencies\",\"t\":[\"本模块模块实现了依赖注入的定义与处理。\"]},\"2016\":{\"h\":\"\",\"t\":[\"说明\",\"依赖注入的基本单元 —— 参数。\",\"继承自 pydantic.fields.FieldInfo，用于描述参数信息（不包括参数名）。\",\"参数\",\"*args\",\"validate (bool)\",\"**kwargs (Any)\"]},\"2017\":{\"h\":\"\",\"t\":[\"说明: 依赖注入容器\",\"参数\",\"call: 依赖注入的可调用对象，可以是任何 Callable 对象\",\"pre_checkers: 依赖注入解析前的参数检查\",\"params: 具名参数列表\",\"parameterless: 匿名参数列表\",\"allow_types: 允许的参数类型\"]},\"2018\":{\"h\":\"\",\"t\":[\"参数\",\"call (_DependentCallable[R])\",\"allow_types (tuple[type[Param], ...])\",\"返回\",\"tuple[ModelField, ...]\"]},\"2019\":{\"h\":\"\",\"t\":[\"参数\",\"parameterless (tuple[Any, ...])\",\"allow_types (tuple[type[Param], ...])\",\"返回\",\"tuple[Param, ...]\"]},\"2020\":{\"h\":\"\",\"t\":[\"参数\",\"call (_DependentCallable[R])\",\"parameterless (Iterable[Any] | None)\",\"allow_types (Iterable[type[Param]])\",\"返回\",\"Dependent[R]\"]},\"2021\":{\"h\":\"\",\"t\":[\"参数\",\"**params (Any)\",\"返回\",\"None\"]},\"2022\":{\"h\":\"\",\"t\":[\"参数\",\"**params (Any)\",\"返回\",\"dict[str, Any]\"]},\"2023\":{\"h\":\"nonebot.dependencies.utils\"},\"2024\":{\"h\":\"\",\"t\":[\"说明: 获取可调用对象签名\",\"参数\",\"call ((...) -> Any)\",\"返回\",\"inspect.Signature\"]},\"2025\":{\"h\":\"\",\"t\":[\"说明: 获取参数的类型注解\",\"参数\",\"param (inspect.Parameter)\",\"globalns (dict[str, Any])\",\"返回\",\"Any\"]},\"2026\":{\"h\":\"\",\"t\":[\"说明: 检查字段类型是否匹配\",\"参数\",\"field (ModelField)\",\"value (Any)\",\"返回\",\"Any\"]},\"2027\":{\"h\":\"nonebot.drivers.aiohttp\",\"t\":[\"AIOHTTP 驱动适配器。\",\"nb driver install aiohttp # 或者 pip install nonebot2[aiohttp]\",\"提示\",\"本驱动仅支持客户端连接\"]},\"2028\":{\"h\":\"\",\"t\":[\"参数\",\"params (QueryTypes)\",\"headers (HeaderTypes)\",\"cookies (CookieTypes)\",\"version (str | HTTPVersion)\",\"timeout (float | None)\",\"proxy (str | None)\"]},\"2029\":{\"h\":\"\",\"t\":[\"参数\",\"setup (Request)\",\"返回\",\"Response\"]},\"2030\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"None\"]},\"2031\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"None\"]},\"2032\":{\"h\":\"\",\"t\":[\"说明: AIOHTTP Mixin\",\"参数\",\"auto\"]},\"2033\":{\"h\":\"\",\"t\":[\"参数\",\"setup (Request)\",\"返回\",\"Response\"]},\"2034\":{\"h\":\"\",\"t\":[\"参数\",\"setup (Request)\",\"返回\",\"AsyncGenerator[WebSocket, None]\"]},\"2035\":{\"h\":\"\",\"t\":[\"参数\",\"params (QueryTypes)\",\"headers (HeaderTypes)\",\"cookies (CookieTypes)\",\"version (str | HTTPVersion)\",\"timeout (float | None)\",\"proxy (str | None)\",\"返回\",\"Session\"]},\"2036\":{\"h\":\"\",\"t\":[\"说明: AIOHTTP Websocket Wrapper\",\"参数\",\"request (Request)\",\"session (aiohttp.ClientSession)\",\"websocket (aiohttp.ClientWebSocketResponse)\"]},\"2037\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"untyped\"]},\"2038\":{\"h\":\"\",\"t\":[\"参数\",\"code (int)\",\"reason (str)\",\"返回\",\"untyped\"]},\"2039\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"str\"]},\"2040\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"str\"]},\"2041\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"bytes\"]},\"2042\":{\"h\":\"\",\"t\":[\"参数\",\"data (str)\",\"返回\",\"None\"]},\"2043\":{\"h\":\"\",\"t\":[\"参数\",\"data (bytes)\",\"返回\",\"None\"]},\"2044\":{\"h\":\"\",\"t\":[\"参数\",\"env (Env)\",\"config (Config)\"]},\"2045\":{\"h\":\"nonebot.drivers.fastapi\",\"t\":[\"FastAPI 驱动适配\",\"nb driver install fastapi # 或者 pip install nonebot2[fastapi]\",\"提示\",\"本驱动仅支持服务端连接\"]},\"2046\":{\"h\":\"\",\"t\":[\"说明: FastAPI 驱动框架设置，详情参考 FastAPI 文档\",\"参数\",\"auto\"]},\"2047\":{\"h\":\"\",\"t\":[\"类型: str | None\",\"说明:openapi.json 地址，默认为 None 即关闭\"]},\"2048\":{\"h\":\"\",\"t\":[\"类型: str | None\",\"说明:swagger 地址，默认为 None 即关闭\"]},\"2049\":{\"h\":\"\",\"t\":[\"类型: str | None\",\"说明:redoc 地址，默认为 None 即关闭\"]},\"2050\":{\"h\":\"\",\"t\":[\"类型: bool\",\"说明: 是否包含适配器路由的 schema，默认为 True\"]},\"2051\":{\"h\":\"\",\"t\":[\"类型: bool\",\"说明: 开启/关闭冷重载\"]},\"2052\":{\"h\":\"\",\"t\":[\"类型: list[str] | None\",\"说明: 重载监控文件夹列表，默认为 uvicorn 默认值\"]},\"2053\":{\"h\":\"\",\"t\":[\"类型: float\",\"说明: 重载延迟，默认为 uvicorn 默认值\"]},\"2054\":{\"h\":\"\",\"t\":[\"类型: list[str] | None\",\"说明: 要监听的文件列表，支持 glob pattern，默认为 uvicorn 默认值\"]},\"2055\":{\"h\":\"\",\"t\":[\"类型: list[str] | None\",\"说明: 不要监听的文件列表，支持 glob pattern，默认为 uvicorn 默认值\"]},\"2056\":{\"h\":\"\",\"t\":[\"类型: dict[str, Any]\",\"说明: 传递给 FastAPI 的其他参数。\"]},\"2057\":{\"h\":\"\",\"t\":[\"说明: FastAPI 驱动框架。\",\"参数\",\"env (Env)\",\"config (NoneBotConfig)\"]},\"2058\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明: 驱动名称: fastapi\"]},\"2059\":{\"h\":\"\",\"t\":[\"类型: FastAPI\",\"说明:FastAPI APP 对象\"]},\"2060\":{\"h\":\"\",\"t\":[\"类型: FastAPI\",\"说明:FastAPI APP 对象\"]},\"2061\":{\"h\":\"\",\"t\":[\"类型: logging.Logger\",\"说明: fastapi 使用的 logger\"]},\"2062\":{\"h\":\"\",\"t\":[\"参数\",\"setup (HTTPServerSetup)\",\"返回\",\"untyped\"]},\"2063\":{\"h\":\"\",\"t\":[\"参数\",\"setup (WebSocketServerSetup)\",\"返回\",\"None\"]},\"2064\":{\"h\":\"\",\"t\":[\"说明: 使用 uvicorn 启动 FastAPI\",\"参数\",\"host (str | None)\",\"port (int | None)\",\"*args\",\"app (str | None)\",\"**kwargs\",\"返回\",\"untyped\"]},\"2065\":{\"h\":\"\",\"t\":[\"说明: FastAPI WebSocket Wrapper\",\"参数\",\"request (BaseRequest)\",\"websocket (WebSocket)\"]},\"2066\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"None\"]},\"2067\":{\"h\":\"\",\"t\":[\"参数\",\"code (int)\",\"reason (str)\",\"返回\",\"None\"]},\"2068\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"str | bytes\"]},\"2069\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"str\"]},\"2070\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"bytes\"]},\"2071\":{\"h\":\"\",\"t\":[\"参数\",\"data (str)\",\"返回\",\"None\"]},\"2072\":{\"h\":\"\",\"t\":[\"参数\",\"data (bytes)\",\"返回\",\"None\"]},\"2073\":{\"h\":\"nonebot.drivers.httpx\",\"t\":[\"HTTPX 驱动适配\",\"nb driver install httpx # 或者 pip install nonebot2[httpx]\",\"提示\",\"本驱动仅支持客户端 HTTP 连接\"]},\"2074\":{\"h\":\"\",\"t\":[\"参数\",\"params (QueryTypes)\",\"headers (HeaderTypes)\",\"cookies (CookieTypes)\",\"version (str | HTTPVersion)\",\"timeout (float | None)\",\"proxy (str | None)\"]},\"2075\":{\"h\":\"\",\"t\":[\"参数\",\"setup (Request)\",\"返回\",\"Response\"]},\"2076\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"None\"]},\"2077\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"None\"]},\"2078\":{\"h\":\"\",\"t\":[\"说明: HTTPX Mixin\",\"参数\",\"auto\"]},\"2079\":{\"h\":\"\",\"t\":[\"参数\",\"setup (Request)\",\"返回\",\"Response\"]},\"2080\":{\"h\":\"\",\"t\":[\"参数\",\"params (QueryTypes)\",\"headers (HeaderTypes)\",\"cookies (CookieTypes)\",\"version (str | HTTPVersion)\",\"timeout (float | None)\",\"proxy (str | None)\",\"返回\",\"Session\"]},\"2081\":{\"h\":\"\",\"t\":[\"参数\",\"env (Env)\",\"config (Config)\"]},\"2082\":{\"h\":\"nonebot.drivers\",\"t\":[\"本模块定义了驱动适配器基类。\",\"各驱动请继承以下基类。\"]},\"2083\":{\"h\":\"\",\"t\":[\"说明\",\"ASGI 服务端基类。\",\"将后端框架封装，以满足适配器使用。\",\"参数\",\"auto\"]},\"2084\":{\"h\":\"\",\"t\":[\"类型: Any\",\"说明: 驱动 APP 对象\"]},\"2085\":{\"h\":\"\",\"t\":[\"类型: Any\",\"说明: 驱动 ASGI 对象\"]},\"2086\":{\"h\":\"\",\"t\":[\"说明: 设置一个 HTTP 服务器路由配置\",\"参数\",\"setup (HTTPServerSetup)\",\"返回\",\"None\"]},\"2087\":{\"h\":\"\",\"t\":[\"说明: 设置一个 WebSocket 服务器路由配置\",\"参数\",\"setup (WebSocketServerSetup)\",\"返回\",\"None\"]},\"2088\":{\"h\":\"\",\"t\":[\"参数\",\"cookies (CookieTypes)\"]},\"2089\":{\"h\":\"\",\"t\":[\"参数\",\"name (str)\",\"value (str)\",\"domain (str)\",\"path (str)\",\"返回\",\"None\"]},\"2090\":{\"h\":\"\",\"t\":[\"参数\",\"name (str)\",\"default (str | None)\",\"domain (str | None)\",\"path (str | None)\",\"返回\",\"str | None\"]},\"2091\":{\"h\":\"\",\"t\":[\"参数\",\"name (str)\",\"domain (str | None)\",\"path (str | None)\",\"返回\",\"None\"]},\"2092\":{\"h\":\"\",\"t\":[\"参数\",\"domain (str | None)\",\"path (str | None)\",\"返回\",\"None\"]},\"2093\":{\"h\":\"\",\"t\":[\"参数\",\"cookies (CookieTypes)\",\"返回\",\"None\"]},\"2094\":{\"h\":\"\",\"t\":[\"参数\",\"request (Request)\",\"返回\",\"dict[str, str]\"]},\"2095\":{\"h\":\"\",\"t\":[\"说明\",\"驱动器基类。\",\"驱动器控制框架的启动和停止，适配器的注册，以及机器人生命周期管理。\",\"参数\",\"env (Env): 包含环境信息的 Env 对象\",\"config (Config): 包含配置信息的 Config 对象\"]},\"2096\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明: 环境名称\"]},\"2097\":{\"h\":\"\",\"t\":[\"类型:Config\",\"说明: 全局配置对象\"]},\"2098\":{\"h\":\"\",\"t\":[\"类型: dict[str, Bot]\",\"说明: 获取当前所有已连接的 Bot\"]},\"2099\":{\"h\":\"\",\"t\":[\"说明: 注册一个协议适配器\",\"参数\",\"adapter (type[Adapter]): 适配器类\",\"**kwargs: 其他传递给适配器的参数\",\"返回\",\"None\"]},\"2100\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明: 驱动类型名称\"]},\"2101\":{\"h\":\"\",\"t\":[\"类型: untyped\",\"说明: 驱动专属 logger 日志记录器\"]},\"2102\":{\"h\":\"\",\"t\":[\"说明: 启动驱动框架\",\"参数\",\"*args\",\"**kwargs\",\"返回\",\"untyped\"]},\"2103\":{\"h\":\"\",\"t\":[\"说明: 注册一个启动时执行的函数\",\"参数\",\"func (LIFESPAN_FUNC)\",\"返回\",\"LIFESPAN_FUNC\"]},\"2104\":{\"h\":\"\",\"t\":[\"说明: 注册一个停止时执行的函数\",\"参数\",\"func (LIFESPAN_FUNC)\",\"返回\",\"LIFESPAN_FUNC\"]},\"2105\":{\"h\":\"\",\"t\":[\"说明\",\"装饰一个函数使他在 bot 连接成功时执行。\",\"钩子函数参数:\",\"bot: 当前连接上的 Bot 对象\",\"参数\",\"func (T_BotConnectionHook)\",\"返回\",\"T_BotConnectionHook\"]},\"2106\":{\"h\":\"\",\"t\":[\"说明\",\"装饰一个函数使他在 bot 连接断开时执行。\",\"钩子函数参数:\",\"bot: 当前连接上的 Bot 对象\",\"参数\",\"func (T_BotDisconnectionHook)\",\"返回\",\"T_BotDisconnectionHook\"]},\"2107\":{\"h\":\"\",\"t\":[\"类型: ForwardMixin\",\"说明\",\"支持客户端请求的驱动器。\",\"Deprecated，请使用 ForwardMixin 或其子类代替。\"]},\"2108\":{\"h\":\"\",\"t\":[\"说明: 客户端混入基类。\",\"参数\",\"auto\"]},\"2109\":{\"h\":\"\",\"t\":[\"说明: HTTP 客户端混入基类。\",\"参数\",\"auto\"]},\"2110\":{\"h\":\"\",\"t\":[\"说明: 发送一个 HTTP 请求\",\"参数\",\"setup (Request)\",\"返回\",\"Response\"]},\"2111\":{\"h\":\"\",\"t\":[\"说明: 获取一个 HTTP 会话\",\"参数\",\"params (QueryTypes)\",\"headers (HeaderTypes)\",\"cookies (CookieTypes)\",\"version (str | HTTPVersion)\",\"timeout (float | None)\",\"proxy (str | None)\",\"返回\",\"HTTPClientSession\"]},\"2112\":{\"h\":\"\",\"t\":[\"说明: HTTP 服务器路由配置。\",\"参数\",\"auto\"]},\"2113\":{\"h\":\"\",\"t\":[\"说明: An enumeration.\",\"参数\",\"auto\",\"H10: '1.0'\",\"H11: '1.1'\",\"H2: '2'\"]},\"2114\":{\"h\":\"\",\"t\":[\"说明: 可与其他驱动器共用的混入基类。\",\"参数\",\"auto\"]},\"2115\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明: 混入驱动类型名称\"]},\"2116\":{\"h\":\"\",\"t\":[\"参数\",\"method (str | bytes)\",\"url (URL | str | RawURL)\",\"params (QueryTypes)\",\"headers (HeaderTypes)\",\"cookies (CookieTypes)\",\"content (ContentTypes)\",\"data (DataTypes)\",\"json (Any)\",\"files (FilesTypes)\",\"version (str | HTTPVersion)\",\"timeout (float | None)\",\"proxy (str | None)\"]},\"2117\":{\"h\":\"\",\"t\":[\"参数\",\"status_code (int)\",\"headers (HeaderTypes)\",\"content (ContentTypes)\",\"request (Request | None)\"]},\"2118\":{\"h\":\"\",\"t\":[\"类型: ReverseMixin\",\"说明\",\"支持服务端请求的驱动器。\",\"Deprecated，请使用 ReverseMixin 或其子类代替。\"]},\"2119\":{\"h\":\"\",\"t\":[\"说明: 服务端混入基类。\",\"参数\",\"auto\"]},\"2120\":{\"h\":\"\",\"t\":[\"参数\",\"request (Request)\"]},\"2121\":{\"h\":\"\",\"t\":[\"类型: bool\",\"说明: 连接是否已经关闭\"]},\"2122\":{\"h\":\"\",\"t\":[\"说明: 接受 WebSocket 连接请求\",\"参数\",\"empty\",\"返回\",\"None\"]},\"2123\":{\"h\":\"\",\"t\":[\"说明: 关闭 WebSocket 连接请求\",\"参数\",\"code (int)\",\"reason (str)\",\"返回\",\"None\"]},\"2124\":{\"h\":\"\",\"t\":[\"说明: 接收一条 WebSocket text/bytes 信息\",\"参数\",\"empty\",\"返回\",\"str | bytes\"]},\"2125\":{\"h\":\"\",\"t\":[\"说明: 接收一条 WebSocket text 信息\",\"参数\",\"empty\",\"返回\",\"str\"]},\"2126\":{\"h\":\"\",\"t\":[\"说明: 接收一条 WebSocket binary 信息\",\"参数\",\"empty\",\"返回\",\"bytes\"]},\"2127\":{\"h\":\"\",\"t\":[\"说明: 发送一条 WebSocket text/bytes 信息\",\"参数\",\"data (str | bytes)\",\"返回\",\"None\"]},\"2128\":{\"h\":\"\",\"t\":[\"说明: 发送一条 WebSocket text 信息\",\"参数\",\"data (str)\",\"返回\",\"None\"]},\"2129\":{\"h\":\"\",\"t\":[\"说明: 发送一条 WebSocket binary 信息\",\"参数\",\"data (bytes)\",\"返回\",\"None\"]},\"2130\":{\"h\":\"\",\"t\":[\"说明: WebSocket 客户端混入基类。\",\"参数\",\"auto\"]},\"2131\":{\"h\":\"\",\"t\":[\"说明: 发起一个 WebSocket 连接\",\"参数\",\"setup (Request)\",\"返回\",\"AsyncGenerator[WebSocket, None]\"]},\"2132\":{\"h\":\"\",\"t\":[\"说明: WebSocket 服务器路由配置。\",\"参数\",\"auto\"]},\"2133\":{\"h\":\"\",\"t\":[\"说明: 将一个驱动器和多个混入类合并。\",\"重载\",\"1.(driver) -> type[D]\",\"参数\",\"driver (type[D])\",\"返回\",\"type[D]\",\"2.(driver, __m, /, *mixins) -> type[CombinedDriver]\",\"参数\",\"driver (type[D])\",\"__m (type[Mixin])\",\"*mixins (type[Mixin])\",\"返回\",\"type[CombinedDriver]\"]},\"2134\":{\"h\":\"nonebot.drivers.none\",\"t\":[\"None 驱动适配\",\"提示\",\"本驱动不支持任何服务器或客户端连接\"]},\"2135\":{\"h\":\"\",\"t\":[\"说明: None 驱动框架\",\"参数\",\"env (Env)\",\"config (Config)\"]},\"2136\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明: 驱动名称: none\"]},\"2137\":{\"h\":\"\",\"t\":[\"类型: untyped\",\"说明: none driver 使用的 logger\"]},\"2138\":{\"h\":\"\",\"t\":[\"说明: 启动 none driver\",\"参数\",\"*args\",\"**kwargs\",\"返回\",\"untyped\"]},\"2139\":{\"h\":\"\",\"t\":[\"说明: 退出 none driver\",\"参数\",\"force (bool): 强制退出\",\"返回\",\"untyped\"]},\"2140\":{\"h\":\"nonebot.drivers.quart\",\"t\":[\"Quart 驱动适配\",\"nb driver install quart # 或者 pip install nonebot2[quart]\",\"提示\",\"本驱动仅支持服务端连接\"]},\"2141\":{\"h\":\"\",\"t\":[\"说明: Quart 驱动框架设置\",\"参数\",\"auto\"]},\"2142\":{\"h\":\"\",\"t\":[\"类型: bool\",\"说明: 开启/关闭冷重载\"]},\"2143\":{\"h\":\"\",\"t\":[\"类型: list[str] | None\",\"说明: 重载监控文件夹列表，默认为 uvicorn 默认值\"]},\"2144\":{\"h\":\"\",\"t\":[\"类型: float\",\"说明: 重载延迟，默认为 uvicorn 默认值\"]},\"2145\":{\"h\":\"\",\"t\":[\"类型: list[str] | None\",\"说明: 要监听的文件列表，支持 glob pattern，默认为 uvicorn 默认值\"]},\"2146\":{\"h\":\"\",\"t\":[\"类型: list[str] | None\",\"说明: 不要监听的文件列表，支持 glob pattern，默认为 uvicorn 默认值\"]},\"2147\":{\"h\":\"\",\"t\":[\"类型: dict[str, Any]\",\"说明: 传递给 Quart 的其他参数。\"]},\"2148\":{\"h\":\"\",\"t\":[\"说明: Quart 驱动框架\",\"参数\",\"env (Env)\",\"config (NoneBotConfig)\"]},\"2149\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明: 驱动名称: quart\"]},\"2150\":{\"h\":\"\",\"t\":[\"类型: Quart\",\"说明:Quart 对象\"]},\"2151\":{\"h\":\"\",\"t\":[\"类型: untyped\",\"说明:Quart 对象\"]},\"2152\":{\"h\":\"\",\"t\":[\"类型: untyped\",\"说明: Quart 使用的 logger\"]},\"2153\":{\"h\":\"\",\"t\":[\"参数\",\"setup (HTTPServerSetup)\",\"返回\",\"untyped\"]},\"2154\":{\"h\":\"\",\"t\":[\"参数\",\"setup (WebSocketServerSetup)\",\"返回\",\"None\"]},\"2155\":{\"h\":\"\",\"t\":[\"说明: 使用 uvicorn 启动 Quart\",\"参数\",\"host (str | None)\",\"port (int | None)\",\"*args\",\"app (str | None)\",\"**kwargs\",\"返回\",\"untyped\"]},\"2156\":{\"h\":\"\",\"t\":[\"说明: Quart WebSocket Wrapper\",\"参数\",\"request (BaseRequest)\",\"websocket_ctx (WebsocketContext)\"]},\"2157\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"untyped\"]},\"2158\":{\"h\":\"\",\"t\":[\"参数\",\"code (int)\",\"reason (str)\",\"返回\",\"untyped\"]},\"2159\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"str | bytes\"]},\"2160\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"str\"]},\"2161\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"bytes\"]},\"2162\":{\"h\":\"\",\"t\":[\"参数\",\"data (str)\",\"返回\",\"untyped\"]},\"2163\":{\"h\":\"\",\"t\":[\"参数\",\"data (bytes)\",\"返回\",\"untyped\"]},\"2164\":{\"h\":\"nonebot.drivers.websockets\",\"t\":[\"websockets 驱动适配\",\"nb driver install websockets # 或者 pip install nonebot2[websockets]\",\"提示\",\"本驱动仅支持客户端 WebSocket 连接\"]},\"2165\":{\"h\":\"\",\"t\":[\"参数\",\"func ((P) -> CoroutineType[Any, Any, T])\",\"返回\",\"(P) -> CoroutineType[Any, Any, T]\"]},\"2166\":{\"h\":\"\",\"t\":[\"说明: Websockets Mixin\",\"参数\",\"auto\"]},\"2167\":{\"h\":\"\",\"t\":[\"参数\",\"setup (Request)\",\"返回\",\"AsyncGenerator[WebSocket, None]\"]},\"2168\":{\"h\":\"\",\"t\":[\"说明: Websockets WebSocket Wrapper\",\"参数\",\"request (Request)\",\"websocket (WebSocketClientProtocol)\"]},\"2169\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"untyped\"]},\"2170\":{\"h\":\"\",\"t\":[\"参数\",\"code (int)\",\"reason (str)\",\"返回\",\"untyped\"]},\"2171\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"str | bytes\"]},\"2172\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"str\"]},\"2173\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"bytes\"]},\"2174\":{\"h\":\"\",\"t\":[\"参数\",\"data (str)\",\"返回\",\"None\"]},\"2175\":{\"h\":\"\",\"t\":[\"参数\",\"data (bytes)\",\"返回\",\"None\"]},\"2176\":{\"h\":\"\",\"t\":[\"参数\",\"env (Env)\",\"config (Config)\"]},\"2177\":{\"h\":\"nonebot.plugin\",\"t\":[\"本模块为 NoneBot 插件开发提供便携的定义函数。\"]},\"2178\":{\"h\":\"快捷导入\",\"t\":[\"为方便使用，本模块从子模块导入了部分内容，以下内容可以直接通过本模块导入:\",\"on => on\",\"on_metaevent => on_metaevent\",\"on_message => on_message\",\"on_notice => on_notice\",\"on_request => on_request\",\"on_startswith => on_startswith\",\"on_endswith => on_endswith\",\"on_fullmatch => on_fullmatch\",\"on_keyword => on_keyword\",\"on_command => on_command\",\"on_shell_command => on_shell_command\",\"on_regex => on_regex\",\"on_type => on_type\",\"CommandGroup => CommandGroup\",\"Matchergroup => MatcherGroup\",\"load_plugin => load_plugin\",\"load_plugins => load_plugins\",\"load_all_plugins => load_all_plugins\",\"load_from_json => load_from_json\",\"load_from_toml => load_from_toml\",\"load_builtin_plugin =>load_builtin_plugin\",\"load_builtin_plugins =>load_builtin_plugins\",\"require => require\",\"PluginMetadata => PluginMetadata\"]},\"2179\":{\"h\":\"\",\"t\":[\"说明\",\"获取已经导入的某个插件。\",\"如果为 load_plugins 文件夹导入的插件，则为文件(夹)名。\",\"如果为嵌套的子插件，标识符为 父插件标识符:子插件文件(夹)名。\",\"参数\",\"plugin_id (str): 插件标识符，即 Plugin.id_。\",\"返回\",\"Plugin | None\"]},\"2180\":{\"h\":\"\",\"t\":[\"说明\",\"通过模块名获取已经导入的某个插件。\",\"如果提供的模块名为某个插件的子模块，同样会返回该插件。\",\"参数\",\"module_name (str): 模块名，即 Plugin.module_name。\",\"返回\",\"Plugin | None\"]},\"2181\":{\"h\":\"\",\"t\":[\"说明: 获取当前已导入的所有插件。\",\"参数\",\"empty\",\"返回\",\"set[Plugin]\"]},\"2182\":{\"h\":\"\",\"t\":[\"说明: 获取当前所有可用的插件标识符（包含尚未加载的插件）。\",\"参数\",\"empty\",\"返回\",\"set[str]\"]},\"2183\":{\"h\":\"\",\"t\":[\"说明: 从全局配置获取当前插件需要的配置项。\",\"参数\",\"config (type[C])\",\"返回\",\"C\"]},\"2184\":{\"h\":\"nonebot.plugin.load\",\"t\":[\"本模块定义插件加载接口。\"]},\"2185\":{\"h\":\"\",\"t\":[\"说明: 加载单个插件，可以是本地插件或是通过 pip 安装的插件。\",\"参数\",\"module_path (str | Path): 插件名称 path.to.your.plugin 或插件路径 pathlib.Path(path/to/your/plugin)\",\"返回\",\"Plugin | None\"]},\"2186\":{\"h\":\"\",\"t\":[\"说明: 导入文件夹下多个插件，以 _ 开头的插件不会被导入!\",\"参数\",\"*plugin_dir (str): 文件夹路径\",\"返回\",\"set[Plugin]\"]},\"2187\":{\"h\":\"\",\"t\":[\"说明: 导入指定列表中的插件以及指定目录下多个插件，以 _ 开头的插件不会被导入!\",\"参数\",\"module_path (Iterable[str]): 指定插件集合\",\"plugin_dir (Iterable[str]): 指定文件夹路径集合\",\"返回\",\"set[Plugin]\"]},\"2188\":{\"h\":\"\",\"t\":[\"说明: 导入指定 json 文件中的 plugins 以及 plugin_dirs 下多个插件。 以 _ 开头的插件不会被导入!\",\"参数\",\"file_path (str): 指定 json 文件路径\",\"encoding (str): 指定 json 文件编码\",\"返回\",\"set[Plugin]\",\"用法\",\"{ \\\"plugins\\\": [\\\"some_plugin\\\"], \\\"plugin_dirs\\\": [\\\"some_dir\\\"] }\",\"nonebot.load_from_json(\\\"plugins.json\\\")\"]},\"2189\":{\"h\":\"\",\"t\":[\"说明: 导入指定 toml 文件 [tool.nonebot] 中的 plugins 以及 plugin_dirs 下多个插件。 以 _ 开头的插件不会被导入!\",\"参数\",\"file_path (str): 指定 toml 文件路径\",\"encoding (str): 指定 toml 文件编码\",\"返回\",\"set[Plugin]\",\"用法\",\"[tool.nonebot] plugins = [\\\"some_plugin\\\"] plugin_dirs = [\\\"some_dir\\\"]\",\"nonebot.load_from_toml(\\\"pyproject.toml\\\")\"]},\"2190\":{\"h\":\"\",\"t\":[\"说明: 导入 NoneBot 内置插件。\",\"参数\",\"name (str): 插件名称\",\"返回\",\"Plugin | None\"]},\"2191\":{\"h\":\"\",\"t\":[\"说明: 导入多个 NoneBot 内置插件。\",\"参数\",\"*plugins (str): 插件名称列表\",\"返回\",\"set[Plugin]\"]},\"2192\":{\"h\":\"\",\"t\":[\"说明: 声明依赖插件。\",\"参数\",\"name (str): 插件模块名或插件标识符，仅在已声明插件的情况下可使用标识符。\",\"返回\",\"ModuleType\",\"异常\",\"RuntimeError: 插件无法加载\"]},\"2193\":{\"h\":\"\",\"t\":[\"说明\",\"获取已加载插件的适配器支持状态集合。\",\"如果传入了多个插件名称，返回值会自动取交集。\",\"参数\",\"*names (str): 插件名称列表。\",\"返回\",\"set[str] | None\",\"异常\",\"RuntimeError: 插件未加载\",\"ValueError: 插件缺少元数据\"]},\"2194\":{\"h\":\"nonebot.plugin.manager\",\"t\":[\"本模块实现插件加载流程。\",\"参考: import hooks, PEP302\"]},\"2195\":{\"h\":\"\",\"t\":[\"说明: 插件管理器。\",\"参数\",\"plugins (Iterable[str] | None): 独立插件模块名集合。\",\"search_path (Iterable[str] | None): 插件搜索路径（文件夹），相对于当前工作目录。\"]},\"2196\":{\"h\":\"\",\"t\":[\"类型: set[str]\",\"说明: 返回所有独立插件标识符。\"]},\"2197\":{\"h\":\"\",\"t\":[\"类型: set[str]\",\"说明: 返回已搜索到的插件标识符。\"]},\"2198\":{\"h\":\"\",\"t\":[\"类型: set[str]\",\"说明: 返回当前插件管理器中可用的插件标识符。\"]},\"2199\":{\"h\":\"\",\"t\":[\"类型: dict[str, str]\",\"说明: 返回当前插件管理器中控制的插件标识符与模块路径映射字典。\"]},\"2200\":{\"h\":\"\",\"t\":[\"说明\",\"加载指定插件。\",\"可以使用完整插件模块名或者插件标识符加载。\",\"参数\",\"name (str): 插件名称或插件标识符。\",\"返回\",\"Plugin | None\"]},\"2201\":{\"h\":\"\",\"t\":[\"说明: 加载所有可用插件。\",\"参数\",\"empty\",\"返回\",\"set[Plugin]\"]},\"2202\":{\"h\":\"\",\"t\":[\"参数\",\"auto\"]},\"2203\":{\"h\":\"\",\"t\":[\"参数\",\"fullname (str)\",\"path (Sequence[str] | None)\",\"target (ModuleType | None)\",\"返回\",\"untyped\"]},\"2204\":{\"h\":\"\",\"t\":[\"参数\",\"manager (PluginManager)\",\"fullname (str)\",\"path (str)\"]},\"2205\":{\"h\":\"\",\"t\":[\"参数\",\"spec\",\"返回\",\"ModuleType | None\"]},\"2206\":{\"h\":\"\",\"t\":[\"参数\",\"module (ModuleType)\",\"返回\",\"None\"]},\"2207\":{\"h\":\"nonebot.plugin.model\",\"t\":[\"本模块定义插件相关信息。\"]},\"2208\":{\"h\":\"\",\"t\":[\"说明: 插件元信息，由插件编写者提供\",\"参数\",\"auto\"]},\"2209\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明: 插件名称\"]},\"2210\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明: 插件功能介绍\"]},\"2211\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明: 插件使用方法\"]},\"2212\":{\"h\":\"\",\"t\":[\"类型: str | None\",\"说明: 插件类型，用于商店分类\"]},\"2213\":{\"h\":\"\",\"t\":[\"类型: str | None\",\"说明: 插件主页\"]},\"2214\":{\"h\":\"\",\"t\":[\"类型: type[BaseModel] | None\",\"说明: 插件配置项\"]},\"2215\":{\"h\":\"\",\"t\":[\"类型: set[str] | None\",\"说明\",\"插件支持的适配器模块路径\",\"格式为 <module>[:<Adapter>]，~ 为 nonebot.adapters. 的缩写。\",\"None 表示支持所有适配器。\"]},\"2216\":{\"h\":\"\",\"t\":[\"类型: dict[Any, Any]\",\"说明: 插件额外信息，可由插件编写者自由扩展定义\"]},\"2217\":{\"h\":\"\",\"t\":[\"说明: 获取当前已安装的插件支持适配器类列表\",\"参数\",\"empty\",\"返回\",\"set[type[Adapter]] | None\"]},\"2218\":{\"h\":\"\",\"t\":[\"说明: 存储插件信息\",\"参数\",\"auto\"]},\"2219\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明: 插件名称，NoneBot 使用 文件/文件夹 名称作为插件名称\"]},\"2220\":{\"h\":\"\",\"t\":[\"类型: ModuleType\",\"说明: 插件模块对象\"]},\"2221\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明: 点分割模块路径\"]},\"2222\":{\"h\":\"\",\"t\":[\"类型:PluginManager\",\"说明: 导入该插件的插件管理器\"]},\"2223\":{\"h\":\"\",\"t\":[\"类型: set[type[Matcher]]\",\"说明: 插件加载时定义的 Matcher\"]},\"2224\":{\"h\":\"\",\"t\":[\"类型: Plugin | None\",\"说明: 父插件\"]},\"2225\":{\"h\":\"\",\"t\":[\"类型: set[Plugin]\",\"说明: 子插件集合\"]},\"2226\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明: 插件索引标识\"]},\"2227\":{\"h\":\"nonebot.plugin.on\",\"t\":[\"本模块定义事件响应器便携定义函数。\"]},\"2228\":{\"h\":\"\",\"t\":[\"说明: 存储一个事件响应器到插件。\",\"参数\",\"matcher (type[Matcher]): 事件响应器\",\"返回\",\"None\"]},\"2229\":{\"h\":\"\",\"t\":[\"说明\",\"获取事件响应器定义所在插件。\",\"Deprecated, 请使用 get_matcher_source 获取信息。\",\"参数\",\"depth (int): 调用栈深度\",\"返回\",\"Plugin | None\"]},\"2230\":{\"h\":\"\",\"t\":[\"说明\",\"获取事件响应器定义所在模块。\",\"Deprecated, 请使用 get_matcher_source 获取信息。\",\"参数\",\"depth (int): 调用栈深度\",\"返回\",\"ModuleType | None\"]},\"2231\":{\"h\":\"\",\"t\":[\"说明: 获取事件响应器定义所在源码信息。\",\"参数\",\"depth (int): 调用栈深度\",\"返回\",\"MatcherSource | None\"]},\"2232\":{\"h\":\"\",\"t\":[\"说明: 注册一个基础事件响应器，可自定义类型。\",\"参数\",\"type (str): 事件响应器类型\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2233\":{\"h\":\"\",\"t\":[\"说明: 注册一个元事件响应器。\",\"参数\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2234\":{\"h\":\"\",\"t\":[\"说明: 注册一个消息事件响应器。\",\"参数\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2235\":{\"h\":\"\",\"t\":[\"说明: 注册一个通知事件响应器。\",\"参数\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2236\":{\"h\":\"\",\"t\":[\"说明: 注册一个请求事件响应器。\",\"参数\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2237\":{\"h\":\"\",\"t\":[\"说明: 注册一个消息事件响应器，并且当消息的文本部分以指定内容开头时响应。\",\"参数\",\"msg (str | tuple[str, ...]): 指定消息开头内容\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"ignorecase (bool): 是否忽略大小写\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2238\":{\"h\":\"\",\"t\":[\"说明: 注册一个消息事件响应器，并且当消息的文本部分以指定内容结尾时响应。\",\"参数\",\"msg (str | tuple[str, ...]): 指定消息结尾内容\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"ignorecase (bool): 是否忽略大小写\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2239\":{\"h\":\"\",\"t\":[\"说明: 注册一个消息事件响应器，并且当消息的文本部分与指定内容完全一致时响应。\",\"参数\",\"msg (str | tuple[str, ...]): 指定消息全匹配内容\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"ignorecase (bool): 是否忽略大小写\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2240\":{\"h\":\"\",\"t\":[\"说明: 注册一个消息事件响应器，并且当消息纯文本部分包含关键词时响应。\",\"参数\",\"keywords (set[str]): 关键词列表\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2241\":{\"h\":\"\",\"t\":[\"说明\",\"注册一个消息事件响应器，并且当消息以指定命令开头时响应。\",\"命令匹配规则参考: 命令形式匹配 <rule.md#command-command>_\",\"参数\",\"cmd (str | tuple[str, ...]): 指定命令内容\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"aliases (set[str | tuple[str, ...]] | None): 命令别名\",\"force_whitespace (str | bool | None): 是否强制命令后必须有指定空白符\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2242\":{\"h\":\"\",\"t\":[\"说明\",\"注册一个支持 shell_like 解析参数的命令消息事件响应器。\",\"与普通的 on_command 不同的是，在添加 parser 参数时, 响应器会自动处理消息。\",\"可以通过 ShellCommandArgv 获取原始参数列表， 通过 ShellCommandArgs 获取解析后的参数字典。\",\"参数\",\"cmd (str | tuple[str, ...]): 指定命令内容\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"aliases (set[str | tuple[str, ...]] | None): 命令别名\",\"parser (ArgumentParser | None): nonebot.rule.ArgumentParser 对象\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2243\":{\"h\":\"\",\"t\":[\"说明\",\"注册一个消息事件响应器，并且当消息匹配正则表达式时响应。\",\"命令匹配规则参考: 正则匹配 <rule.md#regex-regex-flags-0>_\",\"参数\",\"pattern (str): 正则表达式\",\"flags (int | re.RegexFlag): 正则匹配标志\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2244\":{\"h\":\"\",\"t\":[\"说明: 注册一个事件响应器，并且当事件为指定类型时响应。\",\"参数\",\"types (type[Event] | tuple[type[Event], ...]): 事件类型\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2245\":{\"h\":\"\",\"t\":[\"参数\",\"cmd (str | tuple[str, ...])\",\"prefix_aliases (bool)\",\"rule (Rule | T_RuleChecker | None)\",\"permission (Permission | T_PermissionChecker | None)\",\"handlers (list[T_Handler | Dependent[Any]] | None)\",\"temp (bool)\",\"expire_time (datetime | timedelta | None)\",\"priority (int)\",\"block (bool)\",\"state (T_State | None)\"]},\"2246\":{\"h\":\"\",\"t\":[\"说明: 注册一个新的命令。新参数将会覆盖命令组默认值\",\"参数\",\"cmd (str | tuple[str, ...]): 指定命令内容\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"aliases (set[str | tuple[str, ...]] | None): 命令别名\",\"force_whitespace (str | bool | None): 是否强制命令后必须有指定空白符\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2247\":{\"h\":\"\",\"t\":[\"说明: 注册一个新的 shell_like 命令。新参数将会覆盖命令组默认值\",\"参数\",\"cmd (str | tuple[str, ...]): 指定命令内容\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"aliases (set[str | tuple[str, ...]] | None): 命令别名\",\"parser (ArgumentParser | None): nonebot.rule.ArgumentParser 对象\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2248\":{\"h\":\"\",\"t\":[\"参数\",\"type (str)\",\"rule (Rule | T_RuleChecker | None)\",\"permission (Permission | T_PermissionChecker | None)\",\"handlers (list[T_Handler | Dependent[Any]] | None)\",\"temp (bool)\",\"expire_time (datetime | timedelta | None)\",\"priority (int)\",\"block (bool)\",\"state (T_State | None)\"]},\"2249\":{\"h\":\"\",\"t\":[\"说明: 注册一个基础事件响应器，可自定义类型。\",\"参数\",\"type (str): 事件响应器类型\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2250\":{\"h\":\"\",\"t\":[\"说明: 注册一个元事件响应器。\",\"参数\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2251\":{\"h\":\"\",\"t\":[\"说明: 注册一个消息事件响应器。\",\"参数\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2252\":{\"h\":\"\",\"t\":[\"说明: 注册一个通知事件响应器。\",\"参数\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2253\":{\"h\":\"\",\"t\":[\"说明: 注册一个请求事件响应器。\",\"参数\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2254\":{\"h\":\"\",\"t\":[\"说明: 注册一个消息事件响应器，并且当消息的文本部分以指定内容开头时响应。\",\"参数\",\"msg (str | tuple[str, ...]): 指定消息开头内容\",\"ignorecase (bool): 是否忽略大小写\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2255\":{\"h\":\"\",\"t\":[\"说明: 注册一个消息事件响应器，并且当消息的文本部分以指定内容结尾时响应。\",\"参数\",\"msg (str | tuple[str, ...]): 指定消息结尾内容\",\"ignorecase (bool): 是否忽略大小写\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2256\":{\"h\":\"\",\"t\":[\"说明: 注册一个消息事件响应器，并且当消息的文本部分与指定内容完全一致时响应。\",\"参数\",\"msg (str | tuple[str, ...]): 指定消息全匹配内容\",\"ignorecase (bool): 是否忽略大小写\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2257\":{\"h\":\"\",\"t\":[\"说明: 注册一个消息事件响应器，并且当消息纯文本部分包含关键词时响应。\",\"参数\",\"keywords (set[str]): 关键词列表\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2258\":{\"h\":\"\",\"t\":[\"说明\",\"注册一个消息事件响应器，并且当消息以指定命令开头时响应。\",\"命令匹配规则参考: 命令形式匹配 <rule.md#command-command>_\",\"参数\",\"cmd (str | tuple[str, ...]): 指定命令内容\",\"aliases (set[str | tuple[str, ...]] | None): 命令别名\",\"force_whitespace (str | bool | None): 是否强制命令后必须有指定空白符\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2259\":{\"h\":\"\",\"t\":[\"说明\",\"注册一个支持 shell_like 解析参数的命令消息事件响应器。\",\"与普通的 on_command 不同的是，在添加 parser 参数时, 响应器会自动处理消息。\",\"可以通过 ShellCommandArgv 获取原始参数列表， 通过 ShellCommandArgs 获取解析后的参数字典。\",\"参数\",\"cmd (str | tuple[str, ...]): 指定命令内容\",\"aliases (set[str | tuple[str, ...]] | None): 命令别名\",\"parser (ArgumentParser | None): nonebot.rule.ArgumentParser 对象\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2260\":{\"h\":\"\",\"t\":[\"说明\",\"注册一个消息事件响应器，并且当消息匹配正则表达式时响应。\",\"命令匹配规则参考: 正则匹配 <rule.md#regex-regex-flags-0>_\",\"参数\",\"pattern (str): 正则表达式\",\"flags (int | re.RegexFlag): 正则匹配标志\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2261\":{\"h\":\"\",\"t\":[\"说明: 注册一个事件响应器，并且当事件为指定类型时响应。\",\"参数\",\"types (type[Event] | tuple[type[Event]]): 事件类型\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2262\":{\"h\":\"Alconna 本体\",\"t\":[\"Alconna 隶属于 ArcletProject，是一个简单、灵活、高效的命令参数解析器, 并且不局限于解析命令式字符串。\",\"我们通过一个例子来讲解 Alconna 的核心 —— Args, Subcommand, Option：\",\"from arclet.alconna import Alconna, Args, Subcommand, Option alc = Alconna( \\\"pip\\\", Subcommand( \\\"install\\\", Args[\\\"package\\\", str], Option(\\\"-r|--requirement\\\", Args[\\\"file\\\", str]), Option(\\\"-i|--index-url\\\", Args[\\\"url\\\", str]), ) ) res = alc.parse(\\\"pip install nonebot2 -i URL\\\") print(res) # matched=True, header_match=(origin='pip' result='pip' matched=True groups={}), subcommands={'install': (value=Ellipsis args={'package': 'nonebot2'} options={'index-url': (value=None args={'url': 'URL'})} subcommands={})}, other_args={'package': 'nonebot2', 'url': 'URL'} print(res.all_matched_args) # {'package': 'nonebot2', 'url': 'URL'}\",\"这段代码通过Alconna创捷了一个接受主命令名为pip, 子命令为install且子命令接受一个 Args 参数package和二个 Option 参数-r和-i的命令参数解析器, 通过parse方法返回解析结果 Arparma 的实例。\"]},\"2263\":{\"h\":\"命令头\",\"t\":[\"命令头是指命令的前缀 (Prefix) 与命令名 (Command) 的组合，例如 !help 中的 ! 与 help。\",\"前缀\",\"命令名\",\"匹配内容\",\"说明\",\"-\",\"\\\"foo\\\"\",\"\\\"foo\\\"\",\"无前缀的纯文字头\",\"-\",\"123\",\"123\",\"无前缀的元素头\",\"-\",\"\\\"re:\\\\d{2}\\\"\",\"\\\"32\\\"\",\"无前缀的正则头\",\"-\",\"int\",\"123 或 \\\"456\\\"\",\"无前缀的类型头\",\"[int, bool]\",\"-\",\"True 或 123\",\"无名的元素类头\",\"[\\\"foo\\\", \\\"bar\\\"]\",\"-\",\"\\\"foo\\\" 或 \\\"bar\\\"\",\"无名的纯文字头\",\"[\\\"foo\\\", \\\"bar\\\"]\",\"\\\"baz\\\"\",\"\\\"foobaz\\\" 或 \\\"barbaz\\\"\",\"纯文字头\",\"[int, bool]\",\"\\\"foo\\\"\",\"[123, \\\"foo\\\"] 或 [False, \\\"foo\\\"]\",\"类型头\",\"[123, 4567]\",\"\\\"foo\\\"\",\"[123, \\\"foo\\\"] 或 [4567, \\\"foo\\\"]\",\"元素头\",\"[nepattern.NUMBER]\",\"\\\"bar\\\"\",\"[123, \\\"bar\\\"] 或 [123.456, \\\"bar\\\"]\",\"表达式头\",\"[123, \\\"foo\\\"]\",\"\\\"bar\\\"\",\"[123, \\\"bar\\\"] 或 \\\"foobar\\\" 或 [\\\"foo\\\", \\\"bar\\\"]\",\"混合头\",\"[(int, \\\"foo\\\"), (456, \\\"bar\\\")]\",\"\\\"baz\\\"\",\"[123, \\\"foobaz\\\"] 或 [456, \\\"foobaz\\\"] 或 [456, \\\"barbaz\\\"]\",\"对头\",\"对于无前缀的类型头，此时会将传入的值尝试转为 BasePattern，例如 int 会转为 nepattern.INTEGER。如此该命令头会匹配对应的类型， 例如 int 会匹配 123 或 \\\"456\\\"，但不会匹配 \\\"foo\\\"。解析后，Alconna 会将命令头匹配到的值转为对应的类型，例如 int 会将 \\\"123\\\" 转为 123。\",\"提示\",\"正则内容只在命令名上生效，前缀中的正则会被转义\",\"除了通过传入 re:xxx 来使用正则表达式外，Alconna 还提供了一种更加简洁的方式来使用正则表达式，称为 Bracket Header：\",\"from alconna import Alconna alc = Alconna(\\\".rd{roll:int}\\\") assert alc.parse(\\\".rd123\\\").header[\\\"roll\\\"] == 123\",\"Bracket Header 类似 python 里的 f-string 写法，通过 \\\"{}\\\" 声明匹配类型\",\"\\\"{}\\\" 中的内容为 \\\"name:type or pat\\\"：\",\"\\\"{}\\\", \\\"{:}\\\" ⇔ \\\"(.+)\\\", 占位符\",\"\\\"{foo}\\\" ⇔ \\\"(?P&lt;foo&gt;.+)\\\"\",\"\\\"{:\\\\d+}\\\" ⇔ \\\"(\\\\d+)\\\"\",\"\\\"{foo:int}\\\" ⇔ \\\"(?P&lt;foo&gt;\\\\d+)\\\"，其中 \\\"int\\\" 部分若能转为 BasePattern 则读取里面的表达式\"]},\"2264\":{\"h\":\"参数声明(Args)\",\"t\":[\"Args 是用于声明命令参数的组件， 可以通过以下几种方式构造 Args ：\",\"Args[key, var, default][key1, var1, default1][...]\",\"Args[(key, var, default)]\",\"Args.key[var, default]\",\"其中，key 一定是字符串，而 var 一般为参数的类型，default 为具体的值或者 arclet.alconna.args.Field\",\"其与函数签名类似，但是允许含有默认值的参数在前；同时支持 keyword-only 参数不依照构造顺序传入 （但是仍需要在非 keyword-only 参数之后）。\"]},\"2265\":{\"h\":\"key\",\"t\":[\"key 的作用是用以标记解析出来的参数并存放于 Arparma 中，以方便用户调用。\",\"其有三种为 Args 注解的标识符: ?、/、 !, 标识符与 key 之间建议以 ; 分隔：\",\"! 标识符表示该处传入的参数应不是规定的类型，或不在指定的值中。\",\"? 标识符表示该参数为可选参数，会在无参数匹配时跳过。\",\"/ 标识符表示该参数的类型注解需要隐藏。\",\"另外，对于参数的注释也可以标记在 key 中，其与 key 或者标识符 以 # 分割：foo#这是注释;? 或 foo?#这是注释\",\"提示\",\"Args 中的 key 在实际命令中并不需要传入（keyword 参数除外）：\",\"from arclet.alconna import Alconna, Args alc = Alconna(\\\"test\\\", Args[\\\"foo\\\", str]) alc.parse(\\\"test --foo abc\\\") # 错误 alc.parse(\\\"test abc\\\") # 正确\",\"若需要 test --foo abc，你应该使用 Option：\",\"from arclet.alconna import Alconna, Args, Option alc = Alconna(\\\"test\\\", Option(\\\"--foo\\\", Args[\\\"foo\\\", str]))\"]},\"2266\":{\"h\":\"var\",\"t\":[\"var 负责命令参数的类型检查与类型转化\",\"Args 的var表面上看需要传入一个 type，但实际上它需要的是一个 nepattern.BasePattern 的实例：\",\"from arclet.alconna import Args from nepattern import BasePattern # 表示 foo 参数需要匹配一个 @number 样式的字符串 args = Args[\\\"foo\\\", BasePattern(\\\"@\\\\d+\\\")]\",\"pip 示例中可以传入 str 是因为 str 已经注册在了 nepattern.global_patterns 中，因此会替换为 nepattern.global_patterns[str]\",\"nepattern.global_patterns默认支持的类型有：\",\"str: 匹配任意字符串\",\"int: 匹配整数\",\"float: 匹配浮点数\",\"bool: 匹配 True 与 False 以及他们小写形式\",\"hex: 匹配 0x 开头的十六进制字符串\",\"url: 匹配网址\",\"email: 匹配 xxxx@xxx 的字符串\",\"ipv4: 匹配 xxx.xxx.xxx.xxx 的字符串\",\"list: 匹配类似 [\\\"foo\\\",\\\"bar\\\",\\\"baz\\\"] 的字符串\",\"dict: 匹配类似 {\\\"foo\\\":\\\"bar\\\",\\\"baz\\\":\\\"qux\\\"} 的字符串\",\"datetime: 传入一个 datetime 支持的格式字符串，或时间戳\",\"Any: 匹配任意类型\",\"AnyString: 匹配任意类型，转为 str\",\"Number: 匹配 int 与 float，转为 int\",\"同时可以使用 typing 中的类型：\",\"Literal[X]: 匹配其中的任意一个值\",\"Union[X, Y]: 匹配其中的任意一个类型\",\"Optional[xxx]: 会自动将默认值设为 None，并在解析失败时使用默认值\",\"List[X]: 匹配一个列表，其中的元素为 X 类型\",\"Dict[X, Y]: 匹配一个字典，其中的 key 为 X 类型，value 为 Y 类型\",\"...\",\"提示\",\"几类特殊的传入标记：\",\"\\\"foo\\\": 匹配字符串 \\\"foo\\\" (若没有某个 BasePattern 与之关联)\",\"RawStr(\\\"foo\\\"): 匹配字符串 \\\"foo\\\" (即使有 BasePattern 与之关联也不会被替换)\",\"\\\"foo|bar|baz\\\": 匹配 \\\"foo\\\" 或 \\\"bar\\\" 或 \\\"baz\\\"\",\"[foo, bar, Baz, ...]: 匹配其中的任意一个值或类型\",\"Callable[[X], Y]: 匹配一个参数为 X 类型的值，并返回通过该函数调用得到的 Y 类型的值\",\"\\\"re:xxx\\\": 匹配一个正则表达式 xxx，会返回 Match[0]\",\"\\\"rep:xxx\\\": 匹配一个正则表达式 xxx，会返回 re.Match 对象\",\"{foo: bar, baz: qux}: 匹配字典中的任意一个键, 并返回对应的值 (特殊的键 ... 会匹配任意的值)\",\"...\",\"特别的，你可以不传入 var，此时会使用 key 作为 var, 匹配 key 字符串。\"]},\"2267\":{\"h\":\"MultiVar 与 KeyWordVar\",\"t\":[\"MultiVar 是一个特殊的标注，用于告知解析器该参数可以接受多个值，类似于函数中的 *args，其构造方法形如 MultiVar(str)。\",\"同样的还有 KeyWordVar，类似于函数中的 *, name: type，其构造方法形如 KeyWordVar(str)，用于告知解析器该参数为一个 keyword-only 参数。\",\"提示\",\"MultiVar 与 KeyWordVar 组合时，代表该参数为一个可接受多个 key-value 的参数，类似于函数中的 **kwargs，其构造方法形如 MultiVar(KeyWordVar(str))\",\"MultiVar 与 KeyWordVar 也可以传入 default 参数，用于指定默认值\",\"MultiVar 不能在 KeyWordVar 之后传入\"]},\"2268\":{\"h\":\"default\",\"t\":[\"default 传入的是该参数的默认值或者 Field，以携带对于该参数的更多信息。\",\"默认情况下 (即不声明) default 的值为特殊值 Empty。这也意味着你可以将默认值设置为 None 表示默认值为空值。\",\"Field 构造需要的参数说明如下：\",\"default: 参数单元的默认值\",\"alias: 参数单元默认值的别名\",\"completion: 参数单元的补全说明生成函数\",\"unmatch_tips: 参数单元的错误提示生成函数，其接收一个表示匹配失败的元素的参数\",\"missing_tips: 参数单元的缺失提示生成函数\"]},\"2269\":{\"h\":\"选项与子命令(Option & Subcommand)\",\"t\":[\"Option 和 Subcommand 可以传入一组 alias，如 Option(\\\"--foo|-F|--FOO|-f\\\")，Subcommand(\\\"foo\\\", alias=[\\\"F\\\"])\",\"传入别名后，选项与子命令会选择其中长度最长的作为其名称。若传入为 \\\"--foo|-f\\\"，则命令名称为 \\\"--foo\\\"\",\"特别提醒!!!\",\"Option 的名字或别名没有要求必须在前面写上 -\",\"Option 与 Subcommand 的唯一区别在于 Subcommand 可以传入自己的 Option 与 Subcommand\",\"他们拥有如下共同参数：\",\"help_text: 传入该组件的帮助信息\",\"dest: 被指定为解析完成时标注匹配结果的标识符，不传入时默认为选项或子命令的名称 (name)\",\"requires: 一段指定顺序的字符串列表，作为唯一的前置序列与命令嵌套替换 对于命令 test foo bar baz qux <a:int> 来讲，因为foo bar baz 仅需要判断是否相等, 所以可以这么编写：\",\"Alconna(\\\"test\\\", Option(\\\"qux\\\", Args.a[int], requires=[\\\"foo\\\", \\\"bar\\\", \\\"baz\\\"]))\",\"default: 默认值，在该组件未被解析时使用使用该值替换。 特别的，使用 OptionResult 或 SubcomanndResult 可以设置包括参数字典在内的默认值：\",\"from arclet.alconna import Option, OptionResult opt1 = Option(\\\"--foo\\\", default=False) opt2 = Option(\\\"--foo\\\", default=OptionResult(value=False, args={\\\"bar\\\": 1}))\"]},\"2270\":{\"h\":\"Action\",\"t\":[\"Option 可以特别设置传入一类 Action，作为解析操作\",\"Action 分为三类：\",\"store: 无 Args 时， 仅存储一个值， 默认为 Ellipsis； 有 Args 时， 后续的解析结果会覆盖之前的值\",\"append: 无 Args 时， 将多个值存为列表， 默认为 Ellipsis； 有 Args 时， 每个解析结果会追加到列表中, 当存在默认值并且不为列表时， 会自动将默认值变成列表， 以保证追加的正确性\",\"count: 无 Args 时， 计数器加一； 有 Args 时， 表现与 STORE 相同, 当存在默认值并且不为数字时， 会自动将默认值变成 1， 以保证计数器的正确性。\",\"Alconna 提供了预制的几类 Action：\",\"store(默认)，store_value，store_true，store_false\",\"append，append_value\",\"count\"]},\"2271\":{\"h\":\"解析结果(Arparma)\",\"t\":[\"Alconna.parse 会返回由 Arparma 承载的解析结果\",\"Arparma 有如下属性：\",\"调试类\",\"matched: 是否匹配成功\",\"error_data: 解析失败时剩余的数据\",\"error_info: 解析失败时的异常内容\",\"origin: 原始命令，可以类型标注\",\"分析类\",\"header_match: 命令头部的解析结果，包括原始头部、解析后头部、解析结果与可能的正则匹配组\",\"main_args: 命令的主参数的解析结果\",\"options: 命令所有选项的解析结果\",\"subcommands: 命令所有子命令的解析结果\",\"other_args: 除主参数外的其他解析结果\",\"all_matched_args: 所有 Args 的解析结果\",\"Arparma 同时提供了便捷的查询方法 query[type]()，会根据传入的 path 查找参数并返回\",\"path 支持如下:\",\"main_args, options, ...: 返回对应的属性\",\"args: 返回 all_matched_args\",\"main_args.xxx, options.xxx, ...: 返回字典中 xxx键对应的值\",\"args.xxx: 返回 all_matched_args 中 xxx键对应的值\",\"options.foo, foo: 返回选项 foo 的解析结果 (OptionResult)\",\"options.foo.value, foo.value: 返回选项 foo 的解析值\",\"options.foo.args, foo.args: 返回选项 foo 的解析参数字典\",\"options.foo.args.bar, foo.bar: 返回选项 foo 的参数字典中 bar 键对应的值 ...\"]},\"2272\":{\"h\":\"元数据(CommandMeta)\",\"t\":[\"Alconna 的元数据相当于其配置，拥有以下条目：\",\"description: 命令的描述\",\"usage: 命令的用法\",\"example: 命令的使用样例\",\"author: 命令的作者\",\"fuzzy_match: 命令是否开启模糊匹配\",\"fuzzy_threshold: 模糊匹配阈值\",\"raise_exception: 命令是否抛出异常\",\"hide: 命令是否对 manager 隐藏\",\"hide_shortcut: 命令的快捷指令是否在 help 信息中隐藏\",\"keep_crlf: 命令解析时是否保留换行字符\",\"compact: 命令是否允许第一个参数紧随头部\",\"strict: 命令是否严格匹配，若为 False 则未知参数将作为名为 $extra 的参数\",\"context_style: 命令上下文插值的风格，None 为关闭，bracket 为 {...}，parentheses 为 $(...)\",\"extra: 命令的自定义额外信息\",\"元数据一定使用 meta=... 形式传入：\",\"from arclet.alconna import Alconna, CommandMeta alc = Alconna(..., meta=CommandMeta(\\\"foo\\\", example=\\\"bar\\\"))\"]},\"2273\":{\"h\":\"命名空间配置\",\"t\":[\"命名空间配置 （以下简称命名空间） 相当于 Alconna 的默认配置，其优先度低于 CommandMeta。\",\"Alconna 默认使用 \\\"Alconna\\\" 命名空间。\",\"命名空间有以下几个属性：\",\"name: 命名空间名称\",\"prefixes: 默认前缀配置\",\"separators: 默认分隔符配置\",\"formatter_type: 默认格式化器类型\",\"fuzzy_match: 默认是否开启模糊匹配\",\"raise_exception: 默认是否抛出异常\",\"builtin_option_name: 默认的内置选项名称(--help, --shortcut, --comp)\",\"disable_builtin_options: 默认禁用的内置选项(--help, --shortcut, --comp)\",\"enable_message_cache: 默认是否启用消息缓存\",\"compact: 默认是否开启紧凑模式\",\"strict: 命令是否严格匹配\",\"context_style: 命令上下文插值的风格\",\"...\"]},\"2274\":{\"h\":\"新建命名空间并替换\",\"t\":[\"from arclet.alconna import Alconna, namespace, Namespace, Subcommand, Args, config ns = Namespace(\\\"foo\\\", prefixes=[\\\"/\\\"]) # 创建 \\\"foo\\\"命名空间配置, 它要求创建的Alconna的主命令前缀必须是/ alc = Alconna(\\\"pip\\\", Subcommand(\\\"install\\\", Args[\\\"package\\\", str]), namespace=ns) # 在创建Alconna时候传入命名空间以替换默认命名空间 # 可以通过with方式创建命名空间 with namespace(\\\"bar\\\") as np1: np1.prefixes = [\\\"!\\\"] # 以上下文管理器方式配置命名空间，此时配置会自动注入上下文内创建的命令 np1.formatter_type = ShellTextFormatter # 设置此命名空间下的命令的 formatter 默认为 ShellTextFormatter np1.builtin_option_name[\\\"help\\\"] = {\\\"帮助\\\", \\\"-h\\\"} # 设置此命名空间下的命令的帮助选项名称 # 你还可以使用config来管理所有命名空间并切换至任意命名空间 config.namespaces[\\\"foo\\\"] = ns # 将命名空间挂载到 config 上 alc = Alconna(\\\"pip\\\", Subcommand(\\\"install\\\", Args[\\\"package\\\", str]), namespace=config.namespaces[\\\"foo\\\"]) # 也是同样可以切换到\\\"foo\\\"命名空间\"]},\"2275\":{\"h\":\"修改默认的命名空间\",\"t\":[\"from arclet.alconna import config, namespace, Namespace config.default_namespace.prefixes = [...] # 直接修改默认配置 np = Namespace(\\\"xxx\\\", prefixes=[...]) config.default_namespace = np # 更换默认的命名空间 with namespace(config.default_namespace.name) as np: np.prefixes = [...]\"]},\"2276\":{\"h\":\"快捷指令\",\"t\":[\"快捷命令可以做到标识一段命令, 并且传递参数给原命令\",\"一般情况下你可以通过 Alconna.shortcut 进行快捷指令操作 (创建，删除)\",\"shortcut 的第一个参数为快捷指令名称，第二个参数为 ShortcutArgs，作为快捷指令的配置：\",\"class ShortcutArgs(TypedDict): \\\"\\\"\\\"快捷指令参数\\\"\\\"\\\" command: NotRequired[str] \\\"\\\"\\\"快捷指令的命令\\\"\\\"\\\" args: NotRequired[list[Any]] \\\"\\\"\\\"快捷指令的附带参数\\\"\\\"\\\" fuzzy: NotRequired[bool] \\\"\\\"\\\"是否允许命令后随参数\\\"\\\"\\\" prefix: NotRequired[bool] \\\"\\\"\\\"是否调用时保留指令前缀\\\"\\\"\\\" wrapper: NotRequired[ShortcutRegWrapper] \\\"\\\"\\\"快捷指令的正则匹配结果的额外处理函数\\\"\\\"\\\" humanized: NotRequired[str] \\\"\\\"\\\"快捷指令的人类可读描述\\\"\\\"\\\"\"]},\"2277\":{\"h\":\"args的使用\",\"t\":[\"from arclet.alconna import Alconna, Args alc = Alconna(\\\"setu\\\", Args[\\\"count\\\", int]) alc.shortcut(\\\"涩图(\\\\d+)张\\\", {\\\"args\\\": [\\\"{0}\\\"]}) # 'Alconna::setu 的快捷指令: \\\"涩图(\\\\\\\\d+)张\\\" 添加成功' alc.parse(\\\"涩图3张\\\").query(\\\"count\\\") # 3\"]},\"2278\":{\"h\":\"command的使用\",\"t\":[\"from arclet.alconna import Alconna, Args alc = Alconna(\\\"eval\\\", Args[\\\"content\\\", str]) alc.shortcut(\\\"echo\\\", {\\\"command\\\": \\\"eval print(\\\\\\\\'{*}\\\\\\\\')\\\"}) # 'Alconna::eval 的快捷指令: \\\"echo\\\" 添加成功' alc.shortcut(\\\"echo\\\", delete=True) # 删除快捷指令 # 'Alconna::eval 的快捷指令: \\\"echo\\\" 删除成功' @alc.bind() # 绑定一个命令执行器, 若匹配成功则会传入参数, 自动执行命令执行器 def cb(content: str): eval(content, {}, {}) alc.parse('eval print(\\\\\\\\\\\"hello world\\\\\\\\\\\")') # hello world alc.parse(\\\"echo hello world!\\\") # hello world!\",\"当 fuzzy 为 False 时，第一个例子中传入 \\\"涩图1张 abc\\\" 之类的快捷指令将视为解析失败\",\"快捷指令允许三类特殊的 placeholder：\",\"{%X}: 如 setu {%0}，表示此处填入快捷指令后随的第 X 个参数。\",\"例如，若快捷指令为 涩图, 配置为 {\\\"command\\\": \\\"setu {%0}\\\"}, 则指令 涩图 1 相当于 setu 1\",\"{*}: 表示此处填入所有后随参数，并且可以通过 {*X} 的方式指定组合参数之间的分隔符。\",\"{X}: 表示此处填入可能的正则匹配的组：\",\"若 command 中存在匹配组 (xxx)，则 {X} 表示第 X 个匹配组的内容\",\"若 command 中存储匹配组 (?P<xxx>...), 则 {X} 表示 名字 为 X 的匹配结果\",\"除此之外, 通过 Alconna 内置选项 --shortcut 可以动态操作快捷指令\",\"例如：\",\"cmd --shortcut <key> <cmd> 来增加一个快捷指令\",\"cmd --shortcut list 来列出当前指令的所有快捷指令\",\"cmd --shortcut delete key 来删除一个快捷指令\",\"from arclet.alconna import Alconna, Args alc = Alconna(\\\"eval\\\", Args[\\\"content\\\", str]) alc.shortcut(\\\"echo\\\", {\\\"command\\\": \\\"eval print(\\\\\\\\'{*}\\\\\\\\')\\\"}) alc.parse(\\\"eval --shortcut list\\\") # 'echo'\"]},\"2279\":{\"h\":\"紧凑命令\",\"t\":[\"Alconna, Option 与 Subcommand 可以设置 compact=True 使得解析命令时允许名称与后随参数之间没有分隔：\",\"from arclet.alconna import Alconna, Option, CommandMeta, Args alc = Alconna(\\\"test\\\", Args[\\\"foo\\\", int], Option(\\\"BAR\\\", Args[\\\"baz\\\", str], compact=True), meta=CommandMeta(compact=True)) assert alc.parse(\\\"test123 BARabc\\\").matched\",\"这使得我们可以实现如下命令：\",\"from arclet.alconna import Alconna, Option, Args, append alc = Alconna(\\\"gcc\\\", Option(\\\"--flag|-F\\\", Args[\\\"content\\\", str], action=append, compact=True)) print(alc.parse(\\\"gcc -Fabc -Fdef -Fxyz\\\").query[list](\\\"flag.content\\\")) # ['abc', 'def', 'xyz']\",\"当 Option 的 action 为 count 时，其自动支持 compact 特性：\",\"from arclet.alconna import Alconna, Option, count alc = Alconna(\\\"pp\\\", Option(\\\"--verbose|-v\\\", action=count, default=0)) print(alc.parse(\\\"pp -vvv\\\").query[int](\\\"verbose.value\\\")) # 3\"]},\"2280\":{\"h\":\"模糊匹配\",\"t\":[\"模糊匹配会应用在任意需要进行名称判断的地方，如 命令名称，选项名称 和 参数名称 (如指定需要传入参数名称)。\",\"from arclet.alconna import Alconna, CommandMeta alc = Alconna(\\\"test_fuzzy\\\", meta=CommandMeta(fuzzy_match=True)) alc.parse(\\\"test_fuzy\\\") # test_fuzy is not matched. Do you mean \\\"test_fuzzy\\\"?\"]},\"2281\":{\"h\":\"半自动补全\",\"t\":[\"半自动补全为用户提供了推荐后续输入的功能\",\"补全默认通过 --comp 或 -cp 或 ? 触发：（命名空间配置可修改名称）\",\"from arclet.alconna import Alconna, Args, Option alc = Alconna(\\\"test\\\", Args[\\\"abc\\\", int]) + Option(\\\"foo\\\") + Option(\\\"bar\\\") alc.parse(\\\"test --comp\\\") ''' output 以下是建议的输入： * <abc: int> * --help * -h * -sct * --shortcut * foo * bar '''\"]},\"2282\":{\"h\":\"Duplication\",\"t\":[\"Duplication 用来提供更好的自动补全，类似于 ArgParse 的 Namespace\",\"普通情况下使用，需要利用到 ArgsStub、OptionStub 和 SubcommandStub 三个部分\",\"以pip为例，其对应的 Duplication 应如下构造:\",\"from arclet.alconna import Alconna, Args, Option, OptionResult, Duplication, SubcommandStub, Subcommand, count class MyDup(Duplication): verbose: OptionResult install: SubcommandStub alc = Alconna( \\\"pip\\\", Subcommand( \\\"install\\\", Args[\\\"package\\\", str], Option(\\\"-r|--requirement\\\", Args[\\\"file\\\", str]), Option(\\\"-i|--index-url\\\", Args[\\\"url\\\", str]), ), Option(\\\"-v|--version\\\"), Option(\\\"-v|--verbose\\\", action=count), ) res = alc.parse(\\\"pip -v install ...\\\") # 不使用duplication获得的提示较少 print(res.query(\\\"install\\\")) # (value=Ellipsis args={'package': '...'} options={} subcommands={}) result = alc.parse(\\\"pip -v install ...\\\", duplication=MyDup) print(result.install) # SubcommandStub(_origin=Subcommand('install', args=Args('package': str)), _value=Ellipsis, available=True, args=ArgsStub(_origin=Args('package': str), _value={'package': '...'}, available=True), dest='install', options=[OptionStub(_origin=Option('requirement', args=Args('file': str)), _value=None, available=False, args=ArgsStub(_origin=Args('file': str), _value={}, available=False), dest='requirement', aliases=['r', 'requirement'], name='requirement'), OptionStub(_origin=Option('index-url', args=Args('url': str)), _value=None, available=False, args=ArgsStub(_origin=Args('url': str), _value={}, available=False), dest='index-url', aliases=['index-url', 'i'], name='index-url')], subcommands=[], name='install')\",\"Duplication 也可以如 Namespace 一样直接标明参数名称和类型：\",\"from typing import Optional from arclet.alconna import Duplication class MyDup(Duplication): package: str file: Optional[str] = None url: Optional[str] = None\"]},\"2283\":{\"h\":\"上下文插值\",\"t\":[\"当 context_style 条目被设置后，传入的命令中符合上下文插值的字段会被自动替换成当前上下文中的信息。\",\"上下文可以在 parse 中传入：\",\"from arclet.alconna import Alconna, Args, CommandMeta alc = Alconna(\\\"test\\\", Args[\\\"foo\\\", int], meta=CommandMeta(context_style=\\\"parentheses\\\")) alc.parse(\\\"test $(bar)\\\", {\\\"bar\\\": 123}) # {\\\"foo\\\": 123}\",\"context_style 的值分两种：\",\"\\\"bracket\\\": 插值格式为 {...}，例如 {foo}\",\"\\\"parentheses\\\": 插值格式为 $(...)，例如 $(bar)\"]},\"2284\":{\"h\":\"配置项\"},\"2285\":{\"h\":\"alconna_auto_send_output\",\"t\":[\"类型: bool\",\"默认值: False\",\"是否全局启用输出信息自动发送，不启用则会在触发特殊内置选项后仍然将解析结果传递至响应器。\"]},\"2286\":{\"h\":\"alconna_use_command_start\",\"t\":[\"类型: bool\",\"默认值: False\",\"是否读取 Nonebot 的配置项 COMMAND_START 来作为全局的 Alconna 命令前缀\"]},\"2287\":{\"h\":\"alconna_auto_completion\",\"t\":[\"类型: bool\",\"默认值: False\",\"是否全局启用命令自动补全，启用后会在参数缺失或触发 --comp 选项时自自动启用交互式补全。\"]},\"2288\":{\"h\":\"alconna_use_origin\",\"t\":[\"类型: bool\",\"默认值: False\",\"是否全局使用原始消息 (即未经过 to_me 等处理的)，该选项会影响到 Alconna 的匹配行为。\"]},\"2289\":{\"h\":\"alconna_use_command_sep\",\"t\":[\"类型: bool\",\"默认值: False\",\"是否读取 Nonebot 的配置项 COMMAND_SEP 来作为全局的 Alconna 命令分隔符。\"]},\"2290\":{\"h\":\"alconna_global_extensions\",\"t\":[\"类型: List[str]\",\"默认值: []\",\"全局加载的扩展，路径以 . 分隔，如 foo.bar.baz:DemoExtension。\"]},\"2291\":{\"h\":\"alconna_context_style\",\"t\":[\"类型: Optional[Literal[\\\"bracket\\\", \\\"parentheses\\\"]]\",\"默认值: None\",\"全局命令上下文插值的风格，None 为关闭，bracket 为 {...}，parentheses 为 $(...)。\"]},\"2292\":{\"h\":\"alconna_enable_saa_patch\",\"t\":[\"类型: bool\",\"默认值: False\",\"是否启用 SAA 补丁。\"]},\"2293\":{\"h\":\"alconna_apply_filehost\",\"t\":[\"类型: bool\",\"默认值: False\",\"是否启用文件托管。\"]},\"2294\":{\"h\":\"alconna_apply_fetch_targets\",\"t\":[\"类型: bool\",\"默认值: False\",\"是否启动时拉取一次发送对象列表。\"]},\"2295\":{\"h\":\"用户指南\",\"t\":[\"nonebot-plugin-orm 功能强大且复杂，使用上有一定难度。 不过，对于用户而言，只需要掌握部分功能即可。\",\"注意\",\"请注意区分插件的项目名（如：nonebot-plugin-wordcloud）和模块名（如：nonebot_plugin_wordcloud）。nonebot-plugin-orm 中统一使用插件模块名。参见 插件命名规范。\"]},\"2296\":{\"h\":\"示例\"},\"2297\":{\"h\":\"创建新机器人\",\"t\":[\"我们想要创建一个机器人，并安装 nonebot-plugin-wordcloud 插件，只需要执行以下命令：\",\"nb init # 初始化项目文件夹 pip install nonebot-plugin-orm[sqlite] # 安装 nonebot-plugin-orm，并附带 SQLite 支持 nb plugin install nonebot-plugin-wordcloud # 安装插件 # nb orm heads # 查看有什么插件使用到了数据库（可选） nb orm upgrade # 升级数据库 # nb orm check # 检查一下数据库模式是否与模型定义一致（可选） nb run # 启动机器人\"]},\"2298\":{\"h\":\"卸载插件\",\"t\":[\"我们已经安装了 nonebot-plugin-wordcloud 插件，但是现在想要卸载它，并且删除它的数据，只需要执行以下命令：\",\"nb plugin uninstall nonebot-plugin-wordcloud # 卸载插件 # nb orm heads # 查看有什么插件使用到了数据库。（可选） nb orm downgrade nonebot_plugin_wordcloud@base # 降级数据库，删除数据 # nb orm check # 检查一下数据库模式是否与模型定义一致（可选）\"]},\"2299\":{\"h\":\"CLI\",\"t\":[\"接下来，让我们了解下示例中出现的 CLI 命令的含义：\"]},\"2300\":{\"h\":\"heads\",\"t\":[\"显示所有的分支头。一般一个分支对应一个插件。\",\"nb orm heads\",\"输出格式为 <迁移 ID> (<插件模块名>) (<头部类型>)：\",\"46327b837dd8 (nonebot_plugin_chatrecorder) (head) 9492159f98f7 (nonebot_plugin_user) (head) 71a72119935f (nonebot_plugin_session_orm) (effective head) ade8cdca5470 (nonebot_plugin_wordcloud) (head)\"]},\"2301\":{\"h\":\"upgrade\",\"t\":[\"升级数据库。每次安装新的插件或更新插件版本后，都需要执行此命令。\",\"nb orm upgrade <插件模块名>@<迁移 ID>\",\"其中，<插件模块名>@<迁移 ID> 是可选参数。如果不指定，则会将所有分支升级到最新版本，这也是最常见的用法：\",\"nb orm upgrade\"]},\"2302\":{\"h\":\"downgrade\",\"t\":[\"降级数据库。当需要回滚插件版本或删除插件时，可以执行此命令。\",\"nb orm downgrade <插件模块名>@<迁移 ID>\",\"其中，<迁移 ID> 也可以是 base，即回滚到初始状态。常用于卸载插件后删除其数据：\",\"nb orm downgrade <插件模块名>@base\"]},\"2303\":{\"h\":\"check\",\"t\":[\"检查数据库模式是否与模型定义一致。机器人启动前会自动运行此命令（ALEMBIC_STARTUP_CHECK=true 时），并在检查失败时阻止启动。\",\"nb orm check\"]},\"2304\":{\"h\":\"配置\"},\"2305\":{\"h\":\"sqlalchemy_database_url\",\"t\":[\"默认数据库连接 URL。参见 数据库驱动和后端 和 引擎配置 — SQLAlchemy 2.0 文档。\",\"SQLALCHEMY_DATABASE_URL=dialect+driver://username:password@host:port/database\"]},\"2306\":{\"h\":\"sqlalchemy_bind\",\"t\":[\"bind keys（一般为插件模块名）到数据库连接 URL、create_async_engine() 参数字典或 AsyncEngine 实例的字典。 例如，我们想要让 nonebot-plugin-wordcloud 插件使用一个 SQLite 数据库，并开启 Echo 选项 便于 debug，而其他插件使用默认的 PostgreSQL 数据库，可以这样配置：\",\"SQLALCHEMY_BINDS='{ \\\"\\\": \\\"postgresql+psycopg://scott:tiger@localhost/mydatabase\\\", \\\"nonebot_plugin_wordcloud\\\": { \\\"url\\\": \\\"sqlite+aiosqlite://\\\", \\\"echo\\\": true } }'\"]},\"2307\":{\"h\":\"sqlalchemy_engine_options\",\"t\":[\"create_async_engine() 默认参数字典。\",\"SQLALCHEMY_ENGINE_OPTIONS='{ \\\"pool_size\\\": 5, \\\"max_overflow\\\": 10, \\\"pool_timeout\\\": 30, \\\"pool_recycle\\\": 3600, \\\"echo\\\": true }'\"]},\"2308\":{\"h\":\"sqlalchemy_echo\",\"t\":[\"开启 Echo 选项 和 Echo Pool 选项 便于 debug。\",\"SQLALCHEMY_ECHO=true\",\"注意\",\"以上配置之间有覆盖关系，遵循特殊优先于一般的原则，具体为 sqlalchemy_database_url > sqlalchemy_bind > sqlalchemy_echo > sqlalchemy_engine_options。 但覆盖顺序并非显而易见，出于清晰考虑，请只配置必要的选项。\"]},\"2309\":{\"h\":\"模拟网络通信\",\"t\":[\"NoneBot 驱动器提供了多种方法来帮助适配器进行网络通信，主要包括客户端和服务端两种类型。模拟网络通信可以帮助我们更加接近实际机器人应用场景，进行更加真实的集成测试。同时，通过这种途径，我们还可以完成对适配器的测试。\",\"NoneBot 中的网络通信主要包括以下几种：\",\"HTTP 服务端（WebHook）\",\"WebSocket 服务端\",\"HTTP 客户端\",\"WebSocket 客户端\",\"下面我们将分别介绍如何使用 NoneBug 来模拟这几种通信方式。\"]},\"2310\":{\"h\":\"测试 HTTP 服务端\",\"t\":[\"当 NoneBot 作为 ASGI 服务端应用时，我们可以定义一系列的路由来处理 HTTP 请求，适配器同样也可以通过定义路由来响应机器人相关的网络通信。下面假设我们使用了一个适配器 fake ，它定义了一个路由 /fake/http ，用于接收平台 WebHook 并处理。实际应用测试时，应将该路由地址替换为真实适配器注册的路由地址。\",\"我们首先需要获取测试用模拟客户端：\",\"from nonebug import App @pytest.mark.asyncio async def test_http_server(app: App): async with app.test_server() as ctx: client = ctx.get_client()\",\"默认情况下，app.test_server() 会通过 nonebot.get_asgi 获取测试对象，我们也可以通过参数指定 ASGI 应用：\",\"async with app.test_server(asgi=asgi_app) as ctx: ...\",\"获取到模拟客户端后，即可像 requests、httpx 等库类似的方法进行使用：\",\"import nonebot from nonebug import App from nonebot.adapters.fake import Adapter @pytest.mark.asyncio async def test_http_server(app: App): adapter = nonebot.get_adapter(Adapter) async with app.test_server() as ctx: client = ctx.get_client() response = await client.post(\\\"/fake/http\\\", json={\\\"bot_id\\\": \\\"fake\\\"}) assert response.status_code == 200 assert response.json() == {\\\"status\\\": \\\"success\\\"} assert \\\"fake\\\" in nonebot.get_bots() adapter.bot_disconnect(nonebot.get_bot(\\\"fake\\\"))\",\"在上面的测试中，我们向 /fake/http 发送了一个模拟 POST 请求，适配器将会对该请求进行处理，我们可以通过检查请求返回是否正确、Bot 对象是否创建等途径来验证机器人是否正确运行。在完成测试后，我们通常需要对 Bot 对象进行清理，以避免对其他测试产生影响。\"]},\"2311\":{\"h\":\"测试 WebSocket 服务端\",\"t\":[\"当 NoneBot 作为 ASGI 服务端应用时，我们还可以定义一系列的路由来处理 WebSocket 通信。下面假设我们使用了一个适配器 fake ，它定义了一个路由 /fake/ws ，用于处理平台 WebSocket 连接信息。实际应用测试时，应将该路由地址替换为真实适配器注册的路由地址。\",\"我们同样需要通过 app.test_server() 获取测试用模拟客户端，这里就不再赘述。在获取到模拟客户端后，我们可以通过 client.websocket_connect 方法来模拟 WebSocket 连接：\",\"import nonebot from nonebug import App from nonebot.adapters.fake import Adapter @pytest.mark.asyncio async def test_ws_server(app: App): adapter = nonebot.get_adapter(Adapter) async with app.test_server() as ctx: client = ctx.get_client() async with client.websocket_connect(\\\"/fake/ws\\\") as ws: await ws.send_json({\\\"bot_id\\\": \\\"fake\\\"}) response = await ws.receive_json() assert response == {\\\"status\\\": \\\"success\\\"} assert \\\"fake\\\" in nonebot.get_bots()\",\"在上面的测试中，我们向 /fake/ws 进行了 WebSocket 模拟通信，通过发送消息与机器人进行交互，然后检查机器人发送的信息是否正确。\"]},\"2312\":{\"h\":\"测试 HTTP 客户端\",\"t\":[\"暂不支持\"]},\"2313\":{\"h\":\"测试 WebSocket 客户端\",\"t\":[\"暂不支持\"]},\"2314\":{\"h\":\"nonebot.adapters\",\"t\":[\"本模块定义了协议适配基类，各协议请继承以下基类。\",\"使用 Driver.register_adapter 注册适配器。\"]},\"2315\":{\"h\":\"\",\"t\":[\"说明\",\"协议适配器基类。\",\"通常，在 Adapter 中编写协议通信相关代码，如: 建立通信连接、处理接收与发送 data 等。\",\"参数\",\"driver (Driver): Driver 实例\",\"**kwargs (Any): 其他由 Driver.register_adapter 传入的额外参数\"]},\"2316\":{\"h\":\"\",\"t\":[\"类型:Driver\",\"说明: 实例\"]},\"2317\":{\"h\":\"\",\"t\":[\"类型: dict[str, Bot]\",\"说明: 本协议适配器已建立连接的 Bot 实例\"]},\"2318\":{\"h\":\"\",\"t\":[\"说明: 当前协议适配器的名称\",\"参数\",\"empty\",\"返回\",\"str\"]},\"2319\":{\"h\":\"\",\"t\":[\"类型:Config\",\"说明: 全局 NoneBot 配置\"]},\"2320\":{\"h\":\"\",\"t\":[\"说明\",\"告知 NoneBot 建立了一个新的 Bot 连接。\",\"当有新的 Bot 实例连接建立成功时调用。\",\"参数\",\"bot (Bot): Bot 实例\",\"返回\",\"None\"]},\"2321\":{\"h\":\"\",\"t\":[\"说明\",\"告知 NoneBot Bot 连接已断开。\",\"当有 Bot 实例连接断开时调用。\",\"参数\",\"bot (Bot): Bot 实例\",\"返回\",\"None\"]},\"2322\":{\"h\":\"\",\"t\":[\"说明: 设置一个 HTTP 服务器路由配置\",\"参数\",\"setup (HTTPServerSetup)\",\"返回\",\"untyped\"]},\"2323\":{\"h\":\"\",\"t\":[\"说明: 设置一个 WebSocket 服务器路由配置\",\"参数\",\"setup (WebSocketServerSetup)\",\"返回\",\"untyped\"]},\"2324\":{\"h\":\"\",\"t\":[\"说明: 进行一个 HTTP 客户端请求\",\"参数\",\"setup (Request)\",\"返回\",\"Response\"]},\"2325\":{\"h\":\"\",\"t\":[\"说明: 建立一个 WebSocket 客户端连接请求\",\"参数\",\"setup (Request)\",\"返回\",\"AsyncGenerator[WebSocket, None]\"]},\"2326\":{\"h\":\"\",\"t\":[\"参数\",\"func (LIFESPAN_FUNC)\",\"返回\",\"LIFESPAN_FUNC\"]},\"2327\":{\"h\":\"\",\"t\":[\"说明\",\"Bot 基类。\",\"用于处理上报消息，并提供 API 调用接口。\",\"参数\",\"adapter (Adapter): 协议适配器实例\",\"self_id (str): 机器人 ID\"]},\"2328\":{\"h\":\"\",\"t\":[\"类型:Adapter\",\"说明: 协议适配器实例\"]},\"2329\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明: 机器人 ID\"]},\"2330\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明: 协议适配器名称\"]},\"2331\":{\"h\":\"\",\"t\":[\"类型:Config\",\"说明: 全局 NoneBot 配置\"]},\"2332\":{\"h\":\"\",\"t\":[\"说明: 调用机器人 API 接口，可以通过该函数或直接通过 bot 属性进行调用\",\"参数\",\"api (str): API 名称\",\"**data (Any): API 数据\",\"返回\",\"Any\",\"用法\",\"await bot.call_api(\\\"send_msg\\\", message=\\\"hello world\\\") await bot.send_msg(message=\\\"hello world\\\")\"]},\"2333\":{\"h\":\"\",\"t\":[\"说明: 调用机器人基础发送消息接口\",\"参数\",\"event (Event): 上报事件\",\"message (str | Message | MessageSegment): 要发送的消息\",\"**kwargs (Any): 任意额外参数\",\"返回\",\"Any\"]},\"2334\":{\"h\":\"\",\"t\":[\"说明\",\"调用 api 预处理。\",\"钩子函数参数:\",\"bot: 当前 bot 对象\",\"api: 调用的 api 名称\",\"data: api 调用的参数字典\",\"参数\",\"func (T_CallingAPIHook)\",\"返回\",\"T_CallingAPIHook\"]},\"2335\":{\"h\":\"\",\"t\":[\"说明\",\"调用 api 后处理。\",\"钩子函数参数:\",\"bot: 当前 bot 对象\",\"exception: 调用 api 时发生的错误\",\"api: 调用的 api 名称\",\"data: api 调用的参数字典\",\"result: api 调用的返回\",\"参数\",\"func (T_CalledAPIHook)\",\"返回\",\"T_CalledAPIHook\"]},\"2336\":{\"h\":\"\",\"t\":[\"说明: Event 基类。提供获取关键信息的方法，其余信息可直接获取。\",\"参数\",\"auto\"]},\"2337\":{\"h\":\"\",\"t\":[\"说明: 获取事件类型的方法，类型通常为 NoneBot 内置的四种类型。\",\"参数\",\"empty\",\"返回\",\"str\"]},\"2338\":{\"h\":\"\",\"t\":[\"说明: 获取事件名称的方法。\",\"参数\",\"empty\",\"返回\",\"str\"]},\"2339\":{\"h\":\"\",\"t\":[\"说明: 获取事件描述的方法，通常为事件具体内容。\",\"参数\",\"empty\",\"返回\",\"str\"]},\"2340\":{\"h\":\"\",\"t\":[\"说明\",\"获取事件日志信息的方法。\",\"通常你不需要修改这个方法，只有当希望 NoneBot 隐藏该事件日志时， 可以抛出 NoLogException 异常。\",\"参数\",\"empty\",\"返回\",\"str\",\"异常\",\"NoLogException: 希望 NoneBot 隐藏该事件日志\"]},\"2341\":{\"h\":\"\",\"t\":[\"说明: 获取事件主体 id 的方法，通常是用户 id 。\",\"参数\",\"empty\",\"返回\",\"str\"]},\"2342\":{\"h\":\"\",\"t\":[\"说明: 获取会话 id 的方法，用于判断当前事件属于哪一个会话， 通常是用户 id、群组 id 组合。\",\"参数\",\"empty\",\"返回\",\"str\"]},\"2343\":{\"h\":\"\",\"t\":[\"说明: 获取事件消息内容的方法。\",\"参数\",\"empty\",\"返回\",\"Message\"]},\"2344\":{\"h\":\"\",\"t\":[\"说明\",\"获取消息纯文本的方法。\",\"通常不需要修改，默认通过 get_message().extract_plain_text 获取。\",\"参数\",\"empty\",\"返回\",\"str\"]},\"2345\":{\"h\":\"\",\"t\":[\"说明: 获取事件是否与机器人有关的方法。\",\"参数\",\"empty\",\"返回\",\"bool\"]},\"2346\":{\"h\":\"\",\"t\":[\"说明: 消息序列\",\"参数\",\"message: 消息内容\"]},\"2347\":{\"h\":\"\",\"t\":[\"说明\",\"创建消息模板。\",\"用法和 str.format 大致相同，支持以 Message 对象作为消息模板并输出消息对象。 并且提供了拓展的格式化控制符， 可以通过该消息类型的 MessageSegment 工厂方法创建消息。\",\"参数\",\"format_string (str | TM): 格式化模板\",\"返回\",\"MessageTemplate[Self]: 消息格式化器\"]},\"2348\":{\"h\":\"\",\"t\":[\"说明: 获取消息段类型\",\"参数\",\"empty\",\"返回\",\"type[TMS]\"]},\"2349\":{\"h\":\"\",\"t\":[\"说明: 构造消息数组\",\"参数\",\"msg (str)\",\"返回\",\"Iterable[TMS]\"]},\"2350\":{\"h\":\"\",\"t\":[\"重载\",\"1.(args) -> Self\",\"参数\",\"args (str): 消息段类型\",\"返回\",\"Self: 所有类型为 args 的消息段\",\"2.(args) -> TMS\",\"参数\",\"args (tuple[str, int]): 消息段类型和索引\",\"返回\",\"TMS: 类型为 args[0] 的消息段第 args[1] 个\",\"3.(args) -> Self\",\"参数\",\"args (tuple[str, slice]): 消息段类型和切片\",\"返回\",\"Self: 类型为 args[0] 的消息段切片 args[1]\",\"4.(args) -> TMS\",\"参数\",\"args (int): 索引\",\"返回\",\"TMS: 第 args 个消息段\",\"5.(args) -> Self\",\"参数\",\"args (slice): 切片\",\"返回\",\"Self: 消息切片 args\"]},\"2351\":{\"h\":\"\",\"t\":[\"说明: 检查消息段是否存在\",\"参数\",\"value (TMS | str): 消息段或消息段类型\",\"返回\",\"bool: 消息内是否存在给定消息段或给定类型的消息段\"]},\"2352\":{\"h\":\"\",\"t\":[\"说明: 与 __contains__ 相同\",\"参数\",\"value (TMS | str)\",\"返回\",\"bool\"]},\"2353\":{\"h\":\"\",\"t\":[\"说明: 索引消息段\",\"参数\",\"value (TMS | str): 消息段或者消息段类型\",\"*args (SupportsIndex)\",\"arg: start 与 end\",\"返回\",\"int: 索引 index\",\"异常\",\"ValueError: 消息段不存在\"]},\"2354\":{\"h\":\"\",\"t\":[\"说明: 获取指定类型的消息段\",\"参数\",\"type_ (str): 消息段类型\",\"count (int | None): 获取个数\",\"返回\",\"Self: 构建的新消息\"]},\"2355\":{\"h\":\"\",\"t\":[\"说明: 计算指定消息段的个数\",\"参数\",\"value (TMS | str): 消息段或消息段类型\",\"返回\",\"int: 个数\"]},\"2356\":{\"h\":\"\",\"t\":[\"说明: 检查消息中是否仅包含指定消息段\",\"参数\",\"value (TMS | str): 指定消息段或消息段类型\",\"返回\",\"bool: 是否仅包含指定消息段\"]},\"2357\":{\"h\":\"\",\"t\":[\"说明: 添加一个消息段到消息数组末尾。\",\"参数\",\"obj (str | TMS): 要添加的消息段\",\"返回\",\"Self\"]},\"2358\":{\"h\":\"\",\"t\":[\"说明: 拼接一个消息数组或多个消息段到消息数组末尾。\",\"参数\",\"obj (Self | Iterable[TMS]): 要添加的消息数组\",\"返回\",\"Self\"]},\"2359\":{\"h\":\"\",\"t\":[\"说明: 将多个消息连接并将自身作为分割\",\"参数\",\"iterable (Iterable[TMS | Self]): 要连接的消息\",\"返回\",\"Self: 连接后的消息\"]},\"2360\":{\"h\":\"\",\"t\":[\"说明: 深拷贝消息\",\"参数\",\"empty\",\"返回\",\"Self\"]},\"2361\":{\"h\":\"\",\"t\":[\"说明: 过滤消息\",\"参数\",\"*types (str): 包含的消息段类型\",\"返回\",\"Self: 新构造的消息\"]},\"2362\":{\"h\":\"\",\"t\":[\"说明: 过滤消息\",\"参数\",\"*types (str): 不包含的消息段类型\",\"返回\",\"Self: 新构造的消息\"]},\"2363\":{\"h\":\"\",\"t\":[\"说明: 提取消息内纯文本消息\",\"参数\",\"empty\",\"返回\",\"str\"]},\"2364\":{\"h\":\"\",\"t\":[\"说明: 消息段基类\",\"参数\",\"auto\"]},\"2365\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明: 消息段类型\"]},\"2366\":{\"h\":\"\",\"t\":[\"类型: dict[str, Any]\",\"说明: 消息段数据\"]},\"2367\":{\"h\":\"\",\"t\":[\"说明: 获取消息数组类型\",\"参数\",\"empty\",\"返回\",\"type[TM]\"]},\"2368\":{\"h\":\"\",\"t\":[\"说明: 该消息段所代表的 str，在命令匹配部分使用\",\"参数\",\"empty\",\"返回\",\"str\"]},\"2369\":{\"h\":\"\",\"t\":[\"参数\",\"other (str | TMS | Iterable[TMS])\",\"返回\",\"TM\"]},\"2370\":{\"h\":\"\",\"t\":[\"参数\",\"key (str)\",\"default (Any)\",\"返回\",\"untyped\"]},\"2371\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"untyped\"]},\"2372\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"untyped\"]},\"2373\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"untyped\"]},\"2374\":{\"h\":\"\",\"t\":[\"参数\",\"iterable (Iterable[TMS | TM])\",\"返回\",\"TM\"]},\"2375\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"Self\"]},\"2376\":{\"h\":\"\",\"t\":[\"说明: 当前消息段是否为纯文本\",\"参数\",\"empty\",\"返回\",\"bool\"]},\"2377\":{\"h\":\"\",\"t\":[\"说明: 消息模板格式化实现类。\",\"参数\",\"template (str | TM): 模板\",\"factory (type[str] | type[TM]): 消息类型工厂，默认为 str\",\"private_getattr (bool): 是否允许在模板中访问私有属性，默认为 False\"]},\"2378\":{\"h\":\"\",\"t\":[\"参数\",\"spec (FormatSpecFunc_T)\",\"name (str | None)\",\"返回\",\"FormatSpecFunc_T\"]},\"2379\":{\"h\":\"\",\"t\":[\"说明: 根据传入参数和模板生成消息对象\",\"参数\",\"*args\",\"**kwargs\",\"返回\",\"TF\"]},\"2380\":{\"h\":\"\",\"t\":[\"说明: 根据传入字典和模板生成消息对象, 在传入字段名不是有效标识符时有用\",\"参数\",\"mapping (Mapping[str, Any])\",\"返回\",\"TF\"]},\"2381\":{\"h\":\"\",\"t\":[\"参数\",\"format_string (str)\",\"args (Sequence[Any])\",\"kwargs (Mapping[str, Any])\",\"返回\",\"TF\"]},\"2382\":{\"h\":\"\",\"t\":[\"参数\",\"field_name (str)\",\"args (Sequence[Any])\",\"kwargs (Mapping[str, Any])\",\"返回\",\"tuple[Any, int | str]\"]},\"2383\":{\"h\":\"\",\"t\":[\"参数\",\"value (Any)\",\"format_spec (str)\",\"返回\",\"Any\"]},\"2384\":{\"h\":\"nonebot.dependencies\",\"t\":[\"本模块模块实现了依赖注入的定义与处理。\"]},\"2385\":{\"h\":\"\",\"t\":[\"说明\",\"依赖注入的基本单元 —— 参数。\",\"继承自 pydantic.fields.FieldInfo，用于描述参数信息（不包括参数名）。\",\"参数\",\"*args\",\"validate (bool)\",\"**kwargs (Any)\"]},\"2386\":{\"h\":\"\",\"t\":[\"说明: 依赖注入容器\",\"参数\",\"call: 依赖注入的可调用对象，可以是任何 Callable 对象\",\"pre_checkers: 依赖注入解析前的参数检查\",\"params: 具名参数列表\",\"parameterless: 匿名参数列表\",\"allow_types: 允许的参数类型\"]},\"2387\":{\"h\":\"\",\"t\":[\"参数\",\"call (_DependentCallable[R])\",\"allow_types (tuple[type[Param], ...])\",\"返回\",\"tuple[ModelField, ...]\"]},\"2388\":{\"h\":\"\",\"t\":[\"参数\",\"parameterless (tuple[Any, ...])\",\"allow_types (tuple[type[Param], ...])\",\"返回\",\"tuple[Param, ...]\"]},\"2389\":{\"h\":\"\",\"t\":[\"参数\",\"call (_DependentCallable[R])\",\"parameterless (Iterable[Any] | None)\",\"allow_types (Iterable[type[Param]])\",\"返回\",\"Dependent[R]\"]},\"2390\":{\"h\":\"\",\"t\":[\"参数\",\"**params (Any)\",\"返回\",\"None\"]},\"2391\":{\"h\":\"\",\"t\":[\"参数\",\"**params (Any)\",\"返回\",\"dict[str, Any]\"]},\"2392\":{\"h\":\"nonebot.dependencies.utils\"},\"2393\":{\"h\":\"\",\"t\":[\"说明: 获取可调用对象签名\",\"参数\",\"call ((...) -> Any)\",\"返回\",\"inspect.Signature\"]},\"2394\":{\"h\":\"\",\"t\":[\"说明: 获取参数的类型注解\",\"参数\",\"param (inspect.Parameter)\",\"globalns (dict[str, Any])\",\"返回\",\"Any\"]},\"2395\":{\"h\":\"\",\"t\":[\"说明: 检查字段类型是否匹配\",\"参数\",\"field (ModelField)\",\"value (Any)\",\"返回\",\"Any\"]},\"2396\":{\"h\":\"nonebot.drivers.aiohttp\",\"t\":[\"AIOHTTP 驱动适配器。\",\"nb driver install aiohttp # 或者 pip install nonebot2[aiohttp]\",\"提示\",\"本驱动仅支持客户端连接\"]},\"2397\":{\"h\":\"\",\"t\":[\"参数\",\"params (QueryTypes)\",\"headers (HeaderTypes)\",\"cookies (CookieTypes)\",\"version (str | HTTPVersion)\",\"timeout (float | None)\",\"proxy (str | None)\"]},\"2398\":{\"h\":\"\",\"t\":[\"参数\",\"setup (Request)\",\"返回\",\"Response\"]},\"2399\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"None\"]},\"2400\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"None\"]},\"2401\":{\"h\":\"\",\"t\":[\"说明: AIOHTTP Mixin\",\"参数\",\"auto\"]},\"2402\":{\"h\":\"\",\"t\":[\"参数\",\"setup (Request)\",\"返回\",\"Response\"]},\"2403\":{\"h\":\"\",\"t\":[\"参数\",\"setup (Request)\",\"返回\",\"AsyncGenerator[WebSocket, None]\"]},\"2404\":{\"h\":\"\",\"t\":[\"参数\",\"params (QueryTypes)\",\"headers (HeaderTypes)\",\"cookies (CookieTypes)\",\"version (str | HTTPVersion)\",\"timeout (float | None)\",\"proxy (str | None)\",\"返回\",\"Session\"]},\"2405\":{\"h\":\"\",\"t\":[\"说明: AIOHTTP Websocket Wrapper\",\"参数\",\"request (Request)\",\"session (aiohttp.ClientSession)\",\"websocket (aiohttp.ClientWebSocketResponse)\"]},\"2406\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"untyped\"]},\"2407\":{\"h\":\"\",\"t\":[\"参数\",\"code (int)\",\"reason (str)\",\"返回\",\"untyped\"]},\"2408\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"str\"]},\"2409\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"str\"]},\"2410\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"bytes\"]},\"2411\":{\"h\":\"\",\"t\":[\"参数\",\"data (str)\",\"返回\",\"None\"]},\"2412\":{\"h\":\"\",\"t\":[\"参数\",\"data (bytes)\",\"返回\",\"None\"]},\"2413\":{\"h\":\"\",\"t\":[\"参数\",\"env (Env)\",\"config (Config)\"]},\"2414\":{\"h\":\"nonebot.drivers.fastapi\",\"t\":[\"FastAPI 驱动适配\",\"nb driver install fastapi # 或者 pip install nonebot2[fastapi]\",\"提示\",\"本驱动仅支持服务端连接\"]},\"2415\":{\"h\":\"\",\"t\":[\"说明: FastAPI 驱动框架设置，详情参考 FastAPI 文档\",\"参数\",\"auto\"]},\"2416\":{\"h\":\"\",\"t\":[\"类型: str | None\",\"说明:openapi.json 地址，默认为 None 即关闭\"]},\"2417\":{\"h\":\"\",\"t\":[\"类型: str | None\",\"说明:swagger 地址，默认为 None 即关闭\"]},\"2418\":{\"h\":\"\",\"t\":[\"类型: str | None\",\"说明:redoc 地址，默认为 None 即关闭\"]},\"2419\":{\"h\":\"\",\"t\":[\"类型: bool\",\"说明: 是否包含适配器路由的 schema，默认为 True\"]},\"2420\":{\"h\":\"\",\"t\":[\"类型: bool\",\"说明: 开启/关闭冷重载\"]},\"2421\":{\"h\":\"\",\"t\":[\"类型: list[str] | None\",\"说明: 重载监控文件夹列表，默认为 uvicorn 默认值\"]},\"2422\":{\"h\":\"\",\"t\":[\"类型: float\",\"说明: 重载延迟，默认为 uvicorn 默认值\"]},\"2423\":{\"h\":\"\",\"t\":[\"类型: list[str] | None\",\"说明: 要监听的文件列表，支持 glob pattern，默认为 uvicorn 默认值\"]},\"2424\":{\"h\":\"\",\"t\":[\"类型: list[str] | None\",\"说明: 不要监听的文件列表，支持 glob pattern，默认为 uvicorn 默认值\"]},\"2425\":{\"h\":\"\",\"t\":[\"类型: dict[str, Any]\",\"说明: 传递给 FastAPI 的其他参数。\"]},\"2426\":{\"h\":\"\",\"t\":[\"说明: FastAPI 驱动框架。\",\"参数\",\"env (Env)\",\"config (NoneBotConfig)\"]},\"2427\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明: 驱动名称: fastapi\"]},\"2428\":{\"h\":\"\",\"t\":[\"类型: FastAPI\",\"说明:FastAPI APP 对象\"]},\"2429\":{\"h\":\"\",\"t\":[\"类型: FastAPI\",\"说明:FastAPI APP 对象\"]},\"2430\":{\"h\":\"\",\"t\":[\"类型: logging.Logger\",\"说明: fastapi 使用的 logger\"]},\"2431\":{\"h\":\"\",\"t\":[\"参数\",\"setup (HTTPServerSetup)\",\"返回\",\"untyped\"]},\"2432\":{\"h\":\"\",\"t\":[\"参数\",\"setup (WebSocketServerSetup)\",\"返回\",\"None\"]},\"2433\":{\"h\":\"\",\"t\":[\"说明: 使用 uvicorn 启动 FastAPI\",\"参数\",\"host (str | None)\",\"port (int | None)\",\"*args\",\"app (str | None)\",\"**kwargs\",\"返回\",\"untyped\"]},\"2434\":{\"h\":\"\",\"t\":[\"说明: FastAPI WebSocket Wrapper\",\"参数\",\"request (BaseRequest)\",\"websocket (WebSocket)\"]},\"2435\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"None\"]},\"2436\":{\"h\":\"\",\"t\":[\"参数\",\"code (int)\",\"reason (str)\",\"返回\",\"None\"]},\"2437\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"str | bytes\"]},\"2438\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"str\"]},\"2439\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"bytes\"]},\"2440\":{\"h\":\"\",\"t\":[\"参数\",\"data (str)\",\"返回\",\"None\"]},\"2441\":{\"h\":\"\",\"t\":[\"参数\",\"data (bytes)\",\"返回\",\"None\"]},\"2442\":{\"h\":\"nonebot.drivers.httpx\",\"t\":[\"HTTPX 驱动适配\",\"nb driver install httpx # 或者 pip install nonebot2[httpx]\",\"提示\",\"本驱动仅支持客户端 HTTP 连接\"]},\"2443\":{\"h\":\"\",\"t\":[\"参数\",\"params (QueryTypes)\",\"headers (HeaderTypes)\",\"cookies (CookieTypes)\",\"version (str | HTTPVersion)\",\"timeout (float | None)\",\"proxy (str | None)\"]},\"2444\":{\"h\":\"\",\"t\":[\"参数\",\"setup (Request)\",\"返回\",\"Response\"]},\"2445\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"None\"]},\"2446\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"None\"]},\"2447\":{\"h\":\"\",\"t\":[\"说明: HTTPX Mixin\",\"参数\",\"auto\"]},\"2448\":{\"h\":\"\",\"t\":[\"参数\",\"setup (Request)\",\"返回\",\"Response\"]},\"2449\":{\"h\":\"\",\"t\":[\"参数\",\"params (QueryTypes)\",\"headers (HeaderTypes)\",\"cookies (CookieTypes)\",\"version (str | HTTPVersion)\",\"timeout (float | None)\",\"proxy (str | None)\",\"返回\",\"Session\"]},\"2450\":{\"h\":\"\",\"t\":[\"参数\",\"env (Env)\",\"config (Config)\"]},\"2451\":{\"h\":\"nonebot.drivers\",\"t\":[\"本模块定义了驱动适配器基类。\",\"各驱动请继承以下基类。\"]},\"2452\":{\"h\":\"\",\"t\":[\"说明\",\"ASGI 服务端基类。\",\"将后端框架封装，以满足适配器使用。\",\"参数\",\"auto\"]},\"2453\":{\"h\":\"\",\"t\":[\"类型: Any\",\"说明: 驱动 APP 对象\"]},\"2454\":{\"h\":\"\",\"t\":[\"类型: Any\",\"说明: 驱动 ASGI 对象\"]},\"2455\":{\"h\":\"\",\"t\":[\"说明: 设置一个 HTTP 服务器路由配置\",\"参数\",\"setup (HTTPServerSetup)\",\"返回\",\"None\"]},\"2456\":{\"h\":\"\",\"t\":[\"说明: 设置一个 WebSocket 服务器路由配置\",\"参数\",\"setup (WebSocketServerSetup)\",\"返回\",\"None\"]},\"2457\":{\"h\":\"\",\"t\":[\"参数\",\"cookies (CookieTypes)\"]},\"2458\":{\"h\":\"\",\"t\":[\"参数\",\"name (str)\",\"value (str)\",\"domain (str)\",\"path (str)\",\"返回\",\"None\"]},\"2459\":{\"h\":\"\",\"t\":[\"参数\",\"name (str)\",\"default (str | None)\",\"domain (str | None)\",\"path (str | None)\",\"返回\",\"str | None\"]},\"2460\":{\"h\":\"\",\"t\":[\"参数\",\"name (str)\",\"domain (str | None)\",\"path (str | None)\",\"返回\",\"None\"]},\"2461\":{\"h\":\"\",\"t\":[\"参数\",\"domain (str | None)\",\"path (str | None)\",\"返回\",\"None\"]},\"2462\":{\"h\":\"\",\"t\":[\"参数\",\"cookies (CookieTypes)\",\"返回\",\"None\"]},\"2463\":{\"h\":\"\",\"t\":[\"参数\",\"request (Request)\",\"返回\",\"dict[str, str]\"]},\"2464\":{\"h\":\"\",\"t\":[\"说明\",\"驱动器基类。\",\"驱动器控制框架的启动和停止，适配器的注册，以及机器人生命周期管理。\",\"参数\",\"env (Env): 包含环境信息的 Env 对象\",\"config (Config): 包含配置信息的 Config 对象\"]},\"2465\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明: 环境名称\"]},\"2466\":{\"h\":\"\",\"t\":[\"类型:Config\",\"说明: 全局配置对象\"]},\"2467\":{\"h\":\"\",\"t\":[\"类型: dict[str, Bot]\",\"说明: 获取当前所有已连接的 Bot\"]},\"2468\":{\"h\":\"\",\"t\":[\"说明: 注册一个协议适配器\",\"参数\",\"adapter (type[Adapter]): 适配器类\",\"**kwargs: 其他传递给适配器的参数\",\"返回\",\"None\"]},\"2469\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明: 驱动类型名称\"]},\"2470\":{\"h\":\"\",\"t\":[\"类型: untyped\",\"说明: 驱动专属 logger 日志记录器\"]},\"2471\":{\"h\":\"\",\"t\":[\"说明: 启动驱动框架\",\"参数\",\"*args\",\"**kwargs\",\"返回\",\"untyped\"]},\"2472\":{\"h\":\"\",\"t\":[\"说明: 注册一个启动时执行的函数\",\"参数\",\"func (LIFESPAN_FUNC)\",\"返回\",\"LIFESPAN_FUNC\"]},\"2473\":{\"h\":\"\",\"t\":[\"说明: 注册一个停止时执行的函数\",\"参数\",\"func (LIFESPAN_FUNC)\",\"返回\",\"LIFESPAN_FUNC\"]},\"2474\":{\"h\":\"\",\"t\":[\"说明\",\"装饰一个函数使他在 bot 连接成功时执行。\",\"钩子函数参数:\",\"bot: 当前连接上的 Bot 对象\",\"参数\",\"func (T_BotConnectionHook)\",\"返回\",\"T_BotConnectionHook\"]},\"2475\":{\"h\":\"\",\"t\":[\"说明\",\"装饰一个函数使他在 bot 连接断开时执行。\",\"钩子函数参数:\",\"bot: 当前连接上的 Bot 对象\",\"参数\",\"func (T_BotDisconnectionHook)\",\"返回\",\"T_BotDisconnectionHook\"]},\"2476\":{\"h\":\"\",\"t\":[\"类型: ForwardMixin\",\"说明\",\"支持客户端请求的驱动器。\",\"Deprecated，请使用 ForwardMixin 或其子类代替。\"]},\"2477\":{\"h\":\"\",\"t\":[\"说明: 客户端混入基类。\",\"参数\",\"auto\"]},\"2478\":{\"h\":\"\",\"t\":[\"说明: HTTP 客户端混入基类。\",\"参数\",\"auto\"]},\"2479\":{\"h\":\"\",\"t\":[\"说明: 发送一个 HTTP 请求\",\"参数\",\"setup (Request)\",\"返回\",\"Response\"]},\"2480\":{\"h\":\"\",\"t\":[\"说明: 获取一个 HTTP 会话\",\"参数\",\"params (QueryTypes)\",\"headers (HeaderTypes)\",\"cookies (CookieTypes)\",\"version (str | HTTPVersion)\",\"timeout (float | None)\",\"proxy (str | None)\",\"返回\",\"HTTPClientSession\"]},\"2481\":{\"h\":\"\",\"t\":[\"说明: HTTP 服务器路由配置。\",\"参数\",\"auto\"]},\"2482\":{\"h\":\"\",\"t\":[\"说明: An enumeration.\",\"参数\",\"auto\",\"H10: '1.0'\",\"H11: '1.1'\",\"H2: '2'\"]},\"2483\":{\"h\":\"\",\"t\":[\"说明: 可与其他驱动器共用的混入基类。\",\"参数\",\"auto\"]},\"2484\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明: 混入驱动类型名称\"]},\"2485\":{\"h\":\"\",\"t\":[\"参数\",\"method (str | bytes)\",\"url (URL | str | RawURL)\",\"params (QueryTypes)\",\"headers (HeaderTypes)\",\"cookies (CookieTypes)\",\"content (ContentTypes)\",\"data (DataTypes)\",\"json (Any)\",\"files (FilesTypes)\",\"version (str | HTTPVersion)\",\"timeout (float | None)\",\"proxy (str | None)\"]},\"2486\":{\"h\":\"\",\"t\":[\"参数\",\"status_code (int)\",\"headers (HeaderTypes)\",\"content (ContentTypes)\",\"request (Request | None)\"]},\"2487\":{\"h\":\"\",\"t\":[\"类型: ReverseMixin\",\"说明\",\"支持服务端请求的驱动器。\",\"Deprecated，请使用 ReverseMixin 或其子类代替。\"]},\"2488\":{\"h\":\"\",\"t\":[\"说明: 服务端混入基类。\",\"参数\",\"auto\"]},\"2489\":{\"h\":\"\",\"t\":[\"参数\",\"request (Request)\"]},\"2490\":{\"h\":\"\",\"t\":[\"类型: bool\",\"说明: 连接是否已经关闭\"]},\"2491\":{\"h\":\"\",\"t\":[\"说明: 接受 WebSocket 连接请求\",\"参数\",\"empty\",\"返回\",\"None\"]},\"2492\":{\"h\":\"\",\"t\":[\"说明: 关闭 WebSocket 连接请求\",\"参数\",\"code (int)\",\"reason (str)\",\"返回\",\"None\"]},\"2493\":{\"h\":\"\",\"t\":[\"说明: 接收一条 WebSocket text/bytes 信息\",\"参数\",\"empty\",\"返回\",\"str | bytes\"]},\"2494\":{\"h\":\"\",\"t\":[\"说明: 接收一条 WebSocket text 信息\",\"参数\",\"empty\",\"返回\",\"str\"]},\"2495\":{\"h\":\"\",\"t\":[\"说明: 接收一条 WebSocket binary 信息\",\"参数\",\"empty\",\"返回\",\"bytes\"]},\"2496\":{\"h\":\"\",\"t\":[\"说明: 发送一条 WebSocket text/bytes 信息\",\"参数\",\"data (str | bytes)\",\"返回\",\"None\"]},\"2497\":{\"h\":\"\",\"t\":[\"说明: 发送一条 WebSocket text 信息\",\"参数\",\"data (str)\",\"返回\",\"None\"]},\"2498\":{\"h\":\"\",\"t\":[\"说明: 发送一条 WebSocket binary 信息\",\"参数\",\"data (bytes)\",\"返回\",\"None\"]},\"2499\":{\"h\":\"\",\"t\":[\"说明: WebSocket 客户端混入基类。\",\"参数\",\"auto\"]},\"2500\":{\"h\":\"\",\"t\":[\"说明: 发起一个 WebSocket 连接\",\"参数\",\"setup (Request)\",\"返回\",\"AsyncGenerator[WebSocket, None]\"]},\"2501\":{\"h\":\"\",\"t\":[\"说明: WebSocket 服务器路由配置。\",\"参数\",\"auto\"]},\"2502\":{\"h\":\"\",\"t\":[\"说明: 将一个驱动器和多个混入类合并。\",\"重载\",\"1.(driver) -> type[D]\",\"参数\",\"driver (type[D])\",\"返回\",\"type[D]\",\"2.(driver, __m, /, *mixins) -> type[CombinedDriver]\",\"参数\",\"driver (type[D])\",\"__m (type[Mixin])\",\"*mixins (type[Mixin])\",\"返回\",\"type[CombinedDriver]\"]},\"2503\":{\"h\":\"nonebot.drivers.none\",\"t\":[\"None 驱动适配\",\"提示\",\"本驱动不支持任何服务器或客户端连接\"]},\"2504\":{\"h\":\"\",\"t\":[\"说明: None 驱动框架\",\"参数\",\"env (Env)\",\"config (Config)\"]},\"2505\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明: 驱动名称: none\"]},\"2506\":{\"h\":\"\",\"t\":[\"类型: untyped\",\"说明: none driver 使用的 logger\"]},\"2507\":{\"h\":\"\",\"t\":[\"说明: 启动 none driver\",\"参数\",\"*args\",\"**kwargs\",\"返回\",\"untyped\"]},\"2508\":{\"h\":\"\",\"t\":[\"说明: 退出 none driver\",\"参数\",\"force (bool): 强制退出\",\"返回\",\"untyped\"]},\"2509\":{\"h\":\"nonebot.drivers.quart\",\"t\":[\"Quart 驱动适配\",\"nb driver install quart # 或者 pip install nonebot2[quart]\",\"提示\",\"本驱动仅支持服务端连接\"]},\"2510\":{\"h\":\"\",\"t\":[\"说明: Quart 驱动框架设置\",\"参数\",\"auto\"]},\"2511\":{\"h\":\"\",\"t\":[\"类型: bool\",\"说明: 开启/关闭冷重载\"]},\"2512\":{\"h\":\"\",\"t\":[\"类型: list[str] | None\",\"说明: 重载监控文件夹列表，默认为 uvicorn 默认值\"]},\"2513\":{\"h\":\"\",\"t\":[\"类型: float\",\"说明: 重载延迟，默认为 uvicorn 默认值\"]},\"2514\":{\"h\":\"\",\"t\":[\"类型: list[str] | None\",\"说明: 要监听的文件列表，支持 glob pattern，默认为 uvicorn 默认值\"]},\"2515\":{\"h\":\"\",\"t\":[\"类型: list[str] | None\",\"说明: 不要监听的文件列表，支持 glob pattern，默认为 uvicorn 默认值\"]},\"2516\":{\"h\":\"\",\"t\":[\"类型: dict[str, Any]\",\"说明: 传递给 Quart 的其他参数。\"]},\"2517\":{\"h\":\"\",\"t\":[\"说明: Quart 驱动框架\",\"参数\",\"env (Env)\",\"config (NoneBotConfig)\"]},\"2518\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明: 驱动名称: quart\"]},\"2519\":{\"h\":\"\",\"t\":[\"类型: Quart\",\"说明:Quart 对象\"]},\"2520\":{\"h\":\"\",\"t\":[\"类型: untyped\",\"说明:Quart 对象\"]},\"2521\":{\"h\":\"\",\"t\":[\"类型: untyped\",\"说明: Quart 使用的 logger\"]},\"2522\":{\"h\":\"\",\"t\":[\"参数\",\"setup (HTTPServerSetup)\",\"返回\",\"untyped\"]},\"2523\":{\"h\":\"\",\"t\":[\"参数\",\"setup (WebSocketServerSetup)\",\"返回\",\"None\"]},\"2524\":{\"h\":\"\",\"t\":[\"说明: 使用 uvicorn 启动 Quart\",\"参数\",\"host (str | None)\",\"port (int | None)\",\"*args\",\"app (str | None)\",\"**kwargs\",\"返回\",\"untyped\"]},\"2525\":{\"h\":\"\",\"t\":[\"说明: Quart WebSocket Wrapper\",\"参数\",\"request (BaseRequest)\",\"websocket_ctx (WebsocketContext)\"]},\"2526\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"untyped\"]},\"2527\":{\"h\":\"\",\"t\":[\"参数\",\"code (int)\",\"reason (str)\",\"返回\",\"untyped\"]},\"2528\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"str | bytes\"]},\"2529\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"str\"]},\"2530\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"bytes\"]},\"2531\":{\"h\":\"\",\"t\":[\"参数\",\"data (str)\",\"返回\",\"untyped\"]},\"2532\":{\"h\":\"\",\"t\":[\"参数\",\"data (bytes)\",\"返回\",\"untyped\"]},\"2533\":{\"h\":\"nonebot.drivers.websockets\",\"t\":[\"websockets 驱动适配\",\"nb driver install websockets # 或者 pip install nonebot2[websockets]\",\"提示\",\"本驱动仅支持客户端 WebSocket 连接\"]},\"2534\":{\"h\":\"\",\"t\":[\"参数\",\"func ((P) -> Coroutine[Any, Any, T])\",\"返回\",\"(P) -> Coroutine[Any, Any, T]\"]},\"2535\":{\"h\":\"\",\"t\":[\"说明: Websockets Mixin\",\"参数\",\"auto\"]},\"2536\":{\"h\":\"\",\"t\":[\"参数\",\"setup (Request)\",\"返回\",\"AsyncGenerator[WebSocket, None]\"]},\"2537\":{\"h\":\"\",\"t\":[\"说明: Websockets WebSocket Wrapper\",\"参数\",\"request (Request)\",\"websocket (WebSocketClientProtocol)\"]},\"2538\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"untyped\"]},\"2539\":{\"h\":\"\",\"t\":[\"参数\",\"code (int)\",\"reason (str)\",\"返回\",\"untyped\"]},\"2540\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"str | bytes\"]},\"2541\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"str\"]},\"2542\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"bytes\"]},\"2543\":{\"h\":\"\",\"t\":[\"参数\",\"data (str)\",\"返回\",\"None\"]},\"2544\":{\"h\":\"\",\"t\":[\"参数\",\"data (bytes)\",\"返回\",\"None\"]},\"2545\":{\"h\":\"\",\"t\":[\"参数\",\"env (Env)\",\"config (Config)\"]},\"2546\":{\"h\":\"nonebot.plugin\",\"t\":[\"本模块为 NoneBot 插件开发提供便携的定义函数。\"]},\"2547\":{\"h\":\"快捷导入\",\"t\":[\"为方便使用，本模块从子模块导入了部分内容，以下内容可以直接通过本模块导入:\",\"on => on\",\"on_metaevent => on_metaevent\",\"on_message => on_message\",\"on_notice => on_notice\",\"on_request => on_request\",\"on_startswith => on_startswith\",\"on_endswith => on_endswith\",\"on_fullmatch => on_fullmatch\",\"on_keyword => on_keyword\",\"on_command => on_command\",\"on_shell_command => on_shell_command\",\"on_regex => on_regex\",\"on_type => on_type\",\"CommandGroup => CommandGroup\",\"Matchergroup => MatcherGroup\",\"load_plugin => load_plugin\",\"load_plugins => load_plugins\",\"load_all_plugins => load_all_plugins\",\"load_from_json => load_from_json\",\"load_from_toml => load_from_toml\",\"load_builtin_plugin =>load_builtin_plugin\",\"load_builtin_plugins =>load_builtin_plugins\",\"require => require\",\"PluginMetadata => PluginMetadata\"]},\"2548\":{\"h\":\"\",\"t\":[\"说明\",\"获取已经导入的某个插件。\",\"如果为 load_plugins 文件夹导入的插件，则为文件(夹)名。\",\"如果为嵌套的子插件，标识符为 父插件标识符:子插件文件(夹)名。\",\"参数\",\"plugin_id (str): 插件标识符，即 Plugin.id_。\",\"返回\",\"Plugin | None\"]},\"2549\":{\"h\":\"\",\"t\":[\"说明\",\"通过模块名获取已经导入的某个插件。\",\"如果提供的模块名为某个插件的子模块，同样会返回该插件。\",\"参数\",\"module_name (str): 模块名，即 Plugin.module_name。\",\"返回\",\"Plugin | None\"]},\"2550\":{\"h\":\"\",\"t\":[\"说明: 获取当前已导入的所有插件。\",\"参数\",\"empty\",\"返回\",\"set[Plugin]\"]},\"2551\":{\"h\":\"\",\"t\":[\"说明: 获取当前所有可用的插件标识符（包含尚未加载的插件）。\",\"参数\",\"empty\",\"返回\",\"set[str]\"]},\"2552\":{\"h\":\"\",\"t\":[\"说明: 从全局配置获取当前插件需要的配置项。\",\"参数\",\"config (type[C])\",\"返回\",\"C\"]},\"2553\":{\"h\":\"nonebot.plugin.load\",\"t\":[\"本模块定义插件加载接口。\"]},\"2554\":{\"h\":\"\",\"t\":[\"说明: 加载单个插件，可以是本地插件或是通过 pip 安装的插件。\",\"参数\",\"module_path (str | Path): 插件名称 path.to.your.plugin 或插件路径 pathlib.Path(path/to/your/plugin)\",\"返回\",\"Plugin | None\"]},\"2555\":{\"h\":\"\",\"t\":[\"说明: 导入文件夹下多个插件，以 _ 开头的插件不会被导入!\",\"参数\",\"*plugin_dir (str): 文件夹路径\",\"返回\",\"set[Plugin]\"]},\"2556\":{\"h\":\"\",\"t\":[\"说明: 导入指定列表中的插件以及指定目录下多个插件，以 _ 开头的插件不会被导入!\",\"参数\",\"module_path (Iterable[str]): 指定插件集合\",\"plugin_dir (Iterable[str]): 指定文件夹路径集合\",\"返回\",\"set[Plugin]\"]},\"2557\":{\"h\":\"\",\"t\":[\"说明: 导入指定 json 文件中的 plugins 以及 plugin_dirs 下多个插件。 以 _ 开头的插件不会被导入!\",\"参数\",\"file_path (str): 指定 json 文件路径\",\"encoding (str): 指定 json 文件编码\",\"返回\",\"set[Plugin]\",\"用法\",\"{ \\\"plugins\\\": [\\\"some_plugin\\\"], \\\"plugin_dirs\\\": [\\\"some_dir\\\"] }\",\"nonebot.load_from_json(\\\"plugins.json\\\")\"]},\"2558\":{\"h\":\"\",\"t\":[\"说明: 导入指定 toml 文件 [tool.nonebot] 中的 plugins 以及 plugin_dirs 下多个插件。 以 _ 开头的插件不会被导入!\",\"参数\",\"file_path (str): 指定 toml 文件路径\",\"encoding (str): 指定 toml 文件编码\",\"返回\",\"set[Plugin]\",\"用法\",\"[tool.nonebot] plugins = [\\\"some_plugin\\\"] plugin_dirs = [\\\"some_dir\\\"]\",\"nonebot.load_from_toml(\\\"pyproject.toml\\\")\"]},\"2559\":{\"h\":\"\",\"t\":[\"说明: 导入 NoneBot 内置插件。\",\"参数\",\"name (str): 插件名称\",\"返回\",\"Plugin | None\"]},\"2560\":{\"h\":\"\",\"t\":[\"说明: 导入多个 NoneBot 内置插件。\",\"参数\",\"*plugins (str): 插件名称列表\",\"返回\",\"set[Plugin]\"]},\"2561\":{\"h\":\"\",\"t\":[\"说明: 声明依赖插件。\",\"参数\",\"name (str): 插件模块名或插件标识符，仅在已声明插件的情况下可使用标识符。\",\"返回\",\"ModuleType\",\"异常\",\"RuntimeError: 插件无法加载\"]},\"2562\":{\"h\":\"\",\"t\":[\"说明\",\"获取已加载插件的适配器支持状态集合。\",\"如果传入了多个插件名称，返回值会自动取交集。\",\"参数\",\"*names (str): 插件名称列表。\",\"返回\",\"set[str] | None\",\"异常\",\"RuntimeError: 插件未加载\",\"ValueError: 插件缺少元数据\"]},\"2563\":{\"h\":\"nonebot.plugin.manager\",\"t\":[\"本模块实现插件加载流程。\",\"参考: import hooks, PEP302\"]},\"2564\":{\"h\":\"\",\"t\":[\"说明: 插件管理器。\",\"参数\",\"plugins (Iterable[str] | None): 独立插件模块名集合。\",\"search_path (Iterable[str] | None): 插件搜索路径（文件夹），相对于当前工作目录。\"]},\"2565\":{\"h\":\"\",\"t\":[\"类型: set[str]\",\"说明: 返回所有独立插件标识符。\"]},\"2566\":{\"h\":\"\",\"t\":[\"类型: set[str]\",\"说明: 返回已搜索到的插件标识符。\"]},\"2567\":{\"h\":\"\",\"t\":[\"类型: set[str]\",\"说明: 返回当前插件管理器中可用的插件标识符。\"]},\"2568\":{\"h\":\"\",\"t\":[\"类型: dict[str, str]\",\"说明: 返回当前插件管理器中控制的插件标识符与模块路径映射字典。\"]},\"2569\":{\"h\":\"\",\"t\":[\"说明\",\"加载指定插件。\",\"可以使用完整插件模块名或者插件标识符加载。\",\"参数\",\"name (str): 插件名称或插件标识符。\",\"返回\",\"Plugin | None\"]},\"2570\":{\"h\":\"\",\"t\":[\"说明: 加载所有可用插件。\",\"参数\",\"empty\",\"返回\",\"set[Plugin]\"]},\"2571\":{\"h\":\"\",\"t\":[\"参数\",\"auto\"]},\"2572\":{\"h\":\"\",\"t\":[\"参数\",\"fullname (str)\",\"path (Sequence[str] | None)\",\"target (ModuleType | None)\",\"返回\",\"untyped\"]},\"2573\":{\"h\":\"\",\"t\":[\"参数\",\"manager (PluginManager)\",\"fullname (str)\",\"path (str)\"]},\"2574\":{\"h\":\"\",\"t\":[\"参数\",\"spec\",\"返回\",\"ModuleType | None\"]},\"2575\":{\"h\":\"\",\"t\":[\"参数\",\"module (ModuleType)\",\"返回\",\"None\"]},\"2576\":{\"h\":\"nonebot.plugin.model\",\"t\":[\"本模块定义插件相关信息。\"]},\"2577\":{\"h\":\"\",\"t\":[\"说明: 插件元信息，由插件编写者提供\",\"参数\",\"auto\"]},\"2578\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明: 插件名称\"]},\"2579\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明: 插件功能介绍\"]},\"2580\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明: 插件使用方法\"]},\"2581\":{\"h\":\"\",\"t\":[\"类型: str | None\",\"说明: 插件类型，用于商店分类\"]},\"2582\":{\"h\":\"\",\"t\":[\"类型: str | None\",\"说明: 插件主页\"]},\"2583\":{\"h\":\"\",\"t\":[\"类型: type[BaseModel] | None\",\"说明: 插件配置项\"]},\"2584\":{\"h\":\"\",\"t\":[\"类型: set[str] | None\",\"说明\",\"插件支持的适配器模块路径\",\"格式为 <module>[:<Adapter>]，~ 为 nonebot.adapters. 的缩写。\",\"None 表示支持所有适配器。\"]},\"2585\":{\"h\":\"\",\"t\":[\"类型: dict[Any, Any]\",\"说明: 插件额外信息，可由插件编写者自由扩展定义\"]},\"2586\":{\"h\":\"\",\"t\":[\"说明: 获取当前已安装的插件支持适配器类列表\",\"参数\",\"empty\",\"返回\",\"set[type[Adapter]] | None\"]},\"2587\":{\"h\":\"\",\"t\":[\"说明: 存储插件信息\",\"参数\",\"auto\"]},\"2588\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明: 插件名称，NoneBot 使用 文件/文件夹 名称作为插件名称\"]},\"2589\":{\"h\":\"\",\"t\":[\"类型: ModuleType\",\"说明: 插件模块对象\"]},\"2590\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明: 点分割模块路径\"]},\"2591\":{\"h\":\"\",\"t\":[\"类型:PluginManager\",\"说明: 导入该插件的插件管理器\"]},\"2592\":{\"h\":\"\",\"t\":[\"类型: set[type[Matcher]]\",\"说明: 插件加载时定义的 Matcher\"]},\"2593\":{\"h\":\"\",\"t\":[\"类型: Plugin | None\",\"说明: 父插件\"]},\"2594\":{\"h\":\"\",\"t\":[\"类型: set[Plugin]\",\"说明: 子插件集合\"]},\"2595\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明: 插件索引标识\"]},\"2596\":{\"h\":\"nonebot.plugin.on\",\"t\":[\"本模块定义事件响应器便携定义函数。\"]},\"2597\":{\"h\":\"\",\"t\":[\"说明: 存储一个事件响应器到插件。\",\"参数\",\"matcher (type[Matcher]): 事件响应器\",\"返回\",\"None\"]},\"2598\":{\"h\":\"\",\"t\":[\"说明\",\"获取事件响应器定义所在插件。\",\"Deprecated, 请使用 get_matcher_source 获取信息。\",\"参数\",\"depth (int): 调用栈深度\",\"返回\",\"Plugin | None\"]},\"2599\":{\"h\":\"\",\"t\":[\"说明\",\"获取事件响应器定义所在模块。\",\"Deprecated, 请使用 get_matcher_source 获取信息。\",\"参数\",\"depth (int): 调用栈深度\",\"返回\",\"ModuleType | None\"]},\"2600\":{\"h\":\"\",\"t\":[\"说明: 获取事件响应器定义所在源码信息。\",\"参数\",\"depth (int): 调用栈深度\",\"返回\",\"MatcherSource | None\"]},\"2601\":{\"h\":\"\",\"t\":[\"说明: 注册一个基础事件响应器，可自定义类型。\",\"参数\",\"type (str): 事件响应器类型\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2602\":{\"h\":\"\",\"t\":[\"说明: 注册一个元事件响应器。\",\"参数\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2603\":{\"h\":\"\",\"t\":[\"说明: 注册一个消息事件响应器。\",\"参数\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2604\":{\"h\":\"\",\"t\":[\"说明: 注册一个通知事件响应器。\",\"参数\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2605\":{\"h\":\"\",\"t\":[\"说明: 注册一个请求事件响应器。\",\"参数\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2606\":{\"h\":\"\",\"t\":[\"说明: 注册一个消息事件响应器，并且当消息的文本部分以指定内容开头时响应。\",\"参数\",\"msg (str | tuple[str, ...]): 指定消息开头内容\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"ignorecase (bool): 是否忽略大小写\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2607\":{\"h\":\"\",\"t\":[\"说明: 注册一个消息事件响应器，并且当消息的文本部分以指定内容结尾时响应。\",\"参数\",\"msg (str | tuple[str, ...]): 指定消息结尾内容\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"ignorecase (bool): 是否忽略大小写\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2608\":{\"h\":\"\",\"t\":[\"说明: 注册一个消息事件响应器，并且当消息的文本部分与指定内容完全一致时响应。\",\"参数\",\"msg (str | tuple[str, ...]): 指定消息全匹配内容\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"ignorecase (bool): 是否忽略大小写\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2609\":{\"h\":\"\",\"t\":[\"说明: 注册一个消息事件响应器，并且当消息纯文本部分包含关键词时响应。\",\"参数\",\"keywords (set[str]): 关键词列表\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2610\":{\"h\":\"\",\"t\":[\"说明\",\"注册一个消息事件响应器，并且当消息以指定命令开头时响应。\",\"命令匹配规则参考: 命令形式匹配 <rule.md#command-command>_\",\"参数\",\"cmd (str | tuple[str, ...]): 指定命令内容\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"aliases (set[str | tuple[str, ...]] | None): 命令别名\",\"force_whitespace (str | bool | None): 是否强制命令后必须有指定空白符\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2611\":{\"h\":\"\",\"t\":[\"说明\",\"注册一个支持 shell_like 解析参数的命令消息事件响应器。\",\"与普通的 on_command 不同的是，在添加 parser 参数时, 响应器会自动处理消息。\",\"可以通过 ShellCommandArgv 获取原始参数列表， 通过 ShellCommandArgs 获取解析后的参数字典。\",\"参数\",\"cmd (str | tuple[str, ...]): 指定命令内容\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"aliases (set[str | tuple[str, ...]] | None): 命令别名\",\"parser (ArgumentParser | None): nonebot.rule.ArgumentParser 对象\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2612\":{\"h\":\"\",\"t\":[\"说明\",\"注册一个消息事件响应器，并且当消息匹配正则表达式时响应。\",\"命令匹配规则参考: 正则匹配 <rule.md#regex-regex-flags-0>_\",\"参数\",\"pattern (str): 正则表达式\",\"flags (int | re.RegexFlag): 正则匹配标志\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2613\":{\"h\":\"\",\"t\":[\"说明: 注册一个事件响应器，并且当事件为指定类型时响应。\",\"参数\",\"types (type[Event] | tuple[type[Event], ...]): 事件类型\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2614\":{\"h\":\"\",\"t\":[\"参数\",\"cmd (str | tuple[str, ...])\",\"prefix_aliases (bool)\",\"rule (Rule | T_RuleChecker | None)\",\"permission (Permission | T_PermissionChecker | None)\",\"handlers (list[T_Handler | Dependent[Any]] | None)\",\"temp (bool)\",\"expire_time (datetime | timedelta | None)\",\"priority (int)\",\"block (bool)\",\"state (T_State | None)\"]},\"2615\":{\"h\":\"\",\"t\":[\"说明: 注册一个新的命令。新参数将会覆盖命令组默认值\",\"参数\",\"cmd (str | tuple[str, ...]): 指定命令内容\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"aliases (set[str | tuple[str, ...]] | None): 命令别名\",\"force_whitespace (str | bool | None): 是否强制命令后必须有指定空白符\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2616\":{\"h\":\"\",\"t\":[\"说明: 注册一个新的 shell_like 命令。新参数将会覆盖命令组默认值\",\"参数\",\"cmd (str | tuple[str, ...]): 指定命令内容\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"aliases (set[str | tuple[str, ...]] | None): 命令别名\",\"parser (ArgumentParser | None): nonebot.rule.ArgumentParser 对象\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2617\":{\"h\":\"\",\"t\":[\"参数\",\"type (str)\",\"rule (Rule | T_RuleChecker | None)\",\"permission (Permission | T_PermissionChecker | None)\",\"handlers (list[T_Handler | Dependent[Any]] | None)\",\"temp (bool)\",\"expire_time (datetime | timedelta | None)\",\"priority (int)\",\"block (bool)\",\"state (T_State | None)\"]},\"2618\":{\"h\":\"\",\"t\":[\"说明: 注册一个基础事件响应器，可自定义类型。\",\"参数\",\"type (str): 事件响应器类型\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2619\":{\"h\":\"\",\"t\":[\"说明: 注册一个元事件响应器。\",\"参数\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2620\":{\"h\":\"\",\"t\":[\"说明: 注册一个消息事件响应器。\",\"参数\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2621\":{\"h\":\"\",\"t\":[\"说明: 注册一个通知事件响应器。\",\"参数\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2622\":{\"h\":\"\",\"t\":[\"说明: 注册一个请求事件响应器。\",\"参数\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2623\":{\"h\":\"\",\"t\":[\"说明: 注册一个消息事件响应器，并且当消息的文本部分以指定内容开头时响应。\",\"参数\",\"msg (str | tuple[str, ...]): 指定消息开头内容\",\"ignorecase (bool): 是否忽略大小写\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2624\":{\"h\":\"\",\"t\":[\"说明: 注册一个消息事件响应器，并且当消息的文本部分以指定内容结尾时响应。\",\"参数\",\"msg (str | tuple[str, ...]): 指定消息结尾内容\",\"ignorecase (bool): 是否忽略大小写\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2625\":{\"h\":\"\",\"t\":[\"说明: 注册一个消息事件响应器，并且当消息的文本部分与指定内容完全一致时响应。\",\"参数\",\"msg (str | tuple[str, ...]): 指定消息全匹配内容\",\"ignorecase (bool): 是否忽略大小写\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2626\":{\"h\":\"\",\"t\":[\"说明: 注册一个消息事件响应器，并且当消息纯文本部分包含关键词时响应。\",\"参数\",\"keywords (set[str]): 关键词列表\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2627\":{\"h\":\"\",\"t\":[\"说明\",\"注册一个消息事件响应器，并且当消息以指定命令开头时响应。\",\"命令匹配规则参考: 命令形式匹配 <rule.md#command-command>_\",\"参数\",\"cmd (str | tuple[str, ...]): 指定命令内容\",\"aliases (set[str | tuple[str, ...]] | None): 命令别名\",\"force_whitespace (str | bool | None): 是否强制命令后必须有指定空白符\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2628\":{\"h\":\"\",\"t\":[\"说明\",\"注册一个支持 shell_like 解析参数的命令消息事件响应器。\",\"与普通的 on_command 不同的是，在添加 parser 参数时, 响应器会自动处理消息。\",\"可以通过 ShellCommandArgv 获取原始参数列表， 通过 ShellCommandArgs 获取解析后的参数字典。\",\"参数\",\"cmd (str | tuple[str, ...]): 指定命令内容\",\"aliases (set[str | tuple[str, ...]] | None): 命令别名\",\"parser (ArgumentParser | None): nonebot.rule.ArgumentParser 对象\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2629\":{\"h\":\"\",\"t\":[\"说明\",\"注册一个消息事件响应器，并且当消息匹配正则表达式时响应。\",\"命令匹配规则参考: 正则匹配 <rule.md#regex-regex-flags-0>_\",\"参数\",\"pattern (str): 正则表达式\",\"flags (int | re.RegexFlag): 正则匹配标志\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2630\":{\"h\":\"\",\"t\":[\"说明: 注册一个事件响应器，并且当事件为指定类型时响应。\",\"参数\",\"types (type[Event] | tuple[type[Event]]): 事件类型\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2631\":{\"h\":\"Alconna 本体\",\"t\":[\"Alconna 隶属于 ArcletProject，是一个简单、灵活、高效的命令参数解析器, 并且不局限于解析命令式字符串。\",\"我们通过一个例子来讲解 Alconna 的核心 —— Args, Subcommand, Option：\",\"from arclet.alconna import Alconna, Args, Subcommand, Option alc = Alconna( \\\"pip\\\", Subcommand( \\\"install\\\", Args[\\\"package\\\", str], Option(\\\"-r|--requirement\\\", Args[\\\"file\\\", str]), Option(\\\"-i|--index-url\\\", Args[\\\"url\\\", str]), ) ) res = alc.parse(\\\"pip install nonebot2 -i URL\\\") print(res) # matched=True, header_match=(origin='pip' result='pip' matched=True groups={}), subcommands={'install': (value=Ellipsis args={'package': 'nonebot2'} options={'index-url': (value=None args={'url': 'URL'})} subcommands={})}, other_args={'package': 'nonebot2', 'url': 'URL'} print(res.all_matched_args) # {'package': 'nonebot2', 'url': 'URL'}\",\"这段代码通过Alconna创捷了一个接受主命令名为pip, 子命令为install且子命令接受一个 Args 参数package和二个 Option 参数-r和-i的命令参数解析器, 通过parse方法返回解析结果 Arparma 的实例。\"]},\"2632\":{\"h\":\"命令头\",\"t\":[\"命令头是指命令的前缀 (Prefix) 与命令名 (Command) 的组合，例如 !help 中的 ! 与 help。\",\"前缀\",\"命令名\",\"匹配内容\",\"说明\",\"-\",\"\\\"foo\\\"\",\"\\\"foo\\\"\",\"无前缀的纯文字头\",\"-\",\"123\",\"123\",\"无前缀的元素头\",\"-\",\"\\\"re:\\\\d{2}\\\"\",\"\\\"32\\\"\",\"无前缀的正则头\",\"-\",\"int\",\"123 或 \\\"456\\\"\",\"无前缀的类型头\",\"[int, bool]\",\"-\",\"True 或 123\",\"无名的元素类头\",\"[\\\"foo\\\", \\\"bar\\\"]\",\"-\",\"\\\"foo\\\" 或 \\\"bar\\\"\",\"无名的纯文字头\",\"[\\\"foo\\\", \\\"bar\\\"]\",\"\\\"baz\\\"\",\"\\\"foobaz\\\" 或 \\\"barbaz\\\"\",\"纯文字头\",\"[int, bool]\",\"\\\"foo\\\"\",\"[123, \\\"foo\\\"] 或 [False, \\\"foo\\\"]\",\"类型头\",\"[123, 4567]\",\"\\\"foo\\\"\",\"[123, \\\"foo\\\"] 或 [4567, \\\"foo\\\"]\",\"元素头\",\"[nepattern.NUMBER]\",\"\\\"bar\\\"\",\"[123, \\\"bar\\\"] 或 [123.456, \\\"bar\\\"]\",\"表达式头\",\"[123, \\\"foo\\\"]\",\"\\\"bar\\\"\",\"[123, \\\"bar\\\"] 或 \\\"foobar\\\" 或 [\\\"foo\\\", \\\"bar\\\"]\",\"混合头\",\"[(int, \\\"foo\\\"), (456, \\\"bar\\\")]\",\"\\\"baz\\\"\",\"[123, \\\"foobaz\\\"] 或 [456, \\\"foobaz\\\"] 或 [456, \\\"barbaz\\\"]\",\"对头\",\"对于无前缀的类型头，此时会将传入的值尝试转为 BasePattern，例如 int 会转为 nepattern.INTEGER。如此该命令头会匹配对应的类型， 例如 int 会匹配 123 或 \\\"456\\\"，但不会匹配 \\\"foo\\\"。解析后，Alconna 会将命令头匹配到的值转为对应的类型，例如 int 会将 \\\"123\\\" 转为 123。\",\"提示\",\"正则内容只在命令名上生效，前缀中的正则会被转义\",\"除了通过传入 re:xxx 来使用正则表达式外，Alconna 还提供了一种更加简洁的方式来使用正则表达式，称为 Bracket Header：\",\"from alconna import Alconna alc = Alconna(\\\".rd{roll:int}\\\") assert alc.parse(\\\".rd123\\\").header[\\\"roll\\\"] == 123\",\"Bracket Header 类似 python 里的 f-string 写法，通过 \\\"{}\\\" 声明匹配类型\",\"\\\"{}\\\" 中的内容为 \\\"name:type or pat\\\"：\",\"\\\"{}\\\", \\\"{:}\\\" ⇔ \\\"(.+)\\\", 占位符\",\"\\\"{foo}\\\" ⇔ \\\"(?P&lt;foo&gt;.+)\\\"\",\"\\\"{:\\\\d+}\\\" ⇔ \\\"(\\\\d+)\\\"\",\"\\\"{foo:int}\\\" ⇔ \\\"(?P&lt;foo&gt;\\\\d+)\\\"，其中 \\\"int\\\" 部分若能转为 BasePattern 则读取里面的表达式\"]},\"2633\":{\"h\":\"参数声明(Args)\",\"t\":[\"Args 是用于声明命令参数的组件， 可以通过以下几种方式构造 Args ：\",\"Args[key, var, default][key1, var1, default1][...]\",\"Args[(key, var, default)]\",\"Args.key[var, default]\",\"其中，key 一定是字符串，而 var 一般为参数的类型，default 为具体的值或者 arclet.alconna.args.Field\",\"其与函数签名类似，但是允许含有默认值的参数在前；同时支持 keyword-only 参数不依照构造顺序传入 （但是仍需要在非 keyword-only 参数之后）。\"]},\"2634\":{\"h\":\"key\",\"t\":[\"key 的作用是用以标记解析出来的参数并存放于 Arparma 中，以方便用户调用。\",\"其有三种为 Args 注解的标识符: ?、/、 !, 标识符与 key 之间建议以 ; 分隔：\",\"! 标识符表示该处传入的参数应不是规定的类型，或不在指定的值中。\",\"? 标识符表示该参数为可选参数，会在无参数匹配时跳过。\",\"/ 标识符表示该参数的类型注解需要隐藏。\",\"另外，对于参数的注释也可以标记在 key 中，其与 key 或者标识符 以 # 分割：foo#这是注释;? 或 foo?#这是注释\",\"提示\",\"Args 中的 key 在实际命令中并不需要传入（keyword 参数除外）：\",\"from arclet.alconna import Alconna, Args alc = Alconna(\\\"test\\\", Args[\\\"foo\\\", str]) alc.parse(\\\"test --foo abc\\\") # 错误 alc.parse(\\\"test abc\\\") # 正确\",\"若需要 test --foo abc，你应该使用 Option：\",\"from arclet.alconna import Alconna, Args, Option alc = Alconna(\\\"test\\\", Option(\\\"--foo\\\", Args[\\\"foo\\\", str]))\"]},\"2635\":{\"h\":\"var\",\"t\":[\"var 负责命令参数的类型检查与类型转化\",\"Args 的var表面上看需要传入一个 type，但实际上它需要的是一个 nepattern.BasePattern 的实例：\",\"from arclet.alconna import Args from nepattern import BasePattern # 表示 foo 参数需要匹配一个 @number 样式的字符串 args = Args[\\\"foo\\\", BasePattern(\\\"@\\\\d+\\\")]\",\"pip 示例中可以传入 str 是因为 str 已经注册在了 nepattern.global_patterns 中，因此会替换为 nepattern.global_patterns[str]\",\"nepattern.global_patterns默认支持的类型有：\",\"str: 匹配任意字符串\",\"int: 匹配整数\",\"float: 匹配浮点数\",\"bool: 匹配 True 与 False 以及他们小写形式\",\"hex: 匹配 0x 开头的十六进制字符串\",\"url: 匹配网址\",\"email: 匹配 xxxx@xxx 的字符串\",\"ipv4: 匹配 xxx.xxx.xxx.xxx 的字符串\",\"list: 匹配类似 [\\\"foo\\\",\\\"bar\\\",\\\"baz\\\"] 的字符串\",\"dict: 匹配类似 {\\\"foo\\\":\\\"bar\\\",\\\"baz\\\":\\\"qux\\\"} 的字符串\",\"datetime: 传入一个 datetime 支持的格式字符串，或时间戳\",\"Any: 匹配任意类型\",\"AnyString: 匹配任意类型，转为 str\",\"Number: 匹配 int 与 float，转为 int\",\"同时可以使用 typing 中的类型：\",\"Literal[X]: 匹配其中的任意一个值\",\"Union[X, Y]: 匹配其中的任意一个类型\",\"Optional[xxx]: 会自动将默认值设为 None，并在解析失败时使用默认值\",\"List[X]: 匹配一个列表，其中的元素为 X 类型\",\"Dict[X, Y]: 匹配一个字典，其中的 key 为 X 类型，value 为 Y 类型\",\"...\",\"提示\",\"几类特殊的传入标记：\",\"\\\"foo\\\": 匹配字符串 \\\"foo\\\" (若没有某个 BasePattern 与之关联)\",\"RawStr(\\\"foo\\\"): 匹配字符串 \\\"foo\\\" (即使有 BasePattern 与之关联也不会被替换)\",\"\\\"foo|bar|baz\\\": 匹配 \\\"foo\\\" 或 \\\"bar\\\" 或 \\\"baz\\\"\",\"[foo, bar, Baz, ...]: 匹配其中的任意一个值或类型\",\"Callable[[X], Y]: 匹配一个参数为 X 类型的值，并返回通过该函数调用得到的 Y 类型的值\",\"\\\"re:xxx\\\": 匹配一个正则表达式 xxx，会返回 Match[0]\",\"\\\"rep:xxx\\\": 匹配一个正则表达式 xxx，会返回 re.Match 对象\",\"{foo: bar, baz: qux}: 匹配字典中的任意一个键, 并返回对应的值 (特殊的键 ... 会匹配任意的值)\",\"...\",\"特别的，你可以不传入 var，此时会使用 key 作为 var, 匹配 key 字符串。\"]},\"2636\":{\"h\":\"MultiVar 与 KeyWordVar\",\"t\":[\"MultiVar 是一个特殊的标注，用于告知解析器该参数可以接受多个值，类似于函数中的 *args，其构造方法形如 MultiVar(str)。\",\"同样的还有 KeyWordVar，类似于函数中的 *, name: type，其构造方法形如 KeyWordVar(str)，用于告知解析器该参数为一个 keyword-only 参数。\",\"提示\",\"MultiVar 与 KeyWordVar 组合时，代表该参数为一个可接受多个 key-value 的参数，类似于函数中的 **kwargs，其构造方法形如 MultiVar(KeyWordVar(str))\",\"MultiVar 与 KeyWordVar 也可以传入 default 参数，用于指定默认值\",\"MultiVar 不能在 KeyWordVar 之后传入\"]},\"2637\":{\"h\":\"default\",\"t\":[\"default 传入的是该参数的默认值或者 Field，以携带对于该参数的更多信息。\",\"默认情况下 (即不声明) default 的值为特殊值 Empty。这也意味着你可以将默认值设置为 None 表示默认值为空值。\",\"Field 构造需要的参数说明如下：\",\"default: 参数单元的默认值\",\"alias: 参数单元默认值的别名\",\"completion: 参数单元的补全说明生成函数\",\"unmatch_tips: 参数单元的错误提示生成函数，其接收一个表示匹配失败的元素的参数\",\"missing_tips: 参数单元的缺失提示生成函数\"]},\"2638\":{\"h\":\"选项与子命令(Option & Subcommand)\",\"t\":[\"Option 和 Subcommand 可以传入一组 alias，如 Option(\\\"--foo|-F|--FOO|-f\\\")，Subcommand(\\\"foo\\\", alias=[\\\"F\\\"])\",\"传入别名后，选项与子命令会选择其中长度最长的作为其名称。若传入为 \\\"--foo|-f\\\"，则命令名称为 \\\"--foo\\\"\",\"特别提醒!!!\",\"Option 的名字或别名没有要求必须在前面写上 -\",\"Option 与 Subcommand 的唯一区别在于 Subcommand 可以传入自己的 Option 与 Subcommand\",\"他们拥有如下共同参数：\",\"help_text: 传入该组件的帮助信息\",\"dest: 被指定为解析完成时标注匹配结果的标识符，不传入时默认为选项或子命令的名称 (name)\",\"requires: 一段指定顺序的字符串列表，作为唯一的前置序列与命令嵌套替换 对于命令 test foo bar baz qux <a:int> 来讲，因为foo bar baz 仅需要判断是否相等, 所以可以这么编写：\",\"Alconna(\\\"test\\\", Option(\\\"qux\\\", Args.a[int], requires=[\\\"foo\\\", \\\"bar\\\", \\\"baz\\\"]))\",\"default: 默认值，在该组件未被解析时使用使用该值替换。 特别的，使用 OptionResult 或 SubcomanndResult 可以设置包括参数字典在内的默认值：\",\"from arclet.alconna import Option, OptionResult opt1 = Option(\\\"--foo\\\", default=False) opt2 = Option(\\\"--foo\\\", default=OptionResult(value=False, args={\\\"bar\\\": 1}))\"]},\"2639\":{\"h\":\"Action\",\"t\":[\"Option 可以特别设置传入一类 Action，作为解析操作\",\"Action 分为三类：\",\"store: 无 Args 时， 仅存储一个值， 默认为 Ellipsis； 有 Args 时， 后续的解析结果会覆盖之前的值\",\"append: 无 Args 时， 将多个值存为列表， 默认为 Ellipsis； 有 Args 时， 每个解析结果会追加到列表中, 当存在默认值并且不为列表时， 会自动将默认值变成列表， 以保证追加的正确性\",\"count: 无 Args 时， 计数器加一； 有 Args 时， 表现与 STORE 相同, 当存在默认值并且不为数字时， 会自动将默认值变成 1， 以保证计数器的正确性。\",\"Alconna 提供了预制的几类 Action：\",\"store(默认)，store_value，store_true，store_false\",\"append，append_value\",\"count\"]},\"2640\":{\"h\":\"解析结果(Arparma)\",\"t\":[\"Alconna.parse 会返回由 Arparma 承载的解析结果\",\"Arparma 有如下属性：\",\"调试类\",\"matched: 是否匹配成功\",\"error_data: 解析失败时剩余的数据\",\"error_info: 解析失败时的异常内容\",\"origin: 原始命令，可以类型标注\",\"分析类\",\"header_match: 命令头部的解析结果，包括原始头部、解析后头部、解析结果与可能的正则匹配组\",\"main_args: 命令的主参数的解析结果\",\"options: 命令所有选项的解析结果\",\"subcommands: 命令所有子命令的解析结果\",\"other_args: 除主参数外的其他解析结果\",\"all_matched_args: 所有 Args 的解析结果\",\"Arparma 同时提供了便捷的查询方法 query[type]()，会根据传入的 path 查找参数并返回\",\"path 支持如下:\",\"main_args, options, ...: 返回对应的属性\",\"args: 返回 all_matched_args\",\"main_args.xxx, options.xxx, ...: 返回字典中 xxx键对应的值\",\"args.xxx: 返回 all_matched_args 中 xxx键对应的值\",\"options.foo, foo: 返回选项 foo 的解析结果 (OptionResult)\",\"options.foo.value, foo.value: 返回选项 foo 的解析值\",\"options.foo.args, foo.args: 返回选项 foo 的解析参数字典\",\"options.foo.args.bar, foo.bar: 返回选项 foo 的参数字典中 bar 键对应的值 ...\"]},\"2641\":{\"h\":\"元数据(CommandMeta)\",\"t\":[\"Alconna 的元数据相当于其配置，拥有以下条目：\",\"description: 命令的描述\",\"usage: 命令的用法\",\"example: 命令的使用样例\",\"author: 命令的作者\",\"fuzzy_match: 命令是否开启模糊匹配\",\"fuzzy_threshold: 模糊匹配阈值\",\"raise_exception: 命令是否抛出异常\",\"hide: 命令是否对 manager 隐藏\",\"hide_shortcut: 命令的快捷指令是否在 help 信息中隐藏\",\"keep_crlf: 命令解析时是否保留换行字符\",\"compact: 命令是否允许第一个参数紧随头部\",\"strict: 命令是否严格匹配，若为 False 则未知参数将作为名为 $extra 的参数\",\"context_style: 命令上下文插值的风格，None 为关闭，bracket 为 {...}，parentheses 为 $(...)\",\"extra: 命令的自定义额外信息\",\"元数据一定使用 meta=... 形式传入：\",\"from arclet.alconna import Alconna, CommandMeta alc = Alconna(..., meta=CommandMeta(\\\"foo\\\", example=\\\"bar\\\"))\"]},\"2642\":{\"h\":\"命名空间配置\",\"t\":[\"命名空间配置 （以下简称命名空间） 相当于 Alconna 的默认配置，其优先度低于 CommandMeta。\",\"Alconna 默认使用 \\\"Alconna\\\" 命名空间。\",\"命名空间有以下几个属性：\",\"name: 命名空间名称\",\"prefixes: 默认前缀配置\",\"separators: 默认分隔符配置\",\"formatter_type: 默认格式化器类型\",\"fuzzy_match: 默认是否开启模糊匹配\",\"raise_exception: 默认是否抛出异常\",\"builtin_option_name: 默认的内置选项名称(--help, --shortcut, --comp)\",\"disable_builtin_options: 默认禁用的内置选项(--help, --shortcut, --comp)\",\"enable_message_cache: 默认是否启用消息缓存\",\"compact: 默认是否开启紧凑模式\",\"strict: 命令是否严格匹配\",\"context_style: 命令上下文插值的风格\",\"...\"]},\"2643\":{\"h\":\"新建命名空间并替换\",\"t\":[\"from arclet.alconna import Alconna, namespace, Namespace, Subcommand, Args, config ns = Namespace(\\\"foo\\\", prefixes=[\\\"/\\\"]) # 创建 \\\"foo\\\"命名空间配置, 它要求创建的Alconna的主命令前缀必须是/ alc = Alconna(\\\"pip\\\", Subcommand(\\\"install\\\", Args[\\\"package\\\", str]), namespace=ns) # 在创建Alconna时候传入命名空间以替换默认命名空间 # 可以通过with方式创建命名空间 with namespace(\\\"bar\\\") as np1: np1.prefixes = [\\\"!\\\"] # 以上下文管理器方式配置命名空间，此时配置会自动注入上下文内创建的命令 np1.formatter_type = ShellTextFormatter # 设置此命名空间下的命令的 formatter 默认为 ShellTextFormatter np1.builtin_option_name[\\\"help\\\"] = {\\\"帮助\\\", \\\"-h\\\"} # 设置此命名空间下的命令的帮助选项名称 # 你还可以使用config来管理所有命名空间并切换至任意命名空间 config.namespaces[\\\"foo\\\"] = ns # 将命名空间挂载到 config 上 alc = Alconna(\\\"pip\\\", Subcommand(\\\"install\\\", Args[\\\"package\\\", str]), namespace=config.namespaces[\\\"foo\\\"]) # 也是同样可以切换到\\\"foo\\\"命名空间\"]},\"2644\":{\"h\":\"修改默认的命名空间\",\"t\":[\"from arclet.alconna import config, namespace, Namespace config.default_namespace.prefixes = [...] # 直接修改默认配置 np = Namespace(\\\"xxx\\\", prefixes=[...]) config.default_namespace = np # 更换默认的命名空间 with namespace(config.default_namespace.name) as np: np.prefixes = [...]\"]},\"2645\":{\"h\":\"快捷指令\",\"t\":[\"快捷命令可以做到标识一段命令, 并且传递参数给原命令\",\"一般情况下你可以通过 Alconna.shortcut 进行快捷指令操作 (创建，删除)\",\"shortcut 的第一个参数为快捷指令名称，第二个参数为 ShortcutArgs，作为快捷指令的配置：\",\"class ShortcutArgs(TypedDict): \\\"\\\"\\\"快捷指令参数\\\"\\\"\\\" command: NotRequired[str] \\\"\\\"\\\"快捷指令的命令\\\"\\\"\\\" args: NotRequired[list[Any]] \\\"\\\"\\\"快捷指令的附带参数\\\"\\\"\\\" fuzzy: NotRequired[bool] \\\"\\\"\\\"是否允许命令后随参数\\\"\\\"\\\" prefix: NotRequired[bool] \\\"\\\"\\\"是否调用时保留指令前缀\\\"\\\"\\\" wrapper: NotRequired[ShortcutRegWrapper] \\\"\\\"\\\"快捷指令的正则匹配结果的额外处理函数\\\"\\\"\\\" humanized: NotRequired[str] \\\"\\\"\\\"快捷指令的人类可读描述\\\"\\\"\\\"\"]},\"2646\":{\"h\":\"args的使用\",\"t\":[\"from arclet.alconna import Alconna, Args alc = Alconna(\\\"setu\\\", Args[\\\"count\\\", int]) alc.shortcut(\\\"涩图(\\\\d+)张\\\", {\\\"args\\\": [\\\"{0}\\\"]}) # 'Alconna::setu 的快捷指令: \\\"涩图(\\\\\\\\d+)张\\\" 添加成功' alc.parse(\\\"涩图3张\\\").query(\\\"count\\\") # 3\"]},\"2647\":{\"h\":\"command的使用\",\"t\":[\"from arclet.alconna import Alconna, Args alc = Alconna(\\\"eval\\\", Args[\\\"content\\\", str]) alc.shortcut(\\\"echo\\\", {\\\"command\\\": \\\"eval print(\\\\\\\\'{*}\\\\\\\\')\\\"}) # 'Alconna::eval 的快捷指令: \\\"echo\\\" 添加成功' alc.shortcut(\\\"echo\\\", delete=True) # 删除快捷指令 # 'Alconna::eval 的快捷指令: \\\"echo\\\" 删除成功' @alc.bind() # 绑定一个命令执行器, 若匹配成功则会传入参数, 自动执行命令执行器 def cb(content: str): eval(content, {}, {}) alc.parse('eval print(\\\\\\\\\\\"hello world\\\\\\\\\\\")') # hello world alc.parse(\\\"echo hello world!\\\") # hello world!\",\"当 fuzzy 为 False 时，第一个例子中传入 \\\"涩图1张 abc\\\" 之类的快捷指令将视为解析失败\",\"快捷指令允许三类特殊的 placeholder：\",\"{%X}: 如 setu {%0}，表示此处填入快捷指令后随的第 X 个参数。\",\"例如，若快捷指令为 涩图, 配置为 {\\\"command\\\": \\\"setu {%0}\\\"}, 则指令 涩图 1 相当于 setu 1\",\"{*}: 表示此处填入所有后随参数，并且可以通过 {*X} 的方式指定组合参数之间的分隔符。\",\"{X}: 表示此处填入可能的正则匹配的组：\",\"若 command 中存在匹配组 (xxx)，则 {X} 表示第 X 个匹配组的内容\",\"若 command 中存储匹配组 (?P<xxx>...), 则 {X} 表示 名字 为 X 的匹配结果\",\"除此之外, 通过 Alconna 内置选项 --shortcut 可以动态操作快捷指令\",\"例如：\",\"cmd --shortcut <key> <cmd> 来增加一个快捷指令\",\"cmd --shortcut list 来列出当前指令的所有快捷指令\",\"cmd --shortcut delete key 来删除一个快捷指令\",\"from arclet.alconna import Alconna, Args alc = Alconna(\\\"eval\\\", Args[\\\"content\\\", str]) alc.shortcut(\\\"echo\\\", {\\\"command\\\": \\\"eval print(\\\\\\\\'{*}\\\\\\\\')\\\"}) alc.parse(\\\"eval --shortcut list\\\") # 'echo'\"]},\"2648\":{\"h\":\"紧凑命令\",\"t\":[\"Alconna, Option 与 Subcommand 可以设置 compact=True 使得解析命令时允许名称与后随参数之间没有分隔：\",\"from arclet.alconna import Alconna, Option, CommandMeta, Args alc = Alconna(\\\"test\\\", Args[\\\"foo\\\", int], Option(\\\"BAR\\\", Args[\\\"baz\\\", str], compact=True), meta=CommandMeta(compact=True)) assert alc.parse(\\\"test123 BARabc\\\").matched\",\"这使得我们可以实现如下命令：\",\"from arclet.alconna import Alconna, Option, Args, append alc = Alconna(\\\"gcc\\\", Option(\\\"--flag|-F\\\", Args[\\\"content\\\", str], action=append, compact=True)) print(alc.parse(\\\"gcc -Fabc -Fdef -Fxyz\\\").query[list](\\\"flag.content\\\")) # ['abc', 'def', 'xyz']\",\"当 Option 的 action 为 count 时，其自动支持 compact 特性：\",\"from arclet.alconna import Alconna, Option, count alc = Alconna(\\\"pp\\\", Option(\\\"--verbose|-v\\\", action=count, default=0)) print(alc.parse(\\\"pp -vvv\\\").query[int](\\\"verbose.value\\\")) # 3\"]},\"2649\":{\"h\":\"模糊匹配\",\"t\":[\"模糊匹配会应用在任意需要进行名称判断的地方，如 命令名称，选项名称 和 参数名称 (如指定需要传入参数名称)。\",\"from arclet.alconna import Alconna, CommandMeta alc = Alconna(\\\"test_fuzzy\\\", meta=CommandMeta(fuzzy_match=True)) alc.parse(\\\"test_fuzy\\\") # test_fuzy is not matched. Do you mean \\\"test_fuzzy\\\"?\"]},\"2650\":{\"h\":\"半自动补全\",\"t\":[\"半自动补全为用户提供了推荐后续输入的功能\",\"补全默认通过 --comp 或 -cp 或 ? 触发：（命名空间配置可修改名称）\",\"from arclet.alconna import Alconna, Args, Option alc = Alconna(\\\"test\\\", Args[\\\"abc\\\", int]) + Option(\\\"foo\\\") + Option(\\\"bar\\\") alc.parse(\\\"test --comp\\\") ''' output 以下是建议的输入： * <abc: int> * --help * -h * -sct * --shortcut * foo * bar '''\"]},\"2651\":{\"h\":\"Duplication\",\"t\":[\"Duplication 用来提供更好的自动补全，类似于 ArgParse 的 Namespace\",\"普通情况下使用，需要利用到 ArgsStub、OptionStub 和 SubcommandStub 三个部分\",\"以pip为例，其对应的 Duplication 应如下构造:\",\"from arclet.alconna import Alconna, Args, Option, OptionResult, Duplication, SubcommandStub, Subcommand, count class MyDup(Duplication): verbose: OptionResult install: SubcommandStub alc = Alconna( \\\"pip\\\", Subcommand( \\\"install\\\", Args[\\\"package\\\", str], Option(\\\"-r|--requirement\\\", Args[\\\"file\\\", str]), Option(\\\"-i|--index-url\\\", Args[\\\"url\\\", str]), ), Option(\\\"-v|--version\\\"), Option(\\\"-v|--verbose\\\", action=count), ) res = alc.parse(\\\"pip -v install ...\\\") # 不使用duplication获得的提示较少 print(res.query(\\\"install\\\")) # (value=Ellipsis args={'package': '...'} options={} subcommands={}) result = alc.parse(\\\"pip -v install ...\\\", duplication=MyDup) print(result.install) # SubcommandStub(_origin=Subcommand('install', args=Args('package': str)), _value=Ellipsis, available=True, args=ArgsStub(_origin=Args('package': str), _value={'package': '...'}, available=True), dest='install', options=[OptionStub(_origin=Option('requirement', args=Args('file': str)), _value=None, available=False, args=ArgsStub(_origin=Args('file': str), _value={}, available=False), dest='requirement', aliases=['r', 'requirement'], name='requirement'), OptionStub(_origin=Option('index-url', args=Args('url': str)), _value=None, available=False, args=ArgsStub(_origin=Args('url': str), _value={}, available=False), dest='index-url', aliases=['index-url', 'i'], name='index-url')], subcommands=[], name='install')\",\"Duplication 也可以如 Namespace 一样直接标明参数名称和类型：\",\"from typing import Optional from arclet.alconna import Duplication class MyDup(Duplication): package: str file: Optional[str] = None url: Optional[str] = None\"]},\"2652\":{\"h\":\"上下文插值\",\"t\":[\"当 context_style 条目被设置后，传入的命令中符合上下文插值的字段会被自动替换成当前上下文中的信息。\",\"上下文可以在 parse 中传入：\",\"from arclet.alconna import Alconna, Args, CommandMeta alc = Alconna(\\\"test\\\", Args[\\\"foo\\\", int], meta=CommandMeta(context_style=\\\"parentheses\\\")) alc.parse(\\\"test $(bar)\\\", {\\\"bar\\\": 123}) # {\\\"foo\\\": 123}\",\"context_style 的值分两种：\",\"\\\"bracket\\\": 插值格式为 {...}，例如 {foo}\",\"\\\"parentheses\\\": 插值格式为 $(...)，例如 $(bar)\"]},\"2653\":{\"h\":\"配置项\"},\"2654\":{\"h\":\"alconna_auto_send_output\",\"t\":[\"类型: bool\",\"默认值: False\",\"是否全局启用输出信息自动发送，不启用则会在触发特殊内置选项后仍然将解析结果传递至响应器。\"]},\"2655\":{\"h\":\"alconna_use_command_start\",\"t\":[\"类型: bool\",\"默认值: False\",\"是否读取 Nonebot 的配置项 COMMAND_START 来作为全局的 Alconna 命令前缀\"]},\"2656\":{\"h\":\"alconna_auto_completion\",\"t\":[\"类型: bool\",\"默认值: False\",\"是否全局启用命令自动补全，启用后会在参数缺失或触发 --comp 选项时自自动启用交互式补全。\"]},\"2657\":{\"h\":\"alconna_use_origin\",\"t\":[\"类型: bool\",\"默认值: False\",\"是否全局使用原始消息 (即未经过 to_me 等处理的)，该选项会影响到 Alconna 的匹配行为。\"]},\"2658\":{\"h\":\"alconna_use_command_sep\",\"t\":[\"类型: bool\",\"默认值: False\",\"是否读取 Nonebot 的配置项 COMMAND_SEP 来作为全局的 Alconna 命令分隔符。\"]},\"2659\":{\"h\":\"alconna_global_extensions\",\"t\":[\"类型: List[str]\",\"默认值: []\",\"全局加载的扩展，路径以 . 分隔，如 foo.bar.baz:DemoExtension。\"]},\"2660\":{\"h\":\"alconna_context_style\",\"t\":[\"类型: Optional[Literal[\\\"bracket\\\", \\\"parentheses\\\"]]\",\"默认值: None\",\"全局命令上下文插值的风格，None 为关闭，bracket 为 {...}，parentheses 为 $(...)。\"]},\"2661\":{\"h\":\"alconna_enable_saa_patch\",\"t\":[\"类型: bool\",\"默认值: False\",\"是否启用 SAA 补丁。\"]},\"2662\":{\"h\":\"alconna_apply_filehost\",\"t\":[\"类型: bool\",\"默认值: False\",\"是否启用文件托管。\"]},\"2663\":{\"h\":\"alconna_apply_fetch_targets\",\"t\":[\"类型: bool\",\"默认值: False\",\"是否启动时拉取一次发送对象列表。\"]},\"2664\":{\"h\":\"用户指南\",\"t\":[\"nonebot-plugin-orm 功能强大且复杂，使用上有一定难度。 不过，对于用户而言，只需要掌握部分功能即可。\",\"注意\",\"请注意区分插件的项目名（如：nonebot-plugin-wordcloud）和模块名（如：nonebot_plugin_wordcloud）。nonebot-plugin-orm 中统一使用插件模块名。参见 插件命名规范。\"]},\"2665\":{\"h\":\"示例\"},\"2666\":{\"h\":\"创建新机器人\",\"t\":[\"我们想要创建一个机器人，并安装 nonebot-plugin-wordcloud 插件，只需要执行以下命令：\",\"nb init # 初始化项目文件夹 pip install nonebot-plugin-orm[sqlite] # 安装 nonebot-plugin-orm，并附带 SQLite 支持 nb plugin install nonebot-plugin-wordcloud # 安装插件 # nb orm heads # 查看有什么插件使用到了数据库（可选） nb orm upgrade # 升级数据库 # nb orm check # 检查一下数据库模式是否与模型定义一致（可选） nb run # 启动机器人\"]},\"2667\":{\"h\":\"卸载插件\",\"t\":[\"我们已经安装了 nonebot-plugin-wordcloud 插件，但是现在想要卸载它，并且删除它的数据，只需要执行以下命令：\",\"nb plugin uninstall nonebot-plugin-wordcloud # 卸载插件 # nb orm heads # 查看有什么插件使用到了数据库。（可选） nb orm downgrade nonebot_plugin_wordcloud@base # 降级数据库，删除数据 # nb orm check # 检查一下数据库模式是否与模型定义一致（可选）\"]},\"2668\":{\"h\":\"CLI\",\"t\":[\"接下来，让我们了解下示例中出现的 CLI 命令的含义：\"]},\"2669\":{\"h\":\"heads\",\"t\":[\"显示所有的分支头。一般一个分支对应一个插件。\",\"nb orm heads\",\"输出格式为 <迁移 ID> (<插件模块名>) (<头部类型>)：\",\"46327b837dd8 (nonebot_plugin_chatrecorder) (head) 9492159f98f7 (nonebot_plugin_user) (head) 71a72119935f (nonebot_plugin_session_orm) (effective head) ade8cdca5470 (nonebot_plugin_wordcloud) (head)\"]},\"2670\":{\"h\":\"upgrade\",\"t\":[\"升级数据库。每次安装新的插件或更新插件版本后，都需要执行此命令。\",\"nb orm upgrade <插件模块名>@<迁移 ID>\",\"其中，<插件模块名>@<迁移 ID> 是可选参数。如果不指定，则会将所有分支升级到最新版本，这也是最常见的用法：\",\"nb orm upgrade\"]},\"2671\":{\"h\":\"downgrade\",\"t\":[\"降级数据库。当需要回滚插件版本或删除插件时，可以执行此命令。\",\"nb orm downgrade <插件模块名>@<迁移 ID>\",\"其中，<迁移 ID> 也可以是 base，即回滚到初始状态。常用于卸载插件后删除其数据：\",\"nb orm downgrade <插件模块名>@base\"]},\"2672\":{\"h\":\"check\",\"t\":[\"检查数据库模式是否与模型定义一致。机器人启动前会自动运行此命令（ALEMBIC_STARTUP_CHECK=true 时），并在检查失败时阻止启动。\",\"nb orm check\"]},\"2673\":{\"h\":\"配置\"},\"2674\":{\"h\":\"sqlalchemy_database_url\",\"t\":[\"默认数据库连接 URL。参见 数据库驱动和后端 和 引擎配置 — SQLAlchemy 2.0 文档。\",\"SQLALCHEMY_DATABASE_URL=dialect+driver://username:password@host:port/database\"]},\"2675\":{\"h\":\"sqlalchemy_bind\",\"t\":[\"bind keys（一般为插件模块名）到数据库连接 URL、create_async_engine() 参数字典或 AsyncEngine 实例的字典。 例如，我们想要让 nonebot-plugin-wordcloud 插件使用一个 SQLite 数据库，并开启 Echo 选项 便于 debug，而其他插件使用默认的 PostgreSQL 数据库，可以这样配置：\",\"SQLALCHEMY_BINDS='{ \\\"\\\": \\\"postgresql+psycopg://scott:tiger@localhost/mydatabase\\\", \\\"nonebot_plugin_wordcloud\\\": { \\\"url\\\": \\\"sqlite+aiosqlite://\\\", \\\"echo\\\": true } }'\"]},\"2676\":{\"h\":\"sqlalchemy_engine_options\",\"t\":[\"create_async_engine() 默认参数字典。\",\"SQLALCHEMY_ENGINE_OPTIONS='{ \\\"pool_size\\\": 5, \\\"max_overflow\\\": 10, \\\"pool_timeout\\\": 30, \\\"pool_recycle\\\": 3600, \\\"echo\\\": true }'\"]},\"2677\":{\"h\":\"sqlalchemy_echo\",\"t\":[\"开启 Echo 选项 和 Echo Pool 选项 便于 debug。\",\"SQLALCHEMY_ECHO=true\",\"注意\",\"以上配置之间有覆盖关系，遵循特殊优先于一般的原则，具体为 sqlalchemy_database_url > sqlalchemy_bind > sqlalchemy_echo > sqlalchemy_engine_options。 但覆盖顺序并非显而易见，出于清晰考虑，请只配置必要的选项。\"]},\"2678\":{\"h\":\"模拟网络通信\",\"t\":[\"NoneBot 驱动器提供了多种方法来帮助适配器进行网络通信，主要包括客户端和服务端两种类型。模拟网络通信可以帮助我们更加接近实际机器人应用场景，进行更加真实的集成测试。同时，通过这种途径，我们还可以完成对适配器的测试。\",\"NoneBot 中的网络通信主要包括以下几种：\",\"HTTP 服务端（WebHook）\",\"WebSocket 服务端\",\"HTTP 客户端\",\"WebSocket 客户端\",\"下面我们将分别介绍如何使用 NoneBug 来模拟这几种通信方式。\"]},\"2679\":{\"h\":\"测试 HTTP 服务端\",\"t\":[\"当 NoneBot 作为 ASGI 服务端应用时，我们可以定义一系列的路由来处理 HTTP 请求，适配器同样也可以通过定义路由来响应机器人相关的网络通信。下面假设我们使用了一个适配器 fake ，它定义了一个路由 /fake/http ，用于接收平台 WebHook 并处理。实际应用测试时，应将该路由地址替换为真实适配器注册的路由地址。\",\"我们首先需要获取测试用模拟客户端：\",\"from nonebug import App @pytest.mark.asyncio async def test_http_server(app: App): async with app.test_server() as ctx: client = ctx.get_client()\",\"默认情况下，app.test_server() 会通过 nonebot.get_asgi 获取测试对象，我们也可以通过参数指定 ASGI 应用：\",\"async with app.test_server(asgi=asgi_app) as ctx: ...\",\"获取到模拟客户端后，即可像 requests、httpx 等库类似的方法进行使用：\",\"import nonebot from nonebug import App from nonebot.adapters.fake import Adapter @pytest.mark.asyncio async def test_http_server(app: App): adapter = nonebot.get_adapter(Adapter) async with app.test_server() as ctx: client = ctx.get_client() response = await client.post(\\\"/fake/http\\\", json={\\\"bot_id\\\": \\\"fake\\\"}) assert response.status_code == 200 assert response.json() == {\\\"status\\\": \\\"success\\\"} assert \\\"fake\\\" in nonebot.get_bots() adapter.bot_disconnect(nonebot.get_bot(\\\"fake\\\"))\",\"在上面的测试中，我们向 /fake/http 发送了一个模拟 POST 请求，适配器将会对该请求进行处理，我们可以通过检查请求返回是否正确、Bot 对象是否创建等途径来验证机器人是否正确运行。在完成测试后，我们通常需要对 Bot 对象进行清理，以避免对其他测试产生影响。\"]},\"2680\":{\"h\":\"测试 WebSocket 服务端\",\"t\":[\"当 NoneBot 作为 ASGI 服务端应用时，我们还可以定义一系列的路由来处理 WebSocket 通信。下面假设我们使用了一个适配器 fake ，它定义了一个路由 /fake/ws ，用于处理平台 WebSocket 连接信息。实际应用测试时，应将该路由地址替换为真实适配器注册的路由地址。\",\"我们同样需要通过 app.test_server() 获取测试用模拟客户端，这里就不再赘述。在获取到模拟客户端后，我们可以通过 client.websocket_connect 方法来模拟 WebSocket 连接：\",\"import nonebot from nonebug import App from nonebot.adapters.fake import Adapter @pytest.mark.asyncio async def test_ws_server(app: App): adapter = nonebot.get_adapter(Adapter) async with app.test_server() as ctx: client = ctx.get_client() async with client.websocket_connect(\\\"/fake/ws\\\") as ws: await ws.send_json({\\\"bot_id\\\": \\\"fake\\\"}) response = await ws.receive_json() assert response == {\\\"status\\\": \\\"success\\\"} assert \\\"fake\\\" in nonebot.get_bots()\",\"在上面的测试中，我们向 /fake/ws 进行了 WebSocket 模拟通信，通过发送消息与机器人进行交互，然后检查机器人发送的信息是否正确。\"]},\"2681\":{\"h\":\"测试 HTTP 客户端\",\"t\":[\"暂不支持\"]},\"2682\":{\"h\":\"测试 WebSocket 客户端\",\"t\":[\"暂不支持\"]},\"2683\":{\"h\":\"开发者指南\",\"t\":[\"开发者指南内容较多，故分为了一个示例以及数个专题。 阅读（并且最好跟随实践）示例后，你将会对使用 nonebot-plugin-orm 开发插件有一个基本的认识。 如果想要更深入地学习关于 SQLAlchemy 和 Alembic 的知识，或者在使用过程中遇到了问题，可以查阅专题以及其官方文档。\"]},\"2684\":{\"h\":\"示例\"},\"2685\":{\"h\":\"模型定义\",\"t\":[\"首先，我们需要设计存储的数据的结构。 例如天气插件，需要存储什么地方 (location) 的天气是什么 (weather)。 其中，一个地方只会有一种天气，而不同地方可能有相同的天气。 所以，我们可以设计出如下的模型：\",\"from nonebot_plugin_orm import Model from sqlalchemy.orm import Mapped, mapped_column class Weather(Model): location: Mapped[str] = mapped_column(primary_key=True) weather: Mapped[str]\",\"其中，primary_key=True 意味着此列 (location) 是主键，即内容是唯一的且非空的。 每一个模型必须有至少一个主键。\",\"我们可以用以下代码检查模型生成的数据库模式是否正确：\",\"from sqlalchemy.schema import CreateTable print(CreateTable(Weather.__table__))\",\"CREATE TABLE weather_weather ( location VARCHAR NOT NULL, weather VARCHAR NOT NULL, CONSTRAINT pk_weather_weather PRIMARY KEY (location) )\",\"可以注意到表名是 weather_weather 而不是 Weather 或者 weather。 这是因为 nonebot-plugin-orm 会自动为模型生成一个表名，规则是：<插件模块名>_<类名小写>。\",\"你也可以通过指定 __tablename__ 属性来自定义表名：\",\"class Weather(Model): __tablename__ = \\\"weather\\\" ...\",\"CREATE TABLE weather ( ... )\",\"但是，并不推荐你这么做，因为这可能会导致不同插件间的表名重复，引发冲突。 特别是当你会发布插件时，你并不知道其他插件会不会使用相同的表名。\"]},\"2686\":{\"h\":\"首次迁移\",\"t\":[\"我们成功定义了模型，现在启动机器人试试吧：\",\"$ nb run 01-02 15:04:05 [SUCCESS] nonebot | NoneBot is initializing... 01-02 15:04:05 [ERROR] nonebot_plugin_orm | 启动检查失败 01-02 15:04:05 [ERROR] nonebot | Application startup failed. Exiting. Traceback (most recent call last): ... click.exceptions.UsageError: 检测到新的升级操作: [('add_table', Table('weather', MetaData(), Column('location', String(), table=<weather>, primary_key=True, nullable=False), Column('weather', String(), table=<weather>, nullable=False), schema=None))]\",\"咦，发生了什么？nonebot-plugin-orm 试图阻止我们启动机器人。 原来是我们定义了模型，但是数据库中并没有对应的表，这会导致插件不能正常运行。 所以，我们需要迁移数据库。\",\"首先，我们需要创建一个迁移脚本：\",\"nb orm revision -m \\\"first revision\\\" --branch-label weather\",\"其中，-m 参数是迁移脚本的描述，--branch-label 参数是迁移脚本的分支，一般为插件模块名。 执行命令过后，出现了一个 weather/migrations 目录，其中有一个 xxxxxxxxxxxx_first_revision.py 文件：\",\"weather ├── __init__.py ├── config.py └── migrations └── xxxxxxxxxxxx_first_revision.py\",\"这就是我们创建的迁移脚本，它记录了数据库模式的变化。 我们可以查看一下它的内容：\",\"\\\"\\\"\\\"first revision 迁移 ID: xxxxxxxxxxxx 父迁移: 创建时间: 2006-01-02 15:04:05.999999 \\\"\\\"\\\" from __future__ import annotations from collections.abc import Sequence import sqlalchemy as sa from alembic import op revision: str = \\\"xxxxxxxxxxxx\\\" down_revision: str | Sequence[str] | None = None branch_labels: str | Sequence[str] | None = (\\\"weather\\\",) depends_on: str | Sequence[str] | None = None def upgrade(name: str = \\\"\\\") -> None: if name: return # ### commands auto generated by Alembic - please adjust! ### op.create_table( \\\"weather_weather\\\", sa.Column(\\\"location\\\", sa.String(), nullable=False), sa.Column(\\\"weather\\\", sa.String(), nullable=False), sa.PrimaryKeyConstraint(\\\"location\\\", name=op.f(\\\"pk_weather_weather\\\")), info={\\\"bind_key\\\": \\\"weather\\\"}, ) # ### end Alembic commands ### def downgrade(name: str = \\\"\\\") -> None: if name: return # ### commands auto generated by Alembic - please adjust! ### op.drop_table(\\\"weather_weather\\\") # ### end Alembic commands ###\",\"可以注意到脚本的主体部分（其余是模版代码，请勿修改）是：\",\"# ### commands auto generated by Alembic - please adjust! ### op.create_table( # CREATE TABLE \\\"weather_weather\\\", # weather_weather sa.Column(\\\"location\\\", sa.String(), nullable=False), # location VARCHAR NOT NULL, sa.Column(\\\"weather\\\", sa.String(), nullable=False), # weather VARCHAR NOT NULL, sa.PrimaryKeyConstraint(\\\"location\\\", name=op.f(\\\"pk_weather_weather\\\")), # CONSTRAINT pk_weather_weather PRIMARY KEY (location) info={\\\"bind_key\\\": \\\"weather\\\"}, ) # ### end Alembic commands ###\",\"# ### commands auto generated by Alembic - please adjust! ### op.drop_table(\\\"weather_weather\\\") # DROP TABLE weather_weather; # ### end Alembic commands ###\",\"虽然我们不是很懂这些代码的意思，但是可以注意到它们几乎与 SQL 语句 (DDL) 一一对应。 显然，它们是用来创建和删除表的。\",\"我们还可以注意到，upgrade() 和 downgrade() 函数中的代码是互逆的。 也就是说，执行一次 upgrade() 函数，再执行一次 downgrade() 函数后，数据库的模式就会回到原来的状态。\",\"这就是迁移脚本的作用：记录数据库模式的变化，以便我们在不同的环境中（例如开发环境和生产环境）可复现地、可逆地同步数据库模式，正如 git 对我们的代码做的事情那样。\",\"对了，不要忘记还有一段注释：commands auto generated by Alembic - please adjust!。 它在提醒我们，这些代码是由 Alembic 自动生成的，我们应该检查它们，并且根据需要进行调整。\",\"注意\",\"迁移脚本冗长且繁琐，我们一般不会手写它们，而是由 Alembic 自动生成。 一般情况下，Alembic 足够智能，可以正确地生成迁移脚本。 但是，在复杂或有歧义的情况下，我们可能需要手动调整迁移脚本。 所以，永远要检查迁移脚本，并且在开发环境中测试！\",\"迁移脚本中任何一处错误都足以使数据付之东流！\",\"确定迁移脚本正确后，我们就可以执行迁移脚本，将数据库模式同步到数据库中：\",\"nb orm upgrade\",\"现在，我们可以正常启动机器人了。\",\"开发过程中，我们可能会频繁地修改模型，这意味着我们需要频繁地创建并执行迁移脚本，非常繁琐。 实际上，此时我们不在乎数据安全，只需要数据库模式与模型定义一致即可。 所以，我们可以关闭 nonebot-plugin-orm 的启动检查：\",\"ALEMBIC_STARTUP_CHECK=false\",\"现在，每次启动机器人时，数据库模式会自动与模型定义同步，无需手动迁移。\"]},\"2687\":{\"h\":\"会话管理\",\"t\":[\"我们已经成功定义了模型，并且迁移了数据库，现在可以开始使用数据库了……吗？ 并不能，因为模型只是数据结构的定义，并不能通过它操作数据（如果你曾经使用过 Tortoise ORM，可能会知道 await Weather.get(location=\\\"上海\\\") 这样的面向对象编程。 但是 SQLAlchemy 不同，选择了命令式编程）。 我们需要使用会话操作数据：\",\"from nonebot import on_command from nonebot.adapters import Message from nonebot.params import CommandArg from nonebot_plugin_orm import async_scoped_session weather = on_command(\\\"天气\\\") @weather.handle() async def _(session: async_scoped_session, args: Message = CommandArg()): location = args.extract_plain_text() if wea := await session.get(Weather, location): await weather.finish(f\\\"今天{location}的天气是{wea.weather}\\\") await weather.finish(f\\\"未查询到{location}的天气\\\")\",\"我们通过 session: async_scoped_session 依赖注入获得了一个会话，然后使用 await session.get(Weather, location) 查询数据库。async_scoped_session 是一个有作用域限制的会话，作用域为当前事件、当前事件响应器。 会话产生的模型实例（例如此处的 wea := await session.get(Weather, location)）作用域与会话相同。\",\"注意\",\"此处提到的“会话”指的是 ORM 会话，而非 NoneBot 会话，两者的生命周期也是不同的（NoneBot 会话的生命周期中可能包含多个事件，不同的事件也会有不同的事件响应器）。 具体而言，就是不要将 ORM 会话和模型实例存储在 NoneBot 会话状态中：\",\"from nonebot.params import ArgPlainText from nonebot.typing import T_State @weather.got(\\\"location\\\", prompt=\\\"请输入地名\\\") async def _(state: T_State, session: async_scoped_session, location: str = ArgPlainText()): wea = await session.get(Weather, location) if not wea: await weather.finish(f\\\"未查询到{location}的天气\\\") state[\\\"weather\\\"] = wea # 不要这么做，除非你知道自己在做什么\",\"当然非要这么做也不是不可以：\",\"@weather.handle() async def _(state: T_State, session: async_scoped_session): # 通过 await session.merge(state[\\\"weather\\\"]) 获得了此 ORM 会话中的相应模型实例， # 而非直接使用会话状态中的模型实例， # 因为先前的 ORM 会话已经关闭了。 wea = await session.merge(state[\\\"weather\\\"]) await weather.finish(f\\\"今天{state['location']}的天气是{wea.weather}\\\")\",\"当有数据更改时，我们需要提交事务，也要注意会话作用域问题：\",\"from nonebot.params import Depends async def get_weather( session: async_scoped_session, args: Message = CommandArg() ) -> Weather: location = args.extract_plain_text() if not (wea := await session.get(Weather, location)): wea = Weather(location=location, weather=\\\"未知\\\") session.add(wea) # await session.commit() # 不应该在其他地方提交事务 return wea @weather.handle() async def _(session: async_scoped_session, wea: Weather = Depends(get_weather)): await weather.send(f\\\"今天的天气是{wea.weather}\\\") await session.commit() # 而应该在事件响应器结束前提交事务\",\"当然我们也可以获得一个新的会话，不过此时就要手动管理会话了：\",\"from nonebot_plugin_orm import get_session async def get_weather(location: str) -> str: session = get_session() async with session.begin(): wea = await session.get(Weather, location) if not wea: wea = Weather(location=location, weather=\\\"未知\\\") session.add(wea) return wea.weather @weather.handle() async def _(args: Message = CommandArg()): wea = await get_weather(args.extract_plain_text()) await weather.send(f\\\"今天的天气是{wea}\\\")\"]},\"2688\":{\"h\":\"依赖注入\",\"t\":[\"在上面的示例中，我们都是通过会话获得数据的。 不过，我们也可以通过依赖注入获得数据：\",\"from sqlalchemy import select from nonebot.params import Depends from nonebot_plugin_orm import SQLDepends def extract_arg_plain_text(args: Message = CommandArg()) -> str: return args.extract_plain_text() @weather.handle() async def _( wea: Weather = SQLDepends( select(Weather).where(Weather.location == Depends(extract_arg_plain_text)) ), ): await weather.send(f\\\"今天的天气是{wea.weather}\\\")\",\"其中，SQLDepends 是一个特殊的依赖注入，它会根据类型标注和 SQL 语句提供数据，SQL 语句中也可以有子依赖。\",\"不同的类型标注也会获得不同形式的数据：\",\"from collections.abc import Sequence @weather.handle() async def _( weas: Sequence[Weather] = SQLDepends( select(Weather).where(Weather.weather == Depends(extract_arg_plain_text)) ), ): await weather.send(f\\\"今天的天气是{weas[0].weather}的城市有{'，'.join(wea.location for wea in weas)}\\\")\",\"支持的类型标注请参见 依赖注入。\",\"我们也可以像 类作为依赖 那样，在类属性中声明子依赖：\",\"from collections.abc import Sequence class Weather(Model): location: Mapped[str] = mapped_column(primary_key=True) weather: Mapped[str] = Depends(extract_arg_plain_text) # weather: Annotated[Mapped[str], Depends(extract_arg_plain_text)] # Annotated 支持 @weather.handle() async def _(weas: Sequence[Weather]): await weather.send( f\\\"今天的天气是{weas[0].weather}的城市有{'，'.join(wea.location for wea in weas)}\\\" )\"]},\"2689\":{\"h\":\"依赖注入\",\"t\":[\"nonebot-plugin-orm 提供了强大且灵活的依赖注入，可以方便地帮助你获取数据库会话和查询数据。\"]},\"2690\":{\"h\":\"数据库会话\"},\"2691\":{\"h\":\"AsyncSession\",\"t\":[\"新数据库会话，常用于有独立的数据库操作逻辑的插件。\",\"from nonebot import on_message from nonebot.params import Depends from nonebot_plugin_orm import AsyncSession, Model, async_scoped_session from sqlalchemy.orm import Mapped, mapped_column message = on_message() class Message(Model): id: Mapped[int] = mapped_column(primary_key=True, autoincrement=True) async def get_message(session: AsyncSession) -> Message: # 等价于 session = get_session() async with session: msg = Message() session.add(msg) await session.commit() await session.refresh(msg) return msg @message.handle() async def _(session: async_scoped_session, msg: Message = Depends(get_message)): await session.rollback() # 无法回退 get_message() 中的更改 await message.send(str(msg.id)) # msg 被存储，msg.id 递增\"]},\"2692\":{\"h\":\"async_scoped_session\",\"t\":[\"数据库作用域会话，常用于事件响应器和有与响应逻辑相关的数据库操作逻辑的插件。\",\"from nonebot import on_message from nonebot.params import Depends from nonebot_plugin_orm import Model, async_scoped_session from sqlalchemy.orm import Mapped, mapped_column message = on_message() class Message(Model): id: Mapped[int] = mapped_column(primary_key=True, autoincrement=True) async def get_message(session: async_scoped_session) -> Message: # 等价于 session = get_scoped_session() msg = Message() session.add(msg) await session.flush() await session.refresh(msg) return msg @message.handle() async def _(session: async_scoped_session, msg: Message = Depends(get_message)): await session.rollback() # 可以回退 get_message() 中的更改 await message.send(str(msg.id)) # msg 没有被存储，msg.id 不变\"]},\"2693\":{\"h\":\"查询数据\"},\"2694\":{\"h\":\"Model\",\"t\":[\"支持类作为依赖。\",\"from typing import Annotated from nonebot.params import Depends from nonebot_plugin_orm import Model from sqlalchemy.orm import Mapped, mapped_column def get_id() -> int: ... class Message(Model): id: Annotated[Mapped[int], Depends(get_id)] = mapped_column( primary_key=True, autoincrement=True ) async def _(msg: Message): # 等价于 msg = ( # await (await session.stream(select(Message).where(Message.id == get_id()))) # .scalars() # .one_or_none() # ) ...\"]},\"2695\":{\"h\":\"SQLDepends\",\"t\":[\"参数为一个 SQL 语句，决定依赖注入的内容，SQL 语句中可以使用子依赖。\",\"from nonebot.params import Depends from nonebot_plugin_orm import Model, SQLDepends from sqlalchemy import select def get_id() -> int: ... async def _( model: Model = SQLDepends(select(Model).where(Model.id == Depends(get_id))), ): ...\",\"参数可以是任意 SQL 语句，但不建议使用 select 以外的语句，因为语句可能没有返回值（returning 除外），而且代码不清晰。\"]},\"2696\":{\"h\":\"类型标注\",\"t\":[\"类型标注决定依赖注入的数据结构，主要影响以下几个层面：\",\"迭代器（session.execute()）或异步迭代器（session.stream()）\",\"标量（session.execute().scalars()）或元组（session.execute()）\",\"一个（session.execute().one_or_none()，注意 None 时可能触发 重载）或全部（session.execute() / session.execute().all()）\",\"连续（session().execute()）或分块（session.execute().partitions()）\",\"具体如下（可以使用父类型作为类型标注）：\",\"async def _(rows_partitions: AsyncIterator[Sequence[Tuple[Model, ...]]]): # 等价于 rows_partitions = await (await session.stream(sql).partitions()) async for partition in rows_partitions: for row in partition: print(row[0], row[1], ...)\",\"async def _(model_partitions: AsyncIterator[Sequence[Model]]): # 等价于 model_partitions = await (await session.stream(sql).scalars().partitions()) async for partition in model_partitions: for model in partition: print(model)\",\"async def _(row_partitions: Iterator[Sequence[Tuple[Model, ...]]]): # 等价于 row_partitions = await session.execute(sql).partitions() for partition in rows_partitions: for row in partition: print(row[0], row[1], ...)\",\"async def _(model_partitions: Iterator[Sequence[Model]]): # 等价于 model_partitions = await (await session.execute(sql).scalars().partitions()) for partition in model_partitions: for model in partition: print(model)\",\"async def _(rows: sa_async.AsyncResult[Tuple[Model, ...]]): # 等价于 rows = await session.stream(sql) async for row in rows: print(row[0], row[1], ...)\",\"async def _(models: sa_async.AsyncScalarResult[Model]): # 等价于 models = await session.stream(sql).scalars() async for model in models: print(model)\",\"async def _(rows: sa.Result[Tuple[Model, ...]]): # 等价于 rows = await session.execute(sql) for row in rows: print(row[0], row[1], ...)\",\"async def _(models: sa.ScalarResult[Model]): # 等价于 models = await session.execute(sql).scalars() for model in models: print(model)\",\"async def _(rows: Sequence[Tuple[Model, ...]]): # 等价于 rows = await (await session.stream(sql).all()) for row in rows: print(row[0], row[1], ...)\",\"async def _(models: Sequence[Model]): # 等价于 models = await (await session.stream(sql).scalars().all()) for model in models: print(model)\",\"async def _(row: Tuple[Model, ...]): # 等价于 row = await (await session.stream(sql).one_or_none()) print(row[0], row[1], ...)\",\"async def _(model: Model): # 等价于 model = await (await session.stream(sql).scalars().one_or_none()) print(model)\"]},\"2697\":{\"h\":\"测试\",\"t\":[\"百思不如一试，测试是发现问题的最佳方式。\",\"不同的用户会有不同的配置，为了提高项目的兼容性，我们需要在不同数据库后端上测试。 手动进行大量的、重复的测试不可靠，也不现实，因此我们推荐使用 GitHub Actions 进行自动化测试：\",\"name: Test on: push: branches: - main jobs: test: runs-on: ubuntu-latest strategy: matrix: db: - sqlite+aiosqlite:///db.sqlite3 - postgresql+psycopg://postgres:postgres@localhost:5432/postgres - mysql+aiomysql://mysql:mysql@localhost:3306/mymysql fail-fast: false env: SQLALCHEMY_DATABASE_URL: ${{ matrix.db }} services: postgresql: image: ${{ startsWith(matrix.db, 'postgresql') && 'postgres' || '' }} env: POSTGRES_USER: postgres POSTGRES_PASSWORD: postgres POSTGRES_DB: postgres ports: - 5432:5432 mysql: image: ${{ startsWith(matrix.db, 'mysql') && 'mysql' || '' }} env: MYSQL_ROOT_PASSWORD: mysql MYSQL_USER: mysql MYSQL_PASSWORD: mysql MYSQL_DATABASE: mymysql ports: - 3306:3306 steps: - uses: actions/checkout@v4 - uses: actions/setup-python@v5 - name: Install dependencies run: pip install -r requirements.txt - name: Run migrations run: pipx run nb-cli orm upgrade - name: Run tests run: pytest\",\"如果项目还需要考虑跨平台和跨 Python 版本兼容，测试矩阵中还需要增加这两个维度。 但是，我们没必要在所有平台和 Python 版本上运行所有数据库的测试，因为很显然，PostgreSQL 和 MySQL 这类独立的数据库后端不会受平台和 Python 影响，而且 Github Actions 的非 Linux 平台不支持运行独立服务：\",\"Python 3.9\",\"Python 3.10\",\"Python 3.11\",\"Python 3.12\",\"Linux\",\"SQLite\",\"SQLite\",\"SQLite\",\"SQLite / PostgreSQL / MySQL\",\"Windows\",\"SQLite\",\"SQLite\",\"SQLite\",\"SQLite\",\"macOS\",\"SQLite\",\"SQLite\",\"SQLite\",\"SQLite\",\"name: Test on: push: branches: - main jobs: test: runs-on: ${{ matrix.os }} strategy: matrix: os: [ubuntu-latest, windows-latest, macos-latest] python-version: [\\\"3.9\\\", \\\"3.10\\\", \\\"3.11\\\", \\\"3.12\\\"] db: [\\\"sqlite+aiosqlite:///db.sqlite3\\\"] include: - os: ubuntu-latest python-version: \\\"3.12\\\" db: postgresql+psycopg://postgres:postgres@localhost:5432/postgres - os: ubuntu-latest python-version: \\\"3.12\\\" db: mysql+aiomysql://mysql:mysql@localhost:3306/mymysql fail-fast: false env: SQLALCHEMY_DATABASE_URL: ${{ matrix.db }} services: postgresql: image: ${{ startsWith(matrix.db, 'postgresql') && 'postgres' || '' }} env: POSTGRES_USER: postgres POSTGRES_PASSWORD: postgres POSTGRES_DB: postgres ports: - 5432:5432 mysql: image: ${{ startsWith(matrix.db, 'mysql') && 'mysql' || '' }} env: MYSQL_ROOT_PASSWORD: mysql MYSQL_USER: mysql MYSQL_PASSWORD: mysql MYSQL_DATABASE: mymysql ports: - 3306:3306 steps: - uses: actions/checkout@v4 - uses: actions/setup-python@v5 with: python-version: ${{ matrix.python-version }} - name: Install dependencies run: pip install -r requirements.txt - name: Run migrations run: pipx run nb-cli orm upgrade - name: Run tests run: pytest\"]},\"2698\":{\"h\":\"开发者指南\",\"t\":[\"开发者指南内容较多，故分为了一个示例以及数个专题。 阅读（并且最好跟随实践）示例后，你将会对使用 nonebot-plugin-orm 开发插件有一个基本的认识。 如果想要更深入地学习关于 SQLAlchemy 和 Alembic 的知识，或者在使用过程中遇到了问题，可以查阅专题以及其官方文档。\"]},\"2699\":{\"h\":\"示例\"},\"2700\":{\"h\":\"模型定义\",\"t\":[\"首先，我们需要设计存储的数据的结构。 例如天气插件，需要存储什么地方 (location) 的天气是什么 (weather)。 其中，一个地方只会有一种天气，而不同地方可能有相同的天气。 所以，我们可以设计出如下的模型：\",\"from nonebot_plugin_orm import Model from sqlalchemy.orm import Mapped, mapped_column class Weather(Model): location: Mapped[str] = mapped_column(primary_key=True) weather: Mapped[str]\",\"其中，primary_key=True 意味着此列 (location) 是主键，即内容是唯一的且非空的。 每一个模型必须有至少一个主键。\",\"我们可以用以下代码检查模型生成的数据库模式是否正确：\",\"from sqlalchemy.schema import CreateTable print(CreateTable(Weather.__table__))\",\"CREATE TABLE weather_weather ( location VARCHAR NOT NULL, weather VARCHAR NOT NULL, CONSTRAINT pk_weather_weather PRIMARY KEY (location) )\",\"可以注意到表名是 weather_weather 而不是 Weather 或者 weather。 这是因为 nonebot-plugin-orm 会自动为模型生成一个表名，规则是：<插件模块名>_<类名小写>。\",\"你也可以通过指定 __tablename__ 属性来自定义表名：\",\"class Weather(Model): __tablename__ = \\\"weather\\\" ...\",\"CREATE TABLE weather ( ... )\",\"但是，并不推荐你这么做，因为这可能会导致不同插件间的表名重复，引发冲突。 特别是当你会发布插件时，你并不知道其他插件会不会使用相同的表名。\"]},\"2701\":{\"h\":\"首次迁移\",\"t\":[\"我们成功定义了模型，现在启动机器人试试吧：\",\"$ nb run 01-02 15:04:05 [SUCCESS] nonebot | NoneBot is initializing... 01-02 15:04:05 [ERROR] nonebot_plugin_orm | 启动检查失败 01-02 15:04:05 [ERROR] nonebot | Application startup failed. Exiting. Traceback (most recent call last): ... click.exceptions.UsageError: 检测到新的升级操作: [('add_table', Table('weather', MetaData(), Column('location', String(), table=<weather>, primary_key=True, nullable=False), Column('weather', String(), table=<weather>, nullable=False), schema=None))]\",\"咦，发生了什么？nonebot-plugin-orm 试图阻止我们启动机器人。 原来是我们定义了模型，但是数据库中并没有对应的表，这会导致插件不能正常运行。 所以，我们需要迁移数据库。\",\"首先，我们需要创建一个迁移脚本：\",\"nb orm revision -m \\\"first revision\\\" --branch-label weather\",\"其中，-m 参数是迁移脚本的描述，--branch-label 参数是迁移脚本的分支，一般为插件模块名。 执行命令过后，出现了一个 weather/migrations 目录，其中有一个 xxxxxxxxxxxx_first_revision.py 文件：\",\"weather ├── __init__.py ├── config.py └── migrations └── xxxxxxxxxxxx_first_revision.py\",\"这就是我们创建的迁移脚本，它记录了数据库模式的变化。 我们可以查看一下它的内容：\",\"\\\"\\\"\\\"first revision 迁移 ID: xxxxxxxxxxxx 父迁移: 创建时间: 2006-01-02 15:04:05.999999 \\\"\\\"\\\" from __future__ import annotations from collections.abc import Sequence import sqlalchemy as sa from alembic import op revision: str = \\\"xxxxxxxxxxxx\\\" down_revision: str | Sequence[str] | None = None branch_labels: str | Sequence[str] | None = (\\\"weather\\\",) depends_on: str | Sequence[str] | None = None def upgrade(name: str = \\\"\\\") -> None: if name: return # ### commands auto generated by Alembic - please adjust! ### op.create_table( \\\"weather_weather\\\", sa.Column(\\\"location\\\", sa.String(), nullable=False), sa.Column(\\\"weather\\\", sa.String(), nullable=False), sa.PrimaryKeyConstraint(\\\"location\\\", name=op.f(\\\"pk_weather_weather\\\")), info={\\\"bind_key\\\": \\\"weather\\\"}, ) # ### end Alembic commands ### def downgrade(name: str = \\\"\\\") -> None: if name: return # ### commands auto generated by Alembic - please adjust! ### op.drop_table(\\\"weather_weather\\\") # ### end Alembic commands ###\",\"可以注意到脚本的主体部分（其余是模版代码，请勿修改）是：\",\"# ### commands auto generated by Alembic - please adjust! ### op.create_table( # CREATE TABLE \\\"weather_weather\\\", # weather_weather sa.Column(\\\"location\\\", sa.String(), nullable=False), # location VARCHAR NOT NULL, sa.Column(\\\"weather\\\", sa.String(), nullable=False), # weather VARCHAR NOT NULL, sa.PrimaryKeyConstraint(\\\"location\\\", name=op.f(\\\"pk_weather_weather\\\")), # CONSTRAINT pk_weather_weather PRIMARY KEY (location) info={\\\"bind_key\\\": \\\"weather\\\"}, ) # ### end Alembic commands ###\",\"# ### commands auto generated by Alembic - please adjust! ### op.drop_table(\\\"weather_weather\\\") # DROP TABLE weather_weather; # ### end Alembic commands ###\",\"虽然我们不是很懂这些代码的意思，但是可以注意到它们几乎与 SQL 语句 (DDL) 一一对应。 显然，它们是用来创建和删除表的。\",\"我们还可以注意到，upgrade() 和 downgrade() 函数中的代码是互逆的。 也就是说，执行一次 upgrade() 函数，再执行一次 downgrade() 函数后，数据库的模式就会回到原来的状态。\",\"这就是迁移脚本的作用：记录数据库模式的变化，以便我们在不同的环境中（例如开发环境和生产环境）可复现地、可逆地同步数据库模式，正如 git 对我们的代码做的事情那样。\",\"对了，不要忘记还有一段注释：commands auto generated by Alembic - please adjust!。 它在提醒我们，这些代码是由 Alembic 自动生成的，我们应该检查它们，并且根据需要进行调整。\",\"注意\",\"迁移脚本冗长且繁琐，我们一般不会手写它们，而是由 Alembic 自动生成。 一般情况下，Alembic 足够智能，可以正确地生成迁移脚本。 但是，在复杂或有歧义的情况下，我们可能需要手动调整迁移脚本。 所以，永远要检查迁移脚本，并且在开发环境中测试！\",\"迁移脚本中任何一处错误都足以使数据付之东流！\",\"确定迁移脚本正确后，我们就可以执行迁移脚本，将数据库模式同步到数据库中：\",\"nb orm upgrade\",\"现在，我们可以正常启动机器人了。\",\"开发过程中，我们可能会频繁地修改模型，这意味着我们需要频繁地创建并执行迁移脚本，非常繁琐。 实际上，此时我们不在乎数据安全，只需要数据库模式与模型定义一致即可。 所以，我们可以关闭 nonebot-plugin-orm 的启动检查：\",\"ALEMBIC_STARTUP_CHECK=false\",\"现在，每次启动机器人时，数据库模式会自动与模型定义同步，无需手动迁移。\"]},\"2702\":{\"h\":\"会话管理\",\"t\":[\"我们已经成功定义了模型，并且迁移了数据库，现在可以开始使用数据库了……吗？ 并不能，因为模型只是数据结构的定义，并不能通过它操作数据（如果你曾经使用过 Tortoise ORM，可能会知道 await Weather.get(location=\\\"上海\\\") 这样的面向对象编程。 但是 SQLAlchemy 不同，选择了命令式编程）。 我们需要使用会话操作数据：\",\"from nonebot import on_command from nonebot.adapters import Message from nonebot.params import CommandArg from nonebot_plugin_orm import async_scoped_session weather = on_command(\\\"天气\\\") @weather.handle() async def _(session: async_scoped_session, args: Message = CommandArg()): location = args.extract_plain_text() if wea := await session.get(Weather, location): await weather.finish(f\\\"今天{location}的天气是{wea.weather}\\\") await weather.finish(f\\\"未查询到{location}的天气\\\")\",\"我们通过 session: async_scoped_session 依赖注入获得了一个会话，然后使用 await session.get(Weather, location) 查询数据库。async_scoped_session 是一个有作用域限制的会话，作用域为当前事件、当前事件响应器。 会话产生的模型实例（例如此处的 wea := await session.get(Weather, location)）作用域与会话相同。\",\"注意\",\"此处提到的“会话”指的是 ORM 会话，而非 NoneBot 会话，两者的生命周期也是不同的（NoneBot 会话的生命周期中可能包含多个事件，不同的事件也会有不同的事件响应器）。 具体而言，就是不要将 ORM 会话和模型实例存储在 NoneBot 会话状态中：\",\"from nonebot.params import ArgPlainText from nonebot.typing import T_State @weather.got(\\\"location\\\", prompt=\\\"请输入地名\\\") async def _(state: T_State, session: async_scoped_session, location: str = ArgPlainText()): wea = await session.get(Weather, location) if not wea: await weather.finish(f\\\"未查询到{location}的天气\\\") state[\\\"weather\\\"] = wea # 不要这么做，除非你知道自己在做什么\",\"当然非要这么做也不是不可以：\",\"@weather.handle() async def _(state: T_State, session: async_scoped_session): # 通过 await session.merge(state[\\\"weather\\\"]) 获得了此 ORM 会话中的相应模型实例， # 而非直接使用会话状态中的模型实例， # 因为先前的 ORM 会话已经关闭了。 wea = await session.merge(state[\\\"weather\\\"]) await weather.finish(f\\\"今天{state['location']}的天气是{wea.weather}\\\")\",\"当有数据更改时，我们需要提交事务，也要注意会话作用域问题：\",\"from nonebot.params import Depends async def get_weather( session: async_scoped_session, args: Message = CommandArg() ) -> Weather: location = args.extract_plain_text() if not (wea := await session.get(Weather, location)): wea = Weather(location=location, weather=\\\"未知\\\") session.add(wea) # await session.commit() # 不应该在其他地方提交事务 return wea @weather.handle() async def _(session: async_scoped_session, wea: Weather = Depends(get_weather)): await weather.send(f\\\"今天的天气是{wea.weather}\\\") await session.commit() # 而应该在事件响应器结束前提交事务\",\"当然我们也可以获得一个新的会话，不过此时就要手动管理会话了：\",\"from nonebot_plugin_orm import get_session async def get_weather(location: str) -> str: session = get_session() async with session.begin(): wea = await session.get(Weather, location) if not wea: wea = Weather(location=location, weather=\\\"未知\\\") session.add(wea) return wea.weather @weather.handle() async def _(args: Message = CommandArg()): wea = await get_weather(args.extract_plain_text()) await weather.send(f\\\"今天的天气是{wea}\\\")\"]},\"2703\":{\"h\":\"依赖注入\",\"t\":[\"在上面的示例中，我们都是通过会话获得数据的。 不过，我们也可以通过依赖注入获得数据：\",\"from sqlalchemy import select from nonebot.params import Depends from nonebot_plugin_orm import SQLDepends def extract_arg_plain_text(args: Message = CommandArg()) -> str: return args.extract_plain_text() @weather.handle() async def _( wea: Weather = SQLDepends( select(Weather).where(Weather.location == Depends(extract_arg_plain_text)) ), ): await weather.send(f\\\"今天的天气是{wea.weather}\\\")\",\"其中，SQLDepends 是一个特殊的依赖注入，它会根据类型标注和 SQL 语句提供数据，SQL 语句中也可以有子依赖。\",\"不同的类型标注也会获得不同形式的数据：\",\"from collections.abc import Sequence @weather.handle() async def _( weas: Sequence[Weather] = SQLDepends( select(Weather).where(Weather.weather == Depends(extract_arg_plain_text)) ), ): await weather.send(f\\\"今天的天气是{weas[0].weather}的城市有{'，'.join(wea.location for wea in weas)}\\\")\",\"支持的类型标注请参见 依赖注入。\",\"我们也可以像 类作为依赖 那样，在类属性中声明子依赖：\",\"from collections.abc import Sequence class Weather(Model): location: Mapped[str] = mapped_column(primary_key=True) weather: Mapped[str] = Depends(extract_arg_plain_text) # weather: Annotated[Mapped[str], Depends(extract_arg_plain_text)] # Annotated 支持 @weather.handle() async def _(weas: Sequence[Weather]): await weather.send( f\\\"今天的天气是{weas[0].weather}的城市有{'，'.join(wea.location for wea in weas)}\\\" )\"]},\"2704\":{\"h\":\"依赖注入\",\"t\":[\"nonebot-plugin-orm 提供了强大且灵活的依赖注入，可以方便地帮助你获取数据库会话和查询数据。\"]},\"2705\":{\"h\":\"数据库会话\"},\"2706\":{\"h\":\"AsyncSession\",\"t\":[\"新数据库会话，常用于有独立的数据库操作逻辑的插件。\",\"from nonebot import on_message from nonebot.params import Depends from nonebot_plugin_orm import AsyncSession, Model, async_scoped_session from sqlalchemy.orm import Mapped, mapped_column message = on_message() class Message(Model): id: Mapped[int] = mapped_column(primary_key=True, autoincrement=True) async def get_message(session: AsyncSession) -> Message: # 等价于 session = get_session() async with session: msg = Message() session.add(msg) await session.commit() await session.refresh(msg) return msg @message.handle() async def _(session: async_scoped_session, msg: Message = Depends(get_message)): await session.rollback() # 无法回退 get_message() 中的更改 await message.send(str(msg.id)) # msg 被存储，msg.id 递增\"]},\"2707\":{\"h\":\"async_scoped_session\",\"t\":[\"数据库作用域会话，常用于事件响应器和有与响应逻辑相关的数据库操作逻辑的插件。\",\"from nonebot import on_message from nonebot.params import Depends from nonebot_plugin_orm import Model, async_scoped_session from sqlalchemy.orm import Mapped, mapped_column message = on_message() class Message(Model): id: Mapped[int] = mapped_column(primary_key=True, autoincrement=True) async def get_message(session: async_scoped_session) -> Message: # 等价于 session = get_scoped_session() msg = Message() session.add(msg) await session.flush() await session.refresh(msg) return msg @message.handle() async def _(session: async_scoped_session, msg: Message = Depends(get_message)): await session.rollback() # 可以回退 get_message() 中的更改 await message.send(str(msg.id)) # msg 没有被存储，msg.id 不变\"]},\"2708\":{\"h\":\"查询数据\"},\"2709\":{\"h\":\"Model\",\"t\":[\"支持类作为依赖。\",\"from typing import Annotated from nonebot.params import Depends from nonebot_plugin_orm import Model from sqlalchemy.orm import Mapped, mapped_column def get_id() -> int: ... class Message(Model): id: Annotated[Mapped[int], Depends(get_id)] = mapped_column( primary_key=True, autoincrement=True ) async def _(msg: Message): # 等价于 msg = ( # await (await session.stream(select(Message).where(Message.id == get_id()))) # .scalars() # .one_or_none() # ) ...\"]},\"2710\":{\"h\":\"SQLDepends\",\"t\":[\"参数为一个 SQL 语句，决定依赖注入的内容，SQL 语句中可以使用子依赖。\",\"from nonebot.params import Depends from nonebot_plugin_orm import Model, SQLDepends from sqlalchemy import select def get_id() -> int: ... async def _( model: Model = SQLDepends(select(Model).where(Model.id == Depends(get_id))), ): ...\",\"参数可以是任意 SQL 语句，但不建议使用 select 以外的语句，因为语句可能没有返回值（returning 除外），而且代码不清晰。\"]},\"2711\":{\"h\":\"类型标注\",\"t\":[\"类型标注决定依赖注入的数据结构，主要影响以下几个层面：\",\"迭代器（session.execute()）或异步迭代器（session.stream()）\",\"标量（session.execute().scalars()）或元组（session.execute()）\",\"一个（session.execute().one_or_none()，注意 None 时可能触发 重载）或全部（session.execute() / session.execute().all()）\",\"连续（session().execute()）或分块（session.execute().partitions()）\",\"具体如下（可以使用父类型作为类型标注）：\",\"async def _(rows_partitions: AsyncIterator[Sequence[Tuple[Model, ...]]]): # 等价于 rows_partitions = await (await session.stream(sql).partitions()) async for partition in rows_partitions: for row in partition: print(row[0], row[1], ...)\",\"async def _(model_partitions: AsyncIterator[Sequence[Model]]): # 等价于 model_partitions = await (await session.stream(sql).scalars().partitions()) async for partition in model_partitions: for model in partition: print(model)\",\"async def _(row_partitions: Iterator[Sequence[Tuple[Model, ...]]]): # 等价于 row_partitions = await session.execute(sql).partitions() for partition in rows_partitions: for row in partition: print(row[0], row[1], ...)\",\"async def _(model_partitions: Iterator[Sequence[Model]]): # 等价于 model_partitions = await (await session.execute(sql).scalars().partitions()) for partition in model_partitions: for model in partition: print(model)\",\"async def _(rows: sa_async.AsyncResult[Tuple[Model, ...]]): # 等价于 rows = await session.stream(sql) async for row in rows: print(row[0], row[1], ...)\",\"async def _(models: sa_async.AsyncScalarResult[Model]): # 等价于 models = await session.stream(sql).scalars() async for model in models: print(model)\",\"async def _(rows: sa.Result[Tuple[Model, ...]]): # 等价于 rows = await session.execute(sql) for row in rows: print(row[0], row[1], ...)\",\"async def _(models: sa.ScalarResult[Model]): # 等价于 models = await session.execute(sql).scalars() for model in models: print(model)\",\"async def _(rows: Sequence[Tuple[Model, ...]]): # 等价于 rows = await (await session.stream(sql).all()) for row in rows: print(row[0], row[1], ...)\",\"async def _(models: Sequence[Model]): # 等价于 models = await (await session.stream(sql).scalars().all()) for model in models: print(model)\",\"async def _(row: Tuple[Model, ...]): # 等价于 row = await (await session.stream(sql).one_or_none()) print(row[0], row[1], ...)\",\"async def _(model: Model): # 等价于 model = await (await session.stream(sql).scalars().one_or_none()) print(model)\"]},\"2712\":{\"h\":\"测试\",\"t\":[\"百思不如一试，测试是发现问题的最佳方式。\",\"不同的用户会有不同的配置，为了提高项目的兼容性，我们需要在不同数据库后端上测试。 手动进行大量的、重复的测试不可靠，也不现实，因此我们推荐使用 GitHub Actions 进行自动化测试：\",\"name: Test on: push: branches: - main jobs: test: runs-on: ubuntu-latest strategy: matrix: db: - sqlite+aiosqlite:///db.sqlite3 - postgresql+psycopg://postgres:postgres@localhost:5432/postgres - mysql+aiomysql://mysql:mysql@localhost:3306/mymysql fail-fast: false env: SQLALCHEMY_DATABASE_URL: ${{ matrix.db }} services: postgresql: image: ${{ startsWith(matrix.db, 'postgresql') && 'postgres' || '' }} env: POSTGRES_USER: postgres POSTGRES_PASSWORD: postgres POSTGRES_DB: postgres ports: - 5432:5432 mysql: image: ${{ startsWith(matrix.db, 'mysql') && 'mysql' || '' }} env: MYSQL_ROOT_PASSWORD: mysql MYSQL_USER: mysql MYSQL_PASSWORD: mysql MYSQL_DATABASE: mymysql ports: - 3306:3306 steps: - uses: actions/checkout@v4 - uses: actions/setup-python@v5 - name: Install dependencies run: pip install -r requirements.txt - name: Run migrations run: pipx run nb-cli orm upgrade - name: Run tests run: pytest\",\"如果项目还需要考虑跨平台和跨 Python 版本兼容，测试矩阵中还需要增加这两个维度。 但是，我们没必要在所有平台和 Python 版本上运行所有数据库的测试，因为很显然，PostgreSQL 和 MySQL 这类独立的数据库后端不会受平台和 Python 影响，而且 Github Actions 的非 Linux 平台不支持运行独立服务：\",\"Python 3.9\",\"Python 3.10\",\"Python 3.11\",\"Python 3.12\",\"Linux\",\"SQLite\",\"SQLite\",\"SQLite\",\"SQLite / PostgreSQL / MySQL\",\"Windows\",\"SQLite\",\"SQLite\",\"SQLite\",\"SQLite\",\"macOS\",\"SQLite\",\"SQLite\",\"SQLite\",\"SQLite\",\"name: Test on: push: branches: - main jobs: test: runs-on: ${{ matrix.os }} strategy: matrix: os: [ubuntu-latest, windows-latest, macos-latest] python-version: [\\\"3.9\\\", \\\"3.10\\\", \\\"3.11\\\", \\\"3.12\\\"] db: [\\\"sqlite+aiosqlite:///db.sqlite3\\\"] include: - os: ubuntu-latest python-version: \\\"3.12\\\" db: postgresql+psycopg://postgres:postgres@localhost:5432/postgres - os: ubuntu-latest python-version: \\\"3.12\\\" db: mysql+aiomysql://mysql:mysql@localhost:3306/mymysql fail-fast: false env: SQLALCHEMY_DATABASE_URL: ${{ matrix.db }} services: postgresql: image: ${{ startsWith(matrix.db, 'postgresql') && 'postgres' || '' }} env: POSTGRES_USER: postgres POSTGRES_PASSWORD: postgres POSTGRES_DB: postgres ports: - 5432:5432 mysql: image: ${{ startsWith(matrix.db, 'mysql') && 'mysql' || '' }} env: MYSQL_ROOT_PASSWORD: mysql MYSQL_USER: mysql MYSQL_PASSWORD: mysql MYSQL_DATABASE: mymysql ports: - 3306:3306 steps: - uses: actions/checkout@v4 - uses: actions/setup-python@v5 with: python-version: ${{ matrix.python-version }} - name: Install dependencies run: pip install -r requirements.txt - name: Run migrations run: pipx run nb-cli orm upgrade - name: Run tests run: pytest\"]},\"2713\":{\"h\":\"开发者指南\",\"t\":[\"开发者指南内容较多，故分为了一个示例以及数个专题。 阅读（并且最好跟随实践）示例后，你将会对使用 nonebot-plugin-orm 开发插件有一个基本的认识。 如果想要更深入地学习关于 SQLAlchemy 和 Alembic 的知识，或者在使用过程中遇到了问题，可以查阅专题以及其官方文档。\"]},\"2714\":{\"h\":\"示例\"},\"2715\":{\"h\":\"模型定义\",\"t\":[\"首先，我们需要设计存储的数据的结构。 例如天气插件，需要存储什么地方 (location) 的天气是什么 (weather)。 其中，一个地方只会有一种天气，而不同地方可能有相同的天气。 所以，我们可以设计出如下的模型：\",\"from nonebot_plugin_orm import Model from sqlalchemy.orm import Mapped, mapped_column class Weather(Model): location: Mapped[str] = mapped_column(primary_key=True) weather: Mapped[str]\",\"其中，primary_key=True 意味着此列 (location) 是主键，即内容是唯一的且非空的。 每一个模型必须有至少一个主键。\",\"我们可以用以下代码检查模型生成的数据库模式是否正确：\",\"from sqlalchemy.schema import CreateTable print(CreateTable(Weather.__table__))\",\"CREATE TABLE weather_weather ( location VARCHAR NOT NULL, weather VARCHAR NOT NULL, CONSTRAINT pk_weather_weather PRIMARY KEY (location) )\",\"可以注意到表名是 weather_weather 而不是 Weather 或者 weather。 这是因为 nonebot-plugin-orm 会自动为模型生成一个表名，规则是：<插件模块名>_<类名小写>。\",\"你也可以通过指定 __tablename__ 属性来自定义表名：\",\"class Weather(Model): __tablename__ = \\\"weather\\\" ...\",\"CREATE TABLE weather ( ... )\",\"但是，并不推荐你这么做，因为这可能会导致不同插件间的表名重复，引发冲突。 特别是当你会发布插件时，你并不知道其他插件会不会使用相同的表名。\"]},\"2716\":{\"h\":\"首次迁移\",\"t\":[\"我们成功定义了模型，现在启动机器人试试吧：\",\"$ nb run 01-02 15:04:05 [SUCCESS] nonebot | NoneBot is initializing... 01-02 15:04:05 [ERROR] nonebot_plugin_orm | 启动检查失败 01-02 15:04:05 [ERROR] nonebot | Application startup failed. Exiting. Traceback (most recent call last): ... click.exceptions.UsageError: 检测到新的升级操作: [('add_table', Table('weather', MetaData(), Column('location', String(), table=<weather>, primary_key=True, nullable=False), Column('weather', String(), table=<weather>, nullable=False), schema=None))]\",\"咦，发生了什么？nonebot-plugin-orm 试图阻止我们启动机器人。 原来是我们定义了模型，但是数据库中并没有对应的表，这会导致插件不能正常运行。 所以，我们需要迁移数据库。\",\"首先，我们需要创建一个迁移脚本：\",\"nb orm revision -m \\\"first revision\\\" --branch-label weather\",\"其中，-m 参数是迁移脚本的描述，--branch-label 参数是迁移脚本的分支，一般为插件模块名。 执行命令过后，出现了一个 weather/migrations 目录，其中有一个 xxxxxxxxxxxx_first_revision.py 文件：\",\"weather ├── __init__.py ├── config.py └── migrations └── xxxxxxxxxxxx_first_revision.py\",\"这就是我们创建的迁移脚本，它记录了数据库模式的变化。 我们可以查看一下它的内容：\",\"\\\"\\\"\\\"first revision 迁移 ID: xxxxxxxxxxxx 父迁移: 创建时间: 2006-01-02 15:04:05.999999 \\\"\\\"\\\" from __future__ import annotations from collections.abc import Sequence import sqlalchemy as sa from alembic import op revision: str = \\\"xxxxxxxxxxxx\\\" down_revision: str | Sequence[str] | None = None branch_labels: str | Sequence[str] | None = (\\\"weather\\\",) depends_on: str | Sequence[str] | None = None def upgrade(name: str = \\\"\\\") -> None: if name: return # ### commands auto generated by Alembic - please adjust! ### op.create_table( \\\"weather_weather\\\", sa.Column(\\\"location\\\", sa.String(), nullable=False), sa.Column(\\\"weather\\\", sa.String(), nullable=False), sa.PrimaryKeyConstraint(\\\"location\\\", name=op.f(\\\"pk_weather_weather\\\")), info={\\\"bind_key\\\": \\\"weather\\\"}, ) # ### end Alembic commands ### def downgrade(name: str = \\\"\\\") -> None: if name: return # ### commands auto generated by Alembic - please adjust! ### op.drop_table(\\\"weather_weather\\\") # ### end Alembic commands ###\",\"可以注意到脚本的主体部分（其余是模版代码，请勿修改）是：\",\"# ### commands auto generated by Alembic - please adjust! ### op.create_table( # CREATE TABLE \\\"weather_weather\\\", # weather_weather sa.Column(\\\"location\\\", sa.String(), nullable=False), # location VARCHAR NOT NULL, sa.Column(\\\"weather\\\", sa.String(), nullable=False), # weather VARCHAR NOT NULL, sa.PrimaryKeyConstraint(\\\"location\\\", name=op.f(\\\"pk_weather_weather\\\")), # CONSTRAINT pk_weather_weather PRIMARY KEY (location) info={\\\"bind_key\\\": \\\"weather\\\"}, ) # ### end Alembic commands ###\",\"# ### commands auto generated by Alembic - please adjust! ### op.drop_table(\\\"weather_weather\\\") # DROP TABLE weather_weather; # ### end Alembic commands ###\",\"虽然我们不是很懂这些代码的意思，但是可以注意到它们几乎与 SQL 语句 (DDL) 一一对应。 显然，它们是用来创建和删除表的。\",\"我们还可以注意到，upgrade() 和 downgrade() 函数中的代码是互逆的。 也就是说，执行一次 upgrade() 函数，再执行一次 downgrade() 函数后，数据库的模式就会回到原来的状态。\",\"这就是迁移脚本的作用：记录数据库模式的变化，以便我们在不同的环境中（例如开发环境和生产环境）可复现地、可逆地同步数据库模式，正如 git 对我们的代码做的事情那样。\",\"对了，不要忘记还有一段注释：commands auto generated by Alembic - please adjust!。 它在提醒我们，这些代码是由 Alembic 自动生成的，我们应该检查它们，并且根据需要进行调整。\",\"注意\",\"迁移脚本冗长且繁琐，我们一般不会手写它们，而是由 Alembic 自动生成。 一般情况下，Alembic 足够智能，可以正确地生成迁移脚本。 但是，在复杂或有歧义的情况下，我们可能需要手动调整迁移脚本。 所以，永远要检查迁移脚本，并且在开发环境中测试！\",\"迁移脚本中任何一处错误都足以使数据付之东流！\",\"确定迁移脚本正确后，我们就可以执行迁移脚本，将数据库模式同步到数据库中：\",\"nb orm upgrade\",\"现在，我们可以正常启动机器人了。\",\"开发过程中，我们可能会频繁地修改模型，这意味着我们需要频繁地创建并执行迁移脚本，非常繁琐。 实际上，此时我们不在乎数据安全，只需要数据库模式与模型定义一致即可。 所以，我们可以关闭 nonebot-plugin-orm 的启动检查：\",\"ALEMBIC_STARTUP_CHECK=false\",\"现在，每次启动机器人时，数据库模式会自动与模型定义同步，无需手动迁移。\"]},\"2717\":{\"h\":\"会话管理\",\"t\":[\"我们已经成功定义了模型，并且迁移了数据库，现在可以开始使用数据库了……吗？ 并不能，因为模型只是数据结构的定义，并不能通过它操作数据（如果你曾经使用过 Tortoise ORM，可能会知道 await Weather.get(location=\\\"上海\\\") 这样的面向对象编程。 但是 SQLAlchemy 不同，选择了命令式编程）。 我们需要使用会话操作数据：\",\"from nonebot import on_command from nonebot.adapters import Message from nonebot.params import CommandArg from nonebot_plugin_orm import async_scoped_session weather = on_command(\\\"天气\\\") @weather.handle() async def _(session: async_scoped_session, args: Message = CommandArg()): location = args.extract_plain_text() if wea := await session.get(Weather, location): await weather.finish(f\\\"今天{location}的天气是{wea.weather}\\\") await weather.finish(f\\\"未查询到{location}的天气\\\")\",\"我们通过 session: async_scoped_session 依赖注入获得了一个会话，然后使用 await session.get(Weather, location) 查询数据库。async_scoped_session 是一个有作用域限制的会话，作用域为当前事件、当前事件响应器。 会话产生的模型实例（例如此处的 wea := await session.get(Weather, location)）作用域与会话相同。\",\"注意\",\"此处提到的“会话”指的是 ORM 会话，而非 NoneBot 会话，两者的生命周期也是不同的（NoneBot 会话的生命周期中可能包含多个事件，不同的事件也会有不同的事件响应器）。 具体而言，就是不要将 ORM 会话和模型实例存储在 NoneBot 会话状态中：\",\"from nonebot.params import ArgPlainText from nonebot.typing import T_State @weather.got(\\\"location\\\", prompt=\\\"请输入地名\\\") async def _(state: T_State, session: async_scoped_session, location: str = ArgPlainText()): wea = await session.get(Weather, location) if not wea: await weather.finish(f\\\"未查询到{location}的天气\\\") state[\\\"weather\\\"] = wea # 不要这么做，除非你知道自己在做什么\",\"当然非要这么做也不是不可以：\",\"@weather.handle() async def _(state: T_State, session: async_scoped_session): # 通过 await session.merge(state[\\\"weather\\\"]) 获得了此 ORM 会话中的相应模型实例， # 而非直接使用会话状态中的模型实例， # 因为先前的 ORM 会话已经关闭了。 wea = await session.merge(state[\\\"weather\\\"]) await weather.finish(f\\\"今天{state['location']}的天气是{wea.weather}\\\")\",\"当有数据更改时，我们需要提交事务，也要注意会话作用域问题：\",\"from nonebot.params import Depends async def get_weather( session: async_scoped_session, args: Message = CommandArg() ) -> Weather: location = args.extract_plain_text() if not (wea := await session.get(Weather, location)): wea = Weather(location=location, weather=\\\"未知\\\") session.add(wea) # await session.commit() # 不应该在其他地方提交事务 return wea @weather.handle() async def _(session: async_scoped_session, wea: Weather = Depends(get_weather)): await weather.send(f\\\"今天的天气是{wea.weather}\\\") await session.commit() # 而应该在事件响应器结束前提交事务\",\"当然我们也可以获得一个新的会话，不过此时就要手动管理会话了：\",\"from nonebot_plugin_orm import get_session async def get_weather(location: str) -> str: session = get_session() async with session.begin(): wea = await session.get(Weather, location) if not wea: wea = Weather(location=location, weather=\\\"未知\\\") session.add(wea) return wea.weather @weather.handle() async def _(args: Message = CommandArg()): wea = await get_weather(args.extract_plain_text()) await weather.send(f\\\"今天的天气是{wea}\\\")\"]},\"2718\":{\"h\":\"依赖注入\",\"t\":[\"在上面的示例中，我们都是通过会话获得数据的。 不过，我们也可以通过依赖注入获得数据：\",\"from sqlalchemy import select from nonebot.params import Depends from nonebot_plugin_orm import SQLDepends def extract_arg_plain_text(args: Message = CommandArg()) -> str: return args.extract_plain_text() @weather.handle() async def _( wea: Weather = SQLDepends( select(Weather).where(Weather.location == Depends(extract_arg_plain_text)) ), ): await weather.send(f\\\"今天的天气是{wea.weather}\\\")\",\"其中，SQLDepends 是一个特殊的依赖注入，它会根据类型标注和 SQL 语句提供数据，SQL 语句中也可以有子依赖。\",\"不同的类型标注也会获得不同形式的数据：\",\"from collections.abc import Sequence @weather.handle() async def _( weas: Sequence[Weather] = SQLDepends( select(Weather).where(Weather.weather == Depends(extract_arg_plain_text)) ), ): await weather.send(f\\\"今天的天气是{weas[0].weather}的城市有{'，'.join(wea.location for wea in weas)}\\\")\",\"支持的类型标注请参见 依赖注入。\",\"我们也可以像 类作为依赖 那样，在类属性中声明子依赖：\",\"from collections.abc import Sequence class Weather(Model): location: Mapped[str] = mapped_column(primary_key=True) weather: Mapped[str] = Depends(extract_arg_plain_text) # weather: Annotated[Mapped[str], Depends(extract_arg_plain_text)] # Annotated 支持 @weather.handle() async def _(weas: Sequence[Weather]): await weather.send( f\\\"今天的天气是{weas[0].weather}的城市有{'，'.join(wea.location for wea in weas)}\\\" )\"]},\"2719\":{\"h\":\"依赖注入\",\"t\":[\"nonebot-plugin-orm 提供了强大且灵活的依赖注入，可以方便地帮助你获取数据库会话和查询数据。\"]},\"2720\":{\"h\":\"数据库会话\"},\"2721\":{\"h\":\"AsyncSession\",\"t\":[\"新数据库会话，常用于有独立的数据库操作逻辑的插件。\",\"from nonebot import on_message from nonebot.params import Depends from nonebot_plugin_orm import AsyncSession, Model, async_scoped_session from sqlalchemy.orm import Mapped, mapped_column message = on_message() class Message(Model): id: Mapped[int] = mapped_column(primary_key=True, autoincrement=True) async def get_message(session: AsyncSession) -> Message: # 等价于 session = get_session() async with session: msg = Message() session.add(msg) await session.commit() await session.refresh(msg) return msg @message.handle() async def _(session: async_scoped_session, msg: Message = Depends(get_message)): await session.rollback() # 无法回退 get_message() 中的更改 await message.send(str(msg.id)) # msg 被存储，msg.id 递增\"]},\"2722\":{\"h\":\"async_scoped_session\",\"t\":[\"数据库作用域会话，常用于事件响应器和有与响应逻辑相关的数据库操作逻辑的插件。\",\"from nonebot import on_message from nonebot.params import Depends from nonebot_plugin_orm import Model, async_scoped_session from sqlalchemy.orm import Mapped, mapped_column message = on_message() class Message(Model): id: Mapped[int] = mapped_column(primary_key=True, autoincrement=True) async def get_message(session: async_scoped_session) -> Message: # 等价于 session = get_scoped_session() msg = Message() session.add(msg) await session.flush() await session.refresh(msg) return msg @message.handle() async def _(session: async_scoped_session, msg: Message = Depends(get_message)): await session.rollback() # 可以回退 get_message() 中的更改 await message.send(str(msg.id)) # msg 没有被存储，msg.id 不变\"]},\"2723\":{\"h\":\"查询数据\"},\"2724\":{\"h\":\"Model\",\"t\":[\"支持类作为依赖。\",\"from typing import Annotated from nonebot.params import Depends from nonebot_plugin_orm import Model from sqlalchemy.orm import Mapped, mapped_column def get_id() -> int: ... class Message(Model): id: Annotated[Mapped[int], Depends(get_id)] = mapped_column( primary_key=True, autoincrement=True ) async def _(msg: Message): # 等价于 msg = ( # await (await session.stream(select(Message).where(Message.id == get_id()))) # .scalars() # .one_or_none() # ) ...\"]},\"2725\":{\"h\":\"SQLDepends\",\"t\":[\"参数为一个 SQL 语句，决定依赖注入的内容，SQL 语句中可以使用子依赖。\",\"from nonebot.params import Depends from nonebot_plugin_orm import Model, SQLDepends from sqlalchemy import select def get_id() -> int: ... async def _( model: Model = SQLDepends(select(Model).where(Model.id == Depends(get_id))), ): ...\",\"参数可以是任意 SQL 语句，但不建议使用 select 以外的语句，因为语句可能没有返回值（returning 除外），而且代码不清晰。\"]},\"2726\":{\"h\":\"类型标注\",\"t\":[\"类型标注决定依赖注入的数据结构，主要影响以下几个层面：\",\"迭代器（session.execute()）或异步迭代器（session.stream()）\",\"标量（session.execute().scalars()）或元组（session.execute()）\",\"一个（session.execute().one_or_none()，注意 None 时可能触发 重载）或全部（session.execute() / session.execute().all()）\",\"连续（session().execute()）或分块（session.execute().partitions()）\",\"具体如下（可以使用父类型作为类型标注）：\",\"async def _(rows_partitions: AsyncIterator[Sequence[Tuple[Model, ...]]]): # 等价于 rows_partitions = await (await session.stream(sql).partitions()) async for partition in rows_partitions: for row in partition: print(row[0], row[1], ...)\",\"async def _(model_partitions: AsyncIterator[Sequence[Model]]): # 等价于 model_partitions = await (await session.stream(sql).scalars().partitions()) async for partition in model_partitions: for model in partition: print(model)\",\"async def _(row_partitions: Iterator[Sequence[Tuple[Model, ...]]]): # 等价于 row_partitions = await session.execute(sql).partitions() for partition in rows_partitions: for row in partition: print(row[0], row[1], ...)\",\"async def _(model_partitions: Iterator[Sequence[Model]]): # 等价于 model_partitions = await (await session.execute(sql).scalars().partitions()) for partition in model_partitions: for model in partition: print(model)\",\"async def _(rows: sa_async.AsyncResult[Tuple[Model, ...]]): # 等价于 rows = await session.stream(sql) async for row in rows: print(row[0], row[1], ...)\",\"async def _(models: sa_async.AsyncScalarResult[Model]): # 等价于 models = await session.stream(sql).scalars() async for model in models: print(model)\",\"async def _(rows: sa.Result[Tuple[Model, ...]]): # 等价于 rows = await session.execute(sql) for row in rows: print(row[0], row[1], ...)\",\"async def _(models: sa.ScalarResult[Model]): # 等价于 models = await session.execute(sql).scalars() for model in models: print(model)\",\"async def _(rows: Sequence[Tuple[Model, ...]]): # 等价于 rows = await (await session.stream(sql).all()) for row in rows: print(row[0], row[1], ...)\",\"async def _(models: Sequence[Model]): # 等价于 models = await (await session.stream(sql).scalars().all()) for model in models: print(model)\",\"async def _(row: Tuple[Model, ...]): # 等价于 row = await (await session.stream(sql).one_or_none()) print(row[0], row[1], ...)\",\"async def _(model: Model): # 等价于 model = await (await session.stream(sql).scalars().one_or_none()) print(model)\"]},\"2727\":{\"h\":\"测试\",\"t\":[\"百思不如一试，测试是发现问题的最佳方式。\",\"不同的用户会有不同的配置，为了提高项目的兼容性，我们需要在不同数据库后端上测试。 手动进行大量的、重复的测试不可靠，也不现实，因此我们推荐使用 GitHub Actions 进行自动化测试：\",\"name: Test on: push: branches: - main jobs: test: runs-on: ubuntu-latest strategy: matrix: db: - sqlite+aiosqlite:///db.sqlite3 - postgresql+psycopg://postgres:postgres@localhost:5432/postgres - mysql+aiomysql://mysql:mysql@localhost:3306/mymysql fail-fast: false env: SQLALCHEMY_DATABASE_URL: ${{ matrix.db }} services: postgresql: image: ${{ startsWith(matrix.db, 'postgresql') && 'postgres' || '' }} env: POSTGRES_USER: postgres POSTGRES_PASSWORD: postgres POSTGRES_DB: postgres ports: - 5432:5432 mysql: image: ${{ startsWith(matrix.db, 'mysql') && 'mysql' || '' }} env: MYSQL_ROOT_PASSWORD: mysql MYSQL_USER: mysql MYSQL_PASSWORD: mysql MYSQL_DATABASE: mymysql ports: - 3306:3306 steps: - uses: actions/checkout@v4 - uses: actions/setup-python@v5 - name: Install dependencies run: pip install -r requirements.txt - name: Run migrations run: pipx run nb-cli orm upgrade - name: Run tests run: pytest\",\"如果项目还需要考虑跨平台和跨 Python 版本兼容，测试矩阵中还需要增加这两个维度。 但是，我们没必要在所有平台和 Python 版本上运行所有数据库的测试，因为很显然，PostgreSQL 和 MySQL 这类独立的数据库后端不会受平台和 Python 影响，而且 Github Actions 的非 Linux 平台不支持运行独立服务：\",\"Python 3.9\",\"Python 3.10\",\"Python 3.11\",\"Python 3.12\",\"Linux\",\"SQLite\",\"SQLite\",\"SQLite\",\"SQLite / PostgreSQL / MySQL\",\"Windows\",\"SQLite\",\"SQLite\",\"SQLite\",\"SQLite\",\"macOS\",\"SQLite\",\"SQLite\",\"SQLite\",\"SQLite\",\"name: Test on: push: branches: - main jobs: test: runs-on: ${{ matrix.os }} strategy: matrix: os: [ubuntu-latest, windows-latest, macos-latest] python-version: [\\\"3.9\\\", \\\"3.10\\\", \\\"3.11\\\", \\\"3.12\\\"] db: [\\\"sqlite+aiosqlite:///db.sqlite3\\\"] include: - os: ubuntu-latest python-version: \\\"3.12\\\" db: postgresql+psycopg://postgres:postgres@localhost:5432/postgres - os: ubuntu-latest python-version: \\\"3.12\\\" db: mysql+aiomysql://mysql:mysql@localhost:3306/mymysql fail-fast: false env: SQLALCHEMY_DATABASE_URL: ${{ matrix.db }} services: postgresql: image: ${{ startsWith(matrix.db, 'postgresql') && 'postgres' || '' }} env: POSTGRES_USER: postgres POSTGRES_PASSWORD: postgres POSTGRES_DB: postgres ports: - 5432:5432 mysql: image: ${{ startsWith(matrix.db, 'mysql') && 'mysql' || '' }} env: MYSQL_ROOT_PASSWORD: mysql MYSQL_USER: mysql MYSQL_PASSWORD: mysql MYSQL_DATABASE: mymysql ports: - 3306:3306 steps: - uses: actions/checkout@v4 - uses: actions/setup-python@v5 with: python-version: ${{ matrix.python-version }} - name: Install dependencies run: pip install -r requirements.txt - name: Run migrations run: pipx run nb-cli orm upgrade - name: Run tests run: pytest\"]},\"2728\":{\"h\":\"\",\"t\":[\"{ \\\"position\\\": 15 }\"]},\"2729\":{\"h\":\"\",\"t\":[\"{ \\\"position\\\": 13 }\"]},\"2730\":{\"h\":\"\",\"t\":[\"{ \\\"position\\\": 14 }\"]},\"2731\":{\"h\":\"\",\"t\":[\"{ \\\"position\\\": 12 }\"]},\"2732\":{\"h\":\"\",\"t\":[\"{ \\\"label\\\": \\\"Alconna 命令解析拓展\\\", \\\"position\\\": 6 }\"]},\"2733\":{\"h\":\"\",\"t\":[\"{ \\\"label\\\": \\\"数据库\\\", \\\"position\\\": 7 }\"]},\"2734\":{\"h\":\"\",\"t\":[\"{ \\\"label\\\": \\\"单元测试\\\", \\\"position\\\": 5 }\"]},\"2735\":{\"h\":\"\",\"t\":[\"{ \\\"position\\\": 15 }\"]},\"2736\":{\"h\":\"\",\"t\":[\"{ \\\"position\\\": 13 }\"]},\"2737\":{\"h\":\"\",\"t\":[\"{ \\\"position\\\": 14 }\"]},\"2738\":{\"h\":\"\",\"t\":[\"{ \\\"position\\\": 12 }\"]},\"2739\":{\"h\":\"\",\"t\":[\"{ \\\"label\\\": \\\"Alconna 命令解析拓展\\\", \\\"position\\\": 6 }\"]},\"2740\":{\"h\":\"\",\"t\":[\"{ \\\"label\\\": \\\"数据库\\\", \\\"position\\\": 7 }\"]},\"2741\":{\"h\":\"\",\"t\":[\"{ \\\"label\\\": \\\"单元测试\\\", \\\"position\\\": 5 }\"]},\"2742\":{\"h\":\"\",\"t\":[\"{ \\\"position\\\": 15 }\"]},\"2743\":{\"h\":\"\",\"t\":[\"{ \\\"position\\\": 13 }\"]},\"2744\":{\"h\":\"\",\"t\":[\"{ \\\"position\\\": 14 }\"]},\"2745\":{\"h\":\"\",\"t\":[\"{ \\\"position\\\": 12 }\"]},\"2746\":{\"h\":\"\",\"t\":[\"{ \\\"label\\\": \\\"Alconna 命令解析拓展\\\", \\\"position\\\": 6 }\"]},\"2747\":{\"h\":\"\",\"t\":[\"{ \\\"label\\\": \\\"数据库\\\", \\\"position\\\": 7 }\"]},\"2748\":{\"h\":\"\",\"t\":[\"{ \\\"label\\\": \\\"单元测试\\\", \\\"position\\\": 5 }\"]},\"2749\":{\"h\":\"\",\"t\":[\"{ \\\"label\\\": \\\"开发者指南\\\", \\\"position\\\": 3 }\"]},\"2750\":{\"h\":\"\",\"t\":[\"{ \\\"label\\\": \\\"开发者指南\\\", \\\"position\\\": 3 }\"]},\"2751\":{\"h\":\"\",\"t\":[\"{ \\\"label\\\": \\\"开发者指南\\\", \\\"position\\\": 3 }\"]},\"2752\":{\"h\":\"\",\"t\":[\"404 Not Found\"]},\"2753\":{\"h\":\"\"},\"2754\":{\"h\":\"Advanced\"},\"2755\":{\"h\":\"Appendices\"},\"2756\":{\"h\":\"Best Practice\"},\"2757\":{\"h\":\"Community\"},\"2758\":{\"h\":\"Developer\"},\"2759\":{\"h\":\"Ospp\"},\"2760\":{\"h\":\"Tutorial\"},\"2761\":{\"h\":\"Advanced\"},\"2762\":{\"h\":\"Appendices\"},\"2763\":{\"h\":\"Best Practice\"},\"2764\":{\"h\":\"Community\"},\"2765\":{\"h\":\"Developer\"},\"2766\":{\"h\":\"Ospp\"},\"2767\":{\"h\":\"Tutorial\"},\"2768\":{\"h\":\"Advanced\"},\"2769\":{\"h\":\"Appendices\"},\"2770\":{\"h\":\"Best Practice\"},\"2771\":{\"h\":\"Community\"},\"2772\":{\"h\":\"Developer\"},\"2773\":{\"h\":\"Ospp\"},\"2774\":{\"h\":\"Tutorial\"},\"2775\":{\"h\":\"Alconna\"},\"2776\":{\"h\":\"Database\"},\"2777\":{\"h\":\"Testing\"},\"2778\":{\"h\":\"Alconna\"},\"2779\":{\"h\":\"Database\"},\"2780\":{\"h\":\"Testing\"},\"2781\":{\"h\":\"Alconna\"},\"2782\":{\"h\":\"Database\"},\"2783\":{\"h\":\"Testing\"}},\"dirtCount\":0,\"index\":[[\"6\",{\"1\":{\"2732\":1,\"2739\":1,\"2746\":1}}],[\"6+\",{\"1\":{\"58\":1,\"568\":1,\"1083\":1}}],[\"影响\",{\"1\":{\"2697\":1,\"2712\":1,\"2727\":1}}],[\"手动进行大量的\",{\"1\":{\"2697\":1,\"2712\":1,\"2727\":1}}],[\"手动创建项目\",{\"0\":{\"506\":1,\"1021\":1,\"1536\":1}}],[\"百思不如一试\",{\"1\":{\"2697\":1,\"2712\":1,\"2727\":1}}],[\"连续\",{\"1\":{\"2696\":1,\"2711\":1,\"2726\":1}}],[\"连接信息\",{\"1\":{\"1942\":1,\"2311\":1,\"2680\":1}}],[\"连接是否已经关闭\",{\"1\":{\"1743\":1,\"2121\":1,\"2490\":1}}],[\"连接断开时执行\",{\"1\":{\"1727\":1,\"2106\":1,\"2475\":1}}],[\"连接断开时钩子函数\",{\"1\":{\"384\":1,\"899\":1,\"1414\":1}}],[\"连接成功时执行\",{\"1\":{\"1726\":1,\"2105\":1,\"2474\":1}}],[\"连接后的消息\",{\"1\":{\"1621\":1,\"1990\":1,\"2359\":1}}],[\"连接已断开\",{\"1\":{\"1602\":1,\"1952\":1,\"2321\":1}}],[\"连接已关闭\",{\"1\":{\"214\":1,\"726\":1,\"1241\":1}}],[\"连接建立时钩子函数\",{\"1\":{\"383\":1,\"898\":1,\"1413\":1}}],[\"连接不可用时抛出\",{\"1\":{\"210\":1,\"722\":1,\"1237\":1}}],[\"连接处理\",{\"0\":{\"129\":1,\"639\":1,\"1154\":1}}],[\"连接数据库\",{\"1\":{\"127\":1,\"637\":1,\"1152\":1}}],[\"连接请求\",{\"1\":{\"78\":1,\"79\":1,\"588\":1,\"589\":1,\"1103\":1,\"1104\":1,\"1744\":1,\"1745\":1,\"2122\":1,\"2123\":1,\"2491\":1,\"2492\":1}}],[\"连接请求地址以及对\",{\"1\":{\"53\":1,\"563\":1,\"1078\":1}}],[\"连接上下文\",{\"1\":{\"53\":1,\"563\":1,\"1078\":1}}],[\"连接\",{\"0\":{\"474\":1,\"989\":1,\"1504\":1},\"1\":{\"53\":1,\"472\":3,\"474\":4,\"563\":1,\"987\":3,\"989\":4,\"1078\":1,\"1502\":3,\"1504\":4,\"1601\":1,\"1704\":1,\"1763\":1,\"1795\":1,\"1942\":1,\"1951\":1,\"2073\":1,\"2131\":1,\"2164\":1,\"2311\":1,\"2320\":1,\"2442\":1,\"2500\":1,\"2533\":1,\"2680\":1}}],[\"迭代器\",{\"1\":{\"2696\":1,\"2711\":1,\"2726\":1}}],[\"决定依赖注入的内容\",{\"1\":{\"2695\":1,\"2710\":1,\"2725\":1}}],[\"递增\",{\"1\":{\"2691\":1,\"2706\":1,\"2721\":1}}],[\"那样\",{\"1\":{\"2688\":1,\"2703\":1,\"2718\":1}}],[\"那么消息模板将采用消息序列形式的格式化\",{\"1\":{\"545\":1,\"1060\":1,\"1575\":1}}],[\"那么\",{\"1\":{\"535\":1,\"1050\":1,\"1565\":1}}],[\"那么你需要在\",{\"1\":{\"516\":1,\"1031\":1,\"1546\":1}}],[\"那么你需要做出如下修改\",{\"1\":{\"515\":2,\"1030\":2,\"1545\":2}}],[\"那么你可以跳过这一节\",{\"1\":{\"516\":1,\"1031\":1,\"1546\":1}}],[\"那么其他依赖注入将不会执行\",{\"1\":{\"424\":1,\"939\":1,\"1454\":1}}],[\"那么就不要修改事件参数类型注解\",{\"1\":{\"423\":1,\"938\":1,\"1453\":1}}],[\"那么我们就可以向驱动器添加路由规则\",{\"1\":{\"118\":1,\"628\":1,\"1143\":1}}],[\"就是不要将\",{\"1\":{\"2687\":1,\"2702\":1,\"2717\":1}}],[\"就可以正常使用\",{\"1\":{\"0\":1,\"12\":1,\"24\":1}}],[\"两者的生命周期也是不同的\",{\"1\":{\"2687\":1,\"2702\":1,\"2717\":1}}],[\"两个类\",{\"1\":{\"479\":1,\"994\":1,\"1509\":1}}],[\"未知\",{\"1\":{\"2687\":2,\"2702\":2,\"2717\":2}}],[\"未查询到\",{\"1\":{\"2687\":2,\"2702\":2,\"2717\":2}}],[\"未注册\",{\"1\":{\"218\":1,\"730\":1,\"1245\":1}}],[\"今天的天气是\",{\"1\":{\"2687\":2,\"2688\":3,\"2702\":2,\"2703\":3,\"2717\":2,\"2718\":3}}],[\"今天\",{\"1\":{\"2687\":2,\"2702\":2,\"2717\":2}}],[\"吗\",{\"1\":{\"2687\":1,\"2702\":1,\"2717\":1}}],[\"确定迁移脚本正确后\",{\"1\":{\"2686\":1,\"2701\":1,\"2716\":1}}],[\"确保插件对\",{\"1\":{\"505\":1,\"1020\":1,\"1535\":1}}],[\"确保只有在私聊或者\",{\"1\":{\"425\":1,\"940\":1,\"1455\":1}}],[\"确保依赖的外部插件已经被声明或加载\",{\"1\":{\"116\":1,\"626\":1,\"1141\":1}}],[\"确保代码可以被编辑器正确解析\",{\"1\":{\"8\":1,\"20\":1,\"32\":1}}],[\"永远要检查迁移脚本\",{\"1\":{\"2686\":1,\"2701\":1,\"2716\":1}}],[\"足够智能\",{\"1\":{\"2686\":1,\"2701\":1,\"2716\":1}}],[\"记录数据库模式的变化\",{\"1\":{\"2686\":1,\"2701\":1,\"2716\":1}}],[\"记录日志\",{\"0\":{\"419\":1,\"934\":1,\"1449\":1},\"1\":{\"169\":1,\"679\":1,\"1194\":1}}],[\"再执行一次\",{\"1\":{\"2686\":1,\"2701\":1,\"2716\":1}}],[\"执行一次\",{\"1\":{\"2686\":1,\"2701\":1,\"2716\":1}}],[\"执行命令过后\",{\"1\":{\"2686\":1,\"2701\":1,\"2716\":1}}],[\"显然\",{\"1\":{\"2686\":1,\"2701\":1,\"2716\":1}}],[\"显示所有的分支头\",{\"1\":{\"1931\":1,\"2300\":1,\"2669\":1}}],[\"虽然我们不是很懂这些代码的意思\",{\"1\":{\"2686\":1,\"2701\":1,\"2716\":1}}],[\"虽然我们可以使用\",{\"1\":{\"418\":1,\"933\":1,\"1448\":1}}],[\"父迁移\",{\"1\":{\"2686\":1,\"2701\":1,\"2716\":1}}],[\"父插件\",{\"1\":{\"1855\":1,\"2224\":1,\"2593\":1}}],[\"父插件标识符\",{\"1\":{\"1810\":1,\"2179\":1,\"2548\":1}}],[\"迁移脚本中任何一处错误都足以使数据付之东流\",{\"1\":{\"2686\":1,\"2701\":1,\"2716\":1}}],[\"迁移脚本冗长且繁琐\",{\"1\":{\"2686\":1,\"2701\":1,\"2716\":1}}],[\"迁移\",{\"1\":{\"2686\":1,\"2701\":1,\"2716\":1}}],[\"出现了一个\",{\"1\":{\"2686\":1,\"2701\":1,\"2716\":1}}],[\"出于清晰考虑\",{\"1\":{\"1939\":1,\"2308\":1,\"2677\":1}}],[\"试图阻止我们启动机器人\",{\"1\":{\"2686\":1,\"2701\":1,\"2716\":1}}],[\"咦\",{\"1\":{\"2686\":1,\"2701\":1,\"2716\":1}}],[\"检测到新的升级操作\",{\"1\":{\"2686\":1,\"2701\":1,\"2716\":1}}],[\"检查数据库模式是否与模型定义一致\",{\"1\":{\"1934\":1,\"2303\":1,\"2672\":1}}],[\"检查一下数据库模式是否与模型定义一致\",{\"1\":{\"1928\":1,\"1929\":1,\"2297\":1,\"2298\":1,\"2666\":1,\"2667\":1}}],[\"检查字段类型是否匹配\",{\"1\":{\"1657\":1,\"2026\":1,\"2395\":1}}],[\"检查通过时匹配成功\",{\"1\":{\"427\":1,\"942\":1,\"1457\":1}}],[\"检查事件是否有回复消息\",{\"1\":{\"477\":1,\"992\":1,\"1507\":1}}],[\"检查事件是否和机器人有关操作\",{\"1\":{\"477\":1,\"992\":1,\"1507\":1}}],[\"检查事件是否与机器人有关\",{\"1\":{\"368\":1,\"883\":1,\"1398\":1}}],[\"检查事件类型是否为指定类型\",{\"1\":{\"370\":1,\"885\":1,\"1400\":1}}],[\"检查消息中是否仅包含指定消息段\",{\"1\":{\"1618\":1,\"1987\":1,\"2356\":1}}],[\"检查消息段是否存在\",{\"1\":{\"1613\":1,\"1982\":1,\"2351\":1}}],[\"检查消息段\",{\"0\":{\"542\":1,\"1057\":1,\"1572\":1}}],[\"检查消息字符串是否符合指定正则表达式\",{\"1\":{\"366\":1,\"881\":1,\"1396\":1}}],[\"检查消息是否为指定\",{\"1\":{\"364\":1,\"879\":1,\"1394\":1}}],[\"检查消息是否为指定命令\",{\"1\":{\"360\":1,\"875\":1,\"1390\":1}}],[\"检查消息纯文本是否包含指定关键字\",{\"1\":{\"358\":1,\"873\":1,\"1388\":1}}],[\"检查消息纯文本是否与指定字符串全匹配\",{\"1\":{\"356\":1,\"871\":1,\"1386\":1}}],[\"检查消息纯文本是否以指定字符串结尾\",{\"1\":{\"354\":1,\"869\":1,\"1384\":1}}],[\"检查消息纯文本是否以指定字符串开头\",{\"1\":{\"352\":1,\"867\":1,\"1382\":1}}],[\"检查当前事件是否是消息事件且属于超级管理员\",{\"1\":{\"344\":1,\"859\":1,\"1374\":1}}],[\"检查当前事件是否属于指定会话\",{\"1\":{\"330\":1,\"848\":1,\"1363\":1}}],[\"检查是否符合所有规则\",{\"1\":{\"349\":1,\"864\":1,\"1379\":1}}],[\"检查是否为元事件\",{\"1\":{\"339\":1,\"854\":1,\"1369\":1}}],[\"检查是否为请求事件\",{\"1\":{\"338\":1,\"853\":1,\"1368\":1}}],[\"检查是否为通知事件\",{\"1\":{\"337\":1,\"852\":1,\"1367\":1}}],[\"检查是否为消息事件\",{\"1\":{\"336\":1,\"851\":1,\"1366\":1}}],[\"检查是否满足某个权限\",{\"1\":{\"335\":1,\"847\":1,\"1362\":1}}],[\"检查是否满足匹配规则\",{\"1\":{\"245\":1,\"758\":1,\"1273\":1}}],[\"检查是否满足触发权限\",{\"1\":{\"244\":1,\"757\":1,\"1272\":1}}],[\"检查结果为\",{\"1\":{\"328\":1,\"346\":1,\"843\":1,\"861\":1,\"1358\":1,\"1376\":1}}],[\"检查并运行事件响应器\",{\"1\":{\"292\":1,\"804\":1,\"1319\":1}}],[\"检查依赖的插件是否已经被加载\",{\"1\":{\"117\":1,\"627\":1,\"1142\":1}}],[\"检查\",{\"1\":{\"3\":1,\"15\":1,\"27\":1,\"400\":1,\"401\":1,\"402\":1,\"403\":1,\"404\":1,\"405\":1,\"484\":1,\"915\":1,\"916\":1,\"917\":1,\"918\":1,\"919\":1,\"920\":1,\"999\":1,\"1430\":1,\"1431\":1,\"1432\":1,\"1433\":1,\"1434\":1,\"1435\":1,\"1514\":1}}],[\"首次迁移\",{\"0\":{\"2686\":1,\"2701\":1,\"2716\":1}}],[\"首先\",{\"1\":{\"2685\":1,\"2686\":1,\"2700\":1,\"2701\":1,\"2715\":1,\"2716\":1}}],[\"引发冲突\",{\"1\":{\"2685\":1,\"2700\":1,\"2715\":1}}],[\"引擎配置\",{\"1\":{\"1936\":1,\"2305\":1,\"2674\":1}}],[\"意味着此列\",{\"1\":{\"2685\":1,\"2700\":1,\"2715\":1}}],[\"意思是\",{\"1\":{\"7\":1,\"19\":1,\"31\":1}}],[\"阅读\",{\"1\":{\"2683\":1,\"2698\":1,\"2713\":1}}],[\"故分为了一个示例以及数个专题\",{\"1\":{\"2683\":1,\"2698\":1,\"2713\":1}}],[\"故需要先获得全局驱动器\",{\"1\":{\"126\":1,\"636\":1,\"1151\":1}}],[\"暂不支持\",{\"1\":{\"1943\":1,\"1944\":1,\"2312\":1,\"2313\":1,\"2681\":1,\"2682\":1}}],[\"测试矩阵中还需要增加这两个维度\",{\"1\":{\"2697\":1,\"2712\":1,\"2727\":1}}],[\"测试是发现问题的最佳方式\",{\"1\":{\"2697\":1,\"2712\":1,\"2727\":1}}],[\"测试\",{\"0\":{\"1941\":1,\"1942\":1,\"1943\":1,\"1944\":1,\"2310\":1,\"2311\":1,\"2312\":1,\"2313\":1,\"2679\":1,\"2680\":1,\"2681\":1,\"2682\":1,\"2697\":1,\"2712\":1,\"2727\":1}}],[\"遵循特殊优先于一般的原则\",{\"1\":{\"1939\":1,\"2308\":1,\"2677\":1}}],[\"到数据库连接\",{\"1\":{\"1937\":1,\"2306\":1,\"2675\":1}}],[\"降级数据库\",{\"1\":{\"1929\":1,\"1933\":1,\"2298\":1,\"2302\":1,\"2667\":1,\"2671\":1}}],[\"卸载插件\",{\"0\":{\"1929\":1,\"2298\":1,\"2667\":1},\"1\":{\"1929\":1,\"2298\":1,\"2667\":1}}],[\"启用后会在参数缺失或触发\",{\"1\":{\"1918\":1,\"2287\":1,\"2656\":1}}],[\"启动检查失败\",{\"1\":{\"2686\":1,\"2701\":1,\"2716\":1}}],[\"启动机器人\",{\"1\":{\"1928\":1,\"2297\":1,\"2666\":1}}],[\"启动驱动框架\",{\"1\":{\"1723\":1,\"2102\":1,\"2471\":1}}],[\"启动和关闭时进行相关操作\",{\"1\":{\"472\":1,\"987\":1,\"1502\":1}}],[\"启动所需函数\",{\"1\":{\"215\":1,\"727\":1,\"1242\":1}}],[\"启动时运行\",{\"1\":{\"127\":1,\"637\":1,\"1152\":1}}],[\"启动准备\",{\"0\":{\"127\":1,\"637\":1,\"1152\":1}}],[\"启动\",{\"1\":{\"64\":1,\"72\":1,\"225\":1,\"574\":1,\"582\":1,\"737\":1,\"1089\":1,\"1097\":1,\"1252\":1,\"1695\":1,\"1769\":1,\"1786\":1,\"2064\":1,\"2138\":1,\"2155\":1,\"2433\":1,\"2507\":1,\"2524\":1}}],[\"插值格式为\",{\"1\":{\"1914\":2,\"2283\":2,\"2652\":2}}],[\"插件命名规范\",{\"1\":{\"1926\":1,\"2295\":1,\"2664\":1}}],[\"插件索引标识\",{\"1\":{\"1857\":1,\"2226\":1,\"2595\":1}}],[\"插件索引名称\",{\"1\":{\"110\":1,\"111\":1,\"620\":1,\"621\":1,\"1135\":1,\"1136\":1}}],[\"插件加载时定义的\",{\"1\":{\"1854\":1,\"2223\":1,\"2592\":1}}],[\"插件额外信息\",{\"1\":{\"1847\":1,\"2216\":1,\"2585\":1}}],[\"插件支持的适配器模块路径\",{\"1\":{\"1846\":1,\"2215\":1,\"2584\":1}}],[\"插件配置项\",{\"1\":{\"1845\":1,\"2214\":1,\"2583\":1}}],[\"插件主页\",{\"1\":{\"1844\":1,\"2213\":1,\"2582\":1}}],[\"插件类型\",{\"1\":{\"1843\":1,\"2212\":1,\"2581\":1}}],[\"插件类别\",{\"1\":{\"110\":1,\"620\":1,\"1135\":1}}],[\"插件功能介绍\",{\"1\":{\"1841\":1,\"2210\":1,\"2579\":1}}],[\"插件元信息\",{\"1\":{\"1839\":1,\"2208\":1,\"2577\":1}}],[\"插件元数据\",{\"0\":{\"110\":1,\"620\":1,\"1135\":1},\"1\":{\"110\":1,\"111\":1,\"620\":1,\"621\":1,\"1135\":1,\"1136\":1}}],[\"插件搜索路径\",{\"1\":{\"1826\":1,\"2195\":1,\"2564\":1}}],[\"插件缺少元数据\",{\"1\":{\"1824\":1,\"2193\":1,\"2562\":1}}],[\"插件未加载\",{\"1\":{\"1824\":1,\"2193\":1,\"2562\":1}}],[\"插件无法加载\",{\"1\":{\"1823\":1,\"2192\":1,\"2561\":1}}],[\"插件标识符\",{\"1\":{\"1810\":1,\"2179\":1,\"2548\":1}}],[\"插件开发提供便携的定义函数\",{\"1\":{\"1808\":1,\"2177\":1,\"2546\":1}}],[\"插件目录应该为相对机器人\",{\"1\":{\"518\":1,\"1033\":1,\"1548\":1}}],[\"插件目录中编写一个响应规则\",{\"1\":{\"426\":1,\"941\":1,\"1456\":1}}],[\"插件文件名或文件夹名\",{\"1\":{\"516\":1,\"1031\":1,\"1546\":1}}],[\"插件内容可以在\",{\"1\":{\"514\":1,\"1029\":1,\"1544\":1}}],[\"插件间应尽量减少耦合\",{\"1\":{\"512\":1,\"1027\":1,\"1542\":1}}],[\"插件即是\",{\"1\":{\"512\":1,\"1027\":1,\"1542\":1}}],[\"插件结构\",{\"0\":{\"512\":1,\"1027\":1,\"1542\":1}}],[\"插件作者名正确展示\",{\"1\":{\"504\":1,\"1019\":1,\"1534\":1}}],[\"插件作者想要修改插件信息时无法便捷的找到操作方式等\",{\"1\":{\"504\":1,\"1019\":1,\"1534\":1}}],[\"插件存储至\",{\"1\":{\"504\":1,\"1019\":1,\"1534\":1}}],[\"插件使用一个\",{\"1\":{\"1937\":1,\"2306\":1,\"2675\":1}}],[\"插件使用方法\",{\"1\":{\"110\":1,\"620\":1,\"1135\":1,\"1842\":1,\"2211\":1,\"2580\":1}}],[\"插件使得官网内容构建正常\",{\"1\":{\"503\":1,\"1018\":1,\"1533\":1}}],[\"插件编写准备\",{\"0\":{\"511\":1,\"1026\":1,\"1541\":1}}],[\"插件编写\",{\"1\":{\"501\":1,\"1016\":1,\"1531\":1}}],[\"插件提供面板服务\",{\"1\":{\"499\":1,\"1014\":1,\"1529\":1}}],[\"插件提供的方法均返回一个\",{\"1\":{\"435\":1,\"950\":1,\"1465\":1}}],[\"插件管理\",{\"1\":{\"495\":1,\"499\":1,\"1010\":1,\"1014\":1,\"1525\":1,\"1529\":1}}],[\"插件管理器\",{\"1\":{\"111\":1,\"621\":1,\"1136\":1,\"1826\":1,\"2195\":1,\"2564\":1}}],[\"插件机制的自动化测试框架\",{\"1\":{\"487\":1,\"1002\":1,\"1517\":1}}],[\"插件进行支持\",{\"1\":{\"450\":1,\"965\":1,\"1480\":1}}],[\"插件兼容\",{\"1\":{\"435\":1,\"950\":1,\"1465\":1}}],[\"插件至项目环境中\",{\"1\":{\"434\":1,\"445\":1,\"451\":1,\"949\":1,\"960\":1,\"966\":1,\"1464\":1,\"1475\":1,\"1481\":1}}],[\"插件依赖声明\",{\"0\":{\"117\":1,\"627\":1,\"1142\":1}}],[\"插件跟踪\",{\"0\":{\"116\":1,\"626\":1,\"1141\":1}}],[\"插件化系统的设计使得插件之间可以功能独立\",{\"1\":{\"115\":1,\"625\":1,\"1140\":1}}],[\"插件就会加载\",{\"1\":{\"114\":1,\"624\":1,\"1139\":1}}],[\"插件的开发\",{\"1\":{\"505\":1,\"1020\":1,\"1535\":1}}],[\"插件的低代码编写\",{\"1\":{\"505\":1,\"1020\":1,\"1535\":1}}],[\"插件的数据目录和配置目录是同一个目录\",{\"1\":{\"435\":1,\"950\":1,\"1465\":1}}],[\"插件的子插件集合\",{\"1\":{\"111\":1,\"621\":1,\"1136\":1}}],[\"插件的父插件\",{\"1\":{\"111\":1,\"621\":1,\"1136\":1}}],[\"插件的配置类\",{\"1\":{\"110\":1,\"620\":1,\"1135\":1}}],[\"插件中\",{\"1\":{\"428\":1,\"943\":1,\"1458\":1}}],[\"插件中定义的事件响应器\",{\"1\":{\"111\":1,\"621\":1,\"1136\":1}}],[\"插件中的事件响应器\",{\"1\":{\"110\":1,\"620\":1,\"1135\":1}}],[\"插件对象\",{\"1\":{\"111\":1,\"621\":1,\"1136\":1}}],[\"插件项目主页\",{\"1\":{\"110\":1,\"620\":1,\"1135\":1}}],[\"插件描述\",{\"1\":{\"110\":1,\"620\":1,\"1135\":1}}],[\"插件名称或插件标识符\",{\"1\":{\"1831\":1,\"2200\":1,\"2569\":1}}],[\"插件名称列表\",{\"1\":{\"1822\":1,\"1824\":1,\"2191\":1,\"2193\":1,\"2560\":1,\"2562\":1}}],[\"插件名称\",{\"1\":{\"110\":1,\"113\":1,\"515\":1,\"620\":1,\"623\":1,\"1030\":1,\"1135\":1,\"1138\":1,\"1545\":1,\"1816\":1,\"1821\":1,\"1840\":1,\"1850\":1,\"2185\":1,\"2190\":1,\"2209\":1,\"2219\":1,\"2554\":1,\"2559\":1,\"2578\":1,\"2588\":1}}],[\"插件父子关系等\",{\"1\":{\"110\":1,\"620\":1,\"1135\":1}}],[\"插件模块对象\",{\"1\":{\"1851\":1,\"2220\":1,\"2589\":1}}],[\"插件模块名或插件标识符\",{\"1\":{\"1823\":1,\"2192\":1,\"2561\":1}}],[\"插件模块名称\",{\"1\":{\"110\":1,\"620\":1,\"1135\":1}}],[\"插件模块路径\",{\"1\":{\"111\":1,\"621\":1,\"1136\":1}}],[\"插件模块\",{\"1\":{\"110\":1,\"111\":1,\"516\":1,\"620\":1,\"621\":1,\"1031\":1,\"1135\":1,\"1136\":1,\"1546\":1}}],[\"插件信息\",{\"0\":{\"109\":1,\"619\":1,\"1134\":1}}],[\"插件\",{\"1\":{\"10\":1,\"22\":1,\"34\":1,\"110\":1,\"433\":1,\"444\":1,\"496\":1,\"501\":1,\"506\":1,\"525\":1,\"528\":1,\"620\":1,\"948\":1,\"959\":1,\"1011\":1,\"1016\":1,\"1021\":1,\"1040\":1,\"1043\":1,\"1135\":1,\"1463\":1,\"1474\":1,\"1526\":1,\"1531\":1,\"1536\":1,\"1555\":1,\"1558\":1,\"1928\":1,\"1929\":1,\"2297\":1,\"2298\":1,\"2666\":1,\"2667\":1}}],[\"插件视图搜索并安装\",{\"1\":{\"10\":1,\"22\":1,\"34\":1}}],[\"插件系统通过\",{\"1\":{\"116\":1,\"626\":1,\"1141\":1}}],[\"插件系统内部索引\",{\"1\":{\"110\":1,\"620\":1,\"1135\":1}}],[\"插件系统获取收集到的信息\",{\"1\":{\"110\":1,\"620\":1,\"1135\":1}}],[\"插件系统是\",{\"1\":{\"5\":1,\"17\":1,\"29\":1}}],[\"插件系统\",{\"0\":{\"5\":1,\"17\":1,\"29\":1}}],[\"条目被设置后\",{\"1\":{\"1914\":1,\"2283\":1,\"2652\":1}}],[\"普通情况下使用\",{\"1\":{\"1913\":1,\"2282\":1,\"2651\":1}}],[\"触发\",{\"1\":{\"1912\":1,\"2281\":1,\"2650\":1}}],[\"触发权限更新函数是一个\",{\"1\":{\"140\":1,\"650\":1,\"1165\":1}}],[\"补丁\",{\"1\":{\"1923\":1,\"2292\":1,\"2661\":1}}],[\"补全默认通过\",{\"1\":{\"1912\":1,\"2281\":1,\"2650\":1}}],[\"补充\",{\"1\":{\"491\":1,\"1006\":1,\"1521\":1}}],[\"半自动补全为用户提供了推荐后续输入的功能\",{\"1\":{\"1912\":1,\"2281\":1,\"2650\":1}}],[\"半自动补全\",{\"0\":{\"1912\":1,\"2281\":1,\"2650\":1}}],[\"紧凑命令\",{\"0\":{\"1910\":1,\"2279\":1,\"2648\":1}}],[\"绑定一个命令执行器\",{\"1\":{\"1909\":1,\"2278\":1,\"2647\":1}}],[\"张\",{\"1\":{\"1908\":2,\"2277\":2,\"2646\":2}}],[\"涩图1张\",{\"1\":{\"1909\":1,\"2278\":1,\"2647\":1}}],[\"涩图3张\",{\"1\":{\"1908\":1,\"2277\":1,\"2646\":1}}],[\"涩图\",{\"1\":{\"1908\":2,\"1909\":2,\"2277\":2,\"2278\":2,\"2646\":2,\"2647\":2}}],[\"删除数据\",{\"1\":{\"1929\":1,\"2298\":1,\"2667\":1}}],[\"删除成功\",{\"1\":{\"1909\":1,\"2278\":1,\"2647\":1}}],[\"删除快捷指令\",{\"1\":{\"1909\":1,\"2278\":1,\"2647\":1}}],[\"删除\",{\"1\":{\"1907\":1,\"2276\":1,\"2645\":1}}],[\"命名空间名称\",{\"1\":{\"1904\":1,\"2273\":1,\"2642\":1}}],[\"命名空间有以下几个属性\",{\"1\":{\"1904\":1,\"2273\":1,\"2642\":1}}],[\"命名空间\",{\"1\":{\"1904\":1,\"1905\":1,\"2273\":1,\"2274\":1,\"2642\":1,\"2643\":1}}],[\"命名空间配置可修改名称\",{\"1\":{\"1912\":1,\"2281\":1,\"2650\":1}}],[\"命名空间配置\",{\"0\":{\"1904\":1,\"2273\":1,\"2642\":1},\"1\":{\"1904\":1,\"1905\":1,\"2273\":1,\"2274\":1,\"2642\":1,\"2643\":1}}],[\"命令分隔符\",{\"1\":{\"1920\":1,\"2289\":1,\"2658\":1}}],[\"命令前缀\",{\"1\":{\"1917\":1,\"2286\":1,\"2655\":1}}],[\"命令前缀存储\",{\"1\":{\"182\":1,\"694\":1,\"1209\":1}}],[\"命令上下文插值的风格\",{\"1\":{\"1903\":1,\"1904\":1,\"2272\":1,\"2273\":1,\"2641\":1,\"2642\":1}}],[\"命令是否严格匹配\",{\"1\":{\"1903\":1,\"1904\":1,\"2272\":1,\"2273\":1,\"2641\":1,\"2642\":1}}],[\"命令是否允许第一个参数紧随头部\",{\"1\":{\"1903\":1,\"2272\":1,\"2641\":1}}],[\"命令是否对\",{\"1\":{\"1903\":1,\"2272\":1,\"2641\":1}}],[\"命令是否抛出异常\",{\"1\":{\"1903\":1,\"2272\":1,\"2641\":1}}],[\"命令是否开启模糊匹配\",{\"1\":{\"1903\":1,\"2272\":1,\"2641\":1}}],[\"命令所有子命令的解析结果\",{\"1\":{\"1902\":1,\"2271\":1,\"2640\":1}}],[\"命令所有选项的解析结果\",{\"1\":{\"1902\":1,\"2271\":1,\"2640\":1}}],[\"命令名称\",{\"1\":{\"1911\":1,\"2280\":1,\"2649\":1}}],[\"命令名\",{\"1\":{\"1894\":1,\"2263\":1,\"2632\":1}}],[\"命令头部的解析结果\",{\"1\":{\"1902\":1,\"2271\":1,\"2640\":1}}],[\"命令头是指命令的前缀\",{\"1\":{\"1894\":1,\"2263\":1,\"2632\":1}}],[\"命令头\",{\"0\":{\"1894\":1,\"2263\":1,\"2632\":1}}],[\"命令形式匹配\",{\"1\":{\"1872\":1,\"1889\":1,\"2241\":1,\"2258\":1,\"2610\":1,\"2627\":1}}],[\"命令形式的消息\",{\"1\":{\"100\":1,\"610\":1,\"1125\":1}}],[\"命令匹配规则参考\",{\"1\":{\"1872\":1,\"1874\":1,\"1889\":1,\"1891\":1,\"2241\":1,\"2243\":1,\"2258\":1,\"2260\":1,\"2610\":1,\"2612\":1,\"2627\":1,\"2629\":1}}],[\"命令从完整模板创建\",{\"1\":{\"515\":1,\"1030\":1,\"1545\":1}}],[\"命令来运行机器人\",{\"1\":{\"510\":1,\"1025\":1,\"1540\":1}}],[\"命令来检查数据存储路径\",{\"1\":{\"435\":1,\"950\":1,\"1465\":1}}],[\"命令代替\",{\"1\":{\"509\":1,\"1024\":1,\"1539\":1}}],[\"命令行的使用仍具有一定的困难\",{\"1\":{\"499\":1,\"1014\":1,\"1529\":1}}],[\"命令行即时交互通信设计与实现\",{\"0\":{\"496\":1,\"1011\":1,\"1526\":1}}],[\"命令行交互代码编写\",{\"1\":{\"495\":1,\"496\":1,\"1010\":1,\"1011\":1,\"1525\":1,\"1526\":1}}],[\"命令行\",{\"0\":{\"495\":1,\"1010\":1,\"1525\":1}}],[\"命令行工具以及参数\",{\"1\":{\"64\":1,\"72\":1,\"574\":1,\"582\":1,\"1089\":1,\"1097\":1}}],[\"命令就只会在插件启用且在私聊或者\",{\"1\":{\"428\":1,\"943\":1,\"1458\":1}}],[\"命令添加了一个\",{\"1\":{\"425\":1,\"940\":1,\"1455\":1}}],[\"命令参数解析器\",{\"1\":{\"362\":1,\"877\":1,\"1392\":1}}],[\"命令参数存储\",{\"1\":{\"185\":1,\"697\":1,\"1212\":1}}],[\"命令内容与后续消息间无需空格\",{\"1\":{\"361\":1,\"365\":1,\"876\":1,\"880\":1,\"1391\":1,\"1395\":1}}],[\"命令文本或命令元组\",{\"1\":{\"361\":1,\"365\":1,\"876\":1,\"880\":1,\"1391\":1,\"1395\":1}}],[\"命令文本存储\",{\"1\":{\"184\":1,\"696\":1,\"1211\":1}}],[\"命令原始参数列表\",{\"1\":{\"317\":1,\"830\":1,\"1345\":1}}],[\"命令原始参数列表存储\",{\"1\":{\"189\":1,\"701\":1,\"1216\":1}}],[\"命令与参数间空白符存储\",{\"1\":{\"187\":1,\"699\":1,\"1214\":1}}],[\"命令开头存储\",{\"1\":{\"186\":1,\"698\":1,\"1213\":1}}],[\"命令元组存储\",{\"1\":{\"183\":1,\"695\":1,\"1210\":1}}],[\"命令的含义\",{\"1\":{\"1930\":1,\"2299\":1,\"2668\":1}}],[\"命令的自定义额外信息\",{\"1\":{\"1903\":1,\"2272\":1,\"2641\":1}}],[\"命令的快捷指令是否在\",{\"1\":{\"1903\":1,\"2272\":1,\"2641\":1}}],[\"命令的作者\",{\"1\":{\"1903\":1,\"2272\":1,\"2641\":1}}],[\"命令的使用样例\",{\"1\":{\"1903\":1,\"2272\":1,\"2641\":1}}],[\"命令的用法\",{\"1\":{\"1903\":1,\"2272\":1,\"2641\":1}}],[\"命令的描述\",{\"1\":{\"1903\":1,\"2272\":1,\"2641\":1}}],[\"命令的主参数的解析结果\",{\"1\":{\"1902\":1,\"2271\":1,\"2640\":1}}],[\"命令的分隔标记\",{\"1\":{\"174\":1,\"684\":1,\"1199\":1}}],[\"命令的起始标记\",{\"1\":{\"173\":1,\"683\":1,\"1198\":1}}],[\"命令创建插件时\",{\"1\":{\"113\":1,\"623\":1,\"1138\":1}}],[\"命令解析时是否保留换行字符\",{\"1\":{\"1903\":1,\"2272\":1,\"2641\":1}}],[\"命令解析后的参数字典\",{\"1\":{\"316\":1,\"829\":1,\"1344\":1}}],[\"命令解析后的结果可以通过\",{\"1\":{\"99\":1,\"609\":1,\"1124\":1}}],[\"命令解析拓展\",{\"1\":{\"108\":1,\"618\":1,\"1133\":1,\"2732\":1,\"2739\":1,\"2746\":1}}],[\"命令\",{\"1\":{\"105\":2,\"188\":1,\"361\":2,\"364\":1,\"615\":2,\"700\":1,\"876\":2,\"879\":1,\"1130\":2,\"1215\":1,\"1391\":2,\"1394\":1,\"1878\":1,\"2247\":1,\"2616\":1}}],[\"命令别名\",{\"1\":{\"105\":1,\"615\":1,\"1130\":1,\"1872\":1,\"1873\":1,\"1877\":1,\"1878\":1,\"1889\":1,\"1890\":1,\"2241\":1,\"2242\":1,\"2246\":1,\"2247\":1,\"2258\":1,\"2259\":1,\"2610\":1,\"2611\":1,\"2615\":1,\"2616\":1,\"2627\":1,\"2628\":1}}],[\"命令并且带有\",{\"1\":{\"100\":1,\"610\":1,\"1125\":1}}],[\"隐藏\",{\"1\":{\"1903\":1,\"2272\":1,\"2641\":1}}],[\"隐藏该事件日志\",{\"1\":{\"1590\":1,\"1971\":1,\"2340\":1}}],[\"隐藏该事件日志时\",{\"1\":{\"1590\":1,\"1971\":1,\"2340\":1}}],[\"键对应的值\",{\"1\":{\"1902\":1,\"2271\":1,\"2640\":1}}],[\"查询数据\",{\"0\":{\"2693\":1,\"2708\":1,\"2723\":1}}],[\"查询数据库\",{\"1\":{\"2687\":1,\"2702\":1,\"2717\":1}}],[\"查看有什么插件使用到了数据库\",{\"1\":{\"1928\":1,\"1929\":1,\"2297\":1,\"2298\":1,\"2666\":1,\"2667\":1}}],[\"查找参数并返回\",{\"1\":{\"1902\":1,\"2271\":1,\"2640\":1}}],[\"查天气\",{\"1\":{\"428\":1,\"529\":2,\"943\":1,\"1044\":2,\"1458\":1,\"1559\":2}}],[\"原来是我们定义了模型\",{\"1\":{\"2686\":1,\"2701\":1,\"2716\":1}}],[\"原始命令\",{\"1\":{\"1902\":1,\"2271\":1,\"2640\":1}}],[\"原本正常运行的代码报错\",{\"1\":{\"64\":1,\"574\":1,\"1089\":1}}],[\"承载的解析结果\",{\"1\":{\"1902\":1,\"2271\":1,\"2640\":1}}],[\"计数器加一\",{\"1\":{\"1901\":1,\"2270\":1,\"2639\":1}}],[\"计算指定消息段的个数\",{\"1\":{\"1617\":1,\"1986\":1,\"2355\":1}}],[\"因为很显然\",{\"1\":{\"2697\":1,\"2712\":1,\"2727\":1}}],[\"因为语句可能没有返回值\",{\"1\":{\"2695\":1,\"2710\":1,\"2725\":1}}],[\"因为先前的\",{\"1\":{\"2687\":1,\"2702\":1,\"2717\":1}}],[\"因为模型只是数据结构的定义\",{\"1\":{\"2687\":1,\"2702\":1,\"2717\":1}}],[\"因为这可能会导致不同插件间的表名重复\",{\"1\":{\"2685\":1,\"2700\":1,\"2715\":1}}],[\"因为foo\",{\"1\":{\"1900\":1,\"2269\":1,\"2638\":1}}],[\"因此会替换为\",{\"1\":{\"1897\":1,\"2266\":1,\"2635\":1}}],[\"因此会话更新后的默认触发权限为当前事件的会话\",{\"1\":{\"140\":1,\"650\":1,\"1165\":1}}],[\"因此会话更新后的默认响应事件类型为\",{\"1\":{\"139\":1,\"649\":1,\"1164\":1}}],[\"因此请使用上述的\",{\"1\":{\"545\":1,\"1060\":1,\"1575\":1}}],[\"因此可以使用\",{\"1\":{\"540\":1,\"1055\":1,\"1570\":1}}],[\"因此你需要参考协议适配器的文档并导入对应的消息段后才能使用其特殊的消息类型\",{\"1\":{\"533\":1,\"1048\":1,\"1563\":1}}],[\"因此我们推荐使用\",{\"1\":{\"2697\":1,\"2712\":1,\"2727\":1}}],[\"因此我们无法使用平台特有的消息类型\",{\"1\":{\"533\":1,\"1048\":1,\"1563\":1}}],[\"因此我们希望为\",{\"1\":{\"488\":1,\"489\":1,\"1003\":1,\"1004\":1,\"1518\":1,\"1519\":1}}],[\"因此我们可以使用\",{\"1\":{\"468\":1,\"983\":1,\"1498\":1}}],[\"因此我们需要使用调用平台\",{\"1\":{\"454\":1,\"969\":1,\"1484\":1}}],[\"因此我们不能在\",{\"1\":{\"116\":1,\"626\":1,\"1141\":1}}],[\"因此其任务函数无法同事件处理函数一样通过依赖注入获取上下文信息\",{\"1\":{\"454\":1,\"969\":1,\"1484\":1}}],[\"因此其使用方式与\",{\"1\":{\"452\":1,\"967\":1,\"1482\":1}}],[\"因此需要在使用前对其进行加载并导入其中的\",{\"1\":{\"453\":1,\"968\":1,\"1483\":1}}],[\"因此开发环境中\",{\"1\":{\"448\":1,\"963\":1,\"1478\":1}}],[\"因此在使用时需要注意避免文件名冲突\",{\"1\":{\"435\":1,\"950\":1,\"1465\":1}}],[\"因此不要使用\",{\"1\":{\"431\":1,\"946\":1,\"1461\":1}}],[\"因此应该在所有其他注入参数之后使用\",{\"1\":{\"304\":1,\"813\":1,\"1328\":1}}],[\"因此应该在其他参数之前检查\",{\"1\":{\"302\":1,\"814\":1,\"1329\":1}}],[\"因此\",{\"1\":{\"54\":1,\"81\":1,\"110\":1,\"424\":1,\"499\":1,\"501\":1,\"527\":1,\"532\":1,\"539\":1,\"564\":1,\"591\":1,\"620\":1,\"939\":1,\"1014\":1,\"1016\":1,\"1042\":1,\"1047\":1,\"1054\":1,\"1079\":1,\"1106\":1,\"1135\":1,\"1454\":1,\"1529\":1,\"1531\":1,\"1557\":1,\"1562\":1,\"1569\":1}}],[\"几类特殊的传入标记\",{\"1\":{\"1897\":1,\"2266\":1,\"2635\":1}}],[\"样式的字符串\",{\"1\":{\"1897\":1,\"2266\":1,\"2635\":1}}],[\"错误\",{\"1\":{\"1896\":1,\"2265\":1,\"2634\":1}}],[\"错误跟踪通常在生产环境中使用\",{\"1\":{\"448\":1,\"963\":1,\"1478\":1}}],[\"错误跟踪\",{\"0\":{\"444\":1,\"959\":1,\"1474\":1}}],[\"另外\",{\"1\":{\"1896\":1,\"2265\":1,\"2634\":1}}],[\"另外建议编写适配器文档或者一些插件开发示例\",{\"1\":{\"481\":1,\"996\":1,\"1511\":1}}],[\"占位符\",{\"1\":{\"1894\":1,\"2263\":1,\"2632\":1}}],[\"⇔\",{\"1\":{\"1894\":4,\"2263\":4,\"2632\":4}}],[\"声明匹配类型\",{\"1\":{\"1894\":1,\"2263\":1,\"2632\":1}}],[\"声明依赖插件\",{\"1\":{\"1823\":1,\"2192\":1,\"2561\":1}}],[\"写法\",{\"1\":{\"1894\":1,\"2263\":1,\"2632\":1}}],[\"写入文件内容\",{\"1\":{\"435\":1,\"950\":1,\"1465\":1}}],[\"里的\",{\"1\":{\"1894\":1,\"2263\":1,\"2632\":1}}],[\"称为\",{\"1\":{\"1894\":1,\"2263\":1,\"2632\":1}}],[\"转为\",{\"1\":{\"1894\":1,\"1897\":2,\"2263\":1,\"2266\":2,\"2632\":1,\"2635\":2}}],[\"转换平台\",{\"1\":{\"475\":1,\"990\":1,\"1505\":1}}],[\"转换\",{\"0\":{\"475\":1,\"990\":1,\"1505\":1}}],[\"转换路径为模块名\",{\"1\":{\"412\":1,\"927\":1,\"1442\":1}}],[\"混合头\",{\"1\":{\"1894\":1,\"2263\":1,\"2632\":1}}],[\"混入驱动类型名称\",{\"1\":{\"1715\":1,\"2115\":1,\"2484\":1}}],[\"元数据一定使用\",{\"1\":{\"1903\":1,\"2272\":1,\"2641\":1}}],[\"元数据\",{\"0\":{\"1903\":1,\"2272\":1,\"2641\":1}}],[\"元素头\",{\"1\":{\"1894\":1,\"2263\":1,\"2632\":1}}],[\"元组\",{\"1\":{\"320\":1,\"330\":1,\"367\":1,\"833\":1,\"848\":1,\"882\":1,\"1348\":1,\"1363\":1,\"1397\":1}}],[\"纯文字头\",{\"1\":{\"1894\":1,\"2263\":1,\"2632\":1}}],[\"纯文本形式的格式化\",{\"1\":{\"545\":1,\"1060\":1,\"1575\":1}}],[\"纯文本字符串\",{\"1\":{\"367\":1,\"882\":1,\"1397\":1}}],[\"纯文本消息参数\",{\"1\":{\"309\":1,\"822\":1,\"1337\":1}}],[\"隶属于\",{\"1\":{\"1893\":1,\"2262\":1,\"2631\":1}}],[\"点分割模块路径\",{\"1\":{\"1852\":1,\"2221\":1,\"2590\":1}}],[\"点击发布适配器按钮\",{\"1\":{\"481\":1,\"996\":1,\"1511\":1}}],[\"点击下方链接直达\",{\"1\":{\"459\":2,\"974\":2,\"1489\":2}}],[\"点击下方链接前往\",{\"1\":{\"459\":1,\"974\":1,\"1489\":1}}],[\"点击左下角\",{\"1\":{\"11\":1,\"23\":1,\"35\":1}}],[\"表现与\",{\"1\":{\"1901\":1,\"2270\":1,\"2639\":1}}],[\"表示第\",{\"1\":{\"1909\":1,\"2278\":1,\"2647\":1}}],[\"表示此处填入可能的正则匹配的组\",{\"1\":{\"1909\":1,\"2278\":1,\"2647\":1}}],[\"表示此处填入所有后随参数\",{\"1\":{\"1909\":1,\"2278\":1,\"2647\":1}}],[\"表示此处填入快捷指令后随的第\",{\"1\":{\"1909\":1,\"2278\":1,\"2647\":1}}],[\"表示默认值为空值\",{\"1\":{\"1899\":1,\"2268\":1,\"2637\":1}}],[\"表示\",{\"1\":{\"1897\":1,\"1909\":1,\"2266\":1,\"2278\":1,\"2635\":1,\"2647\":1}}],[\"表示支持所有适配器\",{\"1\":{\"1846\":1,\"2215\":1,\"2584\":1}}],[\"表达式头\",{\"1\":{\"1894\":1,\"2263\":1,\"2632\":1}}],[\"表述\",{\"1\":{\"484\":1,\"999\":1,\"1514\":1}}],[\"独立插件模块名集合\",{\"1\":{\"1826\":1,\"2195\":1,\"2564\":1}}],[\"名字\",{\"1\":{\"1909\":1,\"2278\":1,\"2647\":1}}],[\"名\",{\"1\":{\"1810\":2,\"2179\":2,\"2548\":2}}],[\"名称作为插件名称\",{\"1\":{\"1850\":1,\"2219\":1,\"2588\":1}}],[\"名称\",{\"1\":{\"1582\":1,\"1584\":1,\"1585\":1,\"1963\":1,\"1965\":1,\"1966\":1,\"2332\":1,\"2334\":1,\"2335\":1}}],[\"夹\",{\"1\":{\"1810\":2,\"2179\":2,\"2548\":2}}],[\"强制退出\",{\"1\":{\"1770\":1,\"2139\":1,\"2508\":1}}],[\"强制切换到\",{\"1\":{\"64\":1,\"574\":1,\"1089\":1}}],[\"退出\",{\"1\":{\"1770\":1,\"2139\":1,\"2508\":1}}],[\"环境名称\",{\"1\":{\"1717\":1,\"2096\":1,\"2465\":1}}],[\"环境变量\",{\"1\":{\"163\":1,\"673\":1,\"1188\":1}}],[\"地址\",{\"1\":{\"1678\":1,\"1679\":1,\"1680\":1,\"2047\":1,\"2048\":1,\"2049\":1,\"2416\":1,\"2417\":1,\"2418\":1}}],[\"驱动\",{\"1\":{\"1738\":1,\"1739\":1,\"2084\":1,\"2085\":1,\"2453\":1,\"2454\":1}}],[\"驱动专属\",{\"1\":{\"1722\":1,\"2101\":1,\"2470\":1}}],[\"驱动类型名称\",{\"1\":{\"1721\":1,\"2100\":1,\"2469\":1}}],[\"驱动名称\",{\"1\":{\"1689\":1,\"1767\":1,\"1780\":1,\"2058\":1,\"2136\":1,\"2149\":1,\"2427\":1,\"2505\":1,\"2518\":1}}],[\"驱动框架\",{\"1\":{\"1688\":1,\"1766\":1,\"1779\":1,\"2057\":1,\"2135\":1,\"2148\":1,\"2426\":1,\"2504\":1,\"2517\":1}}],[\"驱动框架设置\",{\"1\":{\"1677\":1,\"1772\":1,\"2046\":1,\"2141\":1,\"2415\":1,\"2510\":1}}],[\"驱动适配\",{\"1\":{\"1676\":1,\"1704\":1,\"1765\":1,\"1771\":1,\"1795\":1,\"2045\":1,\"2073\":1,\"2134\":1,\"2140\":1,\"2164\":1,\"2414\":1,\"2442\":1,\"2503\":1,\"2509\":1,\"2533\":1}}],[\"驱动适配器\",{\"1\":{\"1658\":1,\"2027\":1,\"2396\":1}}],[\"驱动器提供了多种方法来帮助适配器进行网络通信\",{\"1\":{\"1940\":1,\"2309\":1,\"2678\":1}}],[\"驱动器控制框架的启动和停止\",{\"1\":{\"1716\":1,\"2095\":1,\"2464\":1}}],[\"驱动器基类\",{\"1\":{\"1716\":1,\"2095\":1,\"2464\":1}}],[\"驱动器商店\",{\"1\":{\"507\":1,\"1022\":1,\"1537\":1}}],[\"驱动器包名可以在\",{\"1\":{\"507\":1,\"1022\":1,\"1537\":1}}],[\"驱动器添加路由规则\",{\"1\":{\"118\":1,\"628\":1,\"1143\":1}}],[\"驱动器配置格式采用特殊语法\",{\"1\":{\"54\":1,\"564\":1,\"1079\":1}}],[\"驱动器的上层\",{\"1\":{\"525\":1,\"1040\":1,\"1555\":1}}],[\"驱动器的配置方法已经在配置章节中简单进行了介绍\",{\"1\":{\"54\":1,\"564\":1,\"1079\":1}}],[\"驱动器的选择通常与机器人所使用的协议适配器相关\",{\"1\":{\"52\":1,\"562\":1,\"1077\":1}}],[\"驱动器类型大体上可以分为两种\",{\"1\":{\"53\":1,\"563\":1,\"1078\":1}}],[\"驱动器类型\",{\"0\":{\"53\":1,\"563\":1,\"1078\":1}}],[\"驱动器\",{\"1\":{\"52\":1,\"496\":2,\"525\":1,\"562\":1,\"1011\":2,\"1040\":1,\"1077\":1,\"1526\":2,\"1555\":1}}],[\"允许的参数类型\",{\"1\":{\"1648\":1,\"2017\":1,\"2386\":1}}],[\"匿名参数列表\",{\"1\":{\"1648\":1,\"2017\":1,\"2386\":1}}],[\"新数据库会话\",{\"1\":{\"2691\":1,\"2706\":1,\"2721\":1}}],[\"新建命名空间并替换\",{\"0\":{\"1905\":1,\"2274\":1,\"2643\":1}}],[\"新参数将会覆盖命令组默认值\",{\"1\":{\"1877\":1,\"1878\":1,\"2246\":1,\"2247\":1,\"2615\":1,\"2616\":1}}],[\"新构造的消息\",{\"1\":{\"1623\":1,\"1624\":1,\"1992\":1,\"1993\":1,\"2361\":1,\"2362\":1}}],[\"新的事件响应器类\",{\"1\":{\"242\":1,\"755\":1,\"1270\":1}}],[\"第一个例子中传入\",{\"1\":{\"1909\":1,\"2278\":1,\"2647\":1}}],[\"第二个参数为\",{\"1\":{\"1907\":1,\"2276\":1,\"2645\":1}}],[\"第\",{\"1\":{\"1612\":1,\"1981\":1,\"2350\":1}}],[\"第三方插件\",{\"1\":{\"509\":1,\"1024\":1,\"1539\":1}}],[\"第三方库\",{\"1\":{\"450\":1,\"965\":1,\"1480\":1}}],[\"第三方响应规则\",{\"0\":{\"107\":1,\"617\":1,\"1132\":1}}],[\"个匹配组的内容\",{\"1\":{\"1909\":1,\"2278\":1,\"2647\":1}}],[\"个参数\",{\"1\":{\"1909\":1,\"2278\":1,\"2647\":1}}],[\"个数\",{\"1\":{\"1617\":1,\"1986\":1,\"2355\":1}}],[\"个消息段\",{\"1\":{\"1612\":1,\"1981\":1,\"2350\":1}}],[\"个\",{\"1\":{\"1612\":1,\"1981\":1,\"2350\":1}}],[\"个套接字\",{\"1\":{\"64\":1,\"574\":1,\"1089\":1}}],[\"大致相同\",{\"1\":{\"1609\":1,\"1978\":1,\"2347\":1}}],[\"大小写不敏感\",{\"1\":{\"163\":1,\"165\":1,\"673\":1,\"675\":1,\"1188\":1,\"1190\":1}}],[\"告知\",{\"1\":{\"1601\":1,\"1602\":1,\"1951\":1,\"1952\":1,\"2320\":1,\"2321\":1}}],[\"希望\",{\"1\":{\"1590\":1,\"1971\":1,\"2340\":1}}],[\"希望能在\",{\"1\":{\"488\":1,\"489\":1,\"1003\":1,\"1004\":1,\"1518\":1,\"1519\":1}}],[\"预处理\",{\"1\":{\"1584\":1,\"1965\":1,\"2334\":1}}],[\"构造需要的参数说明如下\",{\"1\":{\"1899\":1,\"2268\":1,\"2637\":1}}],[\"构造消息数组\",{\"1\":{\"1611\":1,\"1980\":1,\"2349\":1}}],[\"构造消息序列\",{\"0\":{\"535\":1,\"1050\":1,\"1565\":1}}],[\"构建的新消息\",{\"1\":{\"1616\":1,\"1985\":1,\"2354\":1}}],[\"构建模板的效果是一样的\",{\"1\":{\"545\":1,\"1060\":1,\"1575\":1}}],[\"构建消息模板时\",{\"1\":{\"545\":1,\"1060\":1,\"1575\":1}}],[\"构建消息模板\",{\"1\":{\"545\":1,\"1060\":1,\"1575\":1}}],[\"总是可以参考python\",{\"1\":{\"545\":1,\"1060\":1,\"1575\":1}}],[\"极为相近\",{\"1\":{\"545\":1,\"1060\":1,\"1575\":1}}],[\"客制化\",{\"1\":{\"545\":1,\"1060\":1,\"1575\":1}}],[\"客户端混入基类\",{\"1\":{\"1753\":1,\"1758\":1,\"1762\":1,\"2108\":1,\"2109\":1,\"2130\":1,\"2477\":1,\"2478\":1,\"2499\":1}}],[\"客户端连接请求\",{\"1\":{\"1606\":1,\"1956\":1,\"2325\":1}}],[\"客户端连接等情形\",{\"1\":{\"53\":1,\"563\":1,\"1078\":1}}],[\"客户端请求\",{\"1\":{\"1605\":1,\"1955\":1,\"2324\":1}}],[\"客户端\",{\"0\":{\"1943\":1,\"1944\":1,\"2312\":1,\"2313\":1,\"2681\":1,\"2682\":1},\"1\":{\"473\":1,\"525\":1,\"988\":1,\"1040\":1,\"1503\":1,\"1555\":1,\"1940\":2,\"2309\":2,\"2678\":2}}],[\"客户端通信方式\",{\"0\":{\"472\":1,\"987\":1,\"1502\":1}}],[\"客户端驱动器\",{\"1\":{\"78\":1,\"79\":1,\"80\":1,\"588\":1,\"589\":1,\"590\":1,\"1103\":1,\"1104\":1,\"1105\":1}}],[\"客户端驱动器模块中还会提供一个\",{\"1\":{\"54\":1,\"564\":1,\"1079\":1}}],[\"客户端型驱动器可以分为以下两种\",{\"1\":{\"53\":1,\"563\":1,\"1078\":1}}],[\"多行富文本编排\",{\"1\":{\"545\":1,\"1060\":1,\"1575\":1}}],[\"多用户同时参与的会话\",{\"1\":{\"140\":1,\"650\":1,\"1165\":1}}],[\"多用于使用\",{\"1\":{\"53\":2,\"563\":2,\"1078\":2}}],[\"扩展\",{\"1\":{\"544\":1,\"1059\":1,\"1574\":1}}],[\"附加\",{\"1\":{\"544\":1,\"1059\":1,\"1574\":1}}],[\"附有适当的图片指引\",{\"1\":{\"497\":1,\"1012\":1,\"1527\":1}}],[\"拼接一个消息数组或多个消息段到消息数组末尾\",{\"1\":{\"1620\":1,\"1989\":1,\"2358\":1}}],[\"拼接消息\",{\"0\":{\"544\":1,\"1059\":1,\"1574\":1}}],[\"拼接等\",{\"1\":{\"532\":1,\"1047\":1,\"1562\":1}}],[\"切片\",{\"1\":{\"543\":1,\"1058\":1,\"1573\":1,\"1612\":1,\"1981\":1,\"2350\":1}}],[\"切片的基础上\",{\"1\":{\"543\":1,\"1058\":1,\"1573\":1}}],[\"切换到适配器页签\",{\"1\":{\"481\":1,\"996\":1,\"1511\":1}}],[\"比较\",{\"0\":{\"541\":1,\"1056\":1,\"1571\":1}}],[\"比如\",{\"1\":{\"7\":1,\"19\":1,\"31\":1,\"139\":1,\"649\":1,\"1164\":1}}],[\"循环遍历消息段\",{\"1\":{\"540\":1,\"1055\":1,\"1570\":1}}],[\"遍历\",{\"0\":{\"540\":1,\"1055\":1,\"1570\":1}}],[\"既可以使用\",{\"1\":{\"535\":1,\"1050\":1,\"1565\":1}}],[\"既然事件是基类的子类型\",{\"1\":{\"423\":1,\"938\":1,\"1453\":1}}],[\"既然驱动器可以作为服务端运行\",{\"1\":{\"118\":1,\"628\":1,\"1143\":1}}],[\"抽象基类\",{\"1\":{\"533\":1,\"1048\":1,\"1563\":1}}],[\"抽象类\",{\"1\":{\"82\":1,\"592\":1,\"1107\":1}}],[\"抽象类继承自\",{\"1\":{\"82\":1,\"592\":1,\"1107\":1}}],[\"绝大多数的平台都有着独特的消息类型\",{\"1\":{\"533\":1,\"1048\":1,\"1563\":1}}],[\"认识消息类型\",{\"0\":{\"531\":1,\"1046\":1,\"1561\":1}}],[\"都需要执行此命令\",{\"1\":{\"1932\":1,\"2301\":1,\"2670\":1}}],[\"都采用消息序列的形式进行处理\",{\"1\":{\"530\":1,\"1045\":1,\"1560\":1}}],[\"都要在内部继承自这个\",{\"1\":{\"208\":1,\"720\":1,\"1235\":1}}],[\"越小越优先\",{\"1\":{\"529\":1,\"1044\":1,\"1559\":1}}],[\"越先被触发\",{\"1\":{\"89\":1,\"599\":1,\"1114\":1}}],[\"辅助函数来创建一个事件响应器\",{\"1\":{\"528\":1,\"1043\":1,\"1558\":1}}],[\"辅助函数以\",{\"1\":{\"527\":1,\"1042\":1,\"1557\":1}}],[\"辅助函数\",{\"1\":{\"527\":1,\"1042\":1,\"1557\":1}}],[\"辅助用户更好的上手项目以及进行开发\",{\"1\":{\"497\":1,\"1012\":1,\"1527\":1}}],[\"辅助用户更好地上手项目以及进行开发\",{\"1\":{\"495\":1,\"1010\":1,\"1525\":1}}],[\"互相搭配\",{\"1\":{\"525\":1,\"1040\":1,\"1555\":1}}],[\"操作系统的消息格式相互转换\",{\"1\":{\"525\":1,\"1040\":1,\"1555\":1}}],[\"操作失败\",{\"1\":{\"212\":1,\"724\":1,\"1239\":1}}],[\"稍后的文档中将会使用到这些概念\",{\"1\":{\"525\":1,\"1040\":1,\"1555\":1}}],[\"8\",{\"1\":{\"520\":1,\"521\":1,\"1035\":1,\"1036\":1,\"1550\":1,\"1551\":1}}],[\"8601\",{\"1\":{\"175\":1,\"685\":1,\"1200\":1}}],[\"变种\",{\"1\":{\"520\":1,\"521\":1,\"1035\":1,\"1036\":1,\"1550\":1,\"1551\":1}}],[\"管理插件\",{\"1\":{\"516\":1,\"1031\":1,\"1546\":1}}],[\"取消注释或者添加如下代码\",{\"1\":{\"515\":1,\"1030\":1,\"1545\":1}}],[\"包含尚未加载的插件\",{\"1\":{\"1813\":1,\"2182\":1,\"2551\":1}}],[\"包含配置信息的\",{\"1\":{\"1716\":1,\"2095\":1,\"2464\":1}}],[\"包含环境信息的\",{\"1\":{\"1716\":1,\"2095\":1,\"2464\":1}}],[\"包含的消息段类型\",{\"1\":{\"1623\":1,\"1992\":1,\"2361\":1}}],[\"包含图片\",{\"1\":{\"545\":1,\"1060\":1,\"1575\":1}}],[\"包\",{\"1\":{\"514\":1,\"1029\":1,\"1544\":1}}],[\"包插件\",{\"0\":{\"514\":1,\"1029\":1,\"1544\":1}}],[\"包括原始头部\",{\"1\":{\"1902\":1,\"2271\":1,\"2640\":1}}],[\"包括事件响应与消息处理等\",{\"1\":{\"505\":1,\"1020\":1,\"1535\":1}}],[\"包括\",{\"1\":{\"492\":1,\"493\":1,\"1007\":1,\"1008\":1,\"1522\":1,\"1523\":1}}],[\"包括插件的索引名称\",{\"1\":{\"110\":1,\"620\":1,\"1135\":1}}],[\"包括但不限于\",{\"1\":{\"64\":1,\"574\":1,\"1089\":1}}],[\"尽管它还什么都没做\",{\"1\":{\"513\":1,\"1028\":1,\"1543\":1}}],[\"你并不知道其他插件会不会使用相同的表名\",{\"1\":{\"2685\":1,\"2700\":1,\"2715\":1}}],[\"你也可以通过指定\",{\"1\":{\"2685\":1,\"2700\":1,\"2715\":1}}],[\"你也可以使用\",{\"1\":{\"510\":1,\"1025\":1,\"1540\":1}}],[\"你将会对使用\",{\"1\":{\"2683\":1,\"2698\":1,\"2713\":1}}],[\"你还可以使用config来管理所有命名空间并切换至任意命名空间\",{\"1\":{\"1905\":1,\"2274\":1,\"2643\":1}}],[\"你应该使用\",{\"1\":{\"1896\":1,\"2265\":1,\"2634\":1}}],[\"你需要确保你使用的消息序列类型与你所要发送的平台类型一致\",{\"1\":{\"534\":1,\"1049\":1,\"1564\":1}}],[\"你需要导入对应的协议适配器中的消息序列和消息段后才能使用其特殊的工厂方法\",{\"1\":{\"533\":1,\"1048\":1,\"1563\":1}}],[\"你仍可以使用\",{\"1\":{\"510\":1,\"1025\":1,\"1540\":1}}],[\"你可以不传入\",{\"1\":{\"1897\":1,\"2266\":1,\"2635\":1}}],[\"你可以在\",{\"1\":{\"114\":1,\"624\":1,\"1139\":1}}],[\"你可以通过直接继承\",{\"1\":{\"84\":1,\"594\":1,\"1109\":1}}],[\"你可能就需要考虑相关库对事件循环的支持\",{\"1\":{\"64\":1,\"574\":1,\"1089\":1}}],[\"解释器运行入口文件\",{\"1\":{\"510\":1,\"1025\":1,\"1540\":1}}],[\"解析失败时的异常内容\",{\"1\":{\"1902\":1,\"2271\":1,\"2640\":1}}],[\"解析失败时剩余的数据\",{\"1\":{\"1902\":1,\"2271\":1,\"2640\":1}}],[\"解析结果与可能的正则匹配组\",{\"1\":{\"1902\":1,\"2271\":1,\"2640\":1}}],[\"解析结果\",{\"0\":{\"1902\":1,\"2271\":1,\"2640\":1}}],[\"解析后头部\",{\"1\":{\"1902\":1,\"2271\":1,\"2640\":1}}],[\"解析后\",{\"1\":{\"1894\":1,\"2263\":1,\"2632\":1}}],[\"解析参数的命令消息事件响应器\",{\"1\":{\"1873\":1,\"1890\":1,\"2242\":1,\"2259\":1,\"2611\":1,\"2628\":1}}],[\"解析并导入点分表示法的对象\",{\"1\":{\"413\":1,\"928\":1,\"1443\":1}}],[\"解析出错时不会退出程序\",{\"1\":{\"362\":1,\"877\":1,\"1392\":1}}],[\"避免重复命名\",{\"1\":{\"509\":1,\"1024\":1,\"1539\":1}}],[\"顾名思义\",{\"1\":{\"509\":1,\"533\":1,\"1024\":1,\"1048\":1,\"1539\":1,\"1563\":1}}],[\"监听的端口\",{\"1\":{\"508\":1,\"1023\":1,\"1538\":1}}],[\"监听的\",{\"1\":{\"508\":1,\"1023\":1,\"1538\":1}}],[\"复杂类型数据需使用\",{\"1\":{\"508\":1,\"1023\":1,\"1538\":1}}],[\"复制其中的\",{\"1\":{\"447\":1,\"962\":1,\"1477\":1}}],[\"入口文件不会被创建\",{\"1\":{\"509\":1,\"1024\":1,\"1539\":1}}],[\"入口文件需要完成框架的初始化\",{\"1\":{\"509\":1,\"1024\":1,\"1539\":1}}],[\"入口文件\",{\"1\":{\"506\":1,\"509\":1,\"517\":1,\"518\":1,\"1021\":1,\"1024\":1,\"1032\":1,\"1033\":1,\"1536\":1,\"1539\":1,\"1547\":1,\"1548\":1}}],[\"入口文件调用\",{\"1\":{\"215\":1,\"727\":1,\"1242\":1}}],[\"网络请求等常用功能\",{\"1\":{\"505\":1,\"1020\":1,\"1535\":1}}],[\"集成\",{\"1\":{\"505\":1,\"1020\":1,\"1535\":1}}],[\"生态组件\",{\"1\":{\"505\":1,\"1020\":1,\"1535\":1}}],[\"生态的成长\",{\"1\":{\"505\":1,\"1020\":1,\"1535\":1}}],[\"生态中就有一类插件\",{\"1\":{\"115\":1,\"625\":1,\"1140\":1}}],[\"经过深入分析社区反馈\",{\"1\":{\"505\":1,\"1020\":1,\"1535\":1}}],[\"状态\",{\"1\":{\"504\":1,\"1019\":1,\"1534\":1}}],[\"状态码\",{\"1\":{\"473\":1,\"988\":1,\"1503\":1}}],[\"整合现有\",{\"1\":{\"504\":1,\"1019\":1,\"1534\":1}}],[\"缺少统计相关信息以帮助商店更好的展示当前插件状态\",{\"1\":{\"504\":1,\"1019\":1,\"1534\":1}}],[\"跟进插件新版本情况等\",{\"1\":{\"504\":1,\"1019\":1,\"1534\":1}}],[\"跟踪插件前进行模块\",{\"1\":{\"116\":1,\"626\":1,\"1141\":1}}],[\"索引消息段\",{\"1\":{\"1615\":1,\"1984\":1,\"2353\":1}}],[\"索引\",{\"1\":{\"532\":1,\"543\":1,\"1047\":1,\"1058\":1,\"1562\":1,\"1573\":1,\"1612\":1,\"1615\":1,\"1981\":1,\"1984\":1,\"2350\":1,\"2353\":1}}],[\"索引原理等\",{\"1\":{\"503\":1,\"1018\":1,\"1533\":1}}],[\"索引与切片\",{\"0\":{\"543\":1,\"1058\":1,\"1573\":1}}],[\"索引与\",{\"1\":{\"503\":1,\"543\":1,\"1018\":1,\"1058\":1,\"1533\":1,\"1573\":1}}],[\"掌握\",{\"1\":{\"503\":1,\"504\":1,\"505\":1,\"1018\":1,\"1019\":1,\"1020\":1,\"1533\":1,\"1534\":1,\"1535\":1}}],[\"熟练掌握\",{\"1\":{\"503\":1,\"1018\":1,\"1533\":1}}],[\"熟悉静态网站生成\",{\"1\":{\"503\":1,\"1018\":1,\"1533\":1}}],[\"熟悉前后端相关实现方式\",{\"1\":{\"499\":1,\"1014\":1,\"1529\":1}}],[\"熟悉文档结构组织与语言表达\",{\"1\":{\"497\":1,\"1012\":1,\"1527\":1}}],[\"熟悉所选语言的\",{\"1\":{\"493\":1,\"1008\":1,\"1523\":1}}],[\"熟悉聊天机器人开发\",{\"1\":{\"492\":1,\"493\":1,\"1007\":1,\"1008\":1,\"1522\":1,\"1523\":1}}],[\"熟悉至少两个聊天平台的聊天机器人开发\",{\"1\":{\"491\":1,\"1006\":1,\"1521\":1}}],[\"熟悉\",{\"1\":{\"484\":1,\"485\":1,\"487\":1,\"488\":1,\"489\":1,\"492\":1,\"495\":3,\"496\":3,\"497\":2,\"499\":2,\"500\":2,\"501\":5,\"504\":4,\"505\":3,\"999\":1,\"1000\":1,\"1002\":1,\"1003\":1,\"1004\":1,\"1007\":1,\"1010\":3,\"1011\":3,\"1012\":2,\"1014\":2,\"1015\":2,\"1016\":5,\"1019\":4,\"1020\":3,\"1514\":1,\"1515\":1,\"1517\":1,\"1518\":1,\"1519\":1,\"1522\":1,\"1525\":3,\"1526\":3,\"1527\":2,\"1529\":2,\"1530\":2,\"1531\":5,\"1534\":4,\"1535\":3}}],[\"桌面端与移动端显示正常\",{\"1\":{\"503\":1,\"1018\":1,\"1533\":1}}],[\"升级数据库\",{\"1\":{\"1928\":1,\"1932\":1,\"2297\":1,\"2301\":1,\"2666\":1,\"2670\":1}}],[\"升级官网采用新版组件库\",{\"1\":{\"503\":1,\"1018\":1,\"1533\":1}}],[\"升级相关依赖并重新打造\",{\"1\":{\"503\":1,\"1018\":1,\"1533\":1}}],[\"布局与组件\",{\"1\":{\"503\":1,\"1018\":1,\"1533\":1}}],[\"替换现有的热重载逻辑以减少开发环境启动耗时等\",{\"1\":{\"503\":1,\"1018\":1,\"1533\":1}}],[\"替代方案\",{\"1\":{\"64\":1,\"72\":1,\"574\":1,\"582\":1,\"1089\":1,\"1097\":1}}],[\"水平\",{\"1\":{\"503\":1,\"1018\":1,\"1533\":1}}],[\"活动联合各大开源社区\",{\"1\":{\"502\":1,\"1017\":1,\"1532\":1}}],[\"旨在鼓励高校学生积极参与开源软件的开发维护\",{\"1\":{\"502\":1,\"1017\":1,\"1532\":1}}],[\"旨在鼓励在校学生积极参与开源软件的开发维护\",{\"1\":{\"482\":1,\"494\":1,\"498\":1,\"997\":1,\"1009\":1,\"1013\":1,\"1512\":1,\"1524\":1,\"1528\":1}}],[\"便于\",{\"1\":{\"1937\":1,\"1939\":1,\"2306\":1,\"2308\":1,\"2675\":1,\"2677\":1}}],[\"便于用户读写应用数据\",{\"1\":{\"501\":1,\"1016\":1,\"1531\":1}}],[\"便于维护和管理\",{\"1\":{\"5\":1,\"17\":1,\"29\":1}}],[\"各驱动请继承以下基类\",{\"1\":{\"1713\":1,\"2082\":1,\"2451\":1}}],[\"各协议请继承以下基类\",{\"1\":{\"1576\":1,\"1945\":1,\"2314\":1}}],[\"各模块职责与适配器编写\",{\"1\":{\"500\":1,\"1015\":1,\"1530\":1}}],[\"各司其职\",{\"1\":{\"115\":1,\"625\":1,\"1140\":1}}],[\"均可以从\",{\"1\":{\"527\":1,\"1042\":1,\"1557\":1}}],[\"均可通过图形化界面的形式为用户提供更便捷的项目开发\",{\"1\":{\"499\":1,\"1014\":1,\"1529\":1}}],[\"均为下文中适配器所编写的类\",{\"1\":{\"467\":1,\"982\":1,\"1497\":1}}],[\"合理分配布局\",{\"1\":{\"497\":1,\"1012\":1,\"1527\":1}}],[\"合并响应规则可以有多种形式\",{\"1\":{\"428\":1,\"943\":1,\"1458\":1}}],[\"合并响应规则\",{\"0\":{\"428\":1,\"943\":1,\"1458\":1}}],[\"适当的界面美化\",{\"1\":{\"497\":1,\"1012\":1,\"1527\":1}}],[\"适配\",{\"1\":{\"477\":1,\"992\":1,\"1507\":1}}],[\"适配器将会对该请求进行处理\",{\"1\":{\"1941\":1,\"2310\":1,\"2679\":1}}],[\"适配器同样也可以通过定义路由来响应机器人相关的网络通信\",{\"1\":{\"1941\":1,\"2310\":1,\"2679\":1}}],[\"适配器类\",{\"1\":{\"1720\":1,\"2099\":1,\"2468\":1}}],[\"适配器类型\",{\"1\":{\"218\":1,\"730\":1,\"1245\":1}}],[\"适配器在接收到消息时\",{\"1\":{\"534\":1,\"1049\":1,\"1564\":1}}],[\"适配器在处理时通常需要打印日志\",{\"1\":{\"468\":1,\"983\":1,\"1498\":1}}],[\"适配器商店\",{\"1\":{\"507\":1,\"1022\":1,\"1537\":1}}],[\"适配器包名可以在\",{\"1\":{\"507\":1,\"1022\":1,\"1537\":1}}],[\"适配器并能够使用\",{\"1\":{\"488\":1,\"1003\":1,\"1518\":1}}],[\"适配器来支持\",{\"1\":{\"488\":1,\"1003\":1,\"1518\":1}}],[\"适配器测试\",{\"0\":{\"480\":1,\"995\":1,\"1510\":1}}],[\"适配器的注册\",{\"1\":{\"1716\":1,\"2095\":1,\"2464\":1}}],[\"适配器的配置方法与插件配置类似\",{\"1\":{\"469\":1,\"984\":1,\"1499\":1}}],[\"适配器的所有事件模型均继承自\",{\"1\":{\"41\":1,\"551\":1,\"1066\":1}}],[\"适配器项目通常以\",{\"1\":{\"465\":1,\"980\":1,\"1495\":1}}],[\"适配器名称\",{\"1\":{\"218\":1,\"470\":1,\"730\":1,\"985\":1,\"1245\":1,\"1500\":1}}],[\"适配器为例\",{\"1\":{\"38\":1,\"548\":1,\"1063\":1}}],[\"适配器通常由\",{\"1\":{\"464\":1,\"979\":1,\"1494\":1}}],[\"适配器通常由四个部分组成\",{\"1\":{\"37\":1,\"547\":1,\"1062\":1}}],[\"适配器通常有两种功能\",{\"1\":{\"37\":1,\"547\":1,\"1062\":1}}],[\"适配器功能与组成\",{\"0\":{\"37\":1,\"547\":1,\"1062\":1}}],[\"适配器\",{\"0\":{\"488\":1,\"500\":1,\"1003\":1,\"1015\":1,\"1518\":1,\"1530\":1},\"1\":{\"36\":1,\"500\":1,\"525\":1,\"546\":1,\"1015\":1,\"1040\":1,\"1061\":1,\"1530\":1,\"1555\":1}}],[\"404\",{\"1\":{\"2752\":1}}],[\"46327b837dd8\",{\"1\":{\"1931\":1,\"2300\":1,\"2669\":1}}],[\"4567\",{\"1\":{\"1894\":2,\"2263\":2,\"2632\":2}}],[\"456\",{\"1\":{\"1894\":6,\"2263\":6,\"2632\":6}}],[\"4\",{\"1\":{\"1612\":1,\"1981\":1,\"2350\":1}}],[\"415\",{\"1\":{\"497\":1,\"1012\":1,\"1527\":1}}],[\"484\",{\"1\":{\"3\":1,\"15\":1,\"27\":1,\"372\":1,\"887\":1,\"1402\":1}}],[\"单文件插件\",{\"0\":{\"513\":1,\"1028\":1,\"1543\":1}}],[\"单元测试\",{\"1\":{\"497\":1,\"1012\":1,\"1527\":1,\"2734\":1,\"2741\":1,\"2748\":1}}],[\"单位\",{\"1\":{\"170\":1,\"680\":1,\"1195\":1}}],[\"工厂方法创建消息\",{\"1\":{\"1609\":1,\"1978\":1,\"2347\":1}}],[\"工作流\",{\"1\":{\"504\":1,\"1019\":1,\"1534\":1}}],[\"工作原理\",{\"1\":{\"497\":1,\"1012\":1,\"1527\":1}}],[\"工具更佳\",{\"1\":{\"485\":1,\"1000\":1,\"1515\":1}}],[\"工具进行类型检查\",{\"1\":{\"8\":1,\"20\":1,\"32\":1}}],[\"方便进行命令匹配\",{\"1\":{\"528\":1,\"1043\":1,\"1558\":1}}],[\"方便了开发者直观的感受机器人文本交互功能\",{\"1\":{\"496\":1,\"1011\":1,\"1526\":1}}],[\"方法也进行了增强\",{\"1\":{\"543\":1,\"1058\":1,\"1573\":1}}],[\"方法进行类型过滤\",{\"1\":{\"543\":1,\"1058\":1,\"1573\":1}}],[\"方法进行构造\",{\"1\":{\"538\":1,\"1053\":1,\"1568\":1}}],[\"方法进行加载并导入需要使用的方法\",{\"1\":{\"435\":1,\"950\":1,\"1465\":1}}],[\"方法创建事件响应器过于繁琐且不能记录插件信息\",{\"1\":{\"527\":1,\"1042\":1,\"1557\":1}}],[\"方法自行读取配置来加载插件\",{\"1\":{\"520\":1,\"521\":1,\"1035\":1,\"1036\":1,\"1550\":1,\"1551\":1}}],[\"方法发送数据\",{\"1\":{\"476\":1,\"991\":1,\"1506\":1}}],[\"方法告知\",{\"1\":{\"474\":2,\"989\":2,\"1504\":2}}],[\"方法\",{\"1\":{\"468\":1,\"476\":1,\"478\":1,\"543\":1,\"544\":1,\"983\":1,\"991\":1,\"993\":1,\"1058\":1,\"1059\":1,\"1498\":1,\"1506\":1,\"1508\":1,\"1573\":1,\"1574\":1}}],[\"方法的方式\",{\"1\":{\"454\":1,\"969\":1,\"1484\":1}}],[\"方法可轻松完成这一过程\",{\"1\":{\"453\":1,\"968\":1,\"1483\":1}}],[\"方法添加文件处理器\",{\"1\":{\"420\":1,\"935\":1,\"1450\":1}}],[\"方法时抛出\",{\"1\":{\"203\":1,\"715\":1,\"1230\":1}}],[\"方法快速获取\",{\"1\":{\"123\":1,\"633\":1,\"1148\":1}}],[\"方法动态阻止事件传播\",{\"1\":{\"90\":1,\"600\":1,\"1115\":1}}],[\"方法设置存储提供者\",{\"1\":{\"83\":1,\"593\":1,\"1108\":1}}],[\"方法获取消息纯文本\",{\"1\":{\"539\":1,\"1054\":1,\"1569\":1}}],[\"方法获取全局驱动器实例\",{\"1\":{\"55\":1,\"565\":1,\"1080\":1}}],[\"方法获取指定\",{\"1\":{\"40\":1,\"550\":1,\"1065\":1}}],[\"方法获取\",{\"1\":{\"40\":1,\"550\":1,\"1065\":1}}],[\"方法来模拟\",{\"1\":{\"1942\":1,\"2311\":1,\"2680\":1}}],[\"方法来拼接一串消息\",{\"1\":{\"544\":1,\"1059\":1,\"1574\":1}}],[\"方法来检查消息中是否仅包含指定的消息段\",{\"1\":{\"542\":1,\"1057\":1,\"1572\":1}}],[\"方法来\",{\"1\":{\"542\":1,\"1057\":1,\"1572\":1}}],[\"方法来获取消息序列中的纯文本内容\",{\"1\":{\"532\":1,\"1047\":1,\"1562\":1}}],[\"方法来获取已注册的适配器\",{\"1\":{\"39\":1,\"549\":1,\"1064\":1}}],[\"方法来发送请求\",{\"1\":{\"476\":1,\"991\":1,\"1506\":1}}],[\"方法来发送数据\",{\"1\":{\"476\":1,\"991\":1,\"1506\":1}}],[\"方法来让\",{\"1\":{\"475\":1,\"990\":1,\"1505\":1}}],[\"方法来注册多个适配器\",{\"1\":{\"38\":1,\"548\":1,\"1063\":1}}],[\"方法将适配器注册到驱动器中即可\",{\"1\":{\"38\":1,\"548\":1,\"1063\":1}}],[\"成果仓库\",{\"1\":{\"495\":1,\"496\":1,\"497\":1,\"499\":1,\"500\":1,\"501\":1,\"503\":1,\"504\":1,\"505\":1,\"1010\":1,\"1011\":1,\"1012\":1,\"1014\":1,\"1015\":1,\"1016\":1,\"1018\":1,\"1019\":1,\"1020\":1,\"1525\":1,\"1526\":1,\"1527\":1,\"1529\":1,\"1530\":1,\"1531\":1,\"1533\":1,\"1534\":1,\"1535\":1}}],[\"项目本身结构复杂耦合\",{\"1\":{\"504\":1,\"1019\":1,\"1534\":1}}],[\"项目组织方式\",{\"1\":{\"495\":1,\"496\":1,\"497\":1,\"1010\":1,\"1011\":1,\"1012\":1,\"1525\":1,\"1526\":1,\"1527\":1}}],[\"项目管理图形化面板\",{\"0\":{\"499\":1,\"1014\":1,\"1529\":1}}],[\"项目管理\",{\"1\":{\"495\":1,\"1010\":1,\"1525\":1}}],[\"明确各功能模块\",{\"1\":{\"495\":1,\"1010\":1,\"1525\":1}}],[\"进阶部分向已经熟悉开发流程的用户介绍更多高级技巧\",{\"1\":{\"497\":1,\"1012\":1,\"1527\":1}}],[\"进阶\",{\"1\":{\"495\":1,\"496\":1,\"497\":1,\"499\":1,\"500\":1,\"501\":1,\"503\":1,\"504\":1,\"505\":1,\"1010\":1,\"1011\":1,\"1012\":1,\"1014\":1,\"1015\":1,\"1016\":1,\"1018\":1,\"1019\":1,\"1020\":1,\"1525\":1,\"1526\":1,\"1527\":1,\"1529\":1,\"1530\":1,\"1531\":1,\"1533\":1,\"1534\":1,\"1535\":1}}],[\"进行自动化测试\",{\"1\":{\"2697\":1,\"2712\":1,\"2727\":1}}],[\"进行更加真实的集成测试\",{\"1\":{\"1940\":1,\"2309\":1,\"2678\":1}}],[\"进行快捷指令操作\",{\"1\":{\"1907\":1,\"2276\":1,\"2645\":1}}],[\"进行一个\",{\"1\":{\"1605\":1,\"1955\":1,\"2324\":1}}],[\"进行加载\",{\"1\":{\"521\":1,\"1036\":1,\"1551\":1}}],[\"进行项目创建\",{\"1\":{\"506\":1,\"1021\":1,\"1536\":1}}],[\"进行处理\",{\"1\":{\"475\":1,\"990\":1,\"1505\":1}}],[\"进行处理但不显示\",{\"1\":{\"209\":1,\"721\":1,\"1236\":1}}],[\"进行了\",{\"1\":{\"1942\":1,\"2311\":1,\"2680\":1}}],[\"进行了解\",{\"1\":{\"454\":1,\"969\":1,\"1484\":1}}],[\"进行了封装以适用于\",{\"1\":{\"452\":1,\"967\":1,\"1482\":1}}],[\"进行检查\",{\"1\":{\"429\":1,\"944\":1,\"1459\":1}}],[\"进行事件处理的函数\",{\"1\":{\"131\":1,\"641\":1,\"1156\":1}}],[\"脚手架的扩展开发\",{\"1\":{\"505\":1,\"1020\":1,\"1535\":1}}],[\"脚手架\",{\"1\":{\"505\":1,\"1020\":1,\"1535\":1}}],[\"脚手架功能存在一定的定位不明确\",{\"1\":{\"495\":1,\"1010\":1,\"1525\":1}}],[\"脚本\",{\"1\":{\"435\":1,\"950\":1,\"1465\":1}}],[\"随着\",{\"1\":{\"495\":1,\"1010\":1,\"1525\":1}}],[\"部署项目等功能\",{\"1\":{\"495\":1,\"1010\":1,\"1525\":1}}],[\"部分若能转为\",{\"1\":{\"1894\":1,\"2263\":1,\"2632\":1}}],[\"部分插件可能仅在某些特定平台上可用\",{\"1\":{\"525\":1,\"1040\":1,\"1555\":1}}],[\"部分是手动编写的\",{\"1\":{\"485\":1,\"1000\":1,\"1515\":1}}],[\"部分和\",{\"1\":{\"484\":1,\"999\":1,\"1514\":1}}],[\"部分\",{\"0\":{\"484\":1,\"999\":1,\"1514\":1},\"1\":{\"525\":1,\"1040\":1,\"1555\":1}}],[\"安装的插件\",{\"1\":{\"1816\":1,\"2185\":1,\"2554\":1}}],[\"安装适配器\",{\"1\":{\"507\":1,\"1022\":1,\"1537\":1}}],[\"安装依赖\",{\"0\":{\"507\":1,\"1022\":1,\"1537\":1}}],[\"安装\",{\"1\":{\"497\":1,\"507\":1,\"1012\":1,\"1022\":1,\"1527\":1,\"1537\":1,\"1928\":1,\"2297\":1,\"2666\":1}}],[\"安装与卸载插件\",{\"1\":{\"495\":1,\"1010\":1,\"1525\":1}}],[\"安装插件\",{\"0\":{\"434\":1,\"445\":1,\"451\":1,\"949\":1,\"960\":1,\"966\":1,\"1464\":1,\"1475\":1,\"1481\":1},\"1\":{\"1928\":1,\"2297\":1,\"2666\":1}}],[\"交互体验升级\",{\"0\":{\"495\":1,\"1010\":1,\"1525\":1}}],[\"了本次活动\",{\"1\":{\"494\":1,\"498\":1,\"502\":1,\"1009\":1,\"1013\":1,\"1017\":1,\"1524\":1,\"1528\":1,\"1532\":1}}],[\"了解机器人的基本构成有助于你更好地使用\",{\"1\":{\"525\":1,\"1040\":1,\"1555\":1}}],[\"了解使用不同语言编写聊天机器人时的常用实践\",{\"1\":{\"491\":1,\"1006\":1,\"1521\":1}}],[\"了解主流的\",{\"1\":{\"487\":1,\"1002\":1,\"1517\":1}}],[\"了解聊天机器人基本开发过程\",{\"1\":{\"484\":1,\"999\":1,\"1514\":1}}],[\"了解\",{\"1\":{\"484\":2,\"485\":3,\"487\":2,\"488\":3,\"489\":3,\"491\":1,\"505\":1,\"999\":2,\"1000\":3,\"1002\":2,\"1003\":3,\"1004\":3,\"1006\":1,\"1020\":1,\"1514\":2,\"1515\":3,\"1517\":2,\"1518\":3,\"1519\":3,\"1521\":1,\"1535\":1}}],[\"充分考虑同时兼容\",{\"1\":{\"492\":1,\"493\":1,\"1007\":1,\"1008\":1,\"1522\":1,\"1523\":1}}],[\"某聊天平台的\",{\"1\":{\"492\":1,\"493\":1,\"1007\":1,\"1008\":1,\"1522\":1,\"1523\":1}}],[\"快捷命令可以做到标识一段命令\",{\"1\":{\"1907\":1,\"2276\":1,\"2645\":1}}],[\"快捷指令允许三类特殊的\",{\"1\":{\"1909\":1,\"2278\":1,\"2647\":1}}],[\"快捷指令的人类可读描述\",{\"1\":{\"1907\":1,\"2276\":1,\"2645\":1}}],[\"快捷指令的正则匹配结果的额外处理函数\",{\"1\":{\"1907\":1,\"2276\":1,\"2645\":1}}],[\"快捷指令的附带参数\",{\"1\":{\"1907\":1,\"2276\":1,\"2645\":1}}],[\"快捷指令的命令\",{\"1\":{\"1907\":1,\"2276\":1,\"2645\":1}}],[\"快捷指令参数\",{\"1\":{\"1907\":1,\"2276\":1,\"2645\":1}}],[\"快捷指令\",{\"0\":{\"1907\":1,\"2276\":1,\"2645\":1}}],[\"快捷导入\",{\"0\":{\"216\":1,\"728\":1,\"1243\":1,\"1809\":1,\"2178\":1,\"2547\":1}}],[\"快速编写具体的\",{\"1\":{\"492\":1,\"1007\":1,\"1522\":1}}],[\"版\",{\"0\":{\"492\":1,\"1007\":1,\"1522\":1}}],[\"版本上运行所有数据库的测试\",{\"1\":{\"2697\":1,\"2712\":1,\"2727\":1}}],[\"版本兼容\",{\"1\":{\"2697\":1,\"2712\":1,\"2727\":1}}],[\"版本兼容层模块\",{\"1\":{\"141\":1,\"651\":1,\"1166\":1}}],[\"版本的兼容性\",{\"1\":{\"505\":1,\"1020\":1,\"1535\":1}}],[\"版本的发布\",{\"1\":{\"495\":1,\"1010\":1,\"1525\":1}}],[\"版本仍然与\",{\"1\":{\"491\":1,\"1006\":1,\"1521\":1}}],[\"版本\",{\"1\":{\"141\":1,\"651\":1,\"1166\":1}}],[\"优先级为\",{\"1\":{\"529\":1,\"1044\":1,\"1559\":1}}],[\"优先使用\",{\"1\":{\"340\":1,\"341\":1,\"342\":1,\"343\":1,\"855\":1,\"856\":1,\"857\":1,\"858\":1,\"1370\":1,\"1371\":1,\"1372\":1,\"1373\":1}}],[\"优化与\",{\"1\":{\"503\":1,\"1018\":1,\"1533\":1}}],[\"优化官网插件商店的展示细节\",{\"1\":{\"503\":1,\"1018\":1,\"1533\":1}}],[\"优化官网过长的\",{\"1\":{\"503\":1,\"1018\":1,\"1533\":1}}],[\"优化官网部分页面\",{\"1\":{\"503\":1,\"1018\":1,\"1533\":1}}],[\"优化官网开发与生产构建体验\",{\"1\":{\"503\":1,\"1018\":1,\"1533\":1}}],[\"优化用户体验\",{\"1\":{\"495\":1,\"1010\":1,\"1525\":1}}],[\"优化现有的通信\",{\"1\":{\"491\":1,\"1006\":1,\"1521\":1}}],[\"核心\",{\"1\":{\"491\":1,\"1006\":1,\"1521\":1}}],[\"核心代码的平台通用性\",{\"1\":{\"488\":1,\"489\":1,\"1003\":1,\"1004\":1,\"1518\":1,\"1519\":1}}],[\"易于使用的同时易于实现的聊天机器人接口标准\",{\"1\":{\"491\":1,\"1006\":1,\"1521\":1}}],[\"易于维护\",{\"1\":{\"112\":1,\"622\":1,\"1137\":1}}],[\"耦合的历史包袱\",{\"1\":{\"491\":1,\"1006\":1,\"1521\":1}}],[\"去掉无用\",{\"1\":{\"491\":1,\"1006\":1,\"1521\":1}}],[\"去掉与\",{\"1\":{\"491\":1,\"1006\":1,\"1521\":1}}],[\"去除事件消息首尾的\",{\"1\":{\"477\":1,\"992\":1,\"1507\":1}}],[\"规范\",{\"1\":{\"488\":1,\"489\":1,\"499\":1,\"500\":1,\"501\":1,\"1003\":1,\"1004\":1,\"1014\":1,\"1015\":1,\"1016\":1,\"1518\":1,\"1519\":1,\"1529\":1,\"1530\":1,\"1531\":1}}],[\"规则是\",{\"1\":{\"2685\":1,\"2700\":1,\"2715\":1}}],[\"规则类\",{\"1\":{\"347\":1,\"862\":1,\"1377\":1}}],[\"规则的\",{\"1\":{\"90\":1,\"600\":1,\"1115\":1}}],[\"代码符合\",{\"1\":{\"499\":1,\"500\":1,\"501\":1,\"1014\":1,\"1015\":1,\"1016\":1,\"1529\":1,\"1530\":1,\"1531\":1}}],[\"代码遵守项目\",{\"1\":{\"488\":1,\"489\":1,\"1003\":1,\"1004\":1,\"1518\":1,\"1519\":1}}],[\"代表该参数为一个可接受多个\",{\"1\":{\"1898\":1,\"2267\":1,\"2636\":1}}],[\"代表\",{\"1\":{\"208\":1,\"720\":1,\"1235\":1}}],[\"代表使用内置驱动器\",{\"1\":{\"54\":1,\"564\":1,\"1079\":1}}],[\"代表驱动器混入类名\",{\"1\":{\"54\":1,\"564\":1,\"1079\":1}}],[\"代表驱动器类名\",{\"1\":{\"54\":1,\"564\":1,\"1079\":1}}],[\"代表驱动器模块路径\",{\"1\":{\"54\":1,\"564\":1,\"1079\":1}}],[\"获得了此\",{\"1\":{\"2687\":1,\"2702\":1,\"2717\":1}}],[\"获得更多的跨平台支持\",{\"1\":{\"488\":1,\"489\":1,\"1003\":1,\"1004\":1,\"1518\":1,\"1519\":1}}],[\"获取测试用模拟客户端\",{\"1\":{\"1942\":1,\"2311\":1,\"2680\":1}}],[\"获取测试对象\",{\"1\":{\"1941\":1,\"2310\":1,\"2679\":1}}],[\"获取原始参数列表\",{\"1\":{\"1873\":1,\"1890\":1,\"2242\":1,\"2259\":1,\"2611\":1,\"2628\":1}}],[\"获取原始消息的消息内容\",{\"1\":{\"477\":1,\"992\":1,\"1507\":1}}],[\"获取信息\",{\"1\":{\"1860\":1,\"1861\":1,\"2229\":1,\"2230\":1,\"2598\":1,\"2599\":1}}],[\"获取当前已安装的插件支持适配器类列表\",{\"1\":{\"1848\":1,\"2217\":1,\"2586\":1}}],[\"获取当前已导入的所有插件\",{\"1\":{\"1812\":1,\"2181\":1,\"2550\":1}}],[\"获取当前所有可用的插件标识符\",{\"1\":{\"1813\":1,\"2182\":1,\"2551\":1}}],[\"获取当前所有已连接的\",{\"1\":{\"1719\":1,\"2098\":1,\"2467\":1}}],[\"获取已加载插件的适配器支持状态集合\",{\"1\":{\"1824\":1,\"2193\":1,\"2562\":1}}],[\"获取已经导入的某个插件\",{\"1\":{\"1810\":1,\"2179\":1,\"2548\":1}}],[\"获取已注册的\",{\"1\":{\"218\":1,\"730\":1,\"1245\":1}}],[\"获取已注册的适配器\",{\"0\":{\"39\":1,\"549\":1,\"1064\":1}}],[\"获取参数的类型注解\",{\"1\":{\"1656\":1,\"2025\":1,\"2394\":1}}],[\"获取可调用对象签名\",{\"1\":{\"1655\":1,\"2024\":1,\"2393\":1}}],[\"获取个数\",{\"1\":{\"1616\":1,\"1985\":1,\"2354\":1}}],[\"获取指定类型的消息段\",{\"1\":{\"1616\":1,\"1985\":1,\"2354\":1}}],[\"获取指定类型指定个数的消息段\",{\"1\":{\"543\":1,\"1058\":1,\"1573\":1}}],[\"获取消息数组类型\",{\"1\":{\"1629\":1,\"1998\":1,\"2367\":1}}],[\"获取消息段类型\",{\"1\":{\"1610\":1,\"1979\":1,\"2348\":1}}],[\"获取消息纯文本的方法\",{\"1\":{\"1594\":1,\"1975\":1,\"2344\":1}}],[\"获取消息纯文本\",{\"0\":{\"539\":1,\"1054\":1,\"1569\":1}}],[\"获取会话\",{\"1\":{\"1592\":1,\"1973\":1,\"2342\":1}}],[\"获取了命令的参数\",{\"1\":{\"532\":1,\"1047\":1,\"1562\":1}}],[\"获取用户\",{\"1\":{\"478\":1,\"993\":1,\"1508\":1}}],[\"获取事件响应器定义所在源码信息\",{\"1\":{\"1862\":1,\"2231\":1,\"2600\":1}}],[\"获取事件响应器定义所在模块\",{\"1\":{\"1861\":1,\"2230\":1,\"2599\":1}}],[\"获取事件响应器定义所在插件\",{\"1\":{\"1860\":1,\"2229\":1,\"2598\":1}}],[\"获取事件是否与机器人有关的方法\",{\"1\":{\"1595\":1,\"1976\":1,\"2345\":1}}],[\"获取事件消息内容的方法\",{\"1\":{\"1593\":1,\"1974\":1,\"2343\":1}}],[\"获取事件消息的方法\",{\"1\":{\"478\":1,\"993\":1,\"1508\":1}}],[\"获取事件主体\",{\"1\":{\"1591\":1,\"1972\":1,\"2341\":1}}],[\"获取事件日志信息的方法\",{\"1\":{\"1590\":1,\"1971\":1,\"2340\":1}}],[\"获取事件描述的方法\",{\"1\":{\"1589\":1,\"1970\":1,\"2339\":1}}],[\"获取事件名称的方法\",{\"1\":{\"1588\":1,\"1969\":1,\"2338\":1}}],[\"获取事件类型的方法\",{\"1\":{\"1587\":1,\"1968\":1,\"2337\":1}}],[\"获取事件会话\",{\"1\":{\"478\":1,\"993\":1,\"1508\":1}}],[\"获取事件通用信息\",{\"0\":{\"41\":1,\"551\":1,\"1066\":1}}],[\"获取到模拟客户端后\",{\"1\":{\"1941\":1,\"2310\":1,\"2679\":1}}],[\"获取到\",{\"1\":{\"474\":1,\"989\":1,\"1504\":1}}],[\"获取插件配置文件\",{\"1\":{\"435\":1,\"950\":1,\"1465\":1}}],[\"获取插件配置目录\",{\"1\":{\"435\":1,\"950\":1,\"1465\":1}}],[\"获取插件数据文件\",{\"1\":{\"435\":1,\"950\":1,\"1465\":1}}],[\"获取插件数据目录\",{\"1\":{\"435\":1,\"950\":1,\"1465\":1}}],[\"获取插件缓存文件\",{\"1\":{\"435\":1,\"950\":1,\"1465\":1}}],[\"获取插件缓存目录\",{\"1\":{\"435\":1,\"950\":1,\"1465\":1}}],[\"获取插件信息\",{\"0\":{\"111\":1,\"621\":1,\"1136\":1}}],[\"获取对象的名称\",{\"1\":{\"411\":1,\"926\":1,\"1441\":1}}],[\"获取的将是\",{\"1\":{\"365\":1,\"880\":1,\"1395\":1}}],[\"获取解析后的参数字典\",{\"1\":{\"365\":1,\"880\":1,\"1395\":1,\"1873\":1,\"1890\":1,\"2242\":1,\"2259\":1,\"2611\":1,\"2628\":1}}],[\"获取解析前的参数列表\",{\"1\":{\"365\":1,\"880\":1,\"1395\":1}}],[\"获取匹配成功的\",{\"1\":{\"367\":2,\"882\":2,\"1397\":2}}],[\"获取匹配成功的字符串\",{\"1\":{\"367\":1,\"882\":1,\"1397\":1}}],[\"获取匹配成功的原始命令文本\",{\"1\":{\"361\":1,\"365\":1,\"876\":1,\"880\":1,\"1391\":1,\"1395\":1}}],[\"获取匹配成功的命令参数\",{\"1\":{\"361\":1,\"876\":1,\"1391\":1}}],[\"获取匹配成功的命令\",{\"1\":{\"361\":1,\"365\":1,\"876\":1,\"880\":1,\"1391\":1,\"1395\":1}}],[\"获取最近一次\",{\"1\":{\"261\":1,\"774\":1,\"1289\":1}}],[\"获取一个\",{\"1\":{\"259\":1,\"262\":1,\"772\":1,\"775\":1,\"1287\":1,\"1290\":1,\"1760\":1,\"2111\":1,\"2480\":1}}],[\"获取一个参数\",{\"1\":{\"251\":1,\"764\":1,\"1279\":1}}],[\"获取一个连接到\",{\"1\":{\"222\":1,\"734\":1,\"1249\":1}}],[\"获取所有连接到\",{\"1\":{\"223\":1,\"735\":1,\"1250\":1}}],[\"获取所有已注册的\",{\"1\":{\"219\":1,\"731\":1,\"1246\":1}}],[\"获取全局\",{\"1\":{\"217\":1,\"220\":1,\"221\":1,\"729\":1,\"732\":1,\"733\":1,\"1244\":1,\"1247\":1,\"1248\":1}}],[\"获取驱动器\",{\"0\":{\"55\":1,\"565\":1,\"1080\":1}}],[\"获取\",{\"0\":{\"40\":1,\"123\":1,\"447\":1,\"550\":1,\"633\":1,\"962\":1,\"1065\":1,\"1148\":1,\"1477\":1},\"1\":{\"377\":1,\"534\":1,\"892\":1,\"1049\":1,\"1407\":1,\"1564\":1,\"1594\":1,\"1975\":1,\"2344\":1}}],[\"钉钉协议\",{\"1\":{\"488\":1,\"489\":1,\"1003\":1,\"1004\":1,\"1518\":1,\"1519\":1}}],[\"形式传入\",{\"1\":{\"1903\":1,\"2272\":1,\"2641\":1}}],[\"形式出现\",{\"1\":{\"527\":1,\"1042\":1,\"1557\":1}}],[\"形式的消息命令\",{\"1\":{\"365\":1,\"880\":1,\"1395\":1}}],[\"形成一个通用的\",{\"1\":{\"491\":1,\"1006\":1,\"1521\":1}}],[\"形成额外的维护成本\",{\"1\":{\"485\":1,\"1000\":1,\"1515\":1}}],[\"机制\",{\"1\":{\"484\":1,\"999\":1,\"1514\":1}}],[\"机器人启动前会自动运行此命令\",{\"1\":{\"1934\":1,\"2303\":1,\"2672\":1}}],[\"机器人框架主体外\",{\"1\":{\"525\":1,\"1040\":1,\"1555\":1}}],[\"机器人框架主体\",{\"1\":{\"525\":1,\"1040\":1,\"1555\":1}}],[\"机器人的功能实现\",{\"1\":{\"525\":1,\"1040\":1,\"1555\":1}}],[\"机器人的构成\",{\"0\":{\"525\":1,\"1040\":1,\"1555\":1}}],[\"机器人的开发\",{\"1\":{\"488\":1,\"1003\":1,\"1518\":1}}],[\"机器人的昵称\",{\"1\":{\"50\":1,\"528\":1,\"560\":1,\"1043\":1,\"1075\":1,\"1558\":1}}],[\"机器人平台相关的部分\",{\"1\":{\"484\":1,\"999\":1,\"1514\":1}}],[\"机器人平台不再提供服务\",{\"1\":{\"484\":1,\"999\":1,\"1514\":1}}],[\"机器人在实际应用中\",{\"1\":{\"425\":1,\"940\":1,\"1455\":1}}],[\"机器人用户就会在私聊和群聊中分别收到不同的回复\",{\"1\":{\"424\":1,\"939\":1,\"1454\":1}}],[\"机器人用户权限检查以及认证\",{\"1\":{\"7\":1,\"19\":1,\"31\":1}}],[\"机器人昵称\",{\"1\":{\"172\":1,\"682\":1,\"1197\":1}}],[\"机器人超级用户\",{\"1\":{\"171\":1,\"681\":1,\"1196\":1}}],[\"机器人可以与用户进行多次交互\",{\"1\":{\"138\":1,\"648\":1,\"1163\":1}}],[\"机器人\",{\"1\":{\"50\":1,\"528\":1,\"560\":1,\"1043\":1,\"1075\":1,\"1558\":1,\"1577\":1,\"1579\":1,\"1958\":1,\"1960\":1,\"2327\":1,\"2329\":1}}],[\"技术要求\",{\"1\":{\"484\":1,\"485\":1,\"487\":1,\"488\":1,\"489\":1,\"491\":1,\"492\":1,\"493\":1,\"495\":1,\"496\":1,\"497\":1,\"499\":1,\"500\":1,\"501\":1,\"503\":1,\"504\":1,\"505\":1,\"999\":1,\"1000\":1,\"1002\":1,\"1003\":1,\"1004\":1,\"1006\":1,\"1007\":1,\"1008\":1,\"1010\":1,\"1011\":1,\"1012\":1,\"1014\":1,\"1015\":1,\"1016\":1,\"1018\":1,\"1019\":1,\"1020\":1,\"1514\":1,\"1515\":1,\"1517\":1,\"1518\":1,\"1519\":1,\"1521\":1,\"1522\":1,\"1523\":1,\"1525\":1,\"1526\":1,\"1527\":1,\"1529\":1,\"1530\":1,\"1531\":1,\"1533\":1,\"1534\":1,\"1535\":1}}],[\"聊天机器人\",{\"1\":{\"500\":1,\"1015\":1,\"1530\":1}}],[\"聊天机器人框架\",{\"1\":{\"0\":1,\"12\":1,\"24\":1}}],[\"聊天\",{\"1\":{\"484\":1,\"999\":1,\"1514\":1}}],[\"案例\",{\"1\":{\"484\":1,\"999\":1,\"1514\":1}}],[\"图灵机器人\",{\"1\":{\"484\":1,\"999\":1,\"1514\":1}}],[\"修复流程中存在的问题\",{\"1\":{\"504\":1,\"1019\":1,\"1534\":1}}],[\"修复\",{\"1\":{\"484\":1,\"999\":1,\"1514\":1}}],[\"修改默认的命名空间\",{\"0\":{\"1906\":1,\"2275\":1,\"2644\":1}}],[\"修改其中可能已经不可用的部分\",{\"1\":{\"484\":1,\"999\":1,\"1514\":1}}],[\"修改\",{\"1\":{\"10\":1,\"22\":1,\"34\":1,\"484\":2,\"503\":1,\"515\":2,\"999\":2,\"1018\":1,\"1030\":2,\"1514\":2,\"1533\":1,\"1545\":2}}],[\"产出要求\",{\"1\":{\"484\":1,\"485\":1,\"487\":1,\"488\":1,\"489\":1,\"491\":1,\"492\":1,\"493\":1,\"495\":1,\"496\":1,\"497\":1,\"499\":1,\"500\":1,\"501\":1,\"503\":1,\"504\":1,\"505\":1,\"999\":1,\"1000\":1,\"1002\":1,\"1003\":1,\"1004\":1,\"1006\":1,\"1007\":1,\"1008\":1,\"1010\":1,\"1011\":1,\"1012\":1,\"1014\":1,\"1015\":1,\"1016\":1,\"1018\":1,\"1019\":1,\"1020\":1,\"1514\":1,\"1515\":1,\"1517\":1,\"1518\":1,\"1519\":1,\"1521\":1,\"1522\":1,\"1523\":1,\"1525\":1,\"1526\":1,\"1527\":1,\"1529\":1,\"1530\":1,\"1531\":1,\"1533\":1,\"1534\":1,\"1535\":1}}],[\"导入该插件的插件管理器\",{\"1\":{\"1853\":1,\"2222\":1,\"2591\":1}}],[\"导入多个\",{\"1\":{\"1822\":1,\"2191\":1,\"2560\":1}}],[\"导入\",{\"1\":{\"1821\":1,\"2190\":1,\"2559\":1}}],[\"导入指定\",{\"1\":{\"1819\":1,\"1820\":1,\"2188\":1,\"2189\":1,\"2557\":1,\"2558\":1}}],[\"导入指定列表中的插件以及指定目录下多个插件\",{\"1\":{\"1818\":1,\"2187\":1,\"2556\":1}}],[\"导入文件夹下多个插件\",{\"1\":{\"1817\":1,\"2186\":1,\"2555\":1}}],[\"导入调度器\",{\"0\":{\"453\":1,\"968\":1,\"1483\":1}}],[\"导致用户难以理解\",{\"1\":{\"497\":1,\"1012\":1,\"1527\":1}}],[\"导师\",{\"1\":{\"484\":1,\"485\":1,\"487\":1,\"488\":1,\"489\":1,\"491\":1,\"492\":1,\"493\":1,\"495\":1,\"496\":1,\"497\":1,\"499\":1,\"500\":1,\"501\":1,\"503\":1,\"504\":1,\"505\":1,\"999\":1,\"1000\":1,\"1002\":1,\"1003\":1,\"1004\":1,\"1006\":1,\"1007\":1,\"1008\":1,\"1010\":1,\"1011\":1,\"1012\":1,\"1014\":1,\"1015\":1,\"1016\":1,\"1018\":1,\"1019\":1,\"1020\":1,\"1514\":1,\"1515\":1,\"1517\":1,\"1518\":1,\"1519\":1,\"1521\":1,\"1522\":1,\"1523\":1,\"1525\":1,\"1526\":1,\"1527\":1,\"1529\":1,\"1530\":1,\"1531\":1,\"1533\":1,\"1534\":1,\"1535\":1}}],[\"低代码框架的使用和开发\",{\"1\":{\"505\":1,\"1020\":1,\"1535\":1}}],[\"低代码框架开发\",{\"0\":{\"505\":1,\"1020\":1,\"1535\":1}}],[\"低代码开发框架\",{\"1\":{\"505\":1,\"1020\":1,\"1535\":1}}],[\"低\",{\"1\":{\"484\":1,\"999\":1,\"1514\":1}}],[\"难度\",{\"1\":{\"484\":1,\"485\":1,\"487\":1,\"488\":1,\"489\":1,\"491\":1,\"492\":1,\"493\":1,\"495\":1,\"496\":1,\"497\":1,\"499\":1,\"500\":1,\"501\":1,\"503\":1,\"504\":1,\"505\":1,\"999\":1,\"1000\":1,\"1002\":1,\"1003\":1,\"1004\":1,\"1006\":1,\"1007\":1,\"1008\":1,\"1010\":1,\"1011\":1,\"1012\":1,\"1014\":1,\"1015\":1,\"1016\":1,\"1018\":1,\"1019\":1,\"1020\":1,\"1514\":1,\"1515\":1,\"1517\":1,\"1518\":1,\"1519\":1,\"1521\":1,\"1522\":1,\"1523\":1,\"1525\":1,\"1526\":1,\"1527\":1,\"1529\":1,\"1530\":1,\"1531\":1,\"1533\":1,\"1534\":1,\"1535\":1}}],[\"难免会需要存储一些持久化数据\",{\"1\":{\"433\":1,\"948\":1,\"1463\":1}}],[\"示例后\",{\"1\":{\"2683\":1,\"2698\":1,\"2713\":1}}],[\"示例\",{\"0\":{\"1927\":1,\"2296\":1,\"2665\":1,\"2684\":1,\"2699\":1,\"2714\":1}}],[\"示例中可以传入\",{\"1\":{\"1897\":1,\"2266\":1,\"2635\":1}}],[\"示例是否有已经过时\",{\"1\":{\"484\":1,\"999\":1,\"1514\":1}}],[\"示例做一次全面检查\",{\"1\":{\"484\":1,\"999\":1,\"1514\":1}}],[\"示例插件\",{\"1\":{\"110\":1,\"620\":1,\"1135\":1}}],[\"联系我们\",{\"1\":{\"482\":1,\"494\":1,\"498\":1,\"502\":1,\"997\":1,\"1009\":1,\"1013\":1,\"1017\":1,\"1512\":1,\"1524\":1,\"1528\":1,\"1532\":1}}],[\"社区中承担着重要的角色\",{\"1\":{\"504\":1,\"1019\":1,\"1534\":1}}],[\"社区自动化工作流管理优化\",{\"0\":{\"504\":1,\"1019\":1,\"1534\":1}}],[\"社区有幸作为开源社区\",{\"1\":{\"494\":1,\"498\":1,\"502\":1,\"1009\":1,\"1013\":1,\"1017\":1,\"1524\":1,\"1528\":1,\"1532\":1}}],[\"社区有幸作为开源社区参与了本次活动\",{\"1\":{\"482\":1,\"997\":1,\"1512\":1}}],[\"社区主办的一项面向高校学生的暑期活动\",{\"1\":{\"494\":1,\"498\":1,\"1009\":1,\"1013\":1,\"1524\":1,\"1528\":1}}],[\"社区反馈有更多的平台需求\",{\"1\":{\"488\":1,\"489\":1,\"1003\":1,\"1004\":1,\"1518\":1,\"1519\":1}}],[\"社区共同举办的一项面向高校学生的暑期活动\",{\"1\":{\"482\":1,\"997\":1,\"1512\":1}}],[\"官网目前采用基于\",{\"1\":{\"503\":1,\"1018\":1,\"1533\":1}}],[\"官网组件库更新与优化\",{\"0\":{\"503\":1,\"1018\":1,\"1533\":1}}],[\"官网\",{\"1\":{\"482\":1,\"494\":1,\"498\":1,\"502\":1,\"997\":1,\"1009\":1,\"1013\":1,\"1017\":1,\"1512\":1,\"1524\":1,\"1528\":1,\"1532\":1}}],[\"官方文档\",{\"1\":{\"452\":1,\"454\":2,\"967\":1,\"969\":2,\"1482\":1,\"1484\":2}}],[\"官方支持的适配器和社区贡献的适配器均可在商店中查看\",{\"1\":{\"51\":1,\"561\":1,\"1076\":1}}],[\"报名方式\",{\"1\":{\"482\":1,\"494\":1,\"498\":1,\"502\":1,\"997\":1,\"1009\":1,\"1013\":1,\"1017\":1,\"1512\":1,\"1524\":1,\"1528\":1,\"1532\":1}}],[\"促进优秀开源软件社区的蓬勃发展\",{\"1\":{\"482\":1,\"494\":1,\"498\":1,\"502\":1,\"997\":1,\"1009\":1,\"1013\":1,\"1017\":1,\"1512\":1,\"1524\":1,\"1528\":1,\"1532\":1}}],[\"暑期\",{\"0\":{\"482\":1,\"494\":1,\"498\":1,\"502\":1,\"997\":1,\"1009\":1,\"1013\":1,\"1017\":1,\"1512\":1,\"1524\":1,\"1528\":1,\"1532\":1},\"1\":{\"482\":1,\"494\":1,\"498\":1,\"502\":1,\"997\":1,\"1009\":1,\"1013\":1,\"1017\":1,\"1512\":1,\"1524\":1,\"1528\":1,\"1532\":1}}],[\"填写适配器相关信息并提交\",{\"1\":{\"481\":1,\"996\":1,\"1511\":1}}],[\"商店\",{\"1\":{\"481\":1,\"996\":1,\"1511\":1}}],[\"申请添加好友事件\",{\"1\":{\"478\":1,\"993\":1,\"1508\":1}}],[\"加载所有可用插件\",{\"1\":{\"1832\":1,\"2201\":1,\"2570\":1}}],[\"加载所有传入的插件模块名称\",{\"1\":{\"519\":1,\"1034\":1,\"1549\":1}}],[\"加载指定插件\",{\"1\":{\"1831\":1,\"2200\":1,\"2569\":1}}],[\"加载单个插件\",{\"1\":{\"1816\":1,\"2185\":1,\"2554\":1}}],[\"加载传入插件列表中的所有内置插件\",{\"1\":{\"523\":1,\"1038\":1,\"1553\":1}}],[\"加载传入插件目录中的所有插件\",{\"1\":{\"518\":1,\"1033\":1,\"1548\":1}}],[\"加载一个内置插件\",{\"1\":{\"522\":1,\"1037\":1,\"1552\":1}}],[\"加载项目插件\",{\"1\":{\"517\":1,\"1032\":1,\"1547\":1}}],[\"加载第三方插件\",{\"1\":{\"517\":1,\"1032\":1,\"1547\":1}}],[\"加载的插件模块名称\",{\"1\":{\"516\":1,\"1031\":1,\"1546\":1}}],[\"加载插件的方式有多种\",{\"1\":{\"516\":1,\"1031\":1,\"1546\":1}}],[\"加载插件的方法来加载子插件\",{\"1\":{\"112\":1,\"622\":1,\"1137\":1}}],[\"加载插件是在机器人入口文件中完成的\",{\"1\":{\"516\":1,\"1031\":1,\"1546\":1}}],[\"加载插件等工作\",{\"1\":{\"509\":1,\"1024\":1,\"1539\":1}}],[\"加载插件\",{\"0\":{\"516\":1,\"1031\":1,\"1546\":1},\"1\":{\"497\":1,\"516\":1,\"1012\":1,\"1031\":1,\"1527\":1,\"1546\":1}}],[\"加入房间事件\",{\"1\":{\"478\":1,\"993\":1,\"1508\":1}}],[\"心跳时间\",{\"1\":{\"478\":1,\"993\":1,\"1508\":1}}],[\"回复事件的方法\",{\"1\":{\"477\":1,\"992\":1,\"1507\":1}}],[\"飞书是目前企业用户广泛使用的即时聊天和协作软件\",{\"1\":{\"489\":1,\"1004\":1,\"1519\":1}}],[\"飞书适配器\",{\"0\":{\"489\":1,\"1004\":1,\"1519\":1}}],[\"飞书\",{\"1\":{\"476\":1,\"500\":1,\"991\":1,\"1015\":1,\"1506\":1,\"1530\":1}}],[\"采用了扁平化的消息序列形式\",{\"1\":{\"530\":1,\"1045\":1,\"1560\":1}}],[\"采用了一套自行定义的依赖注入系统\",{\"1\":{\"6\":1,\"18\":1,\"30\":1}}],[\"采用\",{\"1\":{\"476\":2,\"991\":2,\"1506\":2}}],[\"给予日志提示\",{\"1\":{\"476\":1,\"991\":1,\"1506\":1}}],[\"给出日志提示\",{\"1\":{\"475\":1,\"990\":1,\"1505\":1}}],[\"让我们了解下示例中出现的\",{\"1\":{\"1930\":1,\"2299\":1,\"2668\":1}}],[\"让有更复杂需求的用户\",{\"1\":{\"497\":1,\"1012\":1,\"1527\":1}}],[\"让\",{\"1\":{\"475\":1,\"477\":1,\"990\":1,\"992\":1,\"1505\":1,\"1507\":1}}],[\"无需手动迁移\",{\"1\":{\"2686\":1,\"2701\":1,\"2716\":1}}],[\"无需平台适配接入即可对机器人进行测试\",{\"1\":{\"496\":1,\"1011\":1,\"1526\":1}}],[\"无\",{\"1\":{\"1901\":3,\"2270\":3,\"2639\":3}}],[\"无名的纯文字头\",{\"1\":{\"1894\":1,\"2263\":1,\"2632\":1}}],[\"无名的元素类头\",{\"1\":{\"1894\":1,\"2263\":1,\"2632\":1}}],[\"无前缀的类型头\",{\"1\":{\"1894\":1,\"2263\":1,\"2632\":1}}],[\"无前缀的正则头\",{\"1\":{\"1894\":1,\"2263\":1,\"2632\":1}}],[\"无前缀的元素头\",{\"1\":{\"1894\":1,\"2263\":1,\"2632\":1}}],[\"无前缀的纯文字头\",{\"1\":{\"1894\":1,\"2263\":1,\"2632\":1}}],[\"无论是接收还是发送的消息\",{\"1\":{\"530\":1,\"1045\":1,\"1560\":1}}],[\"无论是在开发还是在生产环境中\",{\"1\":{\"418\":1,\"933\":1,\"1448\":1}}],[\"无法回退\",{\"1\":{\"2691\":1,\"2706\":1,\"2721\":1}}],[\"无法将其转换为插件而出现意料之外的情况\",{\"1\":{\"516\":1,\"1031\":1,\"1546\":1}}],[\"无法正常解析为具体\",{\"1\":{\"475\":1,\"990\":1,\"1505\":1}}],[\"做一层异常处理\",{\"1\":{\"475\":1,\"990\":1,\"1505\":1}}],[\"反向\",{\"1\":{\"473\":1,\"988\":1,\"1503\":1}}],[\"反序列化后一起带入\",{\"1\":{\"165\":1,\"675\":1,\"1190\":1}}],[\"尝试重连\",{\"1\":{\"472\":1,\"987\":1,\"1502\":1}}],[\"鉴权请求头\",{\"1\":{\"472\":1,\"987\":1,\"1502\":1}}],[\"建立一个\",{\"1\":{\"1606\":1,\"1956\":1,\"2325\":1}}],[\"建立通信连接\",{\"1\":{\"1596\":1,\"1946\":1,\"2315\":1}}],[\"建立了一个新的\",{\"1\":{\"1601\":1,\"1951\":1,\"2320\":1}}],[\"建立了\",{\"1\":{\"474\":1,\"989\":1,\"1504\":1}}],[\"建立服务端路由\",{\"1\":{\"473\":1,\"988\":1,\"1503\":1}}],[\"建立\",{\"0\":{\"474\":1,\"989\":1,\"1504\":1},\"1\":{\"472\":1,\"474\":1,\"987\":1,\"989\":1,\"1502\":1,\"1504\":1}}],[\"任意额外参数\",{\"1\":{\"1583\":1,\"1964\":1,\"2333\":1}}],[\"任意变量\",{\"1\":{\"224\":1,\"736\":1,\"1251\":1}}],[\"任选一个\",{\"1\":{\"493\":1,\"1008\":1,\"1523\":1}}],[\"任务\",{\"1\":{\"472\":1,\"987\":1,\"1502\":1}}],[\"读取适配器所需的配置项\",{\"1\":{\"470\":1,\"985\":1,\"1500\":1}}],[\"读取文件内容\",{\"1\":{\"435\":1,\"950\":1,\"1465\":1}}],[\"输入适配器名称以及存储位置\",{\"1\":{\"466\":1,\"981\":1,\"1496\":1}}],[\"输出格式为\",{\"1\":{\"1931\":1,\"2300\":1,\"2669\":1}}],[\"输出的日志等级\",{\"1\":{\"457\":1,\"972\":1,\"1487\":1}}],[\"输出至\",{\"1\":{\"227\":1,\"739\":1,\"1254\":1}}],[\"输出\",{\"1\":{\"227\":1,\"739\":1,\"1254\":1}}],[\"输出目录\",{\"1\":{\"113\":1,\"515\":1,\"623\":1,\"1030\":1,\"1138\":1,\"1545\":1}}],[\"按照指引\",{\"1\":{\"466\":1,\"981\":1,\"1496\":1}}],[\"保证实际可用性即可\",{\"1\":{\"465\":1,\"980\":1,\"1495\":1}}],[\"组合时\",{\"1\":{\"1898\":1,\"2267\":1,\"2636\":1}}],[\"组合\",{\"1\":{\"1592\":1,\"1973\":1,\"2342\":1}}],[\"组合而成\",{\"1\":{\"47\":1,\"557\":1,\"1072\":1}}],[\"组件库及相关插件\",{\"1\":{\"503\":1,\"1018\":1,\"1533\":1}}],[\"组件库及\",{\"1\":{\"503\":1,\"1018\":1,\"1533\":1}}],[\"组成部分\",{\"0\":{\"467\":1,\"982\":1,\"1497\":1}}],[\"组织结构\",{\"0\":{\"465\":1,\"980\":1,\"1495\":1}}],[\"四个部分组成\",{\"1\":{\"464\":1,\"979\":1,\"1494\":1}}],[\"作用域与会话相同\",{\"1\":{\"2687\":1,\"2702\":1,\"2717\":1}}],[\"作用域为当前事件\",{\"1\":{\"2687\":1,\"2702\":1,\"2717\":1}}],[\"作出的贡献\",{\"1\":{\"463\":1,\"978\":1,\"1493\":1}}],[\"作为快捷指令的配置\",{\"1\":{\"1907\":1,\"2276\":1,\"2645\":1}}],[\"作为解析操作\",{\"1\":{\"1901\":1,\"2270\":1,\"2639\":1}}],[\"作为唯一的前置序列与命令嵌套替换\",{\"1\":{\"1900\":1,\"2269\":1,\"2638\":1}}],[\"作为\",{\"1\":{\"1897\":1,\"1941\":1,\"1942\":1,\"2266\":1,\"2310\":1,\"2311\":1,\"2635\":1,\"2679\":1,\"2680\":1}}],[\"作为消息\",{\"1\":{\"535\":1,\"1050\":1,\"1565\":1}}],[\"作为纯文本消息回复\",{\"1\":{\"533\":1,\"1048\":1,\"1563\":1}}],[\"作为特殊消息载体的存在\",{\"1\":{\"533\":1,\"1048\":1,\"1563\":1}}],[\"作为众多用户期待的平台适配之一\",{\"1\":{\"500\":1,\"1015\":1,\"1530\":1}}],[\"作为一个跨平台聊天机器人框架\",{\"1\":{\"500\":1,\"1015\":1,\"1530\":1}}],[\"作为项目名\",{\"1\":{\"465\":1,\"980\":1,\"1495\":1}}],[\"作为前缀\",{\"1\":{\"458\":1,\"973\":1,\"1488\":1}}],[\"作为插件\",{\"1\":{\"453\":1,\"968\":1,\"1483\":1}}],[\"作为命令解析器\",{\"1\":{\"108\":1,\"618\":1,\"1133\":1}}],[\"作为最高优先级同样存储于该字典中\",{\"1\":{\"81\":1,\"591\":1,\"1106\":1}}],[\"感谢以下开发者对\",{\"1\":{\"463\":1,\"978\":1,\"1493\":1}}],[\"鸣谢\",{\"0\":{\"463\":1,\"978\":1,\"1493\":1}}],[\"贡献指南\",{\"0\":{\"460\":1,\"975\":1,\"1490\":1}}],[\"qqguild\",{\"1\":{\"473\":1,\"479\":1,\"988\":1,\"994\":1,\"1503\":1,\"1509\":1}}],[\"qq\",{\"1\":{\"459\":2,\"476\":1,\"484\":2,\"491\":4,\"494\":1,\"500\":1,\"974\":2,\"991\":1,\"999\":2,\"1006\":4,\"1009\":1,\"1015\":1,\"1489\":2,\"1506\":1,\"1514\":2,\"1521\":4,\"1524\":1,\"1530\":1}}],[\"qux\",{\"1\":{\"1897\":2,\"1900\":2,\"2266\":2,\"2269\":2,\"2635\":2,\"2638\":2}}],[\"query\",{\"1\":{\"1902\":1,\"1908\":1,\"1910\":2,\"1913\":1,\"2271\":1,\"2277\":1,\"2279\":2,\"2282\":1,\"2640\":1,\"2646\":1,\"2648\":2,\"2651\":1}}],[\"querytypes\",{\"1\":{\"1659\":1,\"1666\":1,\"1705\":1,\"1711\":1,\"1735\":1,\"1760\":1,\"2028\":1,\"2035\":1,\"2074\":1,\"2080\":1,\"2111\":1,\"2116\":1,\"2397\":1,\"2404\":1,\"2443\":1,\"2449\":1,\"2480\":1,\"2485\":1}}],[\"question\",{\"1\":{\"459\":1,\"974\":1,\"1489\":1}}],[\"quart\",{\"0\":{\"70\":1,\"71\":1,\"580\":1,\"581\":1,\"1095\":1,\"1096\":1,\"1771\":1,\"2140\":1,\"2509\":1},\"1\":{\"70\":2,\"77\":1,\"580\":2,\"587\":1,\"1095\":2,\"1102\":1,\"1771\":3,\"1772\":1,\"1778\":1,\"1779\":1,\"1780\":1,\"1781\":2,\"1782\":1,\"1783\":1,\"1786\":1,\"1787\":1,\"2140\":3,\"2141\":1,\"2147\":1,\"2148\":1,\"2149\":1,\"2150\":2,\"2151\":1,\"2152\":1,\"2155\":1,\"2156\":1,\"2509\":3,\"2510\":1,\"2516\":1,\"2517\":1,\"2518\":1,\"2519\":2,\"2520\":1,\"2521\":1,\"2524\":1,\"2525\":1}}],[\"页面\",{\"1\":{\"459\":1,\"974\":1,\"1489\":1}}],[\"过滤消息\",{\"1\":{\"1623\":1,\"1624\":1,\"1992\":1,\"1993\":1,\"2361\":1,\"2362\":1}}],[\"过滤索引与切片\",{\"1\":{\"543\":1,\"1058\":1,\"1573\":1}}],[\"过滤\",{\"0\":{\"543\":1,\"1058\":1,\"1573\":1}}],[\"过程中遇到了任何问题\",{\"1\":{\"459\":1,\"974\":1,\"1489\":1}}],[\"过时即被删除\",{\"1\":{\"242\":1,\"755\":1,\"1270\":1,\"1863\":1,\"1864\":1,\"1865\":1,\"1866\":1,\"1867\":1,\"1868\":1,\"1869\":1,\"1870\":1,\"1871\":1,\"1872\":1,\"1873\":1,\"1874\":1,\"1875\":1,\"1877\":1,\"1878\":1,\"1880\":1,\"1881\":1,\"1882\":1,\"1883\":1,\"1884\":1,\"1885\":1,\"1886\":1,\"1887\":1,\"1888\":1,\"1889\":1,\"1890\":1,\"1891\":1,\"1892\":1,\"2232\":1,\"2233\":1,\"2234\":1,\"2235\":1,\"2236\":1,\"2237\":1,\"2238\":1,\"2239\":1,\"2240\":1,\"2241\":1,\"2242\":1,\"2243\":1,\"2244\":1,\"2246\":1,\"2247\":1,\"2249\":1,\"2250\":1,\"2251\":1,\"2252\":1,\"2253\":1,\"2254\":1,\"2255\":1,\"2256\":1,\"2257\":1,\"2258\":1,\"2259\":1,\"2260\":1,\"2261\":1,\"2601\":1,\"2602\":1,\"2603\":1,\"2604\":1,\"2605\":1,\"2606\":1,\"2607\":1,\"2608\":1,\"2609\":1,\"2610\":1,\"2611\":1,\"2612\":1,\"2613\":1,\"2615\":1,\"2616\":1,\"2618\":1,\"2619\":1,\"2620\":1,\"2621\":1,\"2622\":1,\"2623\":1,\"2624\":1,\"2625\":1,\"2626\":1,\"2627\":1,\"2628\":1,\"2629\":1,\"2630\":1}}],[\"若\",{\"1\":{\"1909\":2,\"2278\":2,\"2647\":2}}],[\"若快捷指令为\",{\"1\":{\"1909\":1,\"2278\":1,\"2647\":1}}],[\"若匹配成功则会传入参数\",{\"1\":{\"1909\":1,\"2278\":1,\"2647\":1}}],[\"若为\",{\"1\":{\"1903\":1,\"2272\":1,\"2641\":1}}],[\"若传入为\",{\"1\":{\"1900\":1,\"2269\":1,\"2638\":1}}],[\"若没有某个\",{\"1\":{\"1897\":1,\"2266\":1,\"2635\":1}}],[\"若需要\",{\"1\":{\"1896\":1,\"2265\":1,\"2634\":1}}],[\"若不启动需要自行调用\",{\"1\":{\"456\":1,\"971\":1,\"1486\":1}}],[\"若插件可以保证兼容所有适配器\",{\"1\":{\"110\":1,\"620\":1,\"1135\":1}}],[\"关键词列表\",{\"1\":{\"1871\":1,\"1888\":1,\"2240\":1,\"2257\":1,\"2609\":1,\"2626\":1}}],[\"关闭\",{\"1\":{\"1745\":1,\"2123\":1,\"2492\":1}}],[\"关闭冷重载\",{\"1\":{\"1682\":1,\"1773\":1,\"2051\":1,\"2142\":1,\"2420\":1,\"2511\":1}}],[\"关闭数据库连接\",{\"1\":{\"128\":1,\"638\":1,\"1153\":1}}],[\"关于具体的活动规划\",{\"1\":{\"482\":1,\"494\":1,\"498\":1,\"502\":1,\"997\":1,\"1009\":1,\"1013\":1,\"1017\":1,\"1512\":1,\"1524\":1,\"1528\":1,\"1532\":1}}],[\"关于适配器测试相关内容在这里不再展开\",{\"1\":{\"480\":1,\"995\":1,\"1510\":1}}],[\"关于\",{\"1\":{\"454\":1,\"969\":1,\"1484\":1}}],[\"调试类\",{\"1\":{\"1902\":1,\"2271\":1,\"2640\":1}}],[\"调研各聊天机器人平台的官方\",{\"1\":{\"491\":1,\"1006\":1,\"1521\":1}}],[\"调研飞书机器人\",{\"1\":{\"489\":1,\"1004\":1,\"1519\":1}}],[\"调研\",{\"1\":{\"488\":1,\"500\":1,\"1003\":1,\"1015\":1,\"1518\":1,\"1530\":1}}],[\"调研现有的\",{\"1\":{\"487\":1,\"1002\":1,\"1517\":1}}],[\"调研市面上常见的\",{\"1\":{\"485\":1,\"1000\":1,\"1515\":1}}],[\"调度器来创建定时任务\",{\"1\":{\"453\":1,\"968\":1,\"1483\":1}}],[\"调用栈深度\",{\"1\":{\"1860\":1,\"1861\":1,\"1862\":1,\"2229\":1,\"2230\":1,\"2231\":1,\"2598\":1,\"2599\":1,\"2600\":1}}],[\"调用的返回\",{\"1\":{\"1585\":1,\"1966\":1,\"2335\":1}}],[\"调用的参数字典\",{\"1\":{\"1584\":1,\"1585\":1,\"1965\":1,\"1966\":1,\"2334\":1,\"2335\":1}}],[\"调用的\",{\"1\":{\"1584\":1,\"1585\":1,\"1965\":1,\"1966\":1,\"2334\":1,\"2335\":1}}],[\"调用机器人基础发送消息接口\",{\"1\":{\"1583\":1,\"1964\":1,\"2333\":1}}],[\"调用机器人\",{\"1\":{\"1582\":1,\"1963\":1,\"2332\":1}}],[\"调用后根据不同的参数返回一个\",{\"1\":{\"527\":1,\"1042\":1,\"1557\":1}}],[\"调用发送消息接口进行发送\",{\"1\":{\"477\":1,\"992\":1,\"1507\":1}}],[\"调用\",{\"1\":{\"476\":1,\"477\":2,\"991\":1,\"992\":2,\"1506\":1,\"1507\":2,\"1584\":1,\"1585\":2,\"1965\":1,\"1966\":2,\"2334\":1,\"2335\":2}}],[\"调用平台\",{\"0\":{\"476\":1,\"991\":1,\"1506\":1},\"1\":{\"476\":1,\"477\":1,\"497\":1,\"991\":1,\"992\":1,\"1012\":1,\"1506\":1,\"1507\":1,\"1527\":1}}],[\"调用平台接口是指将机器人插件调用平台接口的数据转换为平台指定的格式\",{\"1\":{\"37\":1,\"547\":1,\"1062\":1}}],[\"调用接口\",{\"1\":{\"470\":1,\"985\":1,\"1500\":1,\"1577\":1,\"1958\":1,\"2327\":1}}],[\"调用该函数以实现分发事件\",{\"1\":{\"293\":1,\"805\":1,\"1320\":1}}],[\"调用或修改本次调用返回值\",{\"1\":{\"202\":1,\"714\":1,\"1229\":1}}],[\"留空即会停用插件\",{\"1\":{\"448\":1,\"963\":1,\"1478\":1}}],[\"留空则会根据参数名称获取\",{\"1\":{\"298\":1,\"808\":1,\"1323\":1}}],[\"甚至是由于第三方服务的错误\",{\"1\":{\"444\":1,\"959\":1,\"1474\":1}}],[\"71a72119935f\",{\"1\":{\"1931\":1,\"2300\":1,\"2669\":1}}],[\"793\",{\"1\":{\"497\":1,\"1012\":1,\"1527\":1}}],[\"737131827\",{\"1\":{\"494\":1,\"1009\":1,\"1524\":1}}],[\"7\",{\"1\":{\"439\":1,\"440\":1,\"954\":1,\"955\":1,\"1469\":1,\"1470\":1,\"2733\":1,\"2740\":1,\"2747\":1}}],[\"xyz\",{\"1\":{\"1910\":1,\"2279\":1,\"2648\":1}}],[\"x\",{\"1\":{\"1897\":8,\"1909\":8,\"2266\":8,\"2278\":8,\"2635\":8,\"2647\":8}}],[\"xxx键对应的值\",{\"1\":{\"1902\":2,\"2271\":2,\"2640\":2}}],[\"xxxxxxxxxxxx\",{\"1\":{\"2686\":4,\"2701\":4,\"2716\":4}}],[\"xxxx\",{\"1\":{\"1897\":1,\"2266\":1,\"2635\":1}}],[\"xxx\",{\"1\":{\"469\":2,\"473\":1,\"984\":2,\"988\":1,\"1499\":2,\"1503\":1,\"1894\":1,\"1897\":10,\"1902\":3,\"1906\":1,\"1909\":1,\"2263\":1,\"2266\":10,\"2271\":3,\"2275\":1,\"2278\":1,\"2632\":1,\"2635\":10,\"2640\":3,\"2644\":1,\"2647\":1}}],[\"xp\",{\"1\":{\"439\":1,\"440\":1,\"954\":1,\"955\":1,\"1469\":1,\"1470\":1}}],[\"xdg\",{\"1\":{\"438\":1,\"953\":1,\"1468\":1}}],[\"数据库作用域会话\",{\"1\":{\"2692\":1,\"2707\":1,\"2722\":1}}],[\"数据库会话\",{\"0\":{\"2690\":1,\"2705\":1,\"2720\":1}}],[\"数据库模式会自动与模型定义同步\",{\"1\":{\"2686\":1,\"2701\":1,\"2716\":1}}],[\"数据库的模式就会回到原来的状态\",{\"1\":{\"2686\":1,\"2701\":1,\"2716\":1}}],[\"数据库\",{\"1\":{\"1937\":2,\"2306\":2,\"2675\":2,\"2733\":1,\"2740\":1,\"2747\":1}}],[\"数据库驱动和后端\",{\"1\":{\"1936\":1,\"2305\":1,\"2674\":1}}],[\"数据库支持插件\",{\"0\":{\"501\":1,\"1016\":1,\"1531\":1}}],[\"数据\",{\"1\":{\"1582\":1,\"1963\":1,\"2332\":1}}],[\"数据存放散乱等现象\",{\"1\":{\"501\":1,\"1016\":1,\"1531\":1}}],[\"数据存储\",{\"0\":{\"433\":1,\"948\":1,\"1463\":1}}],[\"数据存储插件等\",{\"1\":{\"115\":1,\"625\":1,\"1140\":1}}],[\"数据目录为\",{\"1\":{\"439\":1,\"954\":1,\"1469\":1}}],[\"否则\",{\"1\":{\"438\":1,\"439\":1,\"440\":1,\"953\":1,\"954\":1,\"955\":1,\"1468\":1,\"1469\":1,\"1470\":1}}],[\"否则会产生异常\",{\"1\":{\"48\":1,\"558\":1,\"1073\":1}}],[\"缓存目录为\",{\"1\":{\"438\":1,\"953\":1,\"1468\":1}}],[\"路径以\",{\"1\":{\"1921\":1,\"2290\":1,\"2659\":1}}],[\"路径\",{\"1\":{\"435\":1,\"950\":1,\"1465\":1}}],[\"路由地址\",{\"1\":{\"473\":2,\"988\":2,\"1503\":2}}],[\"路由处理函数\",{\"1\":{\"120\":1,\"121\":1,\"473\":2,\"630\":1,\"631\":1,\"988\":2,\"1145\":1,\"1146\":1,\"1503\":2}}],[\"路由名称\",{\"1\":{\"120\":1,\"121\":1,\"473\":2,\"630\":1,\"631\":1,\"988\":2,\"1145\":1,\"1146\":1,\"1503\":2}}],[\"路由路径\",{\"1\":{\"120\":1,\"121\":1,\"630\":1,\"631\":1,\"1145\":1,\"1146\":1}}],[\"路由\",{\"0\":{\"120\":1,\"121\":1,\"630\":1,\"631\":1,\"1145\":1,\"1146\":1},\"1\":{\"124\":1,\"473\":2,\"634\":1,\"988\":2,\"1149\":1,\"1503\":2}}],[\"群组\",{\"1\":{\"1592\":1,\"1973\":1,\"2342\":1}}],[\"群组的信息等\",{\"1\":{\"433\":1,\"948\":1,\"1463\":1}}],[\"群\",{\"1\":{\"459\":1,\"494\":1,\"974\":1,\"1009\":1,\"1489\":1,\"1524\":1}}],[\"群聊消息\",{\"1\":{\"424\":1,\"939\":1,\"1454\":1}}],[\"至此\",{\"1\":{\"432\":1,\"947\":1,\"1462\":1}}],[\"密码为\",{\"1\":{\"431\":1,\"946\":1,\"1461\":1}}],[\"密码正确\",{\"1\":{\"431\":1,\"946\":1,\"1461\":1}}],[\"密码错误\",{\"1\":{\"431\":1,\"946\":1,\"1461\":1}}],[\"密码错误次数过多\",{\"1\":{\"431\":1,\"946\":1,\"1461\":1}}],[\"运算符或消息序列的\",{\"1\":{\"542\":1,\"1057\":1,\"1572\":1}}],[\"运算符比较是否相同\",{\"1\":{\"541\":1,\"1056\":1,\"1571\":1}}],[\"运算符合并\",{\"1\":{\"428\":1,\"943\":1,\"1458\":1}}],[\"运算构造\",{\"0\":{\"537\":1,\"1052\":1,\"1567\":1}}],[\"运行之前进行\",{\"1\":{\"516\":1,\"1031\":1,\"1546\":1}}],[\"运行机器人\",{\"0\":{\"510\":1,\"1025\":1,\"1540\":1}}],[\"运行所需要的配置项\",{\"1\":{\"508\":1,\"1023\":1,\"1538\":1}}],[\"运行所使用的\",{\"1\":{\"166\":1,\"676\":1,\"1191\":1}}],[\"运行项目\",{\"1\":{\"495\":1,\"1010\":1,\"1525\":1}}],[\"运行协程并在取消时屏蔽取消异常\",{\"1\":{\"409\":1,\"924\":1,\"1439\":1}}],[\"运行协程并当遇到指定异常时返回指定值\",{\"1\":{\"408\":1,\"923\":1,\"1438\":1}}],[\"运行前进行检查\",{\"1\":{\"333\":1,\"347\":1,\"845\":1,\"862\":1,\"1360\":1,\"1377\":1}}],[\"运行环境配置\",{\"1\":{\"163\":1,\"673\":1,\"1188\":1}}],[\"运行中产生的异常\",{\"1\":{\"135\":1,\"645\":1,\"1160\":1}}],[\"运行事件响应器后运行\",{\"1\":{\"135\":1,\"645\":1,\"1160\":1}}],[\"运行事件响应器前运行\",{\"1\":{\"134\":1,\"644\":1,\"1159\":1}}],[\"运行后处理\",{\"0\":{\"135\":1,\"645\":1,\"1160\":1},\"1\":{\"291\":1,\"803\":1,\"1318\":1}}],[\"运行预处理\",{\"0\":{\"134\":1,\"644\":1,\"1159\":1},\"1\":{\"290\":1,\"802\":1,\"1317\":1}}],[\"运行时可能会抛出的异常\",{\"1\":{\"195\":1,\"707\":1,\"1222\":1}}],[\"运行时\",{\"1\":{\"64\":1,\"574\":1,\"1089\":1}}],[\"天气\",{\"1\":{\"426\":1,\"427\":1,\"428\":1,\"528\":4,\"529\":2,\"941\":1,\"942\":1,\"943\":1,\"1043\":4,\"1044\":2,\"1456\":1,\"1457\":1,\"1458\":1,\"1558\":4,\"1559\":2,\"2687\":1,\"2702\":1,\"2717\":1}}],[\"往往会接收到多种多样的事件类型\",{\"1\":{\"425\":1,\"940\":1,\"1455\":1}}],[\"三个部分\",{\"1\":{\"1913\":1,\"2282\":1,\"2651\":1}}],[\"三个命令的响应规则\",{\"1\":{\"529\":1,\"1044\":1,\"1559\":1}}],[\"三个命令\",{\"1\":{\"105\":1,\"615\":1,\"1130\":1}}],[\"三者的参数类型注解具有最高检查优先级\",{\"1\":{\"424\":1,\"939\":1,\"1454\":1}}],[\"私聊消息\",{\"1\":{\"424\":1,\"939\":1,\"1454\":1}}],[\"私聊和群聊消息事件的规则\",{\"1\":{\"103\":1,\"613\":1,\"1128\":1}}],[\"──nb\",{\"1\":{\"495\":1,\"1010\":1,\"1525\":1}}],[\"──\",{\"1\":{\"424\":1,\"939\":1,\"1454\":1}}],[\"针对重要开源软件的开发与维护提供项目开发任务\",{\"1\":{\"502\":1,\"1017\":1,\"1532\":1}}],[\"针对某聊天平台的对接代码\",{\"1\":{\"492\":1,\"493\":1,\"1007\":1,\"1008\":1,\"1522\":1,\"1523\":1}}],[\"针对这些问题\",{\"1\":{\"424\":1,\"939\":1,\"1454\":1}}],[\"针对其本身运行过程的钩子函数\",{\"1\":{\"126\":1,\"636\":1,\"1151\":1}}],[\"常用于事件响应器和有与响应逻辑相关的数据库操作逻辑的插件\",{\"1\":{\"2692\":1,\"2707\":1,\"2722\":1}}],[\"常用于有独立的数据库操作逻辑的插件\",{\"1\":{\"2691\":1,\"2706\":1,\"2721\":1}}],[\"常用于卸载插件后删除其数据\",{\"1\":{\"1933\":1,\"2302\":1,\"2671\":1}}],[\"常用的方法有\",{\"1\":{\"435\":1,\"950\":1,\"1465\":1}}],[\"常常会遇到这样一个问题\",{\"1\":{\"424\":1,\"939\":1,\"1454\":1}}],[\"常见的驱动器配置如下\",{\"1\":{\"54\":1,\"564\":1,\"1079\":1}}],[\"重复的测试不可靠\",{\"1\":{\"2697\":1,\"2712\":1,\"2727\":1}}],[\"重复加载将会导致异常\",{\"1\":{\"516\":1,\"1031\":1,\"1546\":1}}],[\"重构现有工作流处理结构\",{\"1\":{\"504\":1,\"1019\":1,\"1534\":1}}],[\"重构\",{\"1\":{\"503\":1,\"1018\":1,\"1533\":1}}],[\"重连间隔\",{\"1\":{\"472\":1,\"987\":1,\"1502\":1}}],[\"重定向\",{\"0\":{\"421\":1,\"936\":1,\"1451\":1}}],[\"重载机制对所有的参数类型注解都有效\",{\"1\":{\"424\":1,\"939\":1,\"1454\":1}}],[\"重载\",{\"0\":{\"424\":1,\"939\":1,\"1454\":1},\"1\":{\"218\":1,\"259\":1,\"261\":1,\"262\":1,\"265\":1,\"278\":1,\"319\":1,\"363\":1,\"408\":1,\"424\":1,\"730\":1,\"772\":1,\"774\":1,\"775\":1,\"778\":1,\"790\":1,\"832\":1,\"878\":1,\"923\":1,\"939\":1,\"1245\":1,\"1287\":1,\"1289\":1,\"1290\":1,\"1293\":1,\"1305\":1,\"1347\":1,\"1393\":1,\"1438\":1,\"1454\":1,\"1612\":1,\"1757\":1,\"1981\":1,\"2133\":1,\"2350\":1,\"2502\":1,\"2696\":1,\"2711\":1,\"2726\":1}}],[\"重载延迟\",{\"1\":{\"66\":1,\"74\":1,\"576\":1,\"584\":1,\"1091\":1,\"1099\":1,\"1684\":1,\"1775\":1,\"2053\":1,\"2144\":1,\"2422\":1,\"2513\":1}}],[\"重载监控文件夹列表\",{\"1\":{\"65\":1,\"73\":1,\"575\":1,\"583\":1,\"1090\":1,\"1098\":1,\"1683\":1,\"1774\":1,\"2052\":1,\"2143\":1,\"2421\":1,\"2512\":1}}],[\"移除\",{\"1\":{\"420\":1,\"935\":1,\"1450\":1}}],[\"级别的日志\",{\"1\":{\"419\":1,\"934\":1,\"1449\":1}}],[\"控制台中仅会输出大于等于\",{\"1\":{\"419\":1,\"934\":1,\"1449\":1}}],[\"库来进行日志记录\",{\"1\":{\"418\":1,\"933\":1,\"1448\":1}}],[\"分析类\",{\"1\":{\"1902\":1,\"2271\":1,\"2640\":1}}],[\"分析等\",{\"1\":{\"418\":1,\"933\":1,\"1448\":1}}],[\"分为三类\",{\"1\":{\"1901\":1,\"2270\":1,\"2639\":1}}],[\"分割\",{\"1\":{\"1896\":1,\"2265\":1,\"2634\":1}}],[\"分隔\",{\"1\":{\"1896\":1,\"1921\":1,\"2265\":1,\"2290\":1,\"2634\":1,\"2659\":1}}],[\"分离\",{\"1\":{\"491\":1,\"1006\":1,\"1521\":1}}],[\"分别对应驱动框架应用和\",{\"1\":{\"123\":1,\"633\":1,\"1148\":1}}],[\"分别对应元事件\",{\"1\":{\"86\":1,\"596\":1,\"1111\":1}}],[\"分别用于定义\",{\"1\":{\"119\":1,\"629\":1,\"1144\":1}}],[\"分别是接收事件和调用平台接口\",{\"1\":{\"37\":1,\"547\":1,\"1062\":1}}],[\"排查问题等\",{\"1\":{\"418\":1,\"933\":1,\"1448\":1}}],[\"要连接的消息\",{\"1\":{\"1621\":1,\"1990\":1,\"2359\":1}}],[\"要添加的消息数组\",{\"1\":{\"1620\":1,\"1989\":1,\"2358\":1}}],[\"要添加的消息段\",{\"1\":{\"1619\":1,\"1988\":1,\"2357\":1}}],[\"要发送的消息\",{\"1\":{\"1583\":1,\"1964\":1,\"2333\":1}}],[\"要做的是让\",{\"1\":{\"492\":1,\"493\":1,\"1007\":1,\"1008\":1,\"1522\":1,\"1523\":1}}],[\"要捕获的异常\",{\"1\":{\"408\":1,\"923\":1,\"1438\":1}}],[\"要运行的协程\",{\"1\":{\"408\":1,\"409\":1,\"923\":1,\"924\":1,\"1438\":1,\"1439\":1}}],[\"要监听的文件列表\",{\"1\":{\"67\":1,\"75\":1,\"577\":1,\"585\":1,\"1092\":1,\"1100\":1,\"1685\":1,\"1776\":1,\"2054\":1,\"2145\":1,\"2423\":1,\"2514\":1}}],[\"被存储\",{\"1\":{\"2691\":1,\"2706\":1,\"2721\":1}}],[\"被指定为解析完成时标注匹配结果的标识符\",{\"1\":{\"1900\":1,\"2269\":1,\"2638\":1}}],[\"被装饰的同步函数\",{\"1\":{\"406\":1,\"921\":1,\"1436\":1}}],[\"被称为钩子\",{\"1\":{\"125\":1,\"635\":1,\"1150\":1}}],[\"协议\",{\"1\":{\"477\":1,\"992\":1,\"1507\":1}}],[\"协议适配器基类\",{\"1\":{\"1596\":1,\"1946\":1,\"2315\":1}}],[\"协议适配器名称\",{\"1\":{\"1580\":1,\"1961\":1,\"2330\":1}}],[\"协议适配器实例\",{\"1\":{\"1577\":1,\"1578\":1,\"1958\":1,\"1959\":1,\"2327\":1,\"2328\":1}}],[\"协议适配器来演示消息序列的使用方法\",{\"1\":{\"534\":1,\"1049\":1,\"1564\":1}}],[\"协议适配器会将\",{\"1\":{\"528\":1,\"1043\":1,\"1558\":1}}],[\"协议适配器会将事件合理地分类至这四种类型中\",{\"1\":{\"86\":1,\"596\":1,\"1111\":1}}],[\"协议适配器的消息事件提供的发送时间\",{\"1\":{\"423\":1,\"938\":1,\"1453\":1}}],[\"协议适配器为例\",{\"1\":{\"423\":1,\"424\":1,\"938\":1,\"939\":1,\"1453\":1,\"1454\":1}}],[\"协议适配器自定义\",{\"1\":{\"53\":2,\"563\":2,\"1078\":2}}],[\"协程的返回值\",{\"1\":{\"409\":1,\"924\":1,\"1439\":1}}],[\"协程的返回值或发生异常时的指定值\",{\"1\":{\"408\":1,\"923\":1,\"1438\":1}}],[\"协程函数\",{\"1\":{\"403\":1,\"918\":1,\"1433\":1}}],[\"深拷贝消息\",{\"1\":{\"1622\":1,\"1991\":1,\"2360\":1}}],[\"深度更新合并字典\",{\"1\":{\"399\":1,\"914\":1,\"1429\":1}}],[\"深入\",{\"1\":{\"94\":1,\"604\":1,\"1119\":1}}],[\"带有默认值的参数\",{\"1\":{\"383\":1,\"384\":1,\"387\":1,\"388\":1,\"389\":1,\"390\":1,\"391\":1,\"392\":1,\"394\":1,\"395\":1,\"898\":1,\"899\":1,\"902\":1,\"903\":1,\"904\":1,\"905\":1,\"906\":1,\"907\":1,\"909\":1,\"910\":1,\"1413\":1,\"1414\":1,\"1417\":1,\"1418\":1,\"1419\":1,\"1420\":1,\"1421\":1,\"1422\":1,\"1424\":1,\"1425\":1}}],[\"判断消息段是否为纯文本\",{\"1\":{\"539\":1,\"1054\":1,\"1569\":1}}],[\"判断消息是否为命令\",{\"1\":{\"361\":1,\"365\":1,\"876\":1,\"880\":1,\"1391\":1,\"1395\":1}}],[\"判断为\",{\"1\":{\"528\":1,\"1043\":1,\"1558\":1}}],[\"判断该消息段是否为纯文本\",{\"1\":{\"479\":1,\"994\":1,\"1509\":1}}],[\"判断事件是否和机器人有关\",{\"1\":{\"478\":1,\"993\":1,\"1508\":1}}],[\"判断用户配置的driver类型是否符合适配器要求\",{\"1\":{\"472\":1,\"987\":1,\"1502\":1}}],[\"判断是否是\",{\"1\":{\"376\":1,\"378\":1,\"379\":1,\"891\":1,\"893\":1,\"894\":1,\"1406\":1,\"1408\":1,\"1409\":1}}],[\"语句中可以使用子依赖\",{\"1\":{\"2695\":1,\"2710\":1,\"2725\":1}}],[\"语句中也可以有子依赖\",{\"1\":{\"2688\":1,\"2703\":1,\"2718\":1}}],[\"语句提供数据\",{\"1\":{\"2688\":1,\"2703\":1,\"2718\":1}}],[\"语句\",{\"1\":{\"2686\":1,\"2695\":2,\"2701\":1,\"2710\":2,\"2716\":1,\"2725\":2}}],[\"语句导入插件\",{\"1\":{\"116\":1,\"626\":1,\"1141\":1}}],[\"语法\",{\"1\":{\"372\":1,\"887\":1,\"1402\":1}}],[\"模型定义\",{\"0\":{\"2685\":1,\"2700\":1,\"2715\":1}}],[\"模型继承自\",{\"1\":{\"475\":1,\"990\":1,\"1505\":1}}],[\"模拟通信\",{\"1\":{\"1942\":1,\"2311\":1,\"2680\":1}}],[\"模拟网络通信可以帮助我们更加接近实际机器人应用场景\",{\"1\":{\"1940\":1,\"2309\":1,\"2678\":1}}],[\"模拟网络通信\",{\"0\":{\"1940\":1,\"2309\":1,\"2678\":1}}],[\"模糊匹配会应用在任意需要进行名称判断的地方\",{\"1\":{\"1911\":1,\"2280\":1,\"2649\":1}}],[\"模糊匹配\",{\"0\":{\"1911\":1,\"2280\":1,\"2649\":1}}],[\"模糊匹配阈值\",{\"1\":{\"1903\":1,\"2272\":1,\"2641\":1}}],[\"模板\",{\"1\":{\"1639\":1,\"2008\":1,\"2377\":1}}],[\"模板创建了项目\",{\"1\":{\"515\":1,\"1030\":1,\"1545\":1}}],[\"模式安装的适配器代码\",{\"1\":{\"480\":1,\"995\":1,\"1510\":1}}],[\"模式才会显示\",{\"1\":{\"457\":1,\"972\":1,\"1487\":1}}],[\"模式来确保匹配开头\",{\"1\":{\"101\":1,\"611\":1,\"1126\":1}}],[\"模块名\",{\"1\":{\"1811\":1,\"2180\":1,\"2549\":1}}],[\"模块直接导入使用\",{\"1\":{\"527\":1,\"1042\":1,\"1557\":1}}],[\"模块\",{\"1\":{\"492\":1,\"493\":1,\"1007\":1,\"1008\":1,\"1522\":1,\"1523\":1}}],[\"模块导入以使用\",{\"1\":{\"420\":1,\"935\":1,\"1450\":1}}],[\"模块中共享的一些类型\",{\"1\":{\"372\":1,\"887\":1,\"1402\":1}}],[\"字段进行加载\",{\"1\":{\"520\":1,\"1035\":1,\"1550\":1}}],[\"字段和\",{\"1\":{\"520\":1,\"1035\":1,\"1550\":1}}],[\"字符串与消息段相加\",{\"1\":{\"544\":1,\"1059\":1,\"1574\":1}}],[\"字符串与消息序列相加\",{\"1\":{\"544\":1,\"1059\":1,\"1574\":1}}],[\"字符串\",{\"1\":{\"367\":1,\"882\":1,\"1397\":1,\"1897\":1,\"2266\":1,\"2635\":1}}],[\"字典内可以存储任意类型的数据\",{\"1\":{\"431\":1,\"946\":1,\"1461\":1}}],[\"字典\",{\"1\":{\"321\":1,\"367\":1,\"834\":1,\"882\":1,\"1349\":1,\"1397\":1}}],[\"字典的键名来达成收集某些特殊信息的目的\",{\"1\":{\"110\":1,\"620\":1,\"1135\":1}}],[\"富文本解析\",{\"1\":{\"362\":1,\"877\":1,\"1392\":1}}],[\"例\",{\"1\":{\"361\":2,\"365\":4,\"876\":2,\"880\":4,\"1391\":2,\"1395\":4}}],[\"例如此处的\",{\"1\":{\"2687\":1,\"2702\":1,\"2717\":1}}],[\"例如开发环境和生产环境\",{\"1\":{\"2686\":1,\"2701\":1,\"2716\":1}}],[\"例如天气插件\",{\"1\":{\"2685\":1,\"2700\":1,\"2715\":1}}],[\"例如切片\",{\"1\":{\"532\":1,\"1047\":1,\"1562\":1}}],[\"例如事件响应器的优先级\",{\"1\":{\"529\":1,\"1044\":1,\"1559\":1}}],[\"例如在项目\",{\"1\":{\"517\":1,\"518\":1,\"1032\":1,\"1033\":1,\"1547\":1,\"1548\":1}}],[\"例如在生产构建使用自有的\",{\"1\":{\"503\":1,\"1018\":1,\"1533\":1}}],[\"例如创建一个\",{\"1\":{\"513\":1,\"514\":1,\"1028\":1,\"1029\":1,\"1543\":1,\"1544\":1}}],[\"例如停止任务\",{\"1\":{\"472\":1,\"987\":1,\"1502\":1}}],[\"例如和平台建立连接\",{\"1\":{\"472\":1,\"987\":1,\"1502\":1}}],[\"例如平台连接密钥等\",{\"1\":{\"469\":1,\"984\":1,\"1499\":1}}],[\"例如用户的个人信息\",{\"1\":{\"433\":1,\"948\":1,\"1463\":1}}],[\"例如用户的重试次数等等\",{\"1\":{\"431\":1,\"946\":1,\"1461\":1}}],[\"例如消息发送时间\",{\"1\":{\"422\":1,\"937\":1,\"1452\":1}}],[\"例如多人小游戏等等\",{\"1\":{\"140\":1,\"650\":1,\"1165\":1}}],[\"例如获取当前所有已导入的插件\",{\"1\":{\"111\":1,\"621\":1,\"1136\":1}}],[\"例如插件的名称\",{\"1\":{\"109\":1,\"619\":1,\"1134\":1}}],[\"例如\",{\"1\":{\"81\":1,\"95\":1,\"96\":1,\"97\":1,\"98\":1,\"99\":1,\"100\":1,\"101\":1,\"102\":1,\"103\":1,\"105\":1,\"106\":1,\"120\":1,\"121\":1,\"200\":1,\"420\":1,\"427\":1,\"428\":1,\"429\":1,\"458\":1,\"465\":1,\"469\":1,\"477\":2,\"478\":1,\"504\":1,\"517\":1,\"518\":1,\"519\":1,\"520\":1,\"521\":1,\"522\":1,\"523\":1,\"526\":1,\"527\":1,\"528\":1,\"529\":1,\"534\":1,\"591\":1,\"605\":1,\"606\":1,\"607\":1,\"608\":1,\"609\":1,\"610\":1,\"611\":1,\"612\":1,\"613\":1,\"615\":1,\"616\":1,\"630\":1,\"631\":1,\"712\":1,\"935\":1,\"942\":1,\"943\":1,\"944\":1,\"973\":1,\"980\":1,\"984\":1,\"992\":2,\"993\":1,\"1019\":1,\"1032\":1,\"1033\":1,\"1034\":1,\"1035\":1,\"1036\":1,\"1037\":1,\"1038\":1,\"1041\":1,\"1042\":1,\"1043\":1,\"1044\":1,\"1049\":1,\"1106\":1,\"1120\":1,\"1121\":1,\"1122\":1,\"1123\":1,\"1124\":1,\"1125\":1,\"1126\":1,\"1127\":1,\"1128\":1,\"1130\":1,\"1131\":1,\"1145\":1,\"1146\":1,\"1227\":1,\"1450\":1,\"1457\":1,\"1458\":1,\"1459\":1,\"1488\":1,\"1495\":1,\"1499\":1,\"1507\":2,\"1508\":1,\"1534\":1,\"1547\":1,\"1548\":1,\"1549\":1,\"1550\":1,\"1551\":1,\"1552\":1,\"1553\":1,\"1556\":1,\"1557\":1,\"1558\":1,\"1559\":1,\"1564\":1,\"1894\":4,\"1909\":2,\"1914\":2,\"1937\":1,\"2263\":4,\"2278\":2,\"2283\":2,\"2306\":1,\"2632\":4,\"2647\":2,\"2652\":2,\"2675\":1}}],[\"需先做简单调研\",{\"1\":{\"484\":1,\"999\":1,\"1514\":1}}],[\"需同时满足的权限\",{\"1\":{\"330\":1,\"331\":1,\"332\":1,\"848\":1,\"849\":1,\"850\":1,\"1363\":1,\"1364\":1,\"1365\":1}}],[\"需要存储什么地方\",{\"1\":{\"2685\":1,\"2700\":1,\"2715\":1}}],[\"需要利用到\",{\"1\":{\"1913\":1,\"2282\":1,\"2651\":1}}],[\"需要私聊或\",{\"1\":{\"529\":1,\"1044\":1,\"1559\":1}}],[\"需要在框架初始化之后\",{\"1\":{\"516\":1,\"1031\":1,\"1546\":1}}],[\"需要在机器人入口文件提供\",{\"1\":{\"64\":1,\"72\":1,\"574\":1,\"582\":1,\"1089\":1,\"1097\":1}}],[\"需要手动测试每一个边际条件是非常痛苦的\",{\"1\":{\"487\":1,\"1002\":1,\"1517\":1}}],[\"需要计算适配器测试覆盖率\",{\"1\":{\"480\":1,\"995\":1,\"1510\":1}}],[\"需要构造一个\",{\"1\":{\"476\":1,\"991\":1,\"1506\":1}}],[\"需要我们自行获取信息以及发送信息\",{\"1\":{\"454\":1,\"969\":1,\"1484\":1}}],[\"需要转义的字符串\",{\"1\":{\"398\":1,\"913\":1,\"1428\":1}}],[\"需要同时满足的权限\",{\"1\":{\"329\":1,\"844\":1,\"1359\":1}}],[\"需要注意的是\",{\"1\":{\"0\":1,\"12\":1,\"24\":1,\"529\":1,\"1044\":1,\"1559\":1}}],[\"限制\",{\"1\":{\"329\":1,\"331\":1,\"332\":1,\"844\":1,\"849\":1,\"850\":1,\"1359\":1,\"1364\":1,\"1365\":1}}],[\"每一个模型必须有至少一个主键\",{\"1\":{\"2685\":1,\"2700\":1,\"2715\":1}}],[\"每次启动机器人时\",{\"1\":{\"2686\":1,\"2701\":1,\"2716\":1}}],[\"每次安装新的插件或更新插件版本后\",{\"1\":{\"1932\":1,\"2301\":1,\"2670\":1}}],[\"每次需要等待用户事件时\",{\"1\":{\"138\":1,\"648\":1,\"1163\":1}}],[\"每个解析结果会追加到列表中\",{\"1\":{\"1901\":1,\"2270\":1,\"2639\":1}}],[\"每个\",{\"1\":{\"425\":1,\"940\":1,\"1455\":1}}],[\"每个事件响应器拥有一个rule\",{\"1\":{\"346\":1,\"861\":1,\"1376\":1}}],[\"每个事件响应器\",{\"1\":{\"328\":1,\"843\":1,\"1358\":1}}],[\"及其子类或\",{\"1\":{\"299\":1,\"300\":1,\"305\":1,\"812\":1,\"816\":1,\"818\":1,\"1327\":1,\"1331\":1,\"1333\":1}}],[\"子命令为install且子命令接受一个\",{\"1\":{\"1893\":1,\"2262\":1,\"2631\":1}}],[\"子插件集合\",{\"1\":{\"1856\":1,\"2225\":1,\"2594\":1}}],[\"子插件文件\",{\"1\":{\"1810\":1,\"2179\":1,\"2548\":1}}],[\"子插件的存储目录将位于父插件存储目录下\",{\"1\":{\"435\":1,\"950\":1,\"1465\":1}}],[\"子依赖参数\",{\"1\":{\"383\":1,\"384\":1,\"387\":1,\"388\":1,\"389\":1,\"390\":1,\"391\":1,\"392\":1,\"394\":1,\"395\":1,\"898\":1,\"899\":1,\"902\":1,\"903\":1,\"904\":1,\"905\":1,\"906\":1,\"907\":1,\"909\":1,\"910\":1,\"1413\":1,\"1414\":1,\"1417\":1,\"1418\":1,\"1419\":1,\"1420\":1,\"1421\":1,\"1422\":1,\"1424\":1,\"1425\":1}}],[\"子依赖注入参数\",{\"1\":{\"302\":1,\"814\":1,\"1329\":1}}],[\"子依赖装饰器\",{\"1\":{\"297\":1,\"815\":1,\"1330\":1}}],[\"子类型则根据不同的平台进行了实现\",{\"1\":{\"423\":1,\"938\":1,\"1453\":1}}],[\"子类\",{\"1\":{\"54\":2,\"564\":2,\"1079\":2}}],[\"装饰一个函数使他在\",{\"1\":{\"1726\":1,\"1727\":1,\"2105\":1,\"2106\":1,\"2474\":1,\"2475\":1}}],[\"装饰一个函数\",{\"1\":{\"288\":1,\"289\":1,\"290\":1,\"291\":1,\"800\":1,\"801\":1,\"802\":1,\"803\":1,\"1315\":1,\"1316\":1,\"1317\":1,\"1318\":1}}],[\"装饰一个函数来指示\",{\"1\":{\"250\":1,\"251\":1,\"763\":1,\"764\":1,\"1278\":1,\"1279\":1}}],[\"装饰一个函数来向事件响应器直接添加一个处理函数\",{\"1\":{\"249\":1,\"762\":1,\"1277\":1}}],[\"装饰一个函数来更改当前事件响应器的默认会话权限更新函数\",{\"1\":{\"247\":1,\"760\":1,\"1275\":1}}],[\"装饰一个函数来更改当前事件响应器的默认响应事件类型更新函数\",{\"1\":{\"246\":1,\"759\":1,\"1274\":1}}],[\"值\",{\"1\":{\"259\":1,\"261\":1,\"262\":1,\"428\":2,\"447\":1,\"772\":1,\"774\":1,\"775\":1,\"943\":2,\"962\":1,\"1287\":1,\"1289\":1,\"1290\":1,\"1458\":2,\"1477\":1}}],[\"继续下一个处理函数\",{\"1\":{\"258\":1,\"771\":1,\"1286\":1}}],[\"继承自\",{\"1\":{\"166\":1,\"676\":1,\"1191\":1,\"1647\":1,\"2016\":1,\"2385\":1}}],[\"跳过当前事件处理函数\",{\"1\":{\"258\":1,\"771\":1,\"1286\":1}}],[\"最终用户提供消息模板时\",{\"1\":{\"545\":1,\"1060\":1,\"1575\":1}}],[\"最初基于的\",{\"1\":{\"484\":1,\"999\":1,\"1514\":1}}],[\"最近使用\",{\"1\":{\"255\":1,\"256\":1,\"257\":1,\"768\":1,\"769\":1,\"770\":1,\"1283\":1,\"1284\":1,\"1285\":1}}],[\"最多只支持\",{\"1\":{\"64\":1,\"574\":1,\"1089\":1}}],[\"已经注册在了\",{\"1\":{\"1897\":1,\"2266\":1,\"2635\":1}}],[\"已经可以被称为一个插件了\",{\"1\":{\"513\":1,\"1028\":1,\"1543\":1}}],[\"已支持\",{\"1\":{\"488\":1,\"489\":1,\"1003\":1,\"1004\":1,\"1518\":1,\"1519\":1}}],[\"已存在则直接继续运行\",{\"1\":{\"251\":1,\"764\":1,\"1279\":1}}],[\"已有插件\",{\"0\":{\"114\":1,\"624\":1,\"1139\":1}}],[\"非常繁琐\",{\"1\":{\"2686\":1,\"2701\":1,\"2716\":1}}],[\"非常相似的接口和使用方法\",{\"1\":{\"70\":1,\"580\":1,\"1095\":1}}],[\"非官方接口特点\",{\"1\":{\"491\":1,\"1006\":1,\"1521\":1}}],[\"非参数类型依赖列表\",{\"1\":{\"249\":1,\"250\":1,\"251\":1,\"762\":1,\"763\":1,\"764\":1,\"1277\":1,\"1278\":1,\"1279\":1}}],[\"销毁当前的事件响应器\",{\"1\":{\"243\":1,\"756\":1,\"1271\":1}}],[\"空字符串表示任意\",{\"1\":{\"242\":1,\"755\":1,\"1270\":1}}],[\"之类的快捷指令将视为解析失败\",{\"1\":{\"1909\":1,\"2278\":1,\"2647\":1}}],[\"之后传入\",{\"1\":{\"1898\":1,\"2267\":1,\"2636\":1}}],[\"之间建议以\",{\"1\":{\"1896\":1,\"2265\":1,\"2634\":1}}],[\"之间的桥梁\",{\"1\":{\"228\":1,\"740\":1,\"1255\":1}}],[\"之前添加以下内容\",{\"1\":{\"420\":1,\"935\":1,\"1450\":1}}],[\"之前进行\",{\"1\":{\"86\":1,\"596\":1,\"1111\":1}}],[\"根据传入字典和模板生成消息对象\",{\"1\":{\"1642\":1,\"2011\":1,\"2380\":1}}],[\"根据传入参数和模板生成消息对象\",{\"1\":{\"1641\":1,\"2010\":1,\"2379\":1}}],[\"根据需求实现\",{\"1\":{\"503\":1,\"1018\":1,\"1533\":1}}],[\"根据需要\",{\"1\":{\"477\":1,\"992\":1,\"1507\":1}}],[\"根据事件具体实现\",{\"1\":{\"478\":3,\"993\":3,\"1508\":3}}],[\"根据平台实现\",{\"1\":{\"477\":1,\"992\":1,\"1507\":1}}],[\"根据平台事件的特性\",{\"1\":{\"475\":1,\"990\":1,\"1505\":1}}],[\"根据配置里提供的\",{\"1\":{\"361\":1,\"365\":1,\"876\":1,\"880\":1,\"1391\":1,\"1395\":1}}],[\"根据\",{\"1\":{\"227\":1,\"230\":1,\"739\":1,\"742\":1,\"1254\":1,\"1257\":1}}],[\"根据会话状态\",{\"1\":{\"139\":1,\"649\":1,\"1164\":1}}],[\"格式为\",{\"1\":{\"1846\":1,\"2215\":1,\"2584\":1}}],[\"格式化模板\",{\"1\":{\"1609\":1,\"1978\":1,\"2347\":1}}],[\"格式填写\",{\"1\":{\"508\":1,\"1023\":1,\"1538\":1}}],[\"格式\",{\"1\":{\"227\":1,\"508\":1,\"739\":1,\"1023\":1,\"1254\":1,\"1538\":1}}],[\"05\",{\"1\":{\"2686\":4,\"2701\":4,\"2716\":4}}],[\"04\",{\"1\":{\"2686\":4,\"2701\":4,\"2716\":4}}],[\"02\",{\"1\":{\"2686\":4,\"2701\":4,\"2716\":4}}],[\"01\",{\"1\":{\"2686\":4,\"2701\":4,\"2716\":4}}],[\"0x\",{\"1\":{\"1897\":1,\"2266\":1,\"2635\":1}}],[\"0>\",{\"1\":{\"1874\":1,\"1891\":1,\"2243\":1,\"2260\":1,\"2612\":1,\"2629\":1}}],[\"0\",{\"1\":{\"225\":2,\"319\":1,\"419\":1,\"454\":1,\"508\":3,\"543\":4,\"737\":2,\"832\":1,\"934\":1,\"969\":1,\"1023\":3,\"1058\":4,\"1252\":2,\"1347\":1,\"1449\":1,\"1484\":1,\"1538\":3,\"1573\":4,\"1612\":2,\"1752\":1,\"1897\":1,\"1908\":1,\"1909\":2,\"1936\":1,\"1981\":2,\"2113\":1,\"2266\":1,\"2277\":1,\"2278\":2,\"2305\":1,\"2350\":2,\"2482\":1,\"2635\":1,\"2646\":1,\"2647\":2,\"2674\":1,\"2688\":2,\"2696\":6,\"2703\":2,\"2711\":6,\"2718\":2,\"2726\":6}}],[\"传入该组件的帮助信息\",{\"1\":{\"1900\":1,\"2269\":1,\"2638\":1}}],[\"传入别名后\",{\"1\":{\"1900\":1,\"2269\":1,\"2638\":1}}],[\"传入一个\",{\"1\":{\"1897\":1,\"2266\":1,\"2635\":1}}],[\"传入的命令中符合上下文插值的字段会被自动替换成当前上下文中的信息\",{\"1\":{\"1914\":1,\"2283\":1,\"2652\":1}}],[\"传入的是该参数的默认值或者\",{\"1\":{\"1899\":1,\"2268\":1,\"2637\":1}}],[\"传入的额外参数\",{\"1\":{\"1596\":1,\"1946\":1,\"2315\":1}}],[\"传入的插件名必须为\",{\"1\":{\"522\":1,\"1037\":1,\"1552\":1}}],[\"传入\",{\"1\":{\"225\":2,\"737\":2,\"1252\":2}}],[\"传递给\",{\"1\":{\"69\":1,\"77\":1,\"579\":1,\"587\":1,\"1094\":1,\"1102\":1,\"1687\":1,\"1778\":1,\"2056\":1,\"2147\":1,\"2425\":1,\"2516\":1}}],[\"初始化项目文件夹\",{\"1\":{\"1928\":1,\"2297\":1,\"2666\":1}}],[\"初始化并运行机器人的\",{\"1\":{\"506\":1,\"1021\":1,\"1536\":1}}],[\"初始化\",{\"1\":{\"224\":1,\"509\":1,\"736\":1,\"1024\":1,\"1251\":1,\"1539\":1}}],[\"没有被存储\",{\"1\":{\"2692\":1,\"2707\":1,\"2722\":1}}],[\"没有传入\",{\"1\":{\"222\":1,\"734\":1,\"1249\":1}}],[\"没什么用\",{\"1\":{\"110\":1,\"620\":1,\"1135\":1}}],[\"尚未调用\",{\"1\":{\"217\":1,\"218\":1,\"219\":1,\"220\":1,\"221\":1,\"222\":1,\"223\":1,\"729\":1,\"730\":1,\"731\":1,\"732\":1,\"733\":1,\"734\":1,\"735\":1,\"1244\":1,\"1245\":1,\"1246\":1,\"1247\":1,\"1248\":1,\"1249\":1,\"1250\":1}}],[\"全局命令上下文插值的风格\",{\"1\":{\"1922\":1,\"2291\":1,\"2660\":1}}],[\"全局加载的扩展\",{\"1\":{\"1921\":1,\"2290\":1,\"2659\":1}}],[\"全局配置对象\",{\"1\":{\"1718\":1,\"2097\":1,\"2466\":1}}],[\"全局\",{\"1\":{\"217\":2,\"218\":1,\"219\":1,\"220\":2,\"221\":2,\"222\":1,\"223\":1,\"224\":1,\"729\":2,\"730\":1,\"731\":1,\"732\":2,\"733\":2,\"734\":1,\"735\":1,\"736\":1,\"1244\":2,\"1245\":1,\"1246\":1,\"1247\":2,\"1248\":2,\"1249\":1,\"1250\":1,\"1251\":1,\"1581\":1,\"1600\":1,\"1950\":1,\"1962\":1,\"2319\":1,\"2331\":1}}],[\"全局钩子函数是指\",{\"1\":{\"126\":1,\"636\":1,\"1151\":1}}],[\"全局钩子函数\",{\"0\":{\"126\":1,\"636\":1,\"1151\":1}}],[\"全局钩子函数和事件处理钩子函数\",{\"1\":{\"125\":1,\"635\":1,\"1150\":1}}],[\"供\",{\"1\":{\"215\":1,\"727\":1,\"1242\":1}}],[\"信息中隐藏\",{\"1\":{\"1903\":1,\"2272\":1,\"2641\":1}}],[\"信息并作为回复消息发送\",{\"1\":{\"526\":1,\"1041\":1,\"1556\":1}}],[\"信息\",{\"1\":{\"209\":1,\"721\":1,\"1236\":1,\"1746\":1,\"1747\":1,\"1748\":1,\"1749\":1,\"1750\":1,\"1751\":1,\"2124\":1,\"2125\":1,\"2126\":1,\"2127\":1,\"2128\":1,\"2129\":1,\"2493\":1,\"2494\":1,\"2495\":1,\"2496\":1,\"2497\":1,\"2498\":1}}],[\"且每一个插件只能被加载一次\",{\"1\":{\"516\":1,\"1031\":1,\"1546\":1}}],[\"且返回值类型为\",{\"1\":{\"473\":1,\"988\":1,\"1503\":1}}],[\"且没有类型注解的参数\",{\"1\":{\"299\":1,\"300\":1,\"301\":1,\"305\":1,\"306\":1,\"812\":1,\"816\":1,\"817\":1,\"818\":1,\"819\":1,\"1327\":1,\"1331\":1,\"1332\":1,\"1333\":1,\"1334\":1}}],[\"且没有\",{\"1\":{\"222\":1,\"734\":1,\"1249\":1}}],[\"且后续\",{\"1\":{\"207\":1,\"719\":1,\"1234\":1}}],[\"且打印的异常堆栈信息和\",{\"1\":{\"64\":1,\"574\":1,\"1089\":1}}],[\"结束当前\",{\"1\":{\"205\":1,\"206\":1,\"207\":1,\"717\":1,\"718\":1,\"719\":1,\"1232\":1,\"1233\":1,\"1234\":1}}],[\"阻止事件传播\",{\"1\":{\"266\":1,\"779\":1,\"1294\":1}}],[\"阻止本次\",{\"1\":{\"202\":1,\"714\":1,\"1229\":1}}],[\"阻断事件向后续优先级传播的事件响应器了\",{\"1\":{\"529\":1,\"1044\":1,\"1559\":1}}],[\"阻断\",{\"0\":{\"90\":1,\"600\":1,\"1115\":1},\"1\":{\"90\":1,\"600\":1,\"1115\":1}}],[\"立即结束当前\",{\"1\":{\"200\":1,\"712\":1,\"1227\":1}}],[\"抛出的异常基类\",{\"1\":{\"213\":1,\"725\":1,\"1240\":1}}],[\"抛出的异常\",{\"1\":{\"208\":1,\"720\":1,\"1235\":1}}],[\"抛出\",{\"1\":{\"199\":1,\"200\":1,\"202\":1,\"205\":1,\"206\":1,\"207\":1,\"711\":1,\"712\":1,\"714\":1,\"717\":1,\"718\":1,\"719\":1,\"1226\":1,\"1227\":1,\"1229\":1,\"1232\":1,\"1233\":1,\"1234\":1}}],[\"应将该路由地址替换为真实适配器注册的路由地址\",{\"1\":{\"1941\":1,\"1942\":1,\"2310\":1,\"2311\":1,\"2679\":1,\"2680\":1}}],[\"应如下构造\",{\"1\":{\"1913\":1,\"2282\":1,\"2651\":1}}],[\"应注意消息序列为平台适配器提供的类型\",{\"1\":{\"545\":1,\"1060\":1,\"1575\":1}}],[\"应该忽略该事件\",{\"1\":{\"199\":1,\"711\":1,\"1226\":1}}],[\"应用程序或其他软件组件的行为的各种技术\",{\"1\":{\"125\":1,\"635\":1,\"1150\":1}}],[\"应用后\",{\"1\":{\"124\":1,\"634\":1,\"1149\":1}}],[\"应用添加路由\",{\"0\":{\"122\":1,\"632\":1,\"1147\":1}}],[\"应用添加路由规则\",{\"1\":{\"118\":1,\"628\":1,\"1143\":1}}],[\"应用添加任何服务端相关功能\",{\"1\":{\"53\":1,\"563\":1,\"1078\":1}}],[\"应用路径\",{\"1\":{\"64\":1,\"72\":1,\"574\":1,\"582\":1,\"1089\":1,\"1097\":1}}],[\"应用\",{\"0\":{\"123\":1,\"633\":1,\"1148\":1},\"1\":{\"58\":1,\"118\":1,\"123\":1,\"499\":1,\"568\":1,\"628\":1,\"633\":1,\"1014\":1,\"1083\":1,\"1143\":1,\"1148\":1,\"1529\":1,\"1941\":1,\"2310\":1,\"2679\":1}}],[\"应用框架提供的功能来添加路由规则了\",{\"1\":{\"124\":1,\"634\":1,\"1149\":1}}],[\"应用框架提供的特性与功能\",{\"1\":{\"118\":1,\"628\":1,\"1143\":1}}],[\"应用框架\",{\"1\":{\"53\":1,\"563\":1,\"1078\":1}}],[\"指的是\",{\"1\":{\"2687\":1,\"2702\":1,\"2717\":1}}],[\"指南\",{\"0\":{\"484\":1,\"999\":1,\"1514\":1},\"1\":{\"484\":2,\"999\":2,\"1514\":2}}],[\"指定命令内容\",{\"1\":{\"1872\":1,\"1873\":1,\"1877\":1,\"1878\":1,\"1889\":1,\"1890\":1,\"2241\":1,\"2242\":1,\"2246\":1,\"2247\":1,\"2258\":1,\"2259\":1,\"2610\":1,\"2611\":1,\"2615\":1,\"2616\":1,\"2627\":1,\"2628\":1}}],[\"指定命令元组列表\",{\"1\":{\"360\":1,\"364\":1,\"875\":1,\"879\":1,\"1390\":1,\"1394\":1}}],[\"指定\",{\"1\":{\"1819\":2,\"1820\":2,\"2188\":2,\"2189\":2,\"2557\":2,\"2558\":2}}],[\"指定文件夹路径集合\",{\"1\":{\"1818\":1,\"2187\":1,\"2556\":1}}],[\"指定插件集合\",{\"1\":{\"1818\":1,\"2187\":1,\"2556\":1}}],[\"指定类型消息段数量\",{\"1\":{\"543\":1,\"1058\":1,\"1573\":1}}],[\"指定类型首个消息段索引\",{\"1\":{\"543\":1,\"1058\":1,\"1573\":1}}],[\"指定类型的\",{\"1\":{\"218\":1,\"730\":1,\"1245\":1}}],[\"指定关键字元组\",{\"1\":{\"358\":1,\"359\":1,\"873\":1,\"874\":1,\"1388\":1,\"1389\":1}}],[\"指定消息全匹配内容\",{\"1\":{\"1870\":1,\"1887\":1,\"2239\":1,\"2256\":1,\"2608\":1,\"2625\":1}}],[\"指定消息全匹配字符串元组\",{\"1\":{\"356\":1,\"357\":1,\"871\":1,\"872\":1,\"1386\":1,\"1387\":1}}],[\"指定消息结尾内容\",{\"1\":{\"1869\":1,\"1886\":1,\"2238\":1,\"2255\":1,\"2607\":1,\"2624\":1}}],[\"指定消息结尾字符串元组\",{\"1\":{\"354\":1,\"869\":1,\"1384\":1}}],[\"指定消息开头内容\",{\"1\":{\"1868\":1,\"1885\":1,\"2237\":1,\"2254\":1,\"2606\":1,\"2623\":1}}],[\"指定消息开头字符串元组\",{\"1\":{\"352\":1,\"353\":1,\"355\":1,\"867\":1,\"868\":1,\"870\":1,\"1382\":1,\"1383\":1,\"1385\":1}}],[\"指定消息段或消息段类型\",{\"1\":{\"1618\":1,\"1987\":1,\"2356\":1}}],[\"指定会话与权限\",{\"1\":{\"332\":1,\"850\":1,\"1365\":1}}],[\"指定获取的参数\",{\"1\":{\"298\":1,\"808\":1,\"1323\":1}}],[\"指定的\",{\"1\":{\"218\":1,\"730\":1,\"1245\":1}}],[\"指定名称的\",{\"1\":{\"218\":1,\"730\":1,\"1245\":1}}],[\"指示\",{\"1\":{\"199\":1,\"200\":1,\"202\":1,\"203\":1,\"205\":1,\"206\":1,\"207\":1,\"209\":1,\"711\":1,\"712\":1,\"714\":1,\"715\":1,\"717\":1,\"718\":1,\"719\":1,\"721\":1,\"1226\":1,\"1227\":1,\"1229\":1,\"1230\":1,\"1232\":1,\"1233\":1,\"1234\":1,\"1236\":1}}],[\"指通过拦截软件模块间的函数调用\",{\"1\":{\"125\":1,\"635\":1,\"1150\":1}}],[\"内插件信息\",{\"1\":{\"504\":1,\"1019\":1,\"1534\":1}}],[\"内容完整\",{\"1\":{\"497\":1,\"1012\":1,\"1527\":1}}],[\"内添加如下代码\",{\"1\":{\"480\":1,\"995\":1,\"1510\":1}}],[\"内部处理并按优先级分发事件给所有事件响应器\",{\"1\":{\"287\":1,\"799\":1,\"1314\":1}}],[\"内部运行时被捕获\",{\"1\":{\"195\":1,\"707\":1,\"1222\":1}}],[\"内置选项\",{\"1\":{\"1909\":1,\"2278\":1,\"2647\":1}}],[\"内置插件\",{\"1\":{\"509\":1,\"515\":1,\"522\":1,\"1024\":1,\"1030\":1,\"1037\":1,\"1539\":1,\"1545\":1,\"1552\":1,\"1821\":1,\"1822\":1,\"2190\":1,\"2191\":1,\"2559\":1,\"2560\":1}}],[\"内置响应规则列表可以参考事件响应器进阶\",{\"1\":{\"430\":1,\"945\":1,\"1460\":1}}],[\"内置响应规则\",{\"0\":{\"94\":1,\"430\":1,\"604\":1,\"945\":1,\"1119\":1,\"1460\":1}}],[\"内置了一些常用的响应规则\",{\"1\":{\"430\":1,\"945\":1,\"1460\":1}}],[\"内置了四种常用事件类型\",{\"1\":{\"86\":1,\"596\":1,\"1111\":1}}],[\"内置了多个驱动器适配\",{\"1\":{\"54\":1,\"564\":1,\"1079\":1}}],[\"内置的四种类型\",{\"1\":{\"1587\":1,\"1968\":1,\"2337\":1}}],[\"内置的事件响应器中\",{\"1\":{\"90\":1,\"600\":1,\"1115\":1}}],[\"内置的响应规则\",{\"1\":{\"84\":1,\"594\":1,\"1109\":1}}],[\"内置的空驱动器\",{\"1\":{\"57\":1,\"567\":1,\"1082\":1}}],[\"内置驱动器\",{\"0\":{\"56\":1,\"566\":1,\"1081\":1}}],[\"后续的解析结果会覆盖之前的值\",{\"1\":{\"1901\":1,\"2270\":1,\"2639\":1}}],[\"后续工作\",{\"0\":{\"481\":1,\"996\":1,\"1511\":1}}],[\"后处理\",{\"1\":{\"1585\":1,\"1966\":1,\"2335\":1}}],[\"后执行的函数\",{\"1\":{\"386\":1,\"901\":1,\"1416\":1}}],[\"后参数字典存储\",{\"1\":{\"188\":1,\"700\":1,\"1215\":1}}],[\"后者直接使用\",{\"1\":{\"118\":1,\"628\":1,\"1143\":1}}],[\"后者\",{\"1\":{\"64\":1,\"574\":1,\"1089\":1}}],[\"目前采用了\",{\"1\":{\"504\":1,\"1019\":1,\"1534\":1}}],[\"目前官网组件库已产生了较大的版本落后\",{\"1\":{\"503\":1,\"1018\":1,\"1533\":1}}],[\"目前已有\",{\"1\":{\"500\":1,\"1015\":1,\"1530\":1}}],[\"目前提供了开箱即用的命令行脚手架来帮助初次使用的用户更快的上手编写应用\",{\"1\":{\"499\":1,\"1014\":1,\"1529\":1}}],[\"目前文档对于用户而言过于费解\",{\"1\":{\"497\":1,\"1012\":1,\"1527\":1}}],[\"目前最常用的\",{\"1\":{\"492\":1,\"493\":1,\"1007\":1,\"1008\":1,\"1522\":1,\"1523\":1}}],[\"目前的\",{\"1\":{\"491\":1,\"1006\":1,\"1521\":1}}],[\"目前\",{\"1\":{\"484\":1,\"485\":1,\"488\":1,\"489\":1,\"501\":1,\"527\":1,\"999\":1,\"1000\":1,\"1003\":1,\"1004\":1,\"1016\":1,\"1042\":1,\"1514\":1,\"1515\":1,\"1518\":1,\"1519\":1,\"1531\":1,\"1557\":1}}],[\"目录\",{\"1\":{\"2686\":1,\"2701\":1,\"2716\":1}}],[\"目录下\",{\"1\":{\"517\":1,\"518\":1,\"1032\":1,\"1033\":1,\"1547\":1,\"1548\":1}}],[\"目录下创建一个名为\",{\"1\":{\"515\":1,\"1030\":1,\"1545\":1}}],[\"目录下的所有插件\",{\"1\":{\"114\":1,\"624\":1,\"1139\":1}}],[\"目录中编写实际代码\",{\"1\":{\"465\":1,\"980\":1,\"1495\":1}}],[\"目标存储\",{\"1\":{\"180\":1,\"181\":1,\"690\":1,\"691\":1,\"1205\":1,\"1206\":1}}],[\"存储一个事件响应器到插件\",{\"1\":{\"1859\":1,\"2228\":1,\"2597\":1}}],[\"存储插件信息\",{\"1\":{\"1849\":1,\"2218\":1,\"2587\":1}}],[\"存储机器人启动所需的配置\",{\"1\":{\"506\":1,\"1021\":1,\"1536\":1}}],[\"存储\",{\"1\":{\"177\":1,\"178\":1,\"179\":1,\"334\":1,\"348\":1,\"472\":1,\"687\":1,\"688\":1,\"689\":1,\"846\":1,\"863\":1,\"987\":1,\"1202\":1,\"1203\":1,\"1204\":1,\"1361\":1,\"1378\":1,\"1502\":1}}],[\"±\",{\"1\":{\"175\":1,\"685\":1,\"1200\":1}}],[\"秒\",{\"1\":{\"170\":1,\"680\":1,\"1195\":1}}],[\"日志内容以及可选的异常\",{\"1\":{\"468\":1,\"983\":1,\"1498\":1}}],[\"日志重定向到\",{\"1\":{\"421\":1,\"936\":1,\"1451\":1}}],[\"日志可以通过配置\",{\"1\":{\"419\":1,\"934\":1,\"1449\":1}}],[\"日志都是一个重要的功能\",{\"1\":{\"418\":1,\"933\":1,\"1448\":1}}],[\"日志\",{\"0\":{\"418\":1,\"421\":1,\"933\":1,\"936\":1,\"1448\":1,\"1451\":1},\"1\":{\"419\":1,\"457\":1,\"934\":1,\"972\":1,\"1449\":1,\"1487\":1}}],[\"日志信息\",{\"1\":{\"417\":1,\"932\":1,\"1447\":1}}],[\"日志记录器\",{\"1\":{\"1722\":1,\"2101\":1,\"2470\":1}}],[\"日志记录器对象\",{\"1\":{\"227\":1,\"739\":1,\"1254\":1}}],[\"日志记录函数的参数\",{\"1\":{\"417\":1,\"932\":1,\"1447\":1}}],[\"日志记录函数\",{\"1\":{\"417\":1,\"932\":1,\"1447\":1}}],[\"日志等级名称应为大写\",{\"1\":{\"169\":1,\"679\":1,\"1194\":1}}],[\"日志等级\",{\"1\":{\"169\":1,\"417\":1,\"468\":1,\"679\":1,\"932\":1,\"983\":1,\"1194\":1,\"1447\":1,\"1498\":1}}],[\"日志输出等级\",{\"1\":{\"169\":1,\"679\":1,\"1194\":1}}],[\"主动使用响应规则\",{\"0\":{\"429\":1,\"944\":1,\"1459\":1}}],[\"主机名\",{\"1\":{\"167\":1,\"508\":1,\"677\":1,\"1023\":1,\"1192\":1,\"1538\":1}}],[\"主要影响以下几个层面\",{\"1\":{\"2696\":1,\"2711\":1,\"2726\":1}}],[\"主要功能代码\",{\"1\":{\"495\":1,\"1010\":1,\"1525\":1}}],[\"主要包括客户端和服务端两种类型\",{\"1\":{\"1940\":1,\"2309\":1,\"2678\":1}}],[\"主要包括\",{\"1\":{\"495\":1,\"497\":2,\"1010\":1,\"1012\":2,\"1525\":1,\"1527\":2}}],[\"主要分为客户端和服务端两种类型\",{\"1\":{\"471\":1,\"986\":1,\"1501\":1}}],[\"主要配置\",{\"1\":{\"165\":1,\"675\":1,\"1190\":1}}],[\"主要驱动器可以为客户端或服务端类型\",{\"1\":{\"54\":1,\"564\":1,\"1079\":1}}],[\"主要负责数据收发\",{\"1\":{\"52\":1,\"562\":1,\"1077\":1}}],[\"序列化格式\",{\"1\":{\"162\":1,\"672\":1,\"1187\":1}}],[\"keep\",{\"1\":{\"1903\":1,\"2272\":1,\"2641\":1}}],[\"key=true\",{\"1\":{\"2685\":2,\"2686\":1,\"2688\":1,\"2691\":1,\"2692\":1,\"2694\":1,\"2700\":2,\"2701\":1,\"2703\":1,\"2706\":1,\"2707\":1,\"2709\":1,\"2715\":2,\"2716\":1,\"2718\":1,\"2721\":1,\"2722\":1,\"2724\":1}}],[\"key1\",{\"1\":{\"1895\":1,\"2264\":1,\"2633\":1}}],[\"keys\",{\"1\":{\"447\":1,\"962\":1,\"1477\":1,\"1937\":1,\"2306\":1,\"2675\":1}}],[\"keysview\",{\"1\":{\"275\":1,\"787\":1,\"1302\":1}}],[\"keyerror\",{\"1\":{\"222\":1,\"734\":1,\"1249\":1}}],[\"key\",{\"0\":{\"1896\":1,\"2265\":1,\"2634\":1},\"1\":{\"177\":1,\"178\":1,\"179\":2,\"180\":1,\"181\":1,\"182\":1,\"183\":1,\"184\":1,\"185\":1,\"186\":1,\"187\":1,\"188\":1,\"189\":1,\"190\":1,\"191\":1,\"192\":1,\"193\":1,\"194\":1,\"251\":4,\"256\":1,\"262\":4,\"263\":1,\"278\":4,\"279\":1,\"283\":1,\"295\":1,\"296\":1,\"298\":2,\"303\":1,\"431\":5,\"687\":1,\"688\":1,\"689\":2,\"690\":1,\"691\":1,\"692\":1,\"693\":2,\"694\":1,\"695\":1,\"696\":1,\"697\":1,\"698\":1,\"699\":1,\"700\":1,\"701\":1,\"702\":1,\"703\":1,\"704\":1,\"705\":1,\"706\":1,\"764\":4,\"769\":1,\"775\":4,\"776\":1,\"790\":4,\"791\":1,\"795\":1,\"807\":1,\"808\":2,\"809\":1,\"810\":1,\"811\":1,\"946\":5,\"1202\":1,\"1203\":1,\"1204\":2,\"1205\":1,\"1206\":1,\"1207\":1,\"1208\":2,\"1209\":1,\"1210\":1,\"1211\":1,\"1212\":1,\"1213\":1,\"1214\":1,\"1215\":1,\"1216\":1,\"1217\":1,\"1218\":1,\"1219\":1,\"1220\":1,\"1221\":1,\"1279\":4,\"1284\":1,\"1290\":4,\"1291\":1,\"1305\":4,\"1306\":1,\"1310\":1,\"1322\":1,\"1323\":2,\"1324\":1,\"1325\":1,\"1326\":1,\"1461\":5,\"1632\":1,\"1895\":4,\"1896\":5,\"1897\":3,\"1898\":1,\"1909\":1,\"2001\":1,\"2264\":4,\"2265\":5,\"2266\":3,\"2267\":1,\"2278\":1,\"2370\":1,\"2633\":4,\"2634\":5,\"2635\":3,\"2636\":1,\"2647\":1,\"2685\":1,\"2686\":3,\"2700\":1,\"2701\":3,\"2715\":1,\"2716\":3}}],[\"keywordvar\",{\"0\":{\"1898\":1,\"2267\":1,\"2636\":1},\"1\":{\"1898\":6,\"2267\":6,\"2636\":6}}],[\"keywords\",{\"1\":{\"358\":1,\"359\":1,\"873\":1,\"874\":1,\"1388\":1,\"1389\":1,\"1871\":1,\"1888\":1,\"2240\":1,\"2257\":1,\"2609\":1,\"2626\":1}}],[\"keyword\",{\"1\":{\"98\":5,\"194\":1,\"216\":2,\"608\":5,\"706\":1,\"728\":2,\"1123\":5,\"1221\":1,\"1243\":2,\"1809\":2,\"1895\":2,\"1896\":1,\"1898\":1,\"2178\":2,\"2264\":2,\"2265\":1,\"2267\":1,\"2547\":2,\"2633\":2,\"2634\":1,\"2636\":1}}],[\"koishi\",{\"1\":{\"499\":1,\"1014\":1,\"1529\":1}}],[\"kotlin\",{\"1\":{\"492\":1,\"493\":2,\"1007\":1,\"1008\":2,\"1522\":1,\"1523\":2}}],[\"k\",{\"1\":{\"399\":3,\"914\":3,\"1429\":3}}],[\"kwargs=\",{\"1\":{\"454\":2,\"969\":2,\"1484\":2}}],[\"kwargs\",{\"1\":{\"146\":1,\"155\":1,\"224\":1,\"225\":1,\"252\":1,\"253\":1,\"254\":1,\"255\":1,\"256\":1,\"257\":1,\"298\":1,\"299\":1,\"300\":1,\"301\":1,\"302\":1,\"304\":1,\"305\":1,\"306\":1,\"470\":2,\"472\":2,\"473\":2,\"477\":2,\"656\":1,\"665\":1,\"736\":1,\"737\":1,\"765\":1,\"766\":1,\"767\":1,\"768\":1,\"769\":1,\"770\":1,\"808\":1,\"812\":1,\"813\":1,\"814\":1,\"816\":1,\"817\":1,\"818\":1,\"819\":1,\"985\":2,\"987\":2,\"988\":2,\"992\":2,\"1171\":1,\"1180\":1,\"1251\":1,\"1252\":1,\"1280\":1,\"1281\":1,\"1282\":1,\"1283\":1,\"1284\":1,\"1285\":1,\"1323\":1,\"1327\":1,\"1328\":1,\"1329\":1,\"1331\":1,\"1332\":1,\"1333\":1,\"1334\":1,\"1500\":2,\"1502\":2,\"1503\":2,\"1507\":2,\"1583\":1,\"1596\":1,\"1641\":1,\"1643\":1,\"1644\":1,\"1647\":1,\"1695\":1,\"1720\":1,\"1723\":1,\"1769\":1,\"1786\":1,\"1898\":1,\"1946\":1,\"1964\":1,\"2010\":1,\"2012\":1,\"2013\":1,\"2016\":1,\"2064\":1,\"2099\":1,\"2102\":1,\"2138\":1,\"2155\":1,\"2267\":1,\"2315\":1,\"2333\":1,\"2379\":1,\"2381\":1,\"2382\":1,\"2385\":1,\"2433\":1,\"2468\":1,\"2471\":1,\"2507\":1,\"2524\":1,\"2636\":1}}],[\"本体\",{\"0\":{\"1893\":1,\"2262\":1,\"2631\":1}}],[\"本驱动不支持任何服务器或客户端连接\",{\"1\":{\"1765\":1,\"2134\":1,\"2503\":1}}],[\"本驱动仅支持客户端\",{\"1\":{\"1704\":1,\"1795\":1,\"2073\":1,\"2164\":1,\"2442\":1,\"2533\":1}}],[\"本驱动仅支持客户端连接\",{\"1\":{\"1658\":1,\"2027\":1,\"2396\":1}}],[\"本驱动仅支持服务端连接\",{\"1\":{\"1676\":1,\"1771\":1,\"2045\":1,\"2140\":1,\"2414\":1,\"2509\":1}}],[\"本驱动器仅支持\",{\"1\":{\"78\":1,\"79\":1,\"588\":1,\"589\":1,\"1103\":1,\"1104\":1}}],[\"本协议适配器已建立连接的\",{\"1\":{\"1598\":1,\"1948\":1,\"2317\":1}}],[\"本章节将介绍\",{\"1\":{\"525\":1,\"1040\":1,\"1555\":1}}],[\"本章节的代码中提到的\",{\"1\":{\"467\":1,\"982\":1,\"1497\":1}}],[\"本地插件的路径应该为相对机器人\",{\"1\":{\"517\":1,\"1032\":1,\"1547\":1}}],[\"本地插件\",{\"1\":{\"509\":1,\"515\":1,\"1024\":1,\"1030\":1,\"1539\":1,\"1545\":1}}],[\"本项目将基于\",{\"1\":{\"505\":1,\"1020\":1,\"1535\":1}}],[\"本项目希望针对以上问题与不足的地方进行修复与优化\",{\"1\":{\"504\":1,\"1019\":1,\"1534\":1}}],[\"本项目希望在跟进框架新版本的基础上\",{\"1\":{\"503\":1,\"1018\":1,\"1533\":1}}],[\"本项目旨在优化文档内容\",{\"1\":{\"497\":1,\"1012\":1,\"1527\":1}}],[\"本项目旨在重新设计\",{\"1\":{\"495\":1,\"1010\":1,\"1525\":1}}],[\"本质上是对\",{\"1\":{\"452\":1,\"967\":1,\"1482\":1}}],[\"本身并无显著区别\",{\"1\":{\"452\":1,\"967\":1,\"1482\":1}}],[\"本身会在会话状态中存储一些信息\",{\"1\":{\"431\":1,\"946\":1,\"1461\":1}}],[\"本身运行所需的配置项\",{\"1\":{\"162\":1,\"672\":1,\"1187\":1}}],[\"本注入参数应该具有最低优先级\",{\"1\":{\"304\":1,\"813\":1,\"1328\":1}}],[\"本注入应该具有最高优先级\",{\"1\":{\"302\":1,\"814\":1,\"1329\":1}}],[\"本注入还会解析名为\",{\"1\":{\"299\":1,\"300\":1,\"301\":1,\"305\":1,\"306\":1,\"812\":1,\"816\":1,\"817\":1,\"818\":1,\"819\":1,\"1327\":1,\"1331\":1,\"1332\":1,\"1333\":1,\"1334\":1}}],[\"本注入解析所有剩余未能解析且具有默认值的参数\",{\"1\":{\"304\":1,\"813\":1,\"1328\":1}}],[\"本注入解析所有子依赖注入\",{\"1\":{\"302\":1,\"814\":1,\"1329\":1}}],[\"本注入解析所有类型为\",{\"1\":{\"301\":1,\"306\":1,\"817\":1,\"819\":1,\"1332\":1,\"1334\":1}}],[\"本注入解析所有类型为且仅为\",{\"1\":{\"299\":1,\"300\":1,\"305\":1,\"812\":1,\"816\":1,\"818\":1,\"1327\":1,\"1331\":1,\"1333\":1}}],[\"本注入解析事件响应器操作\",{\"1\":{\"298\":1,\"808\":1,\"1323\":1}}],[\"本模块实现插件加载流程\",{\"1\":{\"1825\":1,\"2194\":1,\"2563\":1}}],[\"本模块实现事件响应器的创建与运行\",{\"1\":{\"232\":1,\"744\":1,\"1259\":1}}],[\"本模块定义事件响应器便携定义函数\",{\"1\":{\"1858\":1,\"2227\":1,\"2596\":1}}],[\"本模块定义插件相关信息\",{\"1\":{\"1838\":1,\"2207\":1,\"2576\":1}}],[\"本模块定义插件加载接口\",{\"1\":{\"1815\":1,\"2184\":1,\"2553\":1}}],[\"本模块定义了驱动适配器基类\",{\"1\":{\"1713\":1,\"2082\":1,\"2451\":1}}],[\"本模块定义了协议适配基类\",{\"1\":{\"1576\":1,\"1945\":1,\"2314\":1}}],[\"本模块定义了依赖注入的各类参数\",{\"1\":{\"294\":1,\"806\":1,\"1321\":1}}],[\"本模块定义了事件处理主要流程\",{\"1\":{\"287\":1,\"799\":1,\"1314\":1}}],[\"本模块定义了\",{\"1\":{\"162\":1,\"226\":1,\"372\":1,\"672\":1,\"738\":1,\"887\":1,\"1187\":1,\"1253\":1,\"1402\":1}}],[\"本模块模块实现了依赖注入的定义与处理\",{\"1\":{\"1646\":1,\"2015\":1,\"2384\":1}}],[\"本模块是\",{\"1\":{\"328\":1,\"346\":1,\"843\":1,\"861\":1,\"1358\":1,\"1376\":1}}],[\"本模块从子模块导入了部分内容\",{\"1\":{\"216\":1,\"728\":1,\"1243\":1,\"1809\":1,\"2178\":1,\"2547\":1}}],[\"本模块主要定义了\",{\"1\":{\"215\":1,\"727\":1,\"1242\":1}}],[\"本模块包含了所有\",{\"1\":{\"195\":1,\"707\":1,\"1222\":1}}],[\"本模块包含了\",{\"1\":{\"176\":1,\"397\":1,\"686\":1,\"912\":1,\"1201\":1,\"1427\":1}}],[\"本模块为\",{\"1\":{\"141\":1,\"651\":1,\"1166\":1,\"1808\":1,\"2177\":1,\"2546\":1}}],[\"权限限制\",{\"1\":{\"504\":1,\"1019\":1,\"1534\":1}}],[\"权限类\",{\"1\":{\"333\":1,\"845\":1,\"1360\":1}}],[\"权限\",{\"1\":{\"140\":1,\"242\":1,\"650\":1,\"755\":1,\"1165\":1,\"1270\":1}}],[\"权限控制\",{\"1\":{\"86\":1,\"497\":1,\"596\":1,\"1012\":1,\"1111\":1,\"1527\":1}}],[\"权限控制等功能\",{\"1\":{\"84\":1,\"594\":1,\"1109\":1}}],[\"上海\",{\"1\":{\"2687\":1,\"2702\":1,\"2717\":1}}],[\"上下文可以在\",{\"1\":{\"1914\":1,\"2283\":1,\"2652\":1}}],[\"上下文插值\",{\"0\":{\"1914\":1,\"2283\":1,\"2652\":1}}],[\"上\",{\"1\":{\"1905\":1,\"2274\":1,\"2643\":1}}],[\"上述的项目结构仅作推荐\",{\"1\":{\"465\":1,\"980\":1,\"1495\":1}}],[\"上述权限更新函数是默认的权限更新函数\",{\"1\":{\"140\":1,\"650\":1,\"1165\":1}}],[\"上报事件\",{\"1\":{\"244\":1,\"245\":1,\"757\":1,\"758\":1,\"1272\":1,\"1273\":1,\"1583\":1,\"1964\":1,\"2333\":1}}],[\"上报地址以及对上报数据处理的回调函数\",{\"1\":{\"53\":1,\"563\":1,\"1078\":1}}],[\"忽略不符合其参数类型注解的情况\",{\"1\":{\"424\":1,\"939\":1,\"1454\":1}}],[\"忽略事件的原因\",{\"1\":{\"199\":1,\"711\":1,\"1226\":1}}],[\"忽略本次运行\",{\"1\":{\"134\":1,\"644\":1,\"1159\":1}}],[\"忽略该事件\",{\"1\":{\"132\":1,\"642\":1,\"1157\":1}}],[\"断开了\",{\"1\":{\"474\":1,\"989\":1,\"1504\":1}}],[\"断开\",{\"1\":{\"472\":1,\"474\":1,\"987\":1,\"989\":1,\"1502\":1,\"1504\":1}}],[\"断开连接\",{\"1\":{\"472\":1,\"987\":1,\"1502\":1}}],[\"断开与\",{\"1\":{\"130\":1,\"640\":1,\"1155\":1}}],[\"断开处理\",{\"0\":{\"130\":1,\"640\":1,\"1155\":1}}],[\"终止事件向下层传播\",{\"1\":{\"203\":1,\"715\":1,\"1230\":1}}],[\"终止时运行\",{\"1\":{\"128\":1,\"638\":1,\"1153\":1}}],[\"终止处理\",{\"0\":{\"128\":1,\"638\":1,\"1153\":1}}],[\"很多时候\",{\"1\":{\"127\":1,\"637\":1,\"1152\":1}}],[\"处理接收与发送\",{\"1\":{\"1596\":1,\"1946\":1,\"2315\":1}}],[\"处理消息\",{\"0\":{\"530\":1,\"1045\":1,\"1560\":1}}],[\"处理消息事件\",{\"1\":{\"497\":1,\"1012\":1,\"1527\":1}}],[\"处理消息失败时返回的异常\",{\"1\":{\"197\":1,\"709\":1,\"1224\":1}}],[\"处理\",{\"1\":{\"421\":1,\"472\":1,\"936\":1,\"987\":1,\"1451\":1,\"1502\":1}}],[\"处理函数\",{\"1\":{\"393\":1,\"473\":2,\"908\":1,\"988\":2,\"1423\":1,\"1503\":2}}],[\"处理一个事件\",{\"1\":{\"293\":1,\"805\":1,\"1320\":1}}],[\"处理事件完成后运行\",{\"1\":{\"133\":1,\"643\":1,\"1158\":1}}],[\"处理事件的核心\",{\"1\":{\"81\":1,\"591\":1,\"1106\":1}}],[\"处理被拦截的函数调用\",{\"1\":{\"125\":1,\"635\":1,\"1150\":1}}],[\"挂钩\",{\"1\":{\"125\":1,\"635\":1,\"1150\":1}}],[\"钩子编程\",{\"1\":{\"125\":1,\"635\":1,\"1150\":1}}],[\"钩子函数参数\",{\"1\":{\"1584\":1,\"1585\":1,\"1726\":1,\"1727\":1,\"1965\":1,\"1966\":1,\"2105\":1,\"2106\":1,\"2334\":1,\"2335\":1,\"2474\":1,\"2475\":1}}],[\"钩子函数\",{\"0\":{\"125\":1,\"635\":1,\"1150\":1},\"1\":{\"385\":1,\"497\":1,\"900\":1,\"1012\":1,\"1415\":1,\"1527\":1}}],[\"演示如何添加路由规则\",{\"1\":{\"124\":1,\"634\":1,\"1149\":1}}],[\"发生了什么\",{\"1\":{\"2686\":1,\"2701\":1,\"2716\":1}}],[\"发生的异常基类\",{\"1\":{\"196\":1,\"204\":1,\"708\":1,\"716\":1,\"1223\":1,\"1231\":1}}],[\"发起一个\",{\"1\":{\"1763\":1,\"2131\":1,\"2500\":1}}],[\"发布插件等\",{\"1\":{\"497\":1,\"1012\":1,\"1527\":1}}],[\"发布插件必填\",{\"1\":{\"110\":2,\"620\":2,\"1135\":2}}],[\"发送了一个模拟\",{\"1\":{\"1941\":1,\"2310\":1,\"2679\":1}}],[\"发送一个\",{\"1\":{\"1759\":1,\"2110\":1,\"2479\":1}}],[\"发送一条\",{\"1\":{\"1749\":1,\"1750\":1,\"1751\":1,\"2127\":1,\"2128\":1,\"2129\":1,\"2496\":1,\"2497\":1,\"2498\":1}}],[\"发送一条消息给当前交互用户并将当前事件处理流程中断在当前位置\",{\"1\":{\"255\":1,\"256\":1,\"257\":1,\"768\":1,\"769\":1,\"770\":1,\"1283\":1,\"1284\":1,\"1285\":1}}],[\"发送一条消息给当前交互用户并暂停事件响应器\",{\"1\":{\"254\":1,\"767\":1,\"1282\":1}}],[\"发送一条消息给当前交互用户并结束当前事件响应器\",{\"1\":{\"253\":1,\"766\":1,\"1281\":1}}],[\"发送一条消息给当前交互用户\",{\"1\":{\"252\":1,\"765\":1,\"1280\":1}}],[\"发送结果\",{\"1\":{\"810\":1,\"841\":1,\"842\":1,\"1325\":1,\"1356\":1,\"1357\":1}}],[\"发送结果存储\",{\"1\":{\"692\":1,\"693\":1,\"1207\":1,\"1208\":1}}],[\"发送\",{\"1\":{\"476\":2,\"991\":2,\"1506\":2}}],[\"发送请求\",{\"1\":{\"476\":1,\"991\":1,\"1506\":1}}],[\"发送所有接收到的数据\",{\"1\":{\"121\":1,\"631\":1,\"1146\":1}}],[\"返回选项\",{\"1\":{\"1902\":4,\"2271\":4,\"2640\":4}}],[\"返回字典中\",{\"1\":{\"1902\":1,\"2271\":1,\"2640\":1}}],[\"返回对应的属性\",{\"1\":{\"1902\":1,\"2271\":1,\"2640\":1}}],[\"返回当前插件管理器中控制的插件标识符与模块路径映射字典\",{\"1\":{\"1830\":1,\"2199\":1,\"2568\":1}}],[\"返回当前插件管理器中可用的插件标识符\",{\"1\":{\"1829\":1,\"2198\":1,\"2567\":1}}],[\"返回已搜索到的插件标识符\",{\"1\":{\"1828\":1,\"2197\":1,\"2566\":1}}],[\"返回所有独立插件标识符\",{\"1\":{\"1827\":1,\"2196\":1,\"2565\":1}}],[\"返回值会自动取交集\",{\"1\":{\"1824\":1,\"2193\":1,\"2562\":1}}],[\"返回该消息段的纯文本表现形式\",{\"1\":{\"479\":1,\"994\":1,\"1509\":1}}],[\"返回适配器的\",{\"1\":{\"479\":2,\"994\":2,\"1509\":2}}],[\"返回事件消息对应的\",{\"1\":{\"478\":1,\"993\":1,\"1508\":1}}],[\"返回事件的描述\",{\"1\":{\"478\":1,\"993\":1,\"1508\":1}}],[\"返回事件的名称\",{\"1\":{\"478\":1,\"993\":1,\"1508\":1}}],[\"返回结果\",{\"1\":{\"476\":1,\"991\":1,\"1506\":1}}],[\"返回机器人用户对应的平台\",{\"1\":{\"423\":1,\"938\":1,\"1453\":1}}],[\"返回一个\",{\"1\":{\"222\":1,\"734\":1,\"1249\":1}}],[\"返回的内容\",{\"1\":{\"202\":1,\"714\":1,\"1229\":1}}],[\"返回\",{\"1\":{\"120\":1,\"152\":1,\"153\":1,\"154\":1,\"155\":1,\"156\":1,\"157\":1,\"158\":1,\"159\":1,\"160\":1,\"161\":1,\"217\":1,\"218\":2,\"219\":1,\"220\":1,\"221\":1,\"222\":1,\"223\":1,\"224\":1,\"225\":1,\"229\":1,\"230\":1,\"242\":1,\"243\":1,\"244\":1,\"245\":1,\"246\":1,\"247\":1,\"248\":1,\"249\":1,\"250\":1,\"251\":1,\"252\":1,\"253\":1,\"254\":1,\"255\":1,\"256\":1,\"257\":1,\"258\":1,\"259\":3,\"260\":1,\"261\":3,\"262\":3,\"263\":1,\"264\":1,\"265\":2,\"266\":1,\"267\":1,\"268\":1,\"269\":1,\"270\":1,\"271\":1,\"272\":1,\"275\":1,\"276\":1,\"277\":1,\"278\":2,\"279\":1,\"280\":1,\"281\":1,\"282\":1,\"283\":1,\"284\":1,\"288\":1,\"289\":1,\"290\":1,\"291\":1,\"292\":1,\"293\":1,\"295\":1,\"296\":1,\"297\":1,\"303\":1,\"307\":1,\"308\":1,\"309\":1,\"310\":1,\"311\":1,\"312\":1,\"313\":1,\"314\":1,\"315\":1,\"316\":1,\"317\":1,\"318\":1,\"319\":3,\"320\":1,\"321\":1,\"322\":1,\"323\":1,\"324\":1,\"325\":1,\"326\":1,\"327\":1,\"329\":1,\"331\":1,\"332\":1,\"335\":1,\"349\":1,\"353\":1,\"355\":1,\"357\":1,\"359\":1,\"361\":1,\"363\":3,\"365\":1,\"367\":1,\"369\":1,\"371\":1,\"373\":1,\"374\":1,\"375\":1,\"376\":1,\"377\":1,\"378\":1,\"379\":1,\"380\":1,\"398\":1,\"399\":1,\"400\":1,\"401\":1,\"402\":1,\"403\":1,\"404\":1,\"405\":1,\"406\":1,\"407\":1,\"408\":3,\"409\":1,\"410\":1,\"411\":1,\"412\":1,\"413\":1,\"416\":1,\"417\":1,\"630\":1,\"662\":1,\"663\":1,\"664\":1,\"665\":1,\"666\":1,\"667\":1,\"668\":1,\"669\":1,\"670\":1,\"671\":1,\"729\":1,\"730\":2,\"731\":1,\"732\":1,\"733\":1,\"734\":1,\"735\":1,\"736\":1,\"737\":1,\"741\":1,\"742\":1,\"755\":1,\"756\":1,\"757\":1,\"758\":1,\"759\":1,\"760\":1,\"761\":1,\"762\":1,\"763\":1,\"764\":1,\"765\":1,\"766\":1,\"767\":1,\"768\":1,\"769\":1,\"770\":1,\"771\":1,\"772\":3,\"773\":1,\"774\":3,\"775\":3,\"776\":1,\"777\":1,\"778\":2,\"779\":1,\"780\":1,\"781\":1,\"782\":1,\"783\":1,\"784\":1,\"785\":1,\"787\":1,\"788\":1,\"789\":1,\"790\":2,\"791\":1,\"792\":1,\"793\":1,\"794\":1,\"795\":1,\"796\":1,\"800\":1,\"801\":1,\"802\":1,\"803\":1,\"804\":1,\"805\":1,\"807\":1,\"809\":1,\"810\":1,\"811\":1,\"815\":1,\"820\":1,\"821\":1,\"822\":1,\"823\":1,\"824\":1,\"825\":1,\"826\":1,\"827\":1,\"828\":1,\"829\":1,\"830\":1,\"831\":1,\"832\":3,\"833\":1,\"834\":1,\"835\":1,\"836\":1,\"837\":1,\"838\":1,\"839\":1,\"840\":1,\"841\":1,\"842\":1,\"844\":1,\"847\":1,\"849\":1,\"850\":1,\"864\":1,\"868\":1,\"870\":1,\"872\":1,\"874\":1,\"876\":1,\"878\":3,\"880\":1,\"882\":1,\"884\":1,\"886\":1,\"888\":1,\"889\":1,\"890\":1,\"891\":1,\"892\":1,\"893\":1,\"894\":1,\"895\":1,\"913\":1,\"914\":1,\"915\":1,\"916\":1,\"917\":1,\"918\":1,\"919\":1,\"920\":1,\"921\":1,\"922\":1,\"923\":3,\"924\":1,\"925\":1,\"926\":1,\"927\":1,\"928\":1,\"931\":1,\"932\":1,\"1145\":1,\"1177\":1,\"1178\":1,\"1179\":1,\"1180\":1,\"1181\":1,\"1182\":1,\"1183\":1,\"1184\":1,\"1185\":1,\"1186\":1,\"1244\":1,\"1245\":2,\"1246\":1,\"1247\":1,\"1248\":1,\"1249\":1,\"1250\":1,\"1251\":1,\"1252\":1,\"1256\":1,\"1257\":1,\"1270\":1,\"1271\":1,\"1272\":1,\"1273\":1,\"1274\":1,\"1275\":1,\"1276\":1,\"1277\":1,\"1278\":1,\"1279\":1,\"1280\":1,\"1281\":1,\"1282\":1,\"1283\":1,\"1284\":1,\"1285\":1,\"1286\":1,\"1287\":3,\"1288\":1,\"1289\":3,\"1290\":3,\"1291\":1,\"1292\":1,\"1293\":2,\"1294\":1,\"1295\":1,\"1296\":1,\"1297\":1,\"1298\":1,\"1299\":1,\"1300\":1,\"1302\":1,\"1303\":1,\"1304\":1,\"1305\":2,\"1306\":1,\"1307\":1,\"1308\":1,\"1309\":1,\"1310\":1,\"1311\":1,\"1315\":1,\"1316\":1,\"1317\":1,\"1318\":1,\"1319\":1,\"1320\":1,\"1322\":1,\"1324\":1,\"1325\":1,\"1326\":1,\"1330\":1,\"1335\":1,\"1336\":1,\"1337\":1,\"1338\":1,\"1339\":1,\"1340\":1,\"1341\":1,\"1342\":1,\"1343\":1,\"1344\":1,\"1345\":1,\"1346\":1,\"1347\":3,\"1348\":1,\"1349\":1,\"1350\":1,\"1351\":1,\"1352\":1,\"1353\":1,\"1354\":1,\"1355\":1,\"1356\":1,\"1357\":1,\"1359\":1,\"1362\":1,\"1364\":1,\"1365\":1,\"1379\":1,\"1383\":1,\"1385\":1,\"1387\":1,\"1389\":1,\"1391\":1,\"1393\":3,\"1395\":1,\"1397\":1,\"1399\":1,\"1401\":1,\"1403\":1,\"1404\":1,\"1405\":1,\"1406\":1,\"1407\":1,\"1408\":1,\"1409\":1,\"1410\":1,\"1428\":1,\"1429\":1,\"1430\":1,\"1431\":1,\"1432\":1,\"1433\":1,\"1434\":1,\"1435\":1,\"1436\":1,\"1437\":1,\"1438\":3,\"1439\":1,\"1440\":1,\"1441\":1,\"1442\":1,\"1443\":1,\"1446\":1,\"1447\":1,\"1582\":1,\"1583\":1,\"1584\":1,\"1585\":1,\"1587\":1,\"1588\":1,\"1589\":1,\"1590\":1,\"1591\":1,\"1592\":1,\"1593\":1,\"1594\":1,\"1595\":1,\"1599\":1,\"1601\":1,\"1602\":1,\"1603\":1,\"1604\":1,\"1605\":1,\"1606\":1,\"1607\":1,\"1609\":1,\"1610\":1,\"1611\":1,\"1612\":5,\"1613\":1,\"1614\":1,\"1615\":1,\"1616\":1,\"1617\":1,\"1618\":1,\"1619\":1,\"1620\":1,\"1621\":1,\"1622\":1,\"1623\":1,\"1624\":1,\"1625\":1,\"1629\":1,\"1630\":1,\"1631\":1,\"1632\":1,\"1633\":1,\"1634\":1,\"1635\":1,\"1636\":1,\"1637\":1,\"1638\":1,\"1640\":1,\"1641\":1,\"1642\":1,\"1643\":1,\"1644\":1,\"1645\":1,\"1649\":1,\"1650\":1,\"1651\":1,\"1652\":1,\"1653\":1,\"1655\":1,\"1656\":1,\"1657\":1,\"1660\":1,\"1661\":1,\"1662\":1,\"1664\":1,\"1665\":1,\"1666\":1,\"1668\":1,\"1669\":1,\"1670\":1,\"1671\":1,\"1672\":1,\"1673\":1,\"1674\":1,\"1693\":1,\"1694\":1,\"1695\":1,\"1697\":1,\"1698\":1,\"1699\":1,\"1700\":1,\"1701\":1,\"1702\":1,\"1703\":1,\"1706\":1,\"1707\":1,\"1708\":1,\"1710\":1,\"1711\":1,\"1720\":1,\"1723\":1,\"1724\":1,\"1725\":1,\"1726\":1,\"1727\":1,\"1729\":1,\"1730\":1,\"1731\":1,\"1732\":1,\"1733\":1,\"1734\":1,\"1740\":1,\"1741\":1,\"1744\":1,\"1745\":1,\"1746\":1,\"1747\":1,\"1748\":1,\"1749\":1,\"1750\":1,\"1751\":1,\"1757\":2,\"1759\":1,\"1760\":1,\"1763\":1,\"1769\":1,\"1770\":1,\"1784\":1,\"1785\":1,\"1786\":1,\"1788\":1,\"1789\":1,\"1790\":1,\"1791\":1,\"1792\":1,\"1793\":1,\"1794\":1,\"1796\":1,\"1798\":1,\"1800\":1,\"1801\":1,\"1802\":1,\"1803\":1,\"1804\":1,\"1805\":1,\"1806\":1,\"1810\":1,\"1811\":1,\"1812\":1,\"1813\":1,\"1814\":1,\"1816\":1,\"1817\":1,\"1818\":1,\"1819\":1,\"1820\":1,\"1821\":1,\"1822\":1,\"1823\":1,\"1824\":1,\"1831\":1,\"1832\":1,\"1834\":1,\"1836\":1,\"1837\":1,\"1848\":1,\"1859\":1,\"1860\":1,\"1861\":1,\"1862\":1,\"1863\":1,\"1864\":1,\"1865\":1,\"1866\":1,\"1867\":1,\"1868\":1,\"1869\":1,\"1870\":1,\"1871\":1,\"1872\":1,\"1873\":1,\"1874\":1,\"1875\":1,\"1877\":1,\"1878\":1,\"1880\":1,\"1881\":1,\"1882\":1,\"1883\":1,\"1884\":1,\"1885\":1,\"1886\":1,\"1887\":1,\"1888\":1,\"1889\":1,\"1890\":1,\"1891\":1,\"1892\":1,\"1902\":2,\"1949\":1,\"1951\":1,\"1952\":1,\"1953\":1,\"1954\":1,\"1955\":1,\"1956\":1,\"1957\":1,\"1963\":1,\"1964\":1,\"1965\":1,\"1966\":1,\"1968\":1,\"1969\":1,\"1970\":1,\"1971\":1,\"1972\":1,\"1973\":1,\"1974\":1,\"1975\":1,\"1976\":1,\"1978\":1,\"1979\":1,\"1980\":1,\"1981\":5,\"1982\":1,\"1983\":1,\"1984\":1,\"1985\":1,\"1986\":1,\"1987\":1,\"1988\":1,\"1989\":1,\"1990\":1,\"1991\":1,\"1992\":1,\"1993\":1,\"1994\":1,\"1998\":1,\"1999\":1,\"2000\":1,\"2001\":1,\"2002\":1,\"2003\":1,\"2004\":1,\"2005\":1,\"2006\":1,\"2007\":1,\"2009\":1,\"2010\":1,\"2011\":1,\"2012\":1,\"2013\":1,\"2014\":1,\"2018\":1,\"2019\":1,\"2020\":1,\"2021\":1,\"2022\":1,\"2024\":1,\"2025\":1,\"2026\":1,\"2029\":1,\"2030\":1,\"2031\":1,\"2033\":1,\"2034\":1,\"2035\":1,\"2037\":1,\"2038\":1,\"2039\":1,\"2040\":1,\"2041\":1,\"2042\":1,\"2043\":1,\"2062\":1,\"2063\":1,\"2064\":1,\"2066\":1,\"2067\":1,\"2068\":1,\"2069\":1,\"2070\":1,\"2071\":1,\"2072\":1,\"2075\":1,\"2076\":1,\"2077\":1,\"2079\":1,\"2080\":1,\"2086\":1,\"2087\":1,\"2089\":1,\"2090\":1,\"2091\":1,\"2092\":1,\"2093\":1,\"2094\":1,\"2099\":1,\"2102\":1,\"2103\":1,\"2104\":1,\"2105\":1,\"2106\":1,\"2110\":1,\"2111\":1,\"2122\":1,\"2123\":1,\"2124\":1,\"2125\":1,\"2126\":1,\"2127\":1,\"2128\":1,\"2129\":1,\"2131\":1,\"2133\":2,\"2138\":1,\"2139\":1,\"2153\":1,\"2154\":1,\"2155\":1,\"2157\":1,\"2158\":1,\"2159\":1,\"2160\":1,\"2161\":1,\"2162\":1,\"2163\":1,\"2165\":1,\"2167\":1,\"2169\":1,\"2170\":1,\"2171\":1,\"2172\":1,\"2173\":1,\"2174\":1,\"2175\":1,\"2179\":1,\"2180\":1,\"2181\":1,\"2182\":1,\"2183\":1,\"2185\":1,\"2186\":1,\"2187\":1,\"2188\":1,\"2189\":1,\"2190\":1,\"2191\":1,\"2192\":1,\"2193\":1,\"2200\":1,\"2201\":1,\"2203\":1,\"2205\":1,\"2206\":1,\"2217\":1,\"2228\":1,\"2229\":1,\"2230\":1,\"2231\":1,\"2232\":1,\"2233\":1,\"2234\":1,\"2235\":1,\"2236\":1,\"2237\":1,\"2238\":1,\"2239\":1,\"2240\":1,\"2241\":1,\"2242\":1,\"2243\":1,\"2244\":1,\"2246\":1,\"2247\":1,\"2249\":1,\"2250\":1,\"2251\":1,\"2252\":1,\"2253\":1,\"2254\":1,\"2255\":1,\"2256\":1,\"2257\":1,\"2258\":1,\"2259\":1,\"2260\":1,\"2261\":1,\"2271\":2,\"2318\":1,\"2320\":1,\"2321\":1,\"2322\":1,\"2323\":1,\"2324\":1,\"2325\":1,\"2326\":1,\"2332\":1,\"2333\":1,\"2334\":1,\"2335\":1,\"2337\":1,\"2338\":1,\"2339\":1,\"2340\":1,\"2341\":1,\"2342\":1,\"2343\":1,\"2344\":1,\"2345\":1,\"2347\":1,\"2348\":1,\"2349\":1,\"2350\":5,\"2351\":1,\"2352\":1,\"2353\":1,\"2354\":1,\"2355\":1,\"2356\":1,\"2357\":1,\"2358\":1,\"2359\":1,\"2360\":1,\"2361\":1,\"2362\":1,\"2363\":1,\"2367\":1,\"2368\":1,\"2369\":1,\"2370\":1,\"2371\":1,\"2372\":1,\"2373\":1,\"2374\":1,\"2375\":1,\"2376\":1,\"2378\":1,\"2379\":1,\"2380\":1,\"2381\":1,\"2382\":1,\"2383\":1,\"2387\":1,\"2388\":1,\"2389\":1,\"2390\":1,\"2391\":1,\"2393\":1,\"2394\":1,\"2395\":1,\"2398\":1,\"2399\":1,\"2400\":1,\"2402\":1,\"2403\":1,\"2404\":1,\"2406\":1,\"2407\":1,\"2408\":1,\"2409\":1,\"2410\":1,\"2411\":1,\"2412\":1,\"2431\":1,\"2432\":1,\"2433\":1,\"2435\":1,\"2436\":1,\"2437\":1,\"2438\":1,\"2439\":1,\"2440\":1,\"2441\":1,\"2444\":1,\"2445\":1,\"2446\":1,\"2448\":1,\"2449\":1,\"2455\":1,\"2456\":1,\"2458\":1,\"2459\":1,\"2460\":1,\"2461\":1,\"2462\":1,\"2463\":1,\"2468\":1,\"2471\":1,\"2472\":1,\"2473\":1,\"2474\":1,\"2475\":1,\"2479\":1,\"2480\":1,\"2491\":1,\"2492\":1,\"2493\":1,\"2494\":1,\"2495\":1,\"2496\":1,\"2497\":1,\"2498\":1,\"2500\":1,\"2502\":2,\"2507\":1,\"2508\":1,\"2522\":1,\"2523\":1,\"2524\":1,\"2526\":1,\"2527\":1,\"2528\":1,\"2529\":1,\"2530\":1,\"2531\":1,\"2532\":1,\"2534\":1,\"2536\":1,\"2538\":1,\"2539\":1,\"2540\":1,\"2541\":1,\"2542\":1,\"2543\":1,\"2544\":1,\"2548\":1,\"2549\":1,\"2550\":1,\"2551\":1,\"2552\":1,\"2554\":1,\"2555\":1,\"2556\":1,\"2557\":1,\"2558\":1,\"2559\":1,\"2560\":1,\"2561\":1,\"2562\":1,\"2569\":1,\"2570\":1,\"2572\":1,\"2574\":1,\"2575\":1,\"2586\":1,\"2597\":1,\"2598\":1,\"2599\":1,\"2600\":1,\"2601\":1,\"2602\":1,\"2603\":1,\"2604\":1,\"2605\":1,\"2606\":1,\"2607\":1,\"2608\":1,\"2609\":1,\"2610\":1,\"2611\":1,\"2612\":1,\"2613\":1,\"2615\":1,\"2616\":1,\"2618\":1,\"2619\":1,\"2620\":1,\"2621\":1,\"2622\":1,\"2623\":1,\"2624\":1,\"2625\":1,\"2626\":1,\"2627\":1,\"2628\":1,\"2629\":1,\"2630\":1,\"2640\":2}}],[\"兼容层定义了两个数据类\",{\"1\":{\"119\":1,\"629\":1,\"1144\":1}}],[\"兼容同步\",{\"1\":{\"0\":1,\"12\":1,\"24\":1}}],[\"更换默认的命名空间\",{\"1\":{\"1906\":1,\"2275\":1,\"2644\":1}}],[\"更佳\",{\"1\":{\"484\":1,\"999\":1,\"1514\":1}}],[\"更新\",{\"0\":{\"484\":1,\"999\":1,\"1514\":1}}],[\"更新事件触发权限\",{\"0\":{\"140\":1,\"650\":1,\"1165\":1}}],[\"更新事件响应器类型\",{\"0\":{\"139\":1,\"649\":1,\"1164\":1}}],[\"更新事件响应器类型和更新事件触发权限\",{\"1\":{\"138\":1,\"648\":1,\"1163\":1}}],[\"更深入地了解\",{\"1\":{\"432\":1,\"947\":1,\"1462\":1}}],[\"更自由\",{\"1\":{\"118\":1,\"628\":1,\"1143\":1}}],[\"更多通信交互方式可以参考以下适配器\",{\"1\":{\"473\":1,\"988\":1,\"1503\":1}}],[\"更多的使用方面的功能请参考apscheduler\",{\"1\":{\"452\":1,\"967\":1,\"1482\":1}}],[\"更多的基类抽象方法可以在使用适配器中查看\",{\"1\":{\"423\":1,\"938\":1,\"1453\":1}}],[\"更多日志处理器的使用方法请参考\",{\"1\":{\"420\":1,\"935\":1,\"1450\":1}}],[\"更多日志记录方法请参考\",{\"1\":{\"419\":1,\"934\":1,\"1449\":1}}],[\"更多示例参考argparse\",{\"1\":{\"365\":1,\"880\":1,\"1395\":1}}],[\"更多关于\",{\"1\":{\"100\":1,\"610\":1,\"1125\":1}}],[\"更多\",{\"0\":{\"51\":1,\"561\":1,\"1076\":1}}],[\"前缀中的正则会被转义\",{\"1\":{\"1894\":1,\"2263\":1,\"2632\":1}}],[\"前缀\",{\"1\":{\"1894\":1,\"2263\":1,\"2632\":1}}],[\"前往\",{\"1\":{\"447\":1,\"459\":1,\"962\":1,\"974\":1,\"1477\":1,\"1489\":1}}],[\"前往编辑\",{\"1\":{\"11\":1,\"23\":1,\"35\":1}}],[\"前者可以在各种服务端型驱动器下运行\",{\"1\":{\"118\":1,\"628\":1,\"1143\":1}}],[\"直接修改默认配置\",{\"1\":{\"1906\":1,\"2275\":1,\"2644\":1}}],[\"直接构造\",{\"0\":{\"536\":1,\"1051\":1,\"1566\":1}}],[\"直接调用\",{\"1\":{\"496\":1,\"1011\":1,\"1526\":1}}],[\"直接向\",{\"1\":{\"118\":1,\"628\":1,\"1143\":1}}],[\"直接使用\",{\"1\":{\"116\":1,\"626\":1,\"1141\":1}}],[\"直接使用辅助函数新建一个响应器\",{\"1\":{\"100\":1,\"610\":1,\"1125\":1}}],[\"详情参考\",{\"1\":{\"1677\":1,\"2046\":1,\"2415\":1}}],[\"详情请参考拼接消息\",{\"1\":{\"537\":1,\"1052\":1,\"1567\":1}}],[\"详情请阅读最佳实践中的\",{\"1\":{\"108\":1,\"618\":1,\"1133\":1}}],[\"详情见\",{\"1\":{\"162\":1,\"672\":1,\"1187\":1}}],[\"详情可以参考选择驱动器\",{\"1\":{\"118\":1,\"628\":1,\"1143\":1}}],[\"接下来\",{\"1\":{\"1930\":1,\"2299\":1,\"2668\":1}}],[\"接受\",{\"1\":{\"1744\":1,\"2122\":1,\"2491\":1}}],[\"接口\",{\"1\":{\"492\":1,\"493\":1,\"1007\":1,\"1008\":1,\"1522\":1,\"1523\":1,\"1582\":1,\"1963\":1,\"2332\":1}}],[\"接口标准\",{\"0\":{\"491\":1,\"1006\":1,\"1521\":1}}],[\"接口也转型且改名为\",{\"1\":{\"484\":1,\"999\":1,\"1514\":1}}],[\"接口地址\",{\"1\":{\"476\":1,\"991\":1,\"1506\":1}}],[\"接口等功能\",{\"1\":{\"118\":1,\"628\":1,\"1143\":1}}],[\"接收一条\",{\"1\":{\"1746\":1,\"1747\":1,\"1748\":1,\"2124\":1,\"2125\":1,\"2126\":1,\"2493\":1,\"2494\":1,\"2495\":1}}],[\"接收并返回结果\",{\"1\":{\"476\":1,\"991\":1,\"1506\":1}}],[\"接收到的事件数据\",{\"1\":{\"475\":1,\"990\":1,\"1505\":1}}],[\"接收到新的事件时运行\",{\"1\":{\"132\":1,\"642\":1,\"1157\":1}}],[\"接收的方法\",{\"1\":{\"473\":1,\"988\":1,\"1503\":1}}],[\"接收的消息不符合预期\",{\"1\":{\"255\":1,\"256\":1,\"257\":1,\"768\":1,\"769\":1,\"770\":1,\"1283\":1,\"1284\":1,\"1285\":1}}],[\"接收\",{\"1\":{\"53\":1,\"563\":1,\"1078\":1}}],[\"接收事件是指将驱动器收到的事件消息转换为\",{\"1\":{\"37\":1,\"547\":1,\"1062\":1}}],[\"从全局配置获取当前插件需要的配置项\",{\"1\":{\"1814\":1,\"2183\":1,\"2552\":1}}],[\"从字典数组构造\",{\"0\":{\"538\":1,\"1053\":1,\"1568\":1}}],[\"从而提升用户体验并有助于\",{\"1\":{\"505\":1,\"1020\":1,\"1535\":1}}],[\"从而方便其他开发者们使用对应语言快速编写具体的\",{\"1\":{\"493\":1,\"1008\":1,\"1523\":1}}],[\"从而方便其他开发者们使用\",{\"1\":{\"492\":1,\"1007\":1,\"1522\":1}}],[\"从而实现自定义的\",{\"1\":{\"118\":1,\"628\":1,\"1143\":1}}],[\"从事件中获取会话\",{\"1\":{\"331\":1,\"849\":1,\"1364\":1}}],[\"从该文件读取配置\",{\"1\":{\"224\":1,\"736\":1,\"1251\":1}}],[\"从默认的\",{\"1\":{\"64\":1,\"574\":1,\"1089\":1}}],[\"会通过\",{\"1\":{\"1941\":1,\"2310\":1,\"2679\":1}}],[\"会根据传入的\",{\"1\":{\"1902\":1,\"2271\":1,\"2640\":1}}],[\"会返回由\",{\"1\":{\"1902\":1,\"2271\":1,\"2640\":1}}],[\"会返回\",{\"1\":{\"1897\":2,\"2266\":2,\"2635\":2}}],[\"会自动为模型生成一个表名\",{\"1\":{\"2685\":1,\"2700\":1,\"2715\":1}}],[\"会自动将默认值变成\",{\"1\":{\"1901\":1,\"2270\":1,\"2639\":1}}],[\"会自动将默认值变成列表\",{\"1\":{\"1901\":1,\"2270\":1,\"2639\":1}}],[\"会自动将默认值设为\",{\"1\":{\"1897\":1,\"2266\":1,\"2635\":1}}],[\"会自动检测入口文件\",{\"1\":{\"510\":1,\"1025\":1,\"1540\":1}}],[\"会将\",{\"1\":{\"1894\":1,\"2263\":1,\"2632\":1}}],[\"会将命令头匹配到的值转为对应的类型\",{\"1\":{\"1894\":1,\"2263\":1,\"2632\":1}}],[\"会将消息转换为消息序列\",{\"1\":{\"534\":1,\"1049\":1,\"1564\":1}}],[\"会匹配任意的值\",{\"1\":{\"1897\":1,\"2266\":1,\"2635\":1}}],[\"会匹配\",{\"1\":{\"1894\":1,\"2263\":1,\"2632\":1}}],[\"会转为\",{\"1\":{\"1894\":1,\"2263\":1,\"2632\":1}}],[\"会在无参数匹配时跳过\",{\"1\":{\"1896\":1,\"2265\":1,\"2634\":1}}],[\"会在\",{\"1\":{\"515\":1,\"1030\":1,\"1545\":1}}],[\"会在导入时对这些模块做一些特殊的处理使得他们成为一个插件\",{\"1\":{\"512\":1,\"1027\":1,\"1542\":1}}],[\"会在加载当前插件时\",{\"1\":{\"117\":1,\"627\":1,\"1142\":1}}],[\"会并发调用所有\",{\"1\":{\"429\":1,\"944\":1,\"1459\":1}}],[\"会忽略\",{\"1\":{\"428\":1,\"943\":1,\"1458\":1}}],[\"会话已经关闭了\",{\"1\":{\"2687\":1,\"2702\":1,\"2717\":1}}],[\"会话中的相应模型实例\",{\"1\":{\"2687\":1,\"2702\":1,\"2717\":1}}],[\"会话和模型实例存储在\",{\"1\":{\"2687\":1,\"2702\":1,\"2717\":1}}],[\"会话的生命周期中可能包含多个事件\",{\"1\":{\"2687\":1,\"2702\":1,\"2717\":1}}],[\"会话产生的模型实例\",{\"1\":{\"2687\":1,\"2702\":1,\"2717\":1}}],[\"会话管理\",{\"0\":{\"2687\":1,\"2702\":1,\"2717\":1}}],[\"会话\",{\"1\":{\"330\":1,\"848\":1,\"1363\":1,\"1760\":1,\"2111\":1,\"2480\":1,\"2687\":3,\"2702\":3,\"2717\":3}}],[\"会话白名单\",{\"1\":{\"329\":1,\"332\":1,\"844\":1,\"850\":1,\"1359\":1,\"1365\":1}}],[\"会话权限更新函数\",{\"1\":{\"247\":1,\"760\":1,\"1275\":1}}],[\"会话通常是由机器人与用户进行的一对一交互\",{\"1\":{\"140\":1,\"650\":1,\"1165\":1}}],[\"会话过程中\",{\"1\":{\"138\":1,\"648\":1,\"1163\":1}}],[\"会话更新分为两部分\",{\"1\":{\"138\":1,\"648\":1,\"1163\":1}}],[\"会话更新\",{\"0\":{\"138\":1,\"648\":1,\"1163\":1}}],[\"会话状态中\",{\"1\":{\"2687\":1,\"2702\":1,\"2717\":1}}],[\"会话状态还可以用于发送动态消息\",{\"1\":{\"431\":1,\"946\":1,\"1461\":1}}],[\"会话状态的生命周期与事件处理流程相同\",{\"1\":{\"431\":1,\"946\":1,\"1461\":1}}],[\"会话状态会持续到整个事件响应流程结束\",{\"1\":{\"138\":1,\"648\":1,\"1163\":1}}],[\"会话状态\",{\"0\":{\"431\":1,\"946\":1,\"1461\":1},\"1\":{\"132\":1,\"133\":1,\"134\":1,\"135\":1,\"292\":1,\"642\":1,\"643\":1,\"644\":1,\"645\":1,\"804\":1,\"1157\":1,\"1158\":1,\"1159\":1,\"1160\":1,\"1319\":1}}],[\"会使\",{\"1\":{\"132\":1,\"642\":1,\"1157\":1}}],[\"会尝试优先加载依赖的插件\",{\"1\":{\"117\":1,\"627\":1,\"1142\":1}}],[\"会正确识别这些插件的父子关系\",{\"1\":{\"114\":1,\"624\":1,\"1139\":1}}],[\"外\",{\"1\":{\"428\":1,\"943\":1,\"1458\":1}}],[\"外部插件之前\",{\"1\":{\"116\":1,\"626\":1,\"1141\":1}}],[\"外的其他消息段\",{\"1\":{\"108\":1,\"618\":1,\"1133\":1}}],[\"简单来说\",{\"1\":{\"116\":1,\"424\":1,\"533\":1,\"626\":1,\"939\":1,\"1048\":1,\"1141\":1,\"1454\":1,\"1563\":1}}],[\"此处提到的\",{\"1\":{\"2687\":1,\"2702\":1,\"2717\":1}}],[\"此处为全大写字母的\",{\"1\":{\"140\":1,\"650\":1,\"1165\":1}}],[\"此函数是\",{\"1\":{\"222\":1,\"734\":1,\"1249\":1}}],[\"此时我们不在乎数据安全\",{\"1\":{\"2686\":1,\"2701\":1,\"2716\":1}}],[\"此时配置会自动注入上下文内创建的命令\",{\"1\":{\"1905\":1,\"2274\":1,\"2643\":1}}],[\"此时会使用\",{\"1\":{\"1897\":1,\"2266\":1,\"2635\":1}}],[\"此时会将传入的值尝试转为\",{\"1\":{\"1894\":1,\"2263\":1,\"2632\":1}}],[\"此时的消息将会是平台特定的\",{\"1\":{\"545\":1,\"1060\":1,\"1575\":1}}],[\"此时\",{\"1\":{\"116\":1,\"626\":1,\"1141\":1}}],[\"此外\",{\"1\":{\"99\":1,\"499\":1,\"543\":1,\"609\":1,\"1014\":1,\"1058\":1,\"1124\":1,\"1529\":1,\"1573\":1}}],[\"也不现实\",{\"1\":{\"2697\":1,\"2712\":1,\"2727\":1}}],[\"也要注意会话作用域问题\",{\"1\":{\"2687\":1,\"2702\":1,\"2717\":1}}],[\"也就是说\",{\"1\":{\"2686\":1,\"2701\":1,\"2716\":1}}],[\"也是同样可以切换到\",{\"1\":{\"1905\":1,\"2274\":1,\"2643\":1}}],[\"也有可能是多种类型的组合等等\",{\"1\":{\"530\":1,\"1045\":1,\"1560\":1}}],[\"也有\",{\"1\":{\"476\":1,\"991\":1,\"1506\":1}}],[\"也无法通过事件响应器对象的方法进行任何操作\",{\"1\":{\"454\":1,\"969\":1,\"1484\":1}}],[\"也会使\",{\"1\":{\"134\":1,\"644\":1,\"1159\":1}}],[\"也称作\",{\"1\":{\"125\":1,\"635\":1,\"1150\":1}}],[\"也能正确跟踪插件\",{\"1\":{\"116\":1,\"626\":1,\"1141\":1}}],[\"也可能是由于用户输入错误\",{\"1\":{\"444\":1,\"959\":1,\"1474\":1}}],[\"也可用于快速创建各适配器下的消息段\",{\"1\":{\"108\":1,\"618\":1,\"1133\":1}}],[\"也可以是\",{\"1\":{\"1933\":1,\"2302\":1,\"2671\":1}}],[\"也可以如\",{\"1\":{\"1913\":1,\"2282\":1,\"2651\":1}}],[\"也可以传入\",{\"1\":{\"1898\":1,\"2267\":1,\"2636\":1}}],[\"也可以传入自定义的\",{\"1\":{\"224\":1,\"736\":1,\"1251\":1}}],[\"也可以使用\",{\"1\":{\"535\":1,\"539\":1,\"1050\":1,\"1054\":1,\"1565\":1,\"1569\":1}}],[\"也可以手动新建空白文件\",{\"1\":{\"515\":1,\"1030\":1,\"1545\":1}}],[\"也可以阅读本章节\",{\"1\":{\"506\":1,\"1021\":1,\"1536\":1}}],[\"也可以尝试转为基础\",{\"1\":{\"475\":1,\"990\":1,\"1505\":1}}],[\"也可以在子插件信息中看到它们的父插件信息\",{\"1\":{\"114\":1,\"624\":1,\"1139\":1}}],[\"也可以通过插件索引名称获取插件对象\",{\"1\":{\"111\":1,\"621\":1,\"1136\":1}}],[\"也可以直接使用辅助函数新建一个响应器\",{\"1\":{\"95\":1,\"96\":1,\"97\":1,\"98\":1,\"99\":1,\"101\":1,\"605\":1,\"606\":1,\"607\":1,\"608\":1,\"609\":1,\"611\":1,\"1120\":1,\"1121\":1,\"1122\":1,\"1123\":1,\"1124\":1,\"1126\":1}}],[\"也可以挂载其他\",{\"1\":{\"58\":1,\"568\":1,\"1083\":1}}],[\"由插件编写者提供\",{\"1\":{\"1839\":1,\"2208\":1,\"2577\":1}}],[\"由\",{\"1\":{\"545\":1,\"1060\":1,\"1575\":1}}],[\"由字典数组构造消息序列\",{\"1\":{\"538\":1,\"1053\":1,\"1568\":1}}],[\"由字典构造消息段\",{\"1\":{\"538\":1,\"1053\":1,\"1568\":1}}],[\"由浅入深\",{\"1\":{\"497\":1,\"1012\":1,\"1527\":1}}],[\"由中国科学院软件研究所与\",{\"1\":{\"494\":1,\"498\":1,\"1009\":1,\"1013\":1,\"1524\":1,\"1528\":1}}],[\"由协议适配器生成\",{\"1\":{\"140\":1,\"650\":1,\"1165\":1}}],[\"由于消息中存在各种类型的消息段\",{\"1\":{\"539\":1,\"1054\":1,\"1569\":1}}],[\"由于消息序列是\",{\"1\":{\"534\":1,\"1049\":1,\"1564\":1}}],[\"由于消息序列的本质是由若干消息段所组成的序列\",{\"1\":{\"533\":1,\"1048\":1,\"1563\":1}}],[\"由于消息序列继承自\",{\"1\":{\"532\":1,\"1047\":1,\"1562\":1}}],[\"由于相关依赖版本迭代迅速\",{\"1\":{\"503\":1,\"1018\":1,\"1533\":1}}],[\"由于这些插件已经被声明\",{\"1\":{\"116\":1,\"626\":1,\"1141\":1}}],[\"由于\",{\"1\":{\"116\":1,\"453\":1,\"454\":1,\"484\":1,\"626\":1,\"968\":1,\"969\":1,\"999\":1,\"1141\":1,\"1483\":1,\"1484\":1,\"1514\":1}}],[\"由适配器实现的判断\",{\"1\":{\"50\":1,\"560\":1,\"1075\":1}}],[\"由适配器填写\",{\"1\":{\"40\":1,\"550\":1,\"1065\":1}}],[\"定时更新的同时提供统计数据\",{\"1\":{\"504\":1,\"1019\":1,\"1534\":1}}],[\"定时更新中需要插件测试环境隔离\",{\"1\":{\"504\":1,\"1019\":1,\"1534\":1}}],[\"定时自动更新\",{\"1\":{\"504\":1,\"1019\":1,\"1534\":1}}],[\"定时任务作为一个额外功能\",{\"1\":{\"450\":1,\"965\":1,\"1480\":1}}],[\"定时任务\",{\"0\":{\"450\":1,\"965\":1,\"1480\":1},\"1\":{\"497\":1,\"505\":1,\"1012\":1,\"1020\":1,\"1527\":1,\"1535\":1}}],[\"定时任务插件\",{\"1\":{\"115\":1,\"625\":1,\"1140\":1}}],[\"定义消息事件\",{\"1\":{\"497\":1,\"1012\":1,\"1527\":1}}],[\"定义关闭时的操作\",{\"1\":{\"472\":1,\"987\":1,\"1502\":1}}],[\"定义启动时的操作\",{\"1\":{\"472\":1,\"987\":1,\"1502\":1}}],[\"定义了一系列兼容函数与类供使用\",{\"1\":{\"141\":1,\"651\":1,\"1166\":1}}],[\"定义中是否包含适配器路由的\",{\"1\":{\"63\":1,\"573\":1,\"1088\":1}}],[\"定义\",{\"1\":{\"60\":1,\"570\":1,\"1085\":1}}],[\"定义地址\",{\"1\":{\"60\":1,\"570\":1,\"1085\":1}}],[\"定义的事件模型\",{\"1\":{\"37\":1,\"547\":1,\"1062\":1}}],[\"跨插件访问\",{\"0\":{\"115\":1,\"625\":1,\"1140\":1},\"1\":{\"435\":1,\"453\":1,\"497\":1,\"950\":1,\"968\":1,\"1012\":1,\"1465\":1,\"1483\":1,\"1527\":1}}],[\"跨平台\",{\"1\":{\"0\":1,\"12\":1,\"24\":1}}],[\"join\",{\"1\":{\"544\":2,\"1059\":2,\"1574\":2,\"2688\":2,\"2703\":2,\"2718\":2}}],[\"joinroomevent\",{\"1\":{\"478\":1,\"993\":1,\"1508\":1}}],[\"joinpath\",{\"1\":{\"114\":1,\"624\":1,\"1139\":1}}],[\"jobs\",{\"1\":{\"2697\":2,\"2712\":2,\"2727\":2}}],[\"job\",{\"1\":{\"454\":5,\"969\":5,\"1484\":5}}],[\"json=\",{\"1\":{\"1941\":1,\"2310\":1,\"2679\":1}}],[\"json=platform\",{\"1\":{\"476\":1,\"991\":1,\"1506\":1}}],[\"jsonencoder\",{\"1\":{\"415\":1,\"930\":1,\"1445\":1}}],[\"json\",{\"1\":{\"60\":2,\"63\":1,\"160\":1,\"162\":1,\"165\":1,\"216\":2,\"508\":1,\"520\":6,\"570\":2,\"573\":1,\"670\":1,\"672\":1,\"675\":1,\"728\":2,\"1023\":1,\"1035\":6,\"1085\":2,\"1088\":1,\"1185\":1,\"1187\":1,\"1190\":1,\"1243\":2,\"1538\":1,\"1550\":6,\"1678\":1,\"1735\":1,\"1809\":2,\"1819\":5,\"1941\":1,\"1942\":2,\"2047\":1,\"2116\":1,\"2178\":2,\"2188\":5,\"2310\":1,\"2311\":2,\"2416\":1,\"2485\":1,\"2547\":2,\"2557\":5,\"2679\":1,\"2680\":2}}],[\"想要在其中嵌套加载子插件\",{\"1\":{\"114\":1,\"624\":1,\"1139\":1}}],[\"you\",{\"1\":{\"1911\":1,\"2280\":1,\"2649\":1}}],[\"your\",{\"1\":{\"468\":1,\"470\":1,\"472\":1,\"473\":2,\"475\":1,\"476\":2,\"477\":1,\"517\":2,\"518\":1,\"519\":2,\"520\":2,\"521\":2,\"983\":1,\"985\":1,\"987\":1,\"988\":2,\"990\":1,\"991\":2,\"992\":1,\"1032\":2,\"1033\":1,\"1034\":2,\"1035\":2,\"1036\":2,\"1498\":1,\"1500\":1,\"1502\":1,\"1503\":2,\"1505\":1,\"1506\":2,\"1507\":1,\"1547\":2,\"1548\":1,\"1549\":2,\"1550\":2,\"1551\":2,\"1816\":2,\"2185\":2,\"2554\":2}}],[\"yanyongyu\",{\"1\":{\"487\":1,\"488\":1,\"489\":1,\"495\":1,\"501\":1,\"503\":1,\"1002\":1,\"1003\":1,\"1004\":1,\"1010\":1,\"1016\":1,\"1018\":1,\"1517\":1,\"1518\":1,\"1519\":1,\"1525\":1,\"1531\":1,\"1533\":1}}],[\"y>\",{\"1\":{\"476\":1,\"991\":1,\"1506\":1}}],[\"yield\",{\"1\":{\"297\":1,\"815\":1,\"1330\":1}}],[\"y\",{\"1\":{\"113\":2,\"423\":1,\"515\":1,\"623\":2,\"938\":1,\"1030\":1,\"1138\":2,\"1453\":1,\"1545\":1,\"1897\":5,\"2266\":5,\"2635\":5}}],[\"$extra\",{\"1\":{\"1903\":1,\"2272\":1,\"2641\":1}}],[\"$xdg\",{\"1\":{\"439\":1,\"954\":1,\"1469\":1}}],[\"$\",{\"1\":{\"113\":1,\"515\":1,\"623\":1,\"1030\":1,\"1138\":1,\"1545\":1,\"1903\":1,\"1914\":3,\"1922\":1,\"2272\":1,\"2283\":3,\"2291\":1,\"2641\":1,\"2652\":3,\"2660\":1,\"2686\":1,\"2697\":8,\"2701\":1,\"2712\":8,\"2716\":1,\"2727\":8}}],[\"嵌套插件\",{\"0\":{\"112\":1,\"622\":1,\"1137\":1}}],[\"请勿修改\",{\"1\":{\"2686\":1,\"2701\":1,\"2716\":1}}],[\"请勿在插件被加载前\",{\"1\":{\"516\":1,\"1031\":1,\"1546\":1}}],[\"请只配置必要的选项\",{\"1\":{\"1939\":1,\"2308\":1,\"2677\":1}}],[\"请使用\",{\"1\":{\"1755\":1,\"1756\":1,\"1860\":1,\"1861\":1,\"2107\":1,\"2118\":1,\"2229\":1,\"2230\":1,\"2476\":1,\"2487\":1,\"2598\":1,\"2599\":1}}],[\"请先激活虚拟环境\",{\"1\":{\"510\":1,\"1025\":1,\"1540\":1}}],[\"请优先考虑使用\",{\"1\":{\"506\":1,\"1021\":1,\"1536\":1}}],[\"请查看该活动的\",{\"1\":{\"482\":1,\"494\":1,\"498\":1,\"502\":1,\"997\":1,\"1009\":1,\"1013\":1,\"1017\":1,\"1512\":1,\"1524\":1,\"1528\":1,\"1532\":1}}],[\"请在\",{\"1\":{\"480\":1,\"995\":1,\"1510\":1}}],[\"请参阅\",{\"1\":{\"461\":1,\"462\":1,\"976\":1,\"977\":1,\"1491\":1,\"1492\":1}}],[\"请参考对应\",{\"1\":{\"252\":1,\"253\":1,\"254\":1,\"255\":1,\"256\":1,\"257\":1,\"765\":1,\"766\":1,\"767\":1,\"768\":1,\"769\":1,\"770\":1,\"1280\":1,\"1281\":1,\"1282\":1,\"1283\":1,\"1284\":1,\"1285\":1}}],[\"请参考\",{\"1\":{\"226\":1,\"738\":1,\"1253\":1}}],[\"请不要将事件处理依赖的特殊语法用于定时任务\",{\"1\":{\"454\":1,\"969\":1,\"1484\":1}}],[\"请重新输入\",{\"1\":{\"431\":1,\"946\":1,\"1461\":1}}],[\"请输入\",{\"1\":{\"431\":1,\"946\":1,\"1461\":1}}],[\"请输入密码\",{\"1\":{\"431\":1,\"946\":1,\"1461\":1}}],[\"请输入地名\",{\"1\":{\"423\":1,\"938\":1,\"1453\":1,\"2687\":1,\"2702\":1,\"2717\":1}}],[\"请注意区分插件的项目名\",{\"1\":{\"1926\":1,\"2295\":1,\"2664\":1}}],[\"请注意转义\",{\"1\":{\"478\":1,\"993\":1,\"1508\":1}}],[\"请注意\",{\"1\":{\"110\":1,\"140\":1,\"516\":1,\"517\":1,\"518\":1,\"620\":1,\"650\":1,\"1031\":1,\"1032\":1,\"1033\":1,\"1135\":1,\"1165\":1,\"1546\":1,\"1547\":1,\"1548\":1}}],[\"请求头\",{\"1\":{\"476\":1,\"991\":1,\"1506\":1}}],[\"请求的方式\",{\"1\":{\"476\":1,\"991\":1,\"1506\":1}}],[\"请求成功返回数据\",{\"1\":{\"212\":1,\"724\":1,\"1239\":1}}],[\"请求无返回或返回状态非正常等\",{\"1\":{\"211\":1,\"723\":1,\"1238\":1}}],[\"请求地址不正确\",{\"1\":{\"211\":1,\"723\":1,\"1238\":1}}],[\"请求超时时间\",{\"1\":{\"170\":1,\"680\":1,\"1195\":1}}],[\"请求方法\",{\"1\":{\"120\":1,\"476\":1,\"630\":1,\"991\":1,\"1145\":1,\"1506\":1}}],[\"请求处理的回调函数\",{\"1\":{\"53\":1,\"563\":1,\"1078\":1}}],[\"请求\",{\"1\":{\"53\":1,\"78\":1,\"79\":1,\"86\":1,\"476\":1,\"563\":1,\"588\":1,\"589\":1,\"596\":1,\"991\":1,\"1078\":1,\"1103\":1,\"1104\":1,\"1111\":1,\"1506\":1,\"1759\":1,\"1941\":2,\"2110\":1,\"2310\":2,\"2479\":1,\"2679\":2}}],[\"一一对应\",{\"1\":{\"2686\":1,\"2701\":1,\"2716\":1}}],[\"一样直接标明参数名称和类型\",{\"1\":{\"1913\":1,\"2282\":1,\"2651\":1}}],[\"一般情况下\",{\"1\":{\"2686\":1,\"2701\":1,\"2716\":1}}],[\"一般情况下你可以通过\",{\"1\":{\"1907\":1,\"2276\":1,\"2645\":1}}],[\"一般为插件模块名\",{\"1\":{\"1937\":1,\"2306\":1,\"2675\":1,\"2686\":1,\"2701\":1,\"2716\":1}}],[\"一般为参数的类型\",{\"1\":{\"1895\":1,\"2264\":1,\"2633\":1}}],[\"一般一个分支对应一个插件\",{\"1\":{\"1931\":1,\"2300\":1,\"2669\":1}}],[\"一段指定顺序的字符串列表\",{\"1\":{\"1900\":1,\"2269\":1,\"2638\":1}}],[\"一段语音\",{\"1\":{\"530\":1,\"1045\":1,\"1560\":1}}],[\"一定是字符串\",{\"1\":{\"1895\":1,\"2264\":1,\"2633\":1}}],[\"一串消息\",{\"1\":{\"532\":1,\"1047\":1,\"1562\":1}}],[\"一篇富文本文章\",{\"1\":{\"530\":1,\"1045\":1,\"1560\":1}}],[\"一张图片\",{\"1\":{\"530\":1,\"1045\":1,\"1560\":1}}],[\"一条消息可能会有承载有各种不同的表现形式\",{\"1\":{\"530\":1,\"1045\":1,\"1560\":1}}],[\"一套自动化的测试机制是非常重要的\",{\"1\":{\"487\":1,\"1002\":1,\"1517\":1}}],[\"一些有关\",{\"1\":{\"477\":1,\"992\":1,\"1507\":1}}],[\"一些使用了\",{\"1\":{\"64\":1,\"574\":1,\"1089\":1}}],[\"一节进行了解\",{\"1\":{\"435\":1,\"453\":1,\"950\":1,\"968\":1,\"1465\":1,\"1483\":1}}],[\"一致时触发\",{\"1\":{\"242\":1,\"755\":1,\"1270\":1}}],[\"一个\",{\"1\":{\"2696\":1,\"2711\":1,\"2726\":1}}],[\"一个地方只会有一种天气\",{\"1\":{\"2685\":1,\"2700\":1,\"2715\":1}}],[\"一个包含\",{\"1\":{\"514\":1,\"1029\":1,\"1544\":1}}],[\"一个普通的\",{\"1\":{\"513\":1,\"1028\":1,\"1543\":1}}],[\"一个机器人项目的最小实例中至少需要包含以下内容\",{\"1\":{\"506\":1,\"1021\":1,\"1536\":1}}],[\"一个用于检查用户是否在黑名单中\",{\"1\":{\"427\":1,\"942\":1,\"1457\":1}}],[\"一个用于检查插件是否启用\",{\"1\":{\"427\":1,\"942\":1,\"1457\":1}}],[\"一个用于包装\",{\"1\":{\"406\":1,\"407\":1,\"921\":1,\"922\":1,\"1436\":1,\"1437\":1}}],[\"一个以\",{\"1\":{\"223\":1,\"735\":1,\"1250\":1}}],[\"一个字典\",{\"1\":{\"110\":1,\"620\":1,\"1135\":1}}],[\"向机器人用户提供功能\",{\"1\":{\"110\":1,\"620\":1,\"1135\":1}}],[\"除外\",{\"1\":{\"2695\":1,\"2710\":1,\"2725\":1}}],[\"除非你知道自己在做什么\",{\"1\":{\"2687\":1,\"2702\":1,\"2717\":1}}],[\"除主参数外的其他解析结果\",{\"1\":{\"1902\":1,\"2271\":1,\"2640\":1}}],[\"除\",{\"1\":{\"525\":1,\"1040\":1,\"1555\":1}}],[\"除此之外\",{\"1\":{\"110\":1,\"620\":1,\"1135\":1,\"1909\":1,\"2278\":1,\"2647\":1}}],[\"除了通过传入\",{\"1\":{\"1894\":1,\"2263\":1,\"2632\":1}}],[\"除了在事件响应器中使用响应规则外\",{\"1\":{\"429\":1,\"944\":1,\"1459\":1}}],[\"除了使用数据库等第三方存储之外\",{\"1\":{\"433\":1,\"948\":1,\"1463\":1}}],[\"除了使用\",{\"1\":{\"428\":1,\"943\":1,\"1458\":1}}],[\"除了\",{\"1\":{\"93\":1,\"165\":1,\"603\":1,\"675\":1,\"1118\":1,\"1190\":1}}],[\"└──\",{\"1\":{\"110\":4,\"195\":6,\"465\":2,\"513\":1,\"514\":2,\"515\":8,\"620\":4,\"707\":6,\"980\":2,\"1028\":1,\"1029\":2,\"1030\":8,\"1135\":4,\"1222\":6,\"1495\":2,\"1543\":1,\"1544\":2,\"1545\":8,\"2686\":2,\"2701\":2,\"2716\":2}}],[\"│\",{\"1\":{\"110\":1,\"465\":21,\"515\":3,\"620\":1,\"980\":21,\"1030\":3,\"1135\":1,\"1495\":21,\"1545\":3}}],[\"📜\",{\"1\":{\"110\":4,\"465\":8,\"513\":1,\"514\":1,\"515\":7,\"620\":4,\"980\":8,\"1028\":1,\"1029\":1,\"1030\":7,\"1135\":4,\"1495\":8,\"1543\":1,\"1544\":1,\"1545\":7}}],[\"📂\",{\"1\":{\"110\":3,\"465\":3,\"513\":1,\"514\":2,\"515\":7,\"620\":3,\"980\":3,\"1028\":1,\"1029\":2,\"1030\":7,\"1135\":3,\"1495\":3,\"1543\":1,\"1544\":2,\"1545\":7}}],[\"📦\",{\"1\":{\"110\":1,\"465\":1,\"515\":3,\"620\":1,\"980\":1,\"1030\":3,\"1135\":1,\"1495\":1,\"1545\":3}}],[\"├──\",{\"1\":{\"110\":3,\"195\":12,\"465\":9,\"515\":6,\"620\":3,\"707\":12,\"980\":9,\"1030\":6,\"1135\":3,\"1222\":12,\"1495\":9,\"1545\":6,\"2686\":2,\"2701\":2,\"2716\":2}}],[\"假设我们有一个插件\",{\"1\":{\"110\":1,\"117\":1,\"620\":1,\"627\":1,\"1135\":1,\"1142\":1}}],[\"现在可以开始使用数据库了\",{\"1\":{\"2687\":1,\"2702\":1,\"2717\":1}}],[\"现在启动机器人试试吧\",{\"1\":{\"2686\":1,\"2701\":1,\"2716\":1}}],[\"现在我们来实现他的功能\",{\"1\":{\"528\":1,\"1043\":1,\"1558\":1}}],[\"现在你可以选择\",{\"1\":{\"432\":1,\"947\":1,\"1462\":1}}],[\"现在\",{\"1\":{\"110\":1,\"620\":1,\"1135\":1,\"2686\":2,\"2701\":2,\"2716\":2}}],[\"而且\",{\"1\":{\"2697\":1,\"2712\":1,\"2727\":1}}],[\"而且代码不清晰\",{\"1\":{\"2695\":1,\"2710\":1,\"2725\":1}}],[\"而且不利于日志的归档\",{\"1\":{\"418\":1,\"933\":1,\"1448\":1}}],[\"而应该在事件响应器结束前提交事务\",{\"1\":{\"2687\":1,\"2702\":1,\"2717\":1}}],[\"而是由\",{\"1\":{\"2686\":1,\"2701\":1,\"2716\":1}}],[\"而是一个消息序列的字符串表示\",{\"1\":{\"539\":1,\"1054\":1,\"1569\":1}}],[\"而不是\",{\"1\":{\"2685\":1,\"2700\":1,\"2715\":1}}],[\"而不同地方可能有相同的天气\",{\"1\":{\"2685\":1,\"2700\":1,\"2715\":1}}],[\"而其他插件使用默认的\",{\"1\":{\"1937\":1,\"2306\":1,\"2675\":1}}],[\"而\",{\"1\":{\"1895\":1,\"2264\":1,\"2633\":1}}],[\"而消息段则是组成自然段的一句话\",{\"1\":{\"533\":1,\"1048\":1,\"1563\":1}}],[\"而无需关心\",{\"1\":{\"492\":1,\"493\":1,\"1007\":1,\"1008\":1,\"1522\":1,\"1523\":1}}],[\"而在使用时\",{\"1\":{\"428\":1,\"943\":1,\"1458\":1}}],[\"而插件使用者或者机器人用户想要看到的是插件使用方法等帮助信息\",{\"1\":{\"110\":1,\"620\":1,\"1135\":1}}],[\"而非直接使用会话状态中的模型实例\",{\"1\":{\"2687\":1,\"2702\":1,\"2717\":1}}],[\"而非\",{\"1\":{\"101\":1,\"367\":2,\"467\":1,\"611\":1,\"882\":2,\"982\":1,\"1126\":1,\"1397\":2,\"1497\":1,\"2687\":1,\"2702\":1,\"2717\":1}}],[\"章节\",{\"1\":{\"108\":1,\"618\":1,\"1133\":1}}],[\"实际上\",{\"1\":{\"2686\":1,\"2701\":1,\"2716\":1}}],[\"实际应用测试时\",{\"1\":{\"1941\":1,\"1942\":1,\"2310\":1,\"2311\":1,\"2679\":1,\"2680\":1}}],[\"实际的命令名\",{\"1\":{\"174\":1,\"684\":1,\"1199\":1}}],[\"实现相应\",{\"1\":{\"499\":1,\"1014\":1,\"1529\":1}}],[\"实现相应适配器\",{\"1\":{\"496\":1,\"1011\":1,\"1526\":1}}],[\"实现更多附加特性\",{\"1\":{\"493\":1,\"1008\":1,\"1523\":1}}],[\"实现自选语言版\",{\"0\":{\"493\":1,\"1008\":1,\"1523\":1}}],[\"实现第一手\",{\"1\":{\"492\":1,\"493\":1,\"1007\":1,\"1008\":1,\"1522\":1,\"1523\":1}}],[\"实现的开发者\",{\"1\":{\"492\":1,\"493\":1,\"1007\":1,\"1008\":1,\"1522\":1,\"1523\":1}}],[\"实现的开发者只需编写针对特定聊天平台的对接代码\",{\"1\":{\"492\":1,\"493\":1,\"1007\":1,\"1008\":1,\"1522\":1,\"1523\":1}}],[\"实现所有\",{\"1\":{\"492\":1,\"493\":1,\"1007\":1,\"1008\":1,\"1522\":1,\"1523\":1}}],[\"实现所共享的功能\",{\"1\":{\"492\":2,\"493\":2,\"1007\":2,\"1008\":2,\"1522\":2,\"1523\":2}}],[\"实现包括\",{\"1\":{\"492\":1,\"493\":1,\"1007\":1,\"1008\":1,\"1522\":1,\"1523\":1}}],[\"实现\",{\"0\":{\"492\":1,\"1007\":1,\"1522\":1},\"1\":{\"487\":1,\"492\":2,\"493\":2,\"505\":2,\"1002\":1,\"1007\":2,\"1008\":2,\"1020\":2,\"1517\":1,\"1522\":2,\"1523\":2,\"1535\":2}}],[\"实现从字符串中构造消息数组\",{\"1\":{\"479\":1,\"994\":1,\"1509\":1}}],[\"实现方式具体可以参考以下适配器\",{\"1\":{\"476\":1,\"991\":1,\"1506\":1}}],[\"实现了常用字典操作\",{\"1\":{\"274\":1,\"786\":1,\"1301\":1}}],[\"实现了跨平台接收和发送消息的功能\",{\"1\":{\"108\":1,\"618\":1,\"1133\":1}}],[\"实例的字典\",{\"1\":{\"1937\":1,\"2306\":1,\"2675\":1}}],[\"实例连接断开时调用\",{\"1\":{\"1602\":1,\"1952\":1,\"2321\":1}}],[\"实例连接建立成功时调用\",{\"1\":{\"1601\":1,\"1951\":1,\"2320\":1}}],[\"实例化\",{\"1\":{\"474\":2,\"989\":2,\"1504\":2}}],[\"实例字典\",{\"1\":{\"219\":1,\"731\":1,\"1246\":1}}],[\"实例\",{\"1\":{\"217\":2,\"218\":1,\"219\":1,\"729\":2,\"730\":1,\"731\":1,\"1244\":2,\"1245\":1,\"1246\":1,\"1596\":1,\"1597\":1,\"1598\":1,\"1601\":1,\"1602\":1,\"1946\":1,\"1947\":1,\"1948\":1,\"1951\":1,\"1952\":1,\"2315\":1,\"2316\":1,\"2317\":1,\"2320\":1,\"2321\":1}}],[\"实例后调用方法\",{\"1\":{\"90\":1,\"600\":1,\"1115\":1}}],[\"标量\",{\"1\":{\"2696\":1,\"2711\":1,\"2726\":1}}],[\"标准定义的通信方式\",{\"1\":{\"492\":1,\"493\":1,\"1007\":1,\"1008\":1,\"1522\":1,\"1523\":1}}],[\"标准的\",{\"1\":{\"491\":1,\"1006\":1,\"1521\":1}}],[\"标准\",{\"1\":{\"484\":1,\"999\":1,\"1514\":1}}],[\"标准库中的日志模块\",{\"1\":{\"421\":1,\"936\":1,\"1451\":1}}],[\"标准库文档\",{\"1\":{\"365\":1,\"880\":1,\"1395\":1}}],[\"标准库进行\",{\"1\":{\"100\":1,\"610\":1,\"1125\":1}}],[\"标签\",{\"1\":{\"398\":1,\"913\":1,\"1428\":1}}],[\"标记一个方法为父类\",{\"1\":{\"373\":1,\"888\":1,\"1403\":1}}],[\"标识符表示该参数的类型注解需要隐藏\",{\"1\":{\"1896\":1,\"2265\":1,\"2634\":1}}],[\"标识符表示该参数为可选参数\",{\"1\":{\"1896\":1,\"2265\":1,\"2634\":1}}],[\"标识符表示该处传入的参数应不是规定的类型\",{\"1\":{\"1896\":1,\"2265\":1,\"2634\":1}}],[\"标识符与\",{\"1\":{\"1896\":1,\"2265\":1,\"2634\":1}}],[\"标识符为\",{\"1\":{\"1810\":1,\"2179\":1,\"2548\":1}}],[\"标识\",{\"1\":{\"208\":1,\"720\":1,\"1235\":1}}],[\"标注可用于在\",{\"1\":{\"108\":1,\"618\":1,\"1133\":1}}],[\"高\",{\"1\":{\"487\":1,\"492\":1,\"1002\":1,\"1007\":1,\"1517\":1,\"1522\":1}}],[\"高度灵活的自动化测试框架\",{\"1\":{\"487\":1,\"1002\":1,\"1517\":1}}],[\"高效的命令参数解析器\",{\"1\":{\"108\":1,\"618\":1,\"1133\":1,\"1893\":1,\"2262\":1,\"2631\":1}}],[\"高性能的异步\",{\"1\":{\"58\":1,\"568\":1,\"1083\":1}}],[\"灵活\",{\"1\":{\"108\":1,\"618\":1,\"1133\":1,\"1893\":1,\"2262\":1,\"2631\":1}}],[\"设计并实现\",{\"1\":{\"501\":1,\"1016\":1,\"1531\":1}}],[\"设计并实现项目管理面板相关功能\",{\"1\":{\"499\":1,\"1014\":1,\"1529\":1}}],[\"设计与编写\",{\"1\":{\"500\":1,\"1015\":1,\"1530\":1}}],[\"设计命令行交互界面\",{\"1\":{\"496\":1,\"1011\":1,\"1526\":1}}],[\"设计命令行与\",{\"1\":{\"496\":1,\"1011\":1,\"1526\":1}}],[\"设计用户交互模式\",{\"1\":{\"495\":1,\"1010\":1,\"1525\":1}}],[\"设计项目联动\",{\"1\":{\"492\":1,\"1007\":1,\"1522\":1}}],[\"设计\",{\"0\":{\"491\":1,\"1006\":1,\"1521\":1},\"1\":{\"487\":1,\"495\":1,\"1002\":1,\"1010\":1,\"1517\":1,\"1525\":1}}],[\"设定的前缀\",{\"1\":{\"105\":1,\"615\":1,\"1130\":1}}],[\"设置此命名空间下的命令的帮助选项名称\",{\"1\":{\"1905\":1,\"2274\":1,\"2643\":1}}],[\"设置此命名空间下的命令的\",{\"1\":{\"1905\":1,\"2274\":1,\"2643\":1}}],[\"设置事件响应器存储器\",{\"1\":{\"284\":1,\"796\":1,\"1311\":1}}],[\"设置一个\",{\"1\":{\"260\":1,\"263\":1,\"773\":1,\"776\":1,\"1288\":1,\"1291\":1,\"1603\":1,\"1604\":1,\"1740\":1,\"1741\":1,\"1953\":1,\"1954\":1,\"2086\":1,\"2087\":1,\"2322\":1,\"2323\":1,\"2455\":1,\"2456\":1}}],[\"设置存储提供者\",{\"0\":{\"83\":1,\"593\":1,\"1108\":1}}],[\"设置视图搜索配置项\",{\"1\":{\"10\":1,\"22\":1,\"34\":1}}],[\"他们拥有如下共同参数\",{\"1\":{\"1900\":1,\"2269\":1,\"2638\":1}}],[\"他们往往同样需要再次实现类似逻辑\",{\"1\":{\"492\":1,\"493\":1,\"1007\":1,\"1008\":1,\"1522\":1,\"1523\":1}}],[\"他们具有相同的优先级\",{\"1\":{\"105\":1,\"615\":1,\"1130\":1}}],[\"他可以作为驱动器单独运行\",{\"1\":{\"54\":1,\"564\":1,\"1079\":1}}],[\"+=\",{\"1\":{\"544\":3,\"1059\":3,\"1574\":3}}],[\"+\",{\"1\":{\"101\":2,\"431\":1,\"492\":1,\"493\":1,\"544\":8,\"545\":2,\"611\":2,\"946\":1,\"1007\":1,\"1008\":1,\"1059\":8,\"1060\":2,\"1126\":2,\"1461\":1,\"1522\":1,\"1523\":1,\"1574\":8,\"1575\":2,\"1894\":2,\"1912\":2,\"2263\":2,\"2281\":2,\"2632\":2,\"2650\":2}}],[\"+<module>\",{\"1\":{\"54\":1,\"166\":1,\"564\":1,\"676\":1,\"1079\":1,\"1191\":1}}],[\"zerodivisionerror\",{\"1\":{\"419\":2,\"934\":2,\"1449\":2}}],[\"z\",{\"1\":{\"101\":2,\"611\":2,\"1126\":2}}],[\"^xxx\",{\"1\":{\"101\":1,\"367\":1,\"611\":1,\"882\":1,\"1126\":1,\"1397\":1}}],[\"正如\",{\"1\":{\"2686\":1,\"2701\":1,\"2716\":1}}],[\"正确\",{\"1\":{\"1896\":1,\"2265\":1,\"2634\":1}}],[\"正确处理\",{\"1\":{\"504\":1,\"1019\":1,\"1534\":1}}],[\"正确创建\",{\"1\":{\"37\":1,\"547\":1,\"1062\":1}}],[\"正常\",{\"1\":{\"503\":1,\"1018\":1,\"1533\":1}}],[\"正则内容只在命令名上生效\",{\"1\":{\"1894\":1,\"2263\":1,\"2632\":1}}],[\"正则表达式标记\",{\"1\":{\"366\":1,\"367\":1,\"881\":1,\"882\":1,\"1396\":1,\"1397\":1}}],[\"正则表达式\",{\"1\":{\"366\":1,\"367\":1,\"881\":1,\"882\":1,\"1396\":1,\"1397\":1,\"1874\":1,\"1891\":1,\"2243\":1,\"2260\":1,\"2612\":1,\"2629\":1}}],[\"正则表达式匹配使用\",{\"1\":{\"101\":1,\"367\":2,\"611\":1,\"882\":2,\"1126\":1,\"1397\":2}}],[\"正则匹配标志\",{\"1\":{\"1874\":1,\"1891\":1,\"2243\":1,\"2260\":1,\"2612\":1,\"2629\":1}}],[\"正则匹配\",{\"1\":{\"1874\":1,\"1891\":1,\"2243\":1,\"2260\":1,\"2612\":1,\"2629\":1}}],[\"正则匹配结果文本\",{\"1\":{\"319\":1,\"832\":1,\"1347\":1}}],[\"正则匹配结果\",{\"1\":{\"318\":1,\"320\":1,\"321\":1,\"831\":1,\"833\":1,\"834\":1,\"1346\":1,\"1348\":1,\"1349\":1}}],[\"正则匹配结果存储\",{\"1\":{\"190\":1,\"702\":1,\"1217\":1}}],[\"正则匹配后的结果可以通过\",{\"1\":{\"101\":1,\"611\":1,\"1126\":1}}],[\"选项时自自动启用交互式补全\",{\"1\":{\"1918\":1,\"2287\":1,\"2656\":1}}],[\"选项名称\",{\"1\":{\"1911\":1,\"2280\":1,\"2649\":1}}],[\"选项与子命令会选择其中长度最长的作为其名称\",{\"1\":{\"1900\":1,\"2269\":1,\"2638\":1}}],[\"选项与子命令\",{\"0\":{\"1900\":1,\"2269\":1,\"2638\":1}}],[\"选项与默认\",{\"1\":{\"100\":1,\"610\":1,\"1125\":1}}],[\"选项\",{\"1\":{\"419\":2,\"934\":2,\"1449\":2,\"1937\":1,\"1939\":2,\"2306\":1,\"2308\":2,\"2675\":1,\"2677\":2}}],[\"选项直接创建一个嵌套插件\",{\"1\":{\"113\":1,\"623\":1,\"1138\":1}}],[\"选择了命令式编程\",{\"1\":{\"2687\":1,\"2702\":1,\"2717\":1}}],[\"选择直接通过模板创建一个嵌套插件\",{\"1\":{\"113\":1,\"623\":1,\"1138\":1}}],[\"选择驱动器\",{\"0\":{\"52\":1,\"562\":1,\"1077\":1}}],[\"帮助文档\",{\"1\":{\"482\":1,\"494\":1,\"498\":1,\"502\":1,\"997\":1,\"1009\":1,\"1013\":1,\"1017\":1,\"1512\":1,\"1524\":1,\"1528\":1,\"1532\":1}}],[\"帮助选项的规则\",{\"1\":{\"100\":1,\"610\":1,\"1125\":1}}],[\"帮助\",{\"1\":{\"99\":3,\"105\":3,\"609\":3,\"615\":3,\"1124\":3,\"1130\":3,\"1905\":1,\"2274\":1,\"2643\":1}}],[\"匹配字典中的任意一个键\",{\"1\":{\"1897\":1,\"2266\":1,\"2635\":1}}],[\"匹配字符串\",{\"1\":{\"1897\":2,\"2266\":2,\"2635\":2}}],[\"匹配一个正则表达式\",{\"1\":{\"1897\":2,\"2266\":2,\"2635\":2}}],[\"匹配一个参数为\",{\"1\":{\"1897\":1,\"2266\":1,\"2635\":1}}],[\"匹配一个字典\",{\"1\":{\"1897\":1,\"2266\":1,\"2635\":1}}],[\"匹配一个列表\",{\"1\":{\"1897\":1,\"2266\":1,\"2635\":1}}],[\"匹配其中的任意一个类型\",{\"1\":{\"1897\":1,\"2266\":1,\"2635\":1}}],[\"匹配其中的任意一个值或类型\",{\"1\":{\"1897\":1,\"2266\":1,\"2635\":1}}],[\"匹配其中的任意一个值\",{\"1\":{\"1897\":1,\"2266\":1,\"2635\":1}}],[\"匹配类似\",{\"1\":{\"1897\":2,\"2266\":2,\"2635\":2}}],[\"匹配网址\",{\"1\":{\"1897\":1,\"2266\":1,\"2635\":1}}],[\"匹配浮点数\",{\"1\":{\"1897\":1,\"2266\":1,\"2635\":1}}],[\"匹配整数\",{\"1\":{\"1897\":1,\"2266\":1,\"2635\":1}}],[\"匹配内容\",{\"1\":{\"1894\":1,\"2263\":1,\"2632\":1}}],[\"匹配事件类型\",{\"1\":{\"371\":1,\"886\":1,\"1401\":1}}],[\"匹配与机器人有关的事件\",{\"1\":{\"369\":1,\"884\":1,\"1399\":1}}],[\"匹配符合正则表达式的消息字符串\",{\"1\":{\"367\":1,\"882\":1,\"1397\":1}}],[\"匹配消息命令\",{\"1\":{\"361\":1,\"876\":1,\"1391\":1}}],[\"匹配消息纯文本关键词\",{\"1\":{\"359\":1,\"874\":1,\"1389\":1}}],[\"匹配消息纯文本结尾\",{\"1\":{\"355\":1,\"870\":1,\"1385\":1}}],[\"匹配消息纯文本开头\",{\"1\":{\"353\":1,\"868\":1,\"1383\":1}}],[\"匹配任意类型\",{\"1\":{\"1897\":2,\"2266\":2,\"2635\":2}}],[\"匹配任意字符串\",{\"1\":{\"1897\":1,\"2266\":1,\"2635\":1}}],[\"匹配任意超级用户事件\",{\"1\":{\"345\":1,\"860\":1,\"1375\":1}}],[\"匹配任意\",{\"1\":{\"340\":1,\"341\":1,\"342\":1,\"343\":1,\"855\":1,\"856\":1,\"857\":1,\"858\":1,\"1370\":1,\"1371\":1,\"1372\":1,\"1373\":1}}],[\"匹配当前事件属于指定会话\",{\"1\":{\"329\":1,\"844\":1,\"1359\":1}}],[\"匹配规则等\",{\"1\":{\"529\":1,\"1044\":1,\"1559\":1}}],[\"匹配规则\",{\"1\":{\"242\":1,\"755\":1,\"1270\":1}}],[\"匹配\",{\"1\":{\"99\":2,\"365\":1,\"609\":2,\"880\":1,\"1124\":2,\"1395\":1,\"1897\":7,\"2266\":7,\"2635\":7}}],[\"时可能触发\",{\"1\":{\"2696\":1,\"2711\":1,\"2726\":1}}],[\"时发生的错误\",{\"1\":{\"1585\":1,\"1966\":1,\"2335\":1}}],[\"时遇到的挑战\",{\"1\":{\"505\":1,\"1020\":1,\"1535\":1}}],[\"时才会响应\",{\"1\":{\"425\":1,\"428\":1,\"529\":1,\"940\":1,\"943\":1,\"1044\":1,\"1455\":1,\"1458\":1,\"1559\":1}}],[\"时被运行\",{\"1\":{\"394\":1,\"395\":1,\"909\":1,\"910\":1,\"1424\":1,\"1425\":1}}],[\"时继续运行\",{\"1\":{\"346\":1,\"861\":1,\"1376\":1}}],[\"时就会继续运行\",{\"1\":{\"328\":1,\"843\":1,\"1358\":1}}],[\"时抛出\",{\"1\":{\"209\":1,\"721\":1,\"1236\":1}}],[\"时运行\",{\"1\":{\"129\":1,\"639\":1,\"1154\":1}}],[\"时\",{\"1\":{\"99\":1,\"120\":1,\"222\":1,\"438\":1,\"439\":1,\"440\":1,\"475\":1,\"492\":1,\"493\":1,\"528\":1,\"609\":1,\"630\":1,\"734\":1,\"953\":1,\"954\":1,\"955\":1,\"990\":1,\"1007\":1,\"1008\":1,\"1043\":1,\"1124\":1,\"1145\":1,\"1249\":1,\"1468\":1,\"1469\":1,\"1470\":1,\"1505\":1,\"1522\":1,\"1523\":1,\"1558\":1,\"1901\":6,\"1909\":1,\"1910\":1,\"1934\":1,\"2270\":6,\"2278\":1,\"2279\":1,\"2303\":1,\"2639\":6,\"2647\":1,\"2648\":1,\"2672\":1}}],[\"时更容易上手\",{\"1\":{\"4\":1,\"16\":1,\"28\":1}}],[\"当然我们也可以获得一个新的会话\",{\"1\":{\"2687\":1,\"2702\":1,\"2717\":1}}],[\"当然非要这么做也不是不可以\",{\"1\":{\"2687\":1,\"2702\":1,\"2717\":1}}],[\"当需要回滚插件版本或删除插件时\",{\"1\":{\"1933\":1,\"2302\":1,\"2671\":1}}],[\"当存在默认值并且不为数字时\",{\"1\":{\"1901\":1,\"2270\":1,\"2639\":1}}],[\"当存在默认值并且不为列表时\",{\"1\":{\"1901\":1,\"2270\":1,\"2639\":1}}],[\"当有数据更改时\",{\"1\":{\"2687\":1,\"2702\":1,\"2717\":1}}],[\"当有\",{\"1\":{\"1602\":1,\"1952\":1,\"2321\":1}}],[\"当有新的\",{\"1\":{\"1601\":1,\"1951\":1,\"2320\":1}}],[\"当社区中的开发者想针对一个新的聊天平台实现\",{\"1\":{\"492\":1,\"493\":1,\"1007\":1,\"1008\":1,\"1522\":1,\"1523\":1}}],[\"当\",{\"1\":{\"438\":1,\"439\":1,\"440\":1,\"953\":1,\"954\":1,\"955\":1,\"1468\":1,\"1469\":1,\"1470\":1,\"1909\":1,\"1910\":1,\"1914\":1,\"1941\":1,\"1942\":1,\"2278\":1,\"2279\":1,\"2283\":1,\"2310\":1,\"2311\":1,\"2647\":1,\"2648\":1,\"2652\":1,\"2679\":1,\"2680\":1}}],[\"当发生异常时返回的值\",{\"1\":{\"408\":1,\"923\":1,\"1438\":1}}],[\"当事件传递时\",{\"1\":{\"333\":1,\"347\":1,\"845\":1,\"862\":1,\"1360\":1,\"1377\":1}}],[\"当要获取的\",{\"1\":{\"251\":1,\"764\":1,\"1279\":1}}],[\"当不提供时\",{\"1\":{\"222\":1,\"734\":1,\"1249\":1}}],[\"当提供\",{\"1\":{\"222\":1,\"734\":1,\"1249\":1}}],[\"当我们需要等待用户事件时\",{\"1\":{\"139\":1,\"649\":1,\"1164\":1}}],[\"当我们配置了\",{\"1\":{\"99\":1,\"609\":1,\"1124\":1}}],[\"当请求方法为\",{\"1\":{\"120\":1,\"630\":1,\"1145\":1}}],[\"当前事件响应器\",{\"1\":{\"2687\":1,\"2702\":1,\"2717\":1}}],[\"当前连接上的\",{\"1\":{\"1726\":1,\"1727\":1,\"2105\":1,\"2106\":1,\"2474\":1,\"2475\":1}}],[\"当前消息段是否为纯文本\",{\"1\":{\"1638\":1,\"2007\":1,\"2376\":1}}],[\"当前协议适配器的名称\",{\"1\":{\"1599\":1,\"1949\":1,\"2318\":1}}],[\"当前存储器中已有的事件响应器\",{\"1\":{\"285\":1,\"797\":1,\"1312\":1}}],[\"当前状态\",{\"1\":{\"245\":1,\"758\":1,\"1273\":1}}],[\"当前\",{\"1\":{\"180\":1,\"201\":1,\"349\":1,\"690\":1,\"713\":1,\"864\":1,\"1205\":1,\"1228\":1,\"1379\":1,\"1584\":1,\"1585\":1,\"1965\":1,\"1966\":1,\"2334\":1,\"2335\":1}}],[\"当前环境名\",{\"1\":{\"164\":1,\"674\":1,\"1189\":1}}],[\"当前有效类别有\",{\"1\":{\"110\":1,\"620\":1,\"1135\":1}}],[\"当前所有适配器已连接的\",{\"1\":{\"40\":1,\"550\":1,\"1065\":1}}],[\"来模拟这几种通信方式\",{\"1\":{\"1940\":1,\"2309\":1,\"2678\":1}}],[\"来作为全局的\",{\"1\":{\"1917\":1,\"1920\":1,\"2286\":1,\"2289\":1,\"2655\":1,\"2658\":1}}],[\"来删除一个快捷指令\",{\"1\":{\"1909\":1,\"2278\":1,\"2647\":1}}],[\"来列出当前指令的所有快捷指令\",{\"1\":{\"1909\":1,\"2278\":1,\"2647\":1}}],[\"来增加一个快捷指令\",{\"1\":{\"1909\":1,\"2278\":1,\"2647\":1}}],[\"来讲\",{\"1\":{\"1900\":1,\"2269\":1,\"2638\":1}}],[\"来使用正则表达式外\",{\"1\":{\"1894\":1,\"2263\":1,\"2632\":1}}],[\"来辅助我们用最简的方式创建带有不同规则预设的事件响应器\",{\"1\":{\"527\":1,\"1042\":1,\"1557\":1}}],[\"来自动检测代码的更改并自动重新运行入口文件\",{\"1\":{\"510\":1,\"1025\":1,\"1540\":1}}],[\"来存放项目所需文件\",{\"1\":{\"506\":1,\"1021\":1,\"1536\":1}}],[\"来实现各种\",{\"1\":{\"479\":1,\"994\":1,\"1509\":1}}],[\"来帮助适配器进行网络通信\",{\"1\":{\"471\":1,\"986\":1,\"1501\":1}}],[\"来获取\",{\"1\":{\"431\":1,\"946\":1,\"1461\":1}}],[\"来获取事件发送者\",{\"1\":{\"423\":1,\"938\":1,\"1453\":1}}],[\"来更好地复用规则\",{\"1\":{\"428\":1,\"943\":1,\"1458\":1}}],[\"来将需要的信息输出到控制台\",{\"1\":{\"418\":1,\"933\":1,\"1448\":1}}],[\"来确保匹配开头\",{\"1\":{\"367\":1,\"882\":1,\"1397\":1}}],[\"来记录日志信息\",{\"1\":{\"226\":1,\"738\":1,\"1253\":1}}],[\"来指定\",{\"1\":{\"224\":1,\"736\":1,\"1251\":1}}],[\"来读取配置\",{\"1\":{\"162\":1,\"508\":1,\"672\":1,\"1023\":1,\"1187\":1,\"1538\":1}}],[\"来判断消息是否为命令\",{\"1\":{\"99\":1,\"609\":1,\"1124\":1}}],[\"来看看如何注册适配器\",{\"1\":{\"38\":1,\"548\":1,\"1063\":1}}],[\"完成\",{\"1\":{\"495\":1,\"1010\":1,\"1525\":1}}],[\"完善功能\",{\"1\":{\"495\":1,\"1010\":1,\"1525\":1}}],[\"完全匹配消息\",{\"1\":{\"357\":1,\"872\":1,\"1387\":1}}],[\"完全相同\",{\"1\":{\"97\":1,\"607\":1,\"1122\":1}}],[\"完整实现了类型注解\",{\"1\":{\"3\":1,\"15\":1,\"27\":1}}],[\"完整的类型注解\",{\"0\":{\"3\":1,\"15\":1,\"27\":1}}],[\"相当于\",{\"1\":{\"1904\":1,\"1909\":1,\"2273\":1,\"2278\":1,\"2642\":1,\"2647\":1}}],[\"相对于当前工作目录\",{\"1\":{\"1826\":1,\"2195\":1,\"2564\":1}}],[\"相对于事件处理依赖而言\",{\"1\":{\"454\":1,\"969\":1,\"1484\":1}}],[\"相加均会返回一个新的\",{\"1\":{\"544\":1,\"1059\":1,\"1574\":1}}],[\"相加构造\",{\"1\":{\"537\":1,\"1052\":1,\"1567\":1}}],[\"相关技术\",{\"1\":{\"504\":1,\"1019\":1,\"1534\":1}}],[\"相关操作\",{\"1\":{\"504\":1,\"1019\":1,\"1534\":1}}],[\"相关能力\",{\"1\":{\"503\":1,\"1018\":1,\"1533\":1}}],[\"相关功能与接口\",{\"1\":{\"500\":1,\"1015\":1,\"1530\":1}}],[\"相关功能\",{\"1\":{\"499\":1,\"1014\":1,\"1529\":1}}],[\"相关\",{\"1\":{\"497\":1,\"1012\":1,\"1527\":1}}],[\"相关信息参考\",{\"1\":{\"64\":1,\"574\":1,\"1089\":1}}],[\"相信你已经可以独自写出一个插件了\",{\"1\":{\"432\":1,\"947\":1,\"1462\":1}}],[\"相信你已经能够实现更复杂的会话功能了\",{\"1\":{\"140\":1,\"650\":1,\"1165\":1}}],[\"相同\",{\"1\":{\"95\":1,\"96\":1,\"362\":1,\"605\":1,\"606\":1,\"877\":1,\"1120\":1,\"1121\":1,\"1392\":1,\"1614\":1,\"1901\":1,\"1983\":1,\"2270\":1,\"2352\":1,\"2639\":1}}],[\"下多个插件\",{\"1\":{\"1819\":1,\"1820\":1,\"2188\":1,\"2189\":1,\"2557\":1,\"2558\":1}}],[\"下面假设我们使用了一个适配器\",{\"1\":{\"1941\":1,\"1942\":1,\"2310\":1,\"2311\":1,\"2679\":1,\"2680\":1}}],[\"下面列出了目前我们已经发布的项目\",{\"1\":{\"482\":1,\"494\":1,\"498\":1,\"502\":1,\"997\":1,\"1009\":1,\"1013\":1,\"1017\":1,\"1512\":1,\"1524\":1,\"1528\":1,\"1532\":1}}],[\"下面我们将分别介绍如何使用\",{\"1\":{\"1940\":1,\"2309\":1,\"2678\":1}}],[\"下面我们将介绍如何为插件添加元数据\",{\"1\":{\"109\":1,\"619\":1,\"1134\":1}}],[\"下面我们创建一个项目文件夹\",{\"1\":{\"506\":1,\"1021\":1,\"1536\":1}}],[\"下面我们逐个介绍\",{\"1\":{\"93\":1,\"603\":1,\"1118\":1}}],[\"下一步\",{\"0\":{\"432\":1,\"947\":1,\"1462\":1}}],[\"下一个\",{\"1\":{\"181\":1,\"691\":1,\"1206\":1}}],[\"下称\",{\"1\":{\"0\":1,\"12\":1,\"24\":1,\"527\":1,\"1042\":1,\"1557\":1}}],[\"函数后\",{\"1\":{\"2686\":1,\"2701\":1,\"2716\":1}}],[\"函数中的代码是互逆的\",{\"1\":{\"2686\":1,\"2701\":1,\"2716\":1}}],[\"函数会在默认\",{\"1\":{\"468\":1,\"983\":1,\"1498\":1}}],[\"函数用于快捷打印适配器日志\",{\"1\":{\"468\":1,\"983\":1,\"1498\":1}}],[\"函数都会检查事件是否符合条件\",{\"1\":{\"425\":1,\"940\":1,\"1455\":1}}],[\"函数组成\",{\"1\":{\"425\":1,\"940\":1,\"1455\":1}}],[\"函数声明其依赖于插件\",{\"1\":{\"117\":1,\"627\":1,\"1142\":1}}],[\"函数的参数为插件索引名称或者外部插件的模块名称\",{\"1\":{\"117\":1,\"627\":1,\"1142\":1}}],[\"函数的\",{\"1\":{\"99\":1,\"609\":1,\"1124\":1}}],[\"函数\",{\"1\":{\"93\":2,\"111\":1,\"117\":2,\"603\":2,\"621\":1,\"627\":2,\"1118\":2,\"1136\":1,\"1142\":2,\"2686\":1,\"2701\":1,\"2716\":1}}],[\"函数具有一个\",{\"1\":{\"93\":1,\"603\":1,\"1118\":1}}],[\"创建时间\",{\"1\":{\"2686\":1,\"2701\":1,\"2716\":1}}],[\"创建新机器人\",{\"0\":{\"1928\":1,\"2297\":1,\"2666\":1}}],[\"创建\",{\"1\":{\"1905\":1,\"1907\":1,\"2274\":1,\"2276\":1,\"2643\":1,\"2645\":1}}],[\"创建消息模板\",{\"1\":{\"1609\":1,\"1978\":1,\"2347\":1}}],[\"创建消息事件响应器\",{\"1\":{\"93\":1,\"603\":1,\"1118\":1}}],[\"创建事件响应器\",{\"0\":{\"528\":1,\"1043\":1,\"1558\":1}}],[\"创建插件可以通过\",{\"1\":{\"515\":1,\"1030\":1,\"1545\":1}}],[\"创建插件\",{\"0\":{\"515\":1,\"1030\":1,\"1545\":1}}],[\"创建入口文件\",{\"0\":{\"509\":1,\"1024\":1,\"1539\":1}}],[\"创建配置文件\",{\"0\":{\"508\":1,\"1023\":1,\"1538\":1}}],[\"创建配置项目\",{\"1\":{\"497\":1,\"1012\":1,\"1527\":1}}],[\"创建虚拟环境\",{\"1\":{\"507\":1,\"1022\":1,\"1537\":1}}],[\"创建一个项目\",{\"1\":{\"506\":1,\"1021\":1,\"1536\":1}}],[\"创建一个新的事件响应器\",{\"1\":{\"242\":1,\"755\":1,\"1270\":1}}],[\"创建与管理项目\",{\"1\":{\"499\":1,\"1014\":1,\"1529\":1}}],[\"创建项目\",{\"0\":{\"466\":1,\"981\":1,\"1496\":1},\"1\":{\"495\":1,\"509\":1,\"1010\":1,\"1024\":1,\"1525\":1,\"1539\":1}}],[\"创建嵌套插件\",{\"0\":{\"113\":1,\"623\":1,\"1138\":1}}],[\"创建通知事件响应器\",{\"1\":{\"93\":1,\"603\":1,\"1118\":1}}],[\"创建请求事件响应器\",{\"1\":{\"93\":1,\"603\":1,\"1118\":1}}],[\"创建元事件响应器\",{\"1\":{\"93\":1,\"603\":1,\"1118\":1}}],[\"创建任何类型的事件响应器\",{\"1\":{\"93\":1,\"603\":1,\"1118\":1}}],[\"该选项会影响到\",{\"1\":{\"1919\":1,\"2288\":1,\"2657\":1}}],[\"该消息段所代表的\",{\"1\":{\"1630\":1,\"1999\":1,\"2368\":1}}],[\"该方法是\",{\"1\":{\"522\":1,\"1037\":1,\"1552\":1}}],[\"该方法需要\",{\"1\":{\"90\":1,\"600\":1,\"1115\":1}}],[\"该文件功能会被\",{\"1\":{\"509\":1,\"1024\":1,\"1539\":1}}],[\"该模块实现所有\",{\"1\":{\"492\":1,\"493\":1,\"1007\":1,\"1008\":1,\"1522\":1,\"1523\":1}}],[\"该处理器会将日志输出到stdout\",{\"1\":{\"420\":1,\"935\":1,\"1450\":1}}],[\"该插件同时通过提供\",{\"1\":{\"108\":1,\"618\":1,\"1133\":1}}],[\"该插件同时提供了一系列便捷的消息段标注\",{\"1\":{\"108\":1,\"618\":1,\"1133\":1}}],[\"该插件提供了一类新的事件响应器辅助函数\",{\"1\":{\"108\":1,\"618\":1,\"1133\":1}}],[\"该插件使用\",{\"1\":{\"108\":1,\"618\":1,\"1133\":1}}],[\"该响应器会被自动销毁\",{\"1\":{\"91\":1,\"601\":1,\"1116\":1}}],[\"响应内容\",{\"1\":{\"473\":1,\"988\":1,\"1503\":1}}],[\"响应头\",{\"1\":{\"473\":1,\"988\":1,\"1503\":1}}],[\"响应事件类型更新函数\",{\"1\":{\"246\":1,\"759\":1,\"1274\":1}}],[\"响应事件类型更新函数是一个\",{\"1\":{\"139\":1,\"649\":1,\"1164\":1}}],[\"响应触发关键字\",{\"1\":{\"194\":1,\"325\":1,\"706\":1,\"838\":1,\"1221\":1,\"1353\":1}}],[\"响应触发完整消息\",{\"1\":{\"193\":1,\"324\":1,\"705\":1,\"837\":1,\"1220\":1,\"1352\":1}}],[\"响应触发后缀\",{\"1\":{\"192\":1,\"323\":1,\"704\":1,\"836\":1,\"1219\":1,\"1351\":1}}],[\"响应触发前缀\",{\"1\":{\"191\":1,\"322\":1,\"703\":1,\"835\":1,\"1218\":1,\"1350\":1}}],[\"响应器会自动处理消息\",{\"1\":{\"1873\":1,\"1890\":1,\"2242\":1,\"2259\":1,\"2611\":1,\"2628\":1}}],[\"响应器组\",{\"0\":{\"104\":1,\"614\":1,\"1129\":1}}],[\"响应器的默认状态\",{\"1\":{\"93\":1,\"603\":1,\"1118\":1}}],[\"响应器的优先级\",{\"1\":{\"93\":1,\"603\":1,\"1118\":1}}],[\"响应器的优先级越小\",{\"1\":{\"89\":1,\"599\":1,\"1114\":1}}],[\"响应器的过期时间\",{\"1\":{\"93\":1,\"603\":1,\"1118\":1}}],[\"响应器将会初始化默认状态然后开始执行事件处理流程\",{\"1\":{\"92\":1,\"602\":1,\"1117\":1}}],[\"响应优先级\",{\"0\":{\"89\":1,\"599\":1,\"1114\":1},\"1\":{\"89\":1,\"242\":1,\"599\":1,\"755\":1,\"1114\":1,\"1270\":1}}],[\"响应规则是一个\",{\"1\":{\"425\":1,\"940\":1,\"1455\":1}}],[\"响应规则一样进行命令匹配\",{\"1\":{\"100\":1,\"610\":1,\"1125\":1}}],[\"响应规则用于匹配事件类型是否为指定类型\",{\"1\":{\"103\":1,\"613\":1,\"1128\":1}}],[\"响应规则用于匹配事件是否与机器人相关\",{\"1\":{\"102\":1,\"612\":1,\"1127\":1}}],[\"响应规则用于匹配消息是否与指定正则表达式匹配\",{\"1\":{\"101\":1,\"611\":1,\"1126\":1}}],[\"响应规则用于匹配消息纯文本部分是否包含指定字符串\",{\"1\":{\"98\":1,\"608\":1,\"1123\":1}}],[\"响应规则用于匹配消息纯文本部分是否与指定字符串\",{\"1\":{\"97\":1,\"607\":1,\"1122\":1}}],[\"响应规则用于匹配消息纯文本部分的结尾是否与指定字符串\",{\"1\":{\"96\":1,\"606\":1,\"1121\":1}}],[\"响应规则用于匹配消息纯文本部分的开头是否与指定字符串\",{\"1\":{\"95\":1,\"605\":1,\"1120\":1}}],[\"响应规则用于匹配类\",{\"1\":{\"100\":1,\"610\":1,\"1125\":1}}],[\"响应规则默认允许消息命令与参数间不加空格\",{\"1\":{\"99\":1,\"609\":1,\"1124\":1}}],[\"响应规则的使用方法可以参考\",{\"1\":{\"94\":1,\"604\":1,\"1119\":1}}],[\"响应规则\",{\"0\":{\"425\":1,\"940\":1,\"1455\":1},\"1\":{\"86\":1,\"93\":1,\"94\":1,\"596\":1,\"603\":1,\"604\":1,\"1111\":1,\"1118\":1,\"1119\":1}}],[\"消息类型工厂\",{\"1\":{\"1639\":1,\"2008\":1,\"2377\":1}}],[\"消息类型事件还应重写\",{\"1\":{\"478\":1,\"993\":1,\"1508\":1}}],[\"消息内是否存在给定消息段或给定类型的消息段\",{\"1\":{\"1613\":1,\"1982\":1,\"2351\":1}}],[\"消息内容\",{\"1\":{\"252\":1,\"253\":1,\"254\":1,\"255\":1,\"256\":1,\"257\":1,\"765\":1,\"766\":1,\"767\":1,\"768\":1,\"769\":1,\"770\":1,\"1280\":1,\"1281\":1,\"1282\":1,\"1283\":1,\"1284\":1,\"1285\":1,\"1608\":1,\"1977\":1,\"2346\":1}}],[\"消息切片\",{\"1\":{\"1612\":1,\"1981\":1,\"2350\":1}}],[\"消息格式化器\",{\"1\":{\"1609\":1,\"1978\":1,\"2347\":1}}],[\"消息格式等\",{\"1\":{\"492\":1,\"493\":1,\"1007\":1,\"1008\":1,\"1522\":1,\"1523\":1}}],[\"消息和消息段都可以使用\",{\"1\":{\"541\":1,\"1056\":1,\"1571\":1}}],[\"消息序列与消息序列相加\",{\"1\":{\"544\":1,\"1059\":1,\"1574\":1}}],[\"消息序列与消息段相加\",{\"1\":{\"544\":1,\"1059\":1,\"1574\":1}}],[\"消息序列与字符串相加\",{\"1\":{\"544\":1,\"1059\":1,\"1574\":1}}],[\"消息序列添加了一个\",{\"1\":{\"543\":1,\"1058\":1,\"1573\":1}}],[\"消息序列对列表的\",{\"1\":{\"543\":1,\"1058\":1,\"1573\":1}}],[\"消息序列对列表的索引与切片进行了增强\",{\"1\":{\"543\":1,\"1058\":1,\"1573\":1}}],[\"消息序列继承自\",{\"1\":{\"540\":1,\"1055\":1,\"1570\":1}}],[\"消息序列可以通过多种方式构造\",{\"1\":{\"535\":1,\"1050\":1,\"1565\":1}}],[\"消息序列类似于一个自然段\",{\"1\":{\"533\":1,\"1048\":1,\"1563\":1}}],[\"消息序列的使用方法与\",{\"1\":{\"532\":1,\"1047\":1,\"1562\":1}}],[\"消息序列\",{\"0\":{\"532\":1,\"1047\":1,\"1562\":1},\"1\":{\"532\":1,\"1047\":1,\"1562\":1,\"1608\":1,\"1977\":1,\"2346\":1}}],[\"消息序列是\",{\"1\":{\"530\":1,\"1045\":1,\"1560\":1}}],[\"消息对象的便捷操作\",{\"1\":{\"505\":1,\"1020\":1,\"1535\":1}}],[\"消息解析\",{\"1\":{\"492\":2,\"493\":2,\"1007\":2,\"1008\":2,\"1522\":2,\"1523\":2}}],[\"消息表示机制\",{\"1\":{\"491\":1,\"1006\":1,\"1521\":1}}],[\"消息段数据\",{\"1\":{\"1628\":1,\"1997\":1,\"2366\":1}}],[\"消息段基类\",{\"1\":{\"1626\":1,\"1995\":1,\"2364\":1}}],[\"消息段不存在\",{\"1\":{\"1615\":1,\"1984\":1,\"2353\":1}}],[\"消息段或者消息段类型\",{\"1\":{\"1615\":1,\"1984\":1,\"2353\":1}}],[\"消息段或消息段类型\",{\"1\":{\"1613\":1,\"1617\":1,\"1982\":1,\"1986\":1,\"2351\":1,\"2355\":1}}],[\"消息段类型和切片\",{\"1\":{\"1612\":1,\"1981\":1,\"2350\":1}}],[\"消息段类型和索引\",{\"1\":{\"1612\":1,\"1981\":1,\"2350\":1}}],[\"消息段类型\",{\"1\":{\"1612\":1,\"1616\":1,\"1627\":1,\"1981\":1,\"1985\":1,\"1996\":1,\"2350\":1,\"2354\":1,\"2365\":1}}],[\"消息段与消息序列相加\",{\"1\":{\"544\":1,\"1059\":1,\"1574\":1}}],[\"消息段与消息段相加\",{\"1\":{\"544\":1,\"1059\":1,\"1574\":1}}],[\"消息段与字符串相加\",{\"1\":{\"544\":1,\"1059\":1,\"1574\":1}}],[\"消息段的类型是由协议适配器提供的\",{\"1\":{\"533\":1,\"1048\":1,\"1563\":1}}],[\"消息段可以被认为是构成消息序列的最小单位\",{\"1\":{\"533\":1,\"1048\":1,\"1563\":1}}],[\"消息段\",{\"0\":{\"533\":1,\"1048\":1,\"1563\":1},\"1\":{\"479\":1,\"533\":1,\"994\":1,\"1048\":1,\"1509\":1,\"1563\":1}}],[\"消息事件\",{\"1\":{\"478\":1,\"993\":1,\"1508\":1}}],[\"消息模板格式化实现类\",{\"1\":{\"1639\":1,\"2008\":1,\"2377\":1}}],[\"消息模板支持使用拓展控制符来控制消息段类型\",{\"1\":{\"545\":1,\"1060\":1,\"1575\":1}}],[\"消息模板支持使用消息段进行格式化\",{\"1\":{\"545\":1,\"1060\":1,\"1575\":1}}],[\"消息模板同样支持使用消息序列作为模板\",{\"1\":{\"545\":1,\"1060\":1,\"1575\":1}}],[\"消息模板采用\",{\"1\":{\"545\":1,\"1060\":1,\"1575\":1}}],[\"消息模板的使用方法已经在消息处理中介绍过\",{\"1\":{\"431\":1,\"946\":1,\"1461\":1}}],[\"消息模板在发送时会使用会话状态字典进行渲染\",{\"1\":{\"431\":1,\"946\":1,\"1461\":1}}],[\"消息发送者等等\",{\"1\":{\"422\":1,\"937\":1,\"1452\":1}}],[\"消息命令与参数之间的空白\",{\"1\":{\"315\":1,\"828\":1,\"1343\":1}}],[\"消息命令开头\",{\"1\":{\"314\":1,\"827\":1,\"1342\":1}}],[\"消息命令参数\",{\"1\":{\"313\":1,\"826\":1,\"1341\":1}}],[\"消息命令文本\",{\"1\":{\"312\":1,\"825\":1,\"1340\":1}}],[\"消息命令元组\",{\"1\":{\"311\":1,\"824\":1,\"1339\":1}}],[\"消息参数\",{\"1\":{\"308\":1,\"821\":1,\"1336\":1}}],[\"消息的代码\",{\"1\":{\"125\":1,\"635\":1,\"1150\":1}}],[\"消息传递\",{\"1\":{\"125\":1,\"635\":1,\"1150\":1}}],[\"消息\",{\"1\":{\"86\":1,\"250\":1,\"257\":1,\"262\":1,\"263\":1,\"526\":1,\"596\":1,\"763\":1,\"770\":1,\"775\":1,\"776\":1,\"1041\":1,\"1111\":1,\"1278\":1,\"1285\":1,\"1290\":1,\"1291\":1,\"1556\":1}}],[\"消息中包含\",{\"1\":{\"50\":1,\"560\":1,\"1075\":1}}],[\"才会触发该响应器\",{\"1\":{\"86\":1,\"596\":1,\"1111\":1}}],[\"只需要数据库模式与模型定义一致即可\",{\"1\":{\"2686\":1,\"2701\":1,\"2716\":1}}],[\"只需要执行以下命令\",{\"1\":{\"1928\":1,\"1929\":1,\"2297\":1,\"2298\":1,\"2666\":1,\"2667\":1}}],[\"只需要掌握部分功能即可\",{\"1\":{\"1926\":1,\"2295\":1,\"2664\":1}}],[\"只需要继承并实现\",{\"1\":{\"82\":1,\"592\":1,\"1107\":1}}],[\"只要有一个\",{\"1\":{\"328\":1,\"843\":1,\"1358\":1}}],[\"只有当希望\",{\"1\":{\"1590\":1,\"1971\":1,\"2340\":1}}],[\"只有当所有\",{\"1\":{\"346\":1,\"427\":1,\"861\":1,\"942\":1,\"1376\":1,\"1457\":1}}],[\"只有消息序列中的文本类型消息段才能被格式化\",{\"1\":{\"545\":1,\"1060\":1,\"1575\":1}}],[\"只有一个类型为\",{\"1\":{\"473\":2,\"988\":2,\"1503\":2}}],[\"只有在开启\",{\"1\":{\"457\":1,\"972\":1,\"1487\":1}}],[\"只有在接收到的事件类型与该响应器的类型相同时\",{\"1\":{\"86\":1,\"596\":1,\"1111\":1}}],[\"只有插件开发者才需要关心这些信息\",{\"1\":{\"110\":1,\"620\":1,\"1135\":1}}],[\"类作为依赖\",{\"1\":{\"2688\":1,\"2703\":1,\"2718\":1}}],[\"类直接构建模板\",{\"1\":{\"545\":1,\"1060\":1,\"1575\":1}}],[\"类可以直接实例化\",{\"1\":{\"536\":1,\"1051\":1,\"1566\":1}}],[\"类似于\",{\"1\":{\"1913\":1,\"2282\":1,\"2651\":1}}],[\"类似于函数中的\",{\"1\":{\"1898\":3,\"2267\":3,\"2636\":3}}],[\"类似的方式来处理消息序列\",{\"1\":{\"534\":1,\"1049\":1,\"1564\":1}}],[\"类似\",{\"1\":{\"494\":1,\"498\":1,\"1009\":1,\"1013\":1,\"1524\":1,\"1528\":1,\"1894\":1,\"2263\":1,\"2632\":1}}],[\"类属性装饰器\",{\"1\":{\"414\":1,\"929\":1,\"1444\":1}}],[\"类中\",{\"1\":{\"165\":1,\"675\":1,\"1190\":1}}],[\"类来创建一个新的事件响应器\",{\"1\":{\"84\":1,\"594\":1,\"1109\":1}}],[\"类型标注决定依赖注入的数据结构\",{\"1\":{\"2696\":1,\"2711\":1,\"2726\":1}}],[\"类型标注\",{\"0\":{\"2696\":1,\"2711\":1,\"2726\":1}}],[\"类型头\",{\"1\":{\"1894\":1,\"2263\":1,\"2632\":1}}],[\"类型通常为\",{\"1\":{\"1587\":1,\"1968\":1,\"2337\":1}}],[\"类型切片\",{\"1\":{\"543\":1,\"1058\":1,\"1573\":1}}],[\"类型索引\",{\"1\":{\"543\":1,\"1058\":1,\"1573\":1}}],[\"类型过滤\",{\"1\":{\"543\":1,\"1058\":1,\"1573\":1}}],[\"类型检查与推导\",{\"1\":{\"501\":1,\"1016\":1,\"1531\":1}}],[\"类型本身\",{\"1\":{\"479\":2,\"994\":2,\"1509\":2}}],[\"类型特殊标签\",{\"1\":{\"398\":1,\"913\":1,\"1428\":1}}],[\"类型包含的所有值\",{\"1\":{\"377\":1,\"892\":1,\"1407\":1}}],[\"类型事件\",{\"1\":{\"340\":1,\"341\":1,\"342\":1,\"343\":1,\"855\":1,\"856\":1,\"857\":1,\"858\":1,\"1370\":1,\"1371\":1,\"1372\":1,\"1373\":1}}],[\"类型参数\",{\"1\":{\"307\":1,\"820\":1,\"1335\":1}}],[\"类型校验\",{\"1\":{\"297\":1,\"815\":1,\"1330\":1}}],[\"类型等级或等级名称\",{\"1\":{\"169\":1,\"679\":1,\"1194\":1}}],[\"类型的值\",{\"1\":{\"1897\":2,\"2266\":2,\"2635\":2}}],[\"类型的新事件响应器\",{\"1\":{\"527\":1,\"1042\":1,\"1557\":1}}],[\"类型的数据\",{\"1\":{\"476\":2,\"991\":2,\"1506\":2}}],[\"类型的依赖函数\",{\"1\":{\"426\":1,\"941\":1,\"1456\":1}}],[\"类型的权限检查函数\",{\"1\":{\"329\":1,\"331\":1,\"332\":1,\"844\":1,\"849\":1,\"850\":1,\"1359\":1,\"1364\":1,\"1365\":1}}],[\"类型的事件\",{\"1\":{\"139\":1,\"649\":1,\"1164\":1}}],[\"类型的事件响应器都会阻断事件传递\",{\"1\":{\"90\":1,\"600\":1,\"1115\":1}}],[\"类型的\",{\"1\":{\"124\":1,\"634\":1,\"1149\":1}}],[\"类型为\",{\"1\":{\"120\":4,\"121\":3,\"630\":4,\"631\":3,\"1145\":4,\"1146\":3,\"1612\":2,\"1981\":2,\"2350\":2}}],[\"类型或者具体的字符串\",{\"1\":{\"99\":1,\"609\":1,\"1124\":1}}],[\"类型\",{\"1\":{\"57\":1,\"58\":1,\"60\":1,\"61\":1,\"62\":1,\"63\":1,\"64\":1,\"65\":1,\"66\":1,\"67\":1,\"68\":1,\"69\":1,\"70\":1,\"72\":1,\"73\":1,\"74\":1,\"75\":1,\"76\":1,\"77\":1,\"78\":1,\"79\":1,\"80\":1,\"142\":1,\"145\":1,\"147\":1,\"149\":1,\"150\":1,\"151\":1,\"164\":1,\"166\":1,\"167\":1,\"168\":1,\"169\":1,\"170\":1,\"171\":1,\"172\":1,\"173\":1,\"174\":1,\"175\":1,\"177\":1,\"178\":1,\"179\":1,\"180\":1,\"181\":1,\"182\":1,\"183\":1,\"184\":1,\"185\":1,\"186\":1,\"187\":1,\"188\":1,\"189\":1,\"190\":1,\"191\":1,\"192\":1,\"193\":1,\"194\":1,\"220\":1,\"221\":1,\"227\":1,\"231\":1,\"234\":1,\"235\":1,\"236\":1,\"237\":1,\"238\":1,\"239\":1,\"240\":1,\"241\":1,\"273\":1,\"286\":1,\"334\":1,\"340\":1,\"341\":1,\"342\":1,\"343\":1,\"345\":1,\"348\":1,\"376\":1,\"378\":1,\"379\":1,\"382\":2,\"383\":1,\"384\":1,\"385\":1,\"386\":1,\"387\":2,\"388\":2,\"389\":2,\"390\":2,\"391\":1,\"392\":1,\"393\":1,\"394\":1,\"395\":1,\"396\":1,\"401\":3,\"456\":1,\"457\":1,\"458\":1,\"567\":1,\"568\":1,\"570\":1,\"571\":1,\"572\":1,\"573\":1,\"574\":1,\"575\":1,\"576\":1,\"577\":1,\"578\":1,\"579\":1,\"580\":1,\"582\":1,\"583\":1,\"584\":1,\"585\":1,\"586\":1,\"587\":1,\"588\":1,\"589\":1,\"590\":1,\"652\":1,\"655\":1,\"657\":1,\"659\":1,\"660\":1,\"661\":1,\"674\":1,\"676\":1,\"677\":1,\"678\":1,\"679\":1,\"680\":1,\"681\":1,\"682\":1,\"683\":1,\"684\":1,\"685\":1,\"687\":1,\"688\":1,\"689\":1,\"690\":1,\"691\":1,\"692\":1,\"693\":1,\"694\":1,\"695\":1,\"696\":1,\"697\":1,\"698\":1,\"699\":1,\"700\":1,\"701\":1,\"702\":1,\"703\":1,\"704\":1,\"705\":1,\"706\":1,\"732\":1,\"733\":1,\"739\":1,\"743\":1,\"745\":1,\"747\":1,\"748\":1,\"749\":1,\"750\":1,\"751\":1,\"752\":1,\"753\":1,\"754\":1,\"798\":1,\"846\":1,\"855\":1,\"856\":1,\"857\":1,\"858\":1,\"860\":1,\"863\":1,\"891\":1,\"893\":1,\"894\":1,\"897\":2,\"898\":1,\"899\":1,\"900\":1,\"901\":1,\"902\":2,\"903\":2,\"904\":2,\"905\":2,\"906\":1,\"907\":1,\"908\":1,\"909\":1,\"910\":1,\"911\":1,\"916\":3,\"971\":1,\"972\":1,\"973\":1,\"1082\":1,\"1083\":1,\"1085\":1,\"1086\":1,\"1087\":1,\"1088\":1,\"1089\":1,\"1090\":1,\"1091\":1,\"1092\":1,\"1093\":1,\"1094\":1,\"1095\":1,\"1097\":1,\"1098\":1,\"1099\":1,\"1100\":1,\"1101\":1,\"1102\":1,\"1103\":1,\"1104\":1,\"1105\":1,\"1167\":1,\"1170\":1,\"1172\":1,\"1174\":1,\"1175\":1,\"1176\":1,\"1189\":1,\"1191\":1,\"1192\":1,\"1193\":1,\"1194\":1,\"1195\":1,\"1196\":1,\"1197\":1,\"1198\":1,\"1199\":1,\"1200\":1,\"1202\":1,\"1203\":1,\"1204\":1,\"1205\":1,\"1206\":1,\"1207\":1,\"1208\":1,\"1209\":1,\"1210\":1,\"1211\":1,\"1212\":1,\"1213\":1,\"1214\":1,\"1215\":1,\"1216\":1,\"1217\":1,\"1218\":1,\"1219\":1,\"1220\":1,\"1221\":1,\"1247\":1,\"1248\":1,\"1254\":1,\"1258\":1,\"1260\":1,\"1262\":1,\"1263\":1,\"1264\":1,\"1265\":1,\"1266\":1,\"1267\":1,\"1268\":1,\"1269\":1,\"1313\":1,\"1361\":1,\"1370\":1,\"1371\":1,\"1372\":1,\"1373\":1,\"1375\":1,\"1378\":1,\"1406\":1,\"1408\":1,\"1409\":1,\"1412\":2,\"1413\":1,\"1414\":1,\"1415\":1,\"1416\":1,\"1417\":2,\"1418\":2,\"1419\":2,\"1420\":2,\"1421\":1,\"1422\":1,\"1423\":1,\"1424\":1,\"1425\":1,\"1426\":1,\"1431\":3,\"1486\":1,\"1487\":1,\"1488\":1,\"1578\":1,\"1579\":1,\"1580\":1,\"1581\":1,\"1597\":1,\"1598\":1,\"1600\":1,\"1627\":1,\"1628\":1,\"1678\":1,\"1679\":1,\"1680\":1,\"1681\":1,\"1682\":1,\"1683\":1,\"1684\":1,\"1685\":1,\"1686\":1,\"1687\":1,\"1689\":1,\"1690\":1,\"1691\":1,\"1692\":1,\"1715\":1,\"1717\":1,\"1718\":1,\"1719\":1,\"1721\":1,\"1722\":1,\"1738\":1,\"1739\":1,\"1743\":1,\"1755\":1,\"1756\":1,\"1767\":1,\"1768\":1,\"1773\":1,\"1774\":1,\"1775\":1,\"1776\":1,\"1777\":1,\"1778\":1,\"1780\":1,\"1781\":1,\"1782\":1,\"1783\":1,\"1827\":1,\"1828\":1,\"1829\":1,\"1830\":1,\"1840\":1,\"1841\":1,\"1842\":1,\"1843\":1,\"1844\":1,\"1845\":1,\"1846\":1,\"1847\":1,\"1850\":1,\"1851\":1,\"1852\":1,\"1853\":1,\"1854\":1,\"1855\":1,\"1856\":1,\"1857\":1,\"1897\":3,\"1916\":1,\"1917\":1,\"1918\":1,\"1919\":1,\"1920\":1,\"1921\":1,\"1922\":1,\"1923\":1,\"1924\":1,\"1925\":1,\"1947\":1,\"1948\":1,\"1950\":1,\"1959\":1,\"1960\":1,\"1961\":1,\"1962\":1,\"1996\":1,\"1997\":1,\"2047\":1,\"2048\":1,\"2049\":1,\"2050\":1,\"2051\":1,\"2052\":1,\"2053\":1,\"2054\":1,\"2055\":1,\"2056\":1,\"2058\":1,\"2059\":1,\"2060\":1,\"2061\":1,\"2084\":1,\"2085\":1,\"2096\":1,\"2097\":1,\"2098\":1,\"2100\":1,\"2101\":1,\"2107\":1,\"2115\":1,\"2118\":1,\"2121\":1,\"2136\":1,\"2137\":1,\"2142\":1,\"2143\":1,\"2144\":1,\"2145\":1,\"2146\":1,\"2147\":1,\"2149\":1,\"2150\":1,\"2151\":1,\"2152\":1,\"2196\":1,\"2197\":1,\"2198\":1,\"2199\":1,\"2209\":1,\"2210\":1,\"2211\":1,\"2212\":1,\"2213\":1,\"2214\":1,\"2215\":1,\"2216\":1,\"2219\":1,\"2220\":1,\"2221\":1,\"2222\":1,\"2223\":1,\"2224\":1,\"2225\":1,\"2226\":1,\"2266\":3,\"2285\":1,\"2286\":1,\"2287\":1,\"2288\":1,\"2289\":1,\"2290\":1,\"2291\":1,\"2292\":1,\"2293\":1,\"2294\":1,\"2316\":1,\"2317\":1,\"2319\":1,\"2328\":1,\"2329\":1,\"2330\":1,\"2331\":1,\"2365\":1,\"2366\":1,\"2416\":1,\"2417\":1,\"2418\":1,\"2419\":1,\"2420\":1,\"2421\":1,\"2422\":1,\"2423\":1,\"2424\":1,\"2425\":1,\"2427\":1,\"2428\":1,\"2429\":1,\"2430\":1,\"2453\":1,\"2454\":1,\"2465\":1,\"2466\":1,\"2467\":1,\"2469\":1,\"2470\":1,\"2476\":1,\"2484\":1,\"2487\":1,\"2490\":1,\"2505\":1,\"2506\":1,\"2511\":1,\"2512\":1,\"2513\":1,\"2514\":1,\"2515\":1,\"2516\":1,\"2518\":1,\"2519\":1,\"2520\":1,\"2521\":1,\"2565\":1,\"2566\":1,\"2567\":1,\"2568\":1,\"2578\":1,\"2579\":1,\"2580\":1,\"2581\":1,\"2582\":1,\"2583\":1,\"2584\":1,\"2585\":1,\"2588\":1,\"2589\":1,\"2590\":1,\"2591\":1,\"2592\":1,\"2593\":1,\"2594\":1,\"2595\":1,\"2635\":3,\"2654\":1,\"2655\":1,\"2656\":1,\"2657\":1,\"2658\":1,\"2659\":1,\"2660\":1,\"2661\":1,\"2662\":1,\"2663\":1}}],[\"与之关联也不会被替换\",{\"1\":{\"1897\":1,\"2266\":1,\"2635\":1}}],[\"与之关联\",{\"1\":{\"1897\":1,\"2266\":1,\"2635\":1}}],[\"与命令名\",{\"1\":{\"1894\":1,\"2263\":1,\"2632\":1}}],[\"与普通的\",{\"1\":{\"1873\":1,\"1890\":1,\"2242\":1,\"2259\":1,\"2611\":1,\"2628\":1}}],[\"与平台建立连接和进行交互\",{\"1\":{\"471\":1,\"986\":1,\"1501\":1}}],[\"与平台交互\",{\"0\":{\"471\":1,\"986\":1,\"1501\":1}}],[\"与\",{\"0\":{\"1898\":1,\"2267\":1,\"2636\":1},\"1\":{\"141\":1,\"228\":1,\"242\":1,\"428\":1,\"492\":1,\"505\":1,\"651\":1,\"740\":1,\"755\":1,\"943\":1,\"1007\":1,\"1020\":1,\"1166\":1,\"1255\":1,\"1270\":1,\"1458\":1,\"1522\":1,\"1535\":1,\"1614\":1,\"1615\":1,\"1894\":1,\"1897\":2,\"1898\":2,\"1900\":2,\"1910\":1,\"1983\":1,\"1984\":1,\"2263\":1,\"2266\":2,\"2267\":2,\"2269\":2,\"2279\":1,\"2352\":1,\"2353\":1,\"2632\":1,\"2635\":2,\"2636\":2,\"2638\":2,\"2648\":1}}],[\"与机器人用户进行的会话都是通过消息事件进行的\",{\"1\":{\"139\":1,\"649\":1,\"1164\":1}}],[\"与插件索引名称无关\",{\"1\":{\"110\":1,\"620\":1,\"1135\":1}}],[\"与第三方响应规则拓展\",{\"1\":{\"84\":1,\"594\":1,\"1109\":1}}],[\"与群聊\",{\"1\":{\"47\":1,\"557\":1,\"1072\":1}}],[\"对了\",{\"1\":{\"2686\":1,\"2701\":1,\"2716\":1}}],[\"对我们的代码做的事情那样\",{\"1\":{\"2686\":1,\"2701\":1,\"2716\":1}}],[\"对头\",{\"1\":{\"1894\":1,\"2263\":1,\"2632\":1}}],[\"对接\",{\"1\":{\"505\":1,\"1020\":1,\"1535\":1}}],[\"对文档整体视觉体验进行重新设计\",{\"1\":{\"503\":1,\"1018\":1,\"1533\":1}}],[\"对文档的优雅性与美观性有追求更佳\",{\"1\":{\"491\":1,\"1006\":1,\"1521\":1}}],[\"对事件进行某些预处理\",{\"1\":{\"477\":1,\"992\":1,\"1507\":1}}],[\"对事件进行处理\",{\"1\":{\"475\":2,\"477\":1,\"990\":2,\"992\":1,\"1505\":2,\"1507\":1}}],[\"对事件的处理行为\",{\"1\":{\"81\":1,\"591\":1,\"1106\":1}}],[\"对不同类型的事件需要做出不同的处理\",{\"1\":{\"422\":1,\"937\":1,\"1452\":1}}],[\"对应\",{\"1\":{\"222\":1,\"734\":1,\"1249\":1}}],[\"对应的\",{\"1\":{\"220\":1,\"221\":1,\"476\":1,\"732\":1,\"733\":1,\"991\":1,\"1247\":1,\"1248\":1,\"1506\":1}}],[\"对当前\",{\"1\":{\"209\":1,\"721\":1,\"1236\":1}}],[\"对于用户而言\",{\"1\":{\"1926\":1,\"2295\":1,\"2664\":1}}],[\"对于命令\",{\"1\":{\"1900\":1,\"2269\":1,\"2638\":1}}],[\"对于参数的注释也可以标记在\",{\"1\":{\"1896\":1,\"2265\":1,\"2634\":1}}],[\"对于无前缀的类型头\",{\"1\":{\"1894\":1,\"2263\":1,\"2632\":1}}],[\"对于未有一定开发经验的用户\",{\"1\":{\"499\":1,\"1014\":1,\"1529\":1}}],[\"对于嵌套插件\",{\"1\":{\"435\":1,\"950\":1,\"1465\":1}}],[\"对于\",{\"1\":{\"120\":1,\"121\":1,\"630\":1,\"631\":1,\"1145\":1,\"1146\":1}}],[\"对于在项目目录下的插件\",{\"1\":{\"116\":1,\"626\":1,\"1141\":1}}],[\"对象进行清理\",{\"1\":{\"1941\":1,\"2310\":1,\"2679\":1}}],[\"对象进行合并\",{\"1\":{\"428\":1,\"943\":1,\"1458\":1}}],[\"对象是否创建等途径来验证机器人是否正确运行\",{\"1\":{\"1941\":1,\"2310\":1,\"2679\":1}}],[\"对象作为消息模板并输出消息对象\",{\"1\":{\"1609\":1,\"1978\":1,\"2347\":1}}],[\"对象之间可以直接相加\",{\"1\":{\"544\":1,\"1059\":1,\"1574\":1}}],[\"对象支持\",{\"1\":{\"538\":1,\"1053\":1,\"1568\":1}}],[\"对象来加载插件\",{\"1\":{\"517\":1,\"1032\":1,\"1547\":1}}],[\"对象来组合多个\",{\"1\":{\"428\":1,\"943\":1,\"1458\":1}}],[\"对象的方法来记录日志\",{\"1\":{\"419\":1,\"934\":1,\"1449\":1}}],[\"对象里\",{\"1\":{\"224\":1,\"736\":1,\"1251\":1}}],[\"对象为值的字典\",{\"1\":{\"223\":1,\"735\":1,\"1250\":1}}],[\"对象不是\",{\"1\":{\"220\":1,\"221\":1,\"732\":1,\"733\":1,\"1247\":1,\"1248\":1}}],[\"对象尚未初始化\",{\"1\":{\"217\":1,\"218\":1,\"219\":1,\"220\":1,\"221\":1,\"222\":1,\"223\":1,\"729\":1,\"730\":1,\"731\":1,\"732\":1,\"733\":1,\"734\":1,\"735\":1,\"1244\":1,\"1245\":1,\"1246\":1,\"1247\":1,\"1248\":1,\"1249\":1,\"1250\":1}}],[\"对象调用平台接口后运行\",{\"1\":{\"137\":1,\"647\":1,\"1162\":1}}],[\"对象调用平台接口并返回指定的结果\",{\"1\":{\"136\":1,\"646\":1,\"1161\":1}}],[\"对象调用平台接口时运行\",{\"1\":{\"136\":1,\"646\":1,\"1161\":1}}],[\"对象至\",{\"1\":{\"129\":1,\"639\":1,\"1154\":1}}],[\"对象中存储了插件系统所需要的一系列信息\",{\"1\":{\"110\":1,\"620\":1,\"1135\":1}}],[\"对象或者\",{\"1\":{\"93\":2,\"603\":2,\"1118\":2}}],[\"对象都具有一个\",{\"1\":{\"40\":1,\"550\":1,\"1065\":1}}],[\"对象可以通过\",{\"1\":{\"40\":1,\"537\":1,\"550\":1,\"1052\":1,\"1065\":1,\"1567\":1}}],[\"对象\",{\"0\":{\"40\":1,\"550\":1,\"1065\":1},\"1\":{\"40\":2,\"87\":1,\"88\":1,\"91\":1,\"92\":1,\"129\":1,\"130\":1,\"132\":1,\"133\":1,\"134\":1,\"135\":1,\"217\":1,\"218\":2,\"220\":2,\"221\":2,\"222\":2,\"223\":1,\"224\":1,\"225\":1,\"244\":1,\"245\":1,\"252\":1,\"253\":1,\"254\":1,\"255\":1,\"256\":1,\"257\":1,\"292\":2,\"293\":2,\"331\":1,\"335\":2,\"349\":2,\"365\":1,\"383\":1,\"384\":1,\"387\":3,\"388\":3,\"389\":4,\"390\":4,\"391\":3,\"392\":2,\"394\":4,\"395\":4,\"419\":1,\"425\":1,\"429\":1,\"476\":3,\"478\":1,\"530\":1,\"544\":1,\"550\":2,\"597\":1,\"598\":1,\"601\":1,\"602\":1,\"639\":1,\"640\":1,\"642\":1,\"643\":1,\"644\":1,\"645\":1,\"729\":1,\"730\":2,\"732\":2,\"733\":2,\"734\":2,\"735\":1,\"736\":1,\"737\":1,\"757\":1,\"758\":1,\"765\":1,\"766\":1,\"767\":1,\"768\":1,\"769\":1,\"770\":1,\"804\":2,\"805\":2,\"847\":2,\"849\":1,\"864\":2,\"880\":1,\"898\":1,\"899\":1,\"902\":3,\"903\":3,\"904\":4,\"905\":4,\"906\":3,\"907\":2,\"909\":4,\"910\":4,\"934\":1,\"940\":1,\"944\":1,\"991\":3,\"993\":1,\"1045\":1,\"1059\":1,\"1065\":2,\"1112\":1,\"1113\":1,\"1116\":1,\"1117\":1,\"1154\":1,\"1155\":1,\"1157\":1,\"1158\":1,\"1159\":1,\"1160\":1,\"1244\":1,\"1245\":2,\"1247\":2,\"1248\":2,\"1249\":2,\"1250\":1,\"1251\":1,\"1252\":1,\"1272\":1,\"1273\":1,\"1280\":1,\"1281\":1,\"1282\":1,\"1283\":1,\"1284\":1,\"1285\":1,\"1319\":2,\"1320\":2,\"1362\":2,\"1364\":1,\"1379\":2,\"1395\":1,\"1413\":1,\"1414\":1,\"1417\":3,\"1418\":3,\"1419\":4,\"1420\":4,\"1421\":3,\"1422\":2,\"1424\":4,\"1425\":4,\"1449\":1,\"1455\":1,\"1459\":1,\"1506\":3,\"1508\":1,\"1560\":1,\"1574\":1,\"1584\":1,\"1585\":1,\"1648\":1,\"1690\":1,\"1691\":1,\"1716\":2,\"1726\":1,\"1727\":1,\"1738\":1,\"1739\":1,\"1781\":1,\"1782\":1,\"1873\":1,\"1878\":1,\"1890\":1,\"1897\":1,\"1965\":1,\"1966\":1,\"2017\":1,\"2059\":1,\"2060\":1,\"2084\":1,\"2085\":1,\"2095\":2,\"2105\":1,\"2106\":1,\"2150\":1,\"2151\":1,\"2242\":1,\"2247\":1,\"2259\":1,\"2266\":1,\"2334\":1,\"2335\":1,\"2386\":1,\"2428\":1,\"2429\":1,\"2453\":1,\"2454\":1,\"2464\":2,\"2474\":1,\"2475\":1,\"2519\":1,\"2520\":1,\"2611\":1,\"2616\":1,\"2628\":1,\"2635\":1}}],[\"对象并注册到\",{\"1\":{\"37\":1,\"470\":1,\"547\":1,\"985\":1,\"1062\":1,\"1500\":1}}],[\"295\",{\"1\":{\"497\":1,\"1012\":1,\"1527\":1}}],[\"2024\",{\"0\":{\"502\":1,\"1017\":1,\"1532\":1},\"1\":{\"502\":1,\"1017\":1,\"1532\":1}}],[\"2023\",{\"0\":{\"498\":1,\"1013\":1,\"1528\":1},\"1\":{\"498\":1,\"1013\":1,\"1528\":1}}],[\"2022\",{\"0\":{\"494\":1,\"1009\":1,\"1524\":1},\"1\":{\"494\":1,\"1009\":1,\"1524\":1}}],[\"2021\",{\"0\":{\"482\":1,\"997\":1,\"1512\":1},\"1\":{\"482\":1,\"997\":1,\"1512\":1}}],[\"20\",{\"1\":{\"457\":1,\"972\":1,\"1487\":1}}],[\"2006\",{\"1\":{\"2686\":1,\"2701\":1,\"2716\":1}}],[\"200\",{\"1\":{\"120\":2,\"630\":2,\"1145\":2,\"1941\":1,\"2310\":1,\"2679\":1}}],[\"2\",{\"1\":{\"78\":1,\"218\":1,\"259\":1,\"261\":1,\"262\":1,\"265\":1,\"278\":1,\"319\":1,\"363\":1,\"408\":1,\"449\":1,\"454\":4,\"487\":3,\"534\":1,\"543\":3,\"588\":1,\"730\":1,\"772\":1,\"774\":1,\"775\":1,\"778\":1,\"790\":1,\"832\":1,\"878\":1,\"923\":1,\"964\":1,\"969\":4,\"1002\":3,\"1049\":1,\"1058\":3,\"1103\":1,\"1245\":1,\"1287\":1,\"1289\":1,\"1290\":1,\"1293\":1,\"1305\":1,\"1347\":1,\"1393\":1,\"1438\":1,\"1479\":1,\"1484\":4,\"1517\":3,\"1564\":1,\"1573\":3,\"1612\":1,\"1752\":1,\"1757\":1,\"1894\":1,\"1936\":1,\"1981\":1,\"2113\":1,\"2133\":1,\"2263\":1,\"2305\":1,\"2350\":1,\"2482\":1,\"2502\":1,\"2632\":1,\"2674\":1}}],[\"拥有以下条目\",{\"1\":{\"1903\":1,\"2272\":1,\"2641\":1}}],[\"拥有一个\",{\"1\":{\"328\":1,\"843\":1,\"1358\":1}}],[\"拥有与\",{\"1\":{\"70\":1,\"580\":1,\"1095\":1}}],[\"拥有大量的开发者为其开发插件\",{\"1\":{\"0\":1,\"12\":1,\"24\":1}}],[\"gcc\",{\"1\":{\"1910\":2,\"2279\":2,\"2648\":2}}],[\"gt\",{\"1\":{\"1894\":2,\"2263\":2,\"2632\":2}}],[\"graphql\",{\"1\":{\"504\":1,\"1019\":1,\"1534\":1}}],[\"groups=\",{\"1\":{\"1893\":1,\"2262\":1,\"2631\":1}}],[\"groups\",{\"1\":{\"319\":2,\"832\":2,\"1347\":2}}],[\"group2\",{\"1\":{\"319\":2,\"832\":2,\"1347\":2}}],[\"group1\",{\"1\":{\"319\":2,\"832\":2,\"1347\":2}}],[\"group=0\",{\"1\":{\"319\":1}}],[\"group\",{\"1\":{\"105\":7,\"106\":3,\"293\":1,\"319\":3,\"320\":1,\"321\":1,\"367\":2,\"410\":1,\"424\":3,\"615\":7,\"616\":3,\"805\":1,\"832\":4,\"833\":1,\"834\":1,\"882\":2,\"925\":1,\"939\":3,\"1130\":7,\"1131\":3,\"1320\":1,\"1347\":4,\"1348\":1,\"1349\":1,\"1397\":2,\"1440\":1,\"1454\":3}}],[\"groupmessageevent\",{\"1\":{\"103\":2,\"424\":2,\"613\":2,\"939\":2,\"1128\":2,\"1454\":2}}],[\"gsoc\",{\"1\":{\"494\":1,\"498\":1,\"1009\":1,\"1013\":1,\"1524\":1,\"1528\":1}}],[\"google\",{\"1\":{\"494\":1,\"498\":1,\"1009\":1,\"1013\":1,\"1524\":1,\"1528\":1}}],[\"go\",{\"1\":{\"484\":1,\"492\":1,\"493\":2,\"999\":1,\"1007\":1,\"1008\":2,\"1514\":1,\"1522\":1,\"1523\":2}}],[\"got\",{\"1\":{\"255\":1,\"256\":1,\"262\":1,\"263\":1,\"298\":1,\"419\":1,\"423\":2,\"431\":2,\"768\":1,\"769\":1,\"775\":1,\"776\":1,\"808\":1,\"934\":1,\"938\":2,\"946\":2,\"1283\":1,\"1284\":1,\"1290\":1,\"1291\":1,\"1323\":1,\"1449\":1,\"1453\":2,\"1461\":2,\"2687\":1,\"2702\":1,\"2717\":1}}],[\"git\",{\"1\":{\"484\":1,\"485\":1,\"487\":1,\"488\":1,\"489\":1,\"491\":1,\"504\":2,\"999\":1,\"1000\":1,\"1002\":1,\"1003\":1,\"1004\":1,\"1006\":1,\"1019\":2,\"1514\":1,\"1515\":1,\"1517\":1,\"1518\":1,\"1519\":1,\"1521\":1,\"1534\":2,\"2686\":1,\"2701\":1,\"2716\":1}}],[\"github\",{\"1\":{\"459\":1,\"485\":2,\"495\":2,\"496\":1,\"497\":3,\"499\":1,\"500\":1,\"501\":1,\"503\":1,\"504\":8,\"505\":1,\"974\":1,\"1000\":2,\"1010\":2,\"1011\":1,\"1012\":3,\"1014\":1,\"1015\":1,\"1016\":1,\"1018\":1,\"1019\":8,\"1020\":1,\"1489\":1,\"1515\":2,\"1525\":2,\"1526\":1,\"1527\":3,\"1529\":1,\"1530\":1,\"1531\":1,\"1533\":1,\"1534\":8,\"1535\":1,\"2697\":2,\"2712\":2,\"2727\":2}}],[\"given\",{\"1\":{\"152\":1,\"159\":1,\"160\":1,\"662\":1,\"669\":1,\"670\":1,\"1177\":1,\"1184\":1,\"1185\":1}}],[\"g>\",{\"1\":{\"420\":2,\"935\":2,\"1450\":2}}],[\"generated\",{\"1\":{\"2686\":5,\"2701\":5,\"2716\":5}}],[\"generator\",{\"1\":{\"161\":1,\"410\":1,\"671\":1,\"925\":1,\"1186\":1,\"1440\":1}}],[\"gen\",{\"1\":{\"297\":3,\"815\":3,\"1330\":3}}],[\"getattr\",{\"1\":{\"1639\":1,\"2008\":1,\"2377\":1}}],[\"get\",{\"1\":{\"38\":1,\"39\":5,\"40\":5,\"42\":1,\"43\":1,\"44\":1,\"45\":1,\"46\":1,\"47\":1,\"48\":1,\"49\":1,\"55\":3,\"64\":1,\"72\":1,\"111\":5,\"118\":2,\"120\":4,\"121\":2,\"123\":3,\"124\":3,\"127\":2,\"128\":2,\"129\":2,\"130\":2,\"153\":1,\"155\":1,\"156\":1,\"157\":1,\"209\":1,\"216\":7,\"217\":1,\"218\":1,\"219\":1,\"220\":1,\"221\":1,\"222\":4,\"223\":1,\"242\":1,\"423\":1,\"426\":2,\"427\":1,\"428\":2,\"431\":1,\"435\":7,\"470\":3,\"472\":4,\"473\":3,\"476\":2,\"478\":14,\"479\":2,\"492\":1,\"493\":1,\"509\":1,\"534\":1,\"543\":2,\"548\":1,\"549\":5,\"550\":5,\"552\":1,\"553\":1,\"554\":1,\"555\":1,\"556\":1,\"557\":1,\"558\":1,\"559\":1,\"565\":3,\"574\":1,\"582\":1,\"621\":5,\"628\":2,\"630\":4,\"631\":2,\"633\":3,\"634\":3,\"637\":2,\"638\":2,\"639\":2,\"640\":2,\"663\":1,\"665\":1,\"666\":1,\"667\":1,\"721\":1,\"728\":7,\"729\":1,\"730\":1,\"731\":1,\"732\":1,\"733\":1,\"734\":4,\"735\":1,\"755\":1,\"938\":1,\"941\":2,\"942\":1,\"943\":2,\"946\":1,\"950\":7,\"985\":3,\"987\":4,\"988\":3,\"991\":2,\"993\":14,\"994\":2,\"1007\":1,\"1008\":1,\"1024\":1,\"1049\":1,\"1058\":2,\"1063\":1,\"1064\":5,\"1065\":5,\"1067\":1,\"1068\":1,\"1069\":1,\"1070\":1,\"1071\":1,\"1072\":1,\"1073\":1,\"1074\":1,\"1080\":3,\"1089\":1,\"1097\":1,\"1136\":5,\"1143\":2,\"1145\":4,\"1146\":2,\"1148\":3,\"1149\":3,\"1152\":2,\"1153\":2,\"1154\":2,\"1155\":2,\"1178\":1,\"1180\":1,\"1181\":1,\"1182\":1,\"1236\":1,\"1243\":7,\"1244\":1,\"1245\":1,\"1246\":1,\"1247\":1,\"1248\":1,\"1249\":4,\"1250\":1,\"1270\":1,\"1453\":1,\"1456\":2,\"1457\":1,\"1458\":2,\"1461\":1,\"1465\":7,\"1500\":3,\"1502\":4,\"1503\":3,\"1506\":2,\"1508\":14,\"1509\":2,\"1522\":1,\"1523\":1,\"1539\":1,\"1564\":1,\"1573\":2,\"1594\":1,\"1860\":1,\"1861\":1,\"1941\":6,\"1942\":3,\"1975\":1,\"2229\":1,\"2230\":1,\"2310\":6,\"2311\":3,\"2344\":1,\"2598\":1,\"2599\":1,\"2679\":6,\"2680\":3,\"2687\":13,\"2691\":4,\"2692\":4,\"2694\":3,\"2695\":2,\"2702\":13,\"2706\":4,\"2707\":4,\"2709\":3,\"2710\":2,\"2717\":13,\"2721\":4,\"2722\":4,\"2724\":3,\"2725\":2}}],[\"global\",{\"0\":{\"1921\":1,\"2290\":1,\"2659\":1},\"1\":{\"1897\":3,\"2266\":3,\"2635\":3}}],[\"globalns\",{\"1\":{\"380\":1,\"895\":1,\"1410\":1,\"1656\":1,\"2025\":1,\"2394\":1}}],[\"glob\",{\"1\":{\"67\":1,\"68\":1,\"75\":1,\"76\":1,\"577\":1,\"578\":1,\"585\":1,\"586\":1,\"1092\":1,\"1093\":1,\"1100\":1,\"1101\":1,\"1685\":1,\"1686\":1,\"1776\":1,\"1777\":1,\"2054\":1,\"2055\":1,\"2145\":1,\"2146\":1,\"2423\":1,\"2424\":1,\"2514\":1,\"2515\":1}}],[\"支持类作为依赖\",{\"1\":{\"2694\":1,\"2709\":1,\"2724\":1}}],[\"支持如下\",{\"1\":{\"1902\":1,\"2271\":1,\"2640\":1}}],[\"支持的类型标注请参见\",{\"1\":{\"2688\":1,\"2703\":1,\"2718\":1}}],[\"支持的格式字符串\",{\"1\":{\"1897\":1,\"2266\":1,\"2635\":1}}],[\"支持的适配器模块名集合\",{\"1\":{\"110\":1,\"620\":1,\"1135\":1}}],[\"支持服务端请求的驱动器\",{\"1\":{\"1756\":1,\"2118\":1,\"2487\":1}}],[\"支持客户端请求的驱动器\",{\"1\":{\"1755\":1,\"2107\":1,\"2476\":1}}],[\"支持以\",{\"1\":{\"1609\":1,\"1978\":1,\"2347\":1}}],[\"支持对\",{\"1\":{\"505\":1,\"1020\":1,\"1535\":1}}],[\"支持对多种类型\",{\"1\":{\"505\":1,\"1020\":1,\"1535\":1}}],[\"支持等\",{\"1\":{\"493\":1,\"1008\":1,\"1523\":1}}],[\"支持依赖注入\",{\"1\":{\"129\":1,\"130\":1,\"132\":1,\"133\":1,\"134\":1,\"135\":1,\"426\":1,\"639\":1,\"640\":1,\"642\":1,\"643\":1,\"644\":1,\"645\":1,\"941\":1,\"1154\":1,\"1155\":1,\"1157\":1,\"1158\":1,\"1159\":1,\"1160\":1,\"1456\":1}}],[\"支持嵌套插件\",{\"1\":{\"112\":1,\"622\":1,\"1137\":1}}],[\"支持\",{\"1\":{\"67\":1,\"68\":1,\"75\":1,\"76\":1,\"100\":1,\"362\":1,\"444\":1,\"492\":1,\"536\":1,\"543\":1,\"577\":1,\"578\":1,\"585\":1,\"586\":1,\"610\":1,\"877\":1,\"959\":1,\"1007\":1,\"1051\":1,\"1058\":1,\"1092\":1,\"1093\":1,\"1100\":1,\"1101\":1,\"1125\":1,\"1392\":1,\"1474\":1,\"1522\":1,\"1566\":1,\"1573\":1,\"1685\":1,\"1686\":1,\"1776\":1,\"1777\":1,\"1928\":1,\"2054\":1,\"2055\":1,\"2145\":1,\"2146\":1,\"2297\":1,\"2423\":1,\"2424\":1,\"2514\":1,\"2515\":1,\"2666\":1,\"2688\":1,\"2703\":1,\"2718\":1}}],[\"功能强大且复杂\",{\"1\":{\"1926\":1,\"2295\":1,\"2664\":1}}],[\"功能框架\",{\"1\":{\"495\":2,\"1010\":2,\"1525\":2}}],[\"功能体验不佳\",{\"1\":{\"495\":1,\"1010\":1,\"1525\":1}}],[\"功能完整\",{\"1\":{\"118\":1,\"628\":1,\"1143\":1}}],[\"功能\",{\"1\":{\"64\":1,\"72\":1,\"574\":1,\"582\":1,\"1089\":1,\"1097\":1}}],[\"功能的实际来源\",{\"1\":{\"64\":1,\"574\":1,\"1089\":1}}],[\"异常信息\",{\"1\":{\"417\":1,\"932\":1,\"1447\":1}}],[\"异常对象\",{\"1\":{\"390\":1,\"905\":1,\"1420\":1}}],[\"异常\",{\"1\":{\"217\":1,\"218\":1,\"219\":1,\"220\":1,\"221\":1,\"222\":1,\"223\":1,\"365\":1,\"729\":1,\"730\":1,\"731\":1,\"732\":1,\"733\":1,\"734\":1,\"735\":1,\"880\":1,\"1244\":1,\"1245\":1,\"1246\":1,\"1247\":1,\"1248\":1,\"1249\":1,\"1250\":1,\"1395\":1,\"1590\":2,\"1615\":1,\"1823\":1,\"1824\":1,\"1971\":2,\"1984\":1,\"2192\":1,\"2193\":1,\"2340\":2,\"2353\":1,\"2561\":1,\"2562\":1}}],[\"异常来忽略平台接口返回的结果并返回指定的结果\",{\"1\":{\"137\":1,\"647\":1,\"1162\":1}}],[\"异常来阻止\",{\"1\":{\"136\":1,\"646\":1,\"1161\":1}}],[\"异常一般为\",{\"1\":{\"64\":1,\"574\":1,\"1089\":1}}],[\"异步上下文栈\",{\"1\":{\"244\":1,\"245\":1,\"292\":1,\"335\":1,\"349\":1,\"757\":1,\"758\":1,\"804\":1,\"847\":1,\"864\":1,\"1272\":1,\"1273\":1,\"1319\":1,\"1362\":1,\"1379\":1}}],[\"异步建立\",{\"1\":{\"53\":1,\"563\":1,\"1078\":1}}],[\"异步发送\",{\"1\":{\"53\":1,\"563\":1,\"1078\":1}}],[\"异步优先\",{\"0\":{\"2\":1,\"14\":1,\"26\":1}}],[\"有如下属性\",{\"1\":{\"1902\":1,\"2271\":1,\"2640\":1}}],[\"有\",{\"1\":{\"1901\":3,\"2270\":3,\"2639\":3}}],[\"有很多相似之处\",{\"1\":{\"532\":1,\"1047\":1,\"1562\":1}}],[\"有时候我们可能需要在不同插件之间调用功能\",{\"1\":{\"115\":1,\"625\":1,\"1140\":1}}],[\"有三个基本属性\",{\"1\":{\"110\":1,\"620\":1,\"1135\":1}}],[\"有效期\",{\"0\":{\"91\":1,\"601\":1,\"1116\":1}}],[\"有关其他插件加载的方式\",{\"1\":{\"524\":1,\"1039\":1,\"1554\":1}}],[\"有关\",{\"1\":{\"64\":1,\"574\":1,\"1089\":1}}],[\"有一种方法可以让你的代码声明它工作和使用所需要的东西\",{\"1\":{\"7\":1,\"19\":1,\"31\":1}}],[\"所实现的接口自动实现类似\",{\"1\":{\"492\":1,\"493\":1,\"1007\":1,\"1008\":1,\"1522\":1,\"1523\":1}}],[\"所获取的参数\",{\"1\":{\"298\":1,\"808\":1,\"1323\":1}}],[\"所提供的功能\",{\"1\":{\"117\":1,\"627\":1,\"1142\":1}}],[\"所有类型为\",{\"1\":{\"1612\":1,\"1981\":1,\"2350\":1}}],[\"所有平台消息在进入处理流程前需要转换为\",{\"1\":{\"478\":1,\"993\":1,\"1508\":1}}],[\"所有的事件响应器都继承自\",{\"1\":{\"526\":1,\"1041\":1,\"1556\":1}}],[\"所有的\",{\"1\":{\"208\":1,\"720\":1,\"1235\":1}}],[\"所有\",{\"1\":{\"196\":1,\"204\":1,\"219\":1,\"708\":1,\"716\":1,\"731\":1,\"1223\":1,\"1231\":1,\"1246\":1,\"1902\":1,\"2271\":1,\"2640\":1}}],[\"所有标注位于\",{\"1\":{\"108\":1,\"618\":1,\"1133\":1}}],[\"所有非\",{\"1\":{\"90\":1,\"600\":1,\"1115\":1}}],[\"所有驱动器模块都会包含一个\",{\"1\":{\"54\":1,\"564\":1,\"1079\":1}}],[\"所以可以这么编写\",{\"1\":{\"1900\":1,\"2269\":1,\"2638\":1}}],[\"所以你在使用的时候\",{\"1\":{\"545\":1,\"1060\":1,\"1575\":1}}],[\"所以你总是可以用和操作\",{\"1\":{\"534\":1,\"1049\":1,\"1564\":1}}],[\"所以\",{\"1\":{\"64\":1,\"532\":1,\"574\":1,\"1047\":1,\"1089\":1,\"1562\":1,\"2685\":1,\"2686\":3,\"2700\":1,\"2701\":3,\"2715\":1,\"2716\":3}}],[\"平台不支持运行独立服务\",{\"1\":{\"2697\":1,\"2712\":1,\"2727\":1}}],[\"平台有较多耦合\",{\"1\":{\"491\":1,\"1006\":1,\"1521\":1}}],[\"平台\",{\"1\":{\"444\":1,\"447\":1,\"959\":1,\"962\":1,\"1474\":1,\"1477\":1}}],[\"平台接口调用后钩子\",{\"0\":{\"137\":1,\"647\":1,\"1162\":1}}],[\"平台接口调用钩子\",{\"0\":{\"136\":1,\"646\":1,\"1161\":1}}],[\"平台的可使用性不如前者\",{\"1\":{\"64\":1,\"574\":1,\"1089\":1}}],[\"平台上开启该功能有可能会造成预料之外的影响\",{\"1\":{\"64\":1,\"72\":1,\"574\":1,\"582\":1,\"1089\":1,\"1097\":1}}],[\"14\",{\"1\":{\"2730\":1,\"2737\":1,\"2744\":1}}],[\"13\",{\"1\":{\"2729\":1,\"2736\":1,\"2743\":1}}],[\"11\",{\"1\":{\"2697\":2,\"2712\":2,\"2727\":2}}],[\"15\",{\"1\":{\"2686\":4,\"2701\":4,\"2716\":4,\"2728\":1,\"2735\":1,\"2742\":1}}],[\"10\",{\"1\":{\"457\":1,\"529\":1,\"972\":1,\"1044\":1,\"1487\":1,\"1559\":1,\"1938\":1,\"2307\":1,\"2676\":1,\"2697\":2,\"2712\":2,\"2727\":2}}],[\"100\",{\"1\":{\"449\":1,\"964\":1,\"1479\":1}}],[\"1070\",{\"1\":{\"64\":1,\"574\":1,\"1089\":1}}],[\"12\",{\"1\":{\"2697\":4,\"2712\":4,\"2727\":4,\"2731\":1,\"2738\":1,\"2745\":1}}],[\"127\",{\"1\":{\"225\":1,\"737\":1,\"1252\":1}}],[\"123456\",{\"1\":{\"545\":2,\"1060\":2,\"1575\":2}}],[\"12345\",{\"1\":{\"222\":2,\"734\":2,\"1249\":2}}],[\"12345789\",{\"1\":{\"171\":1,\"681\":1,\"1196\":1}}],[\"123\",{\"1\":{\"136\":1,\"137\":1,\"646\":1,\"647\":1,\"1161\":1,\"1162\":1,\"1894\":16,\"1914\":2,\"2263\":16,\"2283\":2,\"2632\":16,\"2652\":2}}],[\"1257\",{\"1\":{\"64\":1,\"574\":1,\"1089\":1}}],[\"1\",{\"1\":{\"78\":2,\"218\":1,\"225\":1,\"259\":1,\"261\":1,\"262\":1,\"265\":1,\"278\":1,\"319\":1,\"363\":1,\"408\":1,\"419\":1,\"420\":1,\"431\":2,\"449\":1,\"454\":3,\"543\":2,\"588\":2,\"730\":1,\"737\":1,\"772\":1,\"774\":1,\"775\":1,\"778\":1,\"790\":1,\"832\":1,\"878\":1,\"923\":1,\"934\":1,\"935\":1,\"946\":2,\"964\":1,\"969\":3,\"1058\":2,\"1103\":2,\"1245\":1,\"1252\":1,\"1287\":1,\"1289\":1,\"1290\":1,\"1293\":1,\"1305\":1,\"1347\":1,\"1393\":1,\"1438\":1,\"1449\":1,\"1450\":1,\"1461\":2,\"1479\":1,\"1484\":3,\"1573\":2,\"1612\":3,\"1752\":3,\"1757\":1,\"1900\":1,\"1901\":1,\"1909\":2,\"1981\":3,\"2113\":3,\"2133\":1,\"2269\":1,\"2270\":1,\"2278\":2,\"2350\":3,\"2482\":3,\"2502\":1,\"2638\":1,\"2639\":1,\"2647\":2,\"2696\":6,\"2711\":6,\"2726\":6}}],[\"5432\",{\"1\":{\"2697\":6,\"2712\":6,\"2727\":6}}],[\"5\",{\"1\":{\"1612\":1,\"1938\":1,\"1981\":1,\"2307\":1,\"2350\":1,\"2676\":1,\"2734\":1,\"2741\":1,\"2748\":1}}],[\"526\",{\"1\":{\"372\":1,\"887\":1,\"1402\":1}}],[\"529\",{\"1\":{\"64\":1,\"574\":1,\"1089\":1}}],[\"512\",{\"1\":{\"64\":1,\"574\":1,\"1089\":1}}],[\"561\",{\"1\":{\"8\":1,\"20\":1,\"32\":1}}],[\"底层\",{\"1\":{\"64\":1,\"574\":1,\"1089\":1}}],[\"rd123\",{\"1\":{\"1894\":1,\"2263\":1,\"2632\":1}}],[\"rd\",{\"1\":{\"1894\":1,\"2263\":1,\"2632\":1}}],[\"r和\",{\"1\":{\"1893\":1,\"2262\":1,\"2631\":1}}],[\"r|\",{\"1\":{\"1893\":1,\"1913\":1,\"2262\":1,\"2282\":1,\"2631\":1,\"2651\":1}}],[\"richardchien\",{\"1\":{\"491\":1,\"492\":1,\"493\":1,\"1006\":1,\"1007\":1,\"1008\":1,\"1521\":1,\"1522\":1,\"1523\":1}}],[\"r>\",{\"1\":{\"472\":3,\"987\":3,\"1502\":3}}],[\"row\",{\"1\":{\"2696\":21,\"2711\":21,\"2726\":21}}],[\"rows\",{\"1\":{\"2696\":13,\"2711\":13,\"2726\":13}}],[\"rollback\",{\"1\":{\"2691\":1,\"2692\":1,\"2706\":1,\"2707\":1,\"2721\":1,\"2722\":1}}],[\"roll\",{\"1\":{\"1894\":2,\"2263\":2,\"2632\":2}}],[\"room\",{\"1\":{\"478\":1,\"993\":1,\"1508\":1}}],[\"root\",{\"1\":{\"421\":1,\"936\":1,\"1451\":1,\"2697\":2,\"2712\":2,\"2727\":2}}],[\"roaming\",{\"1\":{\"439\":2,\"440\":3,\"954\":2,\"955\":3,\"1469\":2,\"1470\":3}}],[\"rotation=\",{\"1\":{\"420\":1,\"935\":1,\"1450\":1}}],[\"robustness\",{\"1\":{\"79\":1,\"589\":1,\"1104\":1}}],[\"rate\",{\"1\":{\"449\":1,\"964\":1,\"1479\":1}}],[\"rawstr\",{\"1\":{\"1897\":1,\"2266\":1,\"2635\":1}}],[\"rawurl\",{\"1\":{\"1735\":1,\"2116\":1,\"2485\":1}}],[\"raw\",{\"1\":{\"184\":1,\"696\":1,\"1211\":1}}],[\"rawcommand\",{\"1\":{\"99\":1,\"361\":1,\"365\":1,\"609\":1,\"876\":1,\"880\":1,\"1124\":1,\"1391\":1,\"1395\":1}}],[\"raise\",{\"1\":{\"132\":1,\"134\":1,\"136\":1,\"137\":1,\"472\":1,\"473\":1,\"478\":3,\"642\":1,\"644\":1,\"646\":1,\"647\":1,\"987\":1,\"988\":1,\"993\":3,\"1157\":1,\"1159\":1,\"1161\":1,\"1162\":1,\"1502\":1,\"1503\":1,\"1508\":3,\"1903\":1,\"1904\":1,\"2272\":1,\"2273\":1,\"2641\":1,\"2642\":1}}],[\"r\",{\"1\":{\"101\":3,\"367\":1,\"406\":2,\"408\":3,\"611\":3,\"882\":1,\"921\":2,\"923\":3,\"1126\":3,\"1397\":1,\"1436\":2,\"1438\":3,\"1649\":1,\"1651\":2,\"1913\":1,\"2018\":1,\"2020\":2,\"2282\":1,\"2387\":1,\"2389\":2,\"2651\":1,\"2697\":2,\"2712\":2,\"2727\":2}}],[\"rust\",{\"0\":{\"492\":1,\"1007\":1,\"1522\":1},\"1\":{\"492\":4,\"1007\":4,\"1522\":4}}],[\"rule>\",{\"1\":{\"527\":1,\"1042\":1,\"1557\":1}}],[\"rule2\",{\"1\":{\"428\":3,\"943\":3,\"1458\":3}}],[\"rule1\",{\"1\":{\"428\":3,\"943\":3,\"1458\":3}}],[\"rule=rule\",{\"1\":{\"427\":1,\"942\":1,\"1457\":1}}],[\"rule=is\",{\"1\":{\"426\":1,\"428\":1,\"941\":1,\"943\":1,\"1456\":1,\"1458\":1}}],[\"rule=to\",{\"1\":{\"106\":1,\"425\":1,\"428\":2,\"529\":1,\"616\":1,\"940\":1,\"943\":2,\"1044\":1,\"1131\":1,\"1455\":1,\"1458\":2,\"1559\":1}}],[\"rulechecker\",{\"0\":{\"426\":1,\"941\":1,\"1456\":1},\"1\":{\"93\":1,\"346\":2,\"347\":2,\"348\":1,\"391\":1,\"425\":2,\"426\":3,\"427\":4,\"428\":1,\"429\":1,\"603\":1,\"861\":2,\"862\":2,\"863\":1,\"906\":1,\"940\":2,\"941\":3,\"942\":4,\"943\":1,\"944\":1,\"1118\":1,\"1376\":2,\"1377\":2,\"1378\":1,\"1421\":1,\"1455\":2,\"1456\":3,\"1457\":4,\"1458\":1,\"1459\":1,\"1863\":1,\"1864\":1,\"1865\":1,\"1866\":1,\"1867\":1,\"1868\":1,\"1869\":1,\"1870\":1,\"1871\":1,\"1872\":1,\"1873\":1,\"1874\":1,\"1875\":1,\"1876\":1,\"1877\":1,\"1878\":1,\"1879\":1,\"1880\":1,\"1881\":1,\"1882\":1,\"1883\":1,\"1884\":1,\"1885\":1,\"1886\":1,\"1887\":1,\"1888\":1,\"1889\":1,\"1890\":1,\"1891\":1,\"1892\":1,\"2232\":1,\"2233\":1,\"2234\":1,\"2235\":1,\"2236\":1,\"2237\":1,\"2238\":1,\"2239\":1,\"2240\":1,\"2241\":1,\"2242\":1,\"2243\":1,\"2244\":1,\"2245\":1,\"2246\":1,\"2247\":1,\"2248\":1,\"2249\":1,\"2250\":1,\"2251\":1,\"2252\":1,\"2253\":1,\"2254\":1,\"2255\":1,\"2256\":1,\"2257\":1,\"2258\":1,\"2259\":1,\"2260\":1,\"2261\":1,\"2601\":1,\"2602\":1,\"2603\":1,\"2604\":1,\"2605\":1,\"2606\":1,\"2607\":1,\"2608\":1,\"2609\":1,\"2610\":1,\"2611\":1,\"2612\":1,\"2613\":1,\"2614\":1,\"2615\":1,\"2616\":1,\"2617\":1,\"2618\":1,\"2619\":1,\"2620\":1,\"2621\":1,\"2622\":1,\"2623\":1,\"2624\":1,\"2625\":1,\"2626\":1,\"2627\":1,\"2628\":1,\"2629\":1,\"2630\":1}}],[\"rule\",{\"0\":{\"346\":1,\"427\":1,\"861\":1,\"942\":1,\"1376\":1,\"1457\":1},\"1\":{\"88\":2,\"93\":2,\"95\":2,\"96\":2,\"97\":2,\"98\":2,\"99\":5,\"100\":3,\"101\":2,\"102\":2,\"103\":2,\"106\":1,\"235\":1,\"242\":2,\"346\":1,\"347\":2,\"353\":1,\"355\":1,\"357\":1,\"359\":1,\"361\":1,\"365\":3,\"367\":1,\"369\":1,\"371\":1,\"425\":1,\"427\":5,\"428\":11,\"429\":4,\"529\":1,\"598\":2,\"603\":2,\"605\":2,\"606\":2,\"607\":2,\"608\":2,\"609\":5,\"610\":3,\"611\":2,\"612\":2,\"613\":2,\"616\":1,\"748\":1,\"755\":2,\"861\":1,\"862\":2,\"868\":1,\"870\":1,\"872\":1,\"874\":1,\"876\":1,\"880\":3,\"882\":1,\"884\":1,\"886\":1,\"940\":1,\"942\":5,\"943\":11,\"944\":4,\"1044\":1,\"1113\":2,\"1118\":2,\"1120\":2,\"1121\":2,\"1122\":2,\"1123\":2,\"1124\":5,\"1125\":3,\"1126\":2,\"1127\":2,\"1128\":2,\"1131\":1,\"1263\":1,\"1270\":2,\"1376\":1,\"1377\":2,\"1383\":1,\"1385\":1,\"1387\":1,\"1389\":1,\"1391\":1,\"1395\":3,\"1397\":1,\"1399\":1,\"1401\":1,\"1455\":1,\"1457\":5,\"1458\":11,\"1459\":4,\"1559\":1,\"1863\":2,\"1864\":2,\"1865\":2,\"1866\":2,\"1867\":2,\"1868\":2,\"1869\":2,\"1870\":2,\"1871\":2,\"1872\":2,\"1873\":3,\"1874\":2,\"1875\":2,\"1876\":2,\"1877\":2,\"1878\":3,\"1879\":2,\"1880\":2,\"1881\":2,\"1882\":2,\"1883\":2,\"1884\":2,\"1885\":2,\"1886\":2,\"1887\":2,\"1888\":2,\"1889\":2,\"1890\":3,\"1891\":2,\"1892\":2,\"2232\":2,\"2233\":2,\"2234\":2,\"2235\":2,\"2236\":2,\"2237\":2,\"2238\":2,\"2239\":2,\"2240\":2,\"2241\":2,\"2242\":3,\"2243\":2,\"2244\":2,\"2245\":2,\"2246\":2,\"2247\":3,\"2248\":2,\"2249\":2,\"2250\":2,\"2251\":2,\"2252\":2,\"2253\":2,\"2254\":2,\"2255\":2,\"2256\":2,\"2257\":2,\"2258\":2,\"2259\":3,\"2260\":2,\"2261\":2,\"2601\":2,\"2602\":2,\"2603\":2,\"2604\":2,\"2605\":2,\"2606\":2,\"2607\":2,\"2608\":2,\"2609\":2,\"2610\":2,\"2611\":3,\"2612\":2,\"2613\":2,\"2614\":2,\"2615\":2,\"2616\":3,\"2617\":2,\"2618\":2,\"2619\":2,\"2620\":2,\"2621\":2,\"2622\":2,\"2623\":2,\"2624\":2,\"2625\":2,\"2626\":2,\"2627\":2,\"2628\":3,\"2629\":2,\"2630\":2}}],[\"runs\",{\"1\":{\"2697\":2,\"2712\":2,\"2727\":2}}],[\"runtimeerror\",{\"1\":{\"472\":1,\"473\":1,\"987\":1,\"988\":1,\"1502\":1,\"1503\":1,\"1823\":1,\"1824\":1,\"2192\":1,\"2193\":1,\"2561\":1,\"2562\":1}}],[\"runpostprocessor\",{\"1\":{\"291\":2,\"390\":1,\"803\":2,\"905\":1,\"1318\":2,\"1420\":1}}],[\"runpreprocessor\",{\"1\":{\"290\":2,\"389\":1,\"802\":2,\"904\":1,\"1317\":2,\"1419\":1}}],[\"run\",{\"1\":{\"64\":2,\"72\":2,\"134\":2,\"135\":2,\"200\":1,\"225\":3,\"454\":3,\"509\":2,\"510\":2,\"516\":1,\"574\":2,\"582\":2,\"644\":2,\"645\":2,\"712\":1,\"737\":3,\"969\":3,\"1024\":2,\"1025\":2,\"1031\":1,\"1089\":2,\"1097\":2,\"1159\":2,\"1160\":2,\"1227\":1,\"1252\":3,\"1484\":3,\"1539\":2,\"1540\":2,\"1546\":1,\"1928\":1,\"2297\":1,\"2666\":1,\"2686\":1,\"2697\":12,\"2701\":1,\"2712\":12,\"2716\":1,\"2727\":12}}],[\"revision\",{\"1\":{\"2686\":7,\"2701\":7,\"2716\":7}}],[\"reversemixin\",{\"1\":{\"1756\":2,\"2118\":2,\"2487\":2}}],[\"reversedriver\",{\"1\":{\"167\":1,\"168\":1,\"677\":1,\"678\":1,\"1192\":1,\"1193\":1}}],[\"reverse\",{\"1\":{\"53\":1,\"563\":1,\"1078\":1}}],[\"rep\",{\"1\":{\"1897\":1,\"2266\":1,\"2635\":1}}],[\"report\",{\"1\":{\"480\":1,\"995\":1,\"1510\":1}}],[\"repr\",{\"1\":{\"478\":1,\"993\":1,\"1508\":1}}],[\"release\",{\"1\":{\"449\":2,\"964\":2,\"1479\":2}}],[\"reload\",{\"1\":{\"64\":4,\"72\":3,\"510\":1,\"574\":4,\"582\":3,\"1025\":1,\"1089\":4,\"1097\":3,\"1540\":1}}],[\"remove\",{\"1\":{\"420\":1,\"935\":1,\"1450\":1}}],[\"refresh\",{\"1\":{\"2691\":1,\"2692\":1,\"2706\":1,\"2707\":1,\"2721\":1,\"2722\":1}}],[\"ref\",{\"1\":{\"380\":1,\"895\":1,\"1410\":1}}],[\"re\",{\"1\":{\"367\":1,\"882\":1,\"1397\":1,\"1874\":1,\"1891\":1,\"1894\":2,\"1897\":2,\"2243\":1,\"2260\":1,\"2263\":2,\"2266\":2,\"2612\":1,\"2629\":1,\"2632\":2,\"2635\":2}}],[\"recent\",{\"1\":{\"2686\":1,\"2701\":1,\"2716\":1}}],[\"receive\",{\"1\":{\"121\":1,\"177\":2,\"178\":2,\"255\":1,\"257\":1,\"259\":1,\"260\":1,\"261\":1,\"326\":1,\"327\":1,\"476\":3,\"631\":1,\"687\":2,\"688\":2,\"768\":1,\"770\":1,\"772\":1,\"773\":1,\"774\":1,\"839\":1,\"840\":1,\"841\":1,\"991\":3,\"1146\":1,\"1202\":2,\"1203\":2,\"1283\":1,\"1285\":1,\"1287\":1,\"1288\":1,\"1289\":1,\"1354\":1,\"1355\":1,\"1356\":1,\"1506\":3,\"1942\":1,\"2311\":1,\"2680\":1}}],[\"recycle\",{\"1\":{\"1938\":1,\"2307\":1,\"2676\":1}}],[\"reconnect\",{\"1\":{\"472\":2,\"987\":2,\"1502\":2}}],[\"record\",{\"1\":{\"229\":1,\"230\":2,\"741\":1,\"742\":2,\"1256\":1,\"1257\":2}}],[\"rejectedexception\",{\"1\":{\"195\":1,\"707\":1,\"1222\":1}}],[\"reject\",{\"1\":{\"180\":1,\"181\":1,\"206\":2,\"394\":1,\"395\":1,\"431\":1,\"690\":1,\"691\":1,\"693\":2,\"718\":2,\"909\":1,\"910\":1,\"946\":1,\"1205\":1,\"1206\":1,\"1208\":2,\"1233\":2,\"1424\":1,\"1425\":1,\"1461\":1}}],[\"react\",{\"1\":{\"503\":2,\"1018\":2,\"1533\":2}}],[\"read\",{\"1\":{\"435\":1,\"950\":1,\"1465\":1}}],[\"readme\",{\"1\":{\"110\":1,\"465\":1,\"515\":2,\"620\":1,\"980\":1,\"1030\":2,\"1135\":1,\"1495\":1,\"1545\":2}}],[\"reason\",{\"1\":{\"132\":1,\"134\":1,\"199\":1,\"642\":1,\"644\":1,\"711\":1,\"1157\":1,\"1159\":1,\"1226\":1,\"1669\":1,\"1698\":1,\"1745\":1,\"1789\":1,\"1801\":1,\"2038\":1,\"2067\":1,\"2123\":1,\"2158\":1,\"2170\":1,\"2407\":1,\"2436\":1,\"2492\":1,\"2527\":1,\"2539\":1}}],[\"returning\",{\"1\":{\"2695\":1,\"2710\":1,\"2725\":1}}],[\"return\",{\"1\":{\"120\":1,\"124\":1,\"139\":1,\"140\":2,\"297\":1,\"408\":5,\"426\":1,\"427\":2,\"428\":1,\"470\":1,\"473\":1,\"475\":2,\"476\":4,\"478\":9,\"479\":4,\"630\":1,\"634\":1,\"649\":1,\"650\":2,\"815\":1,\"923\":5,\"941\":1,\"942\":2,\"943\":1,\"985\":1,\"988\":1,\"990\":2,\"991\":4,\"993\":9,\"994\":4,\"1145\":1,\"1149\":1,\"1164\":1,\"1165\":2,\"1330\":1,\"1438\":5,\"1456\":1,\"1457\":2,\"1458\":1,\"1500\":1,\"1503\":1,\"1505\":2,\"1506\":4,\"1508\":9,\"1509\":4,\"2686\":2,\"2687\":2,\"2688\":1,\"2691\":1,\"2692\":1,\"2701\":2,\"2702\":2,\"2703\":1,\"2706\":1,\"2707\":1,\"2716\":2,\"2717\":2,\"2718\":1,\"2721\":1,\"2722\":1}}],[\"res\",{\"1\":{\"1893\":3,\"1913\":2,\"2262\":3,\"2282\":2,\"2631\":3,\"2651\":2}}],[\"rest\",{\"1\":{\"504\":1,\"1019\":1,\"1534\":1}}],[\"result\",{\"1\":{\"137\":3,\"202\":1,\"386\":1,\"429\":1,\"647\":3,\"692\":1,\"693\":1,\"714\":1,\"901\":1,\"944\":1,\"1162\":3,\"1207\":1,\"1208\":1,\"1229\":1,\"1416\":1,\"1459\":1,\"1585\":1,\"1913\":2,\"1966\":1,\"2282\":2,\"2335\":1,\"2651\":2,\"2696\":1,\"2711\":1,\"2726\":1}}],[\"result=\",{\"1\":{\"136\":1,\"137\":1,\"646\":1,\"647\":1,\"1161\":1,\"1162\":1,\"1893\":1,\"2262\":1,\"2631\":1}}],[\"response\",{\"1\":{\"120\":5,\"473\":3,\"630\":5,\"988\":3,\"1145\":5,\"1503\":3,\"1605\":1,\"1660\":1,\"1664\":1,\"1706\":1,\"1710\":1,\"1759\":1,\"1941\":3,\"1942\":2,\"1955\":1,\"2029\":1,\"2033\":1,\"2075\":1,\"2079\":1,\"2110\":1,\"2310\":3,\"2311\":2,\"2324\":1,\"2398\":1,\"2402\":1,\"2444\":1,\"2448\":1,\"2479\":1,\"2679\":3,\"2680\":2}}],[\"resolve\",{\"1\":{\"114\":1,\"480\":1,\"624\":1,\"995\":1,\"1139\":1,\"1510\":1}}],[\"requires=\",{\"1\":{\"1900\":1,\"2269\":1,\"2638\":1}}],[\"requires\",{\"1\":{\"1900\":1,\"2269\":1,\"2638\":1}}],[\"requirements\",{\"1\":{\"2697\":2,\"2712\":2,\"2727\":2}}],[\"requirement\",{\"1\":{\"1893\":1,\"1913\":5,\"2262\":1,\"2282\":5,\"2631\":1,\"2651\":5}}],[\"require\",{\"1\":{\"117\":6,\"216\":2,\"435\":3,\"453\":3,\"454\":2,\"627\":6,\"728\":2,\"950\":3,\"968\":3,\"969\":2,\"1142\":6,\"1243\":2,\"1465\":3,\"1483\":3,\"1484\":2,\"1809\":2,\"2178\":2,\"2547\":2}}],[\"requests\",{\"1\":{\"1941\":1,\"2310\":1,\"2679\":1}}],[\"request\",{\"1\":{\"11\":1,\"23\":1,\"35\":1,\"42\":1,\"86\":1,\"93\":1,\"120\":5,\"216\":2,\"342\":2,\"449\":1,\"472\":4,\"473\":4,\"476\":8,\"478\":1,\"504\":1,\"552\":1,\"596\":1,\"603\":1,\"630\":5,\"728\":2,\"857\":2,\"964\":1,\"987\":4,\"988\":4,\"991\":8,\"993\":1,\"1019\":1,\"1067\":1,\"1111\":1,\"1118\":1,\"1145\":5,\"1243\":2,\"1372\":2,\"1479\":1,\"1502\":4,\"1503\":4,\"1506\":8,\"1508\":1,\"1534\":1,\"1605\":1,\"1606\":1,\"1660\":1,\"1664\":1,\"1665\":1,\"1667\":2,\"1696\":1,\"1706\":1,\"1710\":1,\"1734\":2,\"1736\":2,\"1742\":2,\"1759\":1,\"1763\":1,\"1787\":1,\"1798\":1,\"1799\":2,\"1809\":2,\"1955\":1,\"1956\":1,\"2029\":1,\"2033\":1,\"2034\":1,\"2036\":2,\"2065\":1,\"2075\":1,\"2079\":1,\"2094\":2,\"2110\":1,\"2117\":2,\"2120\":2,\"2131\":1,\"2156\":1,\"2167\":1,\"2168\":2,\"2178\":2,\"2324\":1,\"2325\":1,\"2398\":1,\"2402\":1,\"2403\":1,\"2405\":2,\"2434\":1,\"2444\":1,\"2448\":1,\"2463\":2,\"2479\":1,\"2486\":2,\"2489\":2,\"2500\":1,\"2525\":1,\"2536\":1,\"2537\":2,\"2547\":2}}],[\"registry\",{\"1\":{\"504\":5,\"1019\":5,\"1534\":5}}],[\"register\",{\"1\":{\"38\":3,\"509\":1,\"548\":3,\"1024\":1,\"1063\":3,\"1539\":1,\"1576\":1,\"1596\":1,\"1945\":1,\"1946\":1,\"2314\":1,\"2315\":1}}],[\"regexflag\",{\"1\":{\"367\":1,\"882\":1,\"1397\":1,\"1874\":1,\"1891\":1,\"2243\":1,\"2260\":1,\"2612\":1,\"2629\":1}}],[\"regexdict\",{\"1\":{\"101\":1,\"367\":1,\"611\":1,\"882\":1,\"1126\":1,\"1397\":1}}],[\"regexgroup\",{\"1\":{\"101\":1,\"367\":1,\"611\":1,\"882\":1,\"1126\":1,\"1397\":1}}],[\"regexstr\",{\"1\":{\"101\":1,\"367\":1,\"611\":1,\"882\":1,\"1126\":1,\"1397\":1}}],[\"regex\",{\"1\":{\"101\":5,\"216\":2,\"366\":1,\"367\":1,\"611\":5,\"728\":2,\"881\":1,\"882\":1,\"1126\":5,\"1243\":2,\"1396\":1,\"1397\":1,\"1809\":2,\"1874\":2,\"1891\":2,\"2178\":2,\"2243\":2,\"2260\":2,\"2547\":2,\"2612\":2,\"2629\":2}}],[\"red>\",{\"1\":{\"419\":1,\"934\":1,\"1449\":1}}],[\"redis\",{\"1\":{\"81\":1,\"591\":1,\"1106\":1}}],[\"redoc\",{\"1\":{\"62\":2,\"572\":2,\"1087\":2,\"1680\":1,\"2049\":1,\"2418\":1}}],[\"reimplementation\",{\"1\":{\"70\":1,\"580\":1,\"1095\":1}}],[\"不变\",{\"1\":{\"2692\":1,\"2707\":1,\"2722\":1}}],[\"不应该在其他地方提交事务\",{\"1\":{\"2687\":1,\"2702\":1,\"2717\":1}}],[\"不同\",{\"1\":{\"2687\":1,\"2702\":1,\"2717\":1}}],[\"不同的用户会有不同的配置\",{\"1\":{\"2697\":1,\"2712\":1,\"2727\":1}}],[\"不同的类型标注也会获得不同形式的数据\",{\"1\":{\"2688\":1,\"2703\":1,\"2718\":1}}],[\"不同的事件也会有不同的事件响应器\",{\"1\":{\"2687\":1,\"2702\":1,\"2717\":1}}],[\"不同的是\",{\"1\":{\"1873\":1,\"1890\":1,\"2242\":1,\"2259\":1,\"2611\":1,\"2628\":1}}],[\"不同的辅助函数有不同的可选参数\",{\"1\":{\"529\":1,\"1044\":1,\"1559\":1}}],[\"不要这么做\",{\"1\":{\"2687\":1,\"2702\":1,\"2717\":1}}],[\"不要忘记还有一段注释\",{\"1\":{\"2686\":1,\"2701\":1,\"2716\":1}}],[\"不要监听的文件列表\",{\"1\":{\"68\":1,\"76\":1,\"578\":1,\"586\":1,\"1093\":1,\"1101\":1,\"1686\":1,\"1777\":1,\"2055\":1,\"2146\":1,\"2424\":1,\"2515\":1}}],[\"不过此时就要手动管理会话了\",{\"1\":{\"2687\":1,\"2702\":1,\"2717\":1}}],[\"不过\",{\"1\":{\"1926\":1,\"2295\":1,\"2664\":1,\"2688\":1,\"2703\":1,\"2718\":1}}],[\"不启用则会在触发特殊内置选项后仍然将解析结果传递至响应器\",{\"1\":{\"1916\":1,\"2285\":1,\"2654\":1}}],[\"不使用duplication获得的提示较少\",{\"1\":{\"1913\":1,\"2282\":1,\"2651\":1}}],[\"不传入时默认为选项或子命令的名称\",{\"1\":{\"1900\":1,\"2269\":1,\"2638\":1}}],[\"不包括参数名\",{\"1\":{\"1647\":1,\"2016\":1,\"2385\":1}}],[\"不包含的消息段类型\",{\"1\":{\"1624\":1,\"1993\":1,\"2362\":1}}],[\"不能在\",{\"1\":{\"1898\":1,\"2267\":1,\"2636\":1}}],[\"不能使用\",{\"1\":{\"545\":1,\"1060\":1,\"1575\":1}}],[\"不能相同\",{\"1\":{\"516\":1,\"1031\":1,\"1546\":1}}],[\"不让文档成为用户上手的阻碍\",{\"1\":{\"497\":1,\"1012\":1,\"1527\":1}}],[\"不可用的地方\",{\"1\":{\"484\":1,\"999\":1,\"1514\":1}}],[\"不可重复\",{\"1\":{\"120\":1,\"121\":1,\"630\":1,\"631\":1,\"1145\":1,\"1146\":1}}],[\"不符合时应抛出异常\",{\"1\":{\"472\":1,\"987\":1,\"1502\":1}}],[\"不方便区分适配器输出和其它日志\",{\"1\":{\"468\":1,\"983\":1,\"1498\":1}}],[\"不做强制要求\",{\"1\":{\"465\":1,\"980\":1,\"1495\":1}}],[\"不存在时接收用户新的一条消息再运行该函数\",{\"1\":{\"251\":1,\"764\":1,\"1279\":1}}],[\"不存在\",{\"1\":{\"222\":1,\"734\":1,\"1249\":1}}],[\"不再被运行\",{\"1\":{\"207\":1,\"719\":1,\"1234\":1}}],[\"不为\",{\"1\":{\"91\":1,\"601\":1,\"1116\":1}}],[\"不支持特殊占位表达式\",{\"1\":{\"120\":1,\"121\":1,\"630\":1,\"631\":1,\"1145\":1,\"1146\":1}}],[\"不支持\",{\"1\":{\"78\":1,\"79\":1,\"588\":1,\"589\":1,\"1103\":1,\"1104\":1}}],[\"不支持创建子进程\",{\"1\":{\"64\":1,\"574\":1,\"1089\":1}}],[\"不推荐开启该配置项\",{\"1\":{\"64\":1,\"72\":1,\"574\":1,\"582\":1,\"1089\":1,\"1097\":1}}],[\"不提供任何收发数据功能\",{\"1\":{\"57\":1,\"567\":1,\"1082\":1}}],[\"警告\",{\"1\":{\"64\":1,\"72\":1,\"365\":1,\"435\":1,\"506\":1,\"516\":1,\"574\":1,\"582\":1,\"880\":1,\"950\":1,\"1021\":1,\"1031\":1,\"1089\":1,\"1097\":1,\"1395\":1,\"1465\":1,\"1536\":1,\"1546\":1}}],[\"ospp\",{\"0\":{\"2759\":1,\"2766\":1,\"2773\":1}}],[\"os\",{\"1\":{\"2697\":4,\"2712\":4,\"2727\":4}}],[\"overflow\",{\"1\":{\"1938\":1,\"2307\":1,\"2676\":1}}],[\"override\",{\"1\":{\"470\":3,\"472\":2,\"473\":1,\"476\":2,\"477\":3,\"478\":13,\"479\":6,\"985\":3,\"987\":2,\"988\":1,\"991\":2,\"992\":3,\"993\":13,\"994\":6,\"1500\":3,\"1502\":2,\"1503\":1,\"1506\":2,\"1507\":3,\"1508\":13,\"1509\":6}}],[\"output\",{\"0\":{\"1916\":1,\"2285\":1,\"2654\":1},\"1\":{\"1912\":1,\"2281\":1,\"2650\":1}}],[\"other\",{\"1\":{\"1631\":1,\"1893\":1,\"1902\":1,\"2000\":1,\"2262\":1,\"2271\":1,\"2369\":1,\"2631\":1,\"2640\":1}}],[\"o\",{\"1\":{\"416\":1,\"931\":1,\"1446\":1}}],[\"obj\",{\"1\":{\"411\":1,\"413\":1,\"926\":1,\"928\":1,\"1441\":1,\"1443\":1,\"1619\":1,\"1620\":1,\"1988\":1,\"1989\":1,\"2357\":1,\"2358\":1}}],[\"object\",{\"1\":{\"143\":1,\"373\":1,\"653\":1,\"888\":1,\"1168\":1,\"1403\":1}}],[\"orm\",{\"1\":{\"501\":4,\"1016\":4,\"1531\":4,\"1926\":2,\"1928\":5,\"1929\":3,\"1931\":2,\"1932\":2,\"1933\":2,\"1934\":1,\"2295\":2,\"2297\":5,\"2298\":3,\"2300\":2,\"2301\":2,\"2302\":2,\"2303\":1,\"2664\":2,\"2666\":5,\"2667\":3,\"2669\":2,\"2670\":2,\"2671\":2,\"2672\":1,\"2683\":1,\"2685\":3,\"2686\":5,\"2687\":7,\"2688\":1,\"2689\":1,\"2691\":2,\"2692\":2,\"2694\":2,\"2695\":1,\"2697\":2,\"2698\":1,\"2700\":3,\"2701\":5,\"2702\":7,\"2703\":1,\"2704\":1,\"2706\":2,\"2707\":2,\"2709\":2,\"2710\":1,\"2712\":2,\"2713\":1,\"2715\":3,\"2716\":5,\"2717\":7,\"2718\":1,\"2719\":1,\"2721\":2,\"2722\":2,\"2724\":2,\"2725\":1,\"2727\":2}}],[\"or\",{\"1\":{\"400\":2,\"401\":5,\"439\":1,\"915\":2,\"916\":5,\"954\":1,\"1430\":2,\"1431\":5,\"1469\":1,\"1894\":1,\"2263\":1,\"2632\":1,\"2694\":1,\"2696\":3,\"2709\":1,\"2711\":3,\"2724\":1,\"2726\":3}}],[\"origin=option\",{\"1\":{\"1913\":2,\"2282\":2,\"2651\":2}}],[\"origin=args\",{\"1\":{\"1913\":3,\"2282\":3,\"2651\":3}}],[\"origin=subcommand\",{\"1\":{\"1913\":1,\"2282\":1,\"2651\":1}}],[\"origin=\",{\"1\":{\"1893\":1,\"2262\":1,\"2631\":1}}],[\"origin\",{\"0\":{\"1919\":1,\"2288\":1,\"2657\":1},\"1\":{\"375\":1,\"376\":1,\"378\":1,\"890\":1,\"891\":1,\"893\":1,\"1405\":1,\"1406\":1,\"1408\":1,\"1902\":1,\"2271\":1,\"2640\":1}}],[\"op\",{\"1\":{\"2686\":5,\"2701\":5,\"2716\":5}}],[\"open\",{\"1\":{\"504\":1,\"1019\":1,\"1534\":1}}],[\"openeuler\",{\"1\":{\"482\":1,\"494\":1,\"498\":1,\"997\":1,\"1009\":1,\"1013\":1,\"1512\":1,\"1524\":1,\"1528\":1}}],[\"openapi\",{\"1\":{\"60\":2,\"63\":1,\"570\":2,\"573\":1,\"1085\":2,\"1088\":1,\"1678\":1,\"2047\":1,\"2416\":1}}],[\"opt2\",{\"1\":{\"1900\":1,\"2269\":1,\"2638\":1}}],[\"opt1\",{\"1\":{\"1900\":1,\"2269\":1,\"2638\":1}}],[\"optionresult\",{\"1\":{\"1900\":2,\"1902\":1,\"1913\":2,\"2269\":2,\"2271\":1,\"2282\":2,\"2638\":2,\"2640\":1,\"2651\":2}}],[\"option\",{\"0\":{\"1900\":1,\"2269\":1,\"2638\":1},\"1\":{\"1893\":5,\"1896\":3,\"1900\":9,\"1901\":1,\"1904\":1,\"1905\":1,\"1910\":8,\"1912\":3,\"1913\":5,\"2262\":5,\"2265\":3,\"2269\":9,\"2270\":1,\"2273\":1,\"2274\":1,\"2279\":8,\"2281\":3,\"2282\":5,\"2631\":5,\"2634\":3,\"2638\":9,\"2639\":1,\"2642\":1,\"2643\":1,\"2648\":8,\"2650\":3,\"2651\":5}}],[\"optionstub\",{\"1\":{\"1913\":3,\"2282\":3,\"2651\":3}}],[\"options=\",{\"1\":{\"1893\":1,\"1913\":2,\"1938\":1,\"2262\":1,\"2282\":2,\"2307\":1,\"2631\":1,\"2651\":2,\"2676\":1}}],[\"options\",{\"0\":{\"1938\":1,\"2307\":1,\"2676\":1},\"1\":{\"480\":1,\"995\":1,\"1510\":1,\"1902\":7,\"1904\":1,\"1939\":1,\"2271\":7,\"2273\":1,\"2308\":1,\"2640\":7,\"2642\":1,\"2677\":1}}],[\"optional\",{\"1\":{\"135\":1,\"137\":1,\"472\":1,\"645\":1,\"647\":1,\"987\":1,\"1160\":1,\"1162\":1,\"1502\":1,\"1897\":1,\"1913\":3,\"1922\":1,\"2266\":1,\"2282\":3,\"2291\":1,\"2635\":1,\"2651\":3,\"2660\":1}}],[\"opt\",{\"1\":{\"419\":2,\"934\":2,\"1449\":2}}],[\"ok\",{\"1\":{\"120\":1,\"630\":1,\"1145\":1}}],[\"of\",{\"0\":{\"461\":1,\"976\":1,\"1491\":1},\"1\":{\"70\":1,\"142\":1,\"147\":1,\"149\":1,\"150\":1,\"151\":1,\"153\":1,\"156\":1,\"157\":1,\"461\":1,\"479\":1,\"494\":1,\"498\":1,\"580\":1,\"652\":1,\"657\":1,\"659\":1,\"660\":1,\"661\":1,\"663\":1,\"666\":1,\"667\":1,\"976\":1,\"994\":1,\"1009\":1,\"1013\":1,\"1095\":1,\"1167\":1,\"1172\":1,\"1174\":1,\"1175\":1,\"1176\":1,\"1178\":1,\"1181\":1,\"1182\":1,\"1491\":1,\"1509\":1,\"1524\":1,\"1528\":1}}],[\"one\",{\"1\":{\"2694\":1,\"2696\":3,\"2709\":1,\"2711\":3,\"2724\":1,\"2726\":3}}],[\"onebot\",{\"0\":{\"490\":1,\"491\":1,\"1005\":1,\"1006\":1,\"1520\":1,\"1521\":1},\"1\":{\"103\":2,\"424\":7,\"473\":1,\"476\":2,\"479\":1,\"484\":2,\"488\":1,\"489\":1,\"491\":2,\"492\":12,\"493\":12,\"500\":1,\"613\":2,\"939\":7,\"988\":1,\"991\":2,\"994\":1,\"999\":2,\"1003\":1,\"1004\":1,\"1006\":2,\"1007\":12,\"1008\":12,\"1015\":1,\"1128\":2,\"1454\":7,\"1503\":1,\"1506\":2,\"1509\":1,\"1514\":2,\"1518\":1,\"1519\":1,\"1521\":2,\"1522\":12,\"1523\":12,\"1530\":1}}],[\"only\",{\"1\":{\"542\":3,\"1057\":3,\"1572\":3,\"1895\":2,\"1898\":1,\"2264\":2,\"2267\":1,\"2633\":2,\"2636\":1}}],[\"on\",{\"0\":{\"1858\":1,\"2227\":1,\"2596\":1},\"1\":{\"58\":1,\"79\":1,\"93\":6,\"95\":2,\"96\":2,\"97\":2,\"98\":2,\"99\":2,\"100\":2,\"101\":2,\"106\":2,\"108\":1,\"127\":1,\"128\":1,\"129\":1,\"130\":1,\"136\":1,\"137\":1,\"139\":1,\"140\":2,\"203\":1,\"216\":26,\"408\":5,\"426\":1,\"427\":1,\"428\":1,\"472\":2,\"527\":3,\"528\":3,\"529\":2,\"568\":1,\"589\":1,\"603\":6,\"605\":2,\"606\":2,\"607\":2,\"608\":2,\"609\":2,\"610\":2,\"611\":2,\"616\":2,\"618\":1,\"637\":1,\"638\":1,\"639\":1,\"640\":1,\"646\":1,\"647\":1,\"649\":1,\"650\":2,\"715\":1,\"728\":26,\"923\":5,\"941\":1,\"942\":1,\"943\":1,\"987\":2,\"1042\":3,\"1043\":3,\"1044\":2,\"1083\":1,\"1104\":1,\"1118\":6,\"1120\":2,\"1121\":2,\"1122\":2,\"1123\":2,\"1124\":2,\"1125\":2,\"1126\":2,\"1131\":2,\"1133\":1,\"1152\":1,\"1153\":1,\"1154\":1,\"1155\":1,\"1161\":1,\"1162\":1,\"1164\":1,\"1165\":2,\"1230\":1,\"1243\":26,\"1438\":5,\"1456\":1,\"1457\":1,\"1458\":1,\"1502\":2,\"1557\":3,\"1558\":3,\"1559\":2,\"1809\":26,\"1873\":1,\"1890\":1,\"2178\":26,\"2242\":1,\"2259\":1,\"2547\":26,\"2611\":1,\"2628\":1,\"2686\":1,\"2687\":2,\"2691\":2,\"2692\":2,\"2697\":4,\"2701\":1,\"2702\":2,\"2706\":2,\"2707\":2,\"2712\":4,\"2716\":1,\"2717\":2,\"2721\":2,\"2722\":2,\"2727\":4}}],[\"说明\",{\"1\":{\"60\":1,\"61\":1,\"62\":1,\"63\":1,\"64\":1,\"65\":1,\"66\":1,\"67\":1,\"68\":1,\"69\":1,\"72\":1,\"73\":1,\"74\":1,\"75\":1,\"76\":1,\"77\":1,\"142\":1,\"143\":1,\"144\":1,\"145\":1,\"146\":1,\"147\":1,\"148\":1,\"149\":1,\"150\":1,\"151\":1,\"152\":1,\"153\":1,\"154\":1,\"155\":1,\"156\":1,\"157\":1,\"159\":1,\"160\":1,\"161\":1,\"163\":1,\"164\":1,\"165\":1,\"166\":1,\"167\":1,\"168\":1,\"169\":1,\"170\":1,\"171\":1,\"172\":1,\"173\":1,\"174\":1,\"175\":1,\"177\":1,\"178\":1,\"179\":1,\"180\":1,\"181\":1,\"182\":1,\"183\":1,\"184\":1,\"185\":1,\"186\":1,\"187\":1,\"188\":1,\"189\":1,\"190\":1,\"191\":1,\"192\":1,\"193\":1,\"194\":1,\"196\":1,\"197\":1,\"198\":1,\"199\":1,\"200\":1,\"201\":1,\"202\":1,\"203\":1,\"204\":1,\"205\":1,\"206\":1,\"207\":1,\"208\":1,\"209\":1,\"210\":1,\"211\":1,\"212\":1,\"213\":1,\"214\":1,\"217\":1,\"218\":1,\"219\":1,\"220\":1,\"221\":1,\"222\":1,\"223\":1,\"224\":1,\"225\":1,\"227\":1,\"228\":1,\"230\":1,\"231\":1,\"233\":1,\"234\":1,\"235\":1,\"236\":1,\"237\":1,\"238\":1,\"239\":1,\"240\":1,\"241\":1,\"242\":1,\"243\":1,\"244\":1,\"245\":1,\"246\":1,\"247\":1,\"249\":1,\"250\":1,\"251\":1,\"252\":1,\"253\":1,\"254\":1,\"255\":1,\"256\":1,\"257\":1,\"258\":1,\"259\":1,\"260\":1,\"261\":1,\"262\":1,\"263\":1,\"266\":1,\"274\":1,\"284\":1,\"285\":1,\"286\":1,\"288\":1,\"289\":1,\"290\":1,\"291\":1,\"292\":1,\"293\":1,\"295\":1,\"296\":1,\"297\":1,\"298\":1,\"299\":1,\"300\":1,\"301\":1,\"302\":1,\"303\":1,\"304\":1,\"305\":1,\"306\":1,\"307\":1,\"308\":1,\"309\":1,\"310\":1,\"311\":1,\"312\":1,\"313\":1,\"314\":1,\"315\":1,\"316\":1,\"317\":1,\"318\":1,\"319\":1,\"320\":1,\"321\":1,\"322\":1,\"323\":1,\"324\":1,\"325\":1,\"326\":1,\"327\":1,\"329\":1,\"330\":1,\"331\":1,\"332\":1,\"333\":1,\"334\":1,\"335\":1,\"336\":1,\"337\":1,\"338\":1,\"339\":1,\"340\":1,\"341\":1,\"342\":1,\"343\":1,\"344\":1,\"345\":1,\"347\":1,\"348\":1,\"349\":1,\"351\":1,\"352\":1,\"353\":1,\"354\":1,\"355\":1,\"356\":1,\"357\":1,\"358\":1,\"359\":1,\"360\":1,\"361\":1,\"362\":1,\"364\":1,\"365\":1,\"366\":1,\"367\":1,\"368\":1,\"369\":1,\"370\":1,\"371\":1,\"373\":1,\"376\":1,\"377\":1,\"378\":1,\"379\":1,\"382\":1,\"383\":1,\"384\":1,\"385\":1,\"386\":1,\"387\":1,\"388\":1,\"389\":1,\"390\":1,\"391\":1,\"392\":1,\"393\":1,\"394\":1,\"395\":1,\"396\":1,\"398\":1,\"399\":1,\"400\":1,\"401\":1,\"402\":1,\"403\":1,\"404\":1,\"405\":1,\"406\":1,\"407\":1,\"408\":1,\"409\":1,\"411\":1,\"412\":1,\"413\":1,\"414\":1,\"415\":1,\"417\":1,\"570\":1,\"571\":1,\"572\":1,\"573\":1,\"574\":1,\"575\":1,\"576\":1,\"577\":1,\"578\":1,\"579\":1,\"582\":1,\"583\":1,\"584\":1,\"585\":1,\"586\":1,\"587\":1,\"652\":1,\"653\":1,\"654\":1,\"655\":1,\"656\":1,\"657\":1,\"658\":1,\"659\":1,\"660\":1,\"661\":1,\"662\":1,\"663\":1,\"664\":1,\"665\":1,\"666\":1,\"667\":1,\"669\":1,\"670\":1,\"671\":1,\"673\":1,\"674\":1,\"675\":1,\"676\":1,\"677\":1,\"678\":1,\"679\":1,\"680\":1,\"681\":1,\"682\":1,\"683\":1,\"684\":1,\"685\":1,\"687\":1,\"688\":1,\"689\":1,\"690\":1,\"691\":1,\"692\":1,\"693\":1,\"694\":1,\"695\":1,\"696\":1,\"697\":1,\"698\":1,\"699\":1,\"700\":1,\"701\":1,\"702\":1,\"703\":1,\"704\":1,\"705\":1,\"706\":1,\"708\":1,\"709\":1,\"710\":1,\"711\":1,\"712\":1,\"713\":1,\"714\":1,\"715\":1,\"716\":1,\"717\":1,\"718\":1,\"719\":1,\"720\":1,\"721\":1,\"722\":1,\"723\":1,\"724\":1,\"725\":1,\"726\":1,\"729\":1,\"730\":1,\"731\":1,\"732\":1,\"733\":1,\"734\":1,\"735\":1,\"736\":1,\"737\":1,\"739\":1,\"740\":1,\"742\":1,\"743\":1,\"745\":1,\"746\":1,\"747\":1,\"748\":1,\"749\":1,\"750\":1,\"751\":1,\"752\":1,\"753\":1,\"754\":1,\"755\":1,\"756\":1,\"757\":1,\"758\":1,\"759\":1,\"760\":1,\"762\":1,\"763\":1,\"764\":1,\"765\":1,\"766\":1,\"767\":1,\"768\":1,\"769\":1,\"770\":1,\"771\":1,\"772\":1,\"773\":1,\"774\":1,\"775\":1,\"776\":1,\"779\":1,\"786\":1,\"796\":1,\"797\":1,\"800\":1,\"801\":1,\"802\":1,\"803\":1,\"804\":1,\"805\":1,\"807\":1,\"808\":1,\"809\":1,\"810\":1,\"811\":1,\"812\":1,\"813\":1,\"814\":1,\"815\":1,\"816\":1,\"817\":1,\"818\":1,\"819\":1,\"820\":1,\"821\":1,\"822\":1,\"823\":1,\"824\":1,\"825\":1,\"826\":1,\"827\":1,\"828\":1,\"829\":1,\"830\":1,\"831\":1,\"832\":1,\"833\":1,\"834\":1,\"835\":1,\"836\":1,\"837\":1,\"838\":1,\"839\":1,\"840\":1,\"841\":1,\"842\":1,\"844\":1,\"845\":1,\"846\":1,\"847\":1,\"848\":1,\"849\":1,\"850\":1,\"851\":1,\"852\":1,\"853\":1,\"854\":1,\"855\":1,\"856\":1,\"857\":1,\"858\":1,\"859\":1,\"860\":1,\"862\":1,\"863\":1,\"864\":1,\"866\":1,\"867\":1,\"868\":1,\"869\":1,\"870\":1,\"871\":1,\"872\":1,\"873\":1,\"874\":1,\"875\":1,\"876\":1,\"877\":1,\"879\":1,\"880\":1,\"881\":1,\"882\":1,\"883\":1,\"884\":1,\"885\":1,\"886\":1,\"888\":1,\"891\":1,\"892\":1,\"893\":1,\"894\":1,\"897\":1,\"898\":1,\"899\":1,\"900\":1,\"901\":1,\"902\":1,\"903\":1,\"904\":1,\"905\":1,\"906\":1,\"907\":1,\"908\":1,\"909\":1,\"910\":1,\"911\":1,\"913\":1,\"914\":1,\"915\":1,\"916\":1,\"917\":1,\"918\":1,\"919\":1,\"920\":1,\"921\":1,\"922\":1,\"923\":1,\"924\":1,\"926\":1,\"927\":1,\"928\":1,\"929\":1,\"930\":1,\"932\":1,\"1085\":1,\"1086\":1,\"1087\":1,\"1088\":1,\"1089\":1,\"1090\":1,\"1091\":1,\"1092\":1,\"1093\":1,\"1094\":1,\"1097\":1,\"1098\":1,\"1099\":1,\"1100\":1,\"1101\":1,\"1102\":1,\"1167\":1,\"1168\":1,\"1169\":1,\"1170\":1,\"1171\":1,\"1172\":1,\"1173\":1,\"1174\":1,\"1175\":1,\"1176\":1,\"1177\":1,\"1178\":1,\"1179\":1,\"1180\":1,\"1181\":1,\"1182\":1,\"1184\":1,\"1185\":1,\"1186\":1,\"1188\":1,\"1189\":1,\"1190\":1,\"1191\":1,\"1192\":1,\"1193\":1,\"1194\":1,\"1195\":1,\"1196\":1,\"1197\":1,\"1198\":1,\"1199\":1,\"1200\":1,\"1202\":1,\"1203\":1,\"1204\":1,\"1205\":1,\"1206\":1,\"1207\":1,\"1208\":1,\"1209\":1,\"1210\":1,\"1211\":1,\"1212\":1,\"1213\":1,\"1214\":1,\"1215\":1,\"1216\":1,\"1217\":1,\"1218\":1,\"1219\":1,\"1220\":1,\"1221\":1,\"1223\":1,\"1224\":1,\"1225\":1,\"1226\":1,\"1227\":1,\"1228\":1,\"1229\":1,\"1230\":1,\"1231\":1,\"1232\":1,\"1233\":1,\"1234\":1,\"1235\":1,\"1236\":1,\"1237\":1,\"1238\":1,\"1239\":1,\"1240\":1,\"1241\":1,\"1244\":1,\"1245\":1,\"1246\":1,\"1247\":1,\"1248\":1,\"1249\":1,\"1250\":1,\"1251\":1,\"1252\":1,\"1254\":1,\"1255\":1,\"1257\":1,\"1258\":1,\"1260\":1,\"1261\":1,\"1262\":1,\"1263\":1,\"1264\":1,\"1265\":1,\"1266\":1,\"1267\":1,\"1268\":1,\"1269\":1,\"1270\":1,\"1271\":1,\"1272\":1,\"1273\":1,\"1274\":1,\"1275\":1,\"1277\":1,\"1278\":1,\"1279\":1,\"1280\":1,\"1281\":1,\"1282\":1,\"1283\":1,\"1284\":1,\"1285\":1,\"1286\":1,\"1287\":1,\"1288\":1,\"1289\":1,\"1290\":1,\"1291\":1,\"1294\":1,\"1301\":1,\"1311\":1,\"1312\":1,\"1315\":1,\"1316\":1,\"1317\":1,\"1318\":1,\"1319\":1,\"1320\":1,\"1322\":1,\"1323\":1,\"1324\":1,\"1325\":1,\"1326\":1,\"1327\":1,\"1328\":1,\"1329\":1,\"1330\":1,\"1331\":1,\"1332\":1,\"1333\":1,\"1334\":1,\"1335\":1,\"1336\":1,\"1337\":1,\"1338\":1,\"1339\":1,\"1340\":1,\"1341\":1,\"1342\":1,\"1343\":1,\"1344\":1,\"1345\":1,\"1346\":1,\"1347\":1,\"1348\":1,\"1349\":1,\"1350\":1,\"1351\":1,\"1352\":1,\"1353\":1,\"1354\":1,\"1355\":1,\"1356\":1,\"1357\":1,\"1359\":1,\"1360\":1,\"1361\":1,\"1362\":1,\"1363\":1,\"1364\":1,\"1365\":1,\"1366\":1,\"1367\":1,\"1368\":1,\"1369\":1,\"1370\":1,\"1371\":1,\"1372\":1,\"1373\":1,\"1374\":1,\"1375\":1,\"1377\":1,\"1378\":1,\"1379\":1,\"1381\":1,\"1382\":1,\"1383\":1,\"1384\":1,\"1385\":1,\"1386\":1,\"1387\":1,\"1388\":1,\"1389\":1,\"1390\":1,\"1391\":1,\"1392\":1,\"1394\":1,\"1395\":1,\"1396\":1,\"1397\":1,\"1398\":1,\"1399\":1,\"1400\":1,\"1401\":1,\"1403\":1,\"1406\":1,\"1407\":1,\"1408\":1,\"1409\":1,\"1412\":1,\"1413\":1,\"1414\":1,\"1415\":1,\"1416\":1,\"1417\":1,\"1418\":1,\"1419\":1,\"1420\":1,\"1421\":1,\"1422\":1,\"1423\":1,\"1424\":1,\"1425\":1,\"1426\":1,\"1428\":1,\"1429\":1,\"1430\":1,\"1431\":1,\"1432\":1,\"1433\":1,\"1434\":1,\"1435\":1,\"1436\":1,\"1437\":1,\"1438\":1,\"1439\":1,\"1441\":1,\"1442\":1,\"1443\":1,\"1444\":1,\"1445\":1,\"1447\":1,\"1577\":1,\"1578\":1,\"1579\":1,\"1580\":1,\"1581\":1,\"1582\":1,\"1583\":1,\"1584\":1,\"1585\":1,\"1586\":1,\"1587\":1,\"1588\":1,\"1589\":1,\"1590\":1,\"1591\":1,\"1592\":1,\"1593\":1,\"1594\":1,\"1595\":1,\"1596\":1,\"1597\":1,\"1598\":1,\"1599\":1,\"1600\":1,\"1601\":1,\"1602\":1,\"1603\":1,\"1604\":1,\"1605\":1,\"1606\":1,\"1608\":1,\"1609\":1,\"1610\":1,\"1611\":1,\"1613\":1,\"1614\":1,\"1615\":1,\"1616\":1,\"1617\":1,\"1618\":1,\"1619\":1,\"1620\":1,\"1621\":1,\"1622\":1,\"1623\":1,\"1624\":1,\"1625\":1,\"1626\":1,\"1627\":1,\"1628\":1,\"1629\":1,\"1630\":1,\"1638\":1,\"1639\":1,\"1641\":1,\"1642\":1,\"1647\":1,\"1648\":1,\"1655\":1,\"1656\":1,\"1657\":1,\"1663\":1,\"1667\":1,\"1677\":1,\"1678\":1,\"1679\":1,\"1680\":1,\"1681\":1,\"1682\":1,\"1683\":1,\"1684\":1,\"1685\":1,\"1686\":1,\"1687\":1,\"1688\":1,\"1689\":1,\"1690\":1,\"1691\":1,\"1692\":1,\"1695\":1,\"1696\":1,\"1709\":1,\"1714\":1,\"1715\":1,\"1716\":1,\"1717\":1,\"1718\":1,\"1719\":1,\"1720\":1,\"1721\":1,\"1722\":1,\"1723\":1,\"1724\":1,\"1725\":1,\"1726\":1,\"1727\":1,\"1737\":1,\"1738\":1,\"1739\":1,\"1740\":1,\"1741\":1,\"1743\":1,\"1744\":1,\"1745\":1,\"1746\":1,\"1747\":1,\"1748\":1,\"1749\":1,\"1750\":1,\"1751\":1,\"1752\":1,\"1753\":1,\"1754\":1,\"1755\":1,\"1756\":1,\"1757\":1,\"1758\":1,\"1759\":1,\"1760\":1,\"1761\":1,\"1762\":1,\"1763\":1,\"1764\":1,\"1766\":1,\"1767\":1,\"1768\":1,\"1769\":1,\"1770\":1,\"1772\":1,\"1773\":1,\"1774\":1,\"1775\":1,\"1776\":1,\"1777\":1,\"1778\":1,\"1779\":1,\"1780\":1,\"1781\":1,\"1782\":1,\"1783\":1,\"1786\":1,\"1787\":1,\"1797\":1,\"1799\":1,\"1810\":1,\"1811\":1,\"1812\":1,\"1813\":1,\"1814\":1,\"1816\":1,\"1817\":1,\"1818\":1,\"1819\":1,\"1820\":1,\"1821\":1,\"1822\":1,\"1823\":1,\"1824\":1,\"1826\":1,\"1827\":1,\"1828\":1,\"1829\":1,\"1830\":1,\"1831\":1,\"1832\":1,\"1839\":1,\"1840\":1,\"1841\":1,\"1842\":1,\"1843\":1,\"1844\":1,\"1845\":1,\"1846\":1,\"1847\":1,\"1848\":1,\"1849\":1,\"1850\":1,\"1851\":1,\"1852\":1,\"1853\":1,\"1854\":1,\"1855\":1,\"1856\":1,\"1857\":1,\"1859\":1,\"1860\":1,\"1861\":1,\"1862\":1,\"1863\":1,\"1864\":1,\"1865\":1,\"1866\":1,\"1867\":1,\"1868\":1,\"1869\":1,\"1870\":1,\"1871\":1,\"1872\":1,\"1873\":1,\"1874\":1,\"1875\":1,\"1877\":1,\"1878\":1,\"1880\":1,\"1881\":1,\"1882\":1,\"1883\":1,\"1884\":1,\"1885\":1,\"1886\":1,\"1887\":1,\"1888\":1,\"1889\":1,\"1890\":1,\"1891\":1,\"1892\":1,\"1894\":1,\"1946\":1,\"1947\":1,\"1948\":1,\"1949\":1,\"1950\":1,\"1951\":1,\"1952\":1,\"1953\":1,\"1954\":1,\"1955\":1,\"1956\":1,\"1958\":1,\"1959\":1,\"1960\":1,\"1961\":1,\"1962\":1,\"1963\":1,\"1964\":1,\"1965\":1,\"1966\":1,\"1967\":1,\"1968\":1,\"1969\":1,\"1970\":1,\"1971\":1,\"1972\":1,\"1973\":1,\"1974\":1,\"1975\":1,\"1976\":1,\"1977\":1,\"1978\":1,\"1979\":1,\"1980\":1,\"1982\":1,\"1983\":1,\"1984\":1,\"1985\":1,\"1986\":1,\"1987\":1,\"1988\":1,\"1989\":1,\"1990\":1,\"1991\":1,\"1992\":1,\"1993\":1,\"1994\":1,\"1995\":1,\"1996\":1,\"1997\":1,\"1998\":1,\"1999\":1,\"2007\":1,\"2008\":1,\"2010\":1,\"2011\":1,\"2016\":1,\"2017\":1,\"2024\":1,\"2025\":1,\"2026\":1,\"2032\":1,\"2036\":1,\"2046\":1,\"2047\":1,\"2048\":1,\"2049\":1,\"2050\":1,\"2051\":1,\"2052\":1,\"2053\":1,\"2054\":1,\"2055\":1,\"2056\":1,\"2057\":1,\"2058\":1,\"2059\":1,\"2060\":1,\"2061\":1,\"2064\":1,\"2065\":1,\"2078\":1,\"2083\":1,\"2084\":1,\"2085\":1,\"2086\":1,\"2087\":1,\"2095\":1,\"2096\":1,\"2097\":1,\"2098\":1,\"2099\":1,\"2100\":1,\"2101\":1,\"2102\":1,\"2103\":1,\"2104\":1,\"2105\":1,\"2106\":1,\"2107\":1,\"2108\":1,\"2109\":1,\"2110\":1,\"2111\":1,\"2112\":1,\"2113\":1,\"2114\":1,\"2115\":1,\"2118\":1,\"2119\":1,\"2121\":1,\"2122\":1,\"2123\":1,\"2124\":1,\"2125\":1,\"2126\":1,\"2127\":1,\"2128\":1,\"2129\":1,\"2130\":1,\"2131\":1,\"2132\":1,\"2133\":1,\"2135\":1,\"2136\":1,\"2137\":1,\"2138\":1,\"2139\":1,\"2141\":1,\"2142\":1,\"2143\":1,\"2144\":1,\"2145\":1,\"2146\":1,\"2147\":1,\"2148\":1,\"2149\":1,\"2150\":1,\"2151\":1,\"2152\":1,\"2155\":1,\"2156\":1,\"2166\":1,\"2168\":1,\"2179\":1,\"2180\":1,\"2181\":1,\"2182\":1,\"2183\":1,\"2185\":1,\"2186\":1,\"2187\":1,\"2188\":1,\"2189\":1,\"2190\":1,\"2191\":1,\"2192\":1,\"2193\":1,\"2195\":1,\"2196\":1,\"2197\":1,\"2198\":1,\"2199\":1,\"2200\":1,\"2201\":1,\"2208\":1,\"2209\":1,\"2210\":1,\"2211\":1,\"2212\":1,\"2213\":1,\"2214\":1,\"2215\":1,\"2216\":1,\"2217\":1,\"2218\":1,\"2219\":1,\"2220\":1,\"2221\":1,\"2222\":1,\"2223\":1,\"2224\":1,\"2225\":1,\"2226\":1,\"2228\":1,\"2229\":1,\"2230\":1,\"2231\":1,\"2232\":1,\"2233\":1,\"2234\":1,\"2235\":1,\"2236\":1,\"2237\":1,\"2238\":1,\"2239\":1,\"2240\":1,\"2241\":1,\"2242\":1,\"2243\":1,\"2244\":1,\"2246\":1,\"2247\":1,\"2249\":1,\"2250\":1,\"2251\":1,\"2252\":1,\"2253\":1,\"2254\":1,\"2255\":1,\"2256\":1,\"2257\":1,\"2258\":1,\"2259\":1,\"2260\":1,\"2261\":1,\"2263\":1,\"2315\":1,\"2316\":1,\"2317\":1,\"2318\":1,\"2319\":1,\"2320\":1,\"2321\":1,\"2322\":1,\"2323\":1,\"2324\":1,\"2325\":1,\"2327\":1,\"2328\":1,\"2329\":1,\"2330\":1,\"2331\":1,\"2332\":1,\"2333\":1,\"2334\":1,\"2335\":1,\"2336\":1,\"2337\":1,\"2338\":1,\"2339\":1,\"2340\":1,\"2341\":1,\"2342\":1,\"2343\":1,\"2344\":1,\"2345\":1,\"2346\":1,\"2347\":1,\"2348\":1,\"2349\":1,\"2351\":1,\"2352\":1,\"2353\":1,\"2354\":1,\"2355\":1,\"2356\":1,\"2357\":1,\"2358\":1,\"2359\":1,\"2360\":1,\"2361\":1,\"2362\":1,\"2363\":1,\"2364\":1,\"2365\":1,\"2366\":1,\"2367\":1,\"2368\":1,\"2376\":1,\"2377\":1,\"2379\":1,\"2380\":1,\"2385\":1,\"2386\":1,\"2393\":1,\"2394\":1,\"2395\":1,\"2401\":1,\"2405\":1,\"2415\":1,\"2416\":1,\"2417\":1,\"2418\":1,\"2419\":1,\"2420\":1,\"2421\":1,\"2422\":1,\"2423\":1,\"2424\":1,\"2425\":1,\"2426\":1,\"2427\":1,\"2428\":1,\"2429\":1,\"2430\":1,\"2433\":1,\"2434\":1,\"2447\":1,\"2452\":1,\"2453\":1,\"2454\":1,\"2455\":1,\"2456\":1,\"2464\":1,\"2465\":1,\"2466\":1,\"2467\":1,\"2468\":1,\"2469\":1,\"2470\":1,\"2471\":1,\"2472\":1,\"2473\":1,\"2474\":1,\"2475\":1,\"2476\":1,\"2477\":1,\"2478\":1,\"2479\":1,\"2480\":1,\"2481\":1,\"2482\":1,\"2483\":1,\"2484\":1,\"2487\":1,\"2488\":1,\"2490\":1,\"2491\":1,\"2492\":1,\"2493\":1,\"2494\":1,\"2495\":1,\"2496\":1,\"2497\":1,\"2498\":1,\"2499\":1,\"2500\":1,\"2501\":1,\"2502\":1,\"2504\":1,\"2505\":1,\"2506\":1,\"2507\":1,\"2508\":1,\"2510\":1,\"2511\":1,\"2512\":1,\"2513\":1,\"2514\":1,\"2515\":1,\"2516\":1,\"2517\":1,\"2518\":1,\"2519\":1,\"2520\":1,\"2521\":1,\"2524\":1,\"2525\":1,\"2535\":1,\"2537\":1,\"2548\":1,\"2549\":1,\"2550\":1,\"2551\":1,\"2552\":1,\"2554\":1,\"2555\":1,\"2556\":1,\"2557\":1,\"2558\":1,\"2559\":1,\"2560\":1,\"2561\":1,\"2562\":1,\"2564\":1,\"2565\":1,\"2566\":1,\"2567\":1,\"2568\":1,\"2569\":1,\"2570\":1,\"2577\":1,\"2578\":1,\"2579\":1,\"2580\":1,\"2581\":1,\"2582\":1,\"2583\":1,\"2584\":1,\"2585\":1,\"2586\":1,\"2587\":1,\"2588\":1,\"2589\":1,\"2590\":1,\"2591\":1,\"2592\":1,\"2593\":1,\"2594\":1,\"2595\":1,\"2597\":1,\"2598\":1,\"2599\":1,\"2600\":1,\"2601\":1,\"2602\":1,\"2603\":1,\"2604\":1,\"2605\":1,\"2606\":1,\"2607\":1,\"2608\":1,\"2609\":1,\"2610\":1,\"2611\":1,\"2612\":1,\"2613\":1,\"2615\":1,\"2616\":1,\"2618\":1,\"2619\":1,\"2620\":1,\"2621\":1,\"2622\":1,\"2623\":1,\"2624\":1,\"2625\":1,\"2626\":1,\"2627\":1,\"2628\":1,\"2629\":1,\"2630\":1,\"2632\":1}}],[\"||\",{\"1\":{\"2697\":4,\"2712\":4,\"2727\":4}}],[\"|\",{\"1\":{\"60\":1,\"61\":1,\"62\":1,\"65\":1,\"66\":1,\"67\":1,\"68\":1,\"73\":1,\"74\":1,\"75\":1,\"76\":1,\"110\":3,\"111\":2,\"152\":1,\"158\":2,\"160\":1,\"163\":3,\"165\":3,\"169\":1,\"170\":1,\"195\":13,\"222\":1,\"224\":1,\"241\":1,\"242\":14,\"244\":2,\"245\":2,\"248\":1,\"249\":1,\"250\":1,\"251\":5,\"252\":3,\"253\":4,\"254\":4,\"255\":4,\"256\":4,\"257\":4,\"259\":4,\"261\":4,\"262\":4,\"265\":4,\"267\":2,\"268\":2,\"271\":2,\"272\":2,\"278\":4,\"292\":2,\"295\":1,\"296\":1,\"297\":2,\"299\":1,\"300\":1,\"303\":1,\"305\":1,\"319\":8,\"326\":1,\"329\":1,\"330\":1,\"331\":1,\"332\":1,\"333\":2,\"335\":2,\"347\":1,\"349\":2,\"353\":1,\"355\":1,\"357\":1,\"360\":2,\"361\":3,\"363\":10,\"364\":1,\"365\":2,\"367\":1,\"375\":1,\"376\":1,\"378\":1,\"386\":1,\"400\":1,\"401\":1,\"408\":4,\"413\":1,\"420\":2,\"449\":12,\"515\":3,\"570\":1,\"571\":1,\"572\":1,\"575\":1,\"576\":1,\"577\":1,\"578\":1,\"583\":1,\"584\":1,\"585\":1,\"586\":1,\"620\":3,\"621\":2,\"662\":1,\"668\":2,\"670\":1,\"673\":3,\"675\":3,\"679\":1,\"680\":1,\"707\":13,\"734\":1,\"736\":1,\"754\":1,\"755\":14,\"757\":2,\"758\":2,\"761\":1,\"762\":1,\"763\":1,\"764\":5,\"765\":3,\"766\":4,\"767\":4,\"768\":4,\"769\":4,\"770\":4,\"772\":4,\"774\":4,\"775\":4,\"778\":4,\"780\":2,\"781\":2,\"784\":2,\"785\":2,\"790\":4,\"804\":2,\"807\":1,\"809\":1,\"810\":1,\"811\":1,\"812\":1,\"815\":2,\"816\":1,\"818\":1,\"832\":8,\"839\":1,\"841\":1,\"844\":1,\"845\":2,\"847\":2,\"848\":1,\"849\":1,\"850\":1,\"862\":1,\"864\":2,\"868\":1,\"870\":1,\"872\":1,\"875\":2,\"876\":3,\"878\":10,\"879\":1,\"880\":2,\"882\":1,\"890\":1,\"891\":1,\"893\":1,\"901\":1,\"915\":1,\"916\":1,\"923\":4,\"928\":1,\"935\":2,\"964\":12,\"1030\":3,\"1085\":1,\"1086\":1,\"1087\":1,\"1090\":1,\"1091\":1,\"1092\":1,\"1093\":1,\"1098\":1,\"1099\":1,\"1100\":1,\"1101\":1,\"1135\":3,\"1136\":2,\"1177\":1,\"1183\":2,\"1185\":1,\"1188\":3,\"1190\":3,\"1194\":1,\"1195\":1,\"1222\":13,\"1249\":1,\"1251\":1,\"1269\":1,\"1270\":14,\"1272\":2,\"1273\":2,\"1276\":1,\"1277\":1,\"1278\":1,\"1279\":5,\"1280\":3,\"1281\":4,\"1282\":4,\"1283\":4,\"1284\":4,\"1285\":4,\"1287\":4,\"1289\":4,\"1290\":4,\"1293\":4,\"1295\":2,\"1296\":2,\"1299\":2,\"1300\":2,\"1305\":4,\"1319\":2,\"1322\":1,\"1324\":1,\"1325\":1,\"1326\":1,\"1327\":1,\"1330\":2,\"1331\":1,\"1333\":1,\"1347\":8,\"1354\":1,\"1356\":1,\"1359\":1,\"1360\":2,\"1362\":2,\"1363\":1,\"1364\":1,\"1365\":1,\"1377\":1,\"1379\":2,\"1383\":1,\"1385\":1,\"1387\":1,\"1390\":2,\"1391\":3,\"1393\":10,\"1394\":1,\"1395\":2,\"1397\":1,\"1405\":1,\"1406\":1,\"1408\":1,\"1416\":1,\"1430\":1,\"1431\":1,\"1438\":4,\"1443\":1,\"1450\":2,\"1479\":12,\"1545\":3,\"1583\":2,\"1609\":1,\"1613\":1,\"1614\":1,\"1615\":1,\"1616\":1,\"1617\":1,\"1618\":1,\"1619\":1,\"1620\":1,\"1621\":1,\"1631\":2,\"1636\":1,\"1639\":2,\"1640\":1,\"1644\":1,\"1651\":1,\"1659\":3,\"1666\":3,\"1678\":1,\"1679\":1,\"1680\":1,\"1683\":1,\"1685\":1,\"1686\":1,\"1695\":3,\"1699\":1,\"1705\":3,\"1711\":3,\"1730\":4,\"1731\":2,\"1732\":2,\"1735\":6,\"1736\":1,\"1746\":1,\"1749\":1,\"1760\":3,\"1774\":1,\"1776\":1,\"1777\":1,\"1786\":3,\"1790\":1,\"1802\":1,\"1810\":1,\"1811\":1,\"1816\":2,\"1821\":1,\"1824\":1,\"1826\":2,\"1831\":1,\"1834\":2,\"1836\":1,\"1843\":1,\"1844\":1,\"1845\":1,\"1846\":1,\"1848\":1,\"1855\":1,\"1860\":1,\"1861\":1,\"1862\":1,\"1863\":9,\"1864\":9,\"1865\":9,\"1866\":9,\"1867\":9,\"1868\":10,\"1869\":10,\"1870\":10,\"1871\":9,\"1872\":14,\"1873\":13,\"1874\":10,\"1875\":10,\"1876\":10,\"1877\":14,\"1878\":13,\"1879\":9,\"1880\":9,\"1881\":9,\"1882\":9,\"1883\":9,\"1884\":9,\"1885\":10,\"1886\":10,\"1887\":10,\"1888\":9,\"1889\":14,\"1890\":13,\"1891\":10,\"1892\":10,\"1964\":2,\"1978\":1,\"1982\":1,\"1983\":1,\"1984\":1,\"1985\":1,\"1986\":1,\"1987\":1,\"1988\":1,\"1989\":1,\"1990\":1,\"2000\":2,\"2005\":1,\"2008\":2,\"2009\":1,\"2013\":1,\"2020\":1,\"2028\":3,\"2035\":3,\"2047\":1,\"2048\":1,\"2049\":1,\"2052\":1,\"2054\":1,\"2055\":1,\"2064\":3,\"2068\":1,\"2074\":3,\"2080\":3,\"2090\":4,\"2091\":2,\"2092\":2,\"2111\":3,\"2116\":6,\"2117\":1,\"2124\":1,\"2127\":1,\"2143\":1,\"2145\":1,\"2146\":1,\"2155\":3,\"2159\":1,\"2171\":1,\"2179\":1,\"2180\":1,\"2185\":2,\"2190\":1,\"2193\":1,\"2195\":2,\"2200\":1,\"2203\":2,\"2205\":1,\"2212\":1,\"2213\":1,\"2214\":1,\"2215\":1,\"2217\":1,\"2224\":1,\"2229\":1,\"2230\":1,\"2231\":1,\"2232\":9,\"2233\":9,\"2234\":9,\"2235\":9,\"2236\":9,\"2237\":10,\"2238\":10,\"2239\":10,\"2240\":9,\"2241\":14,\"2242\":13,\"2243\":10,\"2244\":10,\"2245\":10,\"2246\":14,\"2247\":13,\"2248\":9,\"2249\":9,\"2250\":9,\"2251\":9,\"2252\":9,\"2253\":9,\"2254\":10,\"2255\":10,\"2256\":10,\"2257\":9,\"2258\":14,\"2259\":13,\"2260\":10,\"2261\":10,\"2333\":2,\"2347\":1,\"2351\":1,\"2352\":1,\"2353\":1,\"2354\":1,\"2355\":1,\"2356\":1,\"2357\":1,\"2358\":1,\"2359\":1,\"2369\":2,\"2374\":1,\"2377\":2,\"2378\":1,\"2382\":1,\"2389\":1,\"2397\":3,\"2404\":3,\"2416\":1,\"2417\":1,\"2418\":1,\"2421\":1,\"2423\":1,\"2424\":1,\"2433\":3,\"2437\":1,\"2443\":3,\"2449\":3,\"2459\":4,\"2460\":2,\"2461\":2,\"2480\":3,\"2485\":6,\"2486\":1,\"2493\":1,\"2496\":1,\"2512\":1,\"2514\":1,\"2515\":1,\"2524\":3,\"2528\":1,\"2540\":1,\"2548\":1,\"2549\":1,\"2554\":2,\"2559\":1,\"2562\":1,\"2564\":2,\"2569\":1,\"2572\":2,\"2574\":1,\"2581\":1,\"2582\":1,\"2583\":1,\"2584\":1,\"2586\":1,\"2593\":1,\"2598\":1,\"2599\":1,\"2600\":1,\"2601\":9,\"2602\":9,\"2603\":9,\"2604\":9,\"2605\":9,\"2606\":10,\"2607\":10,\"2608\":10,\"2609\":9,\"2610\":14,\"2611\":13,\"2612\":10,\"2613\":10,\"2614\":10,\"2615\":14,\"2616\":13,\"2617\":9,\"2618\":9,\"2619\":9,\"2620\":9,\"2621\":9,\"2622\":9,\"2623\":10,\"2624\":10,\"2625\":10,\"2626\":9,\"2627\":14,\"2628\":13,\"2629\":10,\"2630\":10,\"2686\":9,\"2701\":9,\"2716\":9}}],[\"自加\",{\"1\":{\"544\":1,\"1059\":1,\"1574\":1}}],[\"自研的\",{\"1\":{\"503\":1,\"1018\":1,\"1533\":1}}],[\"自动执行命令执行器\",{\"1\":{\"1909\":1,\"2278\":1,\"2647\":1}}],[\"自动化测试框架\",{\"0\":{\"487\":1,\"1002\":1,\"1517\":1},\"1\":{\"487\":2,\"1002\":2,\"1517\":2}}],[\"自动化构建和部署\",{\"1\":{\"485\":1,\"1000\":1,\"1515\":1}}],[\"自动生成的\",{\"1\":{\"2686\":1,\"2701\":1,\"2716\":1}}],[\"自动生成\",{\"1\":{\"58\":1,\"568\":1,\"1083\":1,\"2686\":1,\"2701\":1,\"2716\":1}}],[\"自行处理数据的传输形式\",{\"1\":{\"476\":1,\"991\":1,\"1506\":1}}],[\"自行将数据转为平台所需要的格式\",{\"1\":{\"476\":1,\"991\":1,\"1506\":1}}],[\"自定义类型构造\",{\"1\":{\"538\":1,\"1053\":1,\"1568\":1}}],[\"自定义一个\",{\"1\":{\"468\":1,\"983\":1,\"1498\":1}}],[\"自定义插件配置目录\",{\"1\":{\"443\":1,\"958\":1,\"1473\":1}}],[\"自定义插件数据目录\",{\"1\":{\"442\":1,\"957\":1,\"1472\":1}}],[\"自定义插件缓存目录\",{\"1\":{\"441\":1,\"956\":1,\"1471\":1}}],[\"自定义配置目录\",{\"1\":{\"440\":1,\"955\":1,\"1470\":1}}],[\"自定义数据目录\",{\"1\":{\"439\":1,\"954\":1,\"1469\":1}}],[\"自定义缓存目录\",{\"1\":{\"438\":1,\"953\":1,\"1468\":1}}],[\"自定义日志输出\",{\"0\":{\"420\":1,\"935\":1,\"1450\":1}}],[\"自定义日志\",{\"1\":{\"226\":1,\"738\":1,\"1253\":1}}],[\"自定义\",{\"1\":{\"53\":2,\"226\":1,\"563\":2,\"738\":1,\"1078\":2,\"1253\":1}}],[\"where\",{\"1\":{\"2688\":2,\"2694\":1,\"2695\":1,\"2703\":2,\"2709\":1,\"2710\":1,\"2718\":2,\"2724\":1,\"2725\":1}}],[\"while\",{\"1\":{\"121\":1,\"472\":3,\"631\":1,\"987\":3,\"1146\":1,\"1502\":3}}],[\"whitespace=\",{\"1\":{\"99\":1,\"609\":1,\"1124\":1}}],[\"whitespace=true\",{\"1\":{\"99\":1,\"609\":1,\"1124\":1}}],[\"whitespace\",{\"1\":{\"99\":2,\"187\":1,\"360\":1,\"361\":1,\"609\":2,\"699\":1,\"875\":1,\"876\":1,\"1124\":2,\"1214\":1,\"1390\":1,\"1391\":1,\"1872\":1,\"1877\":1,\"1889\":1,\"2241\":1,\"2246\":1,\"2258\":1,\"2610\":1,\"2615\":1,\"2627\":1}}],[\"which\",{\"1\":{\"78\":1,\"588\":1,\"1103\":1}}],[\"wrapper\",{\"1\":{\"468\":3,\"983\":3,\"1498\":3,\"1667\":1,\"1696\":1,\"1787\":1,\"1799\":1,\"1907\":1,\"2036\":1,\"2065\":1,\"2156\":1,\"2168\":1,\"2276\":1,\"2405\":1,\"2434\":1,\"2525\":1,\"2537\":1,\"2645\":1}}],[\"write\",{\"1\":{\"435\":1,\"950\":1,\"1465\":1}}],[\"wordcloud\",{\"1\":{\"1926\":2,\"1928\":2,\"1929\":3,\"1931\":1,\"1937\":2,\"2295\":2,\"2297\":2,\"2298\":3,\"2300\":1,\"2306\":2,\"2664\":2,\"2666\":2,\"2667\":3,\"2669\":1,\"2675\":2}}],[\"work\",{\"1\":{\"472\":1,\"473\":1,\"987\":1,\"988\":1,\"1502\":1,\"1503\":1}}],[\"working\",{\"1\":{\"438\":1,\"439\":1,\"440\":1,\"953\":1,\"954\":1,\"955\":1,\"1468\":1,\"1469\":1,\"1470\":1}}],[\"world\",{\"1\":{\"120\":1,\"124\":1,\"435\":1,\"526\":2,\"534\":2,\"536\":3,\"545\":8,\"630\":1,\"634\":1,\"950\":1,\"1041\":2,\"1049\":2,\"1051\":3,\"1060\":8,\"1145\":1,\"1149\":1,\"1465\":1,\"1556\":2,\"1564\":2,\"1566\":3,\"1575\":8,\"1582\":2,\"1909\":4,\"1963\":2,\"2278\":4,\"2332\":2,\"2647\":4}}],[\"weas\",{\"1\":{\"2688\":6,\"2703\":6,\"2718\":6}}],[\"wea\",{\"1\":{\"2687\":21,\"2688\":6,\"2702\":21,\"2703\":6,\"2717\":21,\"2718\":6}}],[\"weather=\",{\"1\":{\"2687\":2,\"2702\":2,\"2717\":2}}],[\"weather\",{\"1\":{\"423\":2,\"425\":1,\"426\":4,\"427\":2,\"428\":6,\"515\":3,\"528\":3,\"529\":3,\"938\":2,\"940\":1,\"941\":4,\"942\":2,\"943\":6,\"1030\":3,\"1043\":3,\"1044\":3,\"1453\":2,\"1455\":1,\"1456\":4,\"1457\":2,\"1458\":6,\"1545\":3,\"1558\":3,\"1559\":3,\"2685\":16,\"2686\":29,\"2687\":34,\"2688\":20,\"2700\":16,\"2701\":29,\"2702\":34,\"2703\":20,\"2715\":16,\"2716\":29,\"2717\":34,\"2718\":20}}],[\"week\",{\"1\":{\"420\":1,\"935\":1,\"1450\":1}}],[\"we\",{\"1\":{\"419\":1,\"934\":1,\"1449\":1}}],[\"webpack\",{\"1\":{\"503\":1,\"1018\":1,\"1533\":1}}],[\"webui\",{\"1\":{\"499\":1,\"1014\":1,\"1529\":1}}],[\"web\",{\"1\":{\"58\":2,\"488\":1,\"489\":1,\"492\":3,\"493\":3,\"568\":2,\"1003\":1,\"1004\":1,\"1007\":3,\"1008\":3,\"1083\":2,\"1518\":1,\"1519\":1,\"1522\":3,\"1523\":3}}],[\"webhook\",{\"1\":{\"53\":1,\"473\":5,\"488\":1,\"489\":1,\"563\":1,\"988\":5,\"1003\":1,\"1004\":1,\"1078\":1,\"1503\":5,\"1518\":1,\"1519\":1,\"1940\":1,\"1941\":1,\"2309\":1,\"2310\":1,\"2678\":1,\"2679\":1}}],[\"websocketcontext\",{\"1\":{\"1787\":1,\"2156\":1,\"2525\":1}}],[\"websocketclientprotocol\",{\"1\":{\"1799\":1,\"2168\":1,\"2537\":1}}],[\"websocketclientmixin\",{\"1\":{\"472\":2,\"987\":2,\"1502\":2}}],[\"websocketclosed\",{\"1\":{\"121\":1,\"195\":1,\"472\":2,\"631\":1,\"707\":1,\"987\":2,\"1146\":1,\"1222\":1,\"1502\":2}}],[\"websocketserversetup\",{\"1\":{\"119\":1,\"121\":3,\"473\":2,\"629\":1,\"631\":3,\"988\":2,\"1144\":1,\"1146\":3,\"1503\":2,\"1604\":1,\"1694\":1,\"1741\":1,\"1785\":1,\"1954\":1,\"2063\":1,\"2087\":1,\"2154\":1,\"2323\":1,\"2432\":1,\"2456\":1,\"2523\":1}}],[\"websockets\",{\"0\":{\"79\":1,\"589\":1,\"1104\":1,\"1795\":1,\"2164\":1,\"2533\":1},\"1\":{\"79\":1,\"589\":1,\"1104\":1,\"1795\":3,\"1797\":1,\"1799\":1,\"2164\":3,\"2166\":1,\"2168\":1,\"2533\":3,\"2535\":1,\"2537\":1}}],[\"websocket\",{\"0\":{\"121\":1,\"631\":1,\"1146\":1,\"1942\":1,\"1944\":1,\"2311\":1,\"2313\":1,\"2680\":1,\"2682\":1},\"1\":{\"53\":6,\"78\":1,\"79\":3,\"80\":1,\"119\":1,\"121\":6,\"214\":1,\"472\":9,\"473\":12,\"476\":7,\"496\":1,\"563\":6,\"588\":1,\"589\":3,\"590\":1,\"629\":1,\"631\":6,\"726\":1,\"987\":9,\"988\":12,\"991\":7,\"1011\":1,\"1078\":6,\"1103\":1,\"1104\":3,\"1105\":1,\"1144\":1,\"1146\":6,\"1241\":1,\"1502\":9,\"1503\":12,\"1506\":7,\"1526\":1,\"1604\":1,\"1606\":2,\"1665\":1,\"1667\":2,\"1696\":3,\"1741\":1,\"1744\":1,\"1745\":1,\"1746\":1,\"1747\":1,\"1748\":1,\"1749\":1,\"1750\":1,\"1751\":1,\"1762\":1,\"1763\":2,\"1764\":1,\"1787\":2,\"1795\":1,\"1798\":1,\"1799\":2,\"1940\":2,\"1942\":6,\"1954\":1,\"1956\":2,\"2034\":1,\"2036\":2,\"2065\":3,\"2087\":1,\"2122\":1,\"2123\":1,\"2124\":1,\"2125\":1,\"2126\":1,\"2127\":1,\"2128\":1,\"2129\":1,\"2130\":1,\"2131\":2,\"2132\":1,\"2156\":2,\"2164\":1,\"2167\":1,\"2168\":2,\"2309\":2,\"2311\":6,\"2323\":1,\"2325\":2,\"2403\":1,\"2405\":2,\"2434\":3,\"2456\":1,\"2491\":1,\"2492\":1,\"2493\":1,\"2494\":1,\"2495\":1,\"2496\":1,\"2497\":1,\"2498\":1,\"2499\":1,\"2500\":2,\"2501\":1,\"2525\":2,\"2533\":1,\"2536\":1,\"2537\":2,\"2678\":2,\"2680\":6}}],[\"warning\",{\"1\":{\"419\":4,\"457\":1,\"475\":1,\"934\":4,\"972\":1,\"990\":1,\"1449\":4,\"1487\":1,\"1505\":1}}],[\"ws\",{\"1\":{\"121\":8,\"472\":6,\"473\":4,\"476\":7,\"631\":8,\"987\":6,\"988\":4,\"991\":7,\"1146\":8,\"1502\":6,\"1503\":4,\"1506\":7,\"1942\":7,\"2311\":7,\"2680\":7}}],[\"wsgi\",{\"1\":{\"58\":1,\"568\":1,\"1083\":1}}],[\"win\",{\"1\":{\"439\":2,\"440\":2,\"954\":2,\"955\":2,\"1469\":2,\"1470\":2}}],[\"windows\",{\"1\":{\"64\":2,\"72\":1,\"435\":2,\"438\":1,\"507\":1,\"574\":2,\"582\":1,\"950\":2,\"953\":1,\"1022\":1,\"1089\":2,\"1097\":1,\"1465\":2,\"1468\":1,\"1537\":1,\"2697\":2,\"2712\":2,\"2727\":2}}],[\"with\",{\"1\":{\"58\":1,\"79\":1,\"121\":1,\"142\":1,\"146\":2,\"147\":1,\"148\":1,\"159\":1,\"160\":1,\"449\":1,\"472\":1,\"568\":1,\"589\":1,\"631\":1,\"652\":1,\"656\":2,\"657\":1,\"658\":1,\"669\":1,\"670\":1,\"964\":1,\"987\":1,\"1083\":1,\"1104\":1,\"1146\":1,\"1167\":1,\"1171\":2,\"1172\":1,\"1173\":1,\"1184\":1,\"1185\":1,\"1479\":1,\"1502\":1,\"1905\":1,\"1906\":1,\"1941\":3,\"1942\":2,\"2274\":1,\"2275\":1,\"2310\":3,\"2311\":2,\"2643\":1,\"2644\":1,\"2679\":3,\"2680\":2,\"2687\":1,\"2691\":1,\"2697\":1,\"2702\":1,\"2706\":1,\"2712\":1,\"2717\":1,\"2721\":1,\"2727\":1}}],[\"默认参数字典\",{\"1\":{\"1938\":1,\"2307\":1,\"2676\":1}}],[\"默认数据库连接\",{\"1\":{\"1936\":1,\"2305\":1,\"2674\":1}}],[\"默认禁用的内置选项\",{\"1\":{\"1904\":1,\"2273\":1,\"2642\":1}}],[\"默认是否开启紧凑模式\",{\"1\":{\"1904\":1,\"2273\":1,\"2642\":1}}],[\"默认是否开启模糊匹配\",{\"1\":{\"1904\":1,\"2273\":1,\"2642\":1}}],[\"默认是否启用消息缓存\",{\"1\":{\"1904\":1,\"2273\":1,\"2642\":1}}],[\"默认是否抛出异常\",{\"1\":{\"1904\":1,\"2273\":1,\"2642\":1}}],[\"默认格式化器类型\",{\"1\":{\"1904\":1,\"2273\":1,\"2642\":1}}],[\"默认分隔符配置\",{\"1\":{\"1904\":1,\"2273\":1,\"2642\":1}}],[\"默认前缀配置\",{\"1\":{\"1904\":1,\"2273\":1,\"2642\":1}}],[\"默认通过\",{\"1\":{\"1594\":1,\"1975\":1,\"2344\":1}}],[\"默认情况下\",{\"1\":{\"545\":1,\"1060\":1,\"1575\":1,\"1899\":1,\"1941\":1,\"2268\":1,\"2310\":1,\"2637\":1,\"2679\":1}}],[\"默认的内置选项名称\",{\"1\":{\"1904\":1,\"2273\":1,\"2642\":1}}],[\"默认的日志处理器\",{\"1\":{\"420\":1,\"935\":1,\"1450\":1}}],[\"默认的日志处理器并添加新的日志处理器\",{\"1\":{\"420\":1,\"935\":1,\"1450\":1}}],[\"默认的日志格式为\",{\"1\":{\"420\":1,\"935\":1,\"1450\":1}}],[\"默认的日志过滤器\",{\"1\":{\"230\":1,\"742\":1,\"1257\":1}}],[\"默认的\",{\"1\":{\"419\":1,\"934\":1,\"1449\":1}}],[\"默认会更新为当前事件的触发对象\",{\"1\":{\"395\":1,\"910\":1,\"1425\":1}}],[\"默认会更新为\",{\"1\":{\"394\":1,\"909\":1,\"1424\":1}}],[\"默认会话权限更新函数\",{\"1\":{\"242\":1,\"755\":1,\"1270\":1}}],[\"默认存储器类型\",{\"1\":{\"286\":1,\"745\":1,\"1260\":1}}],[\"默认事件类型更新函数\",{\"1\":{\"242\":1,\"755\":1,\"1270\":1}}],[\"默认日志格式\",{\"1\":{\"231\":1,\"743\":1,\"1258\":1}}],[\"默认信息\",{\"1\":{\"227\":1,\"739\":1,\"1254\":1}}],[\"默认从\",{\"1\":{\"224\":1,\"736\":1,\"1251\":1}}],[\"默认不会添加\",{\"1\":{\"105\":1,\"615\":1,\"1130\":1}}],[\"默认状态\",{\"0\":{\"92\":1,\"602\":1,\"1117\":1},\"1\":{\"242\":1,\"755\":1,\"1270\":1}}],[\"默认使用\",{\"1\":{\"81\":1,\"591\":1,\"1106\":1,\"1904\":1,\"2273\":1,\"2642\":1}}],[\"默认值注入参数\",{\"1\":{\"304\":1,\"813\":1,\"1328\":1}}],[\"默认值\",{\"1\":{\"60\":1,\"61\":1,\"62\":1,\"63\":1,\"64\":1,\"65\":2,\"66\":2,\"67\":2,\"68\":2,\"69\":1,\"72\":1,\"73\":2,\"74\":2,\"75\":2,\"76\":2,\"77\":1,\"437\":1,\"438\":1,\"439\":1,\"440\":1,\"441\":1,\"442\":1,\"443\":1,\"456\":1,\"457\":1,\"458\":1,\"570\":1,\"571\":1,\"572\":1,\"573\":1,\"574\":1,\"575\":2,\"576\":2,\"577\":2,\"578\":2,\"579\":1,\"582\":1,\"583\":2,\"584\":2,\"585\":2,\"586\":2,\"587\":1,\"952\":1,\"953\":1,\"954\":1,\"955\":1,\"956\":1,\"957\":1,\"958\":1,\"971\":1,\"972\":1,\"973\":1,\"1085\":1,\"1086\":1,\"1087\":1,\"1088\":1,\"1089\":1,\"1090\":2,\"1091\":2,\"1092\":2,\"1093\":2,\"1094\":1,\"1097\":1,\"1098\":2,\"1099\":2,\"1100\":2,\"1101\":2,\"1102\":1,\"1467\":1,\"1468\":1,\"1469\":1,\"1470\":1,\"1471\":1,\"1472\":1,\"1473\":1,\"1486\":1,\"1487\":1,\"1488\":1,\"1683\":1,\"1684\":1,\"1685\":1,\"1686\":1,\"1774\":1,\"1775\":1,\"1776\":1,\"1777\":1,\"1900\":1,\"1916\":1,\"1917\":1,\"1918\":1,\"1919\":1,\"1920\":1,\"1921\":1,\"1922\":1,\"1923\":1,\"1924\":1,\"1925\":1,\"2052\":1,\"2053\":1,\"2054\":1,\"2055\":1,\"2143\":1,\"2144\":1,\"2145\":1,\"2146\":1,\"2269\":1,\"2285\":1,\"2286\":1,\"2287\":1,\"2288\":1,\"2289\":1,\"2290\":1,\"2291\":1,\"2292\":1,\"2293\":1,\"2294\":1,\"2421\":1,\"2422\":1,\"2423\":1,\"2424\":1,\"2512\":1,\"2513\":1,\"2514\":1,\"2515\":1,\"2638\":1,\"2654\":1,\"2655\":1,\"2656\":1,\"2657\":1,\"2658\":1,\"2659\":1,\"2660\":1,\"2661\":1,\"2662\":1,\"2663\":1}}],[\"默认\",{\"0\":{\"58\":1,\"568\":1,\"1083\":1},\"1\":{\"457\":1,\"972\":1,\"1487\":1,\"1863\":1,\"1864\":1,\"1865\":1,\"1866\":1,\"1867\":1,\"1868\":1,\"1869\":1,\"1870\":1,\"1871\":1,\"1872\":1,\"1873\":1,\"1874\":1,\"1875\":1,\"1877\":1,\"1878\":1,\"1880\":1,\"1881\":1,\"1882\":1,\"1883\":1,\"1884\":1,\"1885\":1,\"1886\":1,\"1887\":1,\"1888\":1,\"1889\":1,\"1890\":1,\"1891\":1,\"1892\":1,\"1901\":1,\"2232\":1,\"2233\":1,\"2234\":1,\"2235\":1,\"2236\":1,\"2237\":1,\"2238\":1,\"2239\":1,\"2240\":1,\"2241\":1,\"2242\":1,\"2243\":1,\"2244\":1,\"2246\":1,\"2247\":1,\"2249\":1,\"2250\":1,\"2251\":1,\"2252\":1,\"2253\":1,\"2254\":1,\"2255\":1,\"2256\":1,\"2257\":1,\"2258\":1,\"2259\":1,\"2260\":1,\"2261\":1,\"2270\":1,\"2601\":1,\"2602\":1,\"2603\":1,\"2604\":1,\"2605\":1,\"2606\":1,\"2607\":1,\"2608\":1,\"2609\":1,\"2610\":1,\"2611\":1,\"2612\":1,\"2613\":1,\"2615\":1,\"2616\":1,\"2618\":1,\"2619\":1,\"2620\":1,\"2621\":1,\"2622\":1,\"2623\":1,\"2624\":1,\"2625\":1,\"2626\":1,\"2627\":1,\"2628\":1,\"2629\":1,\"2630\":1,\"2639\":1}}],[\"默认为参数的类型注释\",{\"1\":{\"297\":1,\"815\":1,\"1330\":1}}],[\"默认为\",{\"1\":{\"54\":2,\"65\":1,\"66\":1,\"67\":1,\"68\":1,\"73\":1,\"74\":1,\"75\":1,\"76\":1,\"95\":1,\"96\":1,\"97\":1,\"99\":1,\"297\":2,\"564\":2,\"575\":1,\"576\":1,\"577\":1,\"578\":1,\"583\":1,\"584\":1,\"585\":1,\"586\":1,\"605\":1,\"606\":1,\"607\":1,\"609\":1,\"815\":2,\"1079\":2,\"1090\":1,\"1091\":1,\"1092\":1,\"1093\":1,\"1098\":1,\"1099\":1,\"1100\":1,\"1101\":1,\"1120\":1,\"1121\":1,\"1122\":1,\"1124\":1,\"1330\":2,\"1639\":2,\"1678\":1,\"1679\":1,\"1680\":1,\"1681\":1,\"1683\":1,\"1684\":1,\"1685\":1,\"1686\":1,\"1774\":1,\"1775\":1,\"1776\":1,\"1777\":1,\"1901\":2,\"1905\":1,\"2008\":2,\"2047\":1,\"2048\":1,\"2049\":1,\"2050\":1,\"2052\":1,\"2053\":1,\"2054\":1,\"2055\":1,\"2143\":1,\"2144\":1,\"2145\":1,\"2146\":1,\"2270\":2,\"2274\":1,\"2377\":2,\"2416\":1,\"2417\":1,\"2418\":1,\"2419\":1,\"2421\":1,\"2422\":1,\"2423\":1,\"2424\":1,\"2512\":1,\"2513\":1,\"2514\":1,\"2515\":1,\"2639\":2,\"2643\":1}}],[\"具名参数列表\",{\"1\":{\"1648\":1,\"2017\":1,\"2386\":1}}],[\"具体如下\",{\"1\":{\"2696\":1,\"2711\":1,\"2726\":1}}],[\"具体而言\",{\"1\":{\"2687\":1,\"2702\":1,\"2717\":1}}],[\"具体为\",{\"1\":{\"1939\":1,\"2308\":1,\"2677\":1}}],[\"具体内容参考事件响应器进阶\",{\"1\":{\"527\":1,\"1042\":1,\"1557\":1}}],[\"具体可选配置方式以及配置项详情参考配置\",{\"1\":{\"508\":1,\"1023\":1,\"1538\":1}}],[\"具体可以参考以下适配器\",{\"1\":{\"479\":1,\"994\":1,\"1509\":1}}],[\"具体请参考事件类型\",{\"1\":{\"478\":1,\"993\":1,\"1508\":1}}],[\"具体请参考\",{\"1\":{\"475\":1,\"990\":1,\"1505\":1}}],[\"具体请参考安装驱动器\",{\"1\":{\"54\":1,\"564\":1,\"1079\":1}}],[\"具体用法如下\",{\"1\":{\"468\":1,\"983\":1,\"1498\":1}}],[\"具体方法参考\",{\"1\":{\"124\":1,\"634\":1,\"1149\":1}}],[\"具体填写见发布插件章节\",{\"1\":{\"110\":1,\"620\":1,\"1135\":1}}],[\"具体信息参考\",{\"1\":{\"64\":1,\"574\":1,\"1089\":1}}],[\"具有共同命令名称前缀的命令组以及具有共同参数的响应器组\",{\"1\":{\"527\":1,\"1042\":1,\"1557\":1}}],[\"具有三个属性\",{\"1\":{\"121\":1,\"631\":1,\"1146\":1}}],[\"具有四个属性\",{\"1\":{\"120\":1,\"630\":1,\"1145\":1}}],[\"具有极佳的编写体验\",{\"1\":{\"58\":1,\"568\":1,\"1083\":1}}],[\"具有以下功能\",{\"1\":{\"53\":1,\"563\":1,\"1078\":1}}],[\"具有交互式功能的命令行工具\",{\"1\":{\"4\":1,\"16\":1,\"28\":1}}],[\"符号作为内置驱动器模块路径的前缀\",{\"1\":{\"54\":1,\"564\":1,\"1079\":1}}],[\"~fastapi\",{\"1\":{\"54\":1,\"564\":1,\"1079\":1}}],[\"~\",{\"1\":{\"54\":1,\"166\":1,\"438\":2,\"439\":2,\"440\":1,\"564\":1,\"676\":1,\"953\":2,\"954\":2,\"955\":1,\"1079\":1,\"1191\":1,\"1468\":2,\"1469\":2,\"1470\":1,\"1846\":1,\"2215\":1,\"2584\":1}}],[\"特性\",{\"1\":{\"1910\":1,\"2279\":1,\"2648\":1}}],[\"特性实现完整的静态网站生成\",{\"1\":{\"503\":1,\"1018\":1,\"1533\":1}}],[\"特殊的键\",{\"1\":{\"1897\":1,\"2266\":1,\"2635\":1}}],[\"特定的缺失\",{\"1\":{\"491\":1,\"1006\":1,\"1521\":1}}],[\"特定的\",{\"1\":{\"491\":1,\"1006\":1,\"1521\":1}}],[\"特别是当你会发布插件时\",{\"1\":{\"2685\":1,\"2700\":1,\"2715\":1}}],[\"特别是对于\",{\"1\":{\"487\":1,\"1002\":1,\"1517\":1}}],[\"特别提醒\",{\"1\":{\"1900\":1,\"2269\":1,\"2638\":1}}],[\"特别的\",{\"1\":{\"54\":1,\"401\":1,\"564\":1,\"916\":1,\"1079\":1,\"1431\":1,\"1897\":1,\"1900\":1,\"2266\":1,\"2269\":1,\"2635\":1,\"2638\":1}}],[\"特色\",{\"0\":{\"1\":1,\"13\":1,\"25\":1}}],[\"但不建议使用\",{\"1\":{\"2695\":1,\"2710\":1,\"2725\":1}}],[\"但不会匹配\",{\"1\":{\"1894\":1,\"2263\":1,\"2632\":1}}],[\"但覆盖顺序并非显而易见\",{\"1\":{\"1939\":1,\"2308\":1,\"2677\":1}}],[\"但实际上它需要的是一个\",{\"1\":{\"1897\":1,\"2266\":1,\"2635\":1}}],[\"但由于平台的兼容性问题\",{\"1\":{\"525\":1,\"1040\":1,\"1555\":1}}],[\"但在底层的加载逻辑是一致的\",{\"1\":{\"516\":1,\"1031\":1,\"1546\":1}}],[\"但已有不少插件作者改名\",{\"1\":{\"504\":1,\"1019\":1,\"1534\":1}}],[\"但因此也增加了插件统一管理的难度\",{\"1\":{\"501\":1,\"1016\":1,\"1531\":1}}],[\"但直接使用\",{\"1\":{\"468\":1,\"527\":1,\"983\":1,\"1042\":1,\"1498\":1,\"1557\":1}}],[\"但\",{\"1\":{\"212\":1,\"424\":1,\"724\":1,\"939\":1,\"1239\":1,\"1454\":1}}],[\"但只能在特定类型驱动器下运行\",{\"1\":{\"118\":1,\"628\":1,\"1143\":1}}],[\"但并不能直接使用\",{\"1\":{\"118\":1,\"628\":1,\"1143\":1}}],[\"但当我们使用了外部插件\",{\"1\":{\"116\":1,\"626\":1,\"1141\":1}}],[\"但是可以注意到它们几乎与\",{\"1\":{\"2686\":1,\"2701\":1,\"2716\":1}}],[\"但是数据库中并没有对应的表\",{\"1\":{\"2686\":1,\"2701\":1,\"2716\":1}}],[\"但是现在想要卸载它\",{\"1\":{\"1929\":1,\"2298\":1,\"2667\":1}}],[\"但是仍需要在非\",{\"1\":{\"1895\":1,\"2264\":1,\"2633\":1}}],[\"但是允许含有默认值的参数在前\",{\"1\":{\"1895\":1,\"2264\":1,\"2633\":1}}],[\"但是要注意的是\",{\"1\":{\"431\":1,\"946\":1,\"1461\":1}}],[\"但是这种方式难以控制\",{\"1\":{\"418\":1,\"933\":1,\"1448\":1}}],[\"但是\",{\"1\":{\"115\":1,\"422\":1,\"499\":1,\"504\":1,\"625\":1,\"937\":1,\"1014\":1,\"1019\":1,\"1140\":1,\"1452\":1,\"1529\":1,\"1534\":1,\"2685\":1,\"2686\":1,\"2687\":1,\"2697\":1,\"2700\":1,\"2701\":1,\"2702\":1,\"2712\":1,\"2715\":1,\"2716\":1,\"2717\":1,\"2727\":1}}],[\"但是我们也可以自定义事件响应器存储\",{\"1\":{\"81\":1,\"591\":1,\"1106\":1}}],[\"但会提供参数列表\",{\"1\":{\"100\":1,\"610\":1,\"1125\":1}}],[\"但需要安装额外依赖才能使用\",{\"1\":{\"54\":1,\"564\":1,\"1079\":1}}],[\"但混入类驱动器只能为客户端类型\",{\"1\":{\"54\":1,\"564\":1,\"1079\":1}}],[\"但服务端型驱动器仅能选择一个\",{\"1\":{\"54\":1,\"564\":1,\"1079\":1}}],[\"<类名小写>\",{\"1\":{\"2685\":1,\"2700\":1,\"2715\":1}}],[\"<头部类型>\",{\"1\":{\"1931\":1,\"2300\":1,\"2669\":1}}],[\"<插件模块名>\",{\"1\":{\"1931\":1,\"1932\":2,\"1933\":2,\"2300\":1,\"2301\":2,\"2302\":2,\"2669\":1,\"2670\":2,\"2671\":2,\"2685\":1,\"2700\":1,\"2715\":1}}],[\"<迁移\",{\"1\":{\"1931\":1,\"1932\":2,\"1933\":2,\"2300\":1,\"2301\":2,\"2302\":2,\"2669\":1,\"2670\":2,\"2671\":2}}],[\"<key>\",{\"1\":{\"1909\":1,\"2278\":1,\"2647\":1}}],[\"<abc\",{\"1\":{\"1912\":1,\"2281\":1,\"2650\":1}}],[\"<a\",{\"1\":{\"1900\":1,\"2269\":1,\"2638\":1}}],[\"<adapter>\",{\"1\":{\"1846\":1,\"2215\":1,\"2584\":1}}],[\"<type\",{\"1\":{\"527\":1,\"1042\":1,\"1557\":1}}],[\"<tag>\",{\"1\":{\"398\":1,\"913\":1,\"1428\":1}}],[\"<y>\",{\"1\":{\"476\":1,\"991\":1,\"1506\":1}}],[\"<rule\",{\"1\":{\"1872\":1,\"1874\":1,\"1889\":1,\"1891\":1,\"2241\":1,\"2243\":1,\"2258\":1,\"2260\":1,\"2610\":1,\"2612\":1,\"2627\":1,\"2629\":1}}],[\"<r><bg\",{\"1\":{\"472\":3,\"987\":3,\"1502\":3}}],[\"<red>big<\",{\"1\":{\"419\":1,\"934\":1,\"1449\":1}}],[\"<username>\",{\"1\":{\"438\":1,\"439\":2,\"440\":2,\"953\":1,\"954\":2,\"955\":2,\"1468\":1,\"1469\":2,\"1470\":2}}],[\"<cmd>\",{\"1\":{\"1909\":1,\"2278\":1,\"2647\":1}}],[\"<current\",{\"1\":{\"438\":1,\"439\":1,\"440\":1,\"953\":1,\"954\":1,\"955\":1,\"1468\":1,\"1469\":1,\"1470\":1}}],[\"<c><u>\",{\"1\":{\"420\":2,\"935\":2,\"1450\":2}}],[\"<lvl>\",{\"1\":{\"420\":2,\"935\":2,\"1450\":2}}],[\"<g>\",{\"1\":{\"420\":2,\"935\":2,\"1450\":2}}],[\"<\",{\"1\":{\"242\":1,\"420\":6,\"472\":2,\"476\":1,\"755\":1,\"935\":6,\"987\":2,\"991\":1,\"1270\":1,\"1450\":6,\"1502\":2,\"1506\":1}}],[\"<mixin>\",{\"1\":{\"54\":2,\"166\":1,\"564\":2,\"676\":1,\"1079\":2,\"1191\":1}}],[\"<module>\",{\"1\":{\"54\":2,\"166\":1,\"564\":2,\"676\":1,\"1079\":2,\"1191\":1,\"1846\":1,\"2215\":1,\"2584\":1}}],[\"<driver>\",{\"1\":{\"54\":2,\"166\":1,\"564\":2,\"676\":1,\"1079\":2,\"1191\":1}}],[\"添加成功\",{\"1\":{\"1908\":1,\"1909\":1,\"2277\":1,\"2278\":1,\"2646\":1,\"2647\":1}}],[\"添加一个消息段到消息数组末尾\",{\"1\":{\"1619\":1,\"1988\":1,\"2357\":1}}],[\"添加新自动化流程与维护现有流程困难\",{\"1\":{\"504\":1,\"1019\":1,\"1534\":1}}],[\"添加新的日志处理器\",{\"1\":{\"420\":1,\"935\":1,\"1450\":1}}],[\"添加定时任务\",{\"0\":{\"454\":1,\"969\":1,\"1484\":1}}],[\"添加\",{\"1\":{\"419\":2,\"421\":2,\"934\":2,\"936\":2,\"1449\":2,\"1451\":2}}],[\"添加路由规则\",{\"0\":{\"124\":1,\"634\":1,\"1149\":1}}],[\"添加路由\",{\"0\":{\"118\":1,\"628\":1,\"1143\":1}}],[\"添加前缀\",{\"1\":{\"105\":1,\"615\":1,\"1130\":1}}],[\"添加自定义路由\",{\"1\":{\"53\":1,\"563\":1,\"1078\":1}}],[\"添加其他编辑器配置推荐\",{\"1\":{\"11\":1,\"23\":1,\"35\":1}}],[\"服务器路由配置\",{\"1\":{\"1603\":1,\"1604\":1,\"1740\":1,\"1741\":1,\"1761\":1,\"1764\":1,\"1953\":1,\"1954\":1,\"2086\":1,\"2087\":1,\"2112\":1,\"2132\":1,\"2322\":1,\"2323\":1,\"2455\":1,\"2456\":1,\"2481\":1,\"2501\":1}}],[\"服务器\",{\"1\":{\"459\":1,\"974\":1,\"1489\":1}}],[\"服务器等情形\",{\"1\":{\"53\":1,\"563\":1,\"1078\":1}}],[\"服务端应用时\",{\"1\":{\"1941\":1,\"1942\":1,\"2310\":1,\"2311\":1,\"2679\":1,\"2680\":1}}],[\"服务端混入基类\",{\"1\":{\"1754\":1,\"2119\":1,\"2488\":1}}],[\"服务端基类\",{\"1\":{\"1737\":1,\"2083\":1,\"2452\":1}}],[\"服务端的功能实现\",{\"1\":{\"525\":1,\"1040\":1,\"1555\":1}}],[\"服务端的路由规则\",{\"1\":{\"119\":1,\"629\":1,\"1144\":1}}],[\"服务端\",{\"0\":{\"1941\":1,\"1942\":1,\"2310\":1,\"2311\":1,\"2679\":1,\"2680\":1},\"1\":{\"473\":2,\"988\":2,\"1503\":2,\"1940\":2,\"2309\":2,\"2678\":2}}],[\"服务端通信方式\",{\"0\":{\"473\":1,\"988\":1,\"1503\":1}}],[\"服务端监听的端口\",{\"1\":{\"168\":1,\"678\":1,\"1193\":1}}],[\"服务端监听的\",{\"1\":{\"167\":1,\"677\":1,\"1192\":1}}],[\"服务端类型的驱动器具有两个属性\",{\"1\":{\"123\":1,\"633\":1,\"1148\":1}}],[\"服务端和\",{\"1\":{\"119\":1,\"629\":1,\"1144\":1}}],[\"服务端驱动器\",{\"1\":{\"57\":1,\"58\":1,\"70\":1,\"567\":1,\"568\":1,\"580\":1,\"1082\":1,\"1083\":1,\"1095\":1}}],[\"服务端型驱动器目前有\",{\"1\":{\"53\":1,\"563\":1,\"1078\":1}}],[\"humanized\",{\"1\":{\"1907\":1,\"2276\":1,\"2645\":1}}],[\"h2\",{\"1\":{\"1752\":1,\"2113\":1,\"2482\":1}}],[\"h11\",{\"1\":{\"1752\":1,\"2113\":1,\"2482\":1}}],[\"h10\",{\"1\":{\"1752\":1,\"2113\":1,\"2482\":1}}],[\"hydrate\",{\"1\":{\"503\":1,\"1018\":1,\"1533\":1}}],[\"has\",{\"1\":{\"478\":3,\"542\":1,\"993\":3,\"1057\":1,\"1508\":3,\"1572\":1}}],[\"handle\",{\"1\":{\"120\":2,\"121\":3,\"136\":1,\"137\":1,\"200\":1,\"203\":1,\"205\":1,\"206\":1,\"207\":1,\"293\":1,\"424\":8,\"431\":3,\"473\":4,\"474\":2,\"475\":2,\"476\":1,\"477\":4,\"630\":2,\"631\":3,\"646\":1,\"647\":1,\"712\":1,\"715\":1,\"717\":1,\"718\":1,\"719\":1,\"805\":1,\"939\":8,\"946\":3,\"988\":4,\"989\":2,\"990\":2,\"991\":1,\"992\":4,\"1145\":2,\"1146\":3,\"1161\":1,\"1162\":1,\"1227\":1,\"1230\":1,\"1232\":1,\"1233\":1,\"1234\":1,\"1320\":1,\"1454\":8,\"1461\":3,\"1503\":4,\"1504\":2,\"1505\":2,\"1506\":1,\"1507\":4,\"2687\":4,\"2688\":3,\"2691\":1,\"2692\":1,\"2702\":4,\"2703\":3,\"2706\":1,\"2707\":1,\"2717\":4,\"2718\":3,\"2721\":1,\"2722\":1}}],[\"handlers=\",{\"1\":{\"421\":1,\"936\":1,\"1451\":1}}],[\"handlers\",{\"1\":{\"93\":1,\"242\":1,\"603\":1,\"755\":1,\"1118\":1,\"1270\":1,\"1863\":1,\"1864\":1,\"1865\":1,\"1866\":1,\"1867\":1,\"1868\":1,\"1869\":1,\"1870\":1,\"1871\":1,\"1872\":1,\"1873\":1,\"1874\":1,\"1875\":1,\"1876\":1,\"1877\":1,\"1878\":1,\"1879\":1,\"1880\":1,\"1881\":1,\"1882\":1,\"1883\":1,\"1884\":1,\"1885\":1,\"1886\":1,\"1887\":1,\"1888\":1,\"1889\":1,\"1890\":1,\"1891\":1,\"1892\":1,\"2232\":1,\"2233\":1,\"2234\":1,\"2235\":1,\"2236\":1,\"2237\":1,\"2238\":1,\"2239\":1,\"2240\":1,\"2241\":1,\"2242\":1,\"2243\":1,\"2244\":1,\"2245\":1,\"2246\":1,\"2247\":1,\"2248\":1,\"2249\":1,\"2250\":1,\"2251\":1,\"2252\":1,\"2253\":1,\"2254\":1,\"2255\":1,\"2256\":1,\"2257\":1,\"2258\":1,\"2259\":1,\"2260\":1,\"2261\":1,\"2601\":1,\"2602\":1,\"2603\":1,\"2604\":1,\"2605\":1,\"2606\":1,\"2607\":1,\"2608\":1,\"2609\":1,\"2610\":1,\"2611\":1,\"2612\":1,\"2613\":1,\"2614\":1,\"2615\":1,\"2616\":1,\"2617\":1,\"2618\":1,\"2619\":1,\"2620\":1,\"2621\":1,\"2622\":1,\"2623\":1,\"2624\":1,\"2625\":1,\"2626\":1,\"2627\":1,\"2628\":1,\"2629\":1,\"2630\":1}}],[\"handler\",{\"1\":{\"90\":1,\"121\":2,\"200\":2,\"201\":1,\"203\":1,\"205\":4,\"206\":4,\"207\":4,\"242\":1,\"248\":2,\"249\":2,\"250\":2,\"251\":2,\"297\":2,\"393\":1,\"421\":1,\"600\":1,\"631\":2,\"712\":2,\"713\":1,\"715\":1,\"717\":4,\"718\":4,\"719\":4,\"755\":1,\"761\":2,\"762\":2,\"763\":2,\"764\":2,\"815\":2,\"908\":1,\"936\":1,\"1115\":1,\"1146\":2,\"1227\":2,\"1228\":1,\"1230\":1,\"1232\":4,\"1233\":4,\"1234\":4,\"1270\":1,\"1276\":2,\"1277\":2,\"1278\":2,\"1279\":2,\"1330\":2,\"1423\":1,\"1451\":1,\"1863\":1,\"1864\":1,\"1865\":1,\"1866\":1,\"1867\":1,\"1868\":1,\"1869\":1,\"1870\":1,\"1871\":1,\"1872\":1,\"1873\":1,\"1874\":1,\"1875\":1,\"1876\":1,\"1877\":1,\"1878\":1,\"1879\":1,\"1880\":1,\"1881\":1,\"1882\":1,\"1883\":1,\"1884\":1,\"1885\":1,\"1886\":1,\"1887\":1,\"1888\":1,\"1889\":1,\"1890\":1,\"1891\":1,\"1892\":1,\"2232\":1,\"2233\":1,\"2234\":1,\"2235\":1,\"2236\":1,\"2237\":1,\"2238\":1,\"2239\":1,\"2240\":1,\"2241\":1,\"2242\":1,\"2243\":1,\"2244\":1,\"2245\":1,\"2246\":1,\"2247\":1,\"2248\":1,\"2249\":1,\"2250\":1,\"2251\":1,\"2252\":1,\"2253\":1,\"2254\":1,\"2255\":1,\"2256\":1,\"2257\":1,\"2258\":1,\"2259\":1,\"2260\":1,\"2261\":1,\"2601\":1,\"2602\":1,\"2603\":1,\"2604\":1,\"2605\":1,\"2606\":1,\"2607\":1,\"2608\":1,\"2609\":1,\"2610\":1,\"2611\":1,\"2612\":1,\"2613\":1,\"2614\":1,\"2615\":1,\"2616\":1,\"2617\":1,\"2618\":1,\"2619\":1,\"2620\":1,\"2621\":1,\"2622\":1,\"2623\":1,\"2624\":1,\"2625\":1,\"2626\":1,\"2627\":1,\"2628\":1,\"2629\":1,\"2630\":1}}],[\"hh\",{\"1\":{\"175\":2,\"420\":2,\"685\":2,\"935\":2,\"1200\":2,\"1450\":2}}],[\"host\",{\"1\":{\"1695\":1,\"1786\":1,\"1936\":1,\"2064\":1,\"2155\":1,\"2305\":1,\"2433\":1,\"2524\":1,\"2674\":1}}],[\"host=0\",{\"1\":{\"508\":1,\"1023\":1,\"1538\":1}}],[\"host=\",{\"1\":{\"225\":1,\"737\":1,\"1252\":1}}],[\"hour\",{\"1\":{\"454\":1,\"969\":1,\"1484\":1}}],[\"hour=\",{\"1\":{\"454\":1,\"969\":1,\"1484\":1}}],[\"home\",{\"1\":{\"439\":1,\"954\":1,\"1469\":1}}],[\"homepage\",{\"1\":{\"110\":1,\"620\":1,\"1135\":1}}],[\"hook\",{\"1\":{\"125\":1,\"202\":1,\"635\":1,\"714\":1,\"1150\":1,\"1229\":1}}],[\"hooking\",{\"1\":{\"125\":1,\"635\":1,\"1150\":1}}],[\"hooks\",{\"1\":{\"116\":1,\"626\":1,\"1141\":1,\"1825\":1,\"2194\":1,\"2563\":1}}],[\"h\",{\"1\":{\"100\":1,\"175\":1,\"365\":2,\"610\":1,\"685\":1,\"880\":2,\"1125\":1,\"1200\":1,\"1395\":2,\"1905\":1,\"1912\":1,\"2274\":1,\"2281\":1,\"2643\":1,\"2650\":1}}],[\"hex\",{\"1\":{\"1897\":1,\"2266\":1,\"2635\":1}}],[\"head\",{\"1\":{\"1931\":4,\"2300\":4,\"2669\":4}}],[\"heads\",{\"0\":{\"1931\":1,\"2300\":1,\"2669\":1},\"1\":{\"1928\":1,\"1929\":1,\"1931\":1,\"2297\":1,\"2298\":1,\"2300\":1,\"2666\":1,\"2667\":1,\"2669\":1}}],[\"headertypes\",{\"1\":{\"1659\":1,\"1666\":1,\"1705\":1,\"1711\":1,\"1735\":1,\"1736\":1,\"1760\":1,\"2028\":1,\"2035\":1,\"2074\":1,\"2080\":1,\"2111\":1,\"2116\":1,\"2117\":1,\"2397\":1,\"2404\":1,\"2443\":1,\"2449\":1,\"2480\":1,\"2485\":1,\"2486\":1}}],[\"headers\",{\"1\":{\"1659\":1,\"1666\":1,\"1705\":1,\"1711\":1,\"1735\":1,\"1736\":1,\"1760\":1,\"2028\":1,\"2035\":1,\"2074\":1,\"2080\":1,\"2111\":1,\"2116\":1,\"2117\":1,\"2397\":1,\"2404\":1,\"2443\":1,\"2449\":1,\"2480\":1,\"2485\":1,\"2486\":1}}],[\"headers=\",{\"1\":{\"472\":1,\"473\":1,\"476\":1,\"987\":1,\"988\":1,\"991\":1,\"1502\":1,\"1503\":1,\"1506\":1}}],[\"header\",{\"1\":{\"53\":2,\"563\":2,\"1078\":2,\"1893\":1,\"1894\":3,\"1902\":1,\"2262\":1,\"2263\":3,\"2271\":1,\"2631\":1,\"2632\":3,\"2640\":1}}],[\"heartbeatevent\",{\"1\":{\"478\":1,\"993\":1,\"1508\":1}}],[\"help\",{\"1\":{\"99\":7,\"105\":7,\"609\":7,\"615\":7,\"1124\":7,\"1130\":7,\"1894\":2,\"1900\":1,\"1903\":1,\"1904\":2,\"1905\":1,\"1912\":1,\"2263\":2,\"2269\":1,\"2272\":1,\"2273\":2,\"2274\":1,\"2281\":1,\"2632\":2,\"2638\":1,\"2641\":1,\"2642\":2,\"2643\":1,\"2650\":1}}],[\"hello\",{\"1\":{\"98\":3,\"120\":5,\"124\":1,\"435\":1,\"526\":2,\"534\":2,\"536\":3,\"545\":6,\"608\":3,\"630\":5,\"634\":1,\"950\":1,\"1041\":2,\"1049\":2,\"1051\":3,\"1060\":6,\"1123\":3,\"1145\":5,\"1149\":1,\"1465\":1,\"1556\":2,\"1564\":2,\"1566\":3,\"1575\":6,\"1582\":2,\"1909\":4,\"1963\":2,\"2278\":4,\"2332\":2,\"2647\":4}}],[\"hide\",{\"1\":{\"1903\":2,\"2272\":2,\"2641\":2}}],[\"hint\",{\"1\":{\"372\":1,\"887\":1,\"1402\":1}}],[\"hints\",{\"1\":{\"58\":1,\"485\":1,\"487\":1,\"488\":1,\"489\":1,\"568\":1,\"1000\":1,\"1002\":1,\"1003\":1,\"1004\":1,\"1083\":1,\"1515\":1,\"1517\":1,\"1518\":1,\"1519\":1}}],[\"hi\",{\"1\":{\"98\":3,\"608\":3,\"1123\":3}}],[\"highlight\",{\"1\":{\"118\":1,\"628\":1,\"1143\":1}}],[\"high\",{\"1\":{\"58\":1,\"568\":1,\"1083\":1}}],[\"httpclientsession\",{\"1\":{\"1760\":1,\"2111\":1,\"2480\":1}}],[\"httpversion\",{\"1\":{\"1659\":1,\"1666\":1,\"1705\":1,\"1711\":1,\"1735\":1,\"1760\":1,\"2028\":1,\"2035\":1,\"2074\":1,\"2080\":1,\"2111\":1,\"2116\":1,\"2397\":1,\"2404\":1,\"2443\":1,\"2449\":1,\"2480\":1,\"2485\":1}}],[\"https\",{\"1\":{\"449\":1,\"495\":2,\"496\":1,\"497\":3,\"499\":1,\"500\":1,\"501\":1,\"503\":1,\"504\":1,\"505\":1,\"964\":1,\"1010\":2,\"1011\":1,\"1012\":3,\"1014\":1,\"1015\":1,\"1016\":1,\"1018\":1,\"1019\":1,\"1020\":1,\"1479\":1,\"1525\":2,\"1526\":1,\"1527\":3,\"1529\":1,\"1530\":1,\"1531\":1,\"1533\":1,\"1534\":1,\"1535\":1}}],[\"httpserversetup\",{\"1\":{\"119\":1,\"120\":3,\"473\":2,\"629\":1,\"630\":3,\"988\":2,\"1144\":1,\"1145\":3,\"1503\":2,\"1603\":1,\"1693\":1,\"1740\":1,\"1784\":1,\"1953\":1,\"2062\":1,\"2086\":1,\"2153\":1,\"2322\":1,\"2431\":1,\"2455\":1,\"2522\":1}}],[\"http\",{\"0\":{\"120\":1,\"630\":1,\"1145\":1,\"1941\":1,\"1943\":1,\"2310\":1,\"2312\":1,\"2679\":1,\"2681\":1},\"1\":{\"53\":4,\"78\":5,\"79\":1,\"80\":2,\"119\":1,\"120\":1,\"449\":1,\"473\":10,\"476\":3,\"488\":1,\"489\":1,\"496\":1,\"525\":1,\"563\":4,\"588\":5,\"589\":1,\"590\":2,\"629\":1,\"630\":1,\"964\":1,\"988\":10,\"991\":3,\"1003\":1,\"1004\":1,\"1011\":1,\"1040\":1,\"1078\":4,\"1103\":5,\"1104\":1,\"1105\":2,\"1144\":1,\"1145\":1,\"1479\":1,\"1503\":10,\"1506\":3,\"1518\":1,\"1519\":1,\"1526\":1,\"1555\":1,\"1603\":1,\"1605\":1,\"1704\":1,\"1740\":1,\"1758\":1,\"1759\":1,\"1760\":1,\"1761\":1,\"1940\":2,\"1941\":6,\"1953\":1,\"1955\":1,\"2073\":1,\"2086\":1,\"2109\":1,\"2110\":1,\"2111\":1,\"2112\":1,\"2309\":2,\"2310\":6,\"2322\":1,\"2324\":1,\"2442\":1,\"2455\":1,\"2478\":1,\"2479\":1,\"2480\":1,\"2481\":1,\"2678\":2,\"2679\":6}}],[\"httpx\",{\"0\":{\"78\":1,\"588\":1,\"1103\":1,\"1704\":1,\"2073\":1,\"2442\":1},\"1\":{\"7\":1,\"19\":1,\"31\":1,\"78\":1,\"588\":1,\"1103\":1,\"1704\":3,\"1709\":1,\"1941\":1,\"2073\":3,\"2078\":1,\"2310\":1,\"2442\":3,\"2447\":1,\"2679\":1}}],[\"ubuntu\",{\"1\":{\"2697\":4,\"2712\":4,\"2727\":4}}],[\"upgrade\",{\"0\":{\"1932\":1,\"2301\":1,\"2670\":1},\"1\":{\"1928\":1,\"1932\":2,\"2297\":1,\"2301\":2,\"2666\":1,\"2670\":2,\"2686\":4,\"2697\":2,\"2701\":4,\"2712\":2,\"2716\":4,\"2727\":2}}],[\"updating\",{\"1\":{\"399\":1,\"914\":1,\"1429\":1}}],[\"updater\",{\"1\":{\"139\":1,\"140\":2,\"242\":2,\"649\":1,\"650\":2,\"755\":2,\"1164\":1,\"1165\":2,\"1270\":2}}],[\"utf\",{\"1\":{\"520\":1,\"521\":1,\"1035\":1,\"1036\":1,\"1550\":1,\"1551\":1}}],[\"utils\",{\"0\":{\"397\":1,\"912\":1,\"1427\":1,\"1654\":1,\"2023\":1,\"2392\":1},\"1\":{\"468\":1,\"479\":1,\"983\":1,\"994\":1,\"1498\":1,\"1509\":1}}],[\"uy\",{\"1\":{\"504\":1,\"1019\":1,\"1534\":1}}],[\"u><\",{\"1\":{\"420\":2,\"935\":2,\"1450\":2}}],[\"unmatch\",{\"1\":{\"1899\":1,\"2268\":1,\"2637\":1}}],[\"uninstall\",{\"1\":{\"1929\":1,\"2298\":1,\"2667\":1}}],[\"unix\",{\"1\":{\"438\":1,\"439\":1,\"440\":1,\"953\":1,\"954\":1,\"955\":1,\"1468\":1,\"1469\":1,\"1470\":1}}],[\"uniontype\",{\"1\":{\"401\":1,\"916\":1,\"1431\":1}}],[\"union\",{\"1\":{\"401\":1,\"477\":2,\"916\":1,\"992\":2,\"1431\":1,\"1507\":2,\"1897\":1,\"2266\":1,\"2635\":1}}],[\"unimessage\",{\"1\":{\"108\":1,\"618\":1,\"1133\":1}}],[\"unspecified\",{\"1\":{\"222\":1,\"734\":1,\"1249\":1}}],[\"unset\",{\"1\":{\"158\":1,\"668\":1,\"1183\":1}}],[\"undefined\",{\"1\":{\"143\":1,\"144\":1,\"653\":1,\"654\":1,\"1168\":1,\"1169\":1}}],[\"untyped\",{\"1\":{\"142\":1,\"145\":1,\"229\":1,\"230\":1,\"266\":1,\"269\":1,\"270\":1,\"271\":1,\"272\":1,\"273\":1,\"286\":1,\"329\":1,\"373\":1,\"416\":1,\"417\":1,\"652\":1,\"655\":1,\"741\":1,\"742\":1,\"745\":1,\"779\":1,\"782\":1,\"783\":1,\"784\":1,\"785\":1,\"798\":1,\"844\":1,\"888\":1,\"931\":1,\"932\":1,\"1167\":1,\"1170\":1,\"1256\":1,\"1257\":1,\"1260\":1,\"1294\":1,\"1297\":1,\"1298\":1,\"1299\":1,\"1300\":1,\"1313\":1,\"1359\":1,\"1403\":1,\"1446\":1,\"1447\":1,\"1603\":1,\"1604\":1,\"1632\":1,\"1633\":1,\"1634\":1,\"1635\":1,\"1668\":1,\"1669\":1,\"1693\":1,\"1695\":1,\"1722\":1,\"1723\":1,\"1768\":1,\"1769\":1,\"1770\":1,\"1782\":1,\"1783\":1,\"1784\":1,\"1786\":1,\"1788\":1,\"1789\":1,\"1793\":1,\"1794\":1,\"1800\":1,\"1801\":1,\"1834\":1,\"1953\":1,\"1954\":1,\"2001\":1,\"2002\":1,\"2003\":1,\"2004\":1,\"2037\":1,\"2038\":1,\"2062\":1,\"2064\":1,\"2101\":1,\"2102\":1,\"2137\":1,\"2138\":1,\"2139\":1,\"2151\":1,\"2152\":1,\"2153\":1,\"2155\":1,\"2157\":1,\"2158\":1,\"2162\":1,\"2163\":1,\"2169\":1,\"2170\":1,\"2203\":1,\"2322\":1,\"2323\":1,\"2370\":1,\"2371\":1,\"2372\":1,\"2373\":1,\"2406\":1,\"2407\":1,\"2431\":1,\"2433\":1,\"2470\":1,\"2471\":1,\"2506\":1,\"2507\":1,\"2508\":1,\"2520\":1,\"2521\":1,\"2522\":1,\"2524\":1,\"2526\":1,\"2527\":1,\"2531\":1,\"2532\":1,\"2538\":1,\"2539\":1,\"2572\":1}}],[\"usageerror\",{\"1\":{\"2686\":1,\"2701\":1,\"2716\":1}}],[\"usage\",{\"1\":{\"1903\":1,\"2272\":1,\"2641\":1}}],[\"usage=\",{\"1\":{\"110\":1,\"620\":1,\"1135\":1}}],[\"uses\",{\"1\":{\"2697\":4,\"2712\":4,\"2727\":4}}],[\"use\",{\"0\":{\"437\":1,\"952\":1,\"1467\":1,\"1917\":1,\"1919\":1,\"1920\":1,\"2286\":1,\"2288\":1,\"2289\":1,\"2655\":1,\"2657\":1,\"2658\":1},\"1\":{\"118\":1,\"161\":1,\"297\":1,\"302\":1,\"437\":1,\"438\":1,\"439\":1,\"440\":1,\"628\":1,\"671\":1,\"814\":1,\"815\":1,\"952\":1,\"953\":1,\"954\":1,\"955\":1,\"1143\":1,\"1186\":1,\"1329\":1,\"1330\":1,\"1467\":1,\"1468\":1,\"1469\":1,\"1470\":1}}],[\"username\",{\"1\":{\"431\":2,\"946\":2,\"1461\":2,\"1936\":1,\"2305\":1,\"2674\":1}}],[\"users\",{\"1\":{\"329\":1,\"330\":1,\"332\":1,\"438\":1,\"439\":1,\"440\":1,\"844\":1,\"848\":1,\"850\":1,\"953\":1,\"954\":1,\"955\":1,\"1359\":1,\"1363\":1,\"1365\":1,\"1468\":1,\"1469\":1,\"1470\":1}}],[\"user\",{\"1\":{\"46\":2,\"140\":5,\"329\":2,\"331\":1,\"332\":1,\"423\":1,\"427\":1,\"431\":1,\"440\":1,\"478\":7,\"545\":2,\"556\":2,\"650\":5,\"844\":2,\"849\":1,\"850\":1,\"938\":1,\"942\":1,\"946\":1,\"955\":1,\"993\":7,\"1060\":2,\"1071\":2,\"1165\":5,\"1359\":2,\"1364\":1,\"1365\":1,\"1453\":1,\"1457\":1,\"1461\":1,\"1470\":1,\"1508\":7,\"1575\":2,\"1931\":1,\"2300\":1,\"2669\":1,\"2697\":4,\"2712\":4,\"2727\":4}}],[\"uvicorn\",{\"1\":{\"64\":6,\"65\":1,\"66\":1,\"67\":1,\"68\":1,\"72\":1,\"73\":1,\"74\":1,\"75\":1,\"76\":1,\"574\":6,\"575\":1,\"576\":1,\"577\":1,\"578\":1,\"582\":1,\"583\":1,\"584\":1,\"585\":1,\"586\":1,\"1089\":6,\"1090\":1,\"1091\":1,\"1092\":1,\"1093\":1,\"1097\":1,\"1098\":1,\"1099\":1,\"1100\":1,\"1101\":1,\"1683\":1,\"1684\":1,\"1685\":1,\"1686\":1,\"1695\":1,\"1774\":1,\"1775\":1,\"1776\":1,\"1777\":1,\"1786\":1,\"2052\":1,\"2053\":1,\"2054\":1,\"2055\":1,\"2064\":1,\"2143\":1,\"2144\":1,\"2145\":1,\"2146\":1,\"2155\":1,\"2421\":1,\"2422\":1,\"2423\":1,\"2424\":1,\"2433\":1,\"2512\":1,\"2513\":1,\"2514\":1,\"2515\":1,\"2524\":1}}],[\"url=dialect+driver\",{\"1\":{\"1936\":1,\"2305\":1,\"2674\":1}}],[\"url=api\",{\"1\":{\"476\":1,\"991\":1,\"1506\":1}}],[\"url=\",{\"1\":{\"472\":1,\"987\":1,\"1502\":1}}],[\"url\",{\"0\":{\"1936\":1,\"2305\":1,\"2674\":1},\"1\":{\"53\":2,\"120\":2,\"121\":2,\"472\":3,\"473\":4,\"563\":2,\"630\":2,\"631\":2,\"987\":3,\"988\":4,\"1078\":2,\"1145\":2,\"1146\":2,\"1502\":3,\"1503\":4,\"1735\":2,\"1893\":10,\"1897\":1,\"1913\":9,\"1936\":1,\"1937\":2,\"1939\":1,\"2116\":2,\"2262\":10,\"2266\":1,\"2282\":9,\"2305\":1,\"2306\":2,\"2308\":1,\"2485\":2,\"2631\":10,\"2635\":1,\"2651\":9,\"2674\":1,\"2675\":2,\"2677\":1,\"2697\":2,\"2712\":2,\"2727\":2}}],[\"轮询\",{\"1\":{\"53\":1,\"563\":1,\"1078\":1}}],[\"fetch\",{\"0\":{\"1925\":1,\"2294\":1,\"2663\":1}}],[\"featured\",{\"1\":{\"78\":1,\"588\":1,\"1103\":1}}],[\"fxyz\",{\"1\":{\"1910\":1,\"2279\":1,\"2648\":1}}],[\"fdef\",{\"1\":{\"1910\":1,\"2279\":1,\"2648\":1}}],[\"f|\",{\"1\":{\"1900\":1,\"2269\":1,\"2638\":1}}],[\"f8bbd0>error\",{\"1\":{\"472\":2,\"987\":2,\"1502\":2}}],[\"f8bbd0><\",{\"1\":{\"472\":3,\"987\":3,\"1502\":3}}],[\"f8bbd0>websocket\",{\"1\":{\"472\":1,\"987\":1,\"1502\":1}}],[\"f\",{\"1\":{\"423\":1,\"472\":2,\"473\":2,\"475\":1,\"476\":1,\"938\":1,\"987\":2,\"988\":2,\"990\":1,\"991\":1,\"1453\":1,\"1502\":2,\"1503\":2,\"1505\":1,\"1506\":1,\"1894\":1,\"1900\":3,\"1910\":1,\"2263\":1,\"2269\":3,\"2279\":1,\"2632\":1,\"2638\":3,\"2648\":1,\"2686\":2,\"2687\":6,\"2688\":3,\"2701\":2,\"2702\":6,\"2703\":3,\"2716\":2,\"2717\":6,\"2718\":3}}],[\"ffffff\",{\"1\":{\"175\":1,\"685\":1,\"1200\":1}}],[\"first\",{\"1\":{\"544\":2,\"1059\":2,\"1574\":2,\"2686\":4,\"2701\":4,\"2716\":4}}],[\"filter=default\",{\"1\":{\"420\":1,\"935\":1,\"1450\":1}}],[\"filter\",{\"1\":{\"420\":2,\"935\":2,\"1450\":2}}],[\"filehost\",{\"0\":{\"1924\":1,\"2293\":1,\"2662\":1}}],[\"filestypes\",{\"1\":{\"1735\":1,\"2116\":1,\"2485\":1}}],[\"files\",{\"1\":{\"1735\":1,\"2116\":1,\"2485\":1}}],[\"file\",{\"1\":{\"114\":1,\"163\":2,\"165\":2,\"224\":2,\"435\":14,\"480\":1,\"624\":1,\"673\":2,\"675\":2,\"736\":2,\"950\":14,\"995\":1,\"1139\":1,\"1188\":2,\"1190\":2,\"1251\":2,\"1465\":14,\"1510\":1,\"1819\":1,\"1820\":1,\"1893\":1,\"1913\":4,\"2188\":1,\"2189\":1,\"2262\":1,\"2282\":4,\"2557\":1,\"2558\":1,\"2631\":1,\"2651\":4}}],[\"finish\",{\"1\":{\"207\":2,\"423\":1,\"424\":2,\"431\":4,\"719\":2,\"938\":1,\"939\":2,\"946\":4,\"1234\":2,\"1453\":1,\"1454\":2,\"1461\":4,\"2687\":4,\"2702\":4,\"2717\":4}}],[\"finishedexception\",{\"1\":{\"195\":1,\"707\":1,\"1222\":1}}],[\"finally\",{\"1\":{\"121\":1,\"297\":1,\"472\":1,\"631\":1,\"815\":1,\"987\":1,\"1146\":1,\"1330\":1,\"1502\":1}}],[\"field\",{\"1\":{\"149\":1,\"150\":1,\"151\":1,\"152\":1,\"153\":1,\"154\":1,\"155\":1,\"156\":1,\"162\":1,\"449\":2,\"659\":1,\"660\":1,\"661\":1,\"662\":1,\"663\":1,\"664\":1,\"665\":1,\"666\":1,\"672\":1,\"964\":2,\"1174\":1,\"1175\":1,\"1176\":1,\"1177\":1,\"1178\":1,\"1179\":1,\"1180\":1,\"1181\":1,\"1187\":1,\"1479\":2,\"1644\":1,\"1657\":1,\"1895\":1,\"1899\":2,\"2013\":1,\"2026\":1,\"2264\":1,\"2268\":2,\"2382\":1,\"2395\":1,\"2633\":1,\"2637\":2}}],[\"fields\",{\"1\":{\"147\":1,\"657\":1,\"1172\":1,\"1647\":1,\"2016\":1,\"2385\":1}}],[\"fieldinfo\",{\"1\":{\"146\":1,\"151\":2,\"152\":1,\"155\":2,\"656\":1,\"661\":2,\"662\":1,\"665\":2,\"1171\":1,\"1176\":2,\"1177\":1,\"1180\":2,\"1647\":1,\"2016\":1,\"2385\":1}}],[\"future\",{\"1\":{\"2686\":1,\"2701\":1,\"2716\":1}}],[\"fuzy\",{\"1\":{\"1911\":2,\"2280\":2,\"2649\":2}}],[\"fuzzy\",{\"1\":{\"1903\":2,\"1904\":1,\"1907\":1,\"1909\":1,\"1911\":3,\"2272\":2,\"2273\":1,\"2276\":1,\"2278\":1,\"2280\":3,\"2641\":2,\"2642\":1,\"2645\":1,\"2647\":1,\"2649\":3}}],[\"func=ws\",{\"1\":{\"121\":1,\"631\":1,\"1146\":1}}],[\"func=hello\",{\"1\":{\"120\":1,\"630\":1,\"1145\":1}}],[\"func\",{\"1\":{\"120\":1,\"121\":1,\"246\":1,\"247\":1,\"288\":1,\"289\":1,\"290\":1,\"291\":1,\"297\":4,\"414\":1,\"630\":1,\"631\":1,\"759\":1,\"760\":1,\"800\":1,\"801\":1,\"802\":1,\"803\":1,\"815\":4,\"929\":1,\"1145\":1,\"1146\":1,\"1274\":1,\"1275\":1,\"1315\":1,\"1316\":1,\"1317\":1,\"1318\":1,\"1330\":4,\"1444\":1,\"1584\":1,\"1585\":1,\"1607\":3,\"1724\":3,\"1725\":3,\"1726\":1,\"1727\":1,\"1796\":1,\"1957\":3,\"1965\":1,\"1966\":1,\"2103\":3,\"2104\":3,\"2105\":1,\"2106\":1,\"2165\":1,\"2326\":3,\"2334\":1,\"2335\":1,\"2472\":3,\"2473\":3,\"2474\":1,\"2475\":1,\"2534\":1}}],[\"function\",{\"1\":{\"117\":1,\"333\":4,\"347\":4,\"406\":2,\"627\":1,\"845\":4,\"862\":4,\"921\":2,\"1142\":1,\"1360\":4,\"1377\":4,\"1436\":2}}],[\"fullname\",{\"1\":{\"1834\":1,\"1835\":1,\"2203\":1,\"2204\":1,\"2572\":1,\"2573\":1}}],[\"fullmatch\",{\"1\":{\"97\":5,\"193\":1,\"216\":2,\"607\":5,\"705\":1,\"728\":2,\"1122\":5,\"1220\":1,\"1243\":2,\"1809\":2,\"2178\":2,\"2547\":2}}],[\"fully\",{\"1\":{\"78\":1,\"588\":1,\"1103\":1}}],[\"found\",{\"1\":{\"2752\":1}}],[\"foo|\",{\"1\":{\"1900\":3,\"2269\":3,\"2638\":3}}],[\"foo|bar|baz\",{\"1\":{\"1897\":1,\"2266\":1,\"2635\":1}}],[\"foobar\",{\"1\":{\"1894\":1,\"2263\":1,\"2632\":1}}],[\"foobaz\",{\"1\":{\"1894\":3,\"2263\":3,\"2632\":3}}],[\"foo\",{\"1\":{\"139\":2,\"140\":4,\"428\":2,\"513\":3,\"514\":3,\"515\":1,\"541\":1,\"649\":2,\"650\":4,\"943\":2,\"1028\":3,\"1029\":3,\"1030\":1,\"1056\":1,\"1164\":2,\"1165\":4,\"1458\":2,\"1543\":3,\"1544\":3,\"1545\":1,\"1571\":1,\"1894\":19,\"1896\":7,\"1897\":11,\"1900\":6,\"1902\":12,\"1903\":1,\"1905\":5,\"1910\":1,\"1912\":2,\"1914\":3,\"1921\":1,\"2263\":19,\"2265\":7,\"2266\":11,\"2269\":6,\"2271\":12,\"2272\":1,\"2274\":5,\"2279\":1,\"2281\":2,\"2283\":3,\"2290\":1,\"2632\":19,\"2634\":7,\"2635\":11,\"2638\":6,\"2640\":12,\"2641\":1,\"2643\":5,\"2648\":1,\"2650\":2,\"2652\":3,\"2659\":1}}],[\"focus\",{\"1\":{\"79\":1,\"589\":1,\"1104\":1}}],[\"formatter\",{\"1\":{\"1904\":1,\"1905\":2,\"2273\":1,\"2274\":2,\"2642\":1,\"2643\":2}}],[\"formatspecfunc\",{\"1\":{\"1640\":2,\"2009\":2,\"2378\":2}}],[\"format=default\",{\"1\":{\"420\":1,\"935\":1,\"1450\":1}}],[\"format=\",{\"1\":{\"420\":1,\"935\":1,\"1450\":1}}],[\"format\",{\"1\":{\"420\":2,\"545\":6,\"935\":2,\"1060\":6,\"1450\":2,\"1575\":6,\"1609\":2,\"1643\":1,\"1645\":1,\"1978\":2,\"2012\":1,\"2014\":1,\"2347\":2,\"2381\":1,\"2383\":1}}],[\"force\",{\"1\":{\"99\":4,\"360\":1,\"361\":1,\"609\":4,\"875\":1,\"876\":1,\"1124\":4,\"1390\":1,\"1391\":1,\"1770\":1,\"1872\":1,\"1877\":1,\"1889\":1,\"2139\":1,\"2241\":1,\"2246\":1,\"2258\":1,\"2508\":1,\"2610\":1,\"2615\":1,\"2627\":1}}],[\"for\",{\"1\":{\"58\":1,\"78\":2,\"79\":1,\"80\":1,\"142\":1,\"145\":1,\"146\":1,\"147\":1,\"148\":1,\"534\":1,\"540\":2,\"568\":1,\"588\":2,\"589\":1,\"590\":1,\"652\":1,\"655\":1,\"656\":1,\"657\":1,\"658\":1,\"1049\":1,\"1055\":2,\"1083\":1,\"1103\":2,\"1104\":1,\"1105\":1,\"1167\":1,\"1170\":1,\"1171\":1,\"1172\":1,\"1173\":1,\"1564\":1,\"1570\":2,\"2688\":2,\"2696\":14,\"2703\":2,\"2711\":14,\"2718\":2,\"2726\":14}}],[\"forwardmixin\",{\"1\":{\"1755\":2,\"2107\":2,\"2476\":2}}],[\"forwardref\",{\"1\":{\"380\":1,\"895\":1,\"1410\":1}}],[\"forward\",{\"1\":{\"53\":1,\"472\":2,\"475\":1,\"563\":1,\"987\":2,\"990\":1,\"1078\":1,\"1502\":2,\"1505\":1}}],[\"flush\",{\"1\":{\"2692\":1,\"2707\":1,\"2722\":1}}],[\"flag\",{\"1\":{\"1910\":1,\"2279\":1,\"2648\":1}}],[\"flag|\",{\"1\":{\"1910\":1,\"2279\":1,\"2648\":1}}],[\"flags\",{\"1\":{\"366\":1,\"367\":1,\"881\":1,\"882\":1,\"1396\":1,\"1397\":1,\"1874\":2,\"1891\":2,\"2243\":2,\"2260\":2,\"2612\":2,\"2629\":2}}],[\"flags=re\",{\"1\":{\"101\":2,\"611\":2,\"1126\":2}}],[\"flask\",{\"1\":{\"70\":3,\"580\":3,\"1095\":3}}],[\"float\",{\"1\":{\"66\":1,\"74\":1,\"170\":1,\"449\":1,\"576\":1,\"584\":1,\"680\":1,\"964\":1,\"1091\":1,\"1099\":1,\"1195\":1,\"1479\":1,\"1659\":1,\"1666\":1,\"1684\":1,\"1705\":1,\"1711\":1,\"1735\":1,\"1760\":1,\"1775\":1,\"1897\":2,\"2028\":1,\"2035\":1,\"2053\":1,\"2074\":1,\"2080\":1,\"2111\":1,\"2116\":1,\"2144\":1,\"2266\":2,\"2397\":1,\"2404\":1,\"2422\":1,\"2443\":1,\"2449\":1,\"2480\":1,\"2485\":1,\"2513\":1,\"2635\":2}}],[\"fail\",{\"1\":{\"2697\":2,\"2712\":2,\"2727\":2}}],[\"failed\",{\"1\":{\"2686\":1,\"2701\":1,\"2716\":1}}],[\"fake\",{\"1\":{\"1941\":8,\"1942\":7,\"2310\":8,\"2311\":7,\"2679\":8,\"2680\":7}}],[\"fabc\",{\"1\":{\"1910\":1,\"2279\":1,\"2648\":1}}],[\"factory\",{\"1\":{\"1639\":1,\"2008\":1,\"2377\":1}}],[\"factory=list\",{\"1\":{\"449\":2,\"964\":2,\"1479\":2}}],[\"false\",{\"1\":{\"64\":1,\"72\":1,\"95\":1,\"96\":1,\"97\":1,\"99\":1,\"297\":1,\"437\":1,\"449\":3,\"478\":1,\"574\":1,\"582\":1,\"605\":1,\"606\":1,\"607\":1,\"609\":1,\"815\":1,\"952\":1,\"964\":3,\"993\":1,\"1089\":1,\"1097\":1,\"1120\":1,\"1121\":1,\"1122\":1,\"1124\":1,\"1330\":1,\"1467\":1,\"1479\":3,\"1508\":1,\"1639\":1,\"1894\":1,\"1897\":1,\"1901\":1,\"1903\":1,\"1909\":1,\"1916\":1,\"1917\":1,\"1918\":1,\"1919\":1,\"1920\":1,\"1923\":1,\"1924\":1,\"1925\":1,\"2008\":1,\"2263\":1,\"2266\":1,\"2270\":1,\"2272\":1,\"2278\":1,\"2285\":1,\"2286\":1,\"2287\":1,\"2288\":1,\"2289\":1,\"2292\":1,\"2293\":1,\"2294\":1,\"2377\":1,\"2632\":1,\"2635\":1,\"2639\":1,\"2641\":1,\"2647\":1,\"2654\":1,\"2655\":1,\"2656\":1,\"2657\":1,\"2658\":1,\"2661\":1,\"2662\":1,\"2663\":1,\"2697\":2,\"2712\":2,\"2727\":2}}],[\"fast\",{\"1\":{\"58\":1,\"568\":1,\"1083\":1,\"2697\":2,\"2712\":2,\"2727\":2}}],[\"fastapi\",{\"0\":{\"58\":1,\"59\":1,\"568\":1,\"569\":1,\"1083\":1,\"1084\":1,\"1676\":1,\"2045\":1,\"2414\":1},\"1\":{\"54\":1,\"58\":3,\"60\":1,\"61\":1,\"62\":1,\"63\":1,\"64\":1,\"69\":1,\"124\":5,\"507\":1,\"564\":1,\"568\":3,\"570\":1,\"571\":1,\"572\":1,\"573\":1,\"574\":1,\"579\":1,\"634\":5,\"1022\":1,\"1079\":1,\"1083\":3,\"1085\":1,\"1086\":1,\"1087\":1,\"1088\":1,\"1089\":1,\"1094\":1,\"1149\":5,\"1537\":1,\"1676\":3,\"1677\":2,\"1687\":1,\"1688\":1,\"1689\":1,\"1690\":2,\"1691\":2,\"1692\":1,\"1695\":1,\"1696\":1,\"2045\":3,\"2046\":2,\"2056\":1,\"2057\":1,\"2058\":1,\"2059\":2,\"2060\":2,\"2061\":1,\"2064\":1,\"2065\":1,\"2414\":3,\"2415\":2,\"2425\":1,\"2426\":1,\"2427\":1,\"2428\":2,\"2429\":2,\"2430\":1,\"2433\":1,\"2434\":1}}],[\"framework\",{\"1\":{\"58\":1,\"568\":1,\"1083\":1}}],[\"from\",{\"1\":{\"38\":1,\"39\":1,\"40\":1,\"55\":1,\"82\":1,\"83\":1,\"95\":2,\"96\":2,\"97\":2,\"98\":2,\"99\":2,\"100\":3,\"101\":2,\"102\":1,\"103\":2,\"105\":2,\"106\":2,\"110\":2,\"114\":1,\"116\":1,\"117\":2,\"118\":2,\"120\":2,\"121\":2,\"124\":1,\"127\":1,\"128\":1,\"129\":1,\"130\":1,\"132\":2,\"133\":1,\"134\":2,\"135\":1,\"136\":2,\"137\":2,\"140\":3,\"152\":1,\"155\":1,\"216\":4,\"218\":1,\"227\":1,\"365\":1,\"419\":1,\"420\":2,\"421\":1,\"423\":1,\"424\":3,\"426\":2,\"427\":2,\"428\":3,\"431\":4,\"435\":2,\"453\":2,\"454\":2,\"468\":2,\"469\":1,\"470\":6,\"472\":5,\"473\":2,\"474\":1,\"475\":5,\"476\":4,\"477\":7,\"478\":4,\"479\":5,\"480\":1,\"509\":1,\"517\":1,\"520\":1,\"521\":1,\"528\":1,\"529\":2,\"534\":1,\"536\":1,\"538\":2,\"539\":1,\"543\":1,\"545\":5,\"548\":1,\"549\":1,\"550\":1,\"565\":1,\"592\":1,\"593\":1,\"605\":2,\"606\":2,\"607\":2,\"608\":2,\"609\":2,\"610\":3,\"611\":2,\"612\":1,\"613\":2,\"615\":2,\"616\":2,\"620\":2,\"624\":1,\"626\":1,\"627\":2,\"628\":2,\"630\":2,\"631\":2,\"634\":1,\"637\":1,\"638\":1,\"639\":1,\"640\":1,\"642\":2,\"643\":1,\"644\":2,\"645\":1,\"646\":2,\"647\":2,\"650\":3,\"662\":1,\"665\":1,\"728\":4,\"730\":1,\"739\":1,\"880\":1,\"934\":1,\"935\":2,\"936\":1,\"938\":1,\"939\":3,\"941\":2,\"942\":2,\"943\":3,\"946\":4,\"950\":2,\"968\":2,\"969\":2,\"983\":2,\"984\":1,\"985\":6,\"987\":5,\"988\":2,\"989\":1,\"990\":5,\"991\":4,\"992\":7,\"993\":4,\"994\":5,\"995\":1,\"1024\":1,\"1032\":1,\"1035\":1,\"1036\":1,\"1043\":1,\"1044\":2,\"1049\":1,\"1051\":1,\"1053\":2,\"1054\":1,\"1058\":1,\"1060\":5,\"1063\":1,\"1064\":1,\"1065\":1,\"1080\":1,\"1107\":1,\"1108\":1,\"1120\":2,\"1121\":2,\"1122\":2,\"1123\":2,\"1124\":2,\"1125\":3,\"1126\":2,\"1127\":1,\"1128\":2,\"1130\":2,\"1131\":2,\"1135\":2,\"1139\":1,\"1141\":1,\"1142\":2,\"1143\":2,\"1145\":2,\"1146\":2,\"1149\":1,\"1152\":1,\"1153\":1,\"1154\":1,\"1155\":1,\"1157\":2,\"1158\":1,\"1159\":2,\"1160\":1,\"1161\":2,\"1162\":2,\"1165\":3,\"1177\":1,\"1180\":1,\"1243\":4,\"1245\":1,\"1254\":1,\"1395\":1,\"1449\":1,\"1450\":2,\"1451\":1,\"1453\":1,\"1454\":3,\"1456\":2,\"1457\":2,\"1458\":3,\"1461\":4,\"1465\":2,\"1483\":2,\"1484\":2,\"1498\":2,\"1499\":1,\"1500\":6,\"1502\":5,\"1503\":2,\"1504\":1,\"1505\":5,\"1506\":4,\"1507\":7,\"1508\":4,\"1509\":5,\"1510\":1,\"1539\":1,\"1547\":1,\"1550\":1,\"1551\":1,\"1558\":1,\"1559\":2,\"1564\":1,\"1566\":1,\"1568\":2,\"1569\":1,\"1573\":1,\"1575\":5,\"1809\":4,\"1819\":1,\"1820\":1,\"1893\":1,\"1894\":1,\"1896\":2,\"1897\":2,\"1900\":1,\"1903\":1,\"1905\":1,\"1906\":1,\"1908\":1,\"1909\":2,\"1910\":3,\"1911\":1,\"1912\":1,\"1913\":3,\"1914\":1,\"1941\":3,\"1942\":2,\"2178\":4,\"2188\":1,\"2189\":1,\"2262\":1,\"2263\":1,\"2265\":2,\"2266\":2,\"2269\":1,\"2272\":1,\"2274\":1,\"2275\":1,\"2277\":1,\"2278\":2,\"2279\":3,\"2280\":1,\"2281\":1,\"2282\":3,\"2283\":1,\"2310\":3,\"2311\":2,\"2547\":4,\"2557\":1,\"2558\":1,\"2631\":1,\"2632\":1,\"2634\":2,\"2635\":2,\"2638\":1,\"2641\":1,\"2643\":1,\"2644\":1,\"2646\":1,\"2647\":2,\"2648\":3,\"2649\":1,\"2650\":1,\"2651\":3,\"2652\":1,\"2679\":3,\"2680\":2,\"2685\":3,\"2686\":3,\"2687\":8,\"2688\":5,\"2691\":4,\"2692\":4,\"2694\":4,\"2695\":3,\"2700\":3,\"2701\":3,\"2702\":8,\"2703\":5,\"2706\":4,\"2707\":4,\"2709\":4,\"2710\":3,\"2715\":3,\"2716\":3,\"2717\":8,\"2718\":5,\"2721\":4,\"2722\":4,\"2724\":4,\"2725\":3}}],[\"如指定需要传入参数名称\",{\"1\":{\"1911\":1,\"2280\":1,\"2649\":1}}],[\"如此该命令头会匹配对应的类型\",{\"1\":{\"1894\":1,\"2263\":1,\"2632\":1}}],[\"如根据用户\",{\"1\":{\"493\":1,\"1008\":1,\"1523\":1}}],[\"如无字符串嵌入格式可直接返回文本类型\",{\"1\":{\"479\":1,\"994\":1,\"1509\":1}}],[\"如无配置类可不填\",{\"1\":{\"110\":1,\"620\":1,\"1135\":1}}],[\"如何更好地编写一个跨平台的插件\",{\"1\":{\"424\":1,\"939\":1,\"1454\":1}}],[\"如何对不同平台的事件进行不同的处理\",{\"1\":{\"424\":1,\"939\":1,\"1454\":1}}],[\"如何对私聊和群聊消息进行不同的处理\",{\"1\":{\"424\":1,\"939\":1,\"1454\":1}}],[\"如何根据不同平台事件类型进行不同的处理\",{\"1\":{\"423\":1,\"938\":1,\"1453\":1}}],[\"如何安装驱动器请参考安装驱动器\",{\"1\":{\"52\":1,\"562\":1,\"1077\":1}}],[\"如下所示\",{\"1\":{\"110\":1,\"620\":1,\"1135\":1}}],[\"如需从头匹配请使用\",{\"1\":{\"101\":1,\"367\":1,\"611\":1,\"882\":1,\"1126\":1,\"1397\":1}}],[\"如\",{\"1\":{\"53\":1,\"54\":1,\"64\":1,\"115\":1,\"127\":1,\"128\":1,\"139\":1,\"140\":1,\"169\":1,\"211\":1,\"424\":1,\"434\":1,\"435\":1,\"445\":1,\"451\":1,\"497\":1,\"504\":1,\"563\":1,\"564\":1,\"574\":1,\"625\":1,\"637\":1,\"638\":1,\"649\":1,\"650\":1,\"679\":1,\"723\":1,\"939\":1,\"949\":1,\"950\":1,\"960\":1,\"966\":1,\"1012\":1,\"1019\":1,\"1078\":1,\"1079\":1,\"1089\":1,\"1140\":1,\"1152\":1,\"1153\":1,\"1164\":1,\"1165\":1,\"1194\":1,\"1238\":1,\"1454\":1,\"1464\":1,\"1465\":1,\"1475\":1,\"1481\":1,\"1527\":1,\"1534\":1,\"1596\":1,\"1900\":1,\"1909\":1,\"1911\":1,\"1921\":1,\"1926\":2,\"1946\":1,\"2269\":1,\"2278\":1,\"2280\":1,\"2290\":1,\"2295\":2,\"2315\":1,\"2638\":1,\"2647\":1,\"2649\":1,\"2659\":1,\"2664\":2}}],[\"如果项目还需要考虑跨平台和跨\",{\"1\":{\"2697\":1,\"2712\":1,\"2727\":1}}],[\"如果不指定\",{\"1\":{\"1932\":1,\"2301\":1,\"2670\":1}}],[\"如果不知道该选择哪个驱动器\",{\"1\":{\"52\":1,\"562\":1,\"1077\":1}}],[\"如果传入了多个插件名称\",{\"1\":{\"1824\":1,\"2193\":1,\"2562\":1}}],[\"如果提供的模块名为某个插件的子模块\",{\"1\":{\"1811\":1,\"2180\":1,\"2549\":1}}],[\"如果一条消息中包含\",{\"1\":{\"528\":1,\"1043\":1,\"1558\":1}}],[\"如果使用虚拟环境\",{\"1\":{\"510\":1,\"1025\":1,\"1540\":1}}],[\"如果可能\",{\"1\":{\"492\":1,\"493\":1,\"1007\":1,\"1008\":1,\"1522\":1,\"1523\":1}}],[\"如果想要更深入地学习关于\",{\"1\":{\"2683\":1,\"2698\":1,\"2713\":1}}],[\"如果想要将适配器发布到\",{\"1\":{\"481\":1,\"996\":1,\"1511\":1}}],[\"如果想要输出日志到文件\",{\"1\":{\"420\":1,\"935\":1,\"1450\":1}}],[\"如果采用\",{\"1\":{\"476\":1,\"991\":1,\"1506\":1}}],[\"如果通过\",{\"1\":{\"476\":1,\"991\":1,\"1506\":1}}],[\"如果在之前的创建项目章节中手动创建了相关文件\",{\"1\":{\"515\":1,\"1030\":1,\"1545\":1}}],[\"如果在之前的快速上手章节中已经使用\",{\"1\":{\"515\":1,\"1030\":1,\"1545\":1}}],[\"如果在安装或者开发\",{\"1\":{\"459\":1,\"974\":1,\"1489\":1}}],[\"如果在开启该功能后\",{\"1\":{\"64\":1,\"574\":1,\"1089\":1}}],[\"如果所有的检查都通过\",{\"1\":{\"425\":1,\"940\":1,\"1455\":1}}],[\"如果三者任一类型注解不匹配\",{\"1\":{\"424\":1,\"939\":1,\"1454\":1}}],[\"如果基类就能满足你的需求\",{\"1\":{\"423\":1,\"938\":1,\"1453\":1}}],[\"如果参数解析失败\",{\"1\":{\"365\":1,\"880\":1,\"1395\":1}}],[\"如果我们不满足于基类能获得的信息\",{\"1\":{\"423\":1,\"938\":1,\"1453\":1}}],[\"如果我们希望响应多个用户的消息\",{\"1\":{\"140\":1,\"650\":1,\"1165\":1}}],[\"如果我们需要多平台支持\",{\"1\":{\"38\":1,\"548\":1,\"1063\":1}}],[\"如果希望实现更复杂的会话功能\",{\"1\":{\"140\":1,\"650\":1,\"1165\":1}}],[\"如果希望在会话过程中的不同阶段响应不同类型的事件\",{\"1\":{\"139\":1,\"649\":1,\"1164\":1}}],[\"如果希望接收一个特定类型的消息\",{\"1\":{\"139\":1,\"649\":1,\"1164\":1}}],[\"如果没有找到对应的消息\",{\"1\":{\"262\":1,\"775\":1,\"1290\":1}}],[\"如果没有找到对应的事件\",{\"1\":{\"259\":1,\"772\":1,\"1287\":1}}],[\"如果没有事件\",{\"1\":{\"261\":1,\"774\":1,\"1289\":1}}],[\"如果没有事先声明或加载插件\",{\"1\":{\"116\":1,\"626\":1,\"1141\":1}}],[\"如果没有\",{\"1\":{\"117\":1,\"627\":1,\"1142\":1}}],[\"如果你曾经使用过\",{\"1\":{\"2687\":1,\"2702\":1,\"2717\":1}}],[\"如果你后续使用了\",{\"1\":{\"510\":1,\"1025\":1,\"1540\":1}}],[\"如果你使用自定义的入口文件bot\",{\"1\":{\"516\":1,\"1031\":1,\"1546\":1}}],[\"如果你使用\",{\"1\":{\"509\":1,\"516\":1,\"1024\":1,\"1031\":1,\"1539\":1,\"1546\":1}}],[\"如果你想要了解\",{\"1\":{\"506\":1,\"1021\":1,\"1536\":1}}],[\"如果你想要开发自己的适配器\",{\"1\":{\"51\":1,\"561\":1,\"1076\":1}}],[\"如果你已经有一个插件\",{\"1\":{\"114\":1,\"624\":1,\"1139\":1}}],[\"如果未设置\",{\"1\":{\"105\":1,\"615\":1,\"1130\":1}}],[\"如果匹配成功\",{\"1\":{\"100\":1,\"610\":1,\"1125\":1}}],[\"如果需要在当前消息序列后直接拼接新的消息段\",{\"1\":{\"544\":1,\"1059\":1,\"1574\":1}}],[\"如果需要自定义日志格式\",{\"1\":{\"420\":1,\"935\":1,\"1450\":1}}],[\"如果需要输出彩色日志\",{\"1\":{\"419\":1,\"934\":1,\"1449\":1}}],[\"如果需要记录\",{\"1\":{\"419\":1,\"934\":1,\"1449\":1}}],[\"如果需要获取所有当前声明的插件名称\",{\"1\":{\"111\":1,\"621\":1,\"1136\":1}}],[\"如果需要获取指定适配器连接的\",{\"1\":{\"40\":1,\"550\":1,\"1065\":1}}],[\"如果需要为\",{\"1\":{\"105\":1,\"615\":1,\"1130\":1}}],[\"如果需要严格匹配命令与参数间的空白符\",{\"1\":{\"99\":1,\"609\":1,\"1124\":1}}],[\"如果\",{\"1\":{\"91\":1,\"251\":1,\"329\":1,\"331\":1,\"332\":1,\"401\":3,\"520\":1,\"521\":1,\"545\":1,\"601\":1,\"764\":1,\"844\":1,\"849\":1,\"850\":1,\"916\":3,\"1035\":1,\"1036\":1,\"1060\":1,\"1116\":1,\"1279\":1,\"1359\":1,\"1364\":1,\"1365\":1,\"1431\":3,\"1550\":1,\"1551\":1,\"1575\":1}}],[\"如果阻断为\",{\"1\":{\"90\":1,\"600\":1,\"1115\":1}}],[\"如果响应器的优先级相同\",{\"1\":{\"89\":1,\"599\":1,\"1114\":1}}],[\"如果响应规则检查通过\",{\"1\":{\"88\":1,\"598\":1,\"1113\":1}}],[\"如果权限检查通过\",{\"1\":{\"87\":1,\"597\":1,\"1112\":1}}],[\"如果有其他类型的事件需要响应\",{\"1\":{\"86\":1,\"596\":1,\"1111\":1}}],[\"如果类型为空字符串\",{\"1\":{\"86\":1,\"596\":1,\"1111\":1}}],[\"如果为嵌套的子插件\",{\"1\":{\"1810\":1,\"2179\":1,\"2548\":1}}],[\"如果为字符串\",{\"1\":{\"99\":1,\"609\":1,\"1124\":1}}],[\"如果为\",{\"1\":{\"60\":1,\"61\":1,\"62\":1,\"91\":1,\"99\":1,\"570\":1,\"571\":1,\"572\":1,\"601\":1,\"609\":1,\"1085\":1,\"1086\":1,\"1087\":1,\"1116\":1,\"1124\":1,\"1810\":1,\"2179\":1,\"2548\":1}}],[\"如果事件没有相关\",{\"1\":{\"478\":1,\"993\":1,\"1508\":1}}],[\"如果事件没有用户\",{\"1\":{\"478\":1,\"993\":1,\"1508\":1}}],[\"如果事件非消息类型事件\",{\"1\":{\"478\":1,\"993\":1,\"1508\":1}}],[\"如果事件不包含消息\",{\"1\":{\"49\":1,\"559\":1,\"1074\":1}}],[\"如果事件包含消息\",{\"1\":{\"48\":1,\"558\":1,\"1073\":1}}],[\"如果省略\",{\"1\":{\"40\":1,\"550\":1,\"1065\":1}}],[\"提高代码可读性和书写效率\",{\"1\":{\"527\":1,\"1042\":1,\"1557\":1}}],[\"提高机器人的便携性\",{\"1\":{\"488\":1,\"489\":1,\"1003\":1,\"1004\":1,\"1518\":1,\"1519\":1}}],[\"提取消息内纯文本消息\",{\"1\":{\"1625\":1,\"1994\":1,\"2363\":1}}],[\"提取消息纯文本字符串\",{\"1\":{\"539\":1,\"1054\":1,\"1569\":1}}],[\"提取\",{\"1\":{\"526\":1,\"1041\":1,\"1556\":1}}],[\"提升用户体验\",{\"1\":{\"504\":1,\"1019\":1,\"1534\":1}}],[\"提升页面的无障碍访问性\",{\"1\":{\"503\":1,\"1018\":1,\"1533\":1}}],[\"提升现有\",{\"1\":{\"488\":1,\"489\":1,\"1003\":1,\"1004\":1,\"1518\":1,\"1519\":1}}],[\"提供获取关键信息的方法\",{\"1\":{\"1586\":1,\"1967\":1,\"2336\":1}}],[\"提供基本的机器人功能\",{\"1\":{\"525\":1,\"1040\":1,\"1555\":1}}],[\"提供低代码编程支持\",{\"1\":{\"505\":1,\"1020\":1,\"1535\":1}}],[\"提供用户修改信息的处理方式\",{\"1\":{\"504\":1,\"1019\":1,\"1534\":1}}],[\"提供模型迁移与管理功能\",{\"1\":{\"501\":1,\"1016\":1,\"1531\":1}}],[\"提供关系模型定义功能\",{\"1\":{\"501\":1,\"1016\":1,\"1531\":1}}],[\"提供一个项目管理面板服务\",{\"1\":{\"499\":1,\"1014\":1,\"1529\":1}}],[\"提供商\",{\"1\":{\"484\":1,\"999\":1,\"1514\":1}}],[\"提供的加载插件方法前\",{\"1\":{\"116\":1,\"626\":1,\"1141\":1}}],[\"提供的\",{\"1\":{\"60\":1,\"61\":1,\"62\":1,\"63\":1,\"64\":1,\"468\":1,\"476\":1,\"570\":1,\"571\":1,\"572\":1,\"573\":1,\"574\":1,\"983\":1,\"991\":1,\"1085\":1,\"1086\":1,\"1087\":1,\"1088\":1,\"1089\":1,\"1498\":1,\"1506\":1}}],[\"提供了强大且灵活的依赖注入\",{\"1\":{\"2689\":1,\"2704\":1,\"2719\":1}}],[\"提供了预制的几类\",{\"1\":{\"1901\":1,\"2270\":1,\"2639\":1}}],[\"提供了一个便捷而高效的解决方案\",{\"1\":{\"424\":1,\"939\":1,\"1454\":1}}],[\"提供了一个\",{\"1\":{\"421\":1,\"936\":1,\"1451\":1}}],[\"提供了一种方法来确保我们依赖的插件已经被正确加载\",{\"1\":{\"117\":1,\"627\":1,\"1142\":1}}],[\"提供了多种功能各异的辅助函数\",{\"1\":{\"527\":1,\"1042\":1,\"1557\":1}}],[\"提供了多种\",{\"1\":{\"471\":1,\"986\":1,\"1501\":1}}],[\"提供了多种获取插件对象的方法\",{\"1\":{\"111\":1,\"621\":1,\"1136\":1}}],[\"提供了多个插槽以进行事件的预处理等\",{\"1\":{\"287\":1,\"799\":1,\"1314\":1}}],[\"提供了两种响应器组\",{\"1\":{\"104\":1,\"614\":1,\"1129\":1}}],[\"提供了\",{\"1\":{\"39\":1,\"433\":1,\"444\":1,\"549\":1,\"948\":1,\"959\":1,\"1064\":1,\"1463\":1,\"1474\":1}}],[\"提供了使用便捷\",{\"1\":{\"4\":1,\"16\":1,\"28\":1}}],[\"提示\",{\"1\":{\"52\":2,\"84\":1,\"94\":1,\"101\":1,\"169\":1,\"361\":1,\"365\":1,\"367\":2,\"424\":1,\"435\":1,\"465\":1,\"467\":1,\"509\":1,\"520\":1,\"521\":1,\"528\":1,\"529\":1,\"562\":2,\"594\":1,\"604\":1,\"611\":1,\"679\":1,\"876\":1,\"880\":1,\"882\":2,\"939\":1,\"950\":1,\"980\":1,\"982\":1,\"1024\":1,\"1035\":1,\"1036\":1,\"1043\":1,\"1044\":1,\"1077\":2,\"1109\":1,\"1119\":1,\"1126\":1,\"1194\":1,\"1391\":1,\"1395\":1,\"1397\":2,\"1454\":1,\"1465\":1,\"1495\":1,\"1497\":1,\"1539\":1,\"1550\":1,\"1551\":1,\"1558\":1,\"1559\":1,\"1658\":1,\"1676\":1,\"1704\":1,\"1765\":1,\"1771\":1,\"1795\":1,\"1894\":1,\"1896\":1,\"1897\":1,\"1898\":1,\"2027\":1,\"2045\":1,\"2073\":1,\"2134\":1,\"2140\":1,\"2164\":1,\"2263\":1,\"2265\":1,\"2266\":1,\"2267\":1,\"2396\":1,\"2414\":1,\"2442\":1,\"2503\":1,\"2509\":1,\"2533\":1,\"2632\":1,\"2634\":1,\"2635\":1,\"2636\":1}}],[\"欢迎感兴趣的同学通过\",{\"1\":{\"498\":1,\"502\":1,\"1013\":1,\"1017\":1,\"1528\":1,\"1532\":1}}],[\"欢迎感兴趣的同学加入\",{\"1\":{\"494\":1,\"1009\":1,\"1524\":1}}],[\"欢迎感兴趣的同学在上面给出的活动官网报名\",{\"1\":{\"482\":1,\"997\":1,\"1512\":1}}],[\"欢迎参与我们的社区讨论\",{\"1\":{\"459\":1,\"974\":1,\"1489\":1}}],[\"欢迎将你的作品分享到插件商店\",{\"1\":{\"140\":1,\"650\":1,\"1165\":1}}],[\"欢迎通过商店发布你的适配器\",{\"1\":{\"51\":1,\"561\":1,\"1076\":1}}],[\"欢迎提交\",{\"1\":{\"11\":1,\"23\":1,\"35\":1}}],[\"开头的十六进制字符串\",{\"1\":{\"1897\":1,\"2266\":1,\"2635\":1}}],[\"开头的插件不会被导入\",{\"1\":{\"1817\":1,\"1818\":1,\"1819\":1,\"1820\":1,\"2186\":1,\"2187\":1,\"2188\":1,\"2189\":1,\"2555\":1,\"2556\":1,\"2557\":1,\"2558\":1}}],[\"开头的消息进行响应\",{\"1\":{\"528\":1,\"1043\":1,\"1558\":1}}],[\"开头的消息\",{\"1\":{\"99\":2,\"361\":2,\"609\":2,\"876\":2,\"1124\":2,\"1391\":2}}],[\"开启\",{\"1\":{\"1682\":1,\"1773\":1,\"1939\":1,\"2051\":1,\"2142\":1,\"2308\":1,\"2420\":1,\"2511\":1,\"2677\":1}}],[\"开启该功能后\",{\"1\":{\"64\":1,\"574\":1,\"1089\":1}}],[\"开始\",{\"1\":{\"528\":1,\"1043\":1,\"1558\":1}}],[\"开始视为与机器人有关\",{\"1\":{\"50\":1,\"560\":1,\"1075\":1}}],[\"开源之夏\",{\"1\":{\"494\":1,\"498\":1,\"502\":1,\"1009\":1,\"1013\":1,\"1017\":1,\"1524\":1,\"1528\":1,\"1532\":1}}],[\"开源软件供应链点亮计划\",{\"1\":{\"482\":1,\"997\":1,\"1512\":1}}],[\"开发过程中\",{\"1\":{\"2686\":1,\"2701\":1,\"2716\":1}}],[\"开发插件有一个基本的认识\",{\"1\":{\"2683\":1,\"2698\":1,\"2713\":1}}],[\"开发者指南内容较多\",{\"1\":{\"2683\":1,\"2698\":1,\"2713\":1}}],[\"开发者指南\",{\"0\":{\"2683\":1,\"2698\":1,\"2713\":1},\"1\":{\"2749\":1,\"2750\":1,\"2751\":1}}],[\"开发者可以根据需要进行合适的测试\",{\"1\":{\"480\":1,\"995\":1,\"1510\":1}}],[\"开发相关知识\",{\"1\":{\"488\":1,\"489\":1,\"1003\":1,\"1004\":1,\"1518\":1,\"1519\":1}}],[\"开发\",{\"1\":{\"452\":1,\"492\":1,\"493\":1,\"497\":1,\"504\":1,\"967\":1,\"1007\":1,\"1008\":1,\"1012\":1,\"1019\":1,\"1482\":1,\"1522\":1,\"1523\":1,\"1527\":1,\"1534\":1}}],[\"开发的\",{\"1\":{\"450\":1,\"965\":1,\"1480\":1}}],[\"开箱即用\",{\"0\":{\"4\":1,\"16\":1,\"28\":1}}],[\"或分块\",{\"1\":{\"2696\":1,\"2711\":1,\"2726\":1}}],[\"或全部\",{\"1\":{\"2696\":1,\"2711\":1,\"2726\":1}}],[\"或元组\",{\"1\":{\"2696\":1,\"2711\":1,\"2726\":1}}],[\"或异步迭代器\",{\"1\":{\"2696\":1,\"2711\":1,\"2726\":1}}],[\"或时间戳\",{\"1\":{\"1897\":1,\"2266\":1,\"2635\":1}}],[\"或不在指定的值中\",{\"1\":{\"1896\":1,\"2265\":1,\"2634\":1}}],[\"或插件路径\",{\"1\":{\"1816\":1,\"2185\":1,\"2554\":1}}],[\"或其子类代替\",{\"1\":{\"1755\":1,\"1756\":1,\"2107\":1,\"2118\":1,\"2476\":1,\"2487\":1}}],[\"或其它\",{\"1\":{\"485\":1,\"1000\":1,\"1515\":1}}],[\"或适配器自定义类型的参数\",{\"1\":{\"536\":1,\"1051\":1,\"1566\":1}}],[\"或通用的\",{\"1\":{\"484\":1,\"999\":1,\"1514\":1}}],[\"或通过\",{\"1\":{\"482\":1,\"494\":1,\"997\":1,\"1009\":1,\"1512\":1,\"1524\":1}}],[\"或\",{\"1\":{\"306\":1,\"401\":2,\"527\":1,\"541\":1,\"817\":1,\"916\":2,\"1042\":1,\"1056\":1,\"1332\":1,\"1431\":2,\"1557\":1,\"1571\":1,\"1894\":12,\"1896\":1,\"1897\":2,\"1900\":1,\"1912\":2,\"2263\":12,\"2265\":1,\"2266\":2,\"2269\":1,\"2281\":2,\"2632\":12,\"2634\":1,\"2635\":2,\"2638\":1,\"2650\":2}}],[\"或使用\",{\"1\":{\"203\":1,\"715\":1,\"1230\":1}}],[\"或一系列字符串\",{\"1\":{\"95\":1,\"96\":1,\"97\":1,\"98\":1,\"605\":1,\"606\":1,\"607\":1,\"608\":1,\"1120\":1,\"1121\":1,\"1122\":1,\"1123\":1}}],[\"或以\",{\"1\":{\"50\":1,\"528\":1,\"560\":1,\"1043\":1,\"1075\":1,\"1558\":1}}],[\"或者在使用过程中遇到了问题\",{\"1\":{\"2683\":1,\"2698\":1,\"2713\":1}}],[\"或者标识符\",{\"1\":{\"1896\":1,\"2265\":1,\"2634\":1}}],[\"或者有新奇的点子\",{\"1\":{\"459\":1,\"974\":1,\"1489\":1}}],[\"或者修改\",{\"1\":{\"424\":1,\"939\":1,\"1454\":1}}],[\"或者为其他\",{\"1\":{\"421\":1,\"936\":1,\"1451\":1}}],[\"或者使用自加\",{\"1\":{\"544\":1,\"1059\":1,\"1574\":1}}],[\"或者使用\",{\"1\":{\"113\":1,\"534\":1,\"623\":1,\"1049\":1,\"1138\":1,\"1564\":1}}],[\"或者通过模块路径获取插件对象\",{\"1\":{\"111\":1,\"621\":1,\"1136\":1}}],[\"或者通过\",{\"1\":{\"110\":1,\"620\":1,\"1135\":1}}],[\"或者一系列类型\",{\"1\":{\"103\":1,\"613\":1,\"1128\":1}}],[\"或者\",{\"1\":{\"40\":1,\"95\":1,\"96\":1,\"97\":1,\"98\":1,\"99\":1,\"203\":1,\"535\":1,\"550\":1,\"605\":1,\"606\":1,\"607\":1,\"608\":1,\"609\":1,\"715\":1,\"1050\":1,\"1065\":1,\"1120\":1,\"1121\":1,\"1122\":1,\"1123\":1,\"1124\":1,\"1230\":1,\"1565\":1,\"1658\":1,\"1676\":1,\"1704\":1,\"1771\":1,\"1795\":1,\"2027\":1,\"2045\":1,\"2073\":1,\"2140\":1,\"2164\":1,\"2396\":1,\"2414\":1,\"2442\":1,\"2509\":1,\"2533\":1,\"2685\":1,\"2700\":1,\"2715\":1}}],[\"或者向项目\",{\"1\":{\"10\":1,\"22\":1,\"34\":1}}],[\"则\",{\"1\":{\"1909\":2,\"2278\":2,\"2647\":2}}],[\"则指令\",{\"1\":{\"1909\":1,\"2278\":1,\"2647\":1}}],[\"则未知参数将作为名为\",{\"1\":{\"1903\":1,\"2272\":1,\"2641\":1}}],[\"则命令名称为\",{\"1\":{\"1900\":1,\"2269\":1,\"2638\":1}}],[\"则命令与参数间必须有且与给定字符串一致的空白符\",{\"1\":{\"99\":1,\"609\":1,\"1124\":1}}],[\"则命令与参数间必须有任意个数的空白符\",{\"1\":{\"99\":1,\"609\":1,\"1124\":1}}],[\"则读取里面的表达式\",{\"1\":{\"1894\":1,\"2263\":1,\"2632\":1}}],[\"则为文件\",{\"1\":{\"1810\":1,\"2179\":1,\"2548\":1}}],[\"则抛出异常\",{\"1\":{\"478\":3,\"993\":3,\"1508\":3}}],[\"则需要通过\",{\"1\":{\"476\":1,\"991\":1,\"1506\":1}}],[\"则事件会被处理\",{\"1\":{\"425\":1,\"940\":1,\"1455\":1}}],[\"则通过\",{\"1\":{\"365\":1,\"880\":1,\"1395\":1}}],[\"则会将所有分支升级到最新版本\",{\"1\":{\"1932\":1,\"2301\":1,\"2670\":1}}],[\"则会检查其\",{\"1\":{\"401\":1,\"916\":1,\"1431\":1}}],[\"则会检查其中的所有值是否是\",{\"1\":{\"401\":1,\"916\":1,\"1431\":1}}],[\"则会检查其中的所有类型是否是\",{\"1\":{\"401\":1,\"916\":1,\"1431\":1}}],[\"则会去除原有的会话\",{\"1\":{\"331\":1,\"332\":1,\"849\":1,\"850\":1,\"1364\":1,\"1365\":1}}],[\"则会去除原有检查函数的会话\",{\"1\":{\"329\":1,\"844\":1,\"1359\":1}}],[\"则会进行进一步的参数解析\",{\"1\":{\"100\":1,\"610\":1,\"1125\":1}}],[\"则会产生异常\",{\"1\":{\"49\":1,\"559\":1,\"1074\":1}}],[\"则在该时间点后\",{\"1\":{\"91\":1,\"601\":1,\"1116\":1}}],[\"则在该响应器被触发后\",{\"1\":{\"90\":1,\"600\":1,\"1115\":1}}],[\"则该响应器在被触发后会被自动销毁\",{\"1\":{\"91\":1,\"601\":1,\"1116\":1}}],[\"则按照响应器的注册顺序进行触发\",{\"1\":{\"89\":1,\"599\":1,\"1114\":1}}],[\"则触发该响应器\",{\"1\":{\"88\":1,\"598\":1,\"1113\":1}}],[\"则执行响应规则检查\",{\"1\":{\"87\":1,\"597\":1,\"1112\":1}}],[\"则响应器将会响应所有类型的事件\",{\"1\":{\"86\":1,\"596\":1,\"1111\":1}}],[\"则不提供\",{\"1\":{\"60\":1,\"61\":1,\"62\":1,\"570\":1,\"571\":1,\"572\":1,\"1085\":1,\"1086\":1,\"1087\":1}}],[\"则可以通过该方法获取\",{\"1\":{\"48\":1,\"558\":1,\"1073\":1}}],[\"频道等诸多平台的适配支持\",{\"1\":{\"500\":1,\"1015\":1,\"1530\":1}}],[\"频道\",{\"1\":{\"47\":1,\"459\":1,\"476\":1,\"557\":1,\"974\":1,\"991\":1,\"1072\":1,\"1489\":1,\"1506\":1}}],[\"lt\",{\"1\":{\"1894\":2,\"2263\":2,\"2632\":2}}],[\"len\",{\"1\":{\"534\":1,\"1049\":1,\"1564\":1}}],[\"level\",{\"0\":{\"457\":1,\"972\":1,\"1487\":1},\"1\":{\"227\":1,\"230\":1,\"417\":1,\"419\":3,\"420\":3,\"739\":1,\"742\":1,\"932\":1,\"934\":3,\"935\":3,\"1254\":1,\"1257\":1,\"1447\":1,\"1449\":3,\"1450\":3}}],[\"levelname\",{\"1\":{\"227\":1,\"739\":1,\"1254\":1}}],[\"level=\",{\"1\":{\"420\":1,\"935\":1,\"1450\":1}}],[\"level=0\",{\"1\":{\"420\":1,\"935\":1,\"1450\":1}}],[\"level=info\",{\"1\":{\"169\":1,\"679\":1,\"1194\":1}}],[\"level=25\",{\"1\":{\"169\":1,\"679\":1,\"1194\":1}}],[\"lvl>\",{\"1\":{\"420\":2,\"935\":2,\"1450\":2}}],[\"ls\",{\"1\":{\"365\":1,\"880\":1,\"1395\":1}}],[\"latest\",{\"1\":{\"2697\":6,\"2712\":6,\"2727\":6}}],[\"labels\",{\"1\":{\"2686\":1,\"2701\":1,\"2716\":1}}],[\"label\",{\"1\":{\"2686\":2,\"2701\":2,\"2716\":2,\"2732\":1,\"2733\":1,\"2734\":1,\"2739\":1,\"2740\":1,\"2741\":1,\"2746\":1,\"2747\":1,\"2748\":1,\"2749\":1,\"2750\":1,\"2751\":1}}],[\"last\",{\"1\":{\"178\":2,\"327\":1,\"688\":2,\"840\":1,\"1203\":2,\"1355\":1,\"2686\":1,\"2701\":1,\"2716\":1}}],[\"languageserver\",{\"1\":{\"10\":1,\"22\":1,\"34\":1}}],[\"language\",{\"1\":{\"10\":2,\"22\":2,\"34\":2}}],[\"localhost\",{\"1\":{\"1937\":1,\"2306\":1,\"2675\":1,\"2697\":4,\"2712\":4,\"2727\":4}}],[\"locals\",{\"1\":{\"449\":1,\"964\":1,\"1479\":1}}],[\"localstore\",{\"0\":{\"437\":1,\"438\":1,\"439\":1,\"440\":1,\"441\":1,\"442\":1,\"443\":1,\"952\":1,\"953\":1,\"954\":1,\"955\":1,\"956\":1,\"957\":1,\"958\":1,\"1467\":1,\"1468\":1,\"1469\":1,\"1470\":1,\"1471\":1,\"1472\":1,\"1473\":1},\"1\":{\"433\":1,\"434\":2,\"435\":4,\"437\":1,\"438\":2,\"439\":2,\"440\":2,\"441\":1,\"442\":1,\"443\":1,\"505\":2,\"948\":1,\"949\":2,\"950\":4,\"952\":1,\"953\":2,\"954\":2,\"955\":2,\"956\":1,\"957\":1,\"958\":1,\"1020\":2,\"1463\":1,\"1464\":2,\"1465\":4,\"1467\":1,\"1468\":2,\"1469\":2,\"1470\":2,\"1471\":1,\"1472\":1,\"1473\":1,\"1535\":2}}],[\"local\",{\"1\":{\"438\":1,\"439\":2,\"440\":1,\"953\":1,\"954\":2,\"955\":1,\"1468\":1,\"1469\":2,\"1470\":1}}],[\"localns\",{\"1\":{\"380\":1,\"895\":1,\"1410\":1}}],[\"location=location\",{\"1\":{\"2687\":2,\"2702\":2,\"2717\":2}}],[\"location=\",{\"1\":{\"2687\":1,\"2702\":1,\"2717\":1}}],[\"location\",{\"1\":{\"423\":4,\"938\":4,\"1453\":4,\"2685\":5,\"2686\":7,\"2687\":15,\"2688\":4,\"2700\":5,\"2701\":7,\"2702\":15,\"2703\":4,\"2715\":5,\"2716\":7,\"2717\":15,\"2718\":4}}],[\"loader\",{\"1\":{\"503\":1,\"1018\":1,\"1533\":1}}],[\"loaded\",{\"1\":{\"111\":1,\"216\":2,\"621\":1,\"728\":2,\"1136\":1,\"1243\":2}}],[\"load\",{\"0\":{\"1815\":1,\"2184\":1,\"2553\":1},\"1\":{\"114\":1,\"116\":1,\"216\":12,\"509\":3,\"515\":2,\"517\":2,\"518\":1,\"519\":1,\"520\":3,\"521\":3,\"522\":2,\"523\":1,\"624\":1,\"626\":1,\"728\":12,\"1024\":3,\"1030\":2,\"1032\":2,\"1033\":1,\"1034\":1,\"1035\":3,\"1036\":3,\"1037\":2,\"1038\":1,\"1139\":1,\"1141\":1,\"1243\":12,\"1539\":3,\"1545\":2,\"1547\":2,\"1548\":1,\"1549\":1,\"1550\":3,\"1551\":3,\"1552\":2,\"1553\":1,\"1809\":12,\"1810\":1,\"1819\":1,\"1820\":1,\"2178\":12,\"2179\":1,\"2188\":1,\"2189\":1,\"2547\":12,\"2548\":1,\"2557\":1,\"2558\":1}}],[\"logrecord\",{\"1\":{\"229\":1,\"741\":1,\"1256\":1}}],[\"logging\",{\"0\":{\"421\":1,\"936\":1,\"1451\":1},\"1\":{\"228\":2,\"229\":1,\"421\":5,\"740\":2,\"741\":1,\"936\":5,\"1255\":2,\"1256\":1,\"1451\":5,\"1692\":1,\"2061\":1,\"2430\":1}}],[\"logger\",{\"1\":{\"226\":2,\"227\":2,\"417\":1,\"419\":14,\"420\":6,\"421\":3,\"468\":5,\"738\":2,\"739\":2,\"932\":1,\"934\":14,\"935\":6,\"936\":3,\"983\":5,\"1253\":2,\"1254\":2,\"1447\":1,\"1449\":14,\"1450\":6,\"1451\":3,\"1498\":5,\"1692\":2,\"1722\":1,\"1768\":1,\"1783\":1,\"2061\":2,\"2101\":1,\"2137\":1,\"2152\":1,\"2430\":2,\"2470\":1,\"2506\":1,\"2521\":1}}],[\"loguruhandler\",{\"1\":{\"421\":5,\"936\":5,\"1451\":5}}],[\"loguru\",{\"1\":{\"169\":1,\"226\":2,\"228\":2,\"398\":1,\"418\":1,\"419\":1,\"420\":1,\"421\":1,\"478\":1,\"679\":1,\"738\":2,\"740\":2,\"913\":1,\"933\":1,\"934\":1,\"935\":1,\"936\":1,\"993\":1,\"1194\":1,\"1253\":2,\"1255\":2,\"1428\":1,\"1448\":1,\"1449\":1,\"1450\":1,\"1451\":1,\"1508\":1}}],[\"log\",{\"0\":{\"226\":1,\"457\":1,\"468\":1,\"738\":1,\"972\":1,\"983\":1,\"1253\":1,\"1487\":1,\"1498\":1},\"1\":{\"45\":2,\"169\":2,\"209\":2,\"227\":2,\"230\":1,\"419\":3,\"420\":5,\"421\":1,\"468\":10,\"472\":3,\"475\":3,\"476\":1,\"555\":2,\"679\":2,\"721\":2,\"739\":2,\"742\":1,\"934\":3,\"935\":5,\"936\":1,\"983\":10,\"987\":3,\"990\":3,\"991\":1,\"1070\":2,\"1194\":2,\"1236\":2,\"1254\":2,\"1257\":1,\"1449\":3,\"1450\":5,\"1451\":1,\"1498\":10,\"1502\":3,\"1505\":3,\"1506\":1}}],[\"lifespan\",{\"1\":{\"1607\":2,\"1724\":2,\"1725\":2,\"1957\":2,\"2103\":2,\"2104\":2,\"2326\":2,\"2472\":2,\"2473\":2}}],[\"libonebot\",{\"0\":{\"492\":1,\"493\":1,\"1007\":1,\"1008\":1,\"1522\":1,\"1523\":1},\"1\":{\"492\":3,\"493\":3,\"1007\":3,\"1008\":3,\"1522\":3,\"1523\":3}}],[\"library\",{\"1\":{\"79\":1,\"110\":1,\"438\":1,\"439\":1,\"589\":1,\"620\":1,\"953\":1,\"954\":1,\"1104\":1,\"1135\":1,\"1468\":1,\"1469\":1}}],[\"linux\",{\"1\":{\"435\":1,\"507\":1,\"950\":1,\"1022\":1,\"1465\":1,\"1537\":1,\"2697\":2,\"2712\":2,\"2727\":2}}],[\"line\",{\"1\":{\"118\":1,\"628\":1,\"1143\":1}}],[\"literal\",{\"1\":{\"177\":1,\"178\":1,\"179\":1,\"180\":1,\"181\":1,\"182\":1,\"183\":1,\"184\":1,\"185\":1,\"186\":1,\"187\":1,\"188\":1,\"189\":1,\"190\":1,\"191\":1,\"192\":1,\"193\":1,\"194\":1,\"298\":1,\"319\":1,\"376\":1,\"377\":1,\"401\":1,\"687\":1,\"688\":1,\"689\":1,\"690\":1,\"691\":1,\"692\":1,\"693\":1,\"694\":1,\"695\":1,\"696\":1,\"697\":1,\"698\":1,\"699\":1,\"700\":1,\"701\":1,\"702\":1,\"703\":1,\"704\":1,\"705\":1,\"706\":1,\"808\":1,\"832\":1,\"891\":1,\"892\":1,\"916\":1,\"1202\":1,\"1203\":1,\"1204\":1,\"1205\":1,\"1206\":1,\"1207\":1,\"1208\":1,\"1209\":1,\"1210\":1,\"1211\":1,\"1212\":1,\"1213\":1,\"1214\":1,\"1215\":1,\"1216\":1,\"1217\":1,\"1218\":1,\"1219\":1,\"1220\":1,\"1221\":1,\"1323\":1,\"1347\":1,\"1406\":1,\"1407\":1,\"1431\":1,\"1897\":1,\"1922\":1,\"2266\":1,\"2291\":1,\"2635\":1,\"2660\":1}}],[\"like\",{\"1\":{\"161\":1,\"362\":1,\"365\":1,\"671\":1,\"877\":1,\"880\":1,\"1186\":1,\"1392\":1,\"1395\":1,\"1873\":1,\"1878\":1,\"1890\":1,\"2242\":1,\"2247\":1,\"2259\":1,\"2611\":1,\"2616\":1,\"2628\":1}}],[\"list\",{\"1\":{\"65\":1,\"67\":1,\"68\":1,\"73\":1,\"75\":1,\"76\":1,\"82\":1,\"156\":2,\"237\":1,\"242\":1,\"276\":1,\"277\":1,\"278\":4,\"279\":1,\"280\":1,\"282\":1,\"283\":2,\"285\":1,\"360\":1,\"363\":6,\"364\":1,\"377\":1,\"415\":1,\"449\":2,\"532\":2,\"534\":2,\"536\":1,\"540\":1,\"575\":1,\"577\":1,\"578\":1,\"583\":1,\"585\":1,\"586\":1,\"592\":1,\"666\":2,\"750\":1,\"755\":1,\"788\":1,\"789\":1,\"790\":4,\"791\":1,\"792\":1,\"794\":1,\"795\":2,\"797\":1,\"875\":1,\"878\":6,\"879\":1,\"892\":1,\"930\":1,\"964\":2,\"1047\":2,\"1049\":2,\"1051\":1,\"1055\":1,\"1090\":1,\"1092\":1,\"1093\":1,\"1098\":1,\"1100\":1,\"1101\":1,\"1107\":1,\"1181\":2,\"1265\":1,\"1270\":1,\"1303\":1,\"1304\":1,\"1305\":4,\"1306\":1,\"1307\":1,\"1309\":1,\"1310\":2,\"1312\":1,\"1390\":1,\"1393\":6,\"1394\":1,\"1407\":1,\"1445\":1,\"1479\":2,\"1562\":2,\"1564\":2,\"1566\":1,\"1570\":1,\"1683\":1,\"1685\":1,\"1686\":1,\"1774\":1,\"1776\":1,\"1777\":1,\"1863\":1,\"1864\":1,\"1865\":1,\"1866\":1,\"1867\":1,\"1868\":1,\"1869\":1,\"1870\":1,\"1871\":1,\"1872\":1,\"1873\":1,\"1874\":1,\"1875\":1,\"1876\":1,\"1877\":1,\"1878\":1,\"1879\":1,\"1880\":1,\"1881\":1,\"1882\":1,\"1883\":1,\"1884\":1,\"1885\":1,\"1886\":1,\"1887\":1,\"1888\":1,\"1889\":1,\"1890\":1,\"1891\":1,\"1892\":1,\"1897\":2,\"1907\":1,\"1909\":2,\"1910\":1,\"1921\":1,\"2052\":1,\"2054\":1,\"2055\":1,\"2143\":1,\"2145\":1,\"2146\":1,\"2232\":1,\"2233\":1,\"2234\":1,\"2235\":1,\"2236\":1,\"2237\":1,\"2238\":1,\"2239\":1,\"2240\":1,\"2241\":1,\"2242\":1,\"2243\":1,\"2244\":1,\"2245\":1,\"2246\":1,\"2247\":1,\"2248\":1,\"2249\":1,\"2250\":1,\"2251\":1,\"2252\":1,\"2253\":1,\"2254\":1,\"2255\":1,\"2256\":1,\"2257\":1,\"2258\":1,\"2259\":1,\"2260\":1,\"2261\":1,\"2266\":2,\"2276\":1,\"2278\":2,\"2279\":1,\"2290\":1,\"2421\":1,\"2423\":1,\"2424\":1,\"2512\":1,\"2514\":1,\"2515\":1,\"2601\":1,\"2602\":1,\"2603\":1,\"2604\":1,\"2605\":1,\"2606\":1,\"2607\":1,\"2608\":1,\"2609\":1,\"2610\":1,\"2611\":1,\"2612\":1,\"2613\":1,\"2614\":1,\"2615\":1,\"2616\":1,\"2617\":1,\"2618\":1,\"2619\":1,\"2620\":1,\"2621\":1,\"2622\":1,\"2623\":1,\"2624\":1,\"2625\":1,\"2626\":1,\"2627\":1,\"2628\":1,\"2629\":1,\"2630\":1,\"2635\":2,\"2645\":1,\"2647\":2,\"2648\":1,\"2659\":1}}],[\"用来提供更好的自动补全\",{\"1\":{\"1913\":1,\"2282\":1,\"2651\":1}}],[\"用来识别\",{\"1\":{\"222\":1,\"734\":1,\"1249\":1}}],[\"用法和\",{\"1\":{\"1609\":1,\"1978\":1,\"2347\":1}}],[\"用法与\",{\"1\":{\"362\":1,\"877\":1,\"1392\":1}}],[\"用法\",{\"1\":{\"169\":1,\"171\":1,\"173\":1,\"174\":1,\"175\":1,\"200\":1,\"203\":1,\"205\":1,\"206\":1,\"207\":1,\"217\":1,\"218\":1,\"219\":1,\"220\":1,\"221\":1,\"222\":1,\"223\":1,\"224\":1,\"225\":1,\"227\":1,\"293\":1,\"297\":1,\"333\":1,\"347\":1,\"361\":1,\"362\":1,\"365\":1,\"679\":1,\"681\":1,\"683\":1,\"684\":1,\"685\":1,\"712\":1,\"715\":1,\"717\":1,\"718\":1,\"719\":1,\"729\":1,\"730\":1,\"731\":1,\"732\":1,\"733\":1,\"734\":1,\"735\":1,\"736\":1,\"737\":1,\"739\":1,\"805\":1,\"815\":1,\"845\":1,\"862\":1,\"876\":1,\"877\":1,\"880\":1,\"1194\":1,\"1196\":1,\"1198\":1,\"1199\":1,\"1200\":1,\"1227\":1,\"1230\":1,\"1232\":1,\"1233\":1,\"1234\":1,\"1244\":1,\"1245\":1,\"1246\":1,\"1247\":1,\"1248\":1,\"1249\":1,\"1250\":1,\"1251\":1,\"1252\":1,\"1254\":1,\"1320\":1,\"1330\":1,\"1360\":1,\"1377\":1,\"1391\":1,\"1392\":1,\"1395\":1,\"1582\":1,\"1819\":1,\"1820\":1,\"1963\":1,\"2188\":1,\"2189\":1,\"2332\":1,\"2557\":1,\"2558\":1}}],[\"用于处理平台\",{\"1\":{\"1942\":1,\"2311\":1,\"2680\":1}}],[\"用于处理上报消息\",{\"1\":{\"1577\":1,\"1958\":1,\"2327\":1}}],[\"用于接收平台\",{\"1\":{\"1941\":1,\"2310\":1,\"2679\":1}}],[\"用于告知解析器该参数为一个\",{\"1\":{\"1898\":1,\"2267\":1,\"2636\":1}}],[\"用于告知解析器该参数可以接受多个值\",{\"1\":{\"1898\":1,\"2267\":1,\"2636\":1}}],[\"用于商店分类\",{\"1\":{\"1843\":1,\"2212\":1,\"2581\":1}}],[\"用于描述参数信息\",{\"1\":{\"1647\":1,\"2016\":1,\"2385\":1}}],[\"用于判断当前事件属于哪一个会话\",{\"1\":{\"1592\":1,\"1973\":1,\"2342\":1}}],[\"用于判断一条消息是不是命令\",{\"1\":{\"173\":1,\"683\":1,\"1198\":1}}],[\"用于无平台适配接入\",{\"1\":{\"496\":1,\"1011\":1,\"1526\":1}}],[\"用于日志打印\",{\"1\":{\"478\":2,\"993\":2,\"1508\":2}}],[\"用于日志记录\",{\"1\":{\"45\":1,\"555\":1,\"1070\":1}}],[\"用于将\",{\"1\":{\"421\":1,\"936\":1,\"1451\":1}}],[\"用于将文本形式的命令切分为元组\",{\"1\":{\"174\":1,\"684\":1,\"1199\":1}}],[\"用于打印\",{\"1\":{\"417\":1,\"932\":1,\"1447\":1}}],[\"用于记录带颜色日志时转义\",{\"1\":{\"398\":1,\"913\":1,\"1428\":1}}],[\"用于存储依赖函数的返回值\",{\"1\":{\"396\":1,\"911\":1,\"1426\":1}}],[\"用于更新会话对象权限\",{\"1\":{\"395\":1,\"910\":1,\"1425\":1}}],[\"用于更新响应的事件类型\",{\"1\":{\"394\":1,\"909\":1,\"1424\":1}}],[\"用于管理事件响应器\",{\"1\":{\"274\":1,\"786\":1,\"1301\":1}}],[\"用于收集帮助信息等\",{\"1\":{\"109\":1,\"619\":1,\"1134\":1}}],[\"用于指定默认值\",{\"1\":{\"1898\":1,\"2267\":1,\"2636\":1}}],[\"用于指定是否忽略大小写\",{\"1\":{\"95\":1,\"96\":1,\"97\":1,\"605\":1,\"606\":1,\"607\":1,\"1120\":1,\"1121\":1,\"1122\":1}}],[\"用于指定响应器的默认状态\",{\"1\":{\"92\":1,\"602\":1,\"1117\":1}}],[\"用于指定响应器的过期时间\",{\"1\":{\"91\":1,\"601\":1,\"1116\":1}}],[\"用于指定响应器的优先级\",{\"1\":{\"89\":1,\"599\":1,\"1114\":1}}],[\"用于指定响应器是否为临时响应器\",{\"1\":{\"91\":1,\"601\":1,\"1116\":1}}],[\"用于指定响应器是否阻断事件的传播\",{\"1\":{\"90\":1,\"600\":1,\"1115\":1}}],[\"用于在与其他驱动器配合使用时加载\",{\"1\":{\"54\":1,\"564\":1,\"1079\":1}}],[\"用户指南\",{\"0\":{\"1926\":1,\"2295\":1,\"2664\":1}}],[\"用户名作为插件作者名\",{\"1\":{\"504\":1,\"1019\":1,\"1534\":1}}],[\"用户请求提交插件到商店时进行自动化检测\",{\"1\":{\"504\":1,\"1019\":1,\"1534\":1}}],[\"用户上手与深入教程设计\",{\"0\":{\"497\":1,\"1012\":1,\"1527\":1}}],[\"用户提供一套易用便捷\",{\"1\":{\"487\":1,\"1002\":1,\"1517\":1}}],[\"用户可以向\",{\"1\":{\"53\":1,\"563\":1,\"1078\":1}}],[\"用户无需编写任何代码\",{\"1\":{\"0\":1,\"12\":1,\"24\":1}}],[\"db\",{\"1\":{\"2697\":14,\"2712\":14,\"2727\":14}}],[\"duplication=mydup\",{\"1\":{\"1913\":1,\"2282\":1,\"2651\":1}}],[\"duplication\",{\"0\":{\"1913\":1,\"2282\":1,\"2651\":1},\"1\":{\"1913\":7,\"2282\":7,\"2651\":7}}],[\"dump\",{\"1\":{\"478\":2,\"993\":2,\"1508\":2}}],[\"d+\",{\"1\":{\"1894\":3,\"1897\":1,\"1908\":2,\"2263\":3,\"2266\":1,\"2277\":2,\"2632\":3,\"2635\":1,\"2646\":2}}],[\"drop\",{\"1\":{\"2686\":3,\"2701\":3,\"2716\":3}}],[\"draft\",{\"1\":{\"504\":1,\"1019\":1,\"1534\":1}}],[\"driverexception\",{\"1\":{\"195\":1,\"707\":1,\"1222\":1}}],[\"drivers\",{\"0\":{\"1658\":1,\"1676\":1,\"1704\":1,\"1713\":1,\"1765\":1,\"1771\":1,\"1795\":1,\"2027\":1,\"2045\":1,\"2073\":1,\"2082\":1,\"2134\":1,\"2140\":1,\"2164\":1,\"2396\":1,\"2414\":1,\"2442\":1,\"2451\":1,\"2503\":1,\"2509\":1,\"2533\":1},\"1\":{\"118\":1,\"120\":1,\"121\":1,\"166\":1,\"470\":1,\"472\":1,\"473\":1,\"476\":1,\"628\":1,\"630\":1,\"631\":1,\"676\":1,\"985\":1,\"987\":1,\"988\":1,\"991\":1,\"1143\":1,\"1145\":1,\"1146\":1,\"1191\":1,\"1500\":1,\"1502\":1,\"1503\":1,\"1506\":1}}],[\"driver=~websockets\",{\"1\":{\"79\":1,\"589\":1,\"1104\":1}}],[\"driver=~httpx\",{\"1\":{\"78\":1,\"588\":1,\"1103\":1}}],[\"driver=~httpx+~websockets\",{\"1\":{\"54\":1,\"564\":1,\"1079\":1}}],[\"driver=~quart\",{\"1\":{\"70\":1,\"580\":1,\"1095\":1}}],[\"driver=~none\",{\"1\":{\"57\":1,\"567\":1,\"1082\":1}}],[\"driver=~aiohttp\",{\"1\":{\"54\":1,\"80\":1,\"564\":1,\"590\":1,\"1079\":1,\"1105\":1}}],[\"driver=~fastapi+~httpx+~websockets\",{\"1\":{\"54\":1,\"564\":1,\"1079\":1}}],[\"driver=~fastapi\",{\"1\":{\"54\":1,\"58\":1,\"564\":1,\"568\":1,\"1079\":1,\"1083\":1}}],[\"driver\",{\"1\":{\"38\":3,\"52\":1,\"54\":2,\"55\":4,\"118\":2,\"120\":4,\"121\":4,\"127\":4,\"128\":4,\"129\":4,\"130\":4,\"166\":2,\"213\":1,\"217\":7,\"218\":1,\"219\":1,\"220\":2,\"221\":2,\"222\":1,\"223\":1,\"224\":2,\"225\":3,\"293\":1,\"470\":4,\"471\":1,\"472\":9,\"473\":7,\"476\":2,\"509\":3,\"525\":1,\"548\":3,\"562\":1,\"564\":2,\"565\":4,\"628\":2,\"630\":4,\"631\":4,\"637\":4,\"638\":4,\"639\":4,\"640\":4,\"676\":2,\"725\":1,\"729\":7,\"730\":1,\"731\":1,\"732\":2,\"733\":2,\"734\":1,\"735\":1,\"736\":2,\"737\":3,\"805\":1,\"985\":4,\"986\":1,\"987\":9,\"988\":7,\"991\":2,\"1024\":3,\"1040\":1,\"1063\":3,\"1077\":1,\"1079\":2,\"1080\":4,\"1143\":2,\"1145\":4,\"1146\":4,\"1152\":4,\"1153\":4,\"1154\":4,\"1155\":4,\"1191\":2,\"1240\":1,\"1244\":7,\"1245\":1,\"1246\":1,\"1247\":2,\"1248\":2,\"1249\":1,\"1250\":1,\"1251\":2,\"1252\":3,\"1320\":1,\"1500\":4,\"1501\":1,\"1502\":9,\"1503\":7,\"1506\":2,\"1539\":3,\"1555\":1,\"1576\":1,\"1596\":4,\"1597\":1,\"1658\":1,\"1676\":1,\"1704\":1,\"1757\":4,\"1768\":1,\"1769\":1,\"1770\":1,\"1771\":1,\"1795\":1,\"1945\":1,\"1946\":4,\"1947\":1,\"2027\":1,\"2045\":1,\"2073\":1,\"2133\":4,\"2137\":1,\"2138\":1,\"2139\":1,\"2140\":1,\"2164\":1,\"2314\":1,\"2315\":4,\"2316\":1,\"2396\":1,\"2414\":1,\"2442\":1,\"2502\":4,\"2506\":1,\"2507\":1,\"2508\":1,\"2509\":1,\"2533\":1}}],[\"days=1\",{\"1\":{\"454\":1,\"969\":1,\"1484\":1}}],[\"day\",{\"1\":{\"454\":2,\"969\":2,\"1484\":2}}],[\"database\",{\"0\":{\"1936\":1,\"2305\":1,\"2674\":1,\"2776\":1,\"2779\":1,\"2782\":1},\"1\":{\"1936\":2,\"1939\":1,\"2305\":2,\"2308\":1,\"2674\":2,\"2677\":1,\"2697\":4,\"2712\":4,\"2727\":4}}],[\"database=database\",{\"1\":{\"224\":1,\"736\":1,\"1251\":1}}],[\"datatypes\",{\"1\":{\"1735\":1,\"2116\":1,\"2485\":1}}],[\"data=\",{\"1\":{\"534\":2,\"545\":6,\"1049\":2,\"1060\":6,\"1564\":2,\"1575\":6}}],[\"data=data\",{\"1\":{\"477\":1,\"992\":1,\"1507\":1}}],[\"data=platform\",{\"1\":{\"476\":1,\"991\":1,\"1506\":1}}],[\"dataclass\",{\"1\":{\"415\":1,\"930\":1,\"1445\":1}}],[\"data\",{\"0\":{\"439\":1,\"442\":1,\"954\":1,\"957\":1,\"1469\":1,\"1472\":1},\"1\":{\"121\":2,\"136\":1,\"137\":1,\"147\":1,\"159\":2,\"160\":1,\"386\":1,\"435\":9,\"439\":5,\"440\":2,\"442\":2,\"472\":1,\"476\":10,\"477\":2,\"534\":1,\"538\":2,\"631\":2,\"646\":1,\"647\":1,\"657\":1,\"669\":2,\"670\":1,\"901\":1,\"950\":9,\"954\":5,\"955\":2,\"957\":2,\"987\":1,\"991\":10,\"992\":2,\"1049\":1,\"1053\":2,\"1146\":2,\"1161\":1,\"1162\":1,\"1172\":1,\"1184\":2,\"1185\":1,\"1416\":1,\"1465\":9,\"1469\":5,\"1470\":2,\"1472\":2,\"1502\":1,\"1506\":10,\"1507\":2,\"1564\":1,\"1568\":2,\"1582\":1,\"1584\":1,\"1585\":1,\"1596\":1,\"1673\":1,\"1674\":1,\"1702\":1,\"1703\":1,\"1735\":1,\"1749\":1,\"1750\":1,\"1751\":1,\"1793\":1,\"1794\":1,\"1805\":1,\"1806\":1,\"1902\":1,\"1946\":1,\"1963\":1,\"1965\":1,\"1966\":1,\"2042\":1,\"2043\":1,\"2071\":1,\"2072\":1,\"2116\":1,\"2127\":1,\"2128\":1,\"2129\":1,\"2162\":1,\"2163\":1,\"2174\":1,\"2175\":1,\"2271\":1,\"2315\":1,\"2332\":1,\"2334\":1,\"2335\":1,\"2411\":1,\"2412\":1,\"2440\":1,\"2441\":1,\"2485\":1,\"2496\":1,\"2497\":1,\"2498\":1,\"2531\":1,\"2532\":1,\"2543\":1,\"2544\":1,\"2640\":1}}],[\"datetime\",{\"1\":{\"91\":1,\"241\":1,\"242\":1,\"601\":1,\"754\":1,\"755\":1,\"1116\":1,\"1269\":1,\"1270\":1,\"1863\":1,\"1864\":1,\"1865\":1,\"1866\":1,\"1867\":1,\"1868\":1,\"1869\":1,\"1870\":1,\"1871\":1,\"1872\":1,\"1873\":1,\"1874\":1,\"1875\":1,\"1876\":1,\"1877\":1,\"1878\":1,\"1879\":1,\"1880\":1,\"1881\":1,\"1882\":1,\"1883\":1,\"1884\":1,\"1885\":1,\"1886\":1,\"1887\":1,\"1888\":1,\"1889\":1,\"1890\":1,\"1891\":1,\"1892\":1,\"1897\":2,\"2232\":1,\"2233\":1,\"2234\":1,\"2235\":1,\"2236\":1,\"2237\":1,\"2238\":1,\"2239\":1,\"2240\":1,\"2241\":1,\"2242\":1,\"2243\":1,\"2244\":1,\"2245\":1,\"2246\":1,\"2247\":1,\"2248\":1,\"2249\":1,\"2250\":1,\"2251\":1,\"2252\":1,\"2253\":1,\"2254\":1,\"2255\":1,\"2256\":1,\"2257\":1,\"2258\":1,\"2259\":1,\"2260\":1,\"2261\":1,\"2266\":2,\"2601\":1,\"2602\":1,\"2603\":1,\"2604\":1,\"2605\":1,\"2606\":1,\"2607\":1,\"2608\":1,\"2609\":1,\"2610\":1,\"2611\":1,\"2612\":1,\"2613\":1,\"2614\":1,\"2615\":1,\"2616\":1,\"2617\":1,\"2618\":1,\"2619\":1,\"2620\":1,\"2621\":1,\"2622\":1,\"2623\":1,\"2624\":1,\"2625\":1,\"2626\":1,\"2627\":1,\"2628\":1,\"2629\":1,\"2630\":1,\"2635\":2}}],[\"dsn>\",{\"1\":{\"448\":1,\"963\":1,\"1478\":1}}],[\"dsn=<your\",{\"1\":{\"448\":1,\"963\":1,\"1478\":1}}],[\"dsn\",{\"0\":{\"447\":1,\"962\":1,\"1477\":1},\"1\":{\"447\":2,\"448\":1,\"449\":1,\"962\":2,\"963\":1,\"964\":1,\"1477\":2,\"1478\":1,\"1479\":1}}],[\"dt\",{\"1\":{\"175\":1,\"685\":1,\"1200\":1}}],[\"d\",{\"1\":{\"175\":1,\"423\":1,\"685\":1,\"938\":1,\"1200\":1,\"1453\":1,\"1757\":4,\"1894\":1,\"2133\":4,\"2263\":1,\"2502\":4,\"2632\":1}}],[\"ddl\",{\"1\":{\"2686\":1,\"2701\":1,\"2716\":1}}],[\"dd\",{\"1\":{\"175\":2,\"420\":2,\"685\":2,\"935\":2,\"1200\":2,\"1450\":2}}],[\"down\",{\"1\":{\"2686\":1,\"2701\":1,\"2716\":1}}],[\"downgrade\",{\"0\":{\"1933\":1,\"2302\":1,\"2671\":1},\"1\":{\"1929\":1,\"1933\":2,\"2298\":1,\"2302\":2,\"2667\":1,\"2671\":2,\"2686\":3,\"2701\":3,\"2716\":3}}],[\"domain\",{\"1\":{\"1729\":1,\"1730\":1,\"1731\":1,\"1732\":1,\"2089\":1,\"2090\":1,\"2091\":1,\"2092\":1,\"2458\":1,\"2459\":1,\"2460\":1,\"2461\":1}}],[\"done\",{\"1\":{\"472\":1,\"987\":1,\"1502\":1}}],[\"doesn\",{\"1\":{\"472\":1,\"473\":1,\"987\":1,\"988\":1,\"1502\":1,\"1503\":1}}],[\"docusaurus\",{\"1\":{\"503\":6,\"1018\":6,\"1533\":6}}],[\"documents\",{\"1\":{\"439\":1,\"440\":1,\"954\":1,\"955\":1,\"1469\":1,\"1470\":1}}],[\"docstring\",{\"1\":{\"485\":1,\"1000\":1,\"1515\":1}}],[\"docs\",{\"1\":{\"449\":1,\"964\":1,\"1479\":1}}],[\"dotenv\",{\"1\":{\"162\":1,\"163\":2,\"165\":1,\"224\":1,\"448\":1,\"508\":2,\"672\":1,\"673\":2,\"675\":1,\"736\":1,\"963\":1,\"1023\":2,\"1187\":1,\"1188\":2,\"1190\":1,\"1251\":1,\"1478\":1,\"1538\":2}}],[\"do\",{\"1\":{\"121\":1,\"127\":1,\"128\":1,\"129\":1,\"130\":1,\"132\":1,\"133\":1,\"134\":1,\"135\":1,\"631\":1,\"637\":1,\"638\":1,\"639\":1,\"640\":1,\"642\":1,\"643\":1,\"644\":1,\"645\":1,\"1146\":1,\"1152\":1,\"1153\":1,\"1154\":1,\"1155\":1,\"1157\":1,\"1158\":1,\"1159\":1,\"1160\":1,\"1911\":1,\"2280\":1,\"2649\":1}}],[\"dirs\",{\"1\":{\"515\":2,\"520\":2,\"521\":2,\"1030\":2,\"1035\":2,\"1036\":2,\"1545\":2,\"1550\":2,\"1551\":2,\"1819\":2,\"1820\":2,\"2188\":2,\"2189\":2,\"2557\":2,\"2558\":2}}],[\"dir=\",{\"1\":{\"438\":1,\"439\":1,\"440\":1,\"441\":1,\"442\":1,\"443\":1,\"953\":1,\"954\":1,\"955\":1,\"956\":1,\"957\":1,\"958\":1,\"1468\":1,\"1469\":1,\"1470\":1,\"1471\":1,\"1472\":1,\"1473\":1}}],[\"directory>\",{\"1\":{\"438\":1,\"439\":1,\"440\":1,\"953\":1,\"954\":1,\"955\":1,\"1468\":1,\"1469\":1,\"1470\":1}}],[\"dir\",{\"0\":{\"438\":1,\"439\":1,\"440\":1,\"441\":1,\"442\":1,\"443\":1,\"953\":1,\"954\":1,\"955\":1,\"956\":1,\"957\":1,\"958\":1,\"1468\":1,\"1469\":1,\"1470\":1,\"1471\":1,\"1472\":1,\"1473\":1},\"1\":{\"435\":6,\"440\":1,\"950\":6,\"955\":1,\"1465\":6,\"1470\":1,\"1817\":1,\"1818\":1,\"1819\":1,\"1820\":1,\"2186\":1,\"2187\":1,\"2188\":1,\"2189\":1,\"2555\":1,\"2556\":1,\"2557\":1,\"2558\":1}}],[\"diagnose=true\",{\"1\":{\"420\":1,\"935\":1,\"1450\":1}}],[\"disable\",{\"1\":{\"1904\":1,\"2273\":1,\"2642\":1}}],[\"discord\",{\"0\":{\"500\":1,\"1015\":1,\"1530\":1},\"1\":{\"459\":1,\"500\":4,\"974\":1,\"1015\":4,\"1489\":1,\"1530\":4}}],[\"disconnect\",{\"1\":{\"130\":1,\"474\":3,\"640\":1,\"989\":3,\"1155\":1,\"1504\":3,\"1941\":1,\"2310\":1,\"2679\":1}}],[\"dist\",{\"1\":{\"69\":1,\"77\":1,\"579\":1,\"587\":1,\"1094\":1,\"1102\":1}}],[\"dict\",{\"1\":{\"92\":1,\"136\":1,\"137\":1,\"147\":1,\"155\":1,\"158\":1,\"219\":1,\"223\":1,\"321\":1,\"380\":2,\"382\":1,\"385\":1,\"386\":1,\"396\":1,\"399\":3,\"458\":1,\"475\":3,\"602\":1,\"646\":1,\"647\":1,\"657\":1,\"665\":1,\"668\":1,\"731\":1,\"735\":1,\"834\":1,\"895\":2,\"897\":1,\"900\":1,\"901\":1,\"911\":1,\"914\":3,\"973\":1,\"990\":3,\"1117\":1,\"1161\":1,\"1162\":1,\"1172\":1,\"1180\":1,\"1183\":1,\"1246\":1,\"1250\":1,\"1349\":1,\"1410\":2,\"1412\":1,\"1415\":1,\"1416\":1,\"1426\":1,\"1429\":3,\"1488\":1,\"1505\":3,\"1598\":1,\"1628\":1,\"1653\":1,\"1656\":1,\"1687\":1,\"1719\":1,\"1734\":1,\"1778\":1,\"1830\":1,\"1847\":1,\"1897\":2,\"1948\":1,\"1997\":1,\"2022\":1,\"2025\":1,\"2056\":1,\"2094\":1,\"2098\":1,\"2147\":1,\"2199\":1,\"2216\":1,\"2266\":2,\"2317\":1,\"2366\":1,\"2391\":1,\"2394\":1,\"2425\":1,\"2463\":1,\"2467\":1,\"2516\":1,\"2568\":1,\"2585\":1,\"2635\":2}}],[\"demoextension\",{\"1\":{\"1921\":1,\"2290\":1,\"2659\":1}}],[\"delete\",{\"1\":{\"1909\":1,\"2278\":1,\"2647\":1}}],[\"delete=true\",{\"1\":{\"1909\":1,\"2278\":1,\"2647\":1}}],[\"delimiter\",{\"1\":{\"163\":1,\"165\":1,\"673\":1,\"675\":1,\"1188\":1,\"1190\":1}}],[\"dest=\",{\"1\":{\"1913\":3,\"2282\":3,\"2651\":3}}],[\"dest\",{\"1\":{\"1900\":1,\"2269\":1,\"2638\":1}}],[\"description=\",{\"1\":{\"110\":1,\"620\":1,\"1135\":1}}],[\"description\",{\"1\":{\"44\":2,\"478\":1,\"554\":2,\"993\":1,\"1069\":2,\"1508\":1,\"1903\":1,\"2272\":1,\"2641\":1}}],[\"developer\",{\"0\":{\"2758\":1,\"2765\":1,\"2772\":1}}],[\"dev\",{\"1\":{\"482\":1,\"494\":1,\"498\":1,\"502\":1,\"997\":1,\"1009\":1,\"1013\":1,\"1017\":1,\"1512\":1,\"1524\":1,\"1528\":1,\"1532\":1}}],[\"debug\",{\"1\":{\"419\":2,\"449\":1,\"457\":3,\"468\":2,\"476\":1,\"934\":2,\"964\":1,\"972\":3,\"983\":2,\"991\":1,\"1449\":2,\"1479\":1,\"1487\":3,\"1498\":2,\"1506\":1,\"1937\":1,\"1939\":1,\"2306\":1,\"2308\":1,\"2675\":1,\"2677\":1}}],[\"depth\",{\"1\":{\"1860\":1,\"1861\":1,\"1862\":1,\"2229\":1,\"2230\":1,\"2231\":1,\"2598\":1,\"2599\":1,\"2600\":1}}],[\"deprecated\",{\"1\":{\"242\":2,\"755\":2,\"1270\":2,\"1755\":1,\"1756\":1,\"1860\":1,\"1861\":1,\"2107\":1,\"2118\":1,\"2229\":1,\"2230\":1,\"2476\":1,\"2487\":1,\"2598\":1,\"2599\":1}}],[\"dependparam\",{\"1\":{\"383\":1,\"384\":1,\"387\":1,\"388\":1,\"389\":1,\"390\":1,\"391\":1,\"392\":1,\"394\":1,\"395\":1,\"898\":1,\"899\":1,\"902\":1,\"903\":1,\"904\":1,\"905\":1,\"906\":1,\"907\":1,\"909\":1,\"910\":1,\"1413\":1,\"1414\":1,\"1417\":1,\"1418\":1,\"1419\":1,\"1420\":1,\"1421\":1,\"1422\":1,\"1424\":1,\"1425\":1}}],[\"depend\",{\"1\":{\"297\":4,\"815\":4,\"1330\":4}}],[\"depends\",{\"1\":{\"200\":1,\"297\":2,\"424\":1,\"712\":1,\"815\":2,\"939\":1,\"1227\":1,\"1330\":2,\"1454\":1,\"2686\":1,\"2687\":2,\"2688\":5,\"2691\":2,\"2692\":2,\"2694\":2,\"2695\":2,\"2701\":1,\"2702\":2,\"2703\":5,\"2706\":2,\"2707\":2,\"2709\":2,\"2710\":2,\"2716\":1,\"2717\":2,\"2718\":5,\"2721\":2,\"2722\":2,\"2724\":2,\"2725\":2}}],[\"dependencies\",{\"0\":{\"1646\":1,\"1654\":1,\"2015\":1,\"2023\":1,\"2384\":1,\"2392\":1},\"1\":{\"2697\":2,\"2712\":2,\"2727\":2}}],[\"dependencycache\",{\"1\":{\"244\":1,\"245\":1,\"267\":1,\"268\":1,\"271\":1,\"272\":1,\"292\":1,\"335\":1,\"349\":1,\"396\":1,\"757\":1,\"758\":1,\"780\":1,\"781\":1,\"784\":1,\"785\":1,\"804\":1,\"847\":1,\"864\":1,\"911\":1,\"1272\":1,\"1273\":1,\"1295\":1,\"1296\":1,\"1299\":1,\"1300\":1,\"1319\":1,\"1362\":1,\"1379\":1,\"1426\":1}}],[\"dependency\",{\"1\":{\"200\":1,\"244\":1,\"245\":1,\"267\":1,\"268\":1,\"271\":1,\"272\":1,\"292\":1,\"297\":1,\"335\":1,\"349\":1,\"712\":1,\"757\":1,\"758\":1,\"780\":1,\"781\":1,\"784\":1,\"785\":1,\"804\":1,\"815\":1,\"847\":1,\"864\":1,\"1227\":1,\"1272\":1,\"1273\":1,\"1295\":1,\"1296\":1,\"1299\":1,\"1300\":1,\"1319\":1,\"1330\":1,\"1362\":1,\"1379\":1}}],[\"dependentcallable\",{\"1\":{\"383\":1,\"384\":1,\"387\":1,\"388\":1,\"389\":1,\"390\":1,\"391\":1,\"392\":1,\"393\":1,\"394\":1,\"395\":1,\"396\":1,\"898\":1,\"899\":1,\"902\":1,\"903\":1,\"904\":1,\"905\":1,\"906\":1,\"907\":1,\"908\":1,\"909\":1,\"910\":1,\"911\":1,\"1413\":1,\"1414\":1,\"1417\":1,\"1418\":1,\"1419\":1,\"1420\":1,\"1421\":1,\"1422\":1,\"1423\":1,\"1424\":1,\"1425\":1,\"1426\":1,\"1649\":1,\"1651\":1,\"2018\":1,\"2020\":1,\"2387\":1,\"2389\":1}}],[\"dependent\",{\"1\":{\"139\":1,\"140\":1,\"200\":1,\"237\":1,\"242\":3,\"302\":2,\"333\":1,\"334\":1,\"347\":1,\"348\":1,\"649\":1,\"650\":1,\"712\":1,\"750\":1,\"755\":3,\"814\":2,\"845\":1,\"846\":1,\"862\":1,\"863\":1,\"1164\":1,\"1165\":1,\"1227\":1,\"1265\":1,\"1270\":3,\"1329\":2,\"1360\":1,\"1361\":1,\"1377\":1,\"1378\":1,\"1651\":1,\"1863\":1,\"1864\":1,\"1865\":1,\"1866\":1,\"1867\":1,\"1868\":1,\"1869\":1,\"1870\":1,\"1871\":1,\"1872\":1,\"1873\":1,\"1874\":1,\"1875\":1,\"1876\":1,\"1877\":1,\"1878\":1,\"1879\":1,\"1880\":1,\"1881\":1,\"1882\":1,\"1883\":1,\"1884\":1,\"1885\":1,\"1886\":1,\"1887\":1,\"1888\":1,\"1889\":1,\"1890\":1,\"1891\":1,\"1892\":1,\"2020\":1,\"2232\":1,\"2233\":1,\"2234\":1,\"2235\":1,\"2236\":1,\"2237\":1,\"2238\":1,\"2239\":1,\"2240\":1,\"2241\":1,\"2242\":1,\"2243\":1,\"2244\":1,\"2245\":1,\"2246\":1,\"2247\":1,\"2248\":1,\"2249\":1,\"2250\":1,\"2251\":1,\"2252\":1,\"2253\":1,\"2254\":1,\"2255\":1,\"2256\":1,\"2257\":1,\"2258\":1,\"2259\":1,\"2260\":1,\"2261\":1,\"2389\":1,\"2601\":1,\"2602\":1,\"2603\":1,\"2604\":1,\"2605\":1,\"2606\":1,\"2607\":1,\"2608\":1,\"2609\":1,\"2610\":1,\"2611\":1,\"2612\":1,\"2613\":1,\"2614\":1,\"2615\":1,\"2616\":1,\"2617\":1,\"2618\":1,\"2619\":1,\"2620\":1,\"2621\":1,\"2622\":1,\"2623\":1,\"2624\":1,\"2625\":1,\"2626\":1,\"2627\":1,\"2628\":1,\"2629\":1,\"2630\":1}}],[\"defined\",{\"1\":{\"439\":1,\"954\":1,\"1469\":1}}],[\"def\",{\"1\":{\"120\":1,\"121\":1,\"124\":1,\"127\":1,\"128\":1,\"129\":1,\"130\":1,\"132\":1,\"133\":1,\"134\":1,\"135\":1,\"136\":1,\"137\":1,\"139\":1,\"140\":2,\"200\":2,\"203\":1,\"205\":1,\"206\":1,\"207\":1,\"297\":3,\"423\":1,\"424\":4,\"426\":1,\"427\":2,\"428\":1,\"431\":5,\"454\":2,\"470\":2,\"472\":5,\"473\":4,\"474\":2,\"475\":2,\"476\":1,\"477\":3,\"478\":12,\"479\":5,\"630\":1,\"631\":1,\"634\":1,\"637\":1,\"638\":1,\"639\":1,\"640\":1,\"642\":1,\"643\":1,\"644\":1,\"645\":1,\"646\":1,\"647\":1,\"649\":1,\"650\":2,\"712\":2,\"715\":1,\"717\":1,\"718\":1,\"719\":1,\"815\":3,\"938\":1,\"939\":4,\"941\":1,\"942\":2,\"943\":1,\"946\":5,\"969\":2,\"985\":2,\"987\":5,\"988\":4,\"989\":2,\"990\":2,\"991\":1,\"992\":3,\"993\":12,\"994\":5,\"1145\":1,\"1146\":1,\"1149\":1,\"1152\":1,\"1153\":1,\"1154\":1,\"1155\":1,\"1157\":1,\"1158\":1,\"1159\":1,\"1160\":1,\"1161\":1,\"1162\":1,\"1164\":1,\"1165\":2,\"1227\":2,\"1230\":1,\"1232\":1,\"1233\":1,\"1234\":1,\"1330\":3,\"1453\":1,\"1454\":4,\"1456\":1,\"1457\":2,\"1458\":1,\"1461\":5,\"1484\":2,\"1500\":2,\"1502\":5,\"1503\":4,\"1504\":2,\"1505\":2,\"1506\":1,\"1507\":3,\"1508\":12,\"1509\":5,\"1909\":1,\"1910\":1,\"1941\":2,\"1942\":1,\"2278\":1,\"2279\":1,\"2310\":2,\"2311\":1,\"2647\":1,\"2648\":1,\"2679\":2,\"2680\":1,\"2686\":2,\"2687\":7,\"2688\":4,\"2691\":2,\"2692\":2,\"2694\":2,\"2695\":2,\"2696\":12,\"2701\":2,\"2702\":7,\"2703\":4,\"2706\":2,\"2707\":2,\"2709\":2,\"2710\":2,\"2711\":12,\"2716\":2,\"2717\":7,\"2718\":4,\"2721\":2,\"2722\":2,\"2724\":2,\"2725\":2,\"2726\":12}}],[\"default=0\",{\"1\":{\"1910\":1,\"2279\":1,\"2648\":1}}],[\"default=optionresult\",{\"1\":{\"1900\":1,\"2269\":1,\"2638\":1}}],[\"default=false\",{\"1\":{\"1900\":1,\"2269\":1,\"2638\":1}}],[\"default1\",{\"1\":{\"1895\":1,\"2264\":1,\"2633\":1}}],[\"defaultparam\",{\"1\":{\"383\":1,\"384\":1,\"387\":1,\"388\":1,\"389\":1,\"390\":1,\"391\":1,\"392\":1,\"394\":1,\"395\":1,\"898\":1,\"899\":1,\"902\":1,\"903\":1,\"904\":1,\"905\":1,\"906\":1,\"907\":1,\"909\":1,\"910\":1,\"1413\":1,\"1414\":1,\"1417\":1,\"1418\":1,\"1419\":1,\"1420\":1,\"1421\":1,\"1422\":1,\"1424\":1,\"1425\":1}}],[\"defaults\",{\"1\":{\"158\":1,\"668\":1,\"1183\":1}}],[\"default\",{\"0\":{\"1899\":1,\"2268\":1,\"2637\":1},\"1\":{\"92\":1,\"145\":1,\"146\":1,\"153\":1,\"242\":3,\"259\":3,\"261\":3,\"262\":3,\"265\":2,\"278\":2,\"283\":1,\"326\":1,\"327\":1,\"413\":2,\"420\":2,\"438\":1,\"449\":3,\"602\":1,\"655\":1,\"656\":1,\"663\":1,\"755\":3,\"772\":3,\"774\":3,\"775\":3,\"778\":2,\"790\":2,\"795\":1,\"839\":1,\"840\":1,\"928\":2,\"935\":2,\"953\":1,\"964\":3,\"1117\":1,\"1170\":1,\"1171\":1,\"1178\":1,\"1270\":3,\"1287\":3,\"1289\":3,\"1290\":3,\"1293\":2,\"1305\":2,\"1310\":1,\"1354\":1,\"1355\":1,\"1443\":2,\"1450\":2,\"1468\":1,\"1479\":3,\"1632\":1,\"1730\":1,\"1895\":4,\"1898\":1,\"1899\":3,\"1900\":1,\"1906\":3,\"2001\":1,\"2090\":1,\"2264\":4,\"2267\":1,\"2268\":3,\"2269\":1,\"2275\":3,\"2370\":1,\"2459\":1,\"2633\":4,\"2636\":1,\"2637\":3,\"2638\":1,\"2644\":3}}],[\"事件的响应\",{\"1\":{\"505\":1,\"1020\":1,\"1535\":1}}],[\"事件和会话状态\",{\"1\":{\"429\":1,\"944\":1,\"1459\":1}}],[\"事件均是\",{\"1\":{\"423\":1,\"938\":1,\"1453\":1}}],[\"事件信息通常不仅仅包含消息这一个内容\",{\"1\":{\"422\":1,\"937\":1,\"1452\":1}}],[\"事件参数\",{\"1\":{\"326\":1,\"327\":1,\"839\":1,\"840\":1,\"1354\":1,\"1355\":1}}],[\"事件后处理函数\",{\"1\":{\"388\":1,\"903\":1,\"1418\":1}}],[\"事件后处理\",{\"0\":{\"133\":1,\"643\":1,\"1158\":1},\"1\":{\"289\":1,\"801\":1,\"1316\":1}}],[\"事件预处理函数\",{\"1\":{\"387\":1,\"902\":1,\"1417\":1}}],[\"事件预处理\",{\"0\":{\"132\":1,\"642\":1,\"1157\":1},\"1\":{\"288\":1,\"800\":1,\"1315\":1}}],[\"事件处理状态\",{\"1\":{\"382\":1,\"897\":1,\"1412\":1}}],[\"事件处理状态注入参数\",{\"1\":{\"301\":1,\"819\":1,\"1334\":1}}],[\"事件处理过程中发生的异常基类\",{\"1\":{\"198\":1,\"710\":1,\"1225\":1}}],[\"事件处理过程中使用到的常量\",{\"1\":{\"176\":1,\"686\":1,\"1201\":1}}],[\"事件处理钩子函数\",{\"0\":{\"131\":1,\"641\":1,\"1156\":1}}],[\"事件处理函数列表\",{\"1\":{\"93\":1,\"242\":1,\"603\":1,\"755\":1,\"1118\":1,\"1270\":1,\"1863\":1,\"1864\":1,\"1865\":1,\"1866\":1,\"1867\":1,\"1868\":1,\"1869\":1,\"1870\":1,\"1871\":1,\"1872\":1,\"1873\":1,\"1874\":1,\"1875\":1,\"1877\":1,\"1878\":1,\"1880\":1,\"1881\":1,\"1882\":1,\"1883\":1,\"1884\":1,\"1885\":1,\"1886\":1,\"1887\":1,\"1888\":1,\"1889\":1,\"1890\":1,\"1891\":1,\"1892\":1,\"2232\":1,\"2233\":1,\"2234\":1,\"2235\":1,\"2236\":1,\"2237\":1,\"2238\":1,\"2239\":1,\"2240\":1,\"2241\":1,\"2242\":1,\"2243\":1,\"2244\":1,\"2246\":1,\"2247\":1,\"2249\":1,\"2250\":1,\"2251\":1,\"2252\":1,\"2253\":1,\"2254\":1,\"2255\":1,\"2256\":1,\"2257\":1,\"2258\":1,\"2259\":1,\"2260\":1,\"2261\":1,\"2601\":1,\"2602\":1,\"2603\":1,\"2604\":1,\"2605\":1,\"2606\":1,\"2607\":1,\"2608\":1,\"2609\":1,\"2610\":1,\"2611\":1,\"2612\":1,\"2613\":1,\"2615\":1,\"2616\":1,\"2618\":1,\"2619\":1,\"2620\":1,\"2621\":1,\"2622\":1,\"2623\":1,\"2624\":1,\"2625\":1,\"2626\":1,\"2627\":1,\"2628\":1,\"2629\":1,\"2630\":1}}],[\"事件\",{\"0\":{\"475\":1,\"990\":1,\"1505\":1},\"1\":{\"125\":1,\"132\":1,\"133\":1,\"134\":1,\"135\":1,\"259\":1,\"260\":1,\"261\":1,\"478\":1,\"525\":1,\"635\":1,\"642\":1,\"643\":1,\"644\":1,\"645\":1,\"772\":1,\"773\":1,\"774\":1,\"993\":1,\"1040\":1,\"1150\":1,\"1157\":1,\"1158\":1,\"1159\":1,\"1160\":1,\"1287\":1,\"1288\":1,\"1289\":1,\"1508\":1,\"1555\":1}}],[\"事件传递来修改或扩展操作系统\",{\"1\":{\"125\":1,\"635\":1,\"1150\":1}}],[\"事件将不会再传播给其他下一优先级的响应器\",{\"1\":{\"90\":1,\"600\":1,\"1115\":1}}],[\"事件响应权限\",{\"1\":{\"1863\":1,\"1864\":1,\"1865\":1,\"1866\":1,\"1867\":1,\"1868\":1,\"1869\":1,\"1870\":1,\"1871\":1,\"1872\":1,\"1873\":1,\"1874\":1,\"1875\":1,\"1877\":1,\"1878\":1,\"1880\":1,\"1881\":1,\"1882\":1,\"1883\":1,\"1884\":1,\"1885\":1,\"1886\":1,\"1887\":1,\"1888\":1,\"1889\":1,\"1890\":1,\"1891\":1,\"1892\":1,\"2232\":1,\"2233\":1,\"2234\":1,\"2235\":1,\"2236\":1,\"2237\":1,\"2238\":1,\"2239\":1,\"2240\":1,\"2241\":1,\"2242\":1,\"2243\":1,\"2244\":1,\"2246\":1,\"2247\":1,\"2249\":1,\"2250\":1,\"2251\":1,\"2252\":1,\"2253\":1,\"2254\":1,\"2255\":1,\"2256\":1,\"2257\":1,\"2258\":1,\"2259\":1,\"2260\":1,\"2261\":1,\"2601\":1,\"2602\":1,\"2603\":1,\"2604\":1,\"2605\":1,\"2606\":1,\"2607\":1,\"2608\":1,\"2609\":1,\"2610\":1,\"2611\":1,\"2612\":1,\"2613\":1,\"2615\":1,\"2616\":1,\"2618\":1,\"2619\":1,\"2620\":1,\"2621\":1,\"2622\":1,\"2623\":1,\"2624\":1,\"2625\":1,\"2626\":1,\"2627\":1,\"2628\":1,\"2629\":1,\"2630\":1}}],[\"事件响应规则\",{\"0\":{\"88\":1,\"598\":1,\"1113\":1},\"1\":{\"88\":1,\"598\":1,\"1113\":1,\"1863\":1,\"1864\":1,\"1865\":1,\"1866\":1,\"1867\":1,\"1868\":1,\"1869\":1,\"1870\":1,\"1871\":1,\"1872\":1,\"1873\":1,\"1874\":1,\"1875\":1,\"1877\":1,\"1878\":1,\"1880\":1,\"1881\":1,\"1882\":1,\"1883\":1,\"1884\":1,\"1885\":1,\"1886\":1,\"1887\":1,\"1888\":1,\"1889\":1,\"1890\":1,\"1891\":1,\"1892\":1,\"2232\":1,\"2233\":1,\"2234\":1,\"2235\":1,\"2236\":1,\"2237\":1,\"2238\":1,\"2239\":1,\"2240\":1,\"2241\":1,\"2242\":1,\"2243\":1,\"2244\":1,\"2246\":1,\"2247\":1,\"2249\":1,\"2250\":1,\"2251\":1,\"2252\":1,\"2253\":1,\"2254\":1,\"2255\":1,\"2256\":1,\"2257\":1,\"2258\":1,\"2259\":1,\"2260\":1,\"2261\":1,\"2601\":1,\"2602\":1,\"2603\":1,\"2604\":1,\"2605\":1,\"2606\":1,\"2607\":1,\"2608\":1,\"2609\":1,\"2610\":1,\"2611\":1,\"2612\":1,\"2613\":1,\"2615\":1,\"2616\":1,\"2618\":1,\"2619\":1,\"2620\":1,\"2621\":1,\"2622\":1,\"2623\":1,\"2624\":1,\"2625\":1,\"2626\":1,\"2627\":1,\"2628\":1,\"2629\":1,\"2630\":1}}],[\"事件响应器辅助函数\",{\"0\":{\"527\":1,\"1042\":1,\"1557\":1},\"1\":{\"527\":1,\"1042\":1,\"1557\":1}}],[\"事件响应器可以通过一系列特定的规则筛选出具有某种特征的事件\",{\"1\":{\"526\":1,\"1041\":1,\"1556\":1}}],[\"事件响应器运行后后处理函数\",{\"1\":{\"390\":1,\"905\":1,\"1420\":1}}],[\"事件响应器运行前预处理函数\",{\"1\":{\"389\":1,\"904\":1,\"1419\":1}}],[\"事件响应器实例注入参数\",{\"1\":{\"305\":1,\"818\":1,\"1333\":1}}],[\"事件响应器管理器\",{\"1\":{\"274\":1,\"786\":1,\"1301\":1}}],[\"事件响应器最终有效时间点\",{\"1\":{\"242\":1,\"755\":1,\"1270\":1,\"1863\":1,\"1864\":1,\"1865\":1,\"1866\":1,\"1867\":1,\"1868\":1,\"1869\":1,\"1870\":1,\"1871\":1,\"1872\":1,\"1873\":1,\"1874\":1,\"1875\":1,\"1877\":1,\"1878\":1,\"1880\":1,\"1881\":1,\"1882\":1,\"1883\":1,\"1884\":1,\"1885\":1,\"1886\":1,\"1887\":1,\"1888\":1,\"1889\":1,\"1890\":1,\"1891\":1,\"1892\":1,\"2232\":1,\"2233\":1,\"2234\":1,\"2235\":1,\"2236\":1,\"2237\":1,\"2238\":1,\"2239\":1,\"2240\":1,\"2241\":1,\"2242\":1,\"2243\":1,\"2244\":1,\"2246\":1,\"2247\":1,\"2249\":1,\"2250\":1,\"2251\":1,\"2252\":1,\"2253\":1,\"2254\":1,\"2255\":1,\"2256\":1,\"2257\":1,\"2258\":1,\"2259\":1,\"2260\":1,\"2261\":1,\"2601\":1,\"2602\":1,\"2603\":1,\"2604\":1,\"2605\":1,\"2606\":1,\"2607\":1,\"2608\":1,\"2609\":1,\"2610\":1,\"2611\":1,\"2612\":1,\"2613\":1,\"2615\":1,\"2616\":1,\"2618\":1,\"2619\":1,\"2620\":1,\"2621\":1,\"2622\":1,\"2623\":1,\"2624\":1,\"2625\":1,\"2626\":1,\"2627\":1,\"2628\":1,\"2629\":1,\"2630\":1}}],[\"事件响应器源代码上下文信息\",{\"1\":{\"242\":1,\"755\":1,\"1270\":1}}],[\"事件响应器所在模块\",{\"1\":{\"242\":1,\"755\":1,\"1270\":1}}],[\"事件响应器所在插件\",{\"1\":{\"242\":1,\"755\":1,\"1270\":1}}],[\"事件响应器过期时间点\",{\"1\":{\"241\":1,\"754\":1,\"1269\":1}}],[\"事件响应器优先级\",{\"1\":{\"238\":1,\"751\":1,\"1266\":1,\"1863\":1,\"1864\":1,\"1865\":1,\"1866\":1,\"1867\":1,\"1868\":1,\"1869\":1,\"1870\":1,\"1871\":1,\"1872\":1,\"1873\":1,\"1874\":1,\"1875\":1,\"1877\":1,\"1878\":1,\"1880\":1,\"1881\":1,\"1882\":1,\"1883\":1,\"1884\":1,\"1885\":1,\"1886\":1,\"1887\":1,\"1888\":1,\"1889\":1,\"1890\":1,\"1891\":1,\"1892\":1,\"2232\":1,\"2233\":1,\"2234\":1,\"2235\":1,\"2236\":1,\"2237\":1,\"2238\":1,\"2239\":1,\"2240\":1,\"2241\":1,\"2242\":1,\"2243\":1,\"2244\":1,\"2246\":1,\"2247\":1,\"2249\":1,\"2250\":1,\"2251\":1,\"2252\":1,\"2253\":1,\"2254\":1,\"2255\":1,\"2256\":1,\"2257\":1,\"2258\":1,\"2259\":1,\"2260\":1,\"2261\":1,\"2601\":1,\"2602\":1,\"2603\":1,\"2604\":1,\"2605\":1,\"2606\":1,\"2607\":1,\"2608\":1,\"2609\":1,\"2610\":1,\"2611\":1,\"2612\":1,\"2613\":1,\"2615\":1,\"2616\":1,\"2618\":1,\"2619\":1,\"2620\":1,\"2621\":1,\"2622\":1,\"2623\":1,\"2624\":1,\"2625\":1,\"2626\":1,\"2627\":1,\"2628\":1,\"2629\":1,\"2630\":1}}],[\"事件响应器拥有的事件处理函数列表\",{\"1\":{\"237\":1,\"750\":1,\"1265\":1}}],[\"事件响应器触发权限\",{\"1\":{\"236\":1,\"749\":1,\"1264\":1}}],[\"事件响应器匹配规则\",{\"1\":{\"235\":1,\"748\":1,\"1263\":1}}],[\"事件响应器类\",{\"1\":{\"233\":1,\"746\":1,\"1261\":1}}],[\"事件响应器类型的检查在所有其他检查\",{\"1\":{\"86\":1,\"596\":1,\"1111\":1}}],[\"事件响应器类型\",{\"0\":{\"86\":1,\"596\":1,\"1111\":1},\"1\":{\"86\":1,\"234\":1,\"242\":1,\"596\":1,\"747\":1,\"755\":1,\"1111\":1,\"1262\":1,\"1270\":1,\"1863\":1,\"1880\":1,\"2232\":1,\"2249\":1,\"2601\":1,\"2618\":1}}],[\"事件响应器\",{\"0\":{\"526\":1,\"1041\":1,\"1556\":1},\"1\":{\"134\":1,\"135\":1,\"292\":1,\"526\":1,\"644\":1,\"645\":1,\"804\":1,\"1041\":1,\"1159\":1,\"1160\":1,\"1319\":1,\"1556\":1,\"1859\":1,\"2228\":1,\"2597\":1}}],[\"事件响应器的默认状态\",{\"1\":{\"92\":1,\"602\":1,\"1117\":1}}],[\"事件响应器的有效期分为\",{\"1\":{\"91\":1,\"601\":1,\"1116\":1}}],[\"事件响应器的响应规则会在事件响应器的权限检查通过后进行匹配\",{\"1\":{\"88\":1,\"598\":1,\"1113\":1}}],[\"事件响应器的存储提供者\",{\"1\":{\"82\":1,\"592\":1,\"1107\":1}}],[\"事件响应器的存储类似于会话存储\",{\"1\":{\"81\":1,\"591\":1,\"1106\":1}}],[\"事件响应器组成\",{\"0\":{\"85\":1,\"595\":1,\"1110\":1}}],[\"事件响应器允许继承\",{\"1\":{\"84\":1,\"594\":1,\"1109\":1}}],[\"事件响应器进阶\",{\"0\":{\"84\":1,\"594\":1,\"1109\":1}}],[\"事件响应器将会转为临时响应器\",{\"1\":{\"81\":1,\"591\":1,\"1106\":1}}],[\"事件响应器是否为临时\",{\"1\":{\"240\":1,\"753\":1,\"1268\":1}}],[\"事件响应器是否阻止事件传播\",{\"1\":{\"239\":1,\"752\":1,\"1267\":1}}],[\"事件响应器是\",{\"1\":{\"81\":1,\"591\":1,\"1106\":1}}],[\"事件响应器存储器基类\",{\"1\":{\"285\":1,\"797\":1,\"1312\":1}}],[\"事件响应器存储器类\",{\"1\":{\"284\":1,\"796\":1,\"1311\":1}}],[\"事件响应器存储\",{\"0\":{\"81\":1,\"591\":1,\"1106\":1}}],[\"事件触发权限会在事件响应器的类型检查通过后进行检查\",{\"1\":{\"87\":1,\"597\":1,\"1112\":1}}],[\"事件触发权限\",{\"0\":{\"87\":1,\"597\":1,\"1112\":1},\"1\":{\"87\":1,\"93\":1,\"597\":1,\"603\":1,\"1112\":1,\"1118\":1}}],[\"事件是否与机器人有关\",{\"0\":{\"50\":1,\"560\":1,\"1075\":1}}],[\"事件纯文本消息\",{\"0\":{\"49\":1,\"559\":1,\"1074\":1}}],[\"事件消息\",{\"0\":{\"48\":1,\"558\":1,\"1073\":1}}],[\"事件会话\",{\"0\":{\"47\":1,\"557\":1,\"1072\":1},\"1\":{\"47\":1,\"557\":1,\"1072\":1}}],[\"事件主体\",{\"0\":{\"46\":1,\"556\":1,\"1071\":1},\"1\":{\"46\":1,\"556\":1,\"1071\":1}}],[\"事件日志字符串由事件名称和事件描述组成\",{\"1\":{\"45\":1,\"555\":1,\"1070\":1}}],[\"事件日志字符串\",{\"0\":{\"45\":1,\"555\":1,\"1070\":1}}],[\"事件描述由适配器定义\",{\"1\":{\"44\":1,\"554\":1,\"1069\":1}}],[\"事件描述\",{\"0\":{\"44\":1,\"554\":1,\"1069\":1}}],[\"事件名称由适配器定义\",{\"1\":{\"43\":1,\"553\":1,\"1068\":1}}],[\"事件名称\",{\"0\":{\"43\":1,\"553\":1,\"1068\":1}}],[\"事件类型与重载\",{\"0\":{\"422\":1,\"937\":1,\"1452\":1}}],[\"事件类型通常为\",{\"1\":{\"42\":1,\"552\":1,\"1067\":1}}],[\"事件类型\",{\"0\":{\"42\":1,\"423\":1,\"552\":1,\"938\":1,\"1067\":1,\"1453\":1},\"1\":{\"371\":1,\"886\":1,\"1401\":1,\"1875\":1,\"1892\":1,\"2244\":1,\"2261\":1,\"2613\":1,\"2630\":1}}],[\"基础部分帮助新用户快速上手开发\",{\"1\":{\"497\":1,\"1012\":1,\"1527\":1}}],[\"基本用法\",{\"1\":{\"484\":1,\"485\":1,\"487\":1,\"488\":1,\"489\":1,\"491\":1,\"999\":1,\"1000\":1,\"1002\":1,\"1003\":1,\"1004\":1,\"1006\":1,\"1514\":1,\"1515\":1,\"1517\":1,\"1518\":1,\"1519\":1,\"1521\":1}}],[\"基本辅助函数或\",{\"1\":{\"529\":1,\"1044\":1,\"1559\":1}}],[\"基本辅助函数\",{\"0\":{\"93\":1,\"603\":1,\"1118\":1}}],[\"基类作为模板构建\",{\"1\":{\"545\":1,\"1060\":1,\"1575\":1}}],[\"基类对一些必要的属性进行了抽象\",{\"1\":{\"423\":1,\"938\":1,\"1453\":1}}],[\"基类的子类型\",{\"1\":{\"423\":1,\"938\":1,\"1453\":1}}],[\"基类能提供如下信息\",{\"1\":{\"41\":1,\"551\":1,\"1066\":1}}],[\"基类\",{\"1\":{\"41\":1,\"526\":1,\"527\":1,\"551\":1,\"1041\":1,\"1042\":1,\"1066\":1,\"1556\":1,\"1557\":1,\"1577\":1,\"1586\":1,\"1958\":1,\"1967\":1,\"2327\":1,\"2336\":1}}],[\"基于装饰器的方式\",{\"1\":{\"454\":1,\"969\":1,\"1484\":1}}],[\"基于\",{\"1\":{\"2\":1,\"14\":1,\"26\":1,\"108\":1,\"454\":1,\"503\":2,\"618\":1,\"969\":1,\"1018\":2,\"1133\":1,\"1484\":1,\"1533\":2}}],[\"通用化\",{\"1\":{\"491\":1,\"1006\":1,\"1521\":1}}],[\"通用消息模型\",{\"1\":{\"108\":1,\"618\":1,\"1133\":1}}],[\"通信模式\",{\"1\":{\"496\":1,\"1011\":1,\"1526\":1}}],[\"通信\",{\"1\":{\"492\":2,\"493\":2,\"525\":1,\"1007\":2,\"1008\":2,\"1040\":1,\"1522\":2,\"1523\":2,\"1555\":1,\"1942\":1,\"2311\":1,\"2680\":1}}],[\"通信的方式\",{\"1\":{\"476\":1,\"991\":1,\"1506\":1}}],[\"通信可以通过\",{\"1\":{\"476\":1,\"991\":1,\"1506\":1}}],[\"通知\",{\"1\":{\"86\":1,\"596\":1,\"1111\":1}}],[\"通常不需要修改\",{\"1\":{\"1594\":1,\"1975\":1,\"2344\":1}}],[\"通常不能得到消息的纯文本\",{\"1\":{\"539\":1,\"1054\":1,\"1569\":1}}],[\"通常是用户\",{\"1\":{\"1591\":1,\"1592\":1,\"1972\":1,\"1973\":1,\"2341\":1,\"2342\":1}}],[\"通常你不需要修改这个方法\",{\"1\":{\"1590\":1,\"1971\":1,\"2340\":1}}],[\"通常用于加载一系列本地编写的项目插件\",{\"1\":{\"518\":1,\"1033\":1,\"1548\":1}}],[\"通常用于加载第三方插件或者项目插件\",{\"1\":{\"517\":1,\"1032\":1,\"1547\":1}}],[\"通常用于日志记录\",{\"1\":{\"43\":1,\"44\":1,\"553\":1,\"554\":1,\"1068\":1,\"1069\":1}}],[\"通常在日志中展示\",{\"1\":{\"479\":1,\"994\":1,\"1509\":1}}],[\"通常在事件处理函数的依赖中使用\",{\"1\":{\"258\":1,\"771\":1,\"1286\":1}}],[\"通常需要包含鉴权信息\",{\"1\":{\"476\":1,\"991\":1,\"1506\":1}}],[\"通常适配器需要一些配置项\",{\"1\":{\"469\":1,\"984\":1,\"1499\":1}}],[\"通常由用户\",{\"1\":{\"140\":1,\"650\":1,\"1165\":1}}],[\"通常\",{\"1\":{\"110\":1,\"620\":1,\"1135\":1,\"1596\":1,\"1946\":1,\"2315\":1}}],[\"通常情况下\",{\"1\":{\"86\":1,\"123\":1,\"139\":1,\"527\":1,\"534\":1,\"596\":1,\"633\":1,\"649\":1,\"1042\":1,\"1049\":1,\"1111\":1,\"1148\":1,\"1164\":1,\"1557\":1,\"1564\":1}}],[\"通常将事件目标主体为机器人\",{\"1\":{\"50\":1,\"560\":1,\"1075\":1}}],[\"通常为事件具体内容\",{\"1\":{\"1589\":1,\"1970\":1,\"2339\":1}}],[\"通常为事件消息的纯文本内容\",{\"1\":{\"49\":1,\"559\":1,\"1074\":1}}],[\"通常为负责处理事件并进行一系列的操作\",{\"1\":{\"525\":1,\"1040\":1,\"1555\":1}}],[\"通常为\",{\"1\":{\"517\":1,\"518\":1,\"525\":1,\"1032\":1,\"1033\":1,\"1040\":1,\"1547\":1,\"1548\":1,\"1555\":1}}],[\"通常为请求事件\",{\"1\":{\"478\":1,\"993\":1,\"1508\":1}}],[\"通常为通知事件\",{\"1\":{\"478\":1,\"993\":1,\"1508\":1}}],[\"通常为元事件\",{\"1\":{\"478\":1,\"993\":1,\"1508\":1}}],[\"通常为机器人用户\",{\"1\":{\"46\":1,\"47\":1,\"556\":1,\"557\":1,\"1071\":1,\"1072\":1}}],[\"通常为机器人的帐号\",{\"1\":{\"40\":1,\"550\":1,\"1065\":1}}],[\"通过发送消息与机器人进行交互\",{\"1\":{\"1942\":1,\"2311\":1,\"2680\":1}}],[\"通过parse方法返回解析结果\",{\"1\":{\"1893\":1,\"2262\":1,\"2631\":1}}],[\"通过模块名获取已经导入的某个插件\",{\"1\":{\"1811\":1,\"2180\":1,\"2549\":1}}],[\"通过读取\",{\"1\":{\"520\":1,\"521\":1,\"1035\":1,\"1036\":1,\"1550\":1,\"1551\":1}}],[\"通过点分割模块名称或使用\",{\"1\":{\"517\":1,\"1032\":1,\"1547\":1}}],[\"通过以下命令创建一个名为\",{\"1\":{\"515\":1,\"1030\":1,\"1545\":1}}],[\"通过脚手架扩展使用低代码框架\",{\"1\":{\"505\":1,\"1020\":1,\"1535\":1}}],[\"通过减少常见的编码错误和降低入门门槛\",{\"1\":{\"505\":1,\"1020\":1,\"1535\":1}}],[\"通过工具自动生成\",{\"1\":{\"485\":1,\"1000\":1,\"1515\":1}}],[\"通过某种方式获取到\",{\"1\":{\"476\":1,\"991\":1,\"1506\":1}}],[\"通过配置或者平台\",{\"1\":{\"474\":1,\"989\":1,\"1504\":1}}],[\"通过响应规则来控制事件的处理\",{\"1\":{\"425\":1,\"940\":1,\"1455\":1}}],[\"通过兼容层添加路由\",{\"0\":{\"119\":1,\"629\":1,\"1144\":1}}],[\"通过这种途径\",{\"1\":{\"1940\":1,\"2309\":1,\"2678\":1}}],[\"通过这种方式\",{\"1\":{\"112\":1,\"140\":1,\"622\":1,\"650\":1,\"1137\":1,\"1165\":1}}],[\"通过这些属性以及插件元数据\",{\"1\":{\"111\":1,\"621\":1,\"1136\":1}}],[\"通过其他方式发送给机器人用户等\",{\"1\":{\"110\":1,\"620\":1,\"1135\":1}}],[\"通过它可以实现机器人的模块化以及功能扩展\",{\"1\":{\"5\":1,\"17\":1,\"29\":1}}],[\"通过\",{\"1\":{\"3\":1,\"15\":1,\"27\":1,\"117\":1,\"118\":1,\"361\":2,\"365\":3,\"367\":2,\"459\":3,\"520\":1,\"521\":1,\"627\":1,\"628\":1,\"876\":2,\"880\":3,\"882\":2,\"974\":3,\"1035\":1,\"1036\":1,\"1142\":1,\"1143\":1,\"1391\":2,\"1395\":3,\"1397\":2,\"1489\":3,\"1550\":1,\"1551\":1,\"1873\":1,\"1890\":1,\"1894\":1,\"1909\":1,\"2242\":1,\"2259\":1,\"2263\":1,\"2278\":1,\"2611\":1,\"2628\":1,\"2632\":1,\"2647\":1,\"2687\":1,\"2702\":1,\"2717\":1}}],[\"属性来自定义表名\",{\"1\":{\"2685\":1,\"2700\":1,\"2715\":1}}],[\"属性进行调用\",{\"1\":{\"1582\":1,\"1963\":1,\"2332\":1}}],[\"属性\",{\"1\":{\"40\":1,\"222\":1,\"423\":1,\"550\":1,\"734\":1,\"938\":1,\"1065\":1,\"1249\":1,\"1453\":1}}],[\"属性获取\",{\"1\":{\"40\":1,\"550\":1,\"1065\":1}}],[\"将数据库模式同步到数据库中\",{\"1\":{\"2686\":1,\"2701\":1,\"2716\":1}}],[\"将命名空间挂载到\",{\"1\":{\"1905\":1,\"2274\":1,\"2643\":1}}],[\"将多个值存为列表\",{\"1\":{\"1901\":1,\"2270\":1,\"2639\":1}}],[\"将多个消息连接并将自身作为分割\",{\"1\":{\"1621\":1,\"1990\":1,\"2359\":1}}],[\"将一个驱动器和多个混入类合并\",{\"1\":{\"1757\":1,\"2133\":1,\"2502\":1}}],[\"将后端框架封装\",{\"1\":{\"1737\":1,\"2083\":1,\"2452\":1}}],[\"将消息处理为平台所需的格式后\",{\"1\":{\"477\":1,\"992\":1,\"1507\":1}}],[\"将\",{\"1\":{\"228\":1,\"740\":1,\"1255\":1}}],[\"将从\",{\"1\":{\"164\":1,\"674\":1,\"1189\":1}}],[\"将只会响应\",{\"1\":{\"139\":1,\"649\":1,\"1164\":1}}],[\"将会自动处理加载\",{\"1\":{\"516\":1,\"1031\":1,\"1546\":1}}],[\"将会存储到\",{\"1\":{\"224\":1,\"736\":1,\"1251\":1}}],[\"将会从\",{\"1\":{\"163\":1,\"224\":1,\"673\":1,\"736\":1,\"1188\":1,\"1251\":1}}],[\"将会复制一个新的临时事件响应器\",{\"1\":{\"138\":1,\"648\":1,\"1163\":1}}],[\"将会返回所有\",{\"1\":{\"40\":1,\"550\":1,\"1065\":1}}],[\"将默认匹配\",{\"1\":{\"105\":1,\"615\":1,\"1130\":1}}],[\"将不会解析参数\",{\"1\":{\"100\":1,\"610\":1,\"1125\":1}}],[\"将事件响应器存储于其他地方\",{\"1\":{\"81\":1,\"591\":1,\"1106\":1}}],[\"将负责做任何需要的事情\",{\"1\":{\"7\":1,\"19\":1,\"31\":1}}],[\"参见\",{\"1\":{\"1926\":1,\"1936\":1,\"2295\":1,\"2305\":1,\"2664\":1,\"2674\":1}}],[\"参与\",{\"1\":{\"494\":1,\"498\":1,\"502\":1,\"1009\":1,\"1013\":1,\"1017\":1,\"1524\":1,\"1528\":1,\"1532\":1}}],[\"参与开发\",{\"0\":{\"462\":1,\"977\":1,\"1492\":1}}],[\"参与讨论\",{\"0\":{\"459\":1,\"974\":1,\"1489\":1}}],[\"参数为一个\",{\"1\":{\"2695\":1,\"2710\":1,\"2725\":1}}],[\"参数是迁移脚本的分支\",{\"1\":{\"2686\":1,\"2701\":1,\"2716\":1}}],[\"参数是迁移脚本的描述\",{\"1\":{\"2686\":1,\"2701\":1,\"2716\":1}}],[\"参数字典或\",{\"1\":{\"1937\":1,\"2306\":1,\"2675\":1}}],[\"参数单元的缺失提示生成函数\",{\"1\":{\"1899\":1,\"2268\":1,\"2637\":1}}],[\"参数单元的错误提示生成函数\",{\"1\":{\"1899\":1,\"2268\":1,\"2637\":1}}],[\"参数单元的补全说明生成函数\",{\"1\":{\"1899\":1,\"2268\":1,\"2637\":1}}],[\"参数单元的默认值\",{\"1\":{\"1899\":1,\"2268\":1,\"2637\":1}}],[\"参数单元默认值的别名\",{\"1\":{\"1899\":1,\"2268\":1,\"2637\":1}}],[\"参数需要匹配一个\",{\"1\":{\"1897\":1,\"2266\":1,\"2635\":1}}],[\"参数除外\",{\"1\":{\"1896\":1,\"2265\":1,\"2634\":1}}],[\"参数之后\",{\"1\":{\"1895\":1,\"2264\":1,\"2633\":1}}],[\"参数不依照构造顺序传入\",{\"1\":{\"1895\":1,\"2264\":1,\"2633\":1}}],[\"参数声明\",{\"0\":{\"1895\":1,\"2264\":1,\"2633\":1}}],[\"参数package和二个\",{\"1\":{\"1893\":1,\"2262\":1,\"2631\":1}}],[\"参数时\",{\"1\":{\"1873\":1,\"1890\":1,\"2242\":1,\"2259\":1,\"2611\":1,\"2628\":1}}],[\"参数类型注解来实现使用不同平台的接口\",{\"1\":{\"424\":2,\"939\":2,\"1454\":2}}],[\"参数分别为\",{\"1\":{\"386\":1,\"901\":1,\"1416\":1}}],[\"参数消息纯文本\",{\"1\":{\"303\":1,\"809\":1,\"1324\":1}}],[\"参数消息文本\",{\"1\":{\"296\":1,\"811\":1,\"1326\":1}}],[\"参数消息\",{\"1\":{\"295\":1,\"807\":1,\"1322\":1}}],[\"参数名称\",{\"1\":{\"1911\":1,\"2280\":1,\"2649\":1}}],[\"参数名\",{\"1\":{\"251\":1,\"256\":1,\"764\":1,\"769\":1,\"1279\":1,\"1284\":1}}],[\"参数解析后的结果可以通过\",{\"1\":{\"100\":1,\"610\":1,\"1125\":1}}],[\"参数解析采用\",{\"1\":{\"100\":1,\"610\":1,\"1125\":1}}],[\"参数可以是任意\",{\"1\":{\"2695\":1,\"2710\":1,\"2725\":1}}],[\"参数可以是\",{\"1\":{\"99\":1,\"609\":1,\"1124\":1}}],[\"参数外\",{\"1\":{\"93\":1,\"603\":1,\"1118\":1}}],[\"参数\",{\"1\":{\"40\":1,\"99\":1,\"100\":1,\"105\":1,\"146\":1,\"148\":1,\"152\":1,\"153\":1,\"154\":1,\"155\":1,\"156\":1,\"157\":1,\"158\":1,\"159\":1,\"160\":1,\"161\":1,\"163\":1,\"165\":1,\"196\":1,\"197\":1,\"198\":1,\"199\":1,\"200\":1,\"201\":1,\"202\":1,\"203\":1,\"204\":1,\"205\":1,\"206\":1,\"207\":1,\"208\":1,\"209\":1,\"210\":1,\"211\":1,\"212\":1,\"213\":1,\"214\":1,\"217\":1,\"218\":2,\"219\":1,\"220\":1,\"221\":1,\"222\":1,\"223\":1,\"224\":1,\"225\":1,\"228\":1,\"229\":1,\"230\":1,\"233\":1,\"242\":1,\"243\":1,\"244\":1,\"245\":1,\"246\":1,\"247\":1,\"248\":1,\"249\":1,\"250\":1,\"251\":1,\"252\":1,\"253\":1,\"254\":1,\"255\":1,\"256\":1,\"257\":1,\"258\":1,\"259\":2,\"260\":1,\"261\":2,\"262\":2,\"263\":1,\"264\":1,\"265\":2,\"266\":1,\"267\":1,\"268\":1,\"269\":1,\"270\":1,\"271\":1,\"272\":1,\"274\":1,\"275\":1,\"276\":1,\"277\":1,\"278\":2,\"279\":1,\"280\":1,\"281\":1,\"282\":1,\"283\":1,\"284\":1,\"285\":1,\"288\":1,\"289\":1,\"290\":1,\"291\":1,\"292\":1,\"293\":1,\"295\":1,\"296\":1,\"297\":1,\"298\":1,\"299\":1,\"300\":1,\"301\":1,\"302\":1,\"303\":1,\"304\":1,\"305\":1,\"306\":1,\"307\":1,\"308\":1,\"309\":1,\"310\":2,\"311\":1,\"312\":1,\"313\":1,\"314\":1,\"315\":1,\"316\":1,\"317\":1,\"318\":1,\"319\":3,\"320\":1,\"321\":1,\"322\":1,\"323\":1,\"324\":1,\"325\":1,\"326\":1,\"327\":1,\"329\":1,\"330\":1,\"331\":1,\"332\":1,\"333\":1,\"335\":1,\"336\":1,\"337\":1,\"338\":1,\"339\":1,\"344\":1,\"347\":1,\"349\":1,\"350\":1,\"351\":1,\"352\":1,\"353\":1,\"354\":1,\"355\":1,\"356\":1,\"357\":1,\"358\":1,\"359\":1,\"360\":1,\"361\":1,\"362\":1,\"363\":3,\"364\":1,\"365\":1,\"366\":1,\"367\":1,\"368\":1,\"369\":1,\"370\":1,\"371\":1,\"373\":1,\"374\":1,\"375\":1,\"376\":1,\"377\":1,\"378\":1,\"379\":1,\"380\":1,\"381\":1,\"398\":1,\"399\":1,\"400\":1,\"401\":1,\"402\":1,\"403\":1,\"404\":1,\"405\":1,\"406\":1,\"407\":1,\"408\":3,\"409\":1,\"410\":1,\"411\":1,\"412\":1,\"413\":1,\"414\":1,\"415\":1,\"416\":1,\"417\":1,\"425\":1,\"550\":1,\"609\":1,\"610\":1,\"615\":1,\"656\":1,\"658\":1,\"662\":1,\"663\":1,\"664\":1,\"665\":1,\"666\":1,\"667\":1,\"668\":1,\"669\":1,\"670\":1,\"671\":1,\"673\":1,\"675\":1,\"708\":1,\"709\":1,\"710\":1,\"711\":1,\"712\":1,\"713\":1,\"714\":1,\"715\":1,\"716\":1,\"717\":1,\"718\":1,\"719\":1,\"720\":1,\"721\":1,\"722\":1,\"723\":1,\"724\":1,\"725\":1,\"726\":1,\"729\":1,\"730\":2,\"731\":1,\"732\":1,\"733\":1,\"734\":1,\"735\":1,\"736\":1,\"737\":1,\"740\":1,\"741\":1,\"742\":1,\"746\":1,\"755\":1,\"756\":1,\"757\":1,\"758\":1,\"759\":1,\"760\":1,\"761\":1,\"762\":1,\"763\":1,\"764\":1,\"765\":1,\"766\":1,\"767\":1,\"768\":1,\"769\":1,\"770\":1,\"771\":1,\"772\":2,\"773\":1,\"774\":2,\"775\":2,\"776\":1,\"777\":1,\"778\":2,\"779\":1,\"780\":1,\"781\":1,\"782\":1,\"783\":1,\"784\":1,\"785\":1,\"786\":1,\"787\":1,\"788\":1,\"789\":1,\"790\":2,\"791\":1,\"792\":1,\"793\":1,\"794\":1,\"795\":1,\"796\":1,\"797\":1,\"800\":1,\"801\":1,\"802\":1,\"803\":1,\"804\":1,\"805\":1,\"807\":1,\"808\":1,\"809\":1,\"810\":1,\"811\":1,\"812\":1,\"813\":1,\"814\":1,\"815\":1,\"816\":1,\"817\":1,\"818\":1,\"819\":1,\"820\":1,\"821\":1,\"822\":1,\"823\":2,\"824\":1,\"825\":1,\"826\":1,\"827\":1,\"828\":1,\"829\":1,\"830\":1,\"831\":1,\"832\":3,\"833\":1,\"834\":1,\"835\":1,\"836\":1,\"837\":1,\"838\":1,\"839\":1,\"840\":1,\"841\":1,\"842\":1,\"844\":1,\"845\":1,\"847\":1,\"848\":1,\"849\":1,\"850\":1,\"851\":1,\"852\":1,\"853\":1,\"854\":1,\"859\":1,\"862\":1,\"864\":1,\"865\":1,\"866\":1,\"867\":1,\"868\":1,\"869\":1,\"870\":1,\"871\":1,\"872\":1,\"873\":1,\"874\":1,\"875\":1,\"876\":1,\"877\":1,\"878\":3,\"879\":1,\"880\":1,\"881\":1,\"882\":1,\"883\":1,\"884\":1,\"885\":1,\"886\":1,\"888\":1,\"889\":1,\"890\":1,\"891\":1,\"892\":1,\"893\":1,\"894\":1,\"895\":1,\"896\":1,\"913\":1,\"914\":1,\"915\":1,\"916\":1,\"917\":1,\"918\":1,\"919\":1,\"920\":1,\"921\":1,\"922\":1,\"923\":3,\"924\":1,\"925\":1,\"926\":1,\"927\":1,\"928\":1,\"929\":1,\"930\":1,\"931\":1,\"932\":1,\"940\":1,\"1065\":1,\"1124\":1,\"1125\":1,\"1130\":1,\"1171\":1,\"1173\":1,\"1177\":1,\"1178\":1,\"1179\":1,\"1180\":1,\"1181\":1,\"1182\":1,\"1183\":1,\"1184\":1,\"1185\":1,\"1186\":1,\"1188\":1,\"1190\":1,\"1223\":1,\"1224\":1,\"1225\":1,\"1226\":1,\"1227\":1,\"1228\":1,\"1229\":1,\"1230\":1,\"1231\":1,\"1232\":1,\"1233\":1,\"1234\":1,\"1235\":1,\"1236\":1,\"1237\":1,\"1238\":1,\"1239\":1,\"1240\":1,\"1241\":1,\"1244\":1,\"1245\":2,\"1246\":1,\"1247\":1,\"1248\":1,\"1249\":1,\"1250\":1,\"1251\":1,\"1252\":1,\"1255\":1,\"1256\":1,\"1257\":1,\"1261\":1,\"1270\":1,\"1271\":1,\"1272\":1,\"1273\":1,\"1274\":1,\"1275\":1,\"1276\":1,\"1277\":1,\"1278\":1,\"1279\":1,\"1280\":1,\"1281\":1,\"1282\":1,\"1283\":1,\"1284\":1,\"1285\":1,\"1286\":1,\"1287\":2,\"1288\":1,\"1289\":2,\"1290\":2,\"1291\":1,\"1292\":1,\"1293\":2,\"1294\":1,\"1295\":1,\"1296\":1,\"1297\":1,\"1298\":1,\"1299\":1,\"1300\":1,\"1301\":1,\"1302\":1,\"1303\":1,\"1304\":1,\"1305\":2,\"1306\":1,\"1307\":1,\"1308\":1,\"1309\":1,\"1310\":1,\"1311\":1,\"1312\":1,\"1315\":1,\"1316\":1,\"1317\":1,\"1318\":1,\"1319\":1,\"1320\":1,\"1322\":1,\"1323\":1,\"1324\":1,\"1325\":1,\"1326\":1,\"1327\":1,\"1328\":1,\"1329\":1,\"1330\":1,\"1331\":1,\"1332\":1,\"1333\":1,\"1334\":1,\"1335\":1,\"1336\":1,\"1337\":1,\"1338\":2,\"1339\":1,\"1340\":1,\"1341\":1,\"1342\":1,\"1343\":1,\"1344\":1,\"1345\":1,\"1346\":1,\"1347\":3,\"1348\":1,\"1349\":1,\"1350\":1,\"1351\":1,\"1352\":1,\"1353\":1,\"1354\":1,\"1355\":1,\"1356\":1,\"1357\":1,\"1359\":1,\"1360\":1,\"1362\":1,\"1363\":1,\"1364\":1,\"1365\":1,\"1366\":1,\"1367\":1,\"1368\":1,\"1369\":1,\"1374\":1,\"1377\":1,\"1379\":1,\"1380\":1,\"1381\":1,\"1382\":1,\"1383\":1,\"1384\":1,\"1385\":1,\"1386\":1,\"1387\":1,\"1388\":1,\"1389\":1,\"1390\":1,\"1391\":1,\"1392\":1,\"1393\":3,\"1394\":1,\"1395\":1,\"1396\":1,\"1397\":1,\"1398\":1,\"1399\":1,\"1400\":1,\"1401\":1,\"1403\":1,\"1404\":1,\"1405\":1,\"1406\":1,\"1407\":1,\"1408\":1,\"1409\":1,\"1410\":1,\"1411\":1,\"1428\":1,\"1429\":1,\"1430\":1,\"1431\":1,\"1432\":1,\"1433\":1,\"1434\":1,\"1435\":1,\"1436\":1,\"1437\":1,\"1438\":3,\"1439\":1,\"1440\":1,\"1441\":1,\"1442\":1,\"1443\":1,\"1444\":1,\"1445\":1,\"1446\":1,\"1447\":1,\"1455\":1,\"1577\":1,\"1582\":1,\"1583\":1,\"1584\":1,\"1585\":1,\"1586\":1,\"1587\":1,\"1588\":1,\"1589\":1,\"1590\":1,\"1591\":1,\"1592\":1,\"1593\":1,\"1594\":1,\"1595\":1,\"1596\":1,\"1599\":1,\"1601\":1,\"1602\":1,\"1603\":1,\"1604\":1,\"1605\":1,\"1606\":1,\"1607\":1,\"1608\":1,\"1609\":1,\"1610\":1,\"1611\":1,\"1612\":5,\"1613\":1,\"1614\":1,\"1615\":1,\"1616\":1,\"1617\":1,\"1618\":1,\"1619\":1,\"1620\":1,\"1621\":1,\"1622\":1,\"1623\":1,\"1624\":1,\"1625\":1,\"1626\":1,\"1629\":1,\"1630\":1,\"1631\":1,\"1632\":1,\"1633\":1,\"1634\":1,\"1635\":1,\"1636\":1,\"1637\":1,\"1638\":1,\"1639\":1,\"1640\":1,\"1641\":1,\"1642\":1,\"1643\":1,\"1644\":1,\"1645\":1,\"1647\":2,\"1648\":1,\"1649\":1,\"1650\":1,\"1651\":1,\"1652\":1,\"1653\":1,\"1655\":1,\"1656\":1,\"1657\":1,\"1659\":1,\"1660\":1,\"1661\":1,\"1662\":1,\"1663\":1,\"1664\":1,\"1665\":1,\"1666\":1,\"1667\":1,\"1668\":1,\"1669\":1,\"1670\":1,\"1671\":1,\"1672\":1,\"1673\":1,\"1674\":1,\"1675\":1,\"1677\":1,\"1688\":1,\"1693\":1,\"1694\":1,\"1695\":1,\"1696\":1,\"1697\":1,\"1698\":1,\"1699\":1,\"1700\":1,\"1701\":1,\"1702\":1,\"1703\":1,\"1705\":1,\"1706\":1,\"1707\":1,\"1708\":1,\"1709\":1,\"1710\":1,\"1711\":1,\"1712\":1,\"1714\":1,\"1716\":1,\"1720\":1,\"1723\":1,\"1724\":1,\"1725\":1,\"1726\":1,\"1727\":1,\"1728\":1,\"1729\":1,\"1730\":1,\"1731\":1,\"1732\":1,\"1733\":1,\"1734\":1,\"1735\":1,\"1736\":1,\"1737\":1,\"1740\":1,\"1741\":1,\"1742\":1,\"1744\":1,\"1745\":1,\"1746\":1,\"1747\":1,\"1748\":1,\"1749\":1,\"1750\":1,\"1751\":1,\"1752\":1,\"1753\":1,\"1754\":1,\"1757\":2,\"1758\":1,\"1759\":1,\"1760\":1,\"1761\":1,\"1762\":1,\"1763\":1,\"1764\":1,\"1766\":1,\"1769\":1,\"1770\":1,\"1772\":1,\"1779\":1,\"1784\":1,\"1785\":1,\"1786\":1,\"1787\":1,\"1788\":1,\"1789\":1,\"1790\":1,\"1791\":1,\"1792\":1,\"1793\":1,\"1794\":1,\"1796\":1,\"1797\":1,\"1798\":1,\"1799\":1,\"1800\":1,\"1801\":1,\"1802\":1,\"1803\":1,\"1804\":1,\"1805\":1,\"1806\":1,\"1807\":1,\"1810\":1,\"1811\":1,\"1812\":1,\"1813\":1,\"1814\":1,\"1816\":1,\"1817\":1,\"1818\":1,\"1819\":1,\"1820\":1,\"1821\":1,\"1822\":1,\"1823\":1,\"1824\":1,\"1826\":1,\"1831\":1,\"1832\":1,\"1833\":1,\"1834\":1,\"1835\":1,\"1836\":1,\"1837\":1,\"1839\":1,\"1848\":1,\"1849\":1,\"1859\":1,\"1860\":1,\"1861\":1,\"1862\":1,\"1863\":1,\"1864\":1,\"1865\":1,\"1866\":1,\"1867\":1,\"1868\":1,\"1869\":1,\"1870\":1,\"1871\":1,\"1872\":1,\"1873\":1,\"1874\":1,\"1875\":1,\"1876\":1,\"1877\":1,\"1878\":1,\"1879\":1,\"1880\":1,\"1881\":1,\"1882\":1,\"1883\":1,\"1884\":1,\"1885\":1,\"1886\":1,\"1887\":1,\"1888\":1,\"1889\":1,\"1890\":1,\"1891\":1,\"1892\":1,\"1893\":1,\"1898\":2,\"1946\":1,\"1949\":1,\"1951\":1,\"1952\":1,\"1953\":1,\"1954\":1,\"1955\":1,\"1956\":1,\"1957\":1,\"1958\":1,\"1963\":1,\"1964\":1,\"1965\":1,\"1966\":1,\"1967\":1,\"1968\":1,\"1969\":1,\"1970\":1,\"1971\":1,\"1972\":1,\"1973\":1,\"1974\":1,\"1975\":1,\"1976\":1,\"1977\":1,\"1978\":1,\"1979\":1,\"1980\":1,\"1981\":5,\"1982\":1,\"1983\":1,\"1984\":1,\"1985\":1,\"1986\":1,\"1987\":1,\"1988\":1,\"1989\":1,\"1990\":1,\"1991\":1,\"1992\":1,\"1993\":1,\"1994\":1,\"1995\":1,\"1998\":1,\"1999\":1,\"2000\":1,\"2001\":1,\"2002\":1,\"2003\":1,\"2004\":1,\"2005\":1,\"2006\":1,\"2007\":1,\"2008\":1,\"2009\":1,\"2010\":1,\"2011\":1,\"2012\":1,\"2013\":1,\"2014\":1,\"2016\":2,\"2017\":1,\"2018\":1,\"2019\":1,\"2020\":1,\"2021\":1,\"2022\":1,\"2024\":1,\"2025\":1,\"2026\":1,\"2028\":1,\"2029\":1,\"2030\":1,\"2031\":1,\"2032\":1,\"2033\":1,\"2034\":1,\"2035\":1,\"2036\":1,\"2037\":1,\"2038\":1,\"2039\":1,\"2040\":1,\"2041\":1,\"2042\":1,\"2043\":1,\"2044\":1,\"2046\":1,\"2057\":1,\"2062\":1,\"2063\":1,\"2064\":1,\"2065\":1,\"2066\":1,\"2067\":1,\"2068\":1,\"2069\":1,\"2070\":1,\"2071\":1,\"2072\":1,\"2074\":1,\"2075\":1,\"2076\":1,\"2077\":1,\"2078\":1,\"2079\":1,\"2080\":1,\"2081\":1,\"2083\":1,\"2086\":1,\"2087\":1,\"2088\":1,\"2089\":1,\"2090\":1,\"2091\":1,\"2092\":1,\"2093\":1,\"2094\":1,\"2095\":1,\"2099\":1,\"2102\":1,\"2103\":1,\"2104\":1,\"2105\":1,\"2106\":1,\"2108\":1,\"2109\":1,\"2110\":1,\"2111\":1,\"2112\":1,\"2113\":1,\"2114\":1,\"2116\":1,\"2117\":1,\"2119\":1,\"2120\":1,\"2122\":1,\"2123\":1,\"2124\":1,\"2125\":1,\"2126\":1,\"2127\":1,\"2128\":1,\"2129\":1,\"2130\":1,\"2131\":1,\"2132\":1,\"2133\":2,\"2135\":1,\"2138\":1,\"2139\":1,\"2141\":1,\"2148\":1,\"2153\":1,\"2154\":1,\"2155\":1,\"2156\":1,\"2157\":1,\"2158\":1,\"2159\":1,\"2160\":1,\"2161\":1,\"2162\":1,\"2163\":1,\"2165\":1,\"2166\":1,\"2167\":1,\"2168\":1,\"2169\":1,\"2170\":1,\"2171\":1,\"2172\":1,\"2173\":1,\"2174\":1,\"2175\":1,\"2176\":1,\"2179\":1,\"2180\":1,\"2181\":1,\"2182\":1,\"2183\":1,\"2185\":1,\"2186\":1,\"2187\":1,\"2188\":1,\"2189\":1,\"2190\":1,\"2191\":1,\"2192\":1,\"2193\":1,\"2195\":1,\"2200\":1,\"2201\":1,\"2202\":1,\"2203\":1,\"2204\":1,\"2205\":1,\"2206\":1,\"2208\":1,\"2217\":1,\"2218\":1,\"2228\":1,\"2229\":1,\"2230\":1,\"2231\":1,\"2232\":1,\"2233\":1,\"2234\":1,\"2235\":1,\"2236\":1,\"2237\":1,\"2238\":1,\"2239\":1,\"2240\":1,\"2241\":1,\"2242\":1,\"2243\":1,\"2244\":1,\"2245\":1,\"2246\":1,\"2247\":1,\"2248\":1,\"2249\":1,\"2250\":1,\"2251\":1,\"2252\":1,\"2253\":1,\"2254\":1,\"2255\":1,\"2256\":1,\"2257\":1,\"2258\":1,\"2259\":1,\"2260\":1,\"2261\":1,\"2262\":1,\"2267\":2,\"2315\":1,\"2318\":1,\"2320\":1,\"2321\":1,\"2322\":1,\"2323\":1,\"2324\":1,\"2325\":1,\"2326\":1,\"2327\":1,\"2332\":1,\"2333\":1,\"2334\":1,\"2335\":1,\"2336\":1,\"2337\":1,\"2338\":1,\"2339\":1,\"2340\":1,\"2341\":1,\"2342\":1,\"2343\":1,\"2344\":1,\"2345\":1,\"2346\":1,\"2347\":1,\"2348\":1,\"2349\":1,\"2350\":5,\"2351\":1,\"2352\":1,\"2353\":1,\"2354\":1,\"2355\":1,\"2356\":1,\"2357\":1,\"2358\":1,\"2359\":1,\"2360\":1,\"2361\":1,\"2362\":1,\"2363\":1,\"2364\":1,\"2367\":1,\"2368\":1,\"2369\":1,\"2370\":1,\"2371\":1,\"2372\":1,\"2373\":1,\"2374\":1,\"2375\":1,\"2376\":1,\"2377\":1,\"2378\":1,\"2379\":1,\"2380\":1,\"2381\":1,\"2382\":1,\"2383\":1,\"2385\":2,\"2386\":1,\"2387\":1,\"2388\":1,\"2389\":1,\"2390\":1,\"2391\":1,\"2393\":1,\"2394\":1,\"2395\":1,\"2397\":1,\"2398\":1,\"2399\":1,\"2400\":1,\"2401\":1,\"2402\":1,\"2403\":1,\"2404\":1,\"2405\":1,\"2406\":1,\"2407\":1,\"2408\":1,\"2409\":1,\"2410\":1,\"2411\":1,\"2412\":1,\"2413\":1,\"2415\":1,\"2426\":1,\"2431\":1,\"2432\":1,\"2433\":1,\"2434\":1,\"2435\":1,\"2436\":1,\"2437\":1,\"2438\":1,\"2439\":1,\"2440\":1,\"2441\":1,\"2443\":1,\"2444\":1,\"2445\":1,\"2446\":1,\"2447\":1,\"2448\":1,\"2449\":1,\"2450\":1,\"2452\":1,\"2455\":1,\"2456\":1,\"2457\":1,\"2458\":1,\"2459\":1,\"2460\":1,\"2461\":1,\"2462\":1,\"2463\":1,\"2464\":1,\"2468\":1,\"2471\":1,\"2472\":1,\"2473\":1,\"2474\":1,\"2475\":1,\"2477\":1,\"2478\":1,\"2479\":1,\"2480\":1,\"2481\":1,\"2482\":1,\"2483\":1,\"2485\":1,\"2486\":1,\"2488\":1,\"2489\":1,\"2491\":1,\"2492\":1,\"2493\":1,\"2494\":1,\"2495\":1,\"2496\":1,\"2497\":1,\"2498\":1,\"2499\":1,\"2500\":1,\"2501\":1,\"2502\":2,\"2504\":1,\"2507\":1,\"2508\":1,\"2510\":1,\"2517\":1,\"2522\":1,\"2523\":1,\"2524\":1,\"2525\":1,\"2526\":1,\"2527\":1,\"2528\":1,\"2529\":1,\"2530\":1,\"2531\":1,\"2532\":1,\"2534\":1,\"2535\":1,\"2536\":1,\"2537\":1,\"2538\":1,\"2539\":1,\"2540\":1,\"2541\":1,\"2542\":1,\"2543\":1,\"2544\":1,\"2545\":1,\"2548\":1,\"2549\":1,\"2550\":1,\"2551\":1,\"2552\":1,\"2554\":1,\"2555\":1,\"2556\":1,\"2557\":1,\"2558\":1,\"2559\":1,\"2560\":1,\"2561\":1,\"2562\":1,\"2564\":1,\"2569\":1,\"2570\":1,\"2571\":1,\"2572\":1,\"2573\":1,\"2574\":1,\"2575\":1,\"2577\":1,\"2586\":1,\"2587\":1,\"2597\":1,\"2598\":1,\"2599\":1,\"2600\":1,\"2601\":1,\"2602\":1,\"2603\":1,\"2604\":1,\"2605\":1,\"2606\":1,\"2607\":1,\"2608\":1,\"2609\":1,\"2610\":1,\"2611\":1,\"2612\":1,\"2613\":1,\"2614\":1,\"2615\":1,\"2616\":1,\"2617\":1,\"2618\":1,\"2619\":1,\"2620\":1,\"2621\":1,\"2622\":1,\"2623\":1,\"2624\":1,\"2625\":1,\"2626\":1,\"2627\":1,\"2628\":1,\"2629\":1,\"2630\":1,\"2631\":1,\"2636\":2}}],[\"参考配置调度器\",{\"1\":{\"458\":1,\"973\":1,\"1488\":1}}],[\"参考文档\",{\"1\":{\"362\":1,\"877\":1,\"1392\":1}}],[\"参考命令响应规则\",{\"1\":{\"173\":1,\"174\":1,\"683\":1,\"684\":1,\"1198\":1,\"1199\":1}}],[\"参考\",{\"1\":{\"3\":1,\"15\":1,\"27\":1,\"169\":1,\"372\":1,\"398\":1,\"679\":1,\"887\":1,\"913\":1,\"1194\":1,\"1402\":1,\"1428\":1,\"1825\":1,\"2194\":1,\"2563\":1}}],[\"image\",{\"1\":{\"2697\":4,\"2712\":4,\"2727\":4}}],[\"implement\",{\"1\":{\"373\":1,\"888\":1,\"1403\":1}}],[\"import\",{\"1\":{\"38\":2,\"39\":2,\"40\":4,\"55\":1,\"82\":1,\"83\":1,\"95\":2,\"96\":2,\"97\":2,\"98\":2,\"99\":2,\"100\":3,\"101\":2,\"102\":1,\"103\":2,\"105\":2,\"106\":2,\"110\":2,\"111\":4,\"114\":2,\"116\":4,\"117\":2,\"118\":2,\"120\":2,\"121\":2,\"123\":1,\"124\":2,\"127\":1,\"128\":1,\"129\":1,\"130\":1,\"132\":2,\"133\":1,\"134\":2,\"135\":1,\"136\":2,\"137\":2,\"140\":2,\"218\":1,\"227\":1,\"365\":1,\"419\":1,\"420\":2,\"421\":1,\"423\":1,\"424\":3,\"426\":2,\"427\":2,\"428\":3,\"431\":4,\"435\":3,\"453\":2,\"454\":2,\"468\":2,\"469\":1,\"470\":6,\"472\":5,\"473\":2,\"474\":1,\"475\":6,\"476\":4,\"477\":7,\"478\":4,\"479\":5,\"480\":2,\"509\":2,\"516\":2,\"517\":1,\"528\":1,\"529\":2,\"534\":1,\"536\":1,\"538\":2,\"539\":1,\"543\":1,\"545\":5,\"548\":2,\"549\":2,\"550\":4,\"565\":1,\"592\":1,\"593\":1,\"605\":2,\"606\":2,\"607\":2,\"608\":2,\"609\":2,\"610\":3,\"611\":2,\"612\":1,\"613\":2,\"615\":2,\"616\":2,\"620\":2,\"621\":4,\"624\":2,\"626\":4,\"627\":2,\"628\":2,\"630\":2,\"631\":2,\"633\":1,\"634\":2,\"637\":1,\"638\":1,\"639\":1,\"640\":1,\"642\":2,\"643\":1,\"644\":2,\"645\":1,\"646\":2,\"647\":2,\"650\":2,\"730\":1,\"739\":1,\"880\":1,\"934\":1,\"935\":2,\"936\":1,\"938\":1,\"939\":3,\"941\":2,\"942\":2,\"943\":3,\"946\":4,\"950\":3,\"968\":2,\"969\":2,\"983\":2,\"984\":1,\"985\":6,\"987\":5,\"988\":2,\"989\":1,\"990\":6,\"991\":4,\"992\":7,\"993\":4,\"994\":5,\"995\":2,\"1024\":2,\"1031\":2,\"1032\":1,\"1043\":1,\"1044\":2,\"1049\":1,\"1051\":1,\"1053\":2,\"1054\":1,\"1058\":1,\"1060\":5,\"1063\":2,\"1064\":2,\"1065\":4,\"1080\":1,\"1107\":1,\"1108\":1,\"1120\":2,\"1121\":2,\"1122\":2,\"1123\":2,\"1124\":2,\"1125\":3,\"1126\":2,\"1127\":1,\"1128\":2,\"1130\":2,\"1131\":2,\"1135\":2,\"1136\":4,\"1139\":2,\"1141\":4,\"1142\":2,\"1143\":2,\"1145\":2,\"1146\":2,\"1148\":1,\"1149\":2,\"1152\":1,\"1153\":1,\"1154\":1,\"1155\":1,\"1157\":2,\"1158\":1,\"1159\":2,\"1160\":1,\"1161\":2,\"1162\":2,\"1165\":2,\"1245\":1,\"1254\":1,\"1395\":1,\"1449\":1,\"1450\":2,\"1451\":1,\"1453\":1,\"1454\":3,\"1456\":2,\"1457\":2,\"1458\":3,\"1461\":4,\"1465\":3,\"1483\":2,\"1484\":2,\"1498\":2,\"1499\":1,\"1500\":6,\"1502\":5,\"1503\":2,\"1504\":1,\"1505\":6,\"1506\":4,\"1507\":7,\"1508\":4,\"1509\":5,\"1510\":2,\"1539\":2,\"1546\":2,\"1547\":1,\"1558\":1,\"1559\":2,\"1564\":1,\"1566\":1,\"1568\":2,\"1569\":1,\"1573\":1,\"1575\":5,\"1825\":1,\"1893\":1,\"1894\":1,\"1896\":2,\"1897\":2,\"1900\":1,\"1903\":1,\"1905\":1,\"1906\":1,\"1908\":1,\"1909\":2,\"1910\":3,\"1911\":1,\"1912\":1,\"1913\":3,\"1914\":1,\"1941\":4,\"1942\":3,\"2194\":1,\"2262\":1,\"2263\":1,\"2265\":2,\"2266\":2,\"2269\":1,\"2272\":1,\"2274\":1,\"2275\":1,\"2277\":1,\"2278\":2,\"2279\":3,\"2280\":1,\"2281\":1,\"2282\":3,\"2283\":1,\"2310\":4,\"2311\":3,\"2563\":1,\"2631\":1,\"2632\":1,\"2634\":2,\"2635\":2,\"2638\":1,\"2641\":1,\"2643\":1,\"2644\":1,\"2646\":1,\"2647\":2,\"2648\":3,\"2649\":1,\"2650\":1,\"2651\":3,\"2652\":1,\"2679\":4,\"2680\":3,\"2685\":3,\"2686\":4,\"2687\":8,\"2688\":5,\"2691\":4,\"2692\":4,\"2694\":4,\"2695\":3,\"2700\":3,\"2701\":4,\"2702\":8,\"2703\":5,\"2706\":4,\"2707\":4,\"2709\":4,\"2710\":3,\"2715\":3,\"2716\":4,\"2717\":8,\"2718\":5,\"2721\":4,\"2722\":4,\"2724\":4,\"2725\":3}}],[\"i的命令参数解析器\",{\"1\":{\"1893\":1,\"2262\":1,\"2631\":1}}],[\"i\",{\"1\":{\"1893\":1,\"1913\":1,\"2262\":1,\"2282\":1,\"2631\":1,\"2651\":1}}],[\"i|\",{\"1\":{\"1893\":1,\"1913\":1,\"2262\":1,\"2282\":1,\"2631\":1,\"2651\":1}}],[\"iyume\",{\"1\":{\"500\":1,\"1015\":1,\"1530\":1}}],[\"iterator\",{\"1\":{\"2696\":2,\"2711\":2,\"2726\":2}}],[\"iterable\",{\"1\":{\"248\":1,\"249\":1,\"250\":1,\"251\":1,\"479\":2,\"536\":1,\"761\":1,\"762\":1,\"763\":1,\"764\":1,\"994\":2,\"1051\":1,\"1276\":1,\"1277\":1,\"1278\":1,\"1279\":1,\"1509\":2,\"1566\":1,\"1611\":1,\"1620\":1,\"1621\":2,\"1631\":1,\"1636\":2,\"1651\":2,\"1818\":2,\"1826\":2,\"1980\":1,\"1989\":1,\"1990\":2,\"2000\":1,\"2005\":2,\"2020\":2,\"2187\":2,\"2195\":2,\"2349\":1,\"2358\":1,\"2359\":2,\"2369\":1,\"2374\":2,\"2389\":2,\"2556\":2,\"2564\":2}}],[\"itemsview\",{\"1\":{\"277\":1,\"789\":1,\"1304\":1}}],[\"ipv4\",{\"1\":{\"1897\":1,\"2266\":1,\"2635\":1}}],[\"ipvanyaddress\",{\"1\":{\"167\":1,\"677\":1,\"1192\":1}}],[\"ip\",{\"1\":{\"167\":1,\"508\":1,\"677\":1,\"1023\":1,\"1192\":1,\"1538\":1}}],[\"ignore\",{\"1\":{\"480\":1,\"995\":1,\"1510\":1}}],[\"ignoredexception\",{\"1\":{\"132\":3,\"134\":3,\"195\":1,\"642\":3,\"644\":3,\"707\":1,\"1157\":3,\"1159\":3,\"1222\":1}}],[\"ignorecase=false\",{\"1\":{\"95\":2,\"96\":2,\"97\":2,\"605\":2,\"606\":2,\"607\":2,\"1120\":2,\"1121\":2,\"1122\":2}}],[\"ignorecase\",{\"1\":{\"95\":1,\"96\":1,\"97\":1,\"101\":2,\"352\":1,\"353\":1,\"354\":1,\"355\":1,\"356\":1,\"357\":1,\"605\":1,\"606\":1,\"607\":1,\"611\":2,\"867\":1,\"868\":1,\"869\":1,\"870\":1,\"871\":1,\"872\":1,\"1120\":1,\"1121\":1,\"1122\":1,\"1126\":2,\"1382\":1,\"1383\":1,\"1384\":1,\"1385\":1,\"1386\":1,\"1387\":1,\"1868\":1,\"1869\":1,\"1870\":1,\"1885\":1,\"1886\":1,\"1887\":1,\"2237\":1,\"2238\":1,\"2239\":1,\"2254\":1,\"2255\":1,\"2256\":1,\"2606\":1,\"2607\":1,\"2608\":1,\"2623\":1,\"2624\":1,\"2625\":1}}],[\"if\",{\"1\":{\"120\":1,\"121\":1,\"132\":1,\"134\":1,\"136\":1,\"137\":1,\"431\":2,\"439\":1,\"472\":2,\"473\":1,\"477\":1,\"509\":1,\"630\":1,\"631\":1,\"642\":1,\"644\":1,\"646\":1,\"647\":1,\"946\":2,\"954\":1,\"987\":2,\"988\":1,\"992\":1,\"1024\":1,\"1145\":1,\"1146\":1,\"1157\":1,\"1159\":1,\"1161\":1,\"1162\":1,\"1461\":2,\"1469\":1,\"1502\":2,\"1503\":1,\"1507\":1,\"1539\":1,\"2686\":2,\"2687\":4,\"2701\":2,\"2702\":4,\"2716\":2,\"2717\":4}}],[\"inspect\",{\"1\":{\"1655\":1,\"1656\":1,\"2024\":1,\"2025\":1,\"2393\":1,\"2394\":1}}],[\"install\",{\"1\":{\"434\":1,\"445\":1,\"451\":1,\"507\":2,\"949\":1,\"960\":1,\"966\":1,\"1022\":2,\"1464\":1,\"1475\":1,\"1481\":1,\"1537\":2,\"1658\":2,\"1676\":2,\"1704\":2,\"1771\":2,\"1795\":2,\"1893\":3,\"1905\":2,\"1913\":9,\"1928\":2,\"2027\":2,\"2045\":2,\"2073\":2,\"2140\":2,\"2164\":2,\"2262\":3,\"2274\":2,\"2282\":9,\"2297\":2,\"2396\":2,\"2414\":2,\"2442\":2,\"2509\":2,\"2533\":2,\"2631\":3,\"2643\":2,\"2651\":9,\"2666\":2,\"2697\":4,\"2712\":4,\"2727\":4}}],[\"instance\",{\"1\":{\"155\":1,\"665\":1,\"1180\":1}}],[\"index\",{\"1\":{\"543\":2,\"1058\":2,\"1573\":2,\"1615\":1,\"1893\":2,\"1913\":5,\"1984\":1,\"2262\":2,\"2282\":5,\"2353\":1,\"2631\":2,\"2651\":5}}],[\"ini\",{\"1\":{\"480\":1,\"995\":1,\"1510\":1}}],[\"initializing\",{\"1\":{\"2686\":1,\"2701\":1,\"2716\":1}}],[\"init\",{\"1\":{\"110\":2,\"114\":1,\"155\":1,\"217\":1,\"218\":1,\"219\":1,\"220\":1,\"221\":1,\"222\":1,\"223\":1,\"224\":1,\"420\":1,\"465\":1,\"470\":2,\"472\":2,\"473\":2,\"477\":2,\"509\":1,\"514\":3,\"515\":1,\"516\":1,\"620\":2,\"624\":1,\"665\":1,\"729\":1,\"730\":1,\"731\":1,\"732\":1,\"733\":1,\"734\":1,\"735\":1,\"736\":1,\"935\":1,\"980\":1,\"985\":2,\"987\":2,\"988\":2,\"992\":2,\"1024\":1,\"1029\":3,\"1030\":1,\"1031\":1,\"1135\":2,\"1139\":1,\"1180\":1,\"1244\":1,\"1245\":1,\"1246\":1,\"1247\":1,\"1248\":1,\"1249\":1,\"1250\":1,\"1251\":1,\"1450\":1,\"1495\":1,\"1500\":2,\"1502\":2,\"1503\":2,\"1507\":2,\"1539\":1,\"1544\":3,\"1545\":1,\"1546\":1,\"1928\":1,\"2297\":1,\"2666\":1,\"2686\":1,\"2701\":1,\"2716\":1}}],[\"include\",{\"1\":{\"158\":1,\"449\":1,\"543\":2,\"668\":1,\"964\":1,\"1058\":2,\"1183\":1,\"1479\":1,\"1573\":2,\"2697\":1,\"2712\":1,\"2727\":1}}],[\"info=\",{\"1\":{\"2686\":2,\"2701\":2,\"2716\":2}}],[\"info\",{\"1\":{\"152\":1,\"155\":1,\"169\":1,\"227\":1,\"419\":4,\"457\":1,\"468\":2,\"662\":1,\"665\":1,\"679\":1,\"739\":1,\"934\":4,\"972\":1,\"983\":2,\"1177\":1,\"1180\":1,\"1194\":1,\"1254\":1,\"1449\":4,\"1487\":1,\"1498\":2,\"1902\":1,\"2271\":1,\"2640\":1}}],[\"infos\",{\"1\":{\"152\":1,\"662\":1,\"1177\":1}}],[\"int>\",{\"1\":{\"1900\":1,\"1912\":1,\"2269\":1,\"2281\":1,\"2638\":1,\"2650\":1}}],[\"integer\",{\"1\":{\"1894\":1,\"2263\":1,\"2632\":1}}],[\"interval\",{\"1\":{\"454\":1,\"969\":1,\"1484\":1}}],[\"interfaceclass\",{\"1\":{\"373\":1,\"888\":1,\"1403\":1}}],[\"interface\",{\"1\":{\"373\":1,\"888\":1,\"1403\":1}}],[\"int\",{\"1\":{\"82\":1,\"168\":1,\"169\":2,\"238\":1,\"242\":1,\"275\":1,\"277\":1,\"278\":2,\"279\":1,\"280\":1,\"282\":1,\"283\":1,\"285\":1,\"319\":4,\"366\":1,\"367\":1,\"449\":2,\"454\":4,\"457\":1,\"543\":1,\"592\":1,\"678\":1,\"679\":2,\"751\":1,\"755\":1,\"787\":1,\"789\":1,\"790\":2,\"791\":1,\"792\":1,\"794\":1,\"795\":1,\"797\":1,\"832\":4,\"881\":1,\"882\":1,\"964\":2,\"969\":4,\"972\":1,\"1058\":1,\"1107\":1,\"1193\":1,\"1194\":2,\"1266\":1,\"1270\":1,\"1302\":1,\"1304\":1,\"1305\":2,\"1306\":1,\"1307\":1,\"1309\":1,\"1310\":1,\"1312\":1,\"1347\":4,\"1396\":1,\"1397\":1,\"1479\":2,\"1484\":4,\"1487\":1,\"1573\":1,\"1612\":2,\"1615\":1,\"1616\":1,\"1617\":1,\"1644\":1,\"1669\":1,\"1695\":1,\"1698\":1,\"1736\":1,\"1745\":1,\"1786\":1,\"1789\":1,\"1801\":1,\"1860\":1,\"1861\":1,\"1862\":1,\"1863\":1,\"1864\":1,\"1865\":1,\"1866\":1,\"1867\":1,\"1868\":1,\"1869\":1,\"1870\":1,\"1871\":1,\"1872\":1,\"1873\":1,\"1874\":2,\"1875\":1,\"1876\":1,\"1877\":1,\"1878\":1,\"1879\":1,\"1880\":1,\"1881\":1,\"1882\":1,\"1883\":1,\"1884\":1,\"1885\":1,\"1886\":1,\"1887\":1,\"1888\":1,\"1889\":1,\"1890\":1,\"1891\":2,\"1892\":1,\"1894\":10,\"1897\":3,\"1900\":1,\"1908\":1,\"1910\":2,\"1912\":1,\"1914\":1,\"1981\":2,\"1984\":1,\"1985\":1,\"1986\":1,\"2013\":1,\"2038\":1,\"2064\":1,\"2067\":1,\"2117\":1,\"2123\":1,\"2155\":1,\"2158\":1,\"2170\":1,\"2229\":1,\"2230\":1,\"2231\":1,\"2232\":1,\"2233\":1,\"2234\":1,\"2235\":1,\"2236\":1,\"2237\":1,\"2238\":1,\"2239\":1,\"2240\":1,\"2241\":1,\"2242\":1,\"2243\":2,\"2244\":1,\"2245\":1,\"2246\":1,\"2247\":1,\"2248\":1,\"2249\":1,\"2250\":1,\"2251\":1,\"2252\":1,\"2253\":1,\"2254\":1,\"2255\":1,\"2256\":1,\"2257\":1,\"2258\":1,\"2259\":1,\"2260\":2,\"2261\":1,\"2263\":10,\"2266\":3,\"2269\":1,\"2277\":1,\"2279\":2,\"2281\":1,\"2283\":1,\"2350\":2,\"2353\":1,\"2354\":1,\"2355\":1,\"2382\":1,\"2407\":1,\"2433\":1,\"2436\":1,\"2486\":1,\"2492\":1,\"2524\":1,\"2527\":1,\"2539\":1,\"2598\":1,\"2599\":1,\"2600\":1,\"2601\":1,\"2602\":1,\"2603\":1,\"2604\":1,\"2605\":1,\"2606\":1,\"2607\":1,\"2608\":1,\"2609\":1,\"2610\":1,\"2611\":1,\"2612\":2,\"2613\":1,\"2614\":1,\"2615\":1,\"2616\":1,\"2617\":1,\"2618\":1,\"2619\":1,\"2620\":1,\"2621\":1,\"2622\":1,\"2623\":1,\"2624\":1,\"2625\":1,\"2626\":1,\"2627\":1,\"2628\":1,\"2629\":2,\"2630\":1,\"2632\":10,\"2635\":3,\"2638\":1,\"2646\":1,\"2648\":2,\"2650\":1,\"2652\":1,\"2691\":1,\"2692\":1,\"2694\":2,\"2695\":1,\"2706\":1,\"2707\":1,\"2709\":2,\"2710\":1,\"2721\":1,\"2722\":1,\"2724\":2,\"2725\":1}}],[\"in\",{\"1\":{\"79\":1,\"161\":1,\"427\":1,\"439\":1,\"449\":2,\"534\":1,\"540\":1,\"542\":3,\"589\":1,\"671\":1,\"942\":1,\"954\":1,\"964\":2,\"1049\":1,\"1055\":1,\"1057\":3,\"1104\":1,\"1186\":1,\"1457\":1,\"1469\":1,\"1479\":2,\"1564\":1,\"1570\":1,\"1572\":3,\"1941\":1,\"1942\":1,\"2310\":1,\"2311\":1,\"2679\":1,\"2680\":1,\"2688\":2,\"2696\":14,\"2703\":2,\"2711\":14,\"2718\":2,\"2726\":14}}],[\"issue\",{\"1\":{\"459\":1,\"497\":1,\"504\":1,\"974\":1,\"1012\":1,\"1019\":1,\"1489\":1,\"1527\":1,\"1534\":1}}],[\"issues\",{\"1\":{\"459\":1,\"497\":2,\"974\":1,\"1012\":2,\"1489\":1,\"1527\":2}}],[\"iso\",{\"1\":{\"175\":1,\"685\":1,\"1200\":1}}],[\"isinstance\",{\"1\":{\"83\":1,\"118\":1,\"120\":1,\"121\":1,\"472\":1,\"473\":1,\"593\":1,\"628\":1,\"630\":1,\"631\":1,\"987\":1,\"988\":1,\"1108\":1,\"1143\":1,\"1145\":1,\"1146\":1,\"1502\":1,\"1503\":1}}],[\"is\",{\"1\":{\"50\":2,\"58\":1,\"70\":1,\"78\":1,\"79\":1,\"103\":3,\"132\":1,\"134\":1,\"147\":1,\"419\":7,\"426\":3,\"427\":4,\"428\":3,\"472\":1,\"478\":1,\"479\":1,\"528\":1,\"539\":2,\"560\":2,\"568\":1,\"580\":1,\"588\":1,\"589\":1,\"613\":3,\"642\":1,\"644\":1,\"657\":1,\"934\":7,\"941\":3,\"942\":4,\"943\":3,\"987\":1,\"993\":1,\"994\":1,\"1043\":1,\"1054\":2,\"1075\":2,\"1083\":1,\"1095\":1,\"1103\":1,\"1104\":1,\"1128\":3,\"1157\":1,\"1159\":1,\"1172\":1,\"1449\":7,\"1456\":3,\"1457\":4,\"1458\":3,\"1502\":1,\"1508\":1,\"1509\":1,\"1558\":1,\"1569\":2,\"1911\":1,\"2280\":1,\"2649\":1,\"2686\":1,\"2701\":1,\"2716\":1}}],[\"id>\",{\"1\":{\"1931\":1,\"1932\":2,\"1933\":2,\"2300\":1,\"2301\":2,\"2302\":2,\"2669\":1,\"2670\":2,\"2671\":2}}],[\"id=bot\",{\"1\":{\"474\":1,\"989\":1,\"1504\":1}}],[\"id=\",{\"1\":{\"454\":2,\"969\":2,\"1484\":2}}],[\"id=123123\",{\"1\":{\"424\":1,\"939\":1,\"1454\":1}}],[\"id\",{\"0\":{\"46\":1,\"47\":1,\"556\":1,\"557\":1,\"1071\":1,\"1072\":1},\"1\":{\"40\":9,\"46\":4,\"47\":5,\"136\":1,\"137\":1,\"140\":6,\"177\":1,\"222\":6,\"223\":1,\"250\":2,\"257\":2,\"259\":4,\"260\":1,\"326\":1,\"329\":1,\"330\":1,\"331\":2,\"332\":1,\"420\":2,\"423\":3,\"427\":1,\"441\":1,\"442\":1,\"443\":1,\"469\":1,\"474\":3,\"476\":1,\"477\":2,\"478\":14,\"545\":2,\"550\":9,\"556\":4,\"557\":5,\"646\":1,\"647\":1,\"650\":6,\"687\":1,\"734\":6,\"735\":1,\"763\":2,\"770\":2,\"772\":4,\"773\":1,\"839\":1,\"841\":1,\"844\":1,\"848\":1,\"849\":2,\"850\":1,\"935\":2,\"938\":3,\"942\":1,\"956\":1,\"957\":1,\"958\":1,\"984\":1,\"989\":3,\"991\":1,\"992\":2,\"993\":14,\"1060\":2,\"1065\":9,\"1071\":4,\"1072\":5,\"1161\":1,\"1162\":1,\"1165\":6,\"1202\":1,\"1249\":6,\"1250\":1,\"1278\":2,\"1285\":2,\"1287\":4,\"1288\":1,\"1354\":1,\"1356\":1,\"1359\":1,\"1363\":1,\"1364\":2,\"1365\":1,\"1450\":2,\"1453\":3,\"1457\":1,\"1471\":1,\"1472\":1,\"1473\":1,\"1499\":1,\"1504\":3,\"1506\":1,\"1507\":2,\"1508\":14,\"1575\":2,\"1577\":2,\"1579\":1,\"1591\":2,\"1592\":3,\"1810\":2,\"1941\":1,\"1942\":1,\"1958\":2,\"1960\":1,\"1972\":2,\"1973\":3,\"2179\":2,\"2310\":1,\"2311\":1,\"2327\":2,\"2329\":1,\"2341\":2,\"2342\":3,\"2548\":2,\"2679\":1,\"2680\":1,\"2686\":1,\"2691\":3,\"2692\":3,\"2694\":5,\"2695\":3,\"2701\":1,\"2706\":3,\"2707\":3,\"2709\":5,\"2710\":3,\"2716\":1,\"2721\":3,\"2722\":3,\"2724\":5,\"2725\":3}}],[\"然后检查机器人发送的信息是否正确\",{\"1\":{\"1942\":1,\"2311\":1,\"2680\":1}}],[\"然后前往商店页面\",{\"1\":{\"481\":1,\"996\":1,\"1511\":1}}],[\"然后根据平台具体的消息类型\",{\"1\":{\"479\":1,\"994\":1,\"1509\":1}}],[\"然后根据平台消息的类型\",{\"1\":{\"478\":1,\"993\":1,\"1508\":1}}],[\"然后在项目设置中找到\",{\"1\":{\"447\":1,\"962\":1,\"1477\":1}}],[\"然后在其基础上配合使用其他驱动器的功能\",{\"1\":{\"54\":1,\"564\":1,\"1079\":1}}],[\"然后使用\",{\"1\":{\"419\":1,\"934\":1,\"1449\":1,\"2687\":1,\"2702\":1,\"2717\":1}}],[\"然后将它们的返回值作为参数值传递给父依赖\",{\"1\":{\"302\":1,\"814\":1,\"1329\":1}}],[\"然后通过驱动器的\",{\"1\":{\"38\":1,\"548\":1,\"1063\":1}}],[\"然后交由驱动器发送\",{\"1\":{\"37\":1,\"547\":1,\"1062\":1}}],[\"然后交由机器人插件处理\",{\"1\":{\"37\":1,\"547\":1,\"1062\":1}}],[\"=>get\",{\"1\":{\"216\":3,\"728\":3,\"1243\":3}}],[\"=>load\",{\"1\":{\"216\":2,\"728\":2,\"1243\":2,\"1809\":2,\"2178\":2,\"2547\":2}}],[\"=>\",{\"1\":{\"216\":23,\"728\":23,\"1243\":23,\"1809\":22,\"2178\":22,\"2547\":22}}],[\"==\",{\"1\":{\"136\":1,\"137\":1,\"222\":1,\"479\":1,\"509\":1,\"538\":2,\"539\":2,\"541\":2,\"543\":8,\"544\":1,\"646\":1,\"647\":1,\"734\":1,\"994\":1,\"1024\":1,\"1053\":2,\"1054\":2,\"1056\":2,\"1058\":8,\"1059\":1,\"1161\":1,\"1162\":1,\"1249\":1,\"1509\":1,\"1539\":1,\"1568\":2,\"1569\":2,\"1571\":2,\"1573\":8,\"1574\":1,\"1894\":1,\"1941\":2,\"1942\":1,\"2263\":1,\"2310\":2,\"2311\":1,\"2632\":1,\"2679\":2,\"2680\":1,\"2688\":2,\"2694\":1,\"2695\":1,\"2703\":2,\"2709\":1,\"2710\":1,\"2718\":2,\"2724\":1,\"2725\":1}}],[\"=\",{\"1\":{\"38\":1,\"39\":3,\"40\":4,\"42\":1,\"43\":1,\"44\":1,\"45\":1,\"46\":1,\"47\":1,\"48\":1,\"49\":1,\"50\":1,\"55\":1,\"64\":1,\"72\":1,\"95\":2,\"96\":2,\"97\":2,\"98\":2,\"99\":5,\"100\":4,\"101\":2,\"102\":1,\"103\":1,\"105\":7,\"106\":3,\"110\":1,\"111\":4,\"114\":1,\"118\":1,\"120\":1,\"121\":2,\"123\":2,\"124\":1,\"127\":1,\"128\":1,\"129\":1,\"130\":1,\"139\":1,\"140\":2,\"200\":1,\"203\":1,\"217\":1,\"218\":1,\"219\":1,\"220\":1,\"221\":1,\"222\":1,\"223\":1,\"297\":2,\"365\":2,\"423\":1,\"426\":2,\"427\":2,\"428\":7,\"429\":2,\"431\":6,\"435\":8,\"449\":20,\"457\":3,\"468\":1,\"470\":1,\"472\":4,\"473\":3,\"474\":2,\"475\":1,\"476\":3,\"477\":2,\"480\":1,\"492\":1,\"493\":1,\"509\":1,\"515\":1,\"521\":2,\"528\":1,\"529\":1,\"534\":1,\"541\":2,\"543\":1,\"544\":3,\"548\":1,\"549\":3,\"550\":4,\"552\":1,\"553\":1,\"554\":1,\"555\":1,\"556\":1,\"557\":1,\"558\":1,\"559\":1,\"560\":1,\"565\":1,\"574\":1,\"582\":1,\"605\":2,\"606\":2,\"607\":2,\"608\":2,\"609\":5,\"610\":4,\"611\":2,\"612\":1,\"613\":1,\"615\":7,\"616\":3,\"620\":1,\"621\":4,\"624\":1,\"628\":1,\"630\":1,\"631\":2,\"633\":2,\"634\":1,\"637\":1,\"638\":1,\"639\":1,\"640\":1,\"649\":1,\"650\":2,\"712\":1,\"715\":1,\"729\":1,\"730\":1,\"731\":1,\"732\":1,\"733\":1,\"734\":1,\"735\":1,\"815\":2,\"880\":2,\"938\":1,\"941\":2,\"942\":2,\"943\":7,\"944\":2,\"946\":6,\"950\":8,\"964\":20,\"972\":3,\"983\":1,\"985\":1,\"987\":4,\"988\":3,\"989\":2,\"990\":1,\"991\":3,\"992\":2,\"995\":1,\"1007\":1,\"1008\":1,\"1024\":1,\"1030\":1,\"1036\":2,\"1043\":1,\"1044\":1,\"1049\":1,\"1056\":2,\"1058\":1,\"1059\":3,\"1063\":1,\"1064\":3,\"1065\":4,\"1067\":1,\"1068\":1,\"1069\":1,\"1070\":1,\"1071\":1,\"1072\":1,\"1073\":1,\"1074\":1,\"1075\":1,\"1080\":1,\"1089\":1,\"1097\":1,\"1120\":2,\"1121\":2,\"1122\":2,\"1123\":2,\"1124\":5,\"1125\":4,\"1126\":2,\"1127\":1,\"1128\":1,\"1130\":7,\"1131\":3,\"1135\":1,\"1136\":4,\"1139\":1,\"1143\":1,\"1145\":1,\"1146\":2,\"1148\":2,\"1149\":1,\"1152\":1,\"1153\":1,\"1154\":1,\"1155\":1,\"1164\":1,\"1165\":2,\"1227\":1,\"1230\":1,\"1244\":1,\"1245\":1,\"1246\":1,\"1247\":1,\"1248\":1,\"1249\":1,\"1250\":1,\"1330\":2,\"1395\":2,\"1453\":1,\"1456\":2,\"1457\":2,\"1458\":7,\"1459\":2,\"1461\":6,\"1465\":8,\"1479\":20,\"1487\":3,\"1498\":1,\"1500\":1,\"1502\":4,\"1503\":3,\"1504\":2,\"1505\":1,\"1506\":3,\"1507\":2,\"1510\":1,\"1522\":1,\"1523\":1,\"1539\":1,\"1545\":1,\"1551\":2,\"1558\":1,\"1559\":1,\"1564\":1,\"1571\":2,\"1573\":1,\"1574\":3,\"1820\":2,\"1893\":2,\"1894\":1,\"1896\":2,\"1897\":1,\"1900\":2,\"1903\":1,\"1905\":7,\"1906\":4,\"1908\":1,\"1909\":2,\"1910\":3,\"1911\":1,\"1912\":1,\"1913\":5,\"1914\":1,\"1941\":4,\"1942\":3,\"2189\":2,\"2262\":2,\"2263\":1,\"2265\":2,\"2266\":1,\"2269\":2,\"2272\":1,\"2274\":7,\"2275\":4,\"2277\":1,\"2278\":2,\"2279\":3,\"2280\":1,\"2281\":1,\"2282\":5,\"2283\":1,\"2310\":4,\"2311\":3,\"2558\":2,\"2631\":2,\"2632\":1,\"2634\":2,\"2635\":1,\"2638\":2,\"2641\":1,\"2643\":7,\"2644\":4,\"2646\":1,\"2647\":2,\"2648\":3,\"2649\":1,\"2650\":1,\"2651\":5,\"2652\":1,\"2679\":4,\"2680\":3,\"2685\":2,\"2686\":6,\"2687\":19,\"2688\":5,\"2691\":5,\"2692\":5,\"2694\":2,\"2695\":1,\"2696\":12,\"2700\":2,\"2701\":6,\"2702\":19,\"2703\":5,\"2706\":5,\"2707\":5,\"2709\":2,\"2710\":1,\"2711\":12,\"2715\":2,\"2716\":6,\"2717\":19,\"2718\":5,\"2721\":5,\"2722\":5,\"2724\":2,\"2725\":1,\"2726\":12}}],[\"我们没必要在所有平台和\",{\"1\":{\"2697\":1,\"2712\":1,\"2727\":1}}],[\"我们都是通过会话获得数据的\",{\"1\":{\"2688\":1,\"2703\":1,\"2718\":1}}],[\"我们一般不会手写它们\",{\"1\":{\"2686\":1,\"2701\":1,\"2716\":1}}],[\"我们应该检查它们\",{\"1\":{\"2686\":1,\"2701\":1,\"2716\":1}}],[\"我们成功定义了模型\",{\"1\":{\"2686\":1,\"2701\":1,\"2716\":1}}],[\"我们同样需要通过\",{\"1\":{\"1942\":1,\"2311\":1,\"2680\":1}}],[\"我们向\",{\"1\":{\"1941\":1,\"1942\":1,\"2310\":1,\"2311\":1,\"2679\":1,\"2680\":1}}],[\"我们想要让\",{\"1\":{\"1937\":1,\"2306\":1,\"2675\":1}}],[\"我们想要创建一个机器人\",{\"1\":{\"1928\":1,\"2297\":1,\"2666\":1}}],[\"我们通过\",{\"1\":{\"2687\":1,\"2702\":1,\"2717\":1}}],[\"我们通过一个例子来讲解\",{\"1\":{\"1893\":1,\"2262\":1,\"2631\":1}}],[\"我们通常需要对\",{\"1\":{\"1941\":1,\"2310\":1,\"2679\":1}}],[\"我们通常直接使用\",{\"1\":{\"116\":1,\"626\":1,\"1141\":1}}],[\"我们提供了一个消息模板功能来构建消息序列\",{\"1\":{\"545\":1,\"1060\":1,\"1575\":1}}],[\"我们还可以注意到\",{\"1\":{\"2686\":1,\"2701\":1,\"2716\":1}}],[\"我们还可以定义一系列的路由来处理\",{\"1\":{\"1942\":1,\"2311\":1,\"2680\":1}}],[\"我们还可以完成对适配器的测试\",{\"1\":{\"1940\":1,\"2309\":1,\"2678\":1}}],[\"我们还可以使用消息序列的\",{\"1\":{\"542\":1,\"1057\":1,\"1572\":1}}],[\"我们还可以对\",{\"1\":{\"428\":1,\"943\":1,\"1458\":1}}],[\"我们导入的为\",{\"1\":{\"533\":1,\"1048\":1,\"1563\":1}}],[\"我们使用了消息序列的\",{\"1\":{\"532\":1,\"1047\":1,\"1562\":1}}],[\"我们使用了内置插件\",{\"1\":{\"526\":1,\"1041\":1,\"1556\":1}}],[\"我们直接使用\",{\"1\":{\"528\":1,\"1043\":1,\"1558\":1}}],[\"我们只需要使用辅助函数即可完成事件响应器的创建\",{\"1\":{\"527\":1,\"1042\":1,\"1557\":1}}],[\"我们只需要传入\",{\"1\":{\"429\":1,\"944\":1,\"1459\":1}}],[\"我们暂时不需要了解其中内容的含义\",{\"1\":{\"509\":1,\"1024\":1,\"1539\":1}}],[\"我们首先需要获取测试用模拟客户端\",{\"1\":{\"1941\":1,\"2310\":1,\"2679\":1}}],[\"我们首先需要将项目所需依赖安装至环境中\",{\"1\":{\"507\":1,\"1022\":1,\"1537\":1}}],[\"我们首先需要从适配器模块中导入所需要的适配器类\",{\"1\":{\"38\":1,\"548\":1,\"1063\":1}}],[\"我们十分不推荐直接创建机器人项目\",{\"1\":{\"506\":1,\"1021\":1,\"1536\":1}}],[\"我们计划引入\",{\"1\":{\"505\":1,\"1020\":1,\"1535\":1}}],[\"我们发现部分新手因不熟悉编程概念或框架本身而遇到问题\",{\"1\":{\"505\":1,\"1020\":1,\"1535\":1}}],[\"我们发现许多用户发布的插件中存在文件存储结构化数据\",{\"1\":{\"501\":1,\"1016\":1,\"1531\":1}}],[\"我们希望提供一个统一的数据存储与管理方式\",{\"1\":{\"501\":1,\"1016\":1,\"1531\":1}}],[\"我们希望提供一款基于命令行的适配器\",{\"1\":{\"496\":1,\"1011\":1,\"1526\":1}}],[\"我们希望借此机会接入\",{\"1\":{\"500\":1,\"1015\":1,\"1530\":1}}],[\"我们希望借此项目在聊天机器人社区中推广\",{\"1\":{\"492\":1,\"1007\":1,\"1522\":1}}],[\"我们希望借助现有命令行脚手架的可扩展特性\",{\"1\":{\"499\":1,\"1014\":1,\"1529\":1}}],[\"我们希望使用\",{\"1\":{\"492\":1,\"493\":1,\"1007\":1,\"1008\":1,\"1522\":1,\"1523\":1}}],[\"我们希望在\",{\"1\":{\"491\":1,\"1006\":1,\"1521\":1}}],[\"我们希望能够开发一款基于\",{\"1\":{\"487\":1,\"1002\":1,\"1517\":1}}],[\"我们希望将\",{\"1\":{\"485\":1,\"1000\":1,\"1515\":1}}],[\"我们希望将其中与旧的机器人平台相关的内容改为基于\",{\"1\":{\"484\":1,\"999\":1,\"1514\":1}}],[\"我们可能会频繁地修改模型\",{\"1\":{\"2686\":1,\"2701\":1,\"2716\":1}}],[\"我们可能需要手动调整迁移脚本\",{\"1\":{\"2686\":1,\"2701\":1,\"2716\":1}}],[\"我们可能需要记录一些信息\",{\"1\":{\"431\":1,\"946\":1,\"1461\":1}}],[\"我们可以关闭\",{\"1\":{\"2686\":1,\"2701\":1,\"2716\":1}}],[\"我们可以正常启动机器人了\",{\"1\":{\"2686\":1,\"2701\":1,\"2716\":1}}],[\"我们可以查看一下它的内容\",{\"1\":{\"2686\":1,\"2701\":1,\"2716\":1}}],[\"我们可以用以下代码检查模型生成的数据库模式是否正确\",{\"1\":{\"2685\":1,\"2700\":1,\"2715\":1}}],[\"我们可以设计出如下的模型\",{\"1\":{\"2685\":1,\"2700\":1,\"2715\":1}}],[\"我们可以定义一系列的路由来处理\",{\"1\":{\"1941\":1,\"2310\":1,\"2679\":1}}],[\"我们可以添加一些参数来对事件响应器进行更加精细的调整\",{\"1\":{\"529\":1,\"1044\":1,\"1559\":1}}],[\"我们可以将\",{\"1\":{\"428\":1,\"943\":1,\"1458\":1}}],[\"我们可以将规则进行细分\",{\"1\":{\"428\":1,\"943\":1,\"1458\":1}}],[\"我们可以将一个大型插件拆分成多个功能子插件\",{\"1\":{\"112\":1,\"622\":1,\"1137\":1}}],[\"我们可以组合两个\",{\"1\":{\"427\":1,\"942\":1,\"1457\":1}}],[\"我们可以根据上一节中添加的配置项\",{\"1\":{\"426\":1,\"941\":1,\"1456\":1}}],[\"我们可以小小的修改一下事件处理函数的事件参数类型注解\",{\"1\":{\"423\":1,\"938\":1,\"1453\":1}}],[\"我们可以从\",{\"1\":{\"419\":1,\"420\":1,\"934\":1,\"935\":1,\"1449\":1,\"1450\":1}}],[\"我们可以实现多用户同时参与的会话\",{\"1\":{\"140\":1,\"650\":1,\"1165\":1}}],[\"我们可以如下修改\",{\"1\":{\"140\":1,\"650\":1,\"1165\":1}}],[\"我们可以在这个钩子函数中进行一些清理工作\",{\"1\":{\"128\":1,\"638\":1,\"1153\":1}}],[\"我们可以在插件\",{\"1\":{\"117\":2,\"627\":2,\"1142\":2}}],[\"我们可以在当前插件中声明依赖的插件\",{\"1\":{\"117\":1,\"627\":1,\"1142\":1}}],[\"我们可以在使用\",{\"1\":{\"113\":1,\"623\":1,\"1138\":1}}],[\"我们可以更好地维护和扩展插件\",{\"1\":{\"115\":1,\"625\":1,\"1140\":1}}],[\"我们可以直接在插件中使用\",{\"1\":{\"112\":1,\"622\":1,\"1137\":1}}],[\"我们可以看到\",{\"1\":{\"110\":1,\"620\":1,\"1135\":1}}],[\"我们可以为插件添加插件元数据\",{\"1\":{\"110\":1,\"620\":1,\"1135\":1}}],[\"我们可以创建一个匹配\",{\"1\":{\"100\":1,\"103\":1,\"610\":1,\"613\":1,\"1125\":1,\"1128\":1}}],[\"我们可以创建一个匹配消息中包含字母并且忽略大小写的规则\",{\"1\":{\"101\":1,\"611\":1,\"1126\":1}}],[\"我们可以创建一个匹配消息中包含\",{\"1\":{\"98\":1,\"608\":1,\"1123\":1}}],[\"我们可以创建一个匹配消息为\",{\"1\":{\"97\":1,\"607\":1,\"1122\":1}}],[\"我们可以创建一个匹配消息结尾为\",{\"1\":{\"96\":1,\"606\":1,\"1121\":1}}],[\"我们可以创建一个匹配消息开头为\",{\"1\":{\"95\":1,\"605\":1,\"1120\":1}}],[\"我们可以通过检查请求返回是否正确\",{\"1\":{\"1941\":1,\"2310\":1,\"2679\":1}}],[\"我们可以通过引起\",{\"1\":{\"136\":1,\"137\":1,\"646\":1,\"647\":1,\"1161\":1,\"1162\":1}}],[\"我们可以通过以下方式判断\",{\"1\":{\"118\":1,\"628\":1,\"1143\":1}}],[\"我们可以通过两种途径向\",{\"1\":{\"118\":1,\"628\":1,\"1143\":1}}],[\"我们可以通过\",{\"1\":{\"83\":1,\"123\":1,\"542\":1,\"593\":1,\"633\":1,\"1057\":1,\"1108\":1,\"1148\":1,\"1572\":1,\"1942\":1,\"2311\":1,\"2680\":1}}],[\"我们可以通过适配器的\",{\"1\":{\"40\":1,\"550\":1,\"1065\":1}}],[\"我们可以通过适配器的名称或类型来获取指定的适配器实例\",{\"1\":{\"39\":1,\"549\":1,\"1064\":1}}],[\"我们可以方便地进行逐优先级事件传播\",{\"1\":{\"82\":1,\"592\":1,\"1107\":1}}],[\"我们可以使用脚手架快速创建项目\",{\"1\":{\"466\":1,\"981\":1,\"1496\":1}}],[\"我们可以使用\",{\"1\":{\"54\":1,\"420\":1,\"564\":1,\"935\":1,\"1079\":1,\"1450\":1}}],[\"我们定义了一个函数\",{\"1\":{\"426\":1,\"941\":1,\"1456\":1}}],[\"我们为\",{\"1\":{\"425\":1,\"940\":1,\"1455\":1}}],[\"我们在编写机器人时\",{\"1\":{\"424\":1,\"939\":1,\"1454\":1}}],[\"我们将使用\",{\"1\":{\"534\":1,\"1049\":1,\"1564\":1}}],[\"我们将重点介绍机器人功能实现\",{\"1\":{\"525\":1,\"1040\":1,\"1555\":1}}],[\"我们将简要介绍如何在不使用\",{\"1\":{\"506\":1,\"1021\":1,\"1536\":1}}],[\"我们将在最佳实践中介绍\",{\"1\":{\"424\":1,\"939\":1,\"1454\":1}}],[\"我们将在重载一节中介绍\",{\"1\":{\"423\":1,\"938\":1,\"1453\":1}}],[\"我们将介绍如何获取事件更多的信息以及根据事件类型进行不同的处理\",{\"1\":{\"422\":1,\"937\":1,\"1452\":1}}],[\"我们将介绍事件响应器的组成\",{\"1\":{\"84\":1,\"594\":1,\"1109\":1}}],[\"我们获取了\",{\"1\":{\"423\":1,\"938\":1,\"1453\":1}}],[\"我们实际可以获得的信息通常多于基类抽象方法所提供的\",{\"1\":{\"423\":1,\"938\":1,\"1453\":1}}],[\"我们仅需一行代码即可记录对应级别的日志\",{\"1\":{\"419\":1,\"934\":1,\"1449\":1}}],[\"我们已经成功定义了模型\",{\"1\":{\"2687\":1,\"2702\":1,\"2717\":1}}],[\"我们已经安装了\",{\"1\":{\"1929\":1,\"2298\":1,\"2667\":1}}],[\"我们已经通过依赖注入\",{\"1\":{\"532\":1,\"1047\":1,\"1562\":1}}],[\"我们已经介绍了如何安装和使用\",{\"1\":{\"506\":1,\"1021\":1,\"1536\":1}}],[\"我们已经介绍了事件响应器的基本用法以及响应规则\",{\"1\":{\"84\":1,\"594\":1,\"1109\":1}}],[\"我们已经了解了\",{\"1\":{\"432\":1,\"947\":1,\"1462\":1}}],[\"我们已经了解了如何获取事件信息以及使用平台接口\",{\"1\":{\"422\":1,\"937\":1,\"1452\":1}}],[\"我们已经了解了如何控制会话的更新\",{\"1\":{\"140\":1,\"650\":1,\"1165\":1}}],[\"我们就需要先构造一个消息序列\",{\"1\":{\"535\":1,\"1050\":1,\"1565\":1}}],[\"我们就需要使用更复杂的逻辑来更新响应事件类型\",{\"1\":{\"139\":1,\"649\":1,\"1164\":1}}],[\"我们就获得了一个可以响应\",{\"1\":{\"529\":1,\"1044\":1,\"1559\":1}}],[\"我们就获得一个名为\",{\"1\":{\"528\":1,\"1043\":1,\"1558\":1}}],[\"我们就使用了\",{\"1\":{\"423\":1,\"938\":1,\"1453\":1}}],[\"我们就可以执行迁移脚本\",{\"1\":{\"2686\":1,\"2701\":1,\"2716\":1}}],[\"我们就可以直接使用\",{\"1\":{\"124\":1,\"634\":1,\"1149\":1}}],[\"我们就可以收集所需要的插件信息了\",{\"1\":{\"111\":1,\"621\":1,\"1136\":1}}],[\"我们就可以通过修改事件参数类型注解来实现对不同事件的处理\",{\"1\":{\"424\":1,\"939\":1,\"1454\":1}}],[\"我们就可以通过\",{\"1\":{\"55\":1,\"565\":1,\"1080\":1}}],[\"我们并不希望在模块被导入时就执行一些耗时操作\",{\"1\":{\"127\":1,\"637\":1,\"1152\":1}}],[\"我们添加了一个\",{\"1\":{\"124\":1,\"634\":1,\"1149\":1}}],[\"我们添加一个\",{\"1\":{\"120\":1,\"121\":1,\"630\":1,\"631\":1,\"1145\":1,\"1146\":1}}],[\"我们了解了驱动器的两种类型\",{\"1\":{\"118\":1,\"628\":1,\"1143\":1}}],[\"我们必须在\",{\"1\":{\"116\":1,\"626\":1,\"1141\":1}}],[\"我们不需要对跨插件访问进行特殊处理\",{\"1\":{\"116\":1,\"626\":1,\"1141\":1}}],[\"我们不能在使用\",{\"1\":{\"116\":1,\"626\":1,\"1141\":1}}],[\"我们创建了一个\",{\"1\":{\"528\":1,\"1043\":1,\"1558\":1}}],[\"我们创建一个具有相同响应规则的响应器组\",{\"1\":{\"106\":1,\"616\":1,\"1131\":1}}],[\"我们创建\",{\"1\":{\"105\":1,\"615\":1,\"1130\":1}}],[\"我们需要在不同数据库后端上测试\",{\"1\":{\"2697\":1,\"2712\":1,\"2727\":1}}],[\"我们需要在插件顶层模块\",{\"1\":{\"110\":1,\"620\":1,\"1135\":1}}],[\"我们需要提交事务\",{\"1\":{\"2687\":1,\"2702\":1,\"2717\":1}}],[\"我们需要使用会话操作数据\",{\"1\":{\"2687\":1,\"2702\":1,\"2717\":1}}],[\"我们需要创建一个迁移脚本\",{\"1\":{\"2686\":1,\"2701\":1,\"2716\":1}}],[\"我们需要迁移数据库\",{\"1\":{\"2686\":1,\"2701\":1,\"2716\":1}}],[\"我们需要设计存储的数据的结构\",{\"1\":{\"2685\":1,\"2700\":1,\"2715\":1}}],[\"我们需要实现\",{\"1\":{\"476\":1,\"991\":1,\"1506\":1}}],[\"我们需要调用\",{\"1\":{\"474\":1,\"989\":1,\"1504\":1}}],[\"我们需要将适配器发布到\",{\"1\":{\"481\":1,\"996\":1,\"1511\":1}}],[\"我们需要将其转为适配器的\",{\"1\":{\"475\":1,\"990\":1,\"1505\":1}}],[\"我们需要将\",{\"1\":{\"474\":1,\"989\":1,\"1504\":1}}],[\"我们需要根据平台文档和特性选择合适的通信方式\",{\"1\":{\"471\":1,\"986\":1,\"1501\":1}}],[\"我们需要继承基类\",{\"1\":{\"470\":1,\"477\":1,\"478\":1,\"985\":1,\"992\":1,\"993\":1,\"1500\":1,\"1507\":1,\"1508\":1}}],[\"我们需要继承\",{\"1\":{\"464\":1,\"479\":1,\"979\":1,\"994\":1,\"1494\":1,\"1509\":1}}],[\"我们需要先了解一下插件的概念\",{\"1\":{\"511\":1,\"1026\":1,\"1541\":1}}],[\"我们需要先了解适配器的功能与组成\",{\"1\":{\"464\":1,\"979\":1,\"1494\":1}}],[\"我们需要先将适配器注册到驱动器中\",{\"1\":{\"38\":1,\"548\":1,\"1063\":1}}],[\"我们需要合并多个规则\",{\"1\":{\"428\":1,\"943\":1,\"1458\":1}}],[\"我们需要确保使用的平台接口与所要发送的平台类型一致\",{\"1\":{\"422\":1,\"937\":1,\"1452\":1}}],[\"我们需要移除\",{\"1\":{\"420\":1,\"935\":1,\"1450\":1}}],[\"我们需要自定义触发权限更新函数\",{\"1\":{\"140\":1,\"650\":1,\"1165\":1}}],[\"我们需要自定义响应事件类型更新函数\",{\"1\":{\"139\":1,\"649\":1,\"1164\":1}}],[\"我们需要注意驱动器是否为服务端类型\",{\"1\":{\"118\":1,\"628\":1,\"1143\":1}}],[\"我们需要注意驱动器的类型\",{\"1\":{\"118\":1,\"628\":1,\"1143\":1}}],[\"我们需要选择一个主要驱动器\",{\"1\":{\"54\":1,\"564\":1,\"1079\":1}}],[\"我们也希望随着新平台加入\",{\"1\":{\"488\":1,\"489\":1,\"1003\":1,\"1004\":1,\"1518\":1,\"1519\":1}}],[\"我们也无需担心合并了一个\",{\"1\":{\"428\":1,\"943\":1,\"1458\":1}}],[\"我们也可以像\",{\"1\":{\"2688\":1,\"2703\":1,\"2718\":1}}],[\"我们也可以主动使用响应规则来判断事件是否符合条件\",{\"1\":{\"429\":1,\"944\":1,\"1459\":1}}],[\"我们也可以选择不提供\",{\"1\":{\"100\":1,\"610\":1,\"1125\":1}}],[\"我们也可以通过依赖注入获得数据\",{\"1\":{\"2688\":1,\"2703\":1,\"2718\":1}}],[\"我们也可以通过参数指定\",{\"1\":{\"1941\":1,\"2310\":1,\"2679\":1}}],[\"我们也可以通过消息段或消息序列的\",{\"1\":{\"544\":1,\"1059\":1,\"1574\":1}}],[\"我们也可以通过消息序列的\",{\"1\":{\"543\":1,\"1058\":1,\"1573\":1}}],[\"我们也可以通过修改\",{\"1\":{\"424\":1,\"939\":1,\"1454\":1}}],[\"我们也可以通过\",{\"1\":{\"40\":1,\"109\":1,\"550\":1,\"619\":1,\"1065\":1,\"1134\":1}}],[\"我们也提到了如何使用基类抽象方法来获取事件通用信息\",{\"1\":{\"41\":1,\"551\":1,\"1066\":1}}],[\"我们以\",{\"1\":{\"38\":1,\"423\":1,\"424\":1,\"548\":1,\"938\":1,\"939\":1,\"1063\":1,\"1453\":1,\"1454\":1}}],[\"注解的标识符\",{\"1\":{\"1896\":1,\"2265\":1,\"2634\":1}}],[\"注\",{\"1\":{\"492\":1,\"493\":1,\"1007\":1,\"1008\":1,\"1522\":1,\"1523\":1}}],[\"注册一个新的\",{\"1\":{\"1878\":1,\"2247\":1,\"2616\":1}}],[\"注册一个新的命令\",{\"1\":{\"1877\":1,\"2246\":1,\"2615\":1}}],[\"注册一个事件响应器\",{\"1\":{\"1875\":1,\"1892\":1,\"2244\":1,\"2261\":1,\"2613\":1,\"2630\":1}}],[\"注册一个支持\",{\"1\":{\"1873\":1,\"1890\":1,\"2242\":1,\"2259\":1,\"2611\":1,\"2628\":1}}],[\"注册一个请求事件响应器\",{\"1\":{\"1867\":1,\"1884\":1,\"2236\":1,\"2253\":1,\"2605\":1,\"2622\":1}}],[\"注册一个通知事件响应器\",{\"1\":{\"1866\":1,\"1883\":1,\"2235\":1,\"2252\":1,\"2604\":1,\"2621\":1}}],[\"注册一个消息事件响应器\",{\"1\":{\"1865\":1,\"1868\":1,\"1869\":1,\"1870\":1,\"1871\":1,\"1872\":1,\"1874\":1,\"1882\":1,\"1885\":1,\"1886\":1,\"1887\":1,\"1888\":1,\"1889\":1,\"1891\":1,\"2234\":1,\"2237\":1,\"2238\":1,\"2239\":1,\"2240\":1,\"2241\":1,\"2243\":1,\"2251\":1,\"2254\":1,\"2255\":1,\"2256\":1,\"2257\":1,\"2258\":1,\"2260\":1,\"2603\":1,\"2606\":1,\"2607\":1,\"2608\":1,\"2609\":1,\"2610\":1,\"2612\":1,\"2620\":1,\"2623\":1,\"2624\":1,\"2625\":1,\"2626\":1,\"2627\":1,\"2629\":1}}],[\"注册一个元事件响应器\",{\"1\":{\"1864\":1,\"1881\":1,\"2233\":1,\"2250\":1,\"2602\":1,\"2619\":1}}],[\"注册一个基础事件响应器\",{\"1\":{\"1863\":1,\"1880\":1,\"2232\":1,\"2249\":1,\"2601\":1,\"2618\":1}}],[\"注册一个停止时执行的函数\",{\"1\":{\"1725\":1,\"2104\":1,\"2473\":1}}],[\"注册一个启动时执行的函数\",{\"1\":{\"1724\":1,\"2103\":1,\"2472\":1}}],[\"注册一个协议适配器\",{\"1\":{\"1720\":1,\"2099\":1,\"2468\":1}}],[\"注册并创建一个新的项目\",{\"1\":{\"447\":1,\"962\":1,\"1477\":1}}],[\"注册适配器\",{\"0\":{\"38\":1,\"548\":1,\"1063\":1},\"1\":{\"509\":2,\"1024\":2,\"1539\":2,\"1576\":1,\"1945\":1,\"2314\":1}}],[\"注意\",{\"1\":{\"78\":1,\"79\":1,\"423\":1,\"424\":1,\"448\":1,\"454\":1,\"515\":2,\"517\":1,\"518\":1,\"533\":1,\"534\":1,\"545\":2,\"588\":1,\"589\":1,\"938\":1,\"939\":1,\"963\":1,\"969\":1,\"1030\":2,\"1032\":1,\"1033\":1,\"1048\":1,\"1049\":1,\"1060\":2,\"1103\":1,\"1104\":1,\"1453\":1,\"1454\":1,\"1478\":1,\"1484\":1,\"1545\":2,\"1547\":1,\"1548\":1,\"1563\":1,\"1564\":1,\"1575\":2,\"1926\":1,\"1939\":1,\"2295\":1,\"2308\":1,\"2664\":1,\"2677\":1,\"2686\":1,\"2687\":1,\"2696\":1,\"2701\":1,\"2702\":1,\"2711\":1,\"2716\":1,\"2717\":1,\"2726\":1}}],[\"注入参数\",{\"1\":{\"298\":1,\"299\":1,\"300\":1,\"808\":1,\"812\":1,\"816\":1,\"1323\":1,\"1327\":1,\"1331\":1}}],[\"注入\",{\"1\":{\"7\":1,\"19\":1,\"31\":1}}],[\"以外的语句\",{\"1\":{\"2695\":1,\"2710\":1,\"2725\":1}}],[\"以避免对其他测试产生影响\",{\"1\":{\"1941\":1,\"2310\":1,\"2679\":1}}],[\"以pip为例\",{\"1\":{\"1913\":1,\"2282\":1,\"2651\":1}}],[\"以上配置之间有覆盖关系\",{\"1\":{\"1939\":1,\"2308\":1,\"2677\":1}}],[\"以上下文管理器方式配置命名空间\",{\"1\":{\"1905\":1,\"2274\":1,\"2643\":1}}],[\"以上版本\",{\"1\":{\"0\":1,\"12\":1,\"24\":1}}],[\"以保证计数器的正确性\",{\"1\":{\"1901\":1,\"2270\":1,\"2639\":1}}],[\"以保证追加的正确性\",{\"1\":{\"1901\":1,\"2270\":1,\"2639\":1}}],[\"以携带对于该参数的更多信息\",{\"1\":{\"1899\":1,\"2268\":1,\"2637\":1}}],[\"以方便用户调用\",{\"1\":{\"1896\":1,\"2265\":1,\"2634\":1}}],[\"以满足适配器使用\",{\"1\":{\"1737\":1,\"2083\":1,\"2452\":1}}],[\"以适应不同平台中的消息模式\",{\"1\":{\"533\":1,\"1048\":1,\"1563\":1}}],[\"以\",{\"1\":{\"507\":1,\"1022\":1,\"1537\":1,\"1817\":1,\"1818\":1,\"1819\":1,\"1820\":1,\"1896\":1,\"2186\":1,\"2187\":1,\"2188\":1,\"2189\":1,\"2265\":1,\"2555\":1,\"2556\":1,\"2557\":1,\"2558\":1,\"2634\":1}}],[\"以提升搜索引擎优化\",{\"1\":{\"503\":1,\"1018\":1,\"1533\":1}}],[\"以网页的形式帮助用户开发\",{\"1\":{\"499\":1,\"1014\":1,\"1529\":1}}],[\"以应对平台事件数据的变更\",{\"1\":{\"475\":1,\"990\":1,\"1505\":1}}],[\"以下是建议的输入\",{\"1\":{\"1912\":1,\"2281\":1,\"2650\":1}}],[\"以下是为加载插件提供的几种方式\",{\"1\":{\"516\":1,\"1031\":1,\"1546\":1}}],[\"以下简称命名空间\",{\"1\":{\"1904\":1,\"2273\":1,\"2642\":1}}],[\"以下步骤均在该文件夹中进行\",{\"1\":{\"506\":1,\"1021\":1,\"1536\":1}}],[\"以下数据目录配置项默认值将会对应变更\",{\"1\":{\"437\":1,\"952\":1,\"1467\":1}}],[\"以下内容可以直接通过本模块导入\",{\"1\":{\"216\":1,\"728\":1,\"1243\":1,\"1809\":1,\"2178\":1,\"2547\":1}}],[\"以便我们在不同的环境中\",{\"1\":{\"2686\":1,\"2701\":1,\"2716\":1}}],[\"以便其他开发者使用我们的适配器\",{\"1\":{\"481\":1,\"996\":1,\"1511\":1}}],[\"以便及时发现问题并进行修复\",{\"1\":{\"444\":1,\"959\":1,\"1474\":1}}],[\"以便在会话中的不同阶段进行判断和处理\",{\"1\":{\"431\":1,\"946\":1,\"1461\":1}}],[\"以便机器人插件处理\",{\"1\":{\"37\":1,\"479\":1,\"547\":1,\"994\":1,\"1062\":1,\"1509\":1}}],[\"以事件响应器列表为值的映射\",{\"1\":{\"82\":1,\"592\":1,\"1107\":1}}],[\"以及他们小写形式\",{\"1\":{\"1897\":1,\"2266\":1,\"2635\":1}}],[\"以及机器人生命周期管理\",{\"1\":{\"1716\":1,\"2095\":1,\"2464\":1}}],[\"以及所有给定目录下的插件\",{\"1\":{\"519\":1,\"1034\":1,\"1549\":1}}],[\"以及驱动器\",{\"1\":{\"507\":1,\"1022\":1,\"1537\":1}}],[\"以及正确创建\",{\"1\":{\"470\":1,\"985\":1,\"1500\":1}}],[\"以及python\",{\"1\":{\"162\":1,\"672\":1,\"1187\":1}}],[\"以及返回体信息\",{\"1\":{\"120\":1,\"630\":1,\"1145\":1}}],[\"以及如何获取插件信息\",{\"1\":{\"109\":1,\"619\":1,\"1134\":1}}],[\"以及\",{\"1\":{\"108\":1,\"224\":1,\"226\":1,\"488\":1,\"489\":1,\"508\":1,\"618\":1,\"736\":1,\"738\":1,\"1003\":1,\"1004\":1,\"1023\":1,\"1133\":1,\"1251\":1,\"1253\":1,\"1518\":1,\"1519\":1,\"1538\":1,\"1819\":1,\"1820\":1,\"2188\":1,\"2189\":1,\"2557\":1,\"2558\":1}}],[\"以及是否启用该功能\",{\"1\":{\"64\":1,\"574\":1,\"1089\":1}}],[\"以及事件主体对象\",{\"1\":{\"37\":1,\"547\":1,\"1062\":1}}],[\"effective\",{\"1\":{\"1931\":1,\"2300\":1,\"2669\":1}}],[\"eval\",{\"1\":{\"1909\":9,\"2278\":9,\"2647\":9}}],[\"every\",{\"1\":{\"454\":3,\"969\":3,\"1484\":3}}],[\"eventmessage\",{\"1\":{\"367\":2,\"534\":1,\"882\":2,\"1049\":1,\"1397\":2,\"1564\":1}}],[\"eventparam\",{\"1\":{\"387\":1,\"388\":1,\"389\":1,\"390\":1,\"391\":1,\"392\":1,\"394\":1,\"395\":1,\"902\":1,\"903\":1,\"904\":1,\"905\":1,\"906\":1,\"907\":1,\"909\":1,\"910\":1,\"1417\":1,\"1418\":1,\"1419\":1,\"1420\":1,\"1421\":1,\"1422\":1,\"1424\":1,\"1425\":1}}],[\"eventpostprocessor\",{\"1\":{\"289\":2,\"388\":1,\"801\":2,\"903\":1,\"1316\":2,\"1418\":1}}],[\"eventpreprocessor\",{\"1\":{\"288\":2,\"387\":1,\"800\":2,\"902\":1,\"1315\":2,\"1417\":1}}],[\"event\",{\"0\":{\"475\":1,\"478\":1,\"990\":1,\"993\":1,\"1505\":1,\"1508\":1},\"1\":{\"37\":1,\"41\":1,\"42\":2,\"43\":2,\"44\":2,\"45\":1,\"46\":1,\"47\":1,\"48\":1,\"49\":1,\"50\":1,\"86\":1,\"132\":5,\"133\":4,\"134\":3,\"135\":2,\"140\":4,\"209\":2,\"242\":1,\"244\":2,\"245\":2,\"259\":4,\"260\":2,\"261\":4,\"267\":2,\"268\":2,\"270\":2,\"271\":2,\"272\":2,\"292\":3,\"293\":5,\"300\":2,\"331\":3,\"335\":3,\"343\":2,\"349\":3,\"370\":1,\"371\":1,\"387\":1,\"388\":1,\"389\":1,\"390\":1,\"391\":1,\"392\":1,\"394\":1,\"395\":1,\"423\":4,\"424\":3,\"427\":4,\"429\":1,\"464\":1,\"465\":1,\"467\":1,\"475\":17,\"477\":11,\"478\":15,\"528\":1,\"534\":1,\"547\":1,\"551\":1,\"552\":2,\"553\":2,\"554\":2,\"555\":1,\"556\":1,\"557\":1,\"558\":1,\"559\":1,\"560\":1,\"596\":1,\"642\":5,\"643\":4,\"644\":3,\"645\":2,\"650\":4,\"721\":2,\"755\":1,\"757\":2,\"758\":2,\"772\":4,\"773\":2,\"774\":4,\"780\":2,\"781\":2,\"783\":2,\"784\":2,\"785\":2,\"804\":3,\"805\":5,\"816\":2,\"847\":3,\"849\":3,\"858\":2,\"864\":3,\"885\":1,\"886\":1,\"902\":1,\"903\":1,\"904\":1,\"905\":1,\"906\":1,\"907\":1,\"909\":1,\"910\":1,\"938\":4,\"939\":3,\"942\":4,\"944\":1,\"979\":1,\"980\":1,\"982\":1,\"990\":17,\"992\":11,\"993\":15,\"1043\":1,\"1049\":1,\"1062\":1,\"1066\":1,\"1067\":2,\"1068\":2,\"1069\":2,\"1070\":1,\"1071\":1,\"1072\":1,\"1073\":1,\"1074\":1,\"1075\":1,\"1111\":1,\"1157\":5,\"1158\":4,\"1159\":3,\"1160\":2,\"1165\":4,\"1236\":2,\"1270\":1,\"1272\":2,\"1273\":2,\"1287\":4,\"1288\":2,\"1289\":4,\"1295\":2,\"1296\":2,\"1298\":2,\"1299\":2,\"1300\":2,\"1319\":3,\"1320\":5,\"1331\":2,\"1362\":3,\"1364\":3,\"1373\":2,\"1379\":3,\"1400\":1,\"1401\":1,\"1417\":1,\"1418\":1,\"1419\":1,\"1420\":1,\"1421\":1,\"1422\":1,\"1424\":1,\"1425\":1,\"1453\":4,\"1454\":3,\"1457\":4,\"1459\":1,\"1494\":1,\"1495\":1,\"1497\":1,\"1505\":17,\"1507\":11,\"1508\":15,\"1558\":1,\"1564\":1,\"1583\":2,\"1586\":1,\"1875\":2,\"1892\":2,\"1964\":2,\"1967\":1,\"2244\":2,\"2261\":2,\"2333\":2,\"2336\":1,\"2613\":2,\"2630\":2}}],[\"email\",{\"1\":{\"1897\":1,\"2266\":1,\"2635\":1}}],[\"emoji\",{\"1\":{\"545\":5,\"1060\":5,\"1575\":5}}],[\"empty\",{\"1\":{\"153\":1,\"217\":1,\"219\":1,\"220\":1,\"221\":1,\"223\":1,\"233\":1,\"243\":1,\"258\":1,\"261\":1,\"265\":1,\"266\":1,\"269\":1,\"274\":1,\"275\":1,\"276\":1,\"277\":1,\"280\":1,\"281\":1,\"307\":1,\"308\":1,\"309\":1,\"310\":1,\"311\":1,\"312\":1,\"313\":1,\"314\":1,\"315\":1,\"316\":1,\"317\":1,\"318\":1,\"320\":1,\"321\":1,\"322\":1,\"323\":1,\"324\":1,\"325\":1,\"369\":1,\"663\":1,\"729\":1,\"731\":1,\"732\":1,\"733\":1,\"735\":1,\"746\":1,\"756\":1,\"771\":1,\"774\":1,\"778\":1,\"779\":1,\"782\":1,\"786\":1,\"787\":1,\"788\":1,\"789\":1,\"792\":1,\"793\":1,\"820\":1,\"821\":1,\"822\":1,\"823\":1,\"824\":1,\"825\":1,\"826\":1,\"827\":1,\"828\":1,\"829\":1,\"830\":1,\"831\":1,\"833\":1,\"834\":1,\"835\":1,\"836\":1,\"837\":1,\"838\":1,\"842\":1,\"884\":1,\"1178\":1,\"1244\":1,\"1246\":1,\"1247\":1,\"1248\":1,\"1250\":1,\"1261\":1,\"1271\":1,\"1286\":1,\"1289\":1,\"1293\":1,\"1294\":1,\"1297\":1,\"1301\":1,\"1302\":1,\"1303\":1,\"1304\":1,\"1307\":1,\"1308\":1,\"1335\":1,\"1336\":1,\"1337\":1,\"1338\":1,\"1339\":1,\"1340\":1,\"1341\":1,\"1342\":1,\"1343\":1,\"1344\":1,\"1345\":1,\"1346\":1,\"1348\":1,\"1349\":1,\"1350\":1,\"1351\":1,\"1352\":1,\"1353\":1,\"1357\":1,\"1399\":1,\"1587\":1,\"1588\":1,\"1589\":1,\"1590\":1,\"1591\":1,\"1592\":1,\"1593\":1,\"1594\":1,\"1595\":1,\"1599\":1,\"1610\":1,\"1622\":1,\"1625\":1,\"1629\":1,\"1630\":1,\"1633\":1,\"1634\":1,\"1635\":1,\"1637\":1,\"1638\":1,\"1661\":1,\"1662\":1,\"1668\":1,\"1670\":1,\"1671\":1,\"1672\":1,\"1697\":1,\"1699\":1,\"1700\":1,\"1701\":1,\"1707\":1,\"1708\":1,\"1744\":1,\"1746\":1,\"1747\":1,\"1748\":1,\"1788\":1,\"1790\":1,\"1791\":1,\"1792\":1,\"1800\":1,\"1802\":1,\"1803\":1,\"1804\":1,\"1812\":1,\"1813\":1,\"1832\":1,\"1848\":1,\"1899\":1,\"1949\":1,\"1968\":1,\"1969\":1,\"1970\":1,\"1971\":1,\"1972\":1,\"1973\":1,\"1974\":1,\"1975\":1,\"1976\":1,\"1979\":1,\"1991\":1,\"1994\":1,\"1998\":1,\"1999\":1,\"2002\":1,\"2003\":1,\"2004\":1,\"2006\":1,\"2007\":1,\"2030\":1,\"2031\":1,\"2037\":1,\"2039\":1,\"2040\":1,\"2041\":1,\"2066\":1,\"2068\":1,\"2069\":1,\"2070\":1,\"2076\":1,\"2077\":1,\"2122\":1,\"2124\":1,\"2125\":1,\"2126\":1,\"2157\":1,\"2159\":1,\"2160\":1,\"2161\":1,\"2169\":1,\"2171\":1,\"2172\":1,\"2173\":1,\"2181\":1,\"2182\":1,\"2201\":1,\"2217\":1,\"2268\":1,\"2318\":1,\"2337\":1,\"2338\":1,\"2339\":1,\"2340\":1,\"2341\":1,\"2342\":1,\"2343\":1,\"2344\":1,\"2345\":1,\"2348\":1,\"2360\":1,\"2363\":1,\"2367\":1,\"2368\":1,\"2371\":1,\"2372\":1,\"2373\":1,\"2375\":1,\"2376\":1,\"2399\":1,\"2400\":1,\"2406\":1,\"2408\":1,\"2409\":1,\"2410\":1,\"2435\":1,\"2437\":1,\"2438\":1,\"2439\":1,\"2445\":1,\"2446\":1,\"2491\":1,\"2493\":1,\"2494\":1,\"2495\":1,\"2526\":1,\"2528\":1,\"2529\":1,\"2530\":1,\"2538\":1,\"2540\":1,\"2541\":1,\"2542\":1,\"2550\":1,\"2551\":1,\"2570\":1,\"2586\":1,\"2637\":1}}],[\"echo=true\",{\"1\":{\"1939\":1,\"2308\":1,\"2677\":1}}],[\"echo\",{\"0\":{\"1939\":1,\"2308\":1,\"2677\":1},\"1\":{\"509\":1,\"515\":1,\"522\":1,\"523\":1,\"526\":2,\"1024\":1,\"1030\":1,\"1037\":1,\"1038\":1,\"1041\":2,\"1539\":1,\"1545\":1,\"1552\":1,\"1553\":1,\"1556\":2,\"1909\":7,\"1937\":2,\"1938\":1,\"1939\":3,\"2278\":7,\"2306\":2,\"2307\":1,\"2308\":3,\"2647\":7,\"2675\":2,\"2676\":1,\"2677\":3}}],[\"escape\",{\"1\":{\"478\":1,\"479\":1,\"993\":1,\"994\":1,\"1508\":1,\"1509\":1}}],[\"else\",{\"1\":{\"431\":1,\"946\":1,\"1461\":1}}],[\"ellipsis\",{\"1\":{\"142\":1,\"652\":1,\"1167\":1,\"1901\":2,\"2270\":2,\"2639\":2}}],[\"error\",{\"1\":{\"419\":4,\"420\":2,\"468\":2,\"472\":3,\"475\":1,\"934\":4,\"935\":2,\"983\":2,\"987\":3,\"990\":1,\"1449\":4,\"1450\":2,\"1498\":2,\"1502\":3,\"1505\":1,\"1902\":2,\"2271\":2,\"2640\":2,\"2686\":2,\"2701\":2,\"2716\":2}}],[\"err\",{\"1\":{\"408\":4,\"923\":4,\"1438\":4}}],[\"err=none\",{\"1\":{\"408\":1,\"923\":1,\"1438\":1}}],[\"engine\",{\"0\":{\"1938\":1,\"2307\":1,\"2676\":1},\"1\":{\"1937\":1,\"1938\":2,\"1939\":1,\"2306\":1,\"2307\":2,\"2308\":1,\"2675\":1,\"2676\":2,\"2677\":1}}],[\"enumeration\",{\"1\":{\"1752\":1,\"2113\":1,\"2482\":1}}],[\"end\",{\"1\":{\"1615\":1,\"1984\":1,\"2353\":1,\"2686\":4,\"2701\":4,\"2716\":4}}],[\"endswith\",{\"1\":{\"96\":5,\"192\":1,\"216\":2,\"606\":5,\"704\":1,\"728\":2,\"1121\":5,\"1219\":1,\"1243\":2,\"1809\":2,\"2178\":2,\"2547\":2}}],[\"entrypoint\",{\"1\":{\"509\":1,\"1024\":1,\"1539\":1}}],[\"enabled\",{\"1\":{\"426\":2,\"427\":1,\"428\":1,\"941\":2,\"942\":1,\"943\":1,\"1456\":2,\"1457\":1,\"1458\":1}}],[\"enable\",{\"0\":{\"1923\":1,\"2292\":1,\"2661\":1},\"1\":{\"426\":4,\"427\":2,\"428\":3,\"941\":4,\"942\":2,\"943\":3,\"1456\":4,\"1457\":2,\"1458\":3,\"1904\":1,\"2273\":1,\"2642\":1}}],[\"encoding=\",{\"1\":{\"520\":1,\"521\":1,\"1035\":1,\"1036\":1,\"1550\":1,\"1551\":1}}],[\"encoding\",{\"1\":{\"163\":1,\"165\":1,\"673\":1,\"675\":1,\"1188\":1,\"1190\":1,\"1819\":1,\"1820\":1,\"2188\":1,\"2189\":1,\"2557\":1,\"2558\":1}}],[\"environment\",{\"1\":{\"164\":1,\"165\":1,\"449\":1,\"674\":1,\"675\":1,\"964\":1,\"1189\":1,\"1190\":1,\"1479\":1}}],[\"env\",{\"1\":{\"163\":3,\"164\":1,\"165\":4,\"224\":6,\"449\":1,\"508\":1,\"673\":3,\"674\":1,\"675\":4,\"736\":6,\"964\":1,\"1023\":1,\"1188\":3,\"1189\":1,\"1190\":4,\"1251\":6,\"1479\":1,\"1538\":1,\"1675\":2,\"1688\":2,\"1712\":2,\"1716\":3,\"1766\":2,\"1779\":2,\"1807\":2,\"2044\":2,\"2057\":2,\"2081\":2,\"2095\":3,\"2135\":2,\"2148\":2,\"2176\":2,\"2413\":2,\"2426\":2,\"2450\":2,\"2464\":3,\"2504\":2,\"2517\":2,\"2545\":2,\"2697\":6,\"2712\":6,\"2727\":6}}],[\"e\",{\"1\":{\"121\":1,\"410\":2,\"468\":2,\"472\":6,\"475\":1,\"631\":1,\"925\":2,\"983\":2,\"987\":6,\"990\":1,\"1146\":1,\"1440\":2,\"1498\":2,\"1502\":6,\"1505\":1}}],[\"execute\",{\"1\":{\"2696\":12,\"2711\":12,\"2726\":12}}],[\"exiting\",{\"1\":{\"2686\":1,\"2701\":1,\"2716\":1}}],[\"extend\",{\"1\":{\"544\":2,\"1059\":2,\"1574\":2}}],[\"extensions\",{\"0\":{\"1921\":1,\"2290\":1,\"2659\":1},\"1\":{\"470\":1,\"472\":1,\"476\":1,\"477\":1,\"478\":1,\"479\":1,\"985\":1,\"987\":1,\"991\":1,\"992\":1,\"993\":1,\"994\":1,\"1500\":1,\"1502\":1,\"1506\":1,\"1507\":1,\"1508\":1,\"1509\":1}}],[\"extract\",{\"1\":{\"532\":1,\"539\":2,\"1047\":1,\"1054\":2,\"1562\":1,\"1569\":2,\"1594\":1,\"1975\":1,\"2344\":1,\"2687\":3,\"2688\":6,\"2702\":3,\"2703\":6,\"2717\":3,\"2718\":6}}],[\"extra\",{\"1\":{\"110\":2,\"146\":1,\"147\":1,\"620\":2,\"656\":1,\"657\":1,\"1135\":2,\"1171\":1,\"1172\":1,\"1903\":1,\"2272\":1,\"2641\":1}}],[\"extra=\",{\"1\":{\"110\":1,\"620\":1,\"1135\":1}}],[\"exc\",{\"1\":{\"408\":5,\"410\":1,\"923\":5,\"925\":1,\"1438\":5,\"1440\":1}}],[\"exclude\",{\"1\":{\"158\":4,\"449\":1,\"543\":2,\"668\":4,\"964\":1,\"1058\":2,\"1183\":4,\"1479\":1,\"1573\":2}}],[\"exceptions\",{\"1\":{\"2686\":1,\"2701\":1,\"2716\":1}}],[\"exception=true\",{\"1\":{\"419\":1,\"934\":1,\"1449\":1}}],[\"exceptionparam\",{\"1\":{\"390\":1,\"905\":1,\"1420\":1}}],[\"exception\",{\"0\":{\"195\":1,\"707\":1,\"1222\":1},\"1\":{\"121\":1,\"132\":2,\"134\":2,\"135\":2,\"136\":1,\"137\":4,\"208\":1,\"306\":2,\"386\":2,\"408\":2,\"417\":1,\"419\":2,\"468\":1,\"472\":3,\"475\":1,\"631\":1,\"642\":2,\"644\":2,\"645\":2,\"646\":1,\"647\":4,\"720\":1,\"817\":2,\"901\":2,\"923\":2,\"932\":1,\"934\":2,\"983\":1,\"987\":3,\"990\":1,\"1146\":1,\"1157\":2,\"1159\":2,\"1160\":2,\"1161\":1,\"1162\":4,\"1235\":1,\"1332\":2,\"1416\":2,\"1438\":2,\"1447\":1,\"1449\":2,\"1498\":1,\"1502\":3,\"1505\":1,\"1585\":1,\"1903\":1,\"1904\":1,\"1966\":1,\"2272\":1,\"2273\":1,\"2335\":1,\"2641\":1,\"2642\":1}}],[\"except\",{\"1\":{\"121\":1,\"419\":1,\"468\":1,\"472\":3,\"475\":1,\"631\":1,\"934\":1,\"983\":1,\"987\":3,\"990\":1,\"1146\":1,\"1449\":1,\"1498\":1,\"1502\":3,\"1505\":1}}],[\"example=\",{\"1\":{\"1903\":1,\"2272\":1,\"2641\":1}}],[\"example\",{\"1\":{\"110\":3,\"111\":2,\"620\":3,\"621\":2,\"1135\":3,\"1136\":2,\"1903\":1,\"2272\":1,\"2641\":1}}],[\"expire\",{\"1\":{\"91\":3,\"93\":1,\"175\":2,\"242\":1,\"601\":3,\"603\":1,\"685\":2,\"755\":1,\"1116\":3,\"1118\":1,\"1200\":2,\"1270\":1,\"1863\":1,\"1864\":1,\"1865\":1,\"1866\":1,\"1867\":1,\"1868\":1,\"1869\":1,\"1870\":1,\"1871\":1,\"1872\":1,\"1873\":1,\"1874\":1,\"1875\":1,\"1876\":1,\"1877\":1,\"1878\":1,\"1879\":1,\"1880\":1,\"1881\":1,\"1882\":1,\"1883\":1,\"1884\":1,\"1885\":1,\"1886\":1,\"1887\":1,\"1888\":1,\"1889\":1,\"1890\":1,\"1891\":1,\"1892\":1,\"2232\":1,\"2233\":1,\"2234\":1,\"2235\":1,\"2236\":1,\"2237\":1,\"2238\":1,\"2239\":1,\"2240\":1,\"2241\":1,\"2242\":1,\"2243\":1,\"2244\":1,\"2245\":1,\"2246\":1,\"2247\":1,\"2248\":1,\"2249\":1,\"2250\":1,\"2251\":1,\"2252\":1,\"2253\":1,\"2254\":1,\"2255\":1,\"2256\":1,\"2257\":1,\"2258\":1,\"2259\":1,\"2260\":1,\"2261\":1,\"2601\":1,\"2602\":1,\"2603\":1,\"2604\":1,\"2605\":1,\"2606\":1,\"2607\":1,\"2608\":1,\"2609\":1,\"2610\":1,\"2611\":1,\"2612\":1,\"2613\":1,\"2614\":1,\"2615\":1,\"2616\":1,\"2617\":1,\"2618\":1,\"2619\":1,\"2620\":1,\"2621\":1,\"2622\":1,\"2623\":1,\"2624\":1,\"2625\":1,\"2626\":1,\"2627\":1,\"2628\":1,\"2629\":1,\"2630\":1}}],[\"editable\",{\"1\":{\"480\":1,\"995\":1,\"1510\":1}}],[\"edit\",{\"1\":{\"11\":1,\"23\":1,\"35\":1}}],[\"负责命令参数的类型检查与类型转化\",{\"1\":{\"1897\":1,\"2266\":1,\"2635\":1}}],[\"负责将平台消息与\",{\"1\":{\"525\":1,\"1040\":1,\"1555\":1}}],[\"负责接收和发送消息\",{\"1\":{\"525\":1,\"1040\":1,\"1555\":1}}],[\"负责连接各个组成部分\",{\"1\":{\"525\":1,\"1040\":1,\"1555\":1}}],[\"负责转换事件\",{\"1\":{\"470\":1,\"985\":1,\"1500\":1}}],[\"负责转换事件和调用接口\",{\"1\":{\"37\":1,\"547\":1,\"1062\":1}}],[\"负责正确序列化消息\",{\"1\":{\"37\":1,\"479\":1,\"547\":1,\"994\":1,\"1062\":1,\"1509\":1}}],[\"负责定义事件内容\",{\"1\":{\"37\":1,\"547\":1,\"1062\":1}}],[\"负责存储平台机器人相关信息\",{\"1\":{\"37\":1,\"477\":1,\"547\":1,\"992\":1,\"1062\":1,\"1507\":1}}],[\"为关闭\",{\"1\":{\"1903\":1,\"1922\":1,\"2272\":1,\"2291\":1,\"2641\":1,\"2660\":1}}],[\"为消息段定义了一个方法\",{\"1\":{\"539\":1,\"1054\":1,\"1569\":1}}],[\"为确保消息的正常处理与跨平台兼容性\",{\"1\":{\"530\":1,\"1045\":1,\"1560\":1}}],[\"为事件响应器添加参数\",{\"0\":{\"529\":1,\"1044\":1,\"1559\":1}}],[\"为机器人提供具体的功能\",{\"1\":{\"506\":1,\"1021\":1,\"1536\":1}}],[\"为用户提供了详细的文档介绍\",{\"1\":{\"497\":1,\"1012\":1,\"1527\":1}}],[\"为用户提供了命令行脚手架\",{\"1\":{\"495\":1,\"1010\":1,\"1525\":1}}],[\"为具体的值或者\",{\"1\":{\"1895\":1,\"2264\":1,\"2633\":1}}],[\"为具体\",{\"1\":{\"475\":1,\"990\":1,\"1505\":1}}],[\"为保证兼容性\",{\"1\":{\"299\":1,\"300\":1,\"301\":1,\"305\":1,\"306\":1,\"812\":1,\"816\":1,\"817\":1,\"818\":1,\"819\":1,\"1327\":1,\"1331\":1,\"1332\":1,\"1333\":1,\"1334\":1}}],[\"为键\",{\"1\":{\"223\":1,\"735\":1,\"1250\":1}}],[\"为键的字典\",{\"1\":{\"40\":2,\"550\":2,\"1065\":2}}],[\"为方便使用\",{\"1\":{\"216\":1,\"728\":1,\"1243\":1,\"1809\":1,\"2178\":1,\"2547\":1}}],[\"为兼容\",{\"1\":{\"141\":1,\"651\":1,\"1166\":1}}],[\"为例\",{\"1\":{\"124\":1,\"507\":1,\"634\":1,\"1022\":1,\"1149\":1,\"1537\":1}}],[\"为其他插件编写提供功能\",{\"1\":{\"110\":1,\"620\":1,\"1135\":1}}],[\"为\",{\"1\":{\"99\":2,\"166\":1,\"203\":1,\"406\":1,\"407\":1,\"419\":1,\"438\":1,\"439\":1,\"440\":1,\"487\":1,\"609\":2,\"676\":1,\"715\":1,\"921\":1,\"922\":1,\"934\":1,\"953\":1,\"954\":1,\"955\":1,\"1002\":1,\"1124\":2,\"1191\":1,\"1230\":1,\"1436\":1,\"1437\":1,\"1449\":1,\"1468\":1,\"1469\":1,\"1470\":1,\"1517\":1,\"1846\":1,\"1897\":2,\"1903\":2,\"1909\":2,\"1910\":1,\"1922\":2,\"2215\":1,\"2266\":2,\"2272\":2,\"2278\":2,\"2279\":1,\"2291\":2,\"2584\":1,\"2635\":2,\"2641\":2,\"2647\":2,\"2648\":1,\"2660\":2}}],[\"为四种类型的事件响应器提供了五个基本的辅助函数\",{\"1\":{\"93\":1,\"603\":1,\"1118\":1}}],[\"为了提高项目的兼容性\",{\"1\":{\"2697\":1,\"2712\":1,\"2727\":1}}],[\"为了提供安全可靠的跨平台模板字符\",{\"1\":{\"545\":1,\"1060\":1,\"1575\":1}}],[\"为了更好的理解多种类型的消息组成方式\",{\"1\":{\"534\":1,\"1049\":1,\"1564\":1}}],[\"为了更方便的管理一系列功能相近的响应器\",{\"1\":{\"104\":1,\"614\":1,\"1129\":1}}],[\"为了解决初学者在使用面向开发者的聊天机器人框架\",{\"1\":{\"505\":1,\"1020\":1,\"1535\":1}}],[\"为了简化内置驱动器模块路径\",{\"1\":{\"54\":1,\"564\":1,\"1079\":1}}],[\"为了实现这两种功能\",{\"1\":{\"37\":1,\"547\":1,\"1062\":1}}],[\"为你的代码提供这些必要依赖\",{\"1\":{\"7\":1,\"19\":1,\"31\":1}}],[\"其对应的\",{\"1\":{\"1913\":1,\"2282\":1,\"2651\":1}}],[\"其自动支持\",{\"1\":{\"1910\":1,\"2279\":1,\"2648\":1}}],[\"其优先度低于\",{\"1\":{\"1904\":1,\"2273\":1,\"2642\":1}}],[\"其接收一个表示匹配失败的元素的参数\",{\"1\":{\"1899\":1,\"2268\":1,\"2637\":1}}],[\"其构造方法形如\",{\"1\":{\"1898\":3,\"2267\":3,\"2636\":3}}],[\"其与\",{\"1\":{\"1896\":1,\"2265\":1,\"2634\":1}}],[\"其与函数签名类似\",{\"1\":{\"1895\":1,\"2264\":1,\"2633\":1}}],[\"其有三种为\",{\"1\":{\"1896\":1,\"2265\":1,\"2634\":1}}],[\"其余是模版代码\",{\"1\":{\"2686\":1,\"2701\":1,\"2716\":1}}],[\"其余信息可直接获取\",{\"1\":{\"1586\":1,\"1967\":1,\"2336\":1}}],[\"其余参数均相同\",{\"1\":{\"93\":1,\"603\":1,\"1118\":1}}],[\"其它\",{\"1\":{\"495\":1,\"1010\":1,\"1525\":1}}],[\"其官方提供了丰富的聊天机器人\",{\"1\":{\"489\":1,\"1004\":1,\"1519\":1}}],[\"其强大的定时任务功能被广泛应用于各个场景\",{\"1\":{\"450\":1,\"965\":1,\"1480\":1}}],[\"其中有一个\",{\"1\":{\"2686\":1,\"2701\":1,\"2716\":1}}],[\"其中的\",{\"1\":{\"1897\":1,\"2266\":1,\"2635\":1}}],[\"其中的元素为\",{\"1\":{\"1897\":1,\"2266\":1,\"2635\":1}}],[\"其中包含的文件将在稍后章节中用到\",{\"1\":{\"515\":1,\"1030\":1,\"1545\":1}}],[\"其中是\",{\"1\":{\"328\":1,\"346\":1,\"843\":1,\"861\":1,\"1358\":1,\"1376\":1}}],[\"其中\",{\"1\":{\"37\":1,\"54\":1,\"117\":1,\"547\":1,\"564\":1,\"627\":1,\"1062\":1,\"1079\":1,\"1142\":1,\"1894\":1,\"1895\":1,\"1932\":1,\"1933\":1,\"2263\":1,\"2264\":1,\"2301\":1,\"2302\":1,\"2632\":1,\"2633\":1,\"2670\":1,\"2671\":1,\"2685\":2,\"2686\":1,\"2688\":1,\"2700\":2,\"2701\":1,\"2703\":1,\"2715\":2,\"2716\":1,\"2718\":1}}],[\"其他传递给适配器的参数\",{\"1\":{\"1720\":1,\"2099\":1,\"2468\":1}}],[\"其他由\",{\"1\":{\"1596\":1,\"1946\":1,\"2315\":1}}],[\"其他类型的消息段将会原样添加\",{\"1\":{\"545\":1,\"1060\":1,\"1575\":1}}],[\"其他部分均可按需选择\",{\"1\":{\"525\":1,\"1040\":1,\"1555\":1}}],[\"其他加载方式\",{\"0\":{\"524\":1,\"1039\":1,\"1554\":1}}],[\"其他项目如\",{\"1\":{\"499\":1,\"1014\":1,\"1529\":1}}],[\"其他插件可以通过约定\",{\"1\":{\"110\":1,\"620\":1,\"1135\":1}}],[\"其他则不会\",{\"1\":{\"90\":1,\"600\":1,\"1115\":1}}],[\"其他\",{\"0\":{\"11\":1,\"23\":1,\"35\":1}}],[\"是主键\",{\"1\":{\"2685\":1,\"2700\":1,\"2715\":1}}],[\"是可选参数\",{\"1\":{\"1932\":1,\"2301\":1,\"2670\":1}}],[\"是因为\",{\"1\":{\"1897\":1,\"2266\":1,\"2635\":1}}],[\"是用于声明命令参数的组件\",{\"1\":{\"1895\":1,\"2264\":1,\"2633\":1}}],[\"是用来初始化并运行机器人的\",{\"1\":{\"509\":1,\"1024\":1,\"1539\":1}}],[\"是对接收到的事件进行响应的基本单元\",{\"1\":{\"526\":1,\"1041\":1,\"1556\":1}}],[\"是中国科学院软件研究所发起的开源软件供应链点亮计划系列暑期活动\",{\"1\":{\"502\":1,\"1017\":1,\"1532\":1}}],[\"是中国科学院软件研究所与\",{\"1\":{\"482\":1,\"997\":1,\"1512\":1}}],[\"是由开源软件供应链点亮计划发起\",{\"1\":{\"494\":1,\"498\":1,\"1009\":1,\"1013\":1,\"1524\":1,\"1528\":1}}],[\"是以上两种方式的合体\",{\"1\":{\"476\":1,\"991\":1,\"1506\":1}}],[\"是若干个\",{\"1\":{\"427\":1,\"942\":1,\"1457\":1}}],[\"是\",{\"1\":{\"401\":3,\"421\":1,\"478\":1,\"520\":1,\"521\":1,\"916\":3,\"936\":1,\"993\":1,\"1035\":1,\"1036\":1,\"1431\":3,\"1451\":1,\"1508\":1,\"1550\":1,\"1551\":1,\"2686\":1,\"2701\":1,\"2716\":1}}],[\"是计算机程序设计术语\",{\"1\":{\"125\":1,\"635\":1,\"1150\":1}}],[\"是一段消息\",{\"1\":{\"533\":1,\"1048\":1,\"1563\":1}}],[\"是一款较为广泛使用的安全即时聊天软件\",{\"1\":{\"488\":1,\"1003\":1,\"1518\":1}}],[\"是一类提供了拓展响应规则的插件\",{\"1\":{\"108\":1,\"618\":1,\"1133\":1}}],[\"是一个特殊的依赖注入\",{\"1\":{\"2688\":1,\"2703\":1,\"2718\":1}}],[\"是一个特殊的标注\",{\"1\":{\"1898\":1,\"2267\":1,\"2636\":1}}],[\"是一个有作用域限制的会话\",{\"1\":{\"2687\":1,\"2702\":1,\"2717\":1}}],[\"是一个返回值为\",{\"1\":{\"426\":1,\"941\":1,\"1456\":1}}],[\"是一个插件化的框架\",{\"1\":{\"109\":1,\"619\":1,\"1134\":1}}],[\"是一个简单\",{\"1\":{\"108\":1,\"618\":1,\"1133\":1,\"1893\":1,\"2262\":1,\"2631\":1}}],[\"是一个布尔值\",{\"1\":{\"90\":1,\"91\":1,\"600\":1,\"601\":1,\"1115\":1,\"1116\":1}}],[\"是一个正整数\",{\"1\":{\"89\":1,\"599\":1,\"1114\":1}}],[\"是一个\",{\"1\":{\"87\":1,\"88\":1,\"91\":1,\"92\":1,\"450\":1,\"597\":1,\"598\":1,\"601\":1,\"602\":1,\"965\":1,\"1112\":1,\"1113\":1,\"1116\":1,\"1117\":1,\"1480\":1}}],[\"是一个类\",{\"1\":{\"70\":1,\"580\":1,\"1095\":1}}],[\"是一个易上手\",{\"1\":{\"58\":1,\"568\":1,\"1083\":1}}],[\"是一个现代\",{\"1\":{\"0\":1,\"12\":1,\"24\":1}}],[\"是最常用的响应规则\",{\"1\":{\"99\":1,\"609\":1,\"1124\":1}}],[\"是否启动时拉取一次发送对象列表\",{\"1\":{\"1925\":1,\"2294\":1,\"2663\":1}}],[\"是否启用文件托管\",{\"1\":{\"1924\":1,\"2293\":1,\"2662\":1}}],[\"是否启用\",{\"1\":{\"1923\":1,\"2292\":1,\"2661\":1}}],[\"是否全局使用原始消息\",{\"1\":{\"1919\":1,\"2288\":1,\"2657\":1}}],[\"是否全局启用命令自动补全\",{\"1\":{\"1918\":1,\"2287\":1,\"2656\":1}}],[\"是否全局启用输出信息自动发送\",{\"1\":{\"1916\":1,\"2285\":1,\"2654\":1}}],[\"是否读取\",{\"1\":{\"1917\":1,\"1920\":1,\"2286\":1,\"2289\":1,\"2655\":1,\"2658\":1}}],[\"是否调用时保留指令前缀\",{\"1\":{\"1907\":1,\"2276\":1,\"2645\":1}}],[\"是否允许命令后随参数\",{\"1\":{\"1907\":1,\"2276\":1,\"2645\":1}}],[\"是否允许在模板中访问私有属性\",{\"1\":{\"1639\":1,\"2008\":1,\"2377\":1}}],[\"是否匹配成功\",{\"1\":{\"1902\":1,\"2271\":1,\"2640\":1}}],[\"是否包含适配器路由的\",{\"1\":{\"1681\":1,\"2050\":1,\"2419\":1}}],[\"是否仅包含指定消息段\",{\"1\":{\"1618\":1,\"1987\":1,\"2356\":1}}],[\"是否仅包含指定类型的消息段\",{\"1\":{\"542\":1,\"1057\":1,\"1572\":1}}],[\"是否都为指定消息段\",{\"1\":{\"542\":1,\"1057\":1,\"1572\":1}}],[\"是否存在指定类型的消息段\",{\"1\":{\"542\":1,\"1057\":1,\"1572\":1}}],[\"是否存在消息段\",{\"1\":{\"542\":1,\"1057\":1,\"1572\":1}}],[\"是否存在并运行\",{\"1\":{\"510\":1,\"1025\":1,\"1540\":1}}],[\"是否自动启动\",{\"1\":{\"456\":1,\"971\":1,\"1486\":1}}],[\"是否为\",{\"1\":{\"426\":1,\"941\":1,\"1456\":1}}],[\"是否为临时事件响应器\",{\"1\":{\"242\":1,\"755\":1,\"1270\":1,\"1863\":1,\"1864\":1,\"1865\":1,\"1866\":1,\"1867\":1,\"1868\":1,\"1869\":1,\"1870\":1,\"1871\":1,\"1872\":1,\"1873\":1,\"1874\":1,\"1875\":1,\"1877\":1,\"1878\":1,\"1880\":1,\"1881\":1,\"1882\":1,\"1883\":1,\"1884\":1,\"1885\":1,\"1886\":1,\"1887\":1,\"1888\":1,\"1889\":1,\"1890\":1,\"1891\":1,\"1892\":1,\"2232\":1,\"2233\":1,\"2234\":1,\"2235\":1,\"2236\":1,\"2237\":1,\"2238\":1,\"2239\":1,\"2240\":1,\"2241\":1,\"2242\":1,\"2243\":1,\"2244\":1,\"2246\":1,\"2247\":1,\"2249\":1,\"2250\":1,\"2251\":1,\"2252\":1,\"2253\":1,\"2254\":1,\"2255\":1,\"2256\":1,\"2257\":1,\"2258\":1,\"2259\":1,\"2260\":1,\"2261\":1,\"2601\":1,\"2602\":1,\"2603\":1,\"2604\":1,\"2605\":1,\"2606\":1,\"2607\":1,\"2608\":1,\"2609\":1,\"2610\":1,\"2611\":1,\"2612\":1,\"2613\":1,\"2615\":1,\"2616\":1,\"2618\":1,\"2619\":1,\"2620\":1,\"2621\":1,\"2622\":1,\"2623\":1,\"2624\":1,\"2625\":1,\"2626\":1,\"2627\":1,\"2628\":1,\"2629\":1,\"2630\":1}}],[\"是否为临时响应器\",{\"1\":{\"93\":1,\"603\":1,\"1118\":1}}],[\"是否是一个异步生成器函数\",{\"1\":{\"405\":1,\"920\":1,\"1435\":1}}],[\"是否是一个生成器函数\",{\"1\":{\"404\":1,\"919\":1,\"1434\":1}}],[\"是否是一个\",{\"1\":{\"403\":1,\"918\":1,\"1433\":1}}],[\"是否是复杂类型\",{\"1\":{\"402\":1,\"917\":1,\"1432\":1}}],[\"是否是\",{\"1\":{\"400\":1,\"401\":2,\"915\":1,\"916\":2,\"1430\":1,\"1431\":2}}],[\"是否强制命令后必须有指定空白符\",{\"1\":{\"360\":1,\"361\":1,\"875\":1,\"876\":1,\"1390\":1,\"1391\":1,\"1872\":1,\"1877\":1,\"1889\":1,\"2241\":1,\"2246\":1,\"2258\":1,\"2610\":1,\"2615\":1,\"2627\":1}}],[\"是否忽略大小写\",{\"1\":{\"352\":1,\"353\":1,\"354\":1,\"355\":1,\"356\":1,\"357\":1,\"867\":1,\"868\":1,\"869\":1,\"870\":1,\"871\":1,\"872\":1,\"1382\":1,\"1383\":1,\"1384\":1,\"1385\":1,\"1386\":1,\"1387\":1,\"1868\":1,\"1869\":1,\"1870\":1,\"1885\":1,\"1886\":1,\"1887\":1,\"2237\":1,\"2238\":1,\"2239\":1,\"2254\":1,\"2255\":1,\"2256\":1,\"2606\":1,\"2607\":1,\"2608\":1,\"2623\":1,\"2624\":1,\"2625\":1}}],[\"是否使用\",{\"1\":{\"297\":1,\"815\":1,\"1330\":1}}],[\"是否使用缓存\",{\"1\":{\"297\":1,\"815\":1,\"1330\":1}}],[\"是否满足匹配规则\",{\"1\":{\"245\":1,\"758\":1,\"1273\":1}}],[\"是否满足权限\",{\"1\":{\"244\":1,\"757\":1,\"1272\":1}}],[\"是否阻止事件向更低优先级传递\",{\"1\":{\"1863\":1,\"1864\":1,\"1865\":1,\"1866\":1,\"1867\":1,\"1868\":1,\"1869\":1,\"1870\":1,\"1871\":1,\"1872\":1,\"1873\":1,\"1874\":1,\"1875\":1,\"1877\":1,\"1878\":1,\"1880\":1,\"1881\":1,\"1882\":1,\"1883\":1,\"1884\":1,\"1885\":1,\"1886\":1,\"1887\":1,\"1888\":1,\"1889\":1,\"1890\":1,\"1891\":1,\"1892\":1,\"2232\":1,\"2233\":1,\"2234\":1,\"2235\":1,\"2236\":1,\"2237\":1,\"2238\":1,\"2239\":1,\"2240\":1,\"2241\":1,\"2242\":1,\"2243\":1,\"2244\":1,\"2246\":1,\"2247\":1,\"2249\":1,\"2250\":1,\"2251\":1,\"2252\":1,\"2253\":1,\"2254\":1,\"2255\":1,\"2256\":1,\"2257\":1,\"2258\":1,\"2259\":1,\"2260\":1,\"2261\":1,\"2601\":1,\"2602\":1,\"2603\":1,\"2604\":1,\"2605\":1,\"2606\":1,\"2607\":1,\"2608\":1,\"2609\":1,\"2610\":1,\"2611\":1,\"2612\":1,\"2613\":1,\"2615\":1,\"2616\":1,\"2618\":1,\"2619\":1,\"2620\":1,\"2621\":1,\"2622\":1,\"2623\":1,\"2624\":1,\"2625\":1,\"2626\":1,\"2627\":1,\"2628\":1,\"2629\":1,\"2630\":1}}],[\"是否阻止事件向更低优先级的响应器传播\",{\"1\":{\"242\":1,\"755\":1,\"1270\":1}}],[\"是否阻断事件传播\",{\"1\":{\"93\":1,\"603\":1,\"1118\":1}}],[\"是否开启\",{\"1\":{\"64\":1,\"72\":1,\"574\":1,\"582\":1,\"1089\":1,\"1097\":1}}],[\"是机器人开发者能够直接获取并使用的核心对象\",{\"1\":{\"477\":1,\"992\":1,\"1507\":1}}],[\"是机器人运行的基石\",{\"1\":{\"52\":1,\"562\":1,\"1077\":1}}],[\"是机器人与平台交互的核心桥梁\",{\"1\":{\"36\":1,\"546\":1,\"1061\":1}}],[\"文字以及表情等\",{\"1\":{\"545\":1,\"1060\":1,\"1575\":1}}],[\"文本文件\",{\"1\":{\"508\":1,\"1023\":1,\"1538\":1}}],[\"文件编码\",{\"1\":{\"1819\":1,\"1820\":1,\"2188\":1,\"2189\":1,\"2557\":1,\"2558\":1}}],[\"文件路径\",{\"1\":{\"1819\":1,\"1820\":1,\"2188\":1,\"2189\":1,\"2557\":1,\"2558\":1}}],[\"文件加载插件\",{\"1\":{\"520\":1,\"521\":1,\"1035\":1,\"1036\":1,\"1550\":1,\"1551\":1}}],[\"文件夹路径\",{\"1\":{\"1817\":1,\"2186\":1,\"2555\":1}}],[\"文件夹导入的插件\",{\"1\":{\"1810\":1,\"2179\":1,\"2548\":1}}],[\"文件夹\",{\"1\":{\"514\":1,\"1029\":1,\"1544\":1,\"1826\":1,\"1850\":1,\"2195\":1,\"2219\":1,\"2564\":1,\"2588\":1}}],[\"文件夹中配置文件添加以下内容\",{\"1\":{\"10\":1,\"22\":1,\"34\":1}}],[\"文件即可以作为一个插件\",{\"1\":{\"513\":1,\"1028\":1,\"1543\":1}}],[\"文件\",{\"1\":{\"506\":1,\"509\":2,\"513\":1,\"1021\":1,\"1024\":2,\"1028\":1,\"1536\":1,\"1539\":2,\"1543\":1,\"1820\":1,\"1850\":1,\"2189\":1,\"2219\":1,\"2558\":1,\"2588\":1,\"2686\":1,\"2701\":1,\"2716\":1}}],[\"文件存储\",{\"1\":{\"505\":1,\"1020\":1,\"1535\":1}}],[\"文件配置\",{\"1\":{\"224\":1,\"736\":1,\"1251\":1}}],[\"文件中的加载插件部分\",{\"1\":{\"515\":1,\"1030\":1,\"1545\":1}}],[\"文件中的\",{\"1\":{\"515\":1,\"520\":1,\"521\":1,\"1030\":1,\"1035\":1,\"1036\":1,\"1545\":1,\"1550\":1,\"1551\":1,\"1819\":1,\"2188\":1,\"2557\":1}}],[\"文件中编写\",{\"1\":{\"514\":1,\"1029\":1,\"1544\":1}}],[\"文件中读取环境信息\",{\"1\":{\"224\":1,\"736\":1,\"1251\":1}}],[\"文件中\",{\"1\":{\"165\":1,\"675\":1,\"1190\":1}}],[\"文件中加载配置\",{\"1\":{\"164\":1,\"674\":1,\"1189\":1}}],[\"文档来达到你想要的效果\",{\"1\":{\"545\":1,\"1060\":1,\"1575\":1}}],[\"文档来了解如何使用\",{\"1\":{\"435\":1,\"950\":1,\"1465\":1}}],[\"文档通俗易懂\",{\"1\":{\"497\":1,\"1012\":1,\"1527\":1}}],[\"文档分为基础与进阶两个部分\",{\"1\":{\"497\":1,\"1012\":1,\"1527\":1}}],[\"文档需符合风格指南\",{\"1\":{\"491\":1,\"1006\":1,\"1521\":1}}],[\"文档生成工具\",{\"1\":{\"485\":1,\"1000\":1,\"1515\":1}}],[\"文档改为直接编写在\",{\"1\":{\"485\":1,\"1000\":1,\"1515\":1}}],[\"文档自动生成\",{\"0\":{\"485\":1,\"1000\":1,\"1515\":1}}],[\"文档中与旧的\",{\"1\":{\"484\":1,\"999\":1,\"1514\":1}}],[\"文档中的\",{\"0\":{\"484\":1,\"999\":1,\"1514\":1}}],[\"文档和\",{\"1\":{\"484\":1,\"999\":1,\"1514\":1}}],[\"文档有部分过时内容需要更新\",{\"1\":{\"484\":1,\"999\":1,\"1514\":1}}],[\"文档的\",{\"1\":{\"484\":1,\"999\":1,\"1514\":1}}],[\"文档地址\",{\"1\":{\"61\":1,\"62\":1,\"571\":1,\"572\":1,\"1086\":1,\"1087\":1}}],[\"文档等功能\",{\"1\":{\"58\":1,\"568\":1,\"1083\":1}}],[\"文档\",{\"1\":{\"4\":1,\"16\":1,\"28\":1,\"61\":1,\"62\":1,\"64\":1,\"100\":1,\"120\":1,\"121\":1,\"124\":1,\"162\":1,\"226\":1,\"419\":1,\"420\":1,\"475\":1,\"485\":4,\"529\":1,\"571\":1,\"572\":1,\"574\":1,\"610\":1,\"630\":1,\"631\":1,\"634\":1,\"672\":1,\"738\":1,\"934\":1,\"935\":1,\"990\":1,\"1000\":4,\"1044\":1,\"1086\":1,\"1087\":1,\"1089\":1,\"1125\":1,\"1145\":1,\"1146\":1,\"1149\":1,\"1187\":1,\"1253\":1,\"1449\":1,\"1450\":1,\"1505\":1,\"1515\":4,\"1559\":1,\"1677\":1,\"1936\":1,\"2046\":1,\"2305\":1,\"2415\":1,\"2674\":1}}],[\"branches\",{\"1\":{\"2697\":2,\"2712\":2,\"2727\":2}}],[\"branch\",{\"1\":{\"2686\":3,\"2701\":3,\"2716\":3}}],[\"bracket\",{\"1\":{\"1894\":2,\"1903\":1,\"1914\":1,\"1922\":2,\"2263\":2,\"2272\":1,\"2283\":1,\"2291\":2,\"2632\":2,\"2641\":1,\"2652\":1,\"2660\":2}}],[\"breadcrumb\",{\"1\":{\"449\":1,\"964\":1,\"1479\":1}}],[\"breadcrumbs\",{\"1\":{\"449\":1,\"964\":1,\"1479\":1}}],[\"binds=\",{\"1\":{\"1937\":1,\"2306\":1,\"2675\":1}}],[\"bind\",{\"0\":{\"1937\":1,\"2306\":1,\"2675\":1},\"1\":{\"1909\":1,\"1937\":1,\"1939\":1,\"2278\":1,\"2306\":1,\"2308\":1,\"2647\":1,\"2675\":1,\"2677\":1,\"2686\":2,\"2701\":2,\"2716\":2}}],[\"binary\",{\"1\":{\"1748\":1,\"1751\":1,\"2126\":1,\"2129\":1,\"2495\":1,\"2498\":1}}],[\"bin\",{\"1\":{\"507\":1,\"1022\":1,\"1537\":1}}],[\"bg\",{\"1\":{\"472\":3,\"987\":3,\"1502\":3}}],[\"best\",{\"0\":{\"2756\":1,\"2763\":1,\"2770\":1}}],[\"begin\",{\"1\":{\"2687\":1,\"2702\":1,\"2717\":1}}],[\"beta\",{\"1\":{\"495\":1,\"1010\":1,\"1525\":1}}],[\"before\",{\"1\":{\"449\":2,\"964\":2,\"1479\":2}}],[\"bell\",{\"1\":{\"424\":1,\"939\":1,\"1454\":1}}],[\"baz\",{\"1\":{\"1894\":2,\"1897\":5,\"1900\":3,\"1910\":1,\"1921\":1,\"2263\":2,\"2266\":5,\"2269\":3,\"2279\":1,\"2290\":1,\"2632\":2,\"2635\":5,\"2638\":3,\"2648\":1,\"2659\":1}}],[\"barabc\",{\"1\":{\"1910\":1,\"2279\":1,\"2648\":1}}],[\"barbaz\",{\"1\":{\"1894\":2,\"2263\":2,\"2632\":2}}],[\"bar\",{\"1\":{\"428\":2,\"943\":2,\"1458\":2,\"1894\":10,\"1897\":5,\"1900\":4,\"1902\":3,\"1903\":1,\"1905\":1,\"1910\":1,\"1912\":2,\"1914\":3,\"1921\":1,\"2263\":10,\"2266\":5,\"2269\":4,\"2271\":3,\"2272\":1,\"2274\":1,\"2279\":1,\"2281\":2,\"2283\":3,\"2290\":1,\"2632\":10,\"2635\":5,\"2638\":4,\"2640\":3,\"2641\":1,\"2643\":1,\"2648\":1,\"2650\":2,\"2652\":3,\"2659\":1}}],[\"base\",{\"1\":{\"1929\":1,\"1933\":2,\"2298\":1,\"2302\":2,\"2667\":1,\"2671\":2}}],[\"basepattern\",{\"1\":{\"1894\":2,\"1897\":5,\"2263\":2,\"2266\":5,\"2632\":2,\"2635\":5}}],[\"baserequest\",{\"1\":{\"1696\":1,\"1787\":1,\"2065\":1,\"2156\":1,\"2434\":1,\"2525\":1}}],[\"basemessagesegment\",{\"1\":{\"479\":2,\"994\":2,\"1509\":2}}],[\"basemessage\",{\"1\":{\"479\":2,\"994\":2,\"1509\":2}}],[\"basemodel\",{\"1\":{\"156\":1,\"157\":1,\"158\":1,\"469\":2,\"475\":1,\"666\":1,\"667\":1,\"668\":1,\"984\":2,\"990\":1,\"1181\":1,\"1182\":1,\"1183\":1,\"1499\":2,\"1505\":1,\"1845\":1,\"2214\":1,\"2583\":1}}],[\"baseevent\",{\"1\":{\"478\":2,\"993\":2,\"1508\":2}}],[\"baseexceptiongroup\",{\"1\":{\"410\":1,\"925\":1,\"1440\":1}}],[\"basebot\",{\"1\":{\"477\":2,\"992\":2,\"1507\":2}}],[\"baseadapter\",{\"1\":{\"470\":2,\"472\":1,\"473\":1,\"474\":1,\"475\":1,\"476\":1,\"985\":2,\"987\":1,\"988\":1,\"989\":1,\"990\":1,\"991\":1,\"1500\":2,\"1502\":1,\"1503\":1,\"1504\":1,\"1505\":1,\"1506\":1}}],[\"basefieldinfo\",{\"1\":{\"155\":1,\"665\":1,\"1180\":1}}],[\"based\",{\"1\":{\"58\":1,\"568\":1,\"1083\":1}}],[\"basicconfig\",{\"1\":{\"421\":1,\"936\":1,\"1451\":1}}],[\"basic\",{\"1\":{\"10\":2,\"22\":2,\"34\":2}}],[\"blacklist\",{\"1\":{\"427\":1,\"942\":1,\"1457\":1}}],[\"blacklisted\",{\"1\":{\"427\":2,\"942\":2,\"1457\":2}}],[\"blockly\",{\"1\":{\"505\":3,\"1020\":3,\"1535\":3}}],[\"block=true\",{\"1\":{\"203\":1,\"428\":1,\"529\":1,\"715\":1,\"943\":1,\"1044\":1,\"1230\":1,\"1458\":1,\"1559\":1}}],[\"block\",{\"1\":{\"90\":1,\"93\":1,\"203\":1,\"242\":1,\"600\":1,\"603\":1,\"715\":1,\"755\":1,\"1115\":1,\"1118\":1,\"1230\":1,\"1270\":1,\"1863\":1,\"1864\":1,\"1865\":1,\"1866\":1,\"1867\":1,\"1868\":1,\"1869\":1,\"1870\":1,\"1871\":1,\"1872\":1,\"1873\":1,\"1874\":1,\"1875\":1,\"1876\":1,\"1877\":1,\"1878\":1,\"1879\":1,\"1880\":1,\"1881\":1,\"1882\":1,\"1883\":1,\"1884\":1,\"1885\":1,\"1886\":1,\"1887\":1,\"1888\":1,\"1889\":1,\"1890\":1,\"1891\":1,\"1892\":1,\"2232\":1,\"2233\":1,\"2234\":1,\"2235\":1,\"2236\":1,\"2237\":1,\"2238\":1,\"2239\":1,\"2240\":1,\"2241\":1,\"2242\":1,\"2243\":1,\"2244\":1,\"2245\":1,\"2246\":1,\"2247\":1,\"2248\":1,\"2249\":1,\"2250\":1,\"2251\":1,\"2252\":1,\"2253\":1,\"2254\":1,\"2255\":1,\"2256\":1,\"2257\":1,\"2258\":1,\"2259\":1,\"2260\":1,\"2261\":1,\"2601\":1,\"2602\":1,\"2603\":1,\"2604\":1,\"2605\":1,\"2606\":1,\"2607\":1,\"2608\":1,\"2609\":1,\"2610\":1,\"2611\":1,\"2612\":1,\"2613\":1,\"2614\":1,\"2615\":1,\"2616\":1,\"2617\":1,\"2618\":1,\"2619\":1,\"2620\":1,\"2621\":1,\"2622\":1,\"2623\":1,\"2624\":1,\"2625\":1,\"2626\":1,\"2627\":1,\"2628\":1,\"2629\":1,\"2630\":1}}],[\"b\",{\"1\":{\"117\":5,\"627\":5,\"1142\":5}}],[\"bytes\",{\"1\":{\"160\":1,\"476\":4,\"670\":1,\"991\":4,\"1185\":1,\"1506\":4,\"1672\":1,\"1674\":1,\"1699\":1,\"1701\":1,\"1703\":1,\"1735\":1,\"1746\":2,\"1748\":1,\"1749\":2,\"1751\":1,\"1790\":1,\"1792\":1,\"1794\":1,\"1802\":1,\"1804\":1,\"1806\":1,\"2041\":1,\"2043\":1,\"2068\":1,\"2070\":1,\"2072\":1,\"2116\":1,\"2124\":2,\"2126\":1,\"2127\":2,\"2129\":1,\"2159\":1,\"2161\":1,\"2163\":1,\"2171\":1,\"2173\":1,\"2175\":1,\"2410\":1,\"2412\":1,\"2437\":1,\"2439\":1,\"2441\":1,\"2485\":1,\"2493\":2,\"2495\":1,\"2496\":2,\"2498\":1,\"2528\":1,\"2530\":1,\"2532\":1,\"2540\":1,\"2542\":1,\"2544\":1}}],[\"by\",{\"1\":{\"111\":1,\"158\":1,\"216\":2,\"621\":1,\"668\":1,\"728\":2,\"1136\":1,\"1183\":1,\"1243\":2,\"2686\":5,\"2701\":5,\"2716\":5}}],[\"builtin\",{\"1\":{\"216\":4,\"509\":1,\"515\":1,\"522\":1,\"523\":1,\"728\":4,\"1024\":1,\"1030\":1,\"1037\":1,\"1038\":1,\"1243\":4,\"1539\":1,\"1545\":1,\"1552\":1,\"1553\":1,\"1809\":4,\"1904\":2,\"1905\":1,\"2178\":4,\"2273\":2,\"2274\":1,\"2547\":4,\"2642\":2,\"2643\":1}}],[\"building\",{\"1\":{\"58\":1,\"79\":1,\"568\":1,\"589\":1,\"1083\":1,\"1104\":1}}],[\"bug\",{\"1\":{\"3\":1,\"15\":1,\"27\":1}}],[\"bootstrap\",{\"1\":{\"515\":1,\"1030\":1,\"1545\":1}}],[\"bool\",{\"1\":{\"50\":1,\"63\":1,\"64\":1,\"72\":1,\"99\":1,\"158\":4,\"239\":1,\"240\":1,\"242\":2,\"244\":1,\"245\":1,\"264\":1,\"297\":2,\"301\":1,\"302\":1,\"304\":1,\"306\":1,\"310\":1,\"333\":1,\"334\":1,\"335\":1,\"347\":1,\"348\":1,\"349\":1,\"352\":1,\"353\":1,\"354\":1,\"355\":1,\"356\":1,\"357\":1,\"360\":1,\"361\":1,\"374\":1,\"375\":1,\"376\":1,\"378\":1,\"379\":1,\"391\":1,\"392\":1,\"400\":1,\"401\":1,\"402\":1,\"403\":1,\"404\":1,\"405\":1,\"426\":2,\"427\":2,\"428\":1,\"429\":1,\"449\":4,\"456\":1,\"478\":1,\"479\":1,\"560\":1,\"573\":1,\"574\":1,\"582\":1,\"609\":1,\"668\":4,\"752\":1,\"753\":1,\"755\":2,\"757\":1,\"758\":1,\"777\":1,\"813\":1,\"814\":1,\"815\":2,\"817\":1,\"819\":1,\"823\":1,\"845\":1,\"846\":1,\"847\":1,\"862\":1,\"863\":1,\"864\":1,\"867\":1,\"868\":1,\"869\":1,\"870\":1,\"871\":1,\"872\":1,\"875\":1,\"876\":1,\"889\":1,\"890\":1,\"891\":1,\"893\":1,\"894\":1,\"906\":1,\"907\":1,\"915\":1,\"916\":1,\"917\":1,\"918\":1,\"919\":1,\"920\":1,\"941\":2,\"942\":2,\"943\":1,\"944\":1,\"964\":4,\"971\":1,\"993\":1,\"994\":1,\"1075\":1,\"1088\":1,\"1089\":1,\"1097\":1,\"1124\":1,\"1183\":4,\"1267\":1,\"1268\":1,\"1270\":2,\"1272\":1,\"1273\":1,\"1292\":1,\"1328\":1,\"1329\":1,\"1330\":2,\"1332\":1,\"1334\":1,\"1338\":1,\"1360\":1,\"1361\":1,\"1362\":1,\"1377\":1,\"1378\":1,\"1379\":1,\"1382\":1,\"1383\":1,\"1384\":1,\"1385\":1,\"1386\":1,\"1387\":1,\"1390\":1,\"1391\":1,\"1404\":1,\"1405\":1,\"1406\":1,\"1408\":1,\"1409\":1,\"1421\":1,\"1422\":1,\"1430\":1,\"1431\":1,\"1432\":1,\"1433\":1,\"1434\":1,\"1435\":1,\"1456\":2,\"1457\":2,\"1458\":1,\"1459\":1,\"1479\":4,\"1486\":1,\"1508\":1,\"1509\":1,\"1595\":1,\"1613\":1,\"1614\":1,\"1618\":1,\"1638\":1,\"1639\":1,\"1647\":1,\"1681\":1,\"1682\":1,\"1743\":1,\"1770\":1,\"1773\":1,\"1863\":2,\"1864\":2,\"1865\":2,\"1866\":2,\"1867\":2,\"1868\":3,\"1869\":3,\"1870\":3,\"1871\":2,\"1872\":3,\"1873\":2,\"1874\":2,\"1875\":2,\"1876\":3,\"1877\":3,\"1878\":2,\"1879\":2,\"1880\":2,\"1881\":2,\"1882\":2,\"1883\":2,\"1884\":2,\"1885\":3,\"1886\":3,\"1887\":3,\"1888\":2,\"1889\":3,\"1890\":2,\"1891\":2,\"1892\":2,\"1894\":2,\"1897\":1,\"1907\":2,\"1916\":1,\"1917\":1,\"1918\":1,\"1919\":1,\"1920\":1,\"1923\":1,\"1924\":1,\"1925\":1,\"1976\":1,\"1982\":1,\"1983\":1,\"1987\":1,\"2007\":1,\"2008\":1,\"2016\":1,\"2050\":1,\"2051\":1,\"2121\":1,\"2139\":1,\"2142\":1,\"2232\":2,\"2233\":2,\"2234\":2,\"2235\":2,\"2236\":2,\"2237\":3,\"2238\":3,\"2239\":3,\"2240\":2,\"2241\":3,\"2242\":2,\"2243\":2,\"2244\":2,\"2245\":3,\"2246\":3,\"2247\":2,\"2248\":2,\"2249\":2,\"2250\":2,\"2251\":2,\"2252\":2,\"2253\":2,\"2254\":3,\"2255\":3,\"2256\":3,\"2257\":2,\"2258\":3,\"2259\":2,\"2260\":2,\"2261\":2,\"2263\":2,\"2266\":1,\"2276\":2,\"2285\":1,\"2286\":1,\"2287\":1,\"2288\":1,\"2289\":1,\"2292\":1,\"2293\":1,\"2294\":1,\"2345\":1,\"2351\":1,\"2352\":1,\"2356\":1,\"2376\":1,\"2377\":1,\"2385\":1,\"2419\":1,\"2420\":1,\"2490\":1,\"2508\":1,\"2511\":1,\"2601\":2,\"2602\":2,\"2603\":2,\"2604\":2,\"2605\":2,\"2606\":3,\"2607\":3,\"2608\":3,\"2609\":2,\"2610\":3,\"2611\":2,\"2612\":2,\"2613\":2,\"2614\":3,\"2615\":3,\"2616\":2,\"2617\":2,\"2618\":2,\"2619\":2,\"2620\":2,\"2621\":2,\"2622\":2,\"2623\":3,\"2624\":3,\"2625\":3,\"2626\":2,\"2627\":3,\"2628\":2,\"2629\":2,\"2630\":2,\"2632\":2,\"2635\":1,\"2645\":2,\"2654\":1,\"2655\":1,\"2656\":1,\"2657\":1,\"2658\":1,\"2661\":1,\"2662\":1,\"2663\":1}}],[\"bodies\",{\"1\":{\"449\":1,\"964\":1,\"1479\":1}}],[\"body\",{\"1\":{\"53\":1,\"563\":1,\"1078\":1}}],[\"bound\",{\"1\":{\"401\":1,\"916\":1,\"1431\":1}}],[\"botdisconnectionhook\",{\"1\":{\"1727\":2,\"2106\":2,\"2475\":2}}],[\"botconnectionhook\",{\"1\":{\"1726\":2,\"2105\":2,\"2474\":2}}],[\"botparam\",{\"1\":{\"383\":1,\"384\":1,\"387\":1,\"388\":1,\"389\":1,\"390\":1,\"391\":1,\"392\":1,\"394\":1,\"395\":1,\"898\":1,\"899\":1,\"902\":1,\"903\":1,\"904\":1,\"905\":1,\"906\":1,\"907\":1,\"909\":1,\"910\":1,\"1413\":1,\"1414\":1,\"1417\":1,\"1418\":1,\"1419\":1,\"1420\":1,\"1421\":1,\"1422\":1,\"1424\":1,\"1425\":1}}],[\"both\",{\"1\":{\"78\":1,\"588\":1,\"1103\":1}}],[\"bots\",{\"1\":{\"40\":6,\"222\":2,\"223\":2,\"550\":6,\"734\":2,\"735\":2,\"1065\":6,\"1249\":2,\"1250\":2,\"1941\":1,\"1942\":1,\"2310\":1,\"2311\":1,\"2679\":1,\"2680\":1}}],[\"bot\",{\"0\":{\"40\":1,\"129\":1,\"130\":1,\"474\":1,\"477\":1,\"550\":1,\"639\":1,\"640\":1,\"989\":1,\"992\":1,\"1065\":1,\"1154\":1,\"1155\":1,\"1504\":1,\"1507\":1},\"1\":{\"37\":2,\"40\":9,\"64\":1,\"72\":1,\"110\":2,\"111\":1,\"113\":1,\"129\":5,\"130\":5,\"132\":1,\"133\":1,\"134\":1,\"135\":1,\"136\":6,\"137\":5,\"215\":1,\"222\":11,\"223\":4,\"244\":3,\"245\":3,\"252\":2,\"253\":2,\"254\":2,\"255\":2,\"256\":2,\"257\":2,\"267\":2,\"268\":2,\"270\":2,\"271\":2,\"272\":2,\"292\":3,\"293\":4,\"299\":2,\"335\":3,\"349\":3,\"383\":2,\"384\":2,\"385\":2,\"386\":3,\"387\":1,\"388\":1,\"389\":1,\"390\":1,\"391\":1,\"392\":1,\"394\":1,\"395\":1,\"424\":9,\"425\":1,\"428\":1,\"429\":2,\"464\":1,\"465\":1,\"467\":1,\"470\":1,\"472\":1,\"474\":18,\"475\":8,\"476\":6,\"477\":8,\"484\":2,\"488\":1,\"500\":1,\"509\":2,\"510\":2,\"515\":15,\"516\":1,\"517\":1,\"518\":1,\"528\":2,\"529\":1,\"545\":1,\"547\":2,\"550\":9,\"574\":1,\"582\":1,\"620\":2,\"621\":1,\"623\":1,\"639\":5,\"640\":5,\"642\":1,\"643\":1,\"644\":1,\"645\":1,\"646\":6,\"647\":5,\"727\":1,\"734\":11,\"735\":4,\"757\":3,\"758\":3,\"765\":2,\"766\":2,\"767\":2,\"768\":2,\"769\":2,\"770\":2,\"780\":2,\"781\":2,\"783\":2,\"784\":2,\"785\":2,\"804\":3,\"805\":4,\"812\":2,\"847\":3,\"864\":3,\"898\":2,\"899\":2,\"900\":2,\"901\":3,\"902\":1,\"903\":1,\"904\":1,\"905\":1,\"906\":1,\"907\":1,\"909\":1,\"910\":1,\"939\":9,\"940\":1,\"943\":1,\"944\":2,\"979\":1,\"980\":1,\"982\":1,\"985\":1,\"987\":1,\"989\":18,\"990\":8,\"991\":6,\"992\":8,\"999\":2,\"1003\":1,\"1015\":1,\"1024\":2,\"1025\":2,\"1030\":15,\"1031\":1,\"1032\":1,\"1033\":1,\"1043\":2,\"1044\":1,\"1060\":1,\"1062\":2,\"1065\":9,\"1089\":1,\"1097\":1,\"1135\":2,\"1136\":1,\"1138\":1,\"1154\":5,\"1155\":5,\"1157\":1,\"1158\":1,\"1159\":1,\"1160\":1,\"1161\":6,\"1162\":5,\"1242\":1,\"1249\":11,\"1250\":4,\"1272\":3,\"1273\":3,\"1280\":2,\"1281\":2,\"1282\":2,\"1283\":2,\"1284\":2,\"1285\":2,\"1295\":2,\"1296\":2,\"1298\":2,\"1299\":2,\"1300\":2,\"1319\":3,\"1320\":4,\"1327\":2,\"1362\":3,\"1379\":3,\"1413\":2,\"1414\":2,\"1415\":2,\"1416\":3,\"1417\":1,\"1418\":1,\"1419\":1,\"1420\":1,\"1421\":1,\"1422\":1,\"1424\":1,\"1425\":1,\"1454\":9,\"1455\":1,\"1458\":1,\"1459\":2,\"1494\":1,\"1495\":1,\"1497\":1,\"1500\":1,\"1502\":1,\"1504\":18,\"1505\":8,\"1506\":6,\"1507\":8,\"1514\":2,\"1518\":1,\"1530\":1,\"1539\":2,\"1540\":2,\"1545\":15,\"1546\":1,\"1547\":1,\"1548\":1,\"1558\":2,\"1559\":1,\"1575\":1,\"1577\":1,\"1582\":3,\"1584\":2,\"1585\":2,\"1598\":2,\"1601\":5,\"1602\":5,\"1719\":2,\"1726\":3,\"1727\":3,\"1941\":5,\"1942\":1,\"1948\":2,\"1951\":5,\"1952\":5,\"1958\":1,\"1963\":3,\"1965\":2,\"1966\":2,\"2098\":2,\"2105\":3,\"2106\":3,\"2310\":5,\"2311\":1,\"2317\":2,\"2320\":5,\"2321\":5,\"2327\":1,\"2332\":3,\"2334\":2,\"2335\":2,\"2467\":2,\"2474\":3,\"2475\":3,\"2679\":5,\"2680\":1}}],[\"mymysql\",{\"1\":{\"2697\":4,\"2712\":4,\"2727\":4}}],[\"mysql\",{\"1\":{\"2697\":26,\"2712\":26,\"2727\":26}}],[\"mysql+aiomysql\",{\"1\":{\"2697\":2,\"2712\":2,\"2727\":2}}],[\"mydatabase\",{\"1\":{\"1937\":1,\"2306\":1,\"2675\":1}}],[\"mydup\",{\"1\":{\"1913\":2,\"2282\":2,\"2651\":2}}],[\"multivar\",{\"0\":{\"1898\":1,\"2267\":1,\"2636\":1},\"1\":{\"1898\":6,\"2267\":6,\"2636\":6}}],[\"mutablemapping\",{\"1\":{\"82\":1,\"282\":1,\"592\":1,\"794\":1,\"1107\":1,\"1309\":1}}],[\"mnixry\",{\"1\":{\"496\":1,\"499\":1,\"505\":1,\"1011\":1,\"1014\":1,\"1020\":1,\"1526\":1,\"1529\":1,\"1535\":1}}],[\"m\",{\"1\":{\"175\":1,\"282\":1,\"423\":1,\"507\":1,\"685\":1,\"794\":1,\"938\":1,\"1022\":1,\"1200\":1,\"1309\":1,\"1453\":1,\"1537\":1,\"1757\":2,\"2133\":2,\"2502\":2,\"2686\":2,\"2701\":2,\"2716\":2}}],[\"mm\",{\"1\":{\"175\":2,\"420\":4,\"685\":2,\"935\":4,\"1200\":2,\"1450\":4}}],[\"most\",{\"1\":{\"2686\":1,\"2701\":1,\"2716\":1}}],[\"mockapiexception\",{\"1\":{\"136\":3,\"137\":3,\"195\":1,\"646\":3,\"647\":3,\"707\":1,\"1161\":3,\"1162\":3,\"1222\":1}}],[\"moduletype\",{\"1\":{\"242\":1,\"755\":1,\"1270\":1,\"1823\":1,\"1834\":1,\"1836\":1,\"1837\":1,\"1851\":1,\"1861\":1,\"2192\":1,\"2203\":1,\"2205\":1,\"2206\":1,\"2220\":1,\"2230\":1,\"2561\":1,\"2572\":1,\"2574\":1,\"2575\":1,\"2589\":1,\"2599\":1}}],[\"module\",{\"1\":{\"111\":3,\"216\":2,\"242\":1,\"512\":1,\"621\":3,\"728\":2,\"755\":1,\"1027\":1,\"1136\":3,\"1243\":2,\"1270\":1,\"1542\":1,\"1811\":2,\"1816\":1,\"1818\":1,\"1837\":1,\"2180\":2,\"2185\":1,\"2187\":1,\"2206\":1,\"2549\":2,\"2554\":1,\"2556\":1,\"2575\":1}}],[\"models\",{\"1\":{\"2696\":9,\"2711\":9,\"2726\":9}}],[\"model\",{\"0\":{\"1838\":1,\"2207\":1,\"2576\":1,\"2694\":1,\"2709\":1,\"2724\":1},\"1\":{\"156\":2,\"157\":2,\"158\":1,\"478\":2,\"666\":2,\"667\":2,\"668\":1,\"993\":2,\"1181\":2,\"1182\":2,\"1183\":1,\"1508\":2,\"2685\":3,\"2688\":1,\"2691\":2,\"2692\":2,\"2694\":2,\"2695\":5,\"2696\":31,\"2700\":3,\"2703\":1,\"2706\":2,\"2707\":2,\"2709\":2,\"2710\":5,\"2711\":31,\"2715\":3,\"2718\":1,\"2721\":2,\"2722\":2,\"2724\":2,\"2725\":5,\"2726\":31}}],[\"modelfield\",{\"1\":{\"148\":1,\"152\":1,\"156\":1,\"299\":1,\"300\":1,\"305\":1,\"658\":1,\"662\":1,\"666\":1,\"812\":1,\"816\":1,\"818\":1,\"1173\":1,\"1177\":1,\"1181\":1,\"1327\":1,\"1331\":1,\"1333\":1,\"1649\":1,\"1657\":1,\"2018\":1,\"2026\":1,\"2387\":1,\"2395\":1}}],[\"modern\",{\"1\":{\"58\":1,\"568\":1,\"1083\":1}}],[\"mode\",{\"1\":{\"10\":1,\"22\":1,\"34\":1}}],[\"matrix\",{\"1\":{\"2697\":10,\"2712\":10,\"2727\":10}}],[\"match=true\",{\"1\":{\"1911\":1,\"2280\":1,\"2649\":1}}],[\"match=\",{\"1\":{\"1893\":1,\"2262\":1,\"2631\":1}}],[\"matched=true\",{\"1\":{\"1893\":2,\"2262\":2,\"2631\":2}}],[\"matched\",{\"1\":{\"190\":1,\"702\":1,\"1217\":1,\"1893\":1,\"1902\":4,\"1910\":1,\"1911\":1,\"2262\":1,\"2271\":4,\"2279\":1,\"2280\":1,\"2631\":1,\"2640\":4,\"2648\":1,\"2649\":1}}],[\"matcherparam\",{\"1\":{\"389\":1,\"390\":1,\"394\":1,\"395\":1,\"904\":1,\"905\":1,\"909\":1,\"910\":1,\"1419\":1,\"1420\":1,\"1424\":1,\"1425\":1}}],[\"matcherprovider\",{\"1\":{\"82\":4,\"284\":1,\"592\":4,\"796\":1,\"1107\":4,\"1311\":1}}],[\"matcherexception\",{\"1\":{\"195\":1,\"707\":1,\"1222\":1}}],[\"matcher2\",{\"1\":{\"106\":1,\"616\":1,\"1131\":1}}],[\"matcher1\",{\"1\":{\"106\":1,\"616\":1,\"1131\":1}}],[\"matchergroup\",{\"1\":{\"106\":3,\"216\":2,\"616\":3,\"728\":2,\"1131\":3,\"1243\":2,\"1809\":2,\"2178\":2,\"2547\":2}}],[\"matchersource\",{\"1\":{\"242\":1,\"755\":1,\"1270\":1,\"1862\":1,\"2231\":1,\"2600\":1}}],[\"matchers>\",{\"1\":{\"242\":1,\"755\":1,\"1270\":1}}],[\"matchers\",{\"1\":{\"83\":4,\"242\":1,\"285\":1,\"593\":4,\"755\":1,\"797\":1,\"1108\":4,\"1270\":1,\"1312\":1}}],[\"matcher\",{\"0\":{\"232\":1,\"744\":1,\"1259\":1},\"1\":{\"82\":2,\"83\":1,\"84\":1,\"90\":1,\"95\":1,\"96\":1,\"97\":1,\"98\":1,\"99\":1,\"100\":1,\"101\":1,\"111\":1,\"134\":2,\"135\":2,\"140\":4,\"200\":3,\"203\":7,\"204\":1,\"205\":3,\"206\":3,\"207\":3,\"242\":1,\"276\":1,\"277\":1,\"278\":4,\"279\":1,\"280\":1,\"282\":1,\"283\":2,\"285\":1,\"292\":2,\"305\":2,\"328\":1,\"333\":1,\"340\":1,\"341\":1,\"342\":1,\"343\":1,\"346\":1,\"347\":1,\"389\":1,\"390\":1,\"394\":3,\"395\":3,\"424\":7,\"431\":10,\"526\":2,\"527\":3,\"592\":2,\"593\":1,\"594\":1,\"600\":1,\"605\":1,\"606\":1,\"607\":1,\"608\":1,\"609\":1,\"610\":1,\"611\":1,\"621\":1,\"644\":2,\"645\":2,\"650\":4,\"712\":3,\"715\":7,\"716\":1,\"717\":3,\"718\":3,\"719\":3,\"755\":1,\"788\":1,\"789\":1,\"790\":4,\"791\":1,\"792\":1,\"794\":1,\"795\":2,\"797\":1,\"804\":2,\"818\":2,\"843\":1,\"845\":1,\"855\":1,\"856\":1,\"857\":1,\"858\":1,\"861\":1,\"862\":1,\"904\":1,\"905\":1,\"909\":3,\"910\":3,\"939\":7,\"946\":10,\"1041\":2,\"1042\":3,\"1107\":2,\"1108\":1,\"1109\":1,\"1115\":1,\"1120\":1,\"1121\":1,\"1122\":1,\"1123\":1,\"1124\":1,\"1125\":1,\"1126\":1,\"1136\":1,\"1159\":2,\"1160\":2,\"1165\":4,\"1227\":3,\"1230\":7,\"1231\":1,\"1232\":3,\"1233\":3,\"1234\":3,\"1270\":1,\"1303\":1,\"1304\":1,\"1305\":4,\"1306\":1,\"1307\":1,\"1309\":1,\"1310\":2,\"1312\":1,\"1319\":2,\"1333\":2,\"1358\":1,\"1360\":1,\"1370\":1,\"1371\":1,\"1372\":1,\"1373\":1,\"1376\":1,\"1377\":1,\"1419\":1,\"1420\":1,\"1424\":3,\"1425\":3,\"1454\":7,\"1461\":10,\"1556\":2,\"1557\":3,\"1854\":2,\"1859\":2,\"1860\":1,\"1861\":1,\"1863\":1,\"1864\":1,\"1865\":1,\"1866\":1,\"1867\":1,\"1868\":1,\"1869\":1,\"1870\":1,\"1871\":1,\"1872\":1,\"1873\":1,\"1874\":1,\"1875\":1,\"1877\":1,\"1878\":1,\"1880\":1,\"1881\":1,\"1882\":1,\"1883\":1,\"1884\":1,\"1885\":1,\"1886\":1,\"1887\":1,\"1888\":1,\"1889\":1,\"1890\":1,\"1891\":1,\"1892\":1,\"2223\":2,\"2228\":2,\"2229\":1,\"2230\":1,\"2232\":1,\"2233\":1,\"2234\":1,\"2235\":1,\"2236\":1,\"2237\":1,\"2238\":1,\"2239\":1,\"2240\":1,\"2241\":1,\"2242\":1,\"2243\":1,\"2244\":1,\"2246\":1,\"2247\":1,\"2249\":1,\"2250\":1,\"2251\":1,\"2252\":1,\"2253\":1,\"2254\":1,\"2255\":1,\"2256\":1,\"2257\":1,\"2258\":1,\"2259\":1,\"2260\":1,\"2261\":1,\"2592\":2,\"2597\":2,\"2598\":1,\"2599\":1,\"2601\":1,\"2602\":1,\"2603\":1,\"2604\":1,\"2605\":1,\"2606\":1,\"2607\":1,\"2608\":1,\"2609\":1,\"2610\":1,\"2611\":1,\"2612\":1,\"2613\":1,\"2615\":1,\"2616\":1,\"2618\":1,\"2619\":1,\"2620\":1,\"2621\":1,\"2622\":1,\"2623\":1,\"2624\":1,\"2625\":1,\"2626\":1,\"2627\":1,\"2628\":1,\"2629\":1,\"2630\":1}}],[\"match\",{\"1\":{\"101\":1,\"318\":1,\"367\":1,\"611\":1,\"831\":1,\"882\":1,\"1126\":1,\"1346\":1,\"1397\":1,\"1897\":2,\"1902\":1,\"1903\":1,\"1904\":1,\"2266\":2,\"2271\":1,\"2272\":1,\"2273\":1,\"2635\":2,\"2640\":1,\"2641\":1,\"2642\":1}}],[\"mapped\",{\"1\":{\"2685\":5,\"2688\":4,\"2691\":4,\"2692\":4,\"2694\":4,\"2700\":5,\"2703\":4,\"2706\":4,\"2707\":4,\"2709\":4,\"2715\":5,\"2718\":4,\"2721\":4,\"2722\":4,\"2724\":4}}],[\"mappings\",{\"1\":{\"399\":1,\"914\":1,\"1429\":1}}],[\"mapping\",{\"1\":{\"285\":1,\"399\":1,\"797\":1,\"914\":1,\"1312\":1,\"1429\":1,\"1642\":2,\"1643\":1,\"1644\":1,\"2011\":2,\"2012\":1,\"2013\":1,\"2380\":2,\"2381\":1,\"2382\":1}}],[\"map\",{\"1\":{\"545\":1,\"1060\":1,\"1575\":1}}],[\"mark\",{\"1\":{\"1941\":2,\"1942\":1,\"2310\":2,\"2311\":1,\"2679\":2,\"2680\":1}}],[\"markup\",{\"1\":{\"534\":2,\"539\":1,\"545\":3,\"1049\":2,\"1054\":1,\"1060\":3,\"1564\":2,\"1569\":1,\"1575\":3}}],[\"markdown\",{\"1\":{\"534\":2,\"539\":1,\"543\":16,\"545\":2,\"1049\":2,\"1054\":1,\"1058\":16,\"1060\":2,\"1564\":2,\"1569\":1,\"1573\":16,\"1575\":2}}],[\"main\",{\"1\":{\"509\":1,\"1024\":1,\"1539\":1,\"1902\":3,\"2271\":3,\"2640\":3,\"2697\":2,\"2712\":2,\"2727\":2}}],[\"max\",{\"1\":{\"449\":1,\"964\":1,\"1479\":1,\"1938\":1,\"2307\":1,\"2676\":1}}],[\"macos\",{\"1\":{\"435\":2,\"438\":1,\"439\":1,\"440\":1,\"507\":1,\"950\":2,\"953\":1,\"954\":1,\"955\":1,\"1022\":1,\"1465\":2,\"1468\":1,\"1469\":1,\"1470\":1,\"1537\":1,\"2697\":2,\"2712\":2,\"2727\":2}}],[\"manager\",{\"0\":{\"1825\":1,\"2194\":1,\"2563\":1},\"1\":{\"111\":1,\"407\":2,\"621\":1,\"922\":2,\"1136\":1,\"1437\":2,\"1835\":1,\"1903\":1,\"2204\":1,\"2272\":1,\"2573\":1,\"2641\":1}}],[\"mdx等相关技术\",{\"1\":{\"503\":1,\"1018\":1,\"1533\":1}}],[\"mdx\",{\"1\":{\"503\":1,\"1018\":1,\"1533\":1}}],[\"md\",{\"1\":{\"110\":1,\"465\":1,\"515\":2,\"620\":1,\"980\":1,\"1030\":2,\"1135\":1,\"1495\":1,\"1545\":2,\"1872\":1,\"1874\":1,\"1889\":1,\"1891\":1,\"2241\":1,\"2243\":1,\"2258\":1,\"2260\":1,\"2610\":1,\"2612\":1,\"2627\":1,\"2629\":1}}],[\"migrations\",{\"1\":{\"2686\":2,\"2697\":2,\"2701\":2,\"2712\":2,\"2716\":2,\"2727\":2}}],[\"mirai\",{\"1\":{\"488\":1,\"489\":1,\"1003\":1,\"1004\":1,\"1518\":1,\"1519\":1}}],[\"missing\",{\"1\":{\"480\":1,\"995\":1,\"1510\":1,\"1899\":1,\"2268\":1,\"2637\":1}}],[\"microframework\",{\"1\":{\"70\":1,\"580\":1,\"1095\":1}}],[\"mixins\",{\"1\":{\"1757\":2,\"2133\":2,\"2502\":2}}],[\"mixin\",{\"1\":{\"54\":2,\"564\":2,\"1079\":2,\"1663\":1,\"1709\":1,\"1757\":2,\"1797\":1,\"2032\":1,\"2078\":1,\"2133\":2,\"2166\":1,\"2401\":1,\"2447\":1,\"2502\":2,\"2535\":1}}],[\"merge\",{\"1\":{\"2687\":2,\"2702\":2,\"2717\":2}}],[\"mean\",{\"1\":{\"1911\":1,\"2280\":1,\"2649\":1}}],[\"medium\",{\"1\":{\"449\":1,\"964\":1,\"1479\":1}}],[\"me\",{\"1\":{\"102\":3,\"106\":2,\"310\":1,\"425\":1,\"428\":3,\"529\":2,\"612\":3,\"616\":2,\"823\":1,\"940\":1,\"943\":3,\"1044\":2,\"1127\":3,\"1131\":2,\"1338\":1,\"1455\":1,\"1458\":3,\"1559\":2,\"1919\":1,\"2288\":1,\"2657\":1}}],[\"method=\",{\"1\":{\"120\":1,\"472\":1,\"476\":1,\"630\":1,\"987\":1,\"991\":1,\"1145\":1,\"1502\":1,\"1506\":1}}],[\"method\",{\"1\":{\"53\":1,\"120\":1,\"476\":2,\"563\":1,\"630\":1,\"991\":2,\"1078\":1,\"1145\":1,\"1506\":2,\"1735\":1,\"2116\":1,\"2485\":1}}],[\"meta=commandmeta\",{\"1\":{\"1903\":1,\"1910\":1,\"1911\":1,\"1914\":1,\"2272\":1,\"2279\":1,\"2280\":1,\"2283\":1,\"2641\":1,\"2648\":1,\"2649\":1,\"2652\":1}}],[\"meta=\",{\"1\":{\"1903\":1,\"2272\":1,\"2641\":1}}],[\"metadata\",{\"1\":{\"111\":1,\"621\":1,\"1136\":1,\"2686\":1,\"2701\":1,\"2716\":1}}],[\"metaevent\",{\"1\":{\"93\":1,\"216\":2,\"603\":1,\"728\":2,\"1118\":1,\"1243\":2,\"1809\":2,\"2178\":2,\"2547\":2}}],[\"meta\",{\"1\":{\"42\":1,\"86\":1,\"110\":1,\"343\":2,\"478\":1,\"552\":1,\"596\":1,\"620\":1,\"858\":2,\"993\":1,\"1067\":1,\"1111\":1,\"1135\":1,\"1373\":2,\"1508\":1}}],[\"message=\",{\"1\":{\"424\":1,\"939\":1,\"1454\":1,\"1582\":2,\"1963\":2,\"2332\":2}}],[\"messageevent\",{\"1\":{\"423\":2,\"478\":1,\"938\":2,\"993\":1,\"1453\":2,\"1508\":1}}],[\"messagetemplate\",{\"1\":{\"251\":1,\"252\":1,\"253\":1,\"254\":1,\"255\":1,\"256\":1,\"257\":1,\"431\":2,\"535\":1,\"545\":3,\"764\":1,\"765\":1,\"766\":1,\"767\":1,\"768\":1,\"769\":1,\"770\":1,\"946\":2,\"1050\":1,\"1060\":3,\"1279\":1,\"1280\":1,\"1281\":1,\"1282\":1,\"1283\":1,\"1284\":1,\"1285\":1,\"1461\":2,\"1565\":1,\"1575\":3,\"1609\":1,\"1978\":1,\"2347\":1}}],[\"messagesegment\",{\"1\":{\"251\":1,\"252\":1,\"253\":1,\"254\":1,\"255\":1,\"256\":1,\"257\":1,\"363\":8,\"477\":2,\"479\":11,\"532\":1,\"533\":1,\"534\":4,\"535\":1,\"536\":7,\"537\":1,\"538\":6,\"539\":4,\"540\":1,\"541\":3,\"542\":2,\"543\":14,\"544\":26,\"545\":17,\"764\":1,\"765\":1,\"766\":1,\"767\":1,\"768\":1,\"769\":1,\"770\":1,\"878\":8,\"992\":2,\"994\":11,\"1047\":1,\"1048\":1,\"1049\":4,\"1050\":1,\"1051\":7,\"1052\":1,\"1053\":6,\"1054\":4,\"1055\":1,\"1056\":3,\"1057\":2,\"1058\":14,\"1059\":26,\"1060\":17,\"1279\":1,\"1280\":1,\"1281\":1,\"1282\":1,\"1283\":1,\"1284\":1,\"1285\":1,\"1393\":8,\"1507\":2,\"1509\":11,\"1562\":1,\"1563\":1,\"1564\":4,\"1565\":1,\"1566\":7,\"1567\":1,\"1568\":6,\"1569\":4,\"1570\":1,\"1571\":3,\"1572\":2,\"1573\":14,\"1574\":26,\"1575\":17,\"1583\":1,\"1609\":1,\"1964\":1,\"1978\":1,\"2333\":1,\"2347\":1}}],[\"message\",{\"0\":{\"287\":1,\"479\":1,\"799\":1,\"994\":1,\"1314\":1,\"1509\":1},\"1\":{\"37\":1,\"42\":1,\"48\":3,\"86\":1,\"90\":1,\"93\":1,\"100\":1,\"106\":2,\"124\":1,\"132\":1,\"133\":1,\"134\":1,\"135\":1,\"136\":1,\"137\":1,\"139\":2,\"140\":2,\"205\":1,\"206\":1,\"207\":1,\"216\":2,\"227\":1,\"251\":1,\"252\":2,\"253\":2,\"254\":1,\"255\":1,\"256\":1,\"257\":1,\"262\":4,\"263\":2,\"298\":1,\"340\":2,\"362\":1,\"394\":1,\"415\":1,\"417\":1,\"419\":7,\"420\":2,\"424\":1,\"464\":1,\"465\":1,\"467\":1,\"477\":8,\"478\":11,\"479\":9,\"530\":1,\"532\":2,\"533\":1,\"534\":6,\"535\":1,\"536\":5,\"537\":1,\"538\":4,\"539\":4,\"540\":1,\"541\":2,\"542\":4,\"543\":17,\"544\":14,\"545\":17,\"547\":1,\"552\":1,\"558\":3,\"596\":1,\"600\":1,\"603\":1,\"610\":1,\"616\":2,\"634\":1,\"642\":1,\"643\":1,\"644\":1,\"645\":1,\"646\":1,\"647\":1,\"649\":2,\"650\":2,\"717\":1,\"718\":1,\"719\":1,\"728\":2,\"739\":1,\"764\":1,\"765\":2,\"766\":2,\"767\":1,\"768\":1,\"769\":1,\"770\":1,\"775\":4,\"776\":2,\"808\":1,\"855\":2,\"877\":1,\"909\":1,\"930\":1,\"932\":1,\"934\":7,\"935\":2,\"939\":1,\"979\":1,\"980\":1,\"982\":1,\"992\":8,\"993\":11,\"994\":9,\"1045\":1,\"1047\":2,\"1048\":1,\"1049\":6,\"1050\":1,\"1051\":5,\"1052\":1,\"1053\":4,\"1054\":4,\"1055\":1,\"1056\":2,\"1057\":4,\"1058\":17,\"1059\":14,\"1060\":17,\"1062\":1,\"1067\":1,\"1073\":3,\"1111\":1,\"1115\":1,\"1118\":1,\"1125\":1,\"1131\":2,\"1149\":1,\"1157\":1,\"1158\":1,\"1159\":1,\"1160\":1,\"1161\":1,\"1162\":1,\"1164\":2,\"1165\":2,\"1232\":1,\"1233\":1,\"1234\":1,\"1243\":2,\"1254\":1,\"1279\":1,\"1280\":2,\"1281\":2,\"1282\":1,\"1283\":1,\"1284\":1,\"1285\":1,\"1290\":4,\"1291\":2,\"1323\":1,\"1370\":2,\"1392\":1,\"1424\":1,\"1445\":1,\"1447\":1,\"1449\":7,\"1450\":2,\"1454\":1,\"1494\":1,\"1495\":1,\"1497\":1,\"1507\":8,\"1508\":11,\"1509\":9,\"1560\":1,\"1562\":2,\"1563\":1,\"1564\":6,\"1565\":1,\"1566\":5,\"1567\":1,\"1568\":4,\"1569\":4,\"1570\":1,\"1571\":2,\"1572\":4,\"1573\":17,\"1574\":14,\"1575\":17,\"1583\":2,\"1593\":1,\"1594\":1,\"1608\":1,\"1609\":1,\"1809\":2,\"1904\":1,\"1964\":2,\"1974\":1,\"1975\":1,\"1977\":1,\"1978\":1,\"2178\":2,\"2273\":1,\"2333\":2,\"2343\":1,\"2344\":1,\"2346\":1,\"2347\":1,\"2547\":2,\"2642\":1,\"2687\":4,\"2688\":1,\"2691\":12,\"2692\":12,\"2694\":4,\"2702\":4,\"2703\":1,\"2706\":12,\"2707\":12,\"2709\":4,\"2717\":4,\"2718\":1,\"2721\":12,\"2722\":12,\"2724\":4}}],[\"msg\",{\"1\":{\"136\":1,\"137\":1,\"352\":1,\"353\":1,\"354\":1,\"355\":1,\"356\":1,\"357\":1,\"479\":1,\"544\":9,\"646\":1,\"647\":1,\"867\":1,\"868\":1,\"869\":1,\"870\":1,\"871\":1,\"872\":1,\"994\":1,\"1059\":9,\"1161\":1,\"1162\":1,\"1382\":1,\"1383\":1,\"1384\":1,\"1385\":1,\"1386\":1,\"1387\":1,\"1509\":1,\"1574\":9,\"1582\":2,\"1611\":1,\"1868\":1,\"1869\":1,\"1870\":1,\"1885\":1,\"1886\":1,\"1887\":1,\"1963\":2,\"1980\":1,\"2237\":1,\"2238\":1,\"2239\":1,\"2254\":1,\"2255\":1,\"2256\":1,\"2332\":2,\"2349\":1,\"2606\":1,\"2607\":1,\"2608\":1,\"2623\":1,\"2624\":1,\"2625\":1,\"2691\":8,\"2692\":8,\"2694\":2,\"2706\":8,\"2707\":8,\"2709\":2,\"2721\":8,\"2722\":8,\"2724\":2}}],[\"ms\",{\"1\":{\"10\":2,\"22\":2,\"34\":2}}],[\">>>\",{\"1\":{\"534\":4,\"545\":10,\"1049\":4,\"1060\":10,\"1564\":4,\"1575\":10}}],[\">=\",{\"1\":{\"431\":1,\"946\":1,\"1461\":1}}],[\">\",{\"1\":{\"10\":1,\"22\":1,\"34\":1,\"120\":1,\"139\":1,\"140\":2,\"163\":1,\"218\":2,\"249\":1,\"250\":1,\"251\":1,\"259\":2,\"261\":2,\"262\":2,\"265\":2,\"278\":2,\"297\":1,\"319\":3,\"363\":3,\"385\":1,\"386\":1,\"403\":1,\"404\":1,\"405\":1,\"406\":2,\"408\":2,\"414\":1,\"426\":1,\"427\":2,\"428\":1,\"470\":1,\"472\":3,\"473\":3,\"475\":1,\"476\":1,\"477\":1,\"478\":11,\"479\":5,\"630\":1,\"649\":1,\"650\":2,\"673\":1,\"730\":2,\"762\":1,\"763\":1,\"764\":1,\"772\":2,\"774\":2,\"775\":2,\"778\":2,\"790\":2,\"815\":1,\"832\":3,\"878\":3,\"900\":1,\"901\":1,\"918\":1,\"919\":1,\"920\":1,\"921\":2,\"923\":2,\"929\":1,\"941\":1,\"942\":2,\"943\":1,\"985\":1,\"987\":3,\"988\":3,\"990\":1,\"991\":1,\"992\":1,\"993\":11,\"994\":5,\"1145\":1,\"1164\":1,\"1165\":2,\"1188\":1,\"1245\":2,\"1277\":1,\"1278\":1,\"1279\":1,\"1287\":2,\"1289\":2,\"1290\":2,\"1293\":2,\"1305\":2,\"1330\":1,\"1347\":3,\"1393\":3,\"1415\":1,\"1416\":1,\"1433\":1,\"1434\":1,\"1435\":1,\"1436\":2,\"1438\":2,\"1444\":1,\"1456\":1,\"1457\":2,\"1458\":1,\"1500\":1,\"1502\":3,\"1503\":3,\"1505\":1,\"1506\":1,\"1507\":1,\"1508\":11,\"1509\":5,\"1612\":5,\"1655\":1,\"1757\":2,\"1796\":2,\"1939\":3,\"1981\":5,\"2024\":1,\"2133\":2,\"2165\":2,\"2308\":3,\"2350\":5,\"2393\":1,\"2502\":2,\"2534\":2,\"2677\":3,\"2686\":2,\"2687\":2,\"2688\":1,\"2691\":1,\"2692\":1,\"2694\":1,\"2695\":1,\"2701\":2,\"2702\":2,\"2703\":1,\"2706\":1,\"2707\":1,\"2709\":1,\"2710\":1,\"2716\":2,\"2717\":2,\"2718\":1,\"2721\":1,\"2722\":1,\"2724\":1,\"2725\":1}}],[\"搜索配置项\",{\"1\":{\"10\":1,\"22\":1,\"34\":1}}],[\"v5\",{\"1\":{\"2697\":2,\"2712\":2,\"2727\":2}}],[\"v4\",{\"1\":{\"2697\":2,\"2712\":2,\"2727\":2}}],[\"v|\",{\"1\":{\"1913\":2,\"2282\":2,\"2651\":2}}],[\"vvv\",{\"1\":{\"1910\":1,\"2279\":1,\"2648\":1}}],[\"varchar\",{\"1\":{\"2685\":2,\"2686\":2,\"2700\":2,\"2701\":2,\"2715\":2,\"2716\":2}}],[\"var1\",{\"1\":{\"1895\":1,\"2264\":1,\"2633\":1}}],[\"var\",{\"0\":{\"1897\":1,\"2266\":1,\"2635\":1},\"1\":{\"1895\":4,\"1897\":3,\"2264\":4,\"2266\":3,\"2633\":4,\"2635\":3}}],[\"validator\",{\"1\":{\"161\":1,\"671\":1,\"1186\":1}}],[\"validate\",{\"1\":{\"154\":1,\"159\":1,\"160\":1,\"297\":1,\"301\":1,\"304\":1,\"306\":1,\"475\":3,\"538\":2,\"664\":1,\"669\":1,\"670\":1,\"813\":1,\"815\":1,\"817\":1,\"819\":1,\"990\":3,\"1053\":2,\"1179\":1,\"1184\":1,\"1185\":1,\"1328\":1,\"1330\":1,\"1332\":1,\"1334\":1,\"1505\":3,\"1568\":2,\"1647\":1,\"2016\":1,\"2385\":1}}],[\"validations\",{\"1\":{\"145\":1,\"655\":1,\"1170\":1}}],[\"value=\",{\"1\":{\"1913\":3,\"2282\":3,\"2651\":3}}],[\"value=false\",{\"1\":{\"1900\":1,\"2269\":1,\"2638\":1}}],[\"value=none\",{\"1\":{\"1893\":1,\"1913\":2,\"2262\":1,\"2282\":2,\"2631\":1,\"2651\":2}}],[\"value=ellipsis\",{\"1\":{\"1893\":1,\"1913\":2,\"2262\":1,\"2282\":2,\"2631\":1,\"2651\":2}}],[\"valueerror\",{\"1\":{\"217\":1,\"218\":2,\"219\":1,\"220\":1,\"221\":1,\"222\":2,\"223\":1,\"478\":3,\"729\":1,\"730\":2,\"731\":1,\"732\":1,\"733\":1,\"734\":2,\"735\":1,\"993\":3,\"1244\":1,\"1245\":2,\"1246\":1,\"1247\":1,\"1248\":1,\"1249\":2,\"1250\":1,\"1508\":3,\"1615\":1,\"1824\":1,\"1984\":1,\"2193\":1,\"2353\":1,\"2562\":1}}],[\"valuesview\",{\"1\":{\"276\":1,\"788\":1,\"1303\":1}}],[\"values\",{\"1\":{\"163\":1,\"165\":1,\"673\":1,\"675\":1,\"1188\":1,\"1190\":1}}],[\"value\",{\"1\":{\"153\":1,\"154\":2,\"351\":1,\"431\":1,\"663\":1,\"664\":2,\"866\":1,\"946\":1,\"1178\":1,\"1179\":2,\"1381\":1,\"1461\":1,\"1613\":1,\"1614\":1,\"1615\":1,\"1617\":1,\"1618\":1,\"1645\":1,\"1657\":1,\"1729\":1,\"1897\":1,\"1898\":1,\"1901\":2,\"1902\":2,\"1910\":1,\"1982\":1,\"1983\":1,\"1984\":1,\"1986\":1,\"1987\":1,\"2014\":1,\"2026\":1,\"2089\":1,\"2266\":1,\"2267\":1,\"2270\":2,\"2271\":2,\"2279\":1,\"2351\":1,\"2352\":1,\"2353\":1,\"2355\":1,\"2356\":1,\"2383\":1,\"2395\":1,\"2458\":1,\"2635\":1,\"2636\":1,\"2639\":2,\"2640\":2,\"2648\":1}}],[\"version\",{\"1\":{\"1659\":1,\"1666\":1,\"1705\":1,\"1711\":1,\"1735\":1,\"1760\":1,\"1913\":1,\"2028\":1,\"2035\":1,\"2074\":1,\"2080\":1,\"2111\":1,\"2116\":1,\"2282\":1,\"2397\":1,\"2404\":1,\"2443\":1,\"2449\":1,\"2480\":1,\"2485\":1,\"2651\":1,\"2697\":5,\"2712\":5,\"2727\":5}}],[\"verbose|\",{\"1\":{\"1910\":1,\"2279\":1,\"2648\":1}}],[\"verbose\",{\"1\":{\"100\":2,\"610\":2,\"1125\":2,\"1910\":1,\"1913\":2,\"2279\":1,\"2282\":2,\"2648\":1,\"2651\":2}}],[\"venv\",{\"1\":{\"507\":5,\"1022\":5,\"1537\":5}}],[\"v3\",{\"1\":{\"503\":1,\"1018\":1,\"1533\":1}}],[\"vue\",{\"1\":{\"499\":1,\"1014\":1,\"1529\":1}}],[\"vuepress\",{\"1\":{\"484\":1,\"999\":1,\"1514\":1}}],[\"v2\",{\"0\":{\"486\":1,\"487\":1,\"488\":1,\"489\":1,\"1001\":1,\"1002\":1,\"1003\":1,\"1004\":1,\"1516\":1,\"1517\":1,\"1518\":1,\"1519\":1},\"1\":{\"141\":1,\"161\":1,\"487\":1,\"488\":4,\"489\":4,\"651\":1,\"671\":1,\"1002\":1,\"1003\":4,\"1004\":4,\"1166\":1,\"1186\":1,\"1517\":1,\"1518\":4,\"1519\":4}}],[\"v12\",{\"0\":{\"491\":1,\"1006\":1,\"1521\":1},\"1\":{\"476\":1,\"491\":1,\"492\":3,\"493\":2,\"991\":1,\"1006\":1,\"1007\":3,\"1008\":2,\"1506\":1,\"1521\":1,\"1522\":3,\"1523\":2}}],[\"v1\",{\"0\":{\"483\":1,\"484\":1,\"485\":1,\"998\":1,\"999\":1,\"1000\":1,\"1513\":1,\"1514\":1,\"1515\":1},\"1\":{\"141\":1,\"142\":1,\"146\":1,\"147\":1,\"148\":1,\"161\":1,\"484\":3,\"485\":1,\"651\":1,\"652\":1,\"656\":1,\"657\":1,\"658\":1,\"671\":1,\"999\":3,\"1000\":1,\"1166\":1,\"1167\":1,\"1171\":1,\"1172\":1,\"1173\":1,\"1186\":1,\"1514\":3,\"1515\":1}}],[\"v11\",{\"1\":{\"103\":2,\"424\":2,\"476\":1,\"491\":1,\"492\":1,\"493\":1,\"613\":2,\"939\":2,\"991\":1,\"1006\":1,\"1007\":1,\"1008\":1,\"1128\":2,\"1454\":2,\"1506\":1,\"1521\":1,\"1522\":1,\"1523\":1}}],[\"v\",{\"1\":{\"100\":3,\"610\":3,\"1125\":3,\"1910\":1,\"1913\":2,\"2279\":1,\"2282\":2,\"2648\":1,\"2651\":2}}],[\"vscode\",{\"1\":{\"10\":5,\"22\":5,\"34\":5}}],[\"visual\",{\"0\":{\"10\":1,\"22\":1,\"34\":1},\"1\":{\"10\":1,\"22\":1,\"34\":1}}],[\"配置为\",{\"1\":{\"1909\":1,\"2278\":1,\"2647\":1}}],[\"配置命令分割字符\",{\"1\":{\"508\":1,\"1023\":1,\"1538\":1}}],[\"配置命令起始字符\",{\"1\":{\"508\":1,\"1023\":1,\"1538\":1}}],[\"配置与运行项目\",{\"1\":{\"499\":1,\"1014\":1,\"1529\":1}}],[\"配置读写等\",{\"1\":{\"492\":1,\"493\":1,\"1007\":1,\"1008\":1,\"1522\":1,\"1523\":1}}],[\"配置读写等功能\",{\"1\":{\"492\":1,\"493\":1,\"1007\":1,\"1008\":1,\"1522\":1,\"1523\":1}}],[\"配置需要包含\",{\"1\":{\"458\":1,\"973\":1,\"1488\":1}}],[\"配置参数\",{\"1\":{\"458\":1,\"973\":1,\"1488\":1}}],[\"配置插件\",{\"0\":{\"448\":1,\"963\":1,\"1478\":1}}],[\"配置目录为\",{\"1\":{\"440\":1,\"955\":1,\"1470\":1}}],[\"配置情况下\",{\"1\":{\"361\":1,\"876\":1,\"1391\":1}}],[\"配置改变日志等级\",{\"1\":{\"230\":1,\"742\":1,\"1257\":1}}],[\"配置改变\",{\"1\":{\"227\":1,\"739\":1,\"1254\":1}}],[\"配置格式为\",{\"1\":{\"166\":1,\"676\":1,\"1191\":1}}],[\"配置方法参考\",{\"1\":{\"165\":1,\"166\":1,\"675\":1,\"676\":1,\"1190\":1,\"1191\":1}}],[\"配置文件中的字段无法满足你的需求\",{\"1\":{\"520\":1,\"521\":1,\"1035\":1,\"1036\":1,\"1550\":1,\"1551\":1}}],[\"配置文件中添加以下配置即可使用\",{\"1\":{\"448\":1,\"963\":1,\"1478\":1}}],[\"配置文件用于存放\",{\"1\":{\"508\":1,\"1023\":1,\"1538\":1}}],[\"配置文件名\",{\"1\":{\"224\":1,\"736\":1,\"1251\":1}}],[\"配置文件\",{\"1\":{\"163\":1,\"506\":1,\"673\":1,\"1021\":1,\"1188\":1,\"1536\":1}}],[\"配置项需符合\",{\"1\":{\"508\":1,\"1023\":1,\"1538\":1}}],[\"配置项需符合特殊格式或\",{\"1\":{\"162\":1,\"672\":1,\"1187\":1}}],[\"配置项的读取将在下方\",{\"1\":{\"469\":1,\"984\":1,\"1499\":1}}],[\"配置项具体含义参考\",{\"1\":{\"449\":1,\"964\":1,\"1479\":1}}],[\"配置项过滤日志等级\",{\"1\":{\"420\":1,\"935\":1,\"1450\":1}}],[\"配置项来过滤输出等级\",{\"1\":{\"419\":1,\"934\":1,\"1449\":1}}],[\"配置项\",{\"0\":{\"59\":1,\"71\":1,\"436\":1,\"449\":1,\"455\":1,\"569\":1,\"581\":1,\"951\":1,\"964\":1,\"970\":1,\"1084\":1,\"1096\":1,\"1466\":1,\"1479\":1,\"1485\":1,\"1915\":1,\"2284\":1,\"2653\":1},\"1\":{\"515\":1,\"1030\":1,\"1545\":1}}],[\"配置驱动器\",{\"0\":{\"54\":1,\"564\":1,\"1079\":1},\"1\":{\"166\":1,\"676\":1,\"1191\":1}}],[\"配置\",{\"0\":{\"1935\":1,\"2304\":1,\"2673\":1},\"1\":{\"10\":1,\"22\":1,\"34\":1,\"165\":1,\"365\":1,\"480\":1,\"485\":1,\"508\":2,\"675\":1,\"880\":1,\"995\":1,\"1000\":1,\"1023\":2,\"1190\":1,\"1395\":1,\"1510\":1,\"1515\":1,\"1538\":2,\"1581\":1,\"1600\":1,\"1950\":1,\"1962\":1,\"2319\":1,\"2331\":1}}],[\"配置以达到最佳开发体验\",{\"1\":{\"10\":1,\"22\":1,\"34\":1}}],[\"配合编辑器的类型推导功能\",{\"1\":{\"3\":1,\"15\":1,\"27\":1}}],[\"tutorial\",{\"0\":{\"2760\":1,\"2767\":1,\"2774\":1}}],[\"tuple\",{\"1\":{\"105\":2,\"280\":1,\"311\":1,\"319\":2,\"320\":1,\"330\":1,\"352\":1,\"353\":1,\"354\":1,\"355\":1,\"356\":1,\"357\":1,\"360\":1,\"361\":1,\"363\":6,\"364\":1,\"365\":1,\"400\":3,\"401\":6,\"408\":2,\"615\":2,\"792\":1,\"824\":1,\"832\":2,\"833\":1,\"848\":1,\"867\":1,\"868\":1,\"869\":1,\"870\":1,\"871\":1,\"872\":1,\"875\":1,\"876\":1,\"878\":6,\"879\":1,\"880\":1,\"915\":3,\"916\":6,\"923\":2,\"1130\":2,\"1307\":1,\"1339\":1,\"1347\":2,\"1348\":1,\"1363\":1,\"1382\":1,\"1383\":1,\"1384\":1,\"1385\":1,\"1386\":1,\"1387\":1,\"1390\":1,\"1391\":1,\"1393\":6,\"1394\":1,\"1395\":1,\"1430\":3,\"1431\":6,\"1438\":2,\"1612\":2,\"1644\":1,\"1649\":2,\"1650\":3,\"1868\":1,\"1869\":1,\"1870\":1,\"1872\":2,\"1873\":2,\"1875\":1,\"1876\":1,\"1877\":2,\"1878\":2,\"1885\":1,\"1886\":1,\"1887\":1,\"1889\":2,\"1890\":2,\"1892\":1,\"1981\":2,\"2013\":1,\"2018\":2,\"2019\":3,\"2237\":1,\"2238\":1,\"2239\":1,\"2241\":2,\"2242\":2,\"2244\":1,\"2245\":1,\"2246\":2,\"2247\":2,\"2254\":1,\"2255\":1,\"2256\":1,\"2258\":2,\"2259\":2,\"2261\":1,\"2350\":2,\"2382\":1,\"2387\":2,\"2388\":3,\"2606\":1,\"2607\":1,\"2608\":1,\"2610\":2,\"2611\":2,\"2613\":1,\"2614\":1,\"2615\":2,\"2616\":2,\"2623\":1,\"2624\":1,\"2625\":1,\"2627\":2,\"2628\":2,\"2630\":1,\"2696\":6,\"2711\":6,\"2726\":6}}],[\"txt\",{\"1\":{\"2697\":2,\"2712\":2,\"2727\":2}}],[\"tiger\",{\"1\":{\"1937\":1,\"2306\":1,\"2675\":1}}],[\"tips\",{\"1\":{\"1899\":2,\"2268\":2,\"2637\":2}}],[\"timezone\",{\"1\":{\"458\":2,\"973\":2,\"1488\":2}}],[\"timedelta\",{\"1\":{\"175\":1,\"242\":1,\"685\":1,\"755\":1,\"1200\":1,\"1270\":1,\"1863\":1,\"1864\":1,\"1865\":1,\"1866\":1,\"1867\":1,\"1868\":1,\"1869\":1,\"1870\":1,\"1871\":1,\"1872\":1,\"1873\":1,\"1874\":1,\"1875\":1,\"1876\":1,\"1877\":1,\"1878\":1,\"1879\":1,\"1880\":1,\"1881\":1,\"1882\":1,\"1883\":1,\"1884\":1,\"1885\":1,\"1886\":1,\"1887\":1,\"1888\":1,\"1889\":1,\"1890\":1,\"1891\":1,\"1892\":1,\"2232\":1,\"2233\":1,\"2234\":1,\"2235\":1,\"2236\":1,\"2237\":1,\"2238\":1,\"2239\":1,\"2240\":1,\"2241\":1,\"2242\":1,\"2243\":1,\"2244\":1,\"2245\":1,\"2246\":1,\"2247\":1,\"2248\":1,\"2249\":1,\"2250\":1,\"2251\":1,\"2252\":1,\"2253\":1,\"2254\":1,\"2255\":1,\"2256\":1,\"2257\":1,\"2258\":1,\"2259\":1,\"2260\":1,\"2261\":1,\"2601\":1,\"2602\":1,\"2603\":1,\"2604\":1,\"2605\":1,\"2606\":1,\"2607\":1,\"2608\":1,\"2609\":1,\"2610\":1,\"2611\":1,\"2612\":1,\"2613\":1,\"2614\":1,\"2615\":1,\"2616\":1,\"2617\":1,\"2618\":1,\"2619\":1,\"2620\":1,\"2621\":1,\"2622\":1,\"2623\":1,\"2624\":1,\"2625\":1,\"2626\":1,\"2627\":1,\"2628\":1,\"2629\":1,\"2630\":1}}],[\"time\",{\"1\":{\"91\":3,\"93\":1,\"242\":1,\"420\":2,\"423\":2,\"601\":3,\"603\":1,\"755\":1,\"935\":2,\"938\":2,\"1116\":3,\"1118\":1,\"1270\":1,\"1450\":2,\"1453\":2,\"1863\":1,\"1864\":1,\"1865\":1,\"1866\":1,\"1867\":1,\"1868\":1,\"1869\":1,\"1870\":1,\"1871\":1,\"1872\":1,\"1873\":1,\"1874\":1,\"1875\":1,\"1876\":1,\"1877\":1,\"1878\":1,\"1879\":1,\"1880\":1,\"1881\":1,\"1882\":1,\"1883\":1,\"1884\":1,\"1885\":1,\"1886\":1,\"1887\":1,\"1888\":1,\"1889\":1,\"1890\":1,\"1891\":1,\"1892\":1,\"2232\":1,\"2233\":1,\"2234\":1,\"2235\":1,\"2236\":1,\"2237\":1,\"2238\":1,\"2239\":1,\"2240\":1,\"2241\":1,\"2242\":1,\"2243\":1,\"2244\":1,\"2245\":1,\"2246\":1,\"2247\":1,\"2248\":1,\"2249\":1,\"2250\":1,\"2251\":1,\"2252\":1,\"2253\":1,\"2254\":1,\"2255\":1,\"2256\":1,\"2257\":1,\"2258\":1,\"2259\":1,\"2260\":1,\"2261\":1,\"2601\":1,\"2602\":1,\"2603\":1,\"2604\":1,\"2605\":1,\"2606\":1,\"2607\":1,\"2608\":1,\"2609\":1,\"2610\":1,\"2611\":1,\"2612\":1,\"2613\":1,\"2614\":1,\"2615\":1,\"2616\":1,\"2617\":1,\"2618\":1,\"2619\":1,\"2620\":1,\"2621\":1,\"2622\":1,\"2623\":1,\"2624\":1,\"2625\":1,\"2626\":1,\"2627\":1,\"2628\":1,\"2629\":1,\"2630\":1}}],[\"timeout=\",{\"1\":{\"175\":2,\"685\":2,\"1200\":2}}],[\"timeout\",{\"1\":{\"53\":2,\"449\":1,\"563\":2,\"964\":1,\"1078\":2,\"1479\":1,\"1659\":1,\"1666\":1,\"1705\":1,\"1711\":1,\"1735\":1,\"1760\":1,\"1938\":1,\"2028\":1,\"2035\":1,\"2074\":1,\"2080\":1,\"2111\":1,\"2116\":1,\"2307\":1,\"2397\":1,\"2404\":1,\"2443\":1,\"2449\":1,\"2480\":1,\"2485\":1,\"2676\":1}}],[\"tf\",{\"1\":{\"1641\":1,\"1642\":1,\"1643\":1,\"2010\":1,\"2011\":1,\"2012\":1,\"2379\":1,\"2380\":1,\"2381\":1}}],[\"tms\",{\"1\":{\"1610\":1,\"1611\":1,\"1612\":4,\"1613\":1,\"1614\":1,\"1615\":1,\"1617\":1,\"1618\":1,\"1619\":1,\"1620\":1,\"1621\":1,\"1631\":2,\"1636\":1,\"1979\":1,\"1980\":1,\"1981\":4,\"1982\":1,\"1983\":1,\"1984\":1,\"1986\":1,\"1987\":1,\"1988\":1,\"1989\":1,\"1990\":1,\"2000\":2,\"2005\":1,\"2348\":1,\"2349\":1,\"2350\":4,\"2351\":1,\"2352\":1,\"2353\":1,\"2355\":1,\"2356\":1,\"2357\":1,\"2358\":1,\"2359\":1,\"2369\":2,\"2374\":1}}],[\"tm\",{\"1\":{\"1609\":1,\"1629\":1,\"1631\":1,\"1636\":2,\"1639\":2,\"1978\":1,\"1998\":1,\"2000\":1,\"2005\":2,\"2008\":2,\"2347\":1,\"2367\":1,\"2369\":1,\"2374\":2,\"2377\":2}}],[\"tmp\",{\"1\":{\"438\":1,\"439\":1,\"440\":1,\"441\":1,\"442\":1,\"443\":1,\"953\":1,\"954\":1,\"955\":1,\"956\":1,\"957\":1,\"958\":1,\"1468\":1,\"1469\":1,\"1470\":1,\"1471\":1,\"1472\":1,\"1473\":1}}],[\"tsx\",{\"1\":{\"503\":1,\"1018\":1,\"1533\":1}}],[\"ts\",{\"1\":{\"503\":1,\"1018\":1,\"1533\":1}}],[\"typing\",{\"0\":{\"372\":1,\"887\":1,\"1402\":1},\"1\":{\"401\":3,\"431\":3,\"470\":2,\"472\":1,\"475\":1,\"476\":2,\"477\":2,\"478\":1,\"479\":2,\"916\":3,\"946\":3,\"985\":2,\"987\":1,\"990\":1,\"991\":2,\"992\":2,\"993\":1,\"994\":2,\"1431\":3,\"1461\":3,\"1500\":2,\"1502\":1,\"1505\":1,\"1506\":2,\"1507\":2,\"1508\":1,\"1509\":2,\"1897\":1,\"1913\":1,\"2266\":1,\"2282\":1,\"2635\":1,\"2651\":1,\"2687\":1,\"2694\":1,\"2702\":1,\"2709\":1,\"2717\":1,\"2724\":1}}],[\"typeddict\",{\"1\":{\"1907\":1,\"2276\":1,\"2645\":1}}],[\"typeadapter\",{\"1\":{\"538\":4,\"1053\":4,\"1568\":4}}],[\"typevar\",{\"1\":{\"401\":1,\"916\":1,\"1431\":1}}],[\"types\",{\"1\":{\"370\":1,\"371\":1,\"401\":1,\"885\":1,\"886\":1,\"916\":1,\"1400\":1,\"1401\":1,\"1431\":1,\"1623\":1,\"1624\":1,\"1648\":1,\"1649\":1,\"1650\":1,\"1651\":1,\"1875\":1,\"1892\":1,\"1992\":1,\"1993\":1,\"2017\":1,\"2018\":1,\"2019\":1,\"2020\":1,\"2244\":1,\"2261\":1,\"2361\":1,\"2362\":1,\"2386\":1,\"2387\":1,\"2388\":1,\"2389\":1,\"2613\":1,\"2630\":1}}],[\"typeupdater\",{\"1\":{\"242\":1,\"246\":2,\"394\":1,\"755\":1,\"759\":2,\"909\":1,\"1270\":1,\"1274\":2,\"1424\":1}}],[\"typemismatch\",{\"1\":{\"195\":1,\"707\":1,\"1222\":1}}],[\"type=\",{\"1\":{\"110\":1,\"534\":2,\"545\":6,\"620\":1,\"1049\":2,\"1060\":6,\"1135\":1,\"1564\":2,\"1575\":6}}],[\"typecheckingmode\",{\"1\":{\"10\":1,\"22\":1,\"34\":1}}],[\"type\",{\"1\":{\"10\":2,\"22\":2,\"34\":2,\"42\":2,\"58\":1,\"82\":1,\"86\":1,\"93\":1,\"103\":3,\"110\":1,\"139\":1,\"144\":1,\"156\":1,\"157\":1,\"159\":3,\"160\":3,\"161\":2,\"162\":1,\"163\":1,\"165\":1,\"216\":2,\"218\":1,\"224\":1,\"242\":4,\"276\":1,\"277\":1,\"278\":4,\"279\":1,\"280\":1,\"282\":1,\"283\":2,\"284\":1,\"285\":1,\"292\":1,\"298\":1,\"340\":1,\"341\":1,\"342\":1,\"343\":1,\"370\":1,\"371\":1,\"372\":1,\"374\":2,\"375\":1,\"376\":1,\"377\":2,\"378\":1,\"379\":2,\"400\":2,\"401\":2,\"402\":3,\"408\":2,\"475\":3,\"477\":2,\"478\":5,\"479\":4,\"480\":1,\"485\":1,\"487\":1,\"488\":1,\"489\":1,\"527\":1,\"534\":1,\"538\":2,\"543\":1,\"552\":2,\"568\":1,\"592\":1,\"596\":1,\"603\":1,\"613\":3,\"620\":1,\"649\":1,\"654\":1,\"666\":1,\"667\":1,\"669\":3,\"670\":3,\"671\":2,\"672\":1,\"673\":1,\"675\":1,\"728\":2,\"730\":1,\"736\":1,\"755\":4,\"788\":1,\"789\":1,\"790\":4,\"791\":1,\"792\":1,\"794\":1,\"795\":2,\"796\":1,\"797\":1,\"804\":1,\"808\":1,\"855\":1,\"856\":1,\"857\":1,\"858\":1,\"885\":1,\"886\":1,\"887\":1,\"889\":2,\"890\":1,\"891\":1,\"892\":2,\"893\":1,\"894\":2,\"915\":2,\"916\":2,\"917\":3,\"923\":2,\"990\":3,\"992\":2,\"993\":5,\"994\":4,\"995\":1,\"1000\":1,\"1002\":1,\"1003\":1,\"1004\":1,\"1042\":1,\"1049\":1,\"1053\":2,\"1058\":1,\"1067\":2,\"1083\":1,\"1107\":1,\"1111\":1,\"1118\":1,\"1128\":3,\"1135\":1,\"1164\":1,\"1169\":1,\"1181\":1,\"1182\":1,\"1184\":3,\"1185\":3,\"1186\":2,\"1187\":1,\"1188\":1,\"1190\":1,\"1243\":2,\"1245\":1,\"1251\":1,\"1270\":4,\"1303\":1,\"1304\":1,\"1305\":4,\"1306\":1,\"1307\":1,\"1309\":1,\"1310\":2,\"1311\":1,\"1312\":1,\"1319\":1,\"1323\":1,\"1370\":1,\"1371\":1,\"1372\":1,\"1373\":1,\"1400\":1,\"1401\":1,\"1402\":1,\"1404\":2,\"1405\":1,\"1406\":1,\"1407\":2,\"1408\":1,\"1409\":2,\"1430\":2,\"1431\":2,\"1432\":3,\"1438\":2,\"1505\":3,\"1507\":2,\"1508\":5,\"1509\":4,\"1510\":1,\"1515\":1,\"1517\":1,\"1518\":1,\"1519\":1,\"1557\":1,\"1564\":1,\"1568\":2,\"1573\":1,\"1610\":1,\"1616\":1,\"1629\":1,\"1639\":2,\"1649\":1,\"1650\":1,\"1651\":1,\"1720\":1,\"1757\":8,\"1809\":2,\"1814\":1,\"1845\":1,\"1848\":1,\"1854\":1,\"1859\":1,\"1863\":2,\"1864\":1,\"1865\":1,\"1866\":1,\"1867\":1,\"1868\":1,\"1869\":1,\"1870\":1,\"1871\":1,\"1872\":1,\"1873\":1,\"1874\":1,\"1875\":3,\"1877\":1,\"1878\":1,\"1879\":1,\"1880\":2,\"1881\":1,\"1882\":1,\"1883\":1,\"1884\":1,\"1885\":1,\"1886\":1,\"1887\":1,\"1888\":1,\"1889\":1,\"1890\":1,\"1891\":1,\"1892\":3,\"1894\":1,\"1897\":1,\"1898\":1,\"1902\":1,\"1904\":1,\"1905\":1,\"1979\":1,\"1985\":1,\"1998\":1,\"2008\":2,\"2018\":1,\"2019\":1,\"2020\":1,\"2099\":1,\"2133\":8,\"2178\":2,\"2183\":1,\"2214\":1,\"2217\":1,\"2223\":1,\"2228\":1,\"2232\":2,\"2233\":1,\"2234\":1,\"2235\":1,\"2236\":1,\"2237\":1,\"2238\":1,\"2239\":1,\"2240\":1,\"2241\":1,\"2242\":1,\"2243\":1,\"2244\":3,\"2246\":1,\"2247\":1,\"2248\":1,\"2249\":2,\"2250\":1,\"2251\":1,\"2252\":1,\"2253\":1,\"2254\":1,\"2255\":1,\"2256\":1,\"2257\":1,\"2258\":1,\"2259\":1,\"2260\":1,\"2261\":3,\"2263\":1,\"2266\":1,\"2267\":1,\"2271\":1,\"2273\":1,\"2274\":1,\"2348\":1,\"2354\":1,\"2367\":1,\"2377\":2,\"2387\":1,\"2388\":1,\"2389\":1,\"2468\":1,\"2502\":8,\"2547\":2,\"2552\":1,\"2583\":1,\"2586\":1,\"2592\":1,\"2597\":1,\"2601\":2,\"2602\":1,\"2603\":1,\"2604\":1,\"2605\":1,\"2606\":1,\"2607\":1,\"2608\":1,\"2609\":1,\"2610\":1,\"2611\":1,\"2612\":1,\"2613\":3,\"2615\":1,\"2616\":1,\"2617\":1,\"2618\":2,\"2619\":1,\"2620\":1,\"2621\":1,\"2622\":1,\"2623\":1,\"2624\":1,\"2625\":1,\"2626\":1,\"2627\":1,\"2628\":1,\"2629\":1,\"2630\":3,\"2632\":1,\"2635\":1,\"2636\":1,\"2640\":1,\"2642\":1,\"2643\":1}}],[\"tada\",{\"1\":{\"545\":4,\"1060\":4,\"1575\":4}}],[\"table=<weather>\",{\"1\":{\"2686\":2,\"2701\":2,\"2716\":2}}],[\"tablename\",{\"1\":{\"2685\":2,\"2700\":2,\"2715\":2}}],[\"table\",{\"1\":{\"521\":1,\"1036\":1,\"1551\":1,\"2685\":3,\"2686\":8,\"2700\":3,\"2701\":8,\"2715\":3,\"2716\":8}}],[\"tailwind\",{\"1\":{\"503\":1,\"1018\":1,\"1533\":1}}],[\"tailwindcss\",{\"1\":{\"503\":1,\"1018\":1,\"1533\":1}}],[\"tag\",{\"1\":{\"478\":2,\"479\":1,\"993\":2,\"994\":1,\"1508\":2,\"1509\":1}}],[\"task\",{\"1\":{\"293\":1,\"472\":7,\"475\":1,\"805\":1,\"987\":7,\"990\":1,\"1320\":1,\"1502\":7,\"1505\":1}}],[\"targets\",{\"0\":{\"1925\":1,\"2294\":1,\"2663\":1}}],[\"target\",{\"1\":{\"180\":1,\"181\":1,\"264\":1,\"690\":1,\"691\":1,\"777\":1,\"1205\":1,\"1206\":1,\"1292\":1,\"1834\":1,\"2203\":1,\"2572\":1}}],[\"t\",{\"1\":{\"159\":2,\"160\":2,\"242\":4,\"244\":1,\"245\":2,\"246\":2,\"247\":2,\"248\":1,\"249\":2,\"250\":2,\"251\":2,\"259\":3,\"261\":3,\"262\":3,\"265\":3,\"267\":1,\"268\":1,\"271\":2,\"272\":2,\"278\":3,\"288\":2,\"289\":2,\"290\":2,\"291\":2,\"292\":2,\"297\":1,\"301\":1,\"333\":1,\"335\":1,\"347\":1,\"349\":2,\"363\":6,\"407\":2,\"408\":6,\"409\":2,\"414\":1,\"431\":8,\"472\":1,\"473\":1,\"669\":2,\"670\":2,\"755\":4,\"757\":1,\"758\":2,\"759\":2,\"760\":2,\"761\":1,\"762\":2,\"763\":2,\"764\":2,\"772\":3,\"774\":3,\"775\":3,\"778\":3,\"780\":1,\"781\":1,\"784\":2,\"785\":2,\"790\":3,\"800\":2,\"801\":2,\"802\":2,\"803\":2,\"804\":2,\"815\":1,\"819\":1,\"845\":1,\"847\":1,\"862\":1,\"864\":2,\"878\":6,\"922\":2,\"923\":6,\"924\":2,\"929\":1,\"946\":8,\"987\":1,\"988\":1,\"1184\":2,\"1185\":2,\"1270\":4,\"1272\":1,\"1273\":2,\"1274\":2,\"1275\":2,\"1276\":1,\"1277\":2,\"1278\":2,\"1279\":2,\"1287\":3,\"1289\":3,\"1290\":3,\"1293\":3,\"1295\":1,\"1296\":1,\"1299\":2,\"1300\":2,\"1305\":3,\"1315\":2,\"1316\":2,\"1317\":2,\"1318\":2,\"1319\":2,\"1330\":1,\"1334\":1,\"1360\":1,\"1362\":1,\"1377\":1,\"1379\":2,\"1393\":6,\"1437\":2,\"1438\":6,\"1439\":2,\"1444\":1,\"1461\":8,\"1502\":1,\"1503\":1,\"1584\":2,\"1585\":2,\"1640\":2,\"1726\":2,\"1727\":2,\"1796\":2,\"1863\":4,\"1864\":4,\"1865\":4,\"1866\":4,\"1867\":4,\"1868\":4,\"1869\":4,\"1870\":4,\"1871\":4,\"1872\":4,\"1873\":4,\"1874\":4,\"1875\":4,\"1876\":4,\"1877\":4,\"1878\":4,\"1879\":4,\"1880\":4,\"1881\":4,\"1882\":4,\"1883\":4,\"1884\":4,\"1885\":4,\"1886\":4,\"1887\":4,\"1888\":4,\"1889\":4,\"1890\":4,\"1891\":4,\"1892\":4,\"1965\":2,\"1966\":2,\"2009\":2,\"2105\":2,\"2106\":2,\"2165\":2,\"2232\":4,\"2233\":4,\"2234\":4,\"2235\":4,\"2236\":4,\"2237\":4,\"2238\":4,\"2239\":4,\"2240\":4,\"2241\":4,\"2242\":4,\"2243\":4,\"2244\":4,\"2245\":4,\"2246\":4,\"2247\":4,\"2248\":4,\"2249\":4,\"2250\":4,\"2251\":4,\"2252\":4,\"2253\":4,\"2254\":4,\"2255\":4,\"2256\":4,\"2257\":4,\"2258\":4,\"2259\":4,\"2260\":4,\"2261\":4,\"2334\":2,\"2335\":2,\"2378\":2,\"2474\":2,\"2475\":2,\"2534\":2,\"2601\":4,\"2602\":4,\"2603\":4,\"2604\":4,\"2605\":4,\"2606\":4,\"2607\":4,\"2608\":4,\"2609\":4,\"2610\":4,\"2611\":4,\"2612\":4,\"2613\":4,\"2614\":4,\"2615\":4,\"2616\":4,\"2617\":4,\"2618\":4,\"2619\":4,\"2620\":4,\"2621\":4,\"2622\":4,\"2623\":4,\"2624\":4,\"2625\":4,\"2626\":4,\"2627\":4,\"2628\":4,\"2629\":4,\"2630\":4,\"2687\":3,\"2702\":3,\"2717\":3}}],[\"tortoise\",{\"1\":{\"2687\":1,\"2702\":1,\"2717\":1}}],[\"tool\",{\"1\":{\"480\":1,\"515\":1,\"521\":2,\"995\":1,\"1030\":1,\"1036\":2,\"1510\":1,\"1545\":1,\"1551\":2,\"1820\":2,\"2189\":2,\"2558\":2}}],[\"token\",{\"1\":{\"469\":1,\"472\":1,\"984\":1,\"987\":1,\"1499\":1,\"1502\":1}}],[\"toml\",{\"1\":{\"110\":1,\"116\":1,\"216\":2,\"465\":1,\"480\":1,\"515\":3,\"521\":6,\"620\":1,\"626\":1,\"728\":2,\"980\":1,\"995\":1,\"1030\":3,\"1036\":6,\"1135\":1,\"1141\":1,\"1243\":2,\"1495\":1,\"1510\":1,\"1545\":3,\"1551\":6,\"1809\":2,\"1820\":5,\"2178\":2,\"2189\":5,\"2547\":2,\"2558\":5}}],[\"tome\",{\"1\":{\"50\":2,\"132\":1,\"134\":1,\"478\":1,\"528\":1,\"560\":2,\"642\":1,\"644\":1,\"993\":1,\"1043\":1,\"1075\":2,\"1157\":1,\"1159\":1,\"1508\":1,\"1558\":1}}],[\"to\",{\"1\":{\"102\":3,\"106\":1,\"154\":1,\"310\":1,\"428\":1,\"472\":4,\"473\":1,\"475\":2,\"477\":1,\"517\":2,\"518\":1,\"519\":2,\"520\":2,\"521\":2,\"529\":1,\"612\":3,\"616\":1,\"664\":1,\"823\":1,\"943\":1,\"987\":4,\"988\":1,\"990\":2,\"992\":1,\"1032\":2,\"1033\":1,\"1034\":2,\"1035\":2,\"1036\":2,\"1044\":1,\"1127\":3,\"1131\":1,\"1179\":1,\"1338\":1,\"1458\":1,\"1502\":4,\"1503\":1,\"1505\":2,\"1507\":1,\"1547\":2,\"1548\":1,\"1549\":2,\"1550\":2,\"1551\":2,\"1559\":1,\"1816\":2,\"1919\":1,\"2185\":2,\"2288\":1,\"2554\":2,\"2657\":1}}],[\"term\",{\"1\":{\"480\":1,\"995\":1,\"1510\":1}}],[\"telegram\",{\"0\":{\"488\":1,\"1003\":1,\"1518\":1},\"1\":{\"473\":1,\"476\":1,\"479\":1,\"488\":5,\"500\":1,\"988\":1,\"991\":1,\"994\":1,\"1003\":5,\"1015\":1,\"1503\":1,\"1506\":1,\"1509\":1,\"1518\":5,\"1530\":1}}],[\"testing\",{\"0\":{\"2777\":1,\"2780\":1,\"2783\":1}}],[\"tests\",{\"1\":{\"2697\":2,\"2712\":2,\"2727\":2}}],[\"test123\",{\"1\":{\"1910\":1,\"2279\":1,\"2648\":1}}],[\"test4\",{\"1\":{\"543\":1,\"1058\":1,\"1573\":1}}],[\"test3\",{\"1\":{\"543\":3,\"1058\":3,\"1573\":3}}],[\"test2\",{\"1\":{\"543\":6,\"1058\":6,\"1573\":6}}],[\"test\",{\"1\":{\"361\":6,\"365\":2,\"496\":1,\"542\":1,\"543\":3,\"876\":6,\"880\":2,\"1011\":1,\"1057\":1,\"1058\":3,\"1391\":6,\"1395\":2,\"1526\":1,\"1572\":1,\"1573\":3,\"1896\":5,\"1900\":2,\"1910\":1,\"1911\":4,\"1912\":2,\"1914\":2,\"1941\":6,\"1942\":3,\"2265\":5,\"2269\":2,\"2279\":1,\"2280\":4,\"2281\":2,\"2283\":2,\"2310\":6,\"2311\":3,\"2634\":5,\"2638\":2,\"2648\":1,\"2649\":4,\"2650\":2,\"2652\":2,\"2679\":6,\"2680\":3,\"2697\":4,\"2712\":4,\"2727\":4}}],[\"template\",{\"1\":{\"459\":1,\"545\":6,\"974\":1,\"1060\":6,\"1489\":1,\"1575\":6,\"1639\":1,\"2008\":1,\"2377\":1}}],[\"temp\",{\"1\":{\"91\":2,\"93\":1,\"242\":1,\"601\":2,\"603\":1,\"755\":1,\"1116\":2,\"1118\":1,\"1270\":1,\"1863\":1,\"1864\":1,\"1865\":1,\"1866\":1,\"1867\":1,\"1868\":1,\"1869\":1,\"1870\":1,\"1871\":1,\"1872\":1,\"1873\":1,\"1874\":1,\"1875\":1,\"1876\":1,\"1877\":1,\"1878\":1,\"1879\":1,\"1880\":1,\"1881\":1,\"1882\":1,\"1883\":1,\"1884\":1,\"1885\":1,\"1886\":1,\"1887\":1,\"1888\":1,\"1889\":1,\"1890\":1,\"1891\":1,\"1892\":1,\"2232\":1,\"2233\":1,\"2234\":1,\"2235\":1,\"2236\":1,\"2237\":1,\"2238\":1,\"2239\":1,\"2240\":1,\"2241\":1,\"2242\":1,\"2243\":1,\"2244\":1,\"2245\":1,\"2246\":1,\"2247\":1,\"2248\":1,\"2249\":1,\"2250\":1,\"2251\":1,\"2252\":1,\"2253\":1,\"2254\":1,\"2255\":1,\"2256\":1,\"2257\":1,\"2258\":1,\"2259\":1,\"2260\":1,\"2261\":1,\"2601\":1,\"2602\":1,\"2603\":1,\"2604\":1,\"2605\":1,\"2606\":1,\"2607\":1,\"2608\":1,\"2609\":1,\"2610\":1,\"2611\":1,\"2612\":1,\"2613\":1,\"2614\":1,\"2615\":1,\"2616\":1,\"2617\":1,\"2618\":1,\"2619\":1,\"2620\":1,\"2621\":1,\"2622\":1,\"2623\":1,\"2624\":1,\"2625\":1,\"2626\":1,\"2627\":1,\"2628\":1,\"2629\":1,\"2630\":1}}],[\"text\",{\"1\":{\"49\":1,\"108\":1,\"435\":2,\"476\":2,\"479\":3,\"532\":1,\"534\":4,\"536\":2,\"538\":14,\"539\":9,\"541\":5,\"542\":5,\"543\":6,\"544\":50,\"545\":11,\"559\":1,\"618\":1,\"950\":2,\"991\":2,\"994\":3,\"1047\":1,\"1049\":4,\"1051\":2,\"1053\":14,\"1054\":9,\"1056\":5,\"1057\":5,\"1058\":6,\"1059\":50,\"1060\":11,\"1074\":1,\"1133\":1,\"1465\":2,\"1506\":2,\"1509\":3,\"1562\":1,\"1564\":4,\"1566\":2,\"1568\":14,\"1569\":9,\"1571\":5,\"1572\":5,\"1573\":6,\"1574\":50,\"1575\":11,\"1594\":1,\"1746\":1,\"1747\":1,\"1749\":1,\"1750\":1,\"1900\":1,\"1975\":1,\"2124\":1,\"2125\":1,\"2127\":1,\"2128\":1,\"2269\":1,\"2344\":1,\"2493\":1,\"2494\":1,\"2496\":1,\"2497\":1,\"2638\":1,\"2687\":3,\"2688\":6,\"2702\":3,\"2703\":6,\"2717\":3,\"2718\":6}}],[\"threshold\",{\"1\":{\"1903\":1,\"2272\":1,\"2641\":1}}],[\"third\",{\"1\":{\"544\":2,\"1059\":2,\"1574\":2}}],[\"thirdparty\",{\"1\":{\"509\":1,\"1024\":1,\"1539\":1}}],[\"this\",{\"1\":{\"11\":1,\"23\":1,\"35\":1,\"419\":7,\"934\":7,\"1449\":7}}],[\"that\",{\"1\":{\"147\":1,\"657\":1,\"1172\":1}}],[\"theme\",{\"1\":{\"503\":2,\"1018\":2,\"1533\":2}}],[\"the\",{\"1\":{\"70\":1,\"147\":1,\"149\":2,\"150\":2,\"151\":2,\"153\":2,\"154\":2,\"580\":1,\"657\":1,\"659\":2,\"660\":2,\"661\":2,\"663\":2,\"664\":2,\"1095\":1,\"1172\":1,\"1174\":2,\"1175\":2,\"1176\":2,\"1178\":2,\"1179\":2}}],[\"transport\",{\"1\":{\"449\":1,\"964\":1,\"1479\":1}}],[\"traceback\",{\"1\":{\"419\":1,\"934\":1,\"1449\":1,\"2686\":1,\"2701\":1,\"2716\":1}}],[\"trace\",{\"1\":{\"419\":2,\"934\":2,\"1449\":2}}],[\"trie\",{\"1\":{\"351\":1,\"866\":1,\"1381\":1}}],[\"trio\",{\"1\":{\"2\":1,\"14\":1,\"26\":1}}],[\"trying\",{\"1\":{\"472\":2,\"987\":2,\"1502\":2}}],[\"try\",{\"1\":{\"121\":1,\"297\":1,\"419\":1,\"431\":5,\"468\":1,\"472\":2,\"475\":1,\"631\":1,\"815\":1,\"934\":1,\"946\":5,\"983\":1,\"987\":2,\"990\":1,\"1146\":1,\"1330\":1,\"1449\":1,\"1461\":5,\"1498\":1,\"1502\":2,\"1505\":1}}],[\"true\",{\"1\":{\"63\":1,\"90\":1,\"91\":1,\"99\":1,\"100\":2,\"121\":1,\"203\":1,\"297\":1,\"328\":1,\"346\":1,\"365\":2,\"426\":1,\"438\":1,\"439\":1,\"440\":1,\"449\":1,\"456\":1,\"472\":1,\"528\":1,\"539\":1,\"573\":1,\"600\":1,\"601\":1,\"609\":1,\"610\":2,\"631\":1,\"715\":1,\"815\":1,\"843\":1,\"861\":1,\"880\":2,\"941\":1,\"953\":1,\"954\":1,\"955\":1,\"964\":1,\"971\":1,\"987\":1,\"1043\":1,\"1054\":1,\"1088\":1,\"1115\":1,\"1116\":1,\"1124\":1,\"1125\":2,\"1146\":1,\"1230\":1,\"1330\":1,\"1358\":1,\"1376\":1,\"1395\":2,\"1456\":1,\"1468\":1,\"1469\":1,\"1470\":1,\"1479\":1,\"1486\":1,\"1502\":1,\"1558\":1,\"1569\":1,\"1681\":1,\"1894\":1,\"1897\":1,\"1901\":1,\"1937\":1,\"1938\":1,\"2050\":1,\"2263\":1,\"2266\":1,\"2270\":1,\"2306\":1,\"2307\":1,\"2419\":1,\"2632\":1,\"2635\":1,\"2639\":1,\"2675\":1,\"2676\":1}}],[\"并不能通过它操作数据\",{\"1\":{\"2687\":1,\"2702\":1,\"2717\":1}}],[\"并不能\",{\"1\":{\"2687\":1,\"2702\":1,\"2717\":1}}],[\"并不推荐你这么做\",{\"1\":{\"2685\":1,\"2700\":1,\"2715\":1}}],[\"并不会将其当作插件进行跟踪\",{\"1\":{\"116\":1,\"626\":1,\"1141\":1}}],[\"并处理\",{\"1\":{\"1941\":1,\"2310\":1,\"2679\":1}}],[\"并开启\",{\"1\":{\"1937\":1,\"2306\":1,\"2675\":1}}],[\"并附带\",{\"1\":{\"1928\":1,\"2297\":1,\"2666\":1}}],[\"并安装\",{\"1\":{\"1928\":1,\"2297\":1,\"2666\":1}}],[\"并按照特定的流程交由预定义的事件处理依赖进行处理\",{\"1\":{\"526\":1,\"1041\":1,\"1556\":1}}],[\"并写入以下内容\",{\"1\":{\"508\":1,\"509\":1,\"1023\":1,\"1024\":1,\"1538\":1,\"1539\":1}}],[\"并定时更新\",{\"1\":{\"504\":1,\"1019\":1,\"1534\":1}}],[\"并在检查失败时阻止启动\",{\"1\":{\"1934\":1,\"2303\":1,\"2672\":1}}],[\"并在解析失败时使用默认值\",{\"1\":{\"1897\":1,\"2266\":1,\"2635\":1}}],[\"并在人工审核通过后自动存储至\",{\"1\":{\"504\":1,\"1019\":1,\"1534\":1}}],[\"并在异步机制的基础上进行了一定程度的同步函数兼容\",{\"1\":{\"2\":1,\"14\":1,\"26\":1}}],[\"并向全球高校学生开放报名\",{\"1\":{\"502\":1,\"1017\":1,\"1532\":1}}],[\"并更新\",{\"1\":{\"484\":1,\"999\":1,\"1514\":1}}],[\"并更新该事件响应器使其响应当前会话主体的消息\",{\"1\":{\"138\":1,\"648\":1,\"1163\":1}}],[\"并实现相关方法\",{\"1\":{\"477\":1,\"478\":1,\"479\":1,\"992\":1,\"993\":1,\"994\":1,\"1507\":1,\"1508\":1,\"1509\":1}}],[\"并实现适配器的基本信息\",{\"1\":{\"470\":1,\"985\":1,\"1500\":1}}],[\"并调用\",{\"1\":{\"475\":1,\"990\":1,\"1505\":1}}],[\"并调用适配器提供的的\",{\"1\":{\"474\":1,\"989\":1,\"1504\":1}}],[\"并编写相关方法用于初始化适配器\",{\"1\":{\"471\":1,\"986\":1,\"1501\":1}}],[\"并以命名空间包的形式编写\",{\"1\":{\"465\":1,\"980\":1,\"1495\":1}}],[\"并根据实际平台来编写每个部分功能\",{\"1\":{\"464\":1,\"979\":1,\"1494\":1}}],[\"并返回对应的值\",{\"1\":{\"1897\":1,\"2266\":1,\"2635\":1}}],[\"并返回通过该函数调用得到的\",{\"1\":{\"1897\":1,\"2266\":1,\"2635\":1}}],[\"并返回结果\",{\"1\":{\"429\":1,\"944\":1,\"1459\":1}}],[\"并返回自定义内容\",{\"1\":{\"202\":1,\"714\":1,\"1229\":1}}],[\"并且迁移了数据库\",{\"1\":{\"2687\":1,\"2702\":1,\"2717\":1}}],[\"并且在开发环境中测试\",{\"1\":{\"2686\":1,\"2701\":1,\"2716\":1}}],[\"并且最好跟随实践\",{\"1\":{\"2683\":1,\"2698\":1,\"2713\":1}}],[\"并且删除它的数据\",{\"1\":{\"1929\":1,\"2298\":1,\"2667\":1}}],[\"并且可以通过\",{\"1\":{\"1909\":1,\"2278\":1,\"2647\":1}}],[\"并且传递参数给原命令\",{\"1\":{\"1907\":1,\"2276\":1,\"2645\":1}}],[\"并且当事件为指定类型时响应\",{\"1\":{\"1875\":1,\"1892\":1,\"2244\":1,\"2261\":1,\"2613\":1,\"2630\":1}}],[\"并且当消息匹配正则表达式时响应\",{\"1\":{\"1874\":1,\"1891\":1,\"2243\":1,\"2260\":1,\"2612\":1,\"2629\":1}}],[\"并且当消息以指定命令开头时响应\",{\"1\":{\"1872\":1,\"1889\":1,\"2241\":1,\"2258\":1,\"2610\":1,\"2627\":1}}],[\"并且当消息纯文本部分包含关键词时响应\",{\"1\":{\"1871\":1,\"1888\":1,\"2240\":1,\"2257\":1,\"2609\":1,\"2626\":1}}],[\"并且当消息的文本部分与指定内容完全一致时响应\",{\"1\":{\"1870\":1,\"1887\":1,\"2239\":1,\"2256\":1,\"2608\":1,\"2625\":1}}],[\"并且当消息的文本部分以指定内容结尾时响应\",{\"1\":{\"1869\":1,\"1886\":1,\"2238\":1,\"2255\":1,\"2607\":1,\"2624\":1}}],[\"并且当消息的文本部分以指定内容开头时响应\",{\"1\":{\"1868\":1,\"1885\":1,\"2237\":1,\"2254\":1,\"2606\":1,\"2623\":1}}],[\"并且提供了拓展的格式化控制符\",{\"1\":{\"1609\":1,\"1978\":1,\"2347\":1}}],[\"并且注意要根据事件类型实现\",{\"1\":{\"478\":1,\"993\":1,\"1508\":1}}],[\"并且根据需要进行调整\",{\"1\":{\"2686\":1,\"2701\":1,\"2716\":1}}],[\"并且根据\",{\"1\":{\"420\":1,\"935\":1,\"1450\":1}}],[\"并且不局限于解析命令式字符串\",{\"1\":{\"108\":1,\"618\":1,\"1133\":1,\"1893\":1,\"2262\":1,\"2631\":1}}],[\"并存储至\",{\"1\":{\"242\":1,\"755\":1,\"1270\":1}}],[\"并提供\",{\"1\":{\"1577\":1,\"1958\":1,\"2327\":1}}],[\"并提供回复事件\",{\"1\":{\"477\":1,\"992\":1,\"1507\":1}}],[\"并提供回复事件的方法\",{\"1\":{\"37\":1,\"547\":1,\"1062\":1}}],[\"并提供一些快捷方法来帮助用户更好的与机器人进行对话\",{\"1\":{\"232\":1,\"744\":1,\"1259\":1}}],[\"并使用相应的\",{\"1\":{\"224\":1,\"736\":1,\"1251\":1}}],[\"并等待下一条消息后重新运行当前\",{\"1\":{\"206\":1,\"718\":1,\"1233\":1}}],[\"并等待下一条消息后继续下一个\",{\"1\":{\"205\":1,\"717\":1,\"1232\":1}}],[\"并进行对应操作\",{\"1\":{\"195\":1,\"707\":1,\"1222\":1}}],[\"并结合为辅助函数来方便我们快速创建指定功能的响应器\",{\"1\":{\"93\":1,\"603\":1,\"1118\":1}}],[\"并接收接口返回数据\",{\"1\":{\"37\":1,\"547\":1,\"1062\":1}}],[\"并将其值设置为\",{\"1\":{\"10\":2,\"22\":2,\"34\":2}}],[\"并启用\",{\"1\":{\"10\":1,\"22\":1,\"34\":1}}],[\"中统一使用插件模块名\",{\"1\":{\"1926\":1,\"2295\":1,\"2664\":1}}],[\"中传入\",{\"1\":{\"1914\":1,\"2283\":1,\"2652\":1}}],[\"中存储匹配组\",{\"1\":{\"1909\":1,\"2278\":1,\"2647\":1}}],[\"中存在匹配组\",{\"1\":{\"1909\":1,\"2278\":1,\"2647\":1}}],[\"中编写协议通信相关代码\",{\"1\":{\"1596\":1,\"1946\":1,\"2315\":1}}],[\"中提供了一系列\",{\"1\":{\"527\":1,\"1042\":1,\"1557\":1}}],[\"中提供了以下两种直接添加任务的方式\",{\"1\":{\"454\":1,\"969\":1,\"1484\":1}}],[\"中所有事件响应器均继承自\",{\"1\":{\"527\":1,\"1042\":1,\"1557\":1}}],[\"中加载插件\",{\"1\":{\"516\":1,\"1031\":1,\"1546\":1}}],[\"中找到\",{\"1\":{\"507\":2,\"1022\":2,\"1537\":2}}],[\"中介绍\",{\"1\":{\"469\":1,\"984\":1,\"1499\":1}}],[\"中选择\",{\"1\":{\"459\":1,\"974\":1,\"1489\":1}}],[\"中导入\",{\"1\":{\"419\":1,\"934\":1,\"1449\":1}}],[\"中一个类型的实例\",{\"1\":{\"401\":1,\"916\":1,\"1431\":1}}],[\"中一个类型的子类或\",{\"1\":{\"401\":2,\"916\":2,\"1431\":2}}],[\"中仅有\",{\"1\":{\"329\":1,\"331\":1,\"332\":1,\"844\":1,\"849\":1,\"850\":1,\"1359\":1,\"1364\":1,\"1365\":1}}],[\"中读取配置\",{\"1\":{\"224\":1,\"736\":1,\"1251\":1}}],[\"中通过\",{\"1\":{\"200\":1,\"205\":1,\"206\":1,\"207\":1,\"712\":1,\"717\":1,\"718\":1,\"719\":1,\"1227\":1,\"1232\":1,\"1233\":1,\"1234\":1}}],[\"中有一系列预定义的钩子函数\",{\"1\":{\"125\":1,\"635\":1,\"1150\":1}}],[\"中直接导入插件\",{\"1\":{\"117\":1,\"627\":1,\"1142\":1}}],[\"中使用\",{\"1\":{\"117\":1,\"627\":1,\"1142\":1}}],[\"中添加\",{\"1\":{\"480\":1,\"515\":1,\"995\":1,\"1030\":1,\"1510\":1,\"1545\":1}}],[\"中添加适配器名称前缀\",{\"1\":{\"468\":1,\"983\":1,\"1498\":1}}],[\"中添加如下代码\",{\"1\":{\"114\":1,\"624\":1,\"1139\":1}}],[\"中添加插件元数据\",{\"1\":{\"110\":1,\"620\":1,\"1135\":1}}],[\"中包含了多个属性\",{\"1\":{\"111\":1,\"621\":1,\"1136\":1}}],[\"中匹配消息中除\",{\"1\":{\"108\":1,\"618\":1,\"1133\":1}}],[\"中的更改\",{\"1\":{\"2691\":1,\"2692\":1,\"2706\":1,\"2707\":1,\"2721\":1,\"2722\":1}}],[\"中的网络通信主要包括以下几种\",{\"1\":{\"1940\":1,\"2309\":1,\"2678\":1}}],[\"中的类型\",{\"1\":{\"1897\":1,\"2266\":1,\"2635\":1}}],[\"中的内容为\",{\"1\":{\"1894\":1,\"2263\":1,\"2632\":1}}],[\"中的消息载体\",{\"1\":{\"530\":1,\"1045\":1,\"1560\":1}}],[\"中的基本组成部分\",{\"1\":{\"525\":1,\"1040\":1,\"1555\":1}}],[\"中的基类\",{\"1\":{\"464\":1,\"467\":1,\"979\":1,\"982\":1,\"1494\":1,\"1497\":1}}],[\"中的\",{\"1\":{\"521\":1,\"1036\":1,\"1551\":1,\"1820\":1,\"1894\":1,\"1896\":1,\"2189\":1,\"2263\":1,\"2265\":1,\"2558\":1,\"2632\":1,\"2634\":1}}],[\"中的事件主体对象\",{\"1\":{\"478\":1,\"993\":1,\"1508\":1}}],[\"中的会话状态是一个字典\",{\"1\":{\"431\":1,\"946\":1,\"1461\":1}}],[\"中的一个类型子类\",{\"1\":{\"401\":1,\"916\":1,\"1431\":1}}],[\"中的一个类型子类并忽略类型错误\",{\"1\":{\"400\":1,\"915\":1,\"1430\":1}}],[\"中的客户端和服务端型驱动器可以相互配合使用\",{\"1\":{\"54\":1,\"564\":1,\"1079\":1}}],[\"中的第一个\",{\"1\":{\"40\":1,\"550\":1,\"1065\":1}}],[\"中\",{\"1\":{\"10\":1,\"22\":1,\"34\":1,\"37\":1,\"108\":1,\"110\":1,\"118\":1,\"138\":1,\"423\":1,\"450\":1,\"470\":1,\"481\":1,\"485\":2,\"488\":1,\"489\":1,\"491\":1,\"493\":1,\"512\":1,\"526\":1,\"527\":1,\"530\":1,\"532\":1,\"547\":1,\"618\":1,\"620\":1,\"628\":1,\"648\":1,\"938\":1,\"965\":1,\"985\":1,\"996\":1,\"1000\":2,\"1003\":1,\"1004\":1,\"1006\":1,\"1008\":1,\"1027\":1,\"1041\":1,\"1042\":1,\"1045\":1,\"1047\":1,\"1062\":1,\"1133\":1,\"1135\":1,\"1143\":1,\"1163\":1,\"1453\":1,\"1480\":1,\"1500\":1,\"1511\":1,\"1515\":2,\"1518\":1,\"1519\":1,\"1521\":1,\"1523\":1,\"1542\":1,\"1556\":1,\"1557\":1,\"1560\":1,\"1562\":1,\"1896\":2,\"1897\":1,\"1902\":1,\"2265\":2,\"2266\":1,\"2271\":1,\"2634\":2,\"2635\":1,\"2640\":1}}],[\"cp\",{\"1\":{\"1912\":1,\"2281\":1,\"2650\":1}}],[\"cb\",{\"1\":{\"1909\":1,\"2278\":1,\"2647\":1}}],[\"ctx\",{\"1\":{\"1787\":1,\"1941\":5,\"1942\":2,\"2156\":1,\"2310\":5,\"2311\":2,\"2525\":1,\"2679\":5,\"2680\":2}}],[\"css\",{\"1\":{\"503\":1,\"1018\":1,\"1533\":1}}],[\"chatrecorder\",{\"1\":{\"1931\":1,\"2300\":1,\"2669\":1}}],[\"changelog\",{\"1\":{\"503\":1,\"1018\":1,\"1533\":1}}],[\"checkout\",{\"1\":{\"2697\":2,\"2712\":2,\"2727\":2}}],[\"check=false\",{\"1\":{\"2686\":1,\"2701\":1,\"2716\":1}}],[\"check=true\",{\"1\":{\"1934\":1,\"2303\":1,\"2672\":1}}],[\"check\",{\"0\":{\"1934\":1,\"2303\":1,\"2672\":1},\"1\":{\"1928\":1,\"1929\":1,\"1934\":1,\"2297\":1,\"2298\":1,\"2303\":1,\"2666\":1,\"2667\":1,\"2672\":1}}],[\"checkers\",{\"1\":{\"333\":1,\"347\":1,\"845\":1,\"862\":1,\"1360\":1,\"1377\":1,\"1648\":1,\"2017\":1,\"2386\":1}}],[\"checker\",{\"1\":{\"299\":1,\"300\":1,\"305\":1,\"428\":4,\"429\":1,\"812\":1,\"816\":1,\"818\":1,\"943\":4,\"944\":1,\"1327\":1,\"1331\":1,\"1333\":1,\"1458\":4,\"1459\":1}}],[\"checking\",{\"1\":{\"10\":2,\"22\":2,\"34\":2,\"477\":2,\"992\":2,\"1507\":2}}],[\"ci\",{\"1\":{\"485\":2,\"1000\":2,\"1515\":2}}],[\"cqhttp\",{\"1\":{\"484\":2,\"492\":1,\"493\":1,\"999\":2,\"1007\":1,\"1008\":1,\"1514\":2,\"1522\":1,\"1523\":1}}],[\"certs\",{\"1\":{\"449\":1,\"964\":1,\"1479\":1}}],[\"c\",{\"1\":{\"438\":1,\"439\":2,\"440\":2,\"493\":1,\"953\":1,\"954\":2,\"955\":2,\"1008\":1,\"1468\":1,\"1469\":2,\"1470\":2,\"1523\":1,\"1814\":2,\"2183\":2,\"2552\":2}}],[\"cwd=true\",{\"1\":{\"437\":1,\"952\":1,\"1467\":1}}],[\"cwd\",{\"0\":{\"437\":1,\"952\":1,\"1467\":1},\"1\":{\"438\":1,\"439\":1,\"440\":1,\"953\":1,\"954\":1,\"955\":1,\"1468\":1,\"1469\":1,\"1470\":1}}],[\"c>\",{\"1\":{\"420\":2,\"935\":2,\"1450\":2}}],[\"crlf\",{\"1\":{\"1903\":1,\"2272\":1,\"2641\":1}}],[\"cron\",{\"1\":{\"454\":1,\"969\":1,\"1484\":1}}],[\"critical\",{\"1\":{\"419\":3,\"934\":3,\"1449\":3}}],[\"createtable\",{\"1\":{\"2685\":2,\"2700\":2,\"2715\":2}}],[\"create\",{\"1\":{\"113\":2,\"466\":1,\"472\":1,\"475\":1,\"515\":1,\"623\":2,\"981\":1,\"987\":1,\"990\":1,\"1030\":1,\"1138\":2,\"1496\":1,\"1502\":1,\"1505\":1,\"1545\":1,\"1937\":1,\"1938\":1,\"2306\":1,\"2307\":1,\"2675\":1,\"2676\":1,\"2685\":2,\"2686\":3,\"2700\":2,\"2701\":3,\"2715\":2,\"2716\":3}}],[\"cm\",{\"1\":{\"407\":1,\"922\":1,\"1437\":1}}],[\"cmds\",{\"1\":{\"360\":1,\"361\":1,\"364\":1,\"365\":1,\"875\":1,\"876\":1,\"879\":1,\"880\":1,\"1390\":1,\"1391\":1,\"1394\":1,\"1395\":1}}],[\"cmd\",{\"1\":{\"99\":2,\"100\":3,\"105\":15,\"609\":2,\"610\":3,\"615\":15,\"1124\":2,\"1125\":3,\"1130\":15,\"1872\":1,\"1873\":1,\"1876\":1,\"1877\":1,\"1878\":1,\"1889\":1,\"1890\":1,\"1909\":3,\"2241\":1,\"2242\":1,\"2245\":1,\"2246\":1,\"2247\":1,\"2258\":1,\"2259\":1,\"2278\":3,\"2610\":1,\"2611\":1,\"2614\":1,\"2615\":1,\"2616\":1,\"2627\":1,\"2628\":1,\"2647\":3}}],[\"current\",{\"1\":{\"180\":1,\"472\":1,\"473\":1,\"690\":1,\"987\":1,\"988\":1,\"1205\":1,\"1502\":1,\"1503\":1}}],[\"custom\",{\"1\":{\"124\":1,\"634\":1,\"1149\":1}}],[\"customprovider\",{\"1\":{\"82\":1,\"83\":2,\"592\":1,\"593\":2,\"1107\":1,\"1108\":2}}],[\"cvc\",{\"1\":{\"161\":2,\"671\":2,\"1186\":2}}],[\"ca\",{\"1\":{\"449\":1,\"964\":1,\"1479\":1}}],[\"caches\",{\"1\":{\"438\":1,\"953\":1,\"1468\":1}}],[\"cache\",{\"0\":{\"438\":1,\"441\":1,\"953\":1,\"956\":1,\"1468\":1,\"1471\":1},\"1\":{\"244\":1,\"245\":1,\"264\":1,\"267\":1,\"268\":1,\"271\":1,\"272\":1,\"292\":1,\"297\":1,\"302\":1,\"335\":1,\"349\":1,\"435\":4,\"438\":5,\"441\":2,\"757\":1,\"758\":1,\"777\":1,\"780\":1,\"781\":1,\"784\":1,\"785\":1,\"804\":1,\"814\":1,\"815\":1,\"847\":1,\"864\":1,\"950\":4,\"953\":5,\"956\":2,\"1272\":1,\"1273\":1,\"1292\":1,\"1295\":1,\"1296\":1,\"1299\":1,\"1300\":1,\"1319\":1,\"1329\":1,\"1330\":1,\"1362\":1,\"1379\":1,\"1465\":4,\"1468\":5,\"1471\":2,\"1904\":1,\"2273\":1,\"2642\":1}}],[\"calledapihook\",{\"1\":{\"1585\":2,\"1966\":2,\"2335\":2}}],[\"called\",{\"1\":{\"137\":1,\"647\":1,\"1162\":1}}],[\"call\",{\"1\":{\"136\":1,\"385\":1,\"386\":1,\"403\":2,\"404\":2,\"405\":2,\"406\":1,\"476\":2,\"646\":1,\"900\":1,\"901\":1,\"918\":2,\"919\":2,\"920\":2,\"921\":1,\"991\":2,\"1161\":1,\"1415\":1,\"1416\":1,\"1433\":2,\"1434\":2,\"1435\":2,\"1436\":1,\"1506\":2,\"1582\":1,\"1648\":1,\"1649\":1,\"1651\":1,\"1655\":1,\"1963\":1,\"2017\":1,\"2018\":1,\"2020\":1,\"2024\":1,\"2332\":1,\"2386\":1,\"2387\":1,\"2389\":1,\"2393\":1,\"2686\":1,\"2701\":1,\"2716\":1}}],[\"callingapihook\",{\"1\":{\"1584\":2,\"1965\":2,\"2334\":2}}],[\"calling\",{\"1\":{\"136\":1,\"476\":1,\"646\":1,\"991\":1,\"1161\":1,\"1506\":1}}],[\"callable\",{\"1\":{\"120\":1,\"121\":1,\"403\":1,\"449\":2,\"630\":1,\"631\":1,\"918\":1,\"964\":2,\"1145\":1,\"1146\":1,\"1433\":1,\"1479\":2,\"1648\":1,\"1897\":1,\"2017\":1,\"2266\":1,\"2386\":1,\"2635\":1}}],[\"cancel\",{\"1\":{\"472\":1,\"987\":1,\"1502\":1}}],[\"can\",{\"1\":{\"118\":1,\"628\":1,\"1143\":1}}],[\"cleoold\",{\"1\":{\"484\":1,\"485\":1,\"999\":1,\"1000\":1,\"1514\":1,\"1515\":1}}],[\"cleanup\",{\"1\":{\"121\":1,\"631\":1,\"1146\":1}}],[\"cls\",{\"1\":{\"400\":2,\"401\":5,\"470\":1,\"475\":1,\"479\":2,\"915\":2,\"916\":5,\"985\":1,\"990\":1,\"994\":2,\"1430\":2,\"1431\":5,\"1500\":1,\"1505\":1,\"1509\":2}}],[\"close\",{\"1\":{\"121\":1,\"504\":1,\"631\":1,\"1019\":1,\"1146\":1,\"1534\":1}}],[\"closed<\",{\"1\":{\"472\":1,\"987\":1,\"1502\":1}}],[\"closed\",{\"1\":{\"121\":1,\"631\":1,\"1146\":1}}],[\"classmethod\",{\"1\":{\"470\":1,\"475\":1,\"479\":2,\"985\":1,\"990\":1,\"994\":2,\"1500\":1,\"1505\":1,\"1509\":2}}],[\"classvar\",{\"1\":{\"234\":1,\"235\":1,\"236\":1,\"237\":1,\"238\":1,\"240\":1,\"241\":1,\"747\":1,\"748\":1,\"749\":1,\"750\":1,\"751\":1,\"753\":1,\"754\":1,\"1262\":1,\"1263\":1,\"1264\":1,\"1265\":1,\"1266\":1,\"1268\":1,\"1269\":1}}],[\"class\",{\"1\":{\"82\":1,\"146\":1,\"148\":1,\"161\":1,\"284\":1,\"400\":2,\"401\":5,\"469\":1,\"470\":1,\"472\":1,\"473\":1,\"474\":1,\"475\":2,\"476\":1,\"477\":1,\"478\":5,\"479\":4,\"592\":1,\"656\":1,\"658\":1,\"671\":1,\"796\":1,\"915\":2,\"916\":5,\"984\":1,\"985\":1,\"987\":1,\"988\":1,\"989\":1,\"990\":2,\"991\":1,\"992\":1,\"993\":5,\"994\":4,\"1107\":1,\"1171\":1,\"1173\":1,\"1186\":1,\"1311\":1,\"1430\":2,\"1431\":5,\"1499\":1,\"1500\":1,\"1502\":1,\"1503\":1,\"1504\":1,\"1505\":2,\"1506\":1,\"1507\":1,\"1508\":5,\"1509\":4,\"1907\":1,\"1913\":2,\"2276\":1,\"2282\":2,\"2645\":1,\"2651\":2,\"2685\":2,\"2688\":1,\"2691\":1,\"2692\":1,\"2694\":1,\"2700\":2,\"2703\":1,\"2706\":1,\"2707\":1,\"2709\":1,\"2715\":2,\"2718\":1,\"2721\":1,\"2722\":1,\"2724\":1}}],[\"click\",{\"1\":{\"2686\":1,\"2701\":1,\"2716\":1}}],[\"clientwebsocketresponse\",{\"1\":{\"1667\":1,\"2036\":1,\"2405\":1}}],[\"clients\",{\"1\":{\"79\":1,\"589\":1,\"1104\":1}}],[\"clientsession\",{\"1\":{\"7\":1,\"19\":1,\"31\":1,\"1667\":1,\"2036\":1,\"2405\":1}}],[\"client\",{\"1\":{\"78\":1,\"80\":1,\"447\":1,\"472\":2,\"588\":1,\"590\":1,\"962\":1,\"987\":2,\"1103\":1,\"1105\":1,\"1477\":1,\"1502\":2,\"1941\":5,\"1942\":4,\"2310\":5,\"2311\":4,\"2679\":5,\"2680\":4}}],[\"cli\",{\"0\":{\"466\":1,\"495\":1,\"981\":1,\"1010\":1,\"1496\":1,\"1525\":1,\"1930\":1,\"2299\":1,\"2668\":1},\"1\":{\"4\":2,\"16\":2,\"28\":2,\"64\":1,\"72\":1,\"113\":1,\"435\":1,\"495\":6,\"499\":3,\"501\":1,\"505\":2,\"506\":3,\"509\":1,\"510\":2,\"515\":2,\"516\":2,\"574\":1,\"582\":1,\"623\":1,\"950\":1,\"1010\":6,\"1014\":3,\"1016\":1,\"1020\":2,\"1021\":3,\"1024\":1,\"1025\":2,\"1030\":2,\"1031\":2,\"1089\":1,\"1097\":1,\"1138\":1,\"1465\":1,\"1525\":6,\"1529\":3,\"1531\":1,\"1535\":2,\"1536\":3,\"1539\":1,\"1540\":2,\"1545\":2,\"1546\":2,\"1930\":1,\"2299\":1,\"2668\":1,\"2697\":2,\"2712\":2,\"2727\":2}}],[\"collections\",{\"1\":{\"2686\":1,\"2688\":2,\"2701\":1,\"2703\":2,\"2716\":1,\"2718\":2}}],[\"column\",{\"1\":{\"2685\":2,\"2686\":6,\"2688\":1,\"2691\":2,\"2692\":2,\"2694\":2,\"2700\":2,\"2701\":6,\"2703\":1,\"2706\":2,\"2707\":2,\"2709\":2,\"2715\":2,\"2716\":6,\"2718\":1,\"2721\":2,\"2722\":2,\"2724\":2}}],[\"colors=true\",{\"1\":{\"419\":1,\"934\":1,\"1449\":1}}],[\"colors\",{\"1\":{\"419\":1,\"934\":1,\"1449\":1}}],[\"color\",{\"1\":{\"398\":1,\"913\":1,\"1428\":1}}],[\"cov\",{\"1\":{\"480\":2,\"995\":2,\"1510\":2}}],[\"count\",{\"1\":{\"431\":5,\"543\":2,\"946\":5,\"1058\":2,\"1461\":5,\"1573\":2,\"1616\":1,\"1901\":2,\"1908\":2,\"1910\":2,\"1913\":1,\"1985\":1,\"2270\":2,\"2277\":2,\"2279\":2,\"2282\":1,\"2354\":1,\"2639\":2,\"2646\":2,\"2648\":2,\"2651\":1}}],[\"coro\",{\"1\":{\"408\":5,\"409\":1,\"923\":5,\"924\":1,\"1438\":5,\"1439\":1}}],[\"coroutinetype\",{\"1\":{\"2165\":2}}],[\"coroutine\",{\"1\":{\"406\":1,\"408\":2,\"409\":1,\"921\":1,\"923\":2,\"924\":1,\"1436\":1,\"1438\":2,\"1439\":1,\"1796\":2,\"2534\":2}}],[\"correctness\",{\"1\":{\"79\":1,\"589\":1,\"1104\":1}}],[\"community\",{\"0\":{\"2757\":1,\"2764\":1,\"2771\":1}}],[\"commit\",{\"1\":{\"2687\":2,\"2691\":1,\"2702\":2,\"2706\":1,\"2717\":2,\"2721\":1}}],[\"commands\",{\"1\":{\"2686\":9,\"2701\":9,\"2716\":9}}],[\"commandstart\",{\"1\":{\"99\":1,\"609\":1,\"1124\":1}}],[\"command的使用\",{\"0\":{\"1909\":1,\"2278\":1,\"2647\":1}}],[\"commandmeta\",{\"0\":{\"1903\":1,\"2272\":1,\"2641\":1},\"1\":{\"1903\":1,\"1904\":1,\"1910\":1,\"1911\":1,\"1914\":1,\"2272\":1,\"2273\":1,\"2279\":1,\"2280\":1,\"2283\":1,\"2641\":1,\"2642\":1,\"2648\":1,\"2649\":1,\"2652\":1}}],[\"command>\",{\"1\":{\"1872\":1,\"1889\":1,\"2241\":1,\"2258\":1,\"2610\":1,\"2627\":1}}],[\"commandgroup\",{\"1\":{\"105\":6,\"216\":2,\"615\":6,\"728\":2,\"1130\":6,\"1243\":2,\"1809\":2,\"2178\":2,\"2547\":2}}],[\"commandwhitespace\",{\"1\":{\"99\":1,\"609\":1,\"1124\":1}}],[\"commandarg\",{\"1\":{\"99\":1,\"361\":1,\"532\":1,\"609\":1,\"876\":1,\"1047\":1,\"1124\":1,\"1391\":1,\"1562\":1,\"2687\":4,\"2688\":1,\"2702\":4,\"2703\":1,\"2717\":4,\"2718\":1}}],[\"command\",{\"0\":{\"1917\":1,\"1920\":1,\"2286\":1,\"2289\":1,\"2655\":1,\"2658\":1},\"1\":{\"90\":1,\"99\":15,\"100\":7,\"105\":5,\"173\":1,\"174\":1,\"183\":1,\"184\":1,\"185\":1,\"186\":1,\"187\":1,\"216\":4,\"351\":2,\"361\":5,\"365\":6,\"426\":1,\"427\":1,\"428\":2,\"508\":2,\"527\":1,\"528\":3,\"529\":2,\"600\":1,\"609\":15,\"610\":7,\"615\":5,\"683\":1,\"684\":1,\"695\":1,\"696\":1,\"697\":1,\"698\":1,\"699\":1,\"728\":4,\"866\":2,\"876\":5,\"880\":6,\"941\":1,\"942\":1,\"943\":2,\"1023\":2,\"1042\":1,\"1043\":3,\"1044\":2,\"1115\":1,\"1124\":15,\"1125\":7,\"1130\":5,\"1198\":1,\"1199\":1,\"1210\":1,\"1211\":1,\"1212\":1,\"1213\":1,\"1214\":1,\"1243\":4,\"1381\":2,\"1391\":5,\"1395\":6,\"1456\":1,\"1457\":1,\"1458\":2,\"1538\":2,\"1557\":1,\"1558\":3,\"1559\":2,\"1809\":4,\"1872\":1,\"1873\":1,\"1889\":1,\"1890\":1,\"1894\":1,\"1907\":1,\"1909\":5,\"1917\":1,\"1920\":1,\"2178\":4,\"2241\":1,\"2242\":1,\"2258\":1,\"2259\":1,\"2263\":1,\"2276\":1,\"2278\":5,\"2286\":1,\"2289\":1,\"2547\":4,\"2610\":1,\"2611\":1,\"2627\":1,\"2628\":1,\"2632\":1,\"2645\":1,\"2647\":5,\"2655\":1,\"2658\":1,\"2687\":2,\"2702\":2,\"2717\":2}}],[\"comp\",{\"1\":{\"1904\":2,\"1912\":2,\"1918\":1,\"2273\":2,\"2281\":2,\"2287\":1,\"2642\":2,\"2650\":2,\"2656\":1}}],[\"compact=true\",{\"1\":{\"1910\":4,\"2279\":4,\"2648\":4}}],[\"compact\",{\"1\":{\"1903\":1,\"1904\":1,\"1910\":1,\"2272\":1,\"2273\":1,\"2279\":1,\"2641\":1,\"2642\":1,\"2648\":1}}],[\"compatibility\",{\"1\":{\"142\":1,\"146\":1,\"147\":1,\"148\":1,\"652\":1,\"656\":1,\"657\":1,\"658\":1,\"1167\":1,\"1171\":1,\"1172\":1,\"1173\":1}}],[\"compat\",{\"0\":{\"141\":1,\"651\":1,\"1166\":1},\"1\":{\"475\":1,\"478\":1,\"990\":1,\"993\":1,\"1505\":1,\"1508\":1}}],[\"completion\",{\"0\":{\"1918\":1,\"2287\":1,\"2656\":1},\"1\":{\"1899\":1,\"2268\":1,\"2637\":1}}],[\"combineddriver\",{\"1\":{\"1757\":2,\"2133\":2,\"2502\":2}}],[\"com\",{\"1\":{\"495\":2,\"496\":1,\"497\":3,\"499\":1,\"500\":1,\"501\":1,\"503\":1,\"504\":1,\"505\":1,\"1010\":2,\"1011\":1,\"1012\":3,\"1014\":1,\"1015\":1,\"1016\":1,\"1018\":1,\"1019\":1,\"1020\":1,\"1525\":2,\"1526\":1,\"1527\":3,\"1529\":1,\"1530\":1,\"1531\":1,\"1533\":1,\"1534\":1,\"1535\":1}}],[\"conftest\",{\"1\":{\"480\":1,\"995\":1,\"1510\":1}}],[\"config=config\",{\"1\":{\"110\":1,\"620\":1,\"1135\":1}}],[\"config\",{\"0\":{\"162\":1,\"440\":1,\"443\":1,\"458\":1,\"469\":1,\"672\":1,\"955\":1,\"958\":1,\"973\":1,\"984\":1,\"1187\":1,\"1470\":1,\"1473\":1,\"1488\":1,\"1499\":1},\"1\":{\"110\":4,\"145\":1,\"157\":1,\"165\":1,\"216\":2,\"224\":1,\"227\":1,\"230\":1,\"426\":7,\"427\":1,\"428\":8,\"435\":4,\"440\":4,\"443\":2,\"465\":1,\"469\":1,\"470\":7,\"472\":6,\"473\":6,\"515\":1,\"520\":1,\"521\":1,\"620\":4,\"655\":1,\"667\":1,\"675\":1,\"728\":2,\"736\":1,\"739\":1,\"742\":1,\"941\":7,\"942\":1,\"943\":8,\"950\":4,\"955\":4,\"958\":2,\"980\":1,\"984\":1,\"985\":7,\"987\":6,\"988\":6,\"1030\":1,\"1035\":1,\"1036\":1,\"1135\":4,\"1170\":1,\"1182\":1,\"1190\":1,\"1243\":2,\"1251\":1,\"1254\":1,\"1257\":1,\"1456\":7,\"1457\":1,\"1458\":8,\"1465\":4,\"1470\":4,\"1473\":2,\"1495\":1,\"1499\":1,\"1500\":7,\"1502\":6,\"1503\":6,\"1545\":1,\"1550\":1,\"1551\":1,\"1581\":1,\"1600\":1,\"1675\":2,\"1688\":1,\"1712\":2,\"1716\":3,\"1718\":1,\"1766\":2,\"1779\":1,\"1807\":2,\"1814\":1,\"1905\":3,\"1906\":4,\"1950\":1,\"1962\":1,\"2044\":2,\"2057\":1,\"2081\":2,\"2095\":3,\"2097\":1,\"2135\":2,\"2148\":1,\"2176\":2,\"2183\":1,\"2274\":3,\"2275\":4,\"2319\":1,\"2331\":1,\"2413\":2,\"2426\":1,\"2450\":2,\"2464\":3,\"2466\":1,\"2504\":2,\"2517\":1,\"2545\":2,\"2552\":1,\"2643\":3,\"2644\":4,\"2686\":1,\"2701\":1,\"2716\":1}}],[\"contains\",{\"1\":{\"1614\":1,\"1983\":1,\"2352\":1}}],[\"contact\",{\"1\":{\"482\":1,\"494\":1,\"498\":1,\"502\":1,\"997\":1,\"1009\":1,\"1013\":1,\"1017\":1,\"1512\":1,\"1524\":1,\"1528\":1,\"1532\":1}}],[\"contributing\",{\"1\":{\"462\":1,\"488\":1,\"489\":1,\"499\":1,\"500\":1,\"501\":1,\"977\":1,\"1003\":1,\"1004\":1,\"1014\":1,\"1015\":1,\"1016\":1,\"1492\":1,\"1518\":1,\"1519\":1,\"1529\":1,\"1530\":1,\"1531\":1}}],[\"contenttypes\",{\"1\":{\"1735\":1,\"1736\":1,\"2116\":1,\"2117\":1,\"2485\":1,\"2486\":1}}],[\"content\",{\"1\":{\"1735\":1,\"1736\":1,\"1909\":4,\"1910\":2,\"2116\":1,\"2117\":1,\"2278\":4,\"2279\":2,\"2485\":1,\"2486\":1,\"2647\":4,\"2648\":2}}],[\"content=\",{\"1\":{\"120\":1,\"473\":1,\"630\":1,\"988\":1,\"1145\":1,\"1503\":1}}],[\"context\",{\"0\":{\"1922\":1,\"2291\":1,\"2660\":1},\"1\":{\"407\":2,\"478\":2,\"922\":2,\"993\":2,\"1437\":2,\"1508\":2,\"1903\":1,\"1904\":1,\"1914\":3,\"2272\":1,\"2273\":1,\"2283\":3,\"2641\":1,\"2642\":1,\"2652\":3}}],[\"contextlib\",{\"1\":{\"121\":1,\"631\":1,\"1146\":1}}],[\"conduct\",{\"0\":{\"461\":1,\"976\":1,\"1491\":1},\"1\":{\"461\":1,\"976\":1,\"1491\":1}}],[\"constraint\",{\"1\":{\"2685\":1,\"2686\":1,\"2700\":1,\"2701\":1,\"2715\":1,\"2716\":1}}],[\"constraints\",{\"1\":{\"401\":1,\"916\":1,\"1431\":1}}],[\"construct\",{\"1\":{\"152\":1,\"479\":1,\"662\":1,\"994\":1,\"1177\":1,\"1509\":1}}],[\"consts\",{\"0\":{\"176\":1,\"686\":1,\"1201\":1}}],[\"consoleadapter\",{\"1\":{\"509\":2,\"1024\":2,\"1539\":2}}],[\"consolebot\",{\"1\":{\"424\":2,\"939\":2,\"1454\":2}}],[\"console\",{\"1\":{\"38\":2,\"39\":3,\"40\":3,\"218\":1,\"423\":3,\"424\":2,\"496\":1,\"507\":1,\"509\":1,\"534\":2,\"536\":1,\"538\":1,\"539\":1,\"543\":1,\"545\":4,\"548\":2,\"549\":3,\"550\":3,\"730\":1,\"938\":3,\"939\":2,\"1011\":1,\"1022\":1,\"1024\":1,\"1049\":2,\"1051\":1,\"1053\":1,\"1054\":1,\"1058\":1,\"1060\":4,\"1063\":2,\"1064\":3,\"1065\":3,\"1245\":1,\"1453\":3,\"1454\":2,\"1526\":1,\"1537\":1,\"1539\":1,\"1564\":2,\"1566\":1,\"1568\":1,\"1569\":1,\"1573\":1,\"1575\":4}}],[\"connections\",{\"1\":{\"472\":1,\"987\":1,\"1502\":1}}],[\"connect\",{\"1\":{\"129\":1,\"474\":3,\"639\":1,\"989\":3,\"1154\":1,\"1504\":3,\"1942\":2,\"2311\":2,\"2680\":2}}],[\"cookietypes\",{\"1\":{\"1659\":1,\"1666\":1,\"1705\":1,\"1711\":1,\"1728\":1,\"1733\":1,\"1735\":1,\"1760\":1,\"2028\":1,\"2035\":1,\"2074\":1,\"2080\":1,\"2088\":1,\"2093\":1,\"2111\":1,\"2116\":1,\"2397\":1,\"2404\":1,\"2443\":1,\"2449\":1,\"2457\":1,\"2462\":1,\"2480\":1,\"2485\":1}}],[\"cookies\",{\"1\":{\"1659\":1,\"1666\":1,\"1705\":1,\"1711\":1,\"1728\":1,\"1733\":1,\"1735\":1,\"1760\":1,\"2028\":1,\"2035\":1,\"2074\":1,\"2080\":1,\"2088\":1,\"2093\":1,\"2111\":1,\"2116\":1,\"2397\":1,\"2404\":1,\"2443\":1,\"2449\":1,\"2457\":1,\"2462\":1,\"2480\":1,\"2485\":1}}],[\"cookie\",{\"1\":{\"53\":2,\"563\":2,\"1078\":2}}],[\"code=200\",{\"1\":{\"473\":1,\"988\":1,\"1503\":1}}],[\"code\",{\"0\":{\"10\":1,\"22\":1,\"34\":1,\"461\":1,\"976\":1,\"1491\":1},\"1\":{\"10\":1,\"22\":1,\"34\":1,\"461\":1,\"494\":1,\"498\":1,\"976\":1,\"1009\":1,\"1013\":1,\"1491\":1,\"1524\":1,\"1528\":1,\"1669\":1,\"1698\":1,\"1736\":1,\"1745\":1,\"1789\":1,\"1801\":1,\"1941\":1,\"2038\":1,\"2067\":1,\"2117\":1,\"2123\":1,\"2158\":1,\"2170\":1,\"2310\":1,\"2407\":1,\"2436\":1,\"2486\":1,\"2492\":1,\"2527\":1,\"2539\":1,\"2679\":1}}],[\"框架搭建的机器人具有以下几个基本组成部分\",{\"1\":{\"525\":1,\"1040\":1,\"1555\":1}}],[\"框架的使用\",{\"1\":{\"505\":1,\"1020\":1,\"1535\":1}}],[\"框架与\",{\"1\":{\"504\":1,\"1019\":1,\"1534\":1}}],[\"框架进行构建\",{\"1\":{\"503\":1,\"1018\":1,\"1533\":1}}],[\"框架功能与插件编写\",{\"1\":{\"501\":1,\"1016\":1,\"1531\":1}}],[\"框架功能\",{\"1\":{\"495\":1,\"496\":1,\"497\":1,\"499\":1,\"500\":1,\"1010\":1,\"1011\":1,\"1012\":1,\"1014\":1,\"1015\":1,\"1525\":1,\"1526\":1,\"1527\":1,\"1529\":1,\"1530\":1}}],[\"框架\",{\"1\":{\"58\":1,\"501\":1,\"568\":1,\"1016\":1,\"1083\":1,\"1531\":1}}],[\"框架初始化完成后\",{\"1\":{\"55\":1,\"565\":1,\"1080\":1}}],[\"框架使用\",{\"1\":{\"8\":1,\"20\":1,\"32\":1}}],[\"框架基于\",{\"1\":{\"8\":1,\"20\":1,\"32\":1,\"504\":1,\"1019\":1,\"1534\":1}}],[\"还提供了一种更加简洁的方式来使用正则表达式\",{\"1\":{\"1894\":1,\"2263\":1,\"2632\":1}}],[\"还可以使用本地文件来自行管理数据\",{\"1\":{\"433\":1,\"948\":1,\"1463\":1}}],[\"还可以自行添加配置项到\",{\"1\":{\"165\":1,\"675\":1,\"1190\":1}}],[\"还有其他平台提供的信息\",{\"1\":{\"422\":1,\"937\":1,\"1452\":1}}],[\"还有几个可选的属性\",{\"1\":{\"110\":1,\"620\":1,\"1135\":1}}],[\"还有更多\",{\"1\":{\"7\":1,\"19\":1,\"31\":1}}],[\"还内置了一些常用的响应规则\",{\"1\":{\"93\":1,\"603\":1,\"1118\":1}}],[\"还能尽量减少代码的耦合和重复\",{\"1\":{\"7\":1,\"19\":1,\"31\":1}}],[\"它记录了数据库模式的变化\",{\"1\":{\"2686\":1,\"2701\":1,\"2716\":1}}],[\"它定义了一个路由\",{\"1\":{\"1941\":1,\"1942\":1,\"2310\":1,\"2311\":1,\"2679\":1,\"2680\":1}}],[\"它定义的事件响应器能响应机器人用户发送的\",{\"1\":{\"526\":1,\"1041\":1,\"1556\":1}}],[\"它要求创建的alconna的主命令前缀必须是\",{\"1\":{\"1905\":1,\"2274\":1,\"2643\":1}}],[\"它在提醒我们\",{\"1\":{\"2686\":1,\"2701\":1,\"2716\":1}}],[\"它在以下常见场景中尤其有用\",{\"1\":{\"545\":1,\"1060\":1,\"1575\":1}}],[\"它在完成上述工作的同时\",{\"1\":{\"7\":1,\"19\":1,\"31\":1}}],[\"它的用法和\",{\"1\":{\"545\":1,\"1060\":1,\"1575\":1}}],[\"它的类型即是消息序列\",{\"1\":{\"532\":1,\"1047\":1,\"1562\":1}}],[\"它的模块结构如下\",{\"1\":{\"110\":1,\"620\":1,\"1135\":1}}],[\"它可能是一段纯文本\",{\"1\":{\"530\":1,\"1045\":1,\"1560\":1}}],[\"它可以匹配多个会话\",{\"1\":{\"140\":1,\"650\":1,\"1165\":1}}],[\"它由\",{\"1\":{\"504\":1,\"1019\":1,\"1534\":1}}],[\"它由一系列的\",{\"1\":{\"425\":1,\"940\":1,\"1455\":1}}],[\"它接收三个参数\",{\"1\":{\"468\":1,\"983\":1,\"1498\":1}}],[\"它会根据类型标注和\",{\"1\":{\"2688\":1,\"2703\":1,\"2718\":1}}],[\"它会根据配置中的\",{\"1\":{\"99\":1,\"609\":1,\"1124\":1}}],[\"它会并发调用每个\",{\"1\":{\"427\":1,\"942\":1,\"1457\":1}}],[\"它会检查配置项\",{\"1\":{\"426\":1,\"941\":1,\"1456\":1}}],[\"它将会话的触发权限更新为当前事件的会话\",{\"1\":{\"140\":1,\"650\":1,\"1165\":1}}],[\"它允许插件开发者为插件添加一些额外的信息\",{\"1\":{\"110\":1,\"620\":1,\"1135\":1}}],[\"它们是用来创建和删除表的\",{\"1\":{\"2686\":1,\"2701\":1,\"2716\":1}}],[\"它们专为其他插件提供功能支持\",{\"1\":{\"115\":1,\"625\":1,\"1140\":1}}],[\"它们可以帮助我们进行响应器的统一管理\",{\"1\":{\"104\":1,\"614\":1,\"1129\":1}}],[\"它们默认存储在一个字典中\",{\"1\":{\"81\":1,\"591\":1,\"1106\":1}}],[\"它首先与\",{\"1\":{\"100\":1,\"610\":1,\"1125\":1}}],[\"它用于匹配消息是否为命令\",{\"1\":{\"99\":1,\"609\":1,\"1124\":1}}],[\"它决定了整个\",{\"1\":{\"81\":1,\"591\":1,\"1106\":1}}],[\"它是机器人初始化的第一步\",{\"1\":{\"52\":1,\"562\":1,\"1077\":1}}],[\"它是机器人的唯一\",{\"1\":{\"40\":1,\"550\":1,\"1065\":1}}],[\"它负责在驱动器和机器人插件之间转换与传递消息\",{\"1\":{\"36\":1,\"546\":1,\"1061\":1}}],[\"它基于\",{\"1\":{\"0\":1,\"12\":1,\"24\":1}}],[\"sqldepends\",{\"0\":{\"2695\":1,\"2710\":1,\"2725\":1},\"1\":{\"2688\":4,\"2695\":2,\"2703\":4,\"2710\":2,\"2718\":4,\"2725\":2}}],[\"sql\",{\"1\":{\"2686\":1,\"2688\":2,\"2695\":3,\"2696\":12,\"2701\":1,\"2703\":2,\"2710\":3,\"2711\":12,\"2716\":1,\"2718\":2,\"2725\":3,\"2726\":12}}],[\"sqlite3\",{\"1\":{\"2697\":2,\"2712\":2,\"2727\":2}}],[\"sqlite+aiosqlite\",{\"1\":{\"1937\":1,\"2306\":1,\"2675\":1,\"2697\":2,\"2712\":2,\"2727\":2}}],[\"sqlite\",{\"1\":{\"1928\":2,\"1937\":1,\"2297\":2,\"2306\":1,\"2666\":2,\"2675\":1,\"2697\":12,\"2712\":12,\"2727\":12}}],[\"sqlalchemy\",{\"0\":{\"1936\":1,\"1937\":1,\"1938\":1,\"1939\":1,\"2305\":1,\"2306\":1,\"2307\":1,\"2308\":1,\"2674\":1,\"2675\":1,\"2676\":1,\"2677\":1},\"1\":{\"7\":1,\"19\":1,\"31\":1,\"501\":2,\"1016\":2,\"1531\":2,\"1936\":2,\"1937\":1,\"1938\":1,\"1939\":5,\"2305\":2,\"2306\":1,\"2307\":1,\"2308\":5,\"2674\":2,\"2675\":1,\"2676\":1,\"2677\":5,\"2683\":1,\"2685\":2,\"2686\":1,\"2687\":1,\"2688\":1,\"2691\":1,\"2692\":1,\"2694\":1,\"2695\":1,\"2697\":2,\"2698\":1,\"2700\":2,\"2701\":1,\"2702\":1,\"2703\":1,\"2706\":1,\"2707\":1,\"2709\":1,\"2710\":1,\"2712\":2,\"2713\":1,\"2715\":2,\"2716\":1,\"2717\":1,\"2718\":1,\"2721\":1,\"2722\":1,\"2724\":1,\"2725\":1,\"2727\":2}}],[\"sa\",{\"1\":{\"2686\":11,\"2696\":4,\"2701\":11,\"2711\":4,\"2716\":11,\"2726\":4}}],[\"saa\",{\"0\":{\"1923\":1,\"2292\":1,\"2661\":1},\"1\":{\"1923\":1,\"2292\":1,\"2661\":1}}],[\"sample\",{\"1\":{\"449\":1,\"964\":1,\"1479\":1}}],[\"same\",{\"1\":{\"440\":1,\"955\":1,\"1470\":1}}],[\"spec\",{\"1\":{\"1640\":1,\"1645\":1,\"1836\":1,\"2009\":1,\"2014\":1,\"2205\":1,\"2378\":1,\"2383\":1,\"2574\":1}}],[\"sphinx\",{\"1\":{\"485\":1,\"488\":1,\"489\":1,\"1000\":1,\"1003\":1,\"1004\":1,\"1515\":1,\"1518\":1,\"1519\":1}}],[\"slice\",{\"1\":{\"543\":1,\"1058\":1,\"1573\":1,\"1612\":2,\"1981\":2,\"2350\":2}}],[\"sleep\",{\"1\":{\"472\":1,\"987\":1,\"1502\":1}}],[\"size\",{\"1\":{\"1938\":1,\"2307\":1,\"2676\":1}}],[\"signature\",{\"1\":{\"1655\":1,\"2024\":1,\"2393\":1}}],[\"single\",{\"1\":{\"523\":1,\"1038\":1,\"1553\":1}}],[\"simplicity\",{\"1\":{\"79\":1,\"589\":1,\"1104\":1}}],[\"src\",{\"1\":{\"518\":1,\"1033\":1,\"1548\":1}}],[\"scalarresult\",{\"1\":{\"2696\":1,\"2711\":1,\"2726\":1}}],[\"scalars\",{\"1\":{\"2694\":1,\"2696\":7,\"2709\":1,\"2711\":7,\"2724\":1,\"2726\":7}}],[\"scoped\",{\"0\":{\"2692\":1,\"2707\":1,\"2722\":1},\"1\":{\"2687\":8,\"2691\":2,\"2692\":4,\"2702\":8,\"2706\":2,\"2707\":4,\"2717\":8,\"2721\":2,\"2722\":4}}],[\"scott\",{\"1\":{\"1937\":1,\"2306\":1,\"2675\":1}}],[\"sct\",{\"1\":{\"1912\":1,\"2281\":1,\"2650\":1}}],[\"scripts\",{\"1\":{\"507\":1,\"1022\":1,\"1537\":1}}],[\"scheduled\",{\"1\":{\"454\":1,\"969\":1,\"1484\":1}}],[\"scheduler\",{\"1\":{\"450\":1,\"453\":2,\"454\":3,\"456\":2,\"965\":1,\"968\":2,\"969\":3,\"971\":2,\"1480\":1,\"1483\":2,\"1484\":3,\"1486\":2}}],[\"schema=none\",{\"1\":{\"2686\":1,\"2701\":1,\"2716\":1}}],[\"schema\",{\"1\":{\"63\":1,\"573\":1,\"1088\":1,\"1681\":1,\"2050\":1,\"2419\":1,\"2685\":1,\"2700\":1,\"2715\":1}}],[\"sk\",{\"1\":{\"497\":1,\"1012\":1,\"1527\":1}}],[\"skip\",{\"1\":{\"200\":4,\"712\":4,\"1227\":4}}],[\"skippedexception\",{\"1\":{\"195\":1,\"707\":1,\"1222\":1}}],[\"sys\",{\"1\":{\"420\":1,\"935\":1,\"1450\":1}}],[\"sync\",{\"1\":{\"78\":1,\"333\":2,\"347\":2,\"406\":1,\"407\":1,\"588\":1,\"845\":2,\"862\":2,\"921\":1,\"922\":1,\"1103\":1,\"1360\":2,\"1377\":2,\"1436\":1,\"1437\":1}}],[\"soon\",{\"1\":{\"293\":1,\"805\":1,\"1320\":1}}],[\"source\",{\"1\":{\"242\":1,\"507\":1,\"755\":1,\"1022\":1,\"1270\":1,\"1537\":1,\"1860\":1,\"1861\":1,\"2229\":1,\"2230\":1,\"2598\":1,\"2599\":1}}],[\"something\",{\"1\":{\"127\":1,\"128\":1,\"129\":1,\"130\":1,\"132\":1,\"133\":1,\"134\":1,\"135\":1,\"468\":1,\"473\":2,\"637\":1,\"638\":1,\"639\":1,\"640\":1,\"642\":1,\"643\":1,\"644\":1,\"645\":1,\"983\":1,\"988\":2,\"1152\":1,\"1153\":1,\"1154\":1,\"1155\":1,\"1157\":1,\"1158\":1,\"1159\":1,\"1160\":1,\"1498\":1,\"1503\":2}}],[\"some\",{\"1\":{\"117\":1,\"121\":1,\"132\":1,\"134\":1,\"205\":1,\"206\":1,\"207\":1,\"429\":1,\"431\":1,\"541\":1,\"627\":1,\"631\":1,\"642\":1,\"644\":1,\"717\":1,\"718\":1,\"719\":1,\"944\":1,\"946\":1,\"1056\":1,\"1142\":1,\"1146\":1,\"1157\":1,\"1159\":1,\"1232\":1,\"1233\":1,\"1234\":1,\"1459\":1,\"1461\":1,\"1571\":1,\"1819\":2,\"1820\":2,\"2188\":2,\"2189\":2,\"2557\":2,\"2558\":2}}],[\"s\",{\"1\":{\"175\":1,\"227\":4,\"398\":1,\"685\":1,\"739\":4,\"913\":1,\"1200\":1,\"1254\":4,\"1428\":1}}],[\"ssg\",{\"1\":{\"503\":2,\"1018\":2,\"1533\":2}}],[\"ss\",{\"1\":{\"175\":2,\"420\":2,\"685\":2,\"935\":2,\"1200\":2,\"1450\":2}}],[\"shortcutregwrapper\",{\"1\":{\"1907\":1,\"2276\":1,\"2645\":1}}],[\"shortcutargs\",{\"1\":{\"1907\":2,\"2276\":2,\"2645\":2}}],[\"shortcut\",{\"1\":{\"1903\":1,\"1904\":2,\"1907\":2,\"1908\":1,\"1909\":8,\"1912\":1,\"2272\":1,\"2273\":2,\"2276\":2,\"2277\":1,\"2278\":8,\"2281\":1,\"2641\":1,\"2642\":2,\"2645\":2,\"2646\":1,\"2647\":8,\"2650\":1}}],[\"shanghai\",{\"1\":{\"458\":1,\"973\":1,\"1488\":1}}],[\"share\",{\"1\":{\"439\":1,\"954\":1,\"1469\":1}}],[\"shutdown\",{\"1\":{\"128\":1,\"449\":1,\"472\":3,\"638\":1,\"964\":1,\"987\":3,\"1153\":1,\"1479\":1,\"1502\":3}}],[\"shelltextformatter\",{\"1\":{\"1905\":2,\"2274\":2,\"2643\":2}}],[\"shellcommandargs\",{\"1\":{\"100\":1,\"365\":2,\"610\":1,\"880\":2,\"1125\":1,\"1395\":2,\"1873\":1,\"1890\":1,\"2242\":1,\"2259\":1,\"2611\":1,\"2628\":1}}],[\"shellcommandargv\",{\"1\":{\"100\":1,\"365\":1,\"610\":1,\"880\":1,\"1125\":1,\"1395\":1,\"1873\":1,\"1890\":1,\"2242\":1,\"2259\":1,\"2611\":1,\"2628\":1}}],[\"shell\",{\"1\":{\"100\":7,\"188\":1,\"189\":1,\"216\":2,\"316\":1,\"317\":1,\"362\":1,\"364\":1,\"365\":2,\"610\":7,\"700\":1,\"701\":1,\"728\":2,\"829\":1,\"830\":1,\"877\":1,\"879\":1,\"880\":2,\"1125\":7,\"1215\":1,\"1216\":1,\"1243\":2,\"1344\":1,\"1345\":1,\"1392\":1,\"1394\":1,\"1395\":2,\"1809\":2,\"1873\":1,\"1878\":1,\"1890\":1,\"2178\":2,\"2242\":1,\"2247\":1,\"2259\":1,\"2547\":2,\"2611\":1,\"2616\":1,\"2628\":1}}],[\"sun\",{\"1\":{\"504\":1,\"1019\":1,\"1534\":1}}],[\"summer\",{\"1\":{\"494\":1,\"498\":1,\"1009\":1,\"1013\":1,\"1524\":1,\"1528\":1}}],[\"success\",{\"1\":{\"419\":3,\"934\":3,\"1449\":3,\"1941\":1,\"1942\":1,\"2310\":1,\"2311\":1,\"2679\":1,\"2680\":1,\"2686\":1,\"2701\":1,\"2716\":1}}],[\"super\",{\"1\":{\"470\":1,\"472\":1,\"473\":1,\"477\":1,\"985\":1,\"987\":1,\"988\":1,\"992\":1,\"1500\":1,\"1502\":1,\"1503\":1,\"1507\":1}}],[\"superusers=\",{\"1\":{\"171\":1,\"681\":1,\"1196\":1}}],[\"suppress\",{\"1\":{\"121\":1,\"631\":1,\"1146\":1}}],[\"supportsindex\",{\"1\":{\"1615\":1,\"1984\":1,\"2353\":1}}],[\"supported\",{\"1\":{\"110\":1,\"620\":1,\"1135\":1}}],[\"support\",{\"1\":{\"78\":1,\"439\":1,\"472\":1,\"473\":1,\"588\":1,\"954\":1,\"987\":1,\"988\":1,\"1103\":1,\"1469\":1,\"1502\":1,\"1503\":1}}],[\"subcomanndresult\",{\"1\":{\"1900\":1,\"2269\":1,\"2638\":1}}],[\"subcommandstub\",{\"1\":{\"1913\":4,\"2282\":4,\"2651\":4}}],[\"subcommands\",{\"1\":{\"1902\":1,\"2271\":1,\"2640\":1}}],[\"subcommands=\",{\"1\":{\"1893\":2,\"1913\":2,\"2262\":2,\"2282\":2,\"2631\":2,\"2651\":2}}],[\"subcommand\",{\"0\":{\"1900\":1,\"2269\":1,\"2638\":1},\"1\":{\"1893\":3,\"1900\":5,\"1905\":3,\"1910\":1,\"1913\":2,\"2262\":3,\"2269\":5,\"2274\":3,\"2279\":1,\"2282\":2,\"2631\":3,\"2638\":5,\"2643\":3,\"2648\":1,\"2651\":2}}],[\"sub\",{\"1\":{\"105\":3,\"111\":1,\"113\":1,\"114\":1,\"361\":2,\"615\":3,\"621\":1,\"623\":1,\"624\":1,\"876\":2,\"1130\":3,\"1136\":1,\"1138\":1,\"1139\":1,\"1391\":2}}],[\"swagger\",{\"1\":{\"61\":2,\"571\":2,\"1086\":2,\"1679\":1,\"2048\":1,\"2417\":1}}],[\"steps\",{\"1\":{\"2697\":2,\"2712\":2,\"2727\":2}}],[\"style=\",{\"1\":{\"1914\":1,\"2283\":1,\"2652\":1}}],[\"style\",{\"0\":{\"1922\":1,\"2291\":1,\"2660\":1},\"1\":{\"1903\":1,\"1904\":1,\"1914\":2,\"2272\":1,\"2273\":1,\"2283\":2,\"2641\":1,\"2642\":1,\"2652\":2}}],[\"stdout\",{\"1\":{\"227\":1,\"420\":1,\"739\":1,\"935\":1,\"1254\":1,\"1450\":1}}],[\"store\",{\"1\":{\"100\":2,\"365\":1,\"435\":8,\"610\":2,\"880\":1,\"950\":8,\"1125\":2,\"1395\":1,\"1465\":8,\"1901\":6,\"2270\":6,\"2639\":6}}],[\"stoppropagation\",{\"1\":{\"195\":1,\"707\":1,\"1222\":1}}],[\"stop\",{\"1\":{\"90\":1,\"203\":2,\"600\":1,\"715\":2,\"1115\":1,\"1230\":2}}],[\"staticmethod\",{\"1\":{\"479\":1,\"994\":1,\"1509\":1}}],[\"status\",{\"1\":{\"473\":1,\"988\":1,\"1503\":1,\"1736\":1,\"1941\":2,\"1942\":1,\"2117\":1,\"2310\":2,\"2311\":1,\"2486\":1,\"2679\":2,\"2680\":1}}],[\"stateparam\",{\"1\":{\"387\":1,\"388\":1,\"389\":1,\"390\":1,\"391\":1,\"394\":1,\"395\":1,\"902\":1,\"903\":1,\"904\":1,\"905\":1,\"906\":1,\"909\":1,\"910\":1,\"1417\":1,\"1418\":1,\"1419\":1,\"1420\":1,\"1421\":1,\"1424\":1,\"1425\":1}}],[\"state\",{\"1\":{\"92\":1,\"93\":1,\"242\":3,\"245\":2,\"271\":2,\"272\":2,\"292\":2,\"301\":2,\"349\":3,\"382\":1,\"387\":1,\"388\":1,\"389\":1,\"390\":1,\"391\":1,\"394\":1,\"395\":1,\"429\":1,\"431\":17,\"602\":1,\"603\":1,\"755\":3,\"758\":2,\"784\":2,\"785\":2,\"804\":2,\"819\":2,\"864\":3,\"897\":1,\"902\":1,\"903\":1,\"904\":1,\"905\":1,\"906\":1,\"909\":1,\"910\":1,\"944\":1,\"946\":17,\"1117\":1,\"1118\":1,\"1270\":3,\"1273\":2,\"1299\":2,\"1300\":2,\"1319\":2,\"1334\":2,\"1379\":3,\"1412\":1,\"1417\":1,\"1418\":1,\"1419\":1,\"1420\":1,\"1421\":1,\"1424\":1,\"1425\":1,\"1459\":1,\"1461\":17,\"1863\":3,\"1864\":3,\"1865\":3,\"1866\":3,\"1867\":3,\"1868\":3,\"1869\":3,\"1870\":3,\"1871\":3,\"1872\":3,\"1873\":3,\"1874\":3,\"1875\":3,\"1876\":2,\"1877\":3,\"1878\":3,\"1879\":2,\"1880\":3,\"1881\":3,\"1882\":3,\"1883\":3,\"1884\":3,\"1885\":3,\"1886\":3,\"1887\":3,\"1888\":3,\"1889\":3,\"1890\":3,\"1891\":3,\"1892\":3,\"2232\":3,\"2233\":3,\"2234\":3,\"2235\":3,\"2236\":3,\"2237\":3,\"2238\":3,\"2239\":3,\"2240\":3,\"2241\":3,\"2242\":3,\"2243\":3,\"2244\":3,\"2245\":2,\"2246\":3,\"2247\":3,\"2248\":2,\"2249\":3,\"2250\":3,\"2251\":3,\"2252\":3,\"2253\":3,\"2254\":3,\"2255\":3,\"2256\":3,\"2257\":3,\"2258\":3,\"2259\":3,\"2260\":3,\"2261\":3,\"2601\":3,\"2602\":3,\"2603\":3,\"2604\":3,\"2605\":3,\"2606\":3,\"2607\":3,\"2608\":3,\"2609\":3,\"2610\":3,\"2611\":3,\"2612\":3,\"2613\":3,\"2614\":2,\"2615\":3,\"2616\":3,\"2617\":2,\"2618\":3,\"2619\":3,\"2620\":3,\"2621\":3,\"2622\":3,\"2623\":3,\"2624\":3,\"2625\":3,\"2626\":3,\"2627\":3,\"2628\":3,\"2629\":3,\"2630\":3,\"2687\":9,\"2702\":9,\"2717\":9}}],[\"stacktrace\",{\"1\":{\"449\":1,\"964\":1,\"1479\":1}}],[\"stack\",{\"1\":{\"244\":1,\"245\":1,\"267\":1,\"268\":1,\"271\":1,\"272\":1,\"292\":1,\"335\":1,\"349\":1,\"757\":1,\"758\":1,\"780\":1,\"781\":1,\"784\":1,\"785\":1,\"804\":1,\"847\":1,\"864\":1,\"1272\":1,\"1273\":1,\"1295\":1,\"1296\":1,\"1299\":1,\"1300\":1,\"1319\":1,\"1362\":1,\"1379\":1}}],[\"start=\",{\"1\":{\"173\":1,\"508\":1,\"683\":1,\"1023\":1,\"1198\":1,\"1538\":1}}],[\"startup\",{\"1\":{\"127\":1,\"472\":3,\"637\":1,\"987\":3,\"1152\":1,\"1502\":3,\"1934\":1,\"2303\":1,\"2672\":1,\"2686\":2,\"2701\":2,\"2716\":2}}],[\"start\",{\"0\":{\"1917\":1,\"2286\":1,\"2655\":1},\"1\":{\"99\":2,\"186\":1,\"293\":1,\"351\":1,\"361\":2,\"365\":2,\"456\":1,\"609\":2,\"698\":1,\"805\":1,\"866\":1,\"876\":2,\"880\":2,\"971\":1,\"1124\":2,\"1213\":1,\"1320\":1,\"1381\":1,\"1391\":2,\"1395\":2,\"1486\":1,\"1615\":1,\"1917\":1,\"1984\":1,\"2286\":1,\"2353\":1,\"2655\":1}}],[\"startswith\",{\"1\":{\"95\":5,\"191\":1,\"216\":2,\"605\":5,\"703\":1,\"728\":2,\"1120\":5,\"1218\":1,\"1243\":2,\"1809\":2,\"2178\":2,\"2547\":2,\"2697\":4,\"2712\":4,\"2727\":4}}],[\"standard\",{\"1\":{\"58\":1,\"147\":1,\"568\":1,\"657\":1,\"1083\":1,\"1172\":1}}],[\"strategy\",{\"1\":{\"2697\":2,\"2712\":2,\"2727\":2}}],[\"stream\",{\"1\":{\"2694\":1,\"2696\":9,\"2709\":1,\"2711\":9,\"2724\":1,\"2726\":9}}],[\"strict\",{\"1\":{\"1903\":1,\"1904\":1,\"2272\":1,\"2273\":1,\"2641\":1,\"2642\":1}}],[\"string\",{\"1\":{\"45\":1,\"209\":1,\"555\":1,\"721\":1,\"1070\":1,\"1236\":1,\"1609\":1,\"1643\":1,\"1894\":1,\"1978\":1,\"2012\":1,\"2263\":1,\"2347\":1,\"2381\":1,\"2632\":1,\"2686\":6,\"2701\":6,\"2716\":6}}],[\"strftime\",{\"1\":{\"423\":1,\"938\":1,\"1453\":1}}],[\"str\",{\"1\":{\"42\":1,\"43\":1,\"44\":1,\"45\":1,\"46\":1,\"47\":1,\"49\":1,\"60\":1,\"61\":1,\"62\":1,\"65\":1,\"67\":1,\"68\":1,\"69\":1,\"73\":1,\"75\":1,\"76\":1,\"77\":1,\"111\":1,\"114\":1,\"120\":2,\"121\":1,\"136\":2,\"137\":2,\"139\":1,\"147\":1,\"149\":1,\"152\":1,\"155\":1,\"158\":3,\"160\":1,\"163\":2,\"164\":1,\"165\":2,\"166\":1,\"169\":1,\"171\":1,\"172\":1,\"173\":1,\"174\":1,\"218\":1,\"219\":1,\"222\":1,\"223\":1,\"231\":1,\"234\":1,\"242\":2,\"250\":1,\"251\":2,\"252\":1,\"253\":1,\"254\":1,\"255\":1,\"256\":2,\"257\":2,\"259\":2,\"260\":1,\"262\":2,\"263\":1,\"264\":1,\"265\":4,\"267\":1,\"295\":1,\"296\":2,\"298\":2,\"303\":2,\"307\":1,\"309\":1,\"311\":1,\"312\":1,\"314\":1,\"315\":1,\"318\":1,\"319\":10,\"321\":1,\"322\":1,\"323\":1,\"324\":1,\"325\":1,\"326\":1,\"329\":1,\"330\":1,\"332\":1,\"352\":1,\"353\":2,\"354\":1,\"355\":2,\"356\":1,\"357\":2,\"358\":1,\"359\":1,\"360\":2,\"361\":3,\"363\":8,\"364\":1,\"365\":2,\"366\":1,\"367\":2,\"380\":2,\"385\":2,\"386\":2,\"394\":1,\"398\":2,\"411\":1,\"412\":1,\"413\":4,\"417\":1,\"423\":1,\"431\":1,\"449\":11,\"469\":2,\"470\":1,\"475\":3,\"476\":3,\"477\":2,\"478\":14,\"479\":3,\"480\":1,\"533\":1,\"535\":1,\"536\":2,\"537\":1,\"539\":1,\"544\":1,\"545\":3,\"552\":1,\"553\":1,\"554\":1,\"555\":1,\"556\":1,\"557\":1,\"559\":1,\"570\":1,\"571\":1,\"572\":1,\"575\":1,\"577\":1,\"578\":1,\"579\":1,\"583\":1,\"585\":1,\"586\":1,\"587\":1,\"621\":1,\"624\":1,\"630\":2,\"631\":1,\"646\":2,\"647\":2,\"649\":1,\"657\":1,\"659\":1,\"662\":1,\"665\":1,\"668\":3,\"670\":1,\"673\":2,\"674\":1,\"675\":2,\"676\":1,\"679\":1,\"681\":1,\"682\":1,\"683\":1,\"684\":1,\"730\":1,\"731\":1,\"734\":1,\"735\":1,\"743\":1,\"747\":1,\"755\":2,\"763\":1,\"764\":2,\"765\":1,\"766\":1,\"767\":1,\"768\":1,\"769\":2,\"770\":2,\"772\":2,\"773\":1,\"775\":2,\"776\":1,\"777\":1,\"778\":4,\"780\":1,\"807\":1,\"808\":2,\"809\":2,\"810\":1,\"811\":2,\"820\":1,\"822\":1,\"824\":1,\"825\":1,\"827\":1,\"828\":1,\"831\":1,\"832\":10,\"834\":1,\"835\":1,\"836\":1,\"837\":1,\"838\":1,\"839\":1,\"841\":1,\"844\":1,\"848\":1,\"850\":1,\"867\":1,\"868\":2,\"869\":1,\"870\":2,\"871\":1,\"872\":2,\"873\":1,\"874\":1,\"875\":2,\"876\":3,\"878\":8,\"879\":1,\"880\":2,\"881\":1,\"882\":2,\"895\":2,\"900\":2,\"901\":2,\"909\":1,\"913\":2,\"926\":1,\"927\":1,\"928\":4,\"932\":1,\"938\":1,\"946\":1,\"964\":11,\"984\":2,\"985\":1,\"990\":3,\"991\":3,\"992\":2,\"993\":14,\"994\":3,\"995\":1,\"1048\":1,\"1050\":1,\"1051\":2,\"1052\":1,\"1054\":1,\"1059\":1,\"1060\":3,\"1067\":1,\"1068\":1,\"1069\":1,\"1070\":1,\"1071\":1,\"1072\":1,\"1074\":1,\"1085\":1,\"1086\":1,\"1087\":1,\"1090\":1,\"1092\":1,\"1093\":1,\"1094\":1,\"1098\":1,\"1100\":1,\"1101\":1,\"1102\":1,\"1136\":1,\"1139\":1,\"1145\":2,\"1146\":1,\"1161\":2,\"1162\":2,\"1164\":1,\"1172\":1,\"1174\":1,\"1177\":1,\"1180\":1,\"1183\":3,\"1185\":1,\"1188\":2,\"1189\":1,\"1190\":2,\"1191\":1,\"1194\":1,\"1196\":1,\"1197\":1,\"1198\":1,\"1199\":1,\"1245\":1,\"1246\":1,\"1249\":1,\"1250\":1,\"1258\":1,\"1262\":1,\"1270\":2,\"1278\":1,\"1279\":2,\"1280\":1,\"1281\":1,\"1282\":1,\"1283\":1,\"1284\":2,\"1285\":2,\"1287\":2,\"1288\":1,\"1290\":2,\"1291\":1,\"1292\":1,\"1293\":4,\"1295\":1,\"1322\":1,\"1323\":2,\"1324\":2,\"1325\":1,\"1326\":2,\"1335\":1,\"1337\":1,\"1339\":1,\"1340\":1,\"1342\":1,\"1343\":1,\"1346\":1,\"1347\":10,\"1349\":1,\"1350\":1,\"1351\":1,\"1352\":1,\"1353\":1,\"1354\":1,\"1356\":1,\"1359\":1,\"1363\":1,\"1365\":1,\"1382\":1,\"1383\":2,\"1384\":1,\"1385\":2,\"1386\":1,\"1387\":2,\"1388\":1,\"1389\":1,\"1390\":2,\"1391\":3,\"1393\":8,\"1394\":1,\"1395\":2,\"1396\":1,\"1397\":2,\"1410\":2,\"1415\":2,\"1416\":2,\"1424\":1,\"1428\":2,\"1441\":1,\"1442\":1,\"1443\":4,\"1447\":1,\"1453\":1,\"1461\":1,\"1479\":11,\"1499\":2,\"1500\":1,\"1505\":3,\"1506\":3,\"1507\":2,\"1508\":14,\"1509\":3,\"1510\":1,\"1563\":1,\"1565\":1,\"1566\":2,\"1567\":1,\"1569\":1,\"1574\":1,\"1575\":3,\"1577\":1,\"1579\":1,\"1580\":1,\"1582\":1,\"1583\":1,\"1587\":1,\"1588\":1,\"1589\":1,\"1590\":1,\"1591\":1,\"1592\":1,\"1594\":1,\"1598\":1,\"1599\":1,\"1609\":2,\"1611\":1,\"1612\":3,\"1613\":1,\"1614\":1,\"1615\":1,\"1616\":1,\"1617\":1,\"1618\":1,\"1619\":1,\"1623\":1,\"1624\":1,\"1625\":1,\"1627\":1,\"1628\":1,\"1630\":2,\"1631\":1,\"1632\":1,\"1639\":3,\"1640\":1,\"1642\":1,\"1643\":2,\"1644\":3,\"1645\":1,\"1653\":1,\"1656\":1,\"1659\":2,\"1666\":2,\"1669\":1,\"1670\":1,\"1671\":1,\"1673\":1,\"1678\":1,\"1679\":1,\"1680\":1,\"1683\":1,\"1685\":1,\"1686\":1,\"1687\":1,\"1689\":1,\"1695\":2,\"1698\":1,\"1699\":1,\"1700\":1,\"1702\":1,\"1705\":2,\"1711\":2,\"1715\":1,\"1717\":1,\"1719\":1,\"1721\":1,\"1729\":4,\"1730\":5,\"1731\":3,\"1732\":2,\"1734\":2,\"1735\":4,\"1745\":1,\"1746\":1,\"1747\":1,\"1749\":1,\"1750\":1,\"1760\":2,\"1767\":1,\"1774\":1,\"1776\":1,\"1777\":1,\"1778\":1,\"1780\":1,\"1786\":2,\"1789\":1,\"1790\":1,\"1791\":1,\"1793\":1,\"1801\":1,\"1802\":1,\"1803\":1,\"1805\":1,\"1810\":1,\"1811\":1,\"1813\":1,\"1816\":1,\"1817\":1,\"1818\":2,\"1819\":2,\"1820\":2,\"1821\":1,\"1822\":1,\"1823\":1,\"1824\":2,\"1826\":2,\"1827\":1,\"1828\":1,\"1829\":1,\"1830\":2,\"1831\":1,\"1834\":2,\"1835\":2,\"1840\":1,\"1841\":1,\"1842\":1,\"1843\":1,\"1844\":1,\"1846\":1,\"1850\":1,\"1852\":1,\"1857\":1,\"1863\":1,\"1868\":2,\"1869\":2,\"1870\":2,\"1871\":1,\"1872\":5,\"1873\":4,\"1874\":1,\"1876\":2,\"1877\":5,\"1878\":4,\"1879\":1,\"1880\":1,\"1885\":2,\"1886\":2,\"1887\":2,\"1888\":1,\"1889\":5,\"1890\":4,\"1891\":1,\"1893\":3,\"1896\":2,\"1897\":5,\"1898\":3,\"1905\":2,\"1907\":2,\"1909\":3,\"1910\":2,\"1913\":12,\"1921\":1,\"1948\":1,\"1949\":1,\"1958\":1,\"1960\":1,\"1961\":1,\"1963\":1,\"1964\":1,\"1968\":1,\"1969\":1,\"1970\":1,\"1971\":1,\"1972\":1,\"1973\":1,\"1975\":1,\"1978\":2,\"1980\":1,\"1981\":3,\"1982\":1,\"1983\":1,\"1984\":1,\"1985\":1,\"1986\":1,\"1987\":1,\"1988\":1,\"1992\":1,\"1993\":1,\"1994\":1,\"1996\":1,\"1997\":1,\"1999\":2,\"2000\":1,\"2001\":1,\"2008\":3,\"2009\":1,\"2011\":1,\"2012\":2,\"2013\":3,\"2014\":1,\"2022\":1,\"2025\":1,\"2028\":2,\"2035\":2,\"2038\":1,\"2039\":1,\"2040\":1,\"2042\":1,\"2047\":1,\"2048\":1,\"2049\":1,\"2052\":1,\"2054\":1,\"2055\":1,\"2056\":1,\"2058\":1,\"2064\":2,\"2067\":1,\"2068\":1,\"2069\":1,\"2071\":1,\"2074\":2,\"2080\":2,\"2089\":4,\"2090\":5,\"2091\":3,\"2092\":2,\"2094\":2,\"2096\":1,\"2098\":1,\"2100\":1,\"2111\":2,\"2115\":1,\"2116\":4,\"2123\":1,\"2124\":1,\"2125\":1,\"2127\":1,\"2128\":1,\"2136\":1,\"2143\":1,\"2145\":1,\"2146\":1,\"2147\":1,\"2149\":1,\"2155\":2,\"2158\":1,\"2159\":1,\"2160\":1,\"2162\":1,\"2170\":1,\"2171\":1,\"2172\":1,\"2174\":1,\"2179\":1,\"2180\":1,\"2182\":1,\"2185\":1,\"2186\":1,\"2187\":2,\"2188\":2,\"2189\":2,\"2190\":1,\"2191\":1,\"2192\":1,\"2193\":2,\"2195\":2,\"2196\":1,\"2197\":1,\"2198\":1,\"2199\":2,\"2200\":1,\"2203\":2,\"2204\":2,\"2209\":1,\"2210\":1,\"2211\":1,\"2212\":1,\"2213\":1,\"2215\":1,\"2219\":1,\"2221\":1,\"2226\":1,\"2232\":1,\"2237\":2,\"2238\":2,\"2239\":2,\"2240\":1,\"2241\":5,\"2242\":4,\"2243\":1,\"2245\":2,\"2246\":5,\"2247\":4,\"2248\":1,\"2249\":1,\"2254\":2,\"2255\":2,\"2256\":2,\"2257\":1,\"2258\":5,\"2259\":4,\"2260\":1,\"2262\":3,\"2265\":2,\"2266\":5,\"2267\":3,\"2274\":2,\"2276\":2,\"2278\":3,\"2279\":2,\"2282\":12,\"2290\":1,\"2317\":1,\"2318\":1,\"2327\":1,\"2329\":1,\"2330\":1,\"2332\":1,\"2333\":1,\"2337\":1,\"2338\":1,\"2339\":1,\"2340\":1,\"2341\":1,\"2342\":1,\"2344\":1,\"2347\":2,\"2349\":1,\"2350\":3,\"2351\":1,\"2352\":1,\"2353\":1,\"2354\":1,\"2355\":1,\"2356\":1,\"2357\":1,\"2361\":1,\"2362\":1,\"2363\":1,\"2365\":1,\"2366\":1,\"2368\":2,\"2369\":1,\"2370\":1,\"2377\":3,\"2378\":1,\"2380\":1,\"2381\":2,\"2382\":3,\"2383\":1,\"2391\":1,\"2394\":1,\"2397\":2,\"2404\":2,\"2407\":1,\"2408\":1,\"2409\":1,\"2411\":1,\"2416\":1,\"2417\":1,\"2418\":1,\"2421\":1,\"2423\":1,\"2424\":1,\"2425\":1,\"2427\":1,\"2433\":2,\"2436\":1,\"2437\":1,\"2438\":1,\"2440\":1,\"2443\":2,\"2449\":2,\"2458\":4,\"2459\":5,\"2460\":3,\"2461\":2,\"2463\":2,\"2465\":1,\"2467\":1,\"2469\":1,\"2480\":2,\"2484\":1,\"2485\":4,\"2492\":1,\"2493\":1,\"2494\":1,\"2496\":1,\"2497\":1,\"2505\":1,\"2512\":1,\"2514\":1,\"2515\":1,\"2516\":1,\"2518\":1,\"2524\":2,\"2527\":1,\"2528\":1,\"2529\":1,\"2531\":1,\"2539\":1,\"2540\":1,\"2541\":1,\"2543\":1,\"2548\":1,\"2549\":1,\"2551\":1,\"2554\":1,\"2555\":1,\"2556\":2,\"2557\":2,\"2558\":2,\"2559\":1,\"2560\":1,\"2561\":1,\"2562\":2,\"2564\":2,\"2565\":1,\"2566\":1,\"2567\":1,\"2568\":2,\"2569\":1,\"2572\":2,\"2573\":2,\"2578\":1,\"2579\":1,\"2580\":1,\"2581\":1,\"2582\":1,\"2584\":1,\"2588\":1,\"2590\":1,\"2595\":1,\"2601\":1,\"2606\":2,\"2607\":2,\"2608\":2,\"2609\":1,\"2610\":5,\"2611\":4,\"2612\":1,\"2614\":2,\"2615\":5,\"2616\":4,\"2617\":1,\"2618\":1,\"2623\":2,\"2624\":2,\"2625\":2,\"2626\":1,\"2627\":5,\"2628\":4,\"2629\":1,\"2631\":3,\"2634\":2,\"2635\":5,\"2636\":3,\"2643\":2,\"2645\":2,\"2647\":3,\"2648\":2,\"2651\":12,\"2659\":1,\"2685\":2,\"2686\":9,\"2687\":3,\"2688\":4,\"2691\":1,\"2692\":1,\"2700\":2,\"2701\":9,\"2702\":3,\"2703\":4,\"2706\":1,\"2707\":1,\"2715\":2,\"2716\":9,\"2717\":3,\"2718\":4,\"2721\":1,\"2722\":1}}],[\"studio\",{\"0\":{\"10\":1,\"22\":1,\"34\":1},\"1\":{\"10\":1,\"22\":1,\"34\":1}}],[\"services\",{\"1\":{\"2697\":2,\"2712\":2,\"2727\":2}}],[\"servers\",{\"1\":{\"79\":1,\"589\":1,\"1104\":1}}],[\"server\",{\"1\":{\"10\":2,\"22\":2,\"34\":2,\"80\":1,\"120\":1,\"121\":1,\"123\":1,\"220\":2,\"449\":1,\"473\":4,\"590\":1,\"630\":1,\"631\":1,\"633\":1,\"732\":2,\"964\":1,\"988\":4,\"1105\":1,\"1145\":1,\"1146\":1,\"1148\":1,\"1247\":2,\"1479\":1,\"1503\":4,\"1941\":6,\"1942\":3,\"2310\":6,\"2311\":3,\"2679\":6,\"2680\":3}}],[\"second\",{\"1\":{\"544\":2,\"1059\":2,\"1574\":2}}],[\"seg\",{\"1\":{\"544\":2,\"1059\":2,\"1574\":2}}],[\"segment\",{\"1\":{\"479\":1,\"534\":3,\"540\":1,\"994\":1,\"1049\":3,\"1055\":1,\"1509\":1,\"1564\":3,\"1570\":1}}],[\"seo\",{\"1\":{\"503\":3,\"1018\":3,\"1533\":3}}],[\"sentry\",{\"0\":{\"447\":1,\"962\":1,\"1477\":1},\"1\":{\"444\":2,\"445\":2,\"447\":1,\"448\":3,\"449\":22,\"959\":2,\"960\":2,\"962\":1,\"963\":3,\"964\":22,\"1474\":2,\"1475\":2,\"1477\":1,\"1478\":3,\"1479\":22}}],[\"send\",{\"0\":{\"1916\":1,\"2285\":1,\"2654\":1},\"1\":{\"121\":1,\"136\":1,\"137\":1,\"252\":1,\"253\":1,\"254\":1,\"255\":1,\"256\":1,\"257\":1,\"424\":1,\"449\":2,\"476\":5,\"477\":2,\"631\":1,\"646\":1,\"647\":1,\"765\":1,\"766\":1,\"767\":1,\"768\":1,\"769\":1,\"770\":1,\"939\":1,\"964\":2,\"991\":5,\"992\":2,\"1146\":1,\"1161\":1,\"1162\":1,\"1280\":1,\"1281\":1,\"1282\":1,\"1283\":1,\"1284\":1,\"1285\":1,\"1454\":1,\"1479\":2,\"1506\":5,\"1507\":2,\"1582\":2,\"1942\":1,\"1963\":2,\"2311\":1,\"2332\":2,\"2680\":1,\"2687\":2,\"2688\":3,\"2691\":1,\"2692\":1,\"2702\":2,\"2703\":3,\"2706\":1,\"2707\":1,\"2717\":2,\"2718\":3,\"2721\":1,\"2722\":1}}],[\"sequence\",{\"1\":{\"363\":2,\"878\":2,\"1393\":2,\"1643\":1,\"1644\":1,\"1834\":1,\"2012\":1,\"2013\":1,\"2203\":1,\"2381\":1,\"2382\":1,\"2572\":1,\"2686\":4,\"2688\":4,\"2696\":6,\"2701\":4,\"2703\":4,\"2711\":6,\"2716\":4,\"2718\":4,\"2726\":6}}],[\"sep\",{\"0\":{\"1920\":1,\"2289\":1,\"2658\":1},\"1\":{\"361\":2,\"365\":2,\"876\":2,\"880\":2,\"1391\":2,\"1395\":2,\"1920\":1,\"2289\":1,\"2658\":1}}],[\"sep=\",{\"1\":{\"174\":1,\"508\":1,\"684\":1,\"1023\":1,\"1199\":1,\"1538\":1}}],[\"separators\",{\"1\":{\"1904\":1,\"2273\":1,\"2642\":1}}],[\"separator\",{\"1\":{\"99\":2,\"609\":2,\"1124\":2}}],[\"search\",{\"1\":{\"101\":1,\"367\":1,\"611\":1,\"882\":1,\"1126\":1,\"1397\":1,\"1826\":1,\"2195\":1,\"2564\":1}}],[\"setu\",{\"1\":{\"1908\":2,\"1909\":3,\"2277\":2,\"2278\":3,\"2646\":2,\"2647\":3}}],[\"setup\",{\"1\":{\"120\":1,\"121\":1,\"472\":3,\"473\":8,\"630\":1,\"631\":1,\"987\":3,\"988\":8,\"1145\":1,\"1146\":1,\"1502\":3,\"1503\":8,\"1603\":1,\"1604\":1,\"1605\":1,\"1606\":1,\"1660\":1,\"1664\":1,\"1665\":1,\"1693\":1,\"1694\":1,\"1706\":1,\"1710\":1,\"1740\":1,\"1741\":1,\"1759\":1,\"1763\":1,\"1784\":1,\"1785\":1,\"1798\":1,\"1953\":1,\"1954\":1,\"1955\":1,\"1956\":1,\"2029\":1,\"2033\":1,\"2034\":1,\"2062\":1,\"2063\":1,\"2075\":1,\"2079\":1,\"2086\":1,\"2087\":1,\"2110\":1,\"2131\":1,\"2153\":1,\"2154\":1,\"2167\":1,\"2322\":1,\"2323\":1,\"2324\":1,\"2325\":1,\"2398\":1,\"2402\":1,\"2403\":1,\"2431\":1,\"2432\":1,\"2444\":1,\"2448\":1,\"2455\":1,\"2456\":1,\"2479\":1,\"2500\":1,\"2522\":1,\"2523\":1,\"2536\":1,\"2697\":2,\"2712\":2,\"2727\":2}}],[\"settings\",{\"1\":{\"439\":1,\"440\":2,\"954\":1,\"955\":2,\"1469\":1,\"1470\":2}}],[\"set\",{\"1\":{\"83\":2,\"111\":2,\"158\":2,\"171\":1,\"172\":1,\"173\":1,\"174\":1,\"334\":1,\"348\":1,\"593\":2,\"621\":2,\"668\":2,\"681\":1,\"682\":1,\"683\":1,\"684\":1,\"846\":1,\"863\":1,\"1108\":2,\"1136\":2,\"1183\":2,\"1196\":1,\"1197\":1,\"1198\":1,\"1199\":1,\"1361\":1,\"1378\":1,\"1812\":1,\"1813\":1,\"1817\":1,\"1818\":1,\"1819\":1,\"1820\":1,\"1822\":1,\"1824\":1,\"1827\":1,\"1828\":1,\"1829\":1,\"1832\":1,\"1846\":1,\"1848\":1,\"1854\":1,\"1856\":1,\"1871\":1,\"1872\":1,\"1873\":1,\"1877\":1,\"1878\":1,\"1888\":1,\"1889\":1,\"1890\":1,\"2181\":1,\"2182\":1,\"2186\":1,\"2187\":1,\"2188\":1,\"2189\":1,\"2191\":1,\"2193\":1,\"2196\":1,\"2197\":1,\"2198\":1,\"2201\":1,\"2215\":1,\"2217\":1,\"2223\":1,\"2225\":1,\"2240\":1,\"2241\":1,\"2242\":1,\"2246\":1,\"2247\":1,\"2257\":1,\"2258\":1,\"2259\":1,\"2550\":1,\"2551\":1,\"2555\":1,\"2556\":1,\"2557\":1,\"2558\":1,\"2560\":1,\"2562\":1,\"2565\":1,\"2566\":1,\"2567\":1,\"2570\":1,\"2584\":1,\"2586\":1,\"2592\":1,\"2594\":1,\"2609\":1,\"2610\":1,\"2611\":1,\"2615\":1,\"2616\":1,\"2626\":1,\"2627\":1,\"2628\":1}}],[\"select\",{\"1\":{\"2688\":3,\"2694\":1,\"2695\":3,\"2703\":3,\"2709\":1,\"2710\":3,\"2718\":3,\"2724\":1,\"2725\":3}}],[\"selectoreventloop\",{\"1\":{\"64\":2,\"574\":2,\"1089\":2}}],[\"self\",{\"1\":{\"40\":1,\"152\":1,\"222\":6,\"223\":1,\"331\":1,\"332\":1,\"470\":2,\"472\":21,\"473\":13,\"474\":6,\"475\":2,\"476\":3,\"477\":8,\"478\":15,\"479\":3,\"550\":1,\"662\":1,\"734\":6,\"735\":1,\"849\":1,\"850\":1,\"985\":2,\"987\":21,\"988\":13,\"989\":6,\"990\":2,\"991\":3,\"992\":8,\"993\":15,\"994\":3,\"1065\":1,\"1177\":1,\"1249\":6,\"1250\":1,\"1364\":1,\"1365\":1,\"1500\":2,\"1502\":21,\"1503\":13,\"1504\":6,\"1505\":2,\"1506\":3,\"1507\":8,\"1508\":15,\"1509\":3,\"1577\":1,\"1609\":1,\"1612\":6,\"1616\":1,\"1619\":1,\"1620\":2,\"1621\":2,\"1622\":1,\"1623\":1,\"1624\":1,\"1637\":1,\"1958\":1,\"1978\":1,\"1981\":6,\"1985\":1,\"1988\":1,\"1989\":2,\"1990\":2,\"1991\":1,\"1992\":1,\"1993\":1,\"2006\":1,\"2327\":1,\"2347\":1,\"2350\":6,\"2354\":1,\"2357\":1,\"2358\":2,\"2359\":2,\"2360\":1,\"2361\":1,\"2362\":1,\"2375\":1}}],[\"session2\",{\"1\":{\"140\":1,\"650\":1,\"1165\":1}}],[\"session1\",{\"1\":{\"140\":1,\"650\":1,\"1165\":1}}],[\"session\",{\"0\":{\"2692\":1,\"2707\":1,\"2722\":1},\"1\":{\"7\":1,\"19\":1,\"31\":1,\"47\":2,\"175\":2,\"478\":1,\"523\":1,\"557\":2,\"685\":2,\"993\":1,\"1038\":1,\"1072\":2,\"1200\":2,\"1508\":1,\"1553\":1,\"1666\":1,\"1667\":1,\"1711\":1,\"1931\":1,\"2035\":1,\"2036\":1,\"2080\":1,\"2300\":1,\"2404\":1,\"2405\":1,\"2449\":1,\"2669\":1,\"2687\":30,\"2691\":11,\"2692\":11,\"2694\":1,\"2696\":21,\"2702\":30,\"2706\":11,\"2707\":11,\"2709\":1,\"2711\":21,\"2717\":30,\"2721\":11,\"2722\":11,\"2724\":1,\"2726\":21}}],[\"和模块名\",{\"1\":{\"1926\":1,\"2295\":1,\"2664\":1}}],[\"和实现方式\",{\"1\":{\"487\":1,\"1002\":1,\"1517\":1}}],[\"和其它语言集成测试框架\",{\"1\":{\"487\":1,\"1002\":1,\"1517\":1}}],[\"和用户交互的过程即是会话\",{\"1\":{\"431\":1,\"946\":1,\"1461\":1}}],[\"和typing\",{\"1\":{\"372\":1,\"887\":1,\"1402\":1}}],[\"和群\",{\"1\":{\"140\":1,\"650\":1,\"1165\":1}}],[\"和\",{\"1\":{\"7\":1,\"10\":1,\"19\":1,\"22\":1,\"31\":1,\"34\":1,\"91\":1,\"99\":1,\"119\":1,\"120\":1,\"123\":1,\"424\":1,\"435\":2,\"464\":1,\"467\":1,\"476\":1,\"478\":1,\"479\":1,\"482\":1,\"484\":1,\"485\":1,\"487\":1,\"488\":1,\"489\":1,\"492\":1,\"493\":1,\"494\":1,\"498\":1,\"502\":1,\"505\":1,\"521\":1,\"601\":1,\"609\":1,\"629\":1,\"630\":1,\"633\":1,\"939\":1,\"950\":2,\"979\":1,\"982\":1,\"991\":1,\"993\":1,\"994\":1,\"997\":1,\"999\":1,\"1000\":1,\"1002\":1,\"1003\":1,\"1004\":1,\"1007\":1,\"1008\":1,\"1009\":1,\"1013\":1,\"1017\":1,\"1020\":1,\"1036\":1,\"1116\":1,\"1124\":1,\"1144\":1,\"1145\":1,\"1148\":1,\"1454\":1,\"1465\":2,\"1494\":1,\"1497\":1,\"1506\":1,\"1508\":1,\"1509\":1,\"1512\":1,\"1514\":1,\"1515\":1,\"1517\":1,\"1518\":1,\"1519\":1,\"1522\":1,\"1523\":1,\"1524\":1,\"1528\":1,\"1532\":1,\"1535\":1,\"1551\":1,\"1900\":1,\"1911\":1,\"1913\":1,\"1936\":1,\"1939\":1,\"2269\":1,\"2280\":1,\"2282\":1,\"2305\":1,\"2308\":1,\"2638\":1,\"2649\":1,\"2651\":1,\"2674\":1,\"2677\":1,\"2683\":1,\"2686\":1,\"2697\":1,\"2698\":1,\"2701\":1,\"2712\":1,\"2713\":1,\"2716\":1,\"2727\":1}}],[\"author\",{\"1\":{\"1903\":1,\"2272\":1,\"2641\":1}}],[\"autoincrement=true\",{\"1\":{\"2691\":1,\"2692\":1,\"2694\":1,\"2706\":1,\"2707\":1,\"2709\":1,\"2721\":1,\"2722\":1,\"2724\":1}}],[\"autostart\",{\"0\":{\"456\":1,\"971\":1,\"1486\":1}}],[\"auto\",{\"0\":{\"1916\":1,\"1918\":1,\"2285\":1,\"2287\":1,\"2654\":1,\"2656\":1},\"1\":{\"148\":1,\"196\":1,\"197\":1,\"198\":1,\"200\":1,\"201\":1,\"203\":1,\"204\":1,\"205\":1,\"206\":1,\"207\":1,\"209\":1,\"210\":1,\"211\":1,\"212\":1,\"213\":1,\"214\":1,\"228\":1,\"336\":1,\"337\":1,\"338\":1,\"339\":1,\"344\":1,\"350\":1,\"351\":1,\"362\":1,\"368\":1,\"381\":1,\"415\":1,\"658\":1,\"708\":1,\"709\":1,\"710\":1,\"712\":1,\"713\":1,\"715\":1,\"716\":1,\"717\":1,\"718\":1,\"719\":1,\"721\":1,\"722\":1,\"723\":1,\"724\":1,\"725\":1,\"726\":1,\"740\":1,\"851\":1,\"852\":1,\"853\":1,\"854\":1,\"859\":1,\"865\":1,\"866\":1,\"877\":1,\"883\":1,\"896\":1,\"930\":1,\"1173\":1,\"1223\":1,\"1224\":1,\"1225\":1,\"1227\":1,\"1228\":1,\"1230\":1,\"1231\":1,\"1232\":1,\"1233\":1,\"1234\":1,\"1236\":1,\"1237\":1,\"1238\":1,\"1239\":1,\"1240\":1,\"1241\":1,\"1255\":1,\"1366\":1,\"1367\":1,\"1368\":1,\"1369\":1,\"1374\":1,\"1380\":1,\"1381\":1,\"1392\":1,\"1398\":1,\"1411\":1,\"1445\":1,\"1586\":1,\"1626\":1,\"1663\":1,\"1677\":1,\"1709\":1,\"1714\":1,\"1737\":1,\"1752\":1,\"1753\":1,\"1754\":1,\"1758\":1,\"1761\":1,\"1762\":1,\"1764\":1,\"1772\":1,\"1797\":1,\"1833\":1,\"1839\":1,\"1849\":1,\"1967\":1,\"1995\":1,\"2032\":1,\"2046\":1,\"2078\":1,\"2083\":1,\"2108\":1,\"2109\":1,\"2112\":1,\"2113\":1,\"2114\":1,\"2119\":1,\"2130\":1,\"2132\":1,\"2141\":1,\"2166\":1,\"2202\":1,\"2208\":1,\"2218\":1,\"2336\":1,\"2364\":1,\"2401\":1,\"2415\":1,\"2447\":1,\"2452\":1,\"2477\":1,\"2478\":1,\"2481\":1,\"2482\":1,\"2483\":1,\"2488\":1,\"2499\":1,\"2501\":1,\"2510\":1,\"2535\":1,\"2571\":1,\"2577\":1,\"2587\":1,\"2686\":5,\"2701\":5,\"2716\":5}}],[\"abc\",{\"1\":{\"1896\":3,\"1909\":1,\"1910\":1,\"1912\":1,\"2265\":3,\"2278\":1,\"2279\":1,\"2281\":1,\"2634\":3,\"2647\":1,\"2648\":1,\"2650\":1,\"2686\":1,\"2688\":2,\"2701\":1,\"2703\":2,\"2716\":1,\"2718\":2}}],[\"abstractcontextmanager\",{\"1\":{\"407\":1,\"922\":1,\"1437\":1}}],[\"arparma\",{\"0\":{\"1902\":1,\"2271\":1,\"2640\":1},\"1\":{\"1893\":1,\"1896\":1,\"1902\":3,\"2262\":1,\"2265\":1,\"2271\":3,\"2631\":1,\"2634\":1,\"2640\":3}}],[\"arclet\",{\"1\":{\"1893\":1,\"1895\":1,\"1896\":2,\"1897\":1,\"1900\":1,\"1903\":1,\"1905\":1,\"1906\":1,\"1908\":1,\"1909\":2,\"1910\":3,\"1911\":1,\"1912\":1,\"1913\":2,\"1914\":1,\"2262\":1,\"2264\":1,\"2265\":2,\"2266\":1,\"2269\":1,\"2272\":1,\"2274\":1,\"2275\":1,\"2277\":1,\"2278\":2,\"2279\":3,\"2280\":1,\"2281\":1,\"2282\":2,\"2283\":1,\"2631\":1,\"2633\":1,\"2634\":2,\"2635\":1,\"2638\":1,\"2641\":1,\"2643\":1,\"2644\":1,\"2646\":1,\"2647\":2,\"2648\":3,\"2649\":1,\"2650\":1,\"2651\":2,\"2652\":1}}],[\"arcletproject\",{\"1\":{\"1893\":1,\"2262\":1,\"2631\":1}}],[\"array\",{\"1\":{\"521\":1,\"1036\":1,\"1551\":1}}],[\"arg1\",{\"1\":{\"454\":2,\"969\":2,\"1484\":2}}],[\"arg2\",{\"1\":{\"454\":4,\"969\":4,\"1484\":4}}],[\"argplaintext\",{\"1\":{\"298\":1,\"423\":1,\"431\":1,\"808\":1,\"938\":1,\"946\":1,\"1323\":1,\"1453\":1,\"1461\":1,\"2687\":2,\"2702\":2,\"2717\":2}}],[\"argparse\",{\"1\":{\"100\":3,\"362\":2,\"610\":3,\"877\":2,\"1125\":3,\"1392\":2,\"1913\":1,\"2282\":1,\"2651\":1}}],[\"argsstub\",{\"1\":{\"1913\":1,\"2282\":1,\"2651\":1}}],[\"args的使用\",{\"0\":{\"1908\":1,\"2277\":1,\"2646\":1}}],[\"args=argsstub\",{\"1\":{\"1913\":3,\"2282\":3,\"2651\":3}}],[\"args=args\",{\"1\":{\"1913\":3,\"2282\":3,\"2651\":3}}],[\"args=\",{\"1\":{\"454\":2,\"969\":2,\"1484\":2,\"1893\":3,\"1900\":1,\"1913\":1,\"2262\":3,\"2269\":1,\"2282\":1,\"2631\":3,\"2638\":1,\"2651\":1}}],[\"args=none\",{\"1\":{\"363\":1,\"878\":1,\"1393\":1}}],[\"argstr\",{\"1\":{\"298\":1,\"808\":1,\"1323\":1}}],[\"args\",{\"0\":{\"1895\":1,\"2264\":1,\"2633\":1},\"1\":{\"188\":1,\"225\":1,\"298\":1,\"299\":1,\"300\":1,\"301\":1,\"302\":1,\"304\":1,\"305\":1,\"306\":1,\"363\":3,\"700\":1,\"737\":1,\"808\":1,\"812\":1,\"813\":1,\"814\":1,\"816\":1,\"817\":1,\"818\":1,\"819\":1,\"878\":3,\"1215\":1,\"1252\":1,\"1323\":1,\"1327\":1,\"1328\":1,\"1329\":1,\"1331\":1,\"1332\":1,\"1333\":1,\"1334\":1,\"1393\":3,\"1612\":17,\"1615\":1,\"1641\":1,\"1643\":1,\"1644\":1,\"1647\":1,\"1695\":1,\"1723\":1,\"1769\":1,\"1786\":1,\"1893\":7,\"1895\":6,\"1896\":6,\"1897\":4,\"1898\":1,\"1900\":1,\"1901\":6,\"1902\":13,\"1905\":3,\"1907\":1,\"1908\":3,\"1909\":4,\"1910\":5,\"1912\":2,\"1913\":4,\"1914\":2,\"1981\":17,\"1984\":1,\"2010\":1,\"2012\":1,\"2013\":1,\"2016\":1,\"2064\":1,\"2102\":1,\"2138\":1,\"2155\":1,\"2262\":7,\"2264\":6,\"2265\":6,\"2266\":4,\"2267\":1,\"2269\":1,\"2270\":6,\"2271\":13,\"2274\":3,\"2276\":1,\"2277\":3,\"2278\":4,\"2279\":5,\"2281\":2,\"2282\":4,\"2283\":2,\"2350\":17,\"2353\":1,\"2379\":1,\"2381\":1,\"2382\":1,\"2385\":1,\"2433\":1,\"2471\":1,\"2507\":1,\"2524\":1,\"2631\":7,\"2633\":6,\"2634\":6,\"2635\":4,\"2636\":1,\"2638\":1,\"2639\":6,\"2640\":13,\"2643\":3,\"2645\":1,\"2646\":3,\"2647\":4,\"2648\":5,\"2650\":2,\"2651\":4,\"2652\":2,\"2687\":6,\"2688\":2,\"2702\":6,\"2703\":2,\"2717\":6,\"2718\":2}}],[\"arg\",{\"1\":{\"179\":1,\"185\":1,\"295\":1,\"296\":1,\"298\":2,\"303\":1,\"365\":3,\"689\":1,\"697\":1,\"807\":1,\"808\":2,\"809\":1,\"810\":1,\"811\":1,\"880\":3,\"1204\":1,\"1212\":1,\"1322\":1,\"1323\":2,\"1324\":1,\"1325\":1,\"1326\":1,\"1395\":3,\"1615\":1,\"1984\":1,\"2353\":1,\"2688\":5,\"2703\":5,\"2718\":5}}],[\"argv\",{\"1\":{\"100\":1,\"189\":1,\"610\":1,\"701\":1,\"1125\":1,\"1216\":1}}],[\"argument\",{\"1\":{\"100\":2,\"365\":1,\"610\":2,\"880\":1,\"1125\":2,\"1395\":1}}],[\"argumentparser\",{\"1\":{\"100\":4,\"362\":1,\"364\":1,\"365\":4,\"610\":4,\"877\":1,\"879\":1,\"880\":4,\"1125\":4,\"1392\":1,\"1394\":1,\"1395\":4,\"1873\":2,\"1878\":2,\"1890\":2,\"2242\":2,\"2247\":2,\"2259\":2,\"2611\":2,\"2616\":2,\"2628\":2}}],[\"ai\",{\"1\":{\"484\":1,\"999\":1,\"1514\":1}}],[\"aiocqhttp\",{\"1\":{\"484\":3,\"999\":3,\"1514\":3}}],[\"aiohttp\",{\"0\":{\"80\":1,\"590\":1,\"1105\":1,\"1658\":1,\"2027\":1,\"2396\":1},\"1\":{\"7\":1,\"19\":1,\"31\":1,\"80\":1,\"590\":1,\"1105\":1,\"1658\":3,\"1663\":1,\"1667\":3,\"2027\":3,\"2032\":1,\"2036\":3,\"2396\":3,\"2401\":1,\"2405\":3}}],[\"attach\",{\"1\":{\"449\":1,\"964\":1,\"1479\":1}}],[\"attr\",{\"1\":{\"413\":1,\"928\":1,\"1443\":1}}],[\"activate\",{\"1\":{\"507\":2,\"1022\":2,\"1537\":2}}],[\"action\",{\"0\":{\"1901\":1,\"2270\":1,\"2639\":1},\"1\":{\"504\":1,\"1019\":1,\"1534\":1,\"1901\":3,\"1910\":1,\"2270\":3,\"2279\":1,\"2639\":3,\"2648\":1}}],[\"actions\",{\"1\":{\"485\":2,\"1000\":2,\"1515\":2,\"2697\":6,\"2712\":6,\"2727\":6}}],[\"actionfailed\",{\"1\":{\"195\":1,\"707\":1,\"1222\":1}}],[\"action=count\",{\"1\":{\"1910\":1,\"1913\":1,\"2279\":1,\"2282\":1,\"2648\":1,\"2651\":1}}],[\"action=append\",{\"1\":{\"1910\":1,\"2279\":1,\"2648\":1}}],[\"action=\",{\"1\":{\"100\":2,\"365\":1,\"610\":2,\"880\":1,\"1125\":2,\"1395\":1}}],[\"accept\",{\"1\":{\"121\":1,\"631\":1,\"1146\":1}}],[\"await\",{\"1\":{\"121\":4,\"205\":1,\"206\":1,\"207\":1,\"423\":1,\"424\":4,\"429\":1,\"431\":5,\"472\":1,\"476\":7,\"477\":2,\"631\":4,\"717\":1,\"718\":1,\"719\":1,\"938\":1,\"939\":4,\"944\":1,\"946\":5,\"987\":1,\"991\":7,\"992\":2,\"1146\":4,\"1232\":1,\"1233\":1,\"1234\":1,\"1453\":1,\"1454\":4,\"1459\":1,\"1461\":5,\"1502\":1,\"1506\":7,\"1507\":2,\"1582\":2,\"1941\":1,\"1942\":2,\"1963\":2,\"2310\":1,\"2311\":2,\"2332\":2,\"2679\":1,\"2680\":2,\"2687\":18,\"2688\":3,\"2691\":4,\"2692\":4,\"2694\":2,\"2696\":19,\"2702\":18,\"2703\":3,\"2706\":4,\"2707\":4,\"2709\":2,\"2711\":19,\"2717\":18,\"2718\":3,\"2721\":4,\"2722\":4,\"2724\":2,\"2726\":19}}],[\"awaitable\",{\"1\":{\"120\":1,\"121\":1,\"385\":1,\"386\":1,\"630\":1,\"631\":1,\"900\":1,\"901\":1,\"1145\":1,\"1146\":1,\"1415\":1,\"1416\":1}}],[\"awesome\",{\"1\":{\"110\":2,\"111\":1,\"113\":1,\"484\":2,\"509\":1,\"515\":13,\"620\":2,\"621\":1,\"623\":1,\"999\":2,\"1024\":1,\"1030\":13,\"1135\":2,\"1136\":1,\"1138\":1,\"1514\":2,\"1539\":1,\"1545\":13}}],[\"available=false\",{\"1\":{\"1913\":4,\"2282\":4,\"2651\":4}}],[\"available=true\",{\"1\":{\"1913\":2,\"2282\":2,\"2651\":2}}],[\"available\",{\"1\":{\"111\":2,\"216\":2,\"492\":1,\"493\":1,\"621\":2,\"728\":2,\"1007\":1,\"1008\":1,\"1136\":2,\"1243\":2,\"1522\":1,\"1523\":1}}],[\"alc\",{\"1\":{\"1893\":2,\"1894\":2,\"1896\":4,\"1903\":1,\"1905\":2,\"1908\":3,\"1909\":9,\"1910\":6,\"1911\":2,\"1912\":2,\"1913\":3,\"1914\":2,\"2262\":2,\"2263\":2,\"2265\":4,\"2272\":1,\"2274\":2,\"2277\":3,\"2278\":9,\"2279\":6,\"2280\":2,\"2281\":2,\"2282\":3,\"2283\":2,\"2631\":2,\"2632\":2,\"2634\":4,\"2641\":1,\"2643\":2,\"2646\":3,\"2647\":9,\"2648\":6,\"2649\":2,\"2650\":2,\"2651\":3,\"2652\":2}}],[\"alconnaresult\",{\"1\":{\"108\":1,\"618\":1,\"1133\":1}}],[\"alconna\",{\"0\":{\"108\":1,\"618\":1,\"1133\":1,\"1893\":1,\"1916\":1,\"1917\":1,\"1918\":1,\"1919\":1,\"1920\":1,\"1921\":1,\"1922\":1,\"1923\":1,\"1924\":1,\"1925\":1,\"2262\":1,\"2285\":1,\"2286\":1,\"2287\":1,\"2288\":1,\"2289\":1,\"2290\":1,\"2291\":1,\"2292\":1,\"2293\":1,\"2294\":1,\"2631\":1,\"2654\":1,\"2655\":1,\"2656\":1,\"2657\":1,\"2658\":1,\"2659\":1,\"2660\":1,\"2661\":1,\"2662\":1,\"2663\":1,\"2775\":1,\"2778\":1,\"2781\":1},\"1\":{\"108\":6,\"505\":2,\"618\":6,\"1020\":2,\"1133\":6,\"1535\":2,\"1893\":5,\"1894\":5,\"1895\":1,\"1896\":6,\"1897\":1,\"1900\":2,\"1901\":1,\"1902\":1,\"1903\":4,\"1904\":3,\"1905\":4,\"1906\":1,\"1907\":1,\"1908\":4,\"1909\":9,\"1910\":10,\"1911\":3,\"1912\":3,\"1913\":4,\"1914\":3,\"1917\":1,\"1919\":1,\"1920\":1,\"2262\":5,\"2263\":5,\"2264\":1,\"2265\":6,\"2266\":1,\"2269\":2,\"2270\":1,\"2271\":1,\"2272\":4,\"2273\":3,\"2274\":4,\"2275\":1,\"2276\":1,\"2277\":4,\"2278\":9,\"2279\":10,\"2280\":3,\"2281\":3,\"2282\":4,\"2283\":3,\"2286\":1,\"2288\":1,\"2289\":1,\"2631\":5,\"2632\":5,\"2633\":1,\"2634\":6,\"2635\":1,\"2638\":2,\"2639\":1,\"2640\":1,\"2641\":4,\"2642\":3,\"2643\":4,\"2644\":1,\"2645\":1,\"2646\":4,\"2647\":9,\"2648\":10,\"2649\":3,\"2650\":3,\"2651\":4,\"2652\":3,\"2655\":1,\"2657\":1,\"2658\":1,\"2732\":1,\"2739\":1,\"2746\":1}}],[\"algolia\",{\"1\":{\"503\":2,\"1018\":2,\"1533\":2}}],[\"alembic\",{\"1\":{\"501\":1,\"1016\":1,\"1531\":1,\"1934\":1,\"2303\":1,\"2672\":1,\"2683\":1,\"2686\":14,\"2698\":1,\"2701\":14,\"2713\":1,\"2716\":14}}],[\"allow\",{\"1\":{\"1648\":1,\"1649\":1,\"1650\":1,\"1651\":1,\"2017\":1,\"2018\":1,\"2019\":1,\"2020\":1,\"2386\":1,\"2387\":1,\"2388\":1,\"2389\":1}}],[\"all\",{\"1\":{\"216\":2,\"519\":1,\"520\":2,\"521\":2,\"728\":2,\"1034\":1,\"1035\":2,\"1036\":2,\"1243\":2,\"1549\":1,\"1550\":2,\"1551\":2,\"1809\":2,\"1893\":1,\"1902\":3,\"2178\":2,\"2262\":1,\"2271\":3,\"2547\":2,\"2631\":1,\"2640\":3,\"2696\":3,\"2711\":3,\"2726\":3}}],[\"always\",{\"1\":{\"200\":2,\"712\":2,\"1227\":2}}],[\"alias=\",{\"1\":{\"1900\":1,\"2269\":1,\"2638\":1}}],[\"alias\",{\"1\":{\"142\":1,\"158\":1,\"652\":1,\"668\":1,\"1167\":1,\"1183\":1,\"1899\":1,\"1900\":1,\"2268\":1,\"2269\":1,\"2637\":1,\"2638\":1}}],[\"aliases\",{\"1\":{\"105\":2,\"615\":2,\"1130\":2,\"1872\":1,\"1873\":1,\"1876\":1,\"1877\":1,\"1878\":1,\"1889\":1,\"1890\":1,\"2241\":1,\"2242\":1,\"2245\":1,\"2246\":1,\"2247\":1,\"2258\":1,\"2259\":1,\"2610\":1,\"2611\":1,\"2614\":1,\"2615\":1,\"2616\":1,\"2627\":1,\"2628\":1}}],[\"aliases=true\",{\"1\":{\"105\":2,\"615\":2,\"1130\":2}}],[\"aliases=\",{\"1\":{\"99\":1,\"105\":1,\"428\":1,\"529\":1,\"609\":1,\"615\":1,\"943\":1,\"1044\":1,\"1124\":1,\"1130\":1,\"1458\":1,\"1559\":1,\"1913\":2,\"2282\":2,\"2651\":2}}],[\"adjust\",{\"1\":{\"2686\":5,\"2701\":5,\"2716\":5}}],[\"ade8cdca5470\",{\"1\":{\"1931\":1,\"2300\":1,\"2669\":1}}],[\"advanced\",{\"0\":{\"2754\":1,\"2761\":1,\"2768\":1},\"1\":{\"450\":1,\"965\":1,\"1480\":1}}],[\"addopts\",{\"1\":{\"480\":1,\"995\":1,\"1510\":1}}],[\"addhandler\",{\"1\":{\"421\":1,\"936\":1,\"1451\":1}}],[\"add\",{\"1\":{\"100\":2,\"365\":1,\"420\":3,\"454\":2,\"610\":2,\"880\":1,\"935\":3,\"969\":2,\"1125\":2,\"1395\":1,\"1450\":3,\"1484\":2,\"2686\":1,\"2687\":2,\"2691\":1,\"2692\":1,\"2701\":1,\"2702\":2,\"2706\":1,\"2707\":1,\"2716\":1,\"2717\":2,\"2721\":1,\"2722\":1}}],[\"adapterexception\",{\"1\":{\"195\":1,\"707\":1,\"1222\":1}}],[\"adapters\",{\"0\":{\"1576\":1,\"1945\":1,\"2314\":1},\"1\":{\"38\":1,\"39\":3,\"40\":1,\"103\":1,\"108\":1,\"110\":1,\"136\":1,\"137\":1,\"218\":1,\"219\":2,\"423\":2,\"424\":3,\"427\":1,\"431\":1,\"465\":2,\"470\":1,\"477\":1,\"478\":1,\"479\":2,\"480\":4,\"509\":1,\"533\":1,\"534\":1,\"536\":1,\"538\":1,\"539\":1,\"543\":1,\"545\":6,\"548\":1,\"549\":3,\"550\":1,\"613\":1,\"618\":1,\"620\":1,\"646\":1,\"647\":1,\"730\":1,\"731\":2,\"938\":2,\"939\":3,\"942\":1,\"946\":1,\"980\":2,\"985\":1,\"992\":1,\"993\":1,\"994\":2,\"995\":4,\"1024\":1,\"1048\":1,\"1049\":1,\"1051\":1,\"1053\":1,\"1054\":1,\"1058\":1,\"1060\":6,\"1063\":1,\"1064\":3,\"1065\":1,\"1128\":1,\"1133\":1,\"1135\":1,\"1161\":1,\"1162\":1,\"1245\":1,\"1246\":2,\"1453\":2,\"1454\":3,\"1457\":1,\"1461\":1,\"1495\":2,\"1500\":1,\"1507\":1,\"1508\":1,\"1509\":2,\"1510\":4,\"1539\":1,\"1563\":1,\"1564\":1,\"1566\":1,\"1568\":1,\"1569\":1,\"1573\":1,\"1575\":6,\"1846\":1,\"1941\":1,\"1942\":1,\"2215\":1,\"2310\":1,\"2311\":1,\"2584\":1,\"2679\":1,\"2680\":1,\"2687\":1,\"2702\":1,\"2717\":1}}],[\"adapter\",{\"0\":{\"470\":1,\"985\":1,\"1500\":1},\"1\":{\"36\":1,\"37\":1,\"38\":5,\"39\":8,\"40\":5,\"208\":4,\"218\":10,\"219\":3,\"252\":1,\"253\":1,\"254\":1,\"255\":1,\"256\":1,\"257\":1,\"417\":2,\"464\":1,\"465\":7,\"466\":1,\"467\":1,\"468\":1,\"469\":1,\"470\":5,\"472\":3,\"473\":3,\"474\":1,\"475\":1,\"476\":2,\"477\":9,\"480\":1,\"496\":1,\"500\":1,\"507\":1,\"509\":2,\"525\":1,\"546\":1,\"547\":1,\"548\":5,\"549\":8,\"550\":5,\"720\":4,\"730\":10,\"731\":3,\"765\":1,\"766\":1,\"767\":1,\"768\":1,\"769\":1,\"770\":1,\"932\":2,\"979\":1,\"980\":7,\"981\":1,\"982\":1,\"983\":1,\"984\":1,\"985\":5,\"987\":3,\"988\":3,\"989\":1,\"990\":1,\"991\":2,\"992\":9,\"995\":1,\"1011\":1,\"1015\":1,\"1022\":1,\"1024\":2,\"1040\":1,\"1061\":1,\"1062\":1,\"1063\":5,\"1064\":8,\"1065\":5,\"1235\":4,\"1245\":10,\"1246\":3,\"1280\":1,\"1281\":1,\"1282\":1,\"1283\":1,\"1284\":1,\"1285\":1,\"1447\":2,\"1494\":1,\"1495\":7,\"1496\":1,\"1497\":1,\"1498\":1,\"1499\":1,\"1500\":5,\"1502\":3,\"1503\":3,\"1504\":1,\"1505\":1,\"1506\":2,\"1507\":9,\"1510\":1,\"1526\":1,\"1530\":1,\"1537\":1,\"1539\":2,\"1555\":1,\"1576\":1,\"1577\":2,\"1578\":1,\"1596\":2,\"1720\":2,\"1848\":1,\"1941\":5,\"1942\":4,\"1945\":1,\"1946\":2,\"1958\":2,\"1959\":1,\"2099\":2,\"2217\":1,\"2310\":5,\"2311\":4,\"2314\":1,\"2315\":2,\"2327\":2,\"2328\":1,\"2468\":2,\"2586\":1,\"2679\":5,\"2680\":4}}],[\"annotated\",{\"1\":{\"378\":1,\"893\":1,\"1408\":1,\"2688\":2,\"2694\":2,\"2703\":2,\"2709\":2,\"2718\":2,\"2724\":2}}],[\"annotations\",{\"1\":{\"2686\":1,\"2701\":1,\"2716\":1}}],[\"annotation\",{\"1\":{\"150\":1,\"152\":1,\"660\":1,\"662\":1,\"1175\":1,\"1177\":1}}],[\"another\",{\"1\":{\"222\":1,\"734\":1,\"1249\":1}}],[\"and\",{\"1\":{\"78\":3,\"79\":2,\"80\":1,\"137\":1,\"439\":1,\"440\":1,\"472\":1,\"588\":3,\"589\":2,\"590\":1,\"647\":1,\"954\":1,\"955\":1,\"987\":1,\"1103\":3,\"1104\":2,\"1105\":1,\"1162\":1,\"1469\":1,\"1470\":1,\"1502\":1}}],[\"an\",{\"1\":{\"70\":1,\"419\":2,\"580\":1,\"934\":2,\"1095\":1,\"1449\":2,\"1752\":1,\"2113\":1,\"2482\":1}}],[\"anystring\",{\"1\":{\"1897\":1,\"2266\":1,\"2635\":1}}],[\"any\",{\"1\":{\"69\":1,\"77\":1,\"121\":1,\"136\":1,\"137\":2,\"146\":2,\"147\":1,\"150\":1,\"152\":1,\"153\":1,\"154\":2,\"155\":1,\"157\":1,\"158\":1,\"159\":1,\"163\":1,\"165\":1,\"220\":1,\"221\":1,\"224\":1,\"225\":2,\"237\":1,\"242\":1,\"248\":1,\"249\":1,\"250\":1,\"251\":1,\"252\":2,\"295\":1,\"297\":4,\"298\":1,\"299\":1,\"300\":1,\"301\":1,\"302\":2,\"304\":1,\"305\":1,\"306\":1,\"308\":1,\"313\":1,\"316\":1,\"317\":1,\"319\":4,\"320\":1,\"321\":1,\"326\":2,\"327\":2,\"374\":1,\"375\":1,\"376\":1,\"377\":2,\"378\":1,\"379\":1,\"380\":3,\"382\":2,\"383\":1,\"384\":1,\"385\":2,\"386\":3,\"387\":1,\"388\":1,\"389\":1,\"390\":1,\"393\":1,\"396\":1,\"399\":3,\"400\":3,\"401\":3,\"402\":1,\"403\":1,\"404\":1,\"405\":1,\"408\":4,\"409\":2,\"411\":1,\"413\":1,\"414\":1,\"449\":7,\"470\":2,\"472\":1,\"473\":2,\"475\":3,\"476\":3,\"477\":4,\"579\":1,\"587\":1,\"631\":1,\"646\":1,\"647\":2,\"656\":2,\"657\":1,\"660\":1,\"662\":1,\"663\":1,\"664\":2,\"665\":1,\"667\":1,\"668\":1,\"669\":1,\"673\":1,\"675\":1,\"732\":1,\"733\":1,\"736\":1,\"737\":2,\"750\":1,\"755\":1,\"761\":1,\"762\":1,\"763\":1,\"764\":1,\"765\":2,\"807\":1,\"808\":1,\"810\":1,\"812\":1,\"813\":1,\"814\":2,\"815\":4,\"816\":1,\"817\":1,\"818\":1,\"819\":1,\"821\":1,\"826\":1,\"829\":1,\"830\":1,\"832\":4,\"833\":1,\"834\":1,\"839\":2,\"840\":2,\"841\":1,\"842\":1,\"889\":1,\"890\":1,\"891\":1,\"892\":2,\"893\":1,\"894\":1,\"895\":3,\"897\":2,\"898\":1,\"899\":1,\"900\":2,\"901\":3,\"902\":1,\"903\":1,\"904\":1,\"905\":1,\"908\":1,\"911\":1,\"914\":3,\"915\":3,\"916\":3,\"917\":1,\"918\":1,\"919\":1,\"920\":1,\"923\":4,\"924\":2,\"926\":1,\"928\":1,\"929\":1,\"964\":7,\"985\":2,\"987\":1,\"988\":2,\"990\":3,\"991\":3,\"992\":4,\"1094\":1,\"1102\":1,\"1146\":1,\"1161\":1,\"1162\":2,\"1171\":2,\"1172\":1,\"1175\":1,\"1177\":1,\"1178\":1,\"1179\":2,\"1180\":1,\"1182\":1,\"1183\":1,\"1184\":1,\"1188\":1,\"1190\":1,\"1247\":1,\"1248\":1,\"1251\":1,\"1252\":2,\"1265\":1,\"1270\":1,\"1276\":1,\"1277\":1,\"1278\":1,\"1279\":1,\"1280\":2,\"1322\":1,\"1323\":1,\"1325\":1,\"1327\":1,\"1328\":1,\"1329\":2,\"1330\":4,\"1331\":1,\"1332\":1,\"1333\":1,\"1334\":1,\"1336\":1,\"1341\":1,\"1344\":1,\"1345\":1,\"1347\":4,\"1348\":1,\"1349\":1,\"1354\":2,\"1355\":2,\"1356\":1,\"1357\":1,\"1404\":1,\"1405\":1,\"1406\":1,\"1407\":2,\"1408\":1,\"1409\":1,\"1410\":3,\"1412\":2,\"1413\":1,\"1414\":1,\"1415\":2,\"1416\":3,\"1417\":1,\"1418\":1,\"1419\":1,\"1420\":1,\"1423\":1,\"1426\":1,\"1429\":3,\"1430\":3,\"1431\":3,\"1432\":1,\"1433\":1,\"1434\":1,\"1435\":1,\"1438\":4,\"1439\":2,\"1441\":1,\"1443\":1,\"1444\":1,\"1479\":7,\"1500\":2,\"1502\":1,\"1503\":2,\"1505\":3,\"1506\":3,\"1507\":4,\"1582\":2,\"1583\":2,\"1596\":1,\"1628\":1,\"1632\":1,\"1642\":1,\"1643\":2,\"1644\":3,\"1645\":2,\"1647\":1,\"1650\":1,\"1651\":1,\"1652\":1,\"1653\":2,\"1655\":1,\"1656\":2,\"1657\":2,\"1687\":1,\"1735\":1,\"1738\":1,\"1739\":1,\"1778\":1,\"1796\":4,\"1847\":2,\"1863\":1,\"1864\":1,\"1865\":1,\"1866\":1,\"1867\":1,\"1868\":1,\"1869\":1,\"1870\":1,\"1871\":1,\"1872\":1,\"1873\":1,\"1874\":1,\"1875\":1,\"1876\":1,\"1877\":1,\"1878\":1,\"1879\":1,\"1880\":1,\"1881\":1,\"1882\":1,\"1883\":1,\"1884\":1,\"1885\":1,\"1886\":1,\"1887\":1,\"1888\":1,\"1889\":1,\"1890\":1,\"1891\":1,\"1892\":1,\"1897\":1,\"1907\":1,\"1946\":1,\"1963\":2,\"1964\":2,\"1997\":1,\"2001\":1,\"2011\":1,\"2012\":2,\"2013\":3,\"2014\":2,\"2016\":1,\"2019\":1,\"2020\":1,\"2021\":1,\"2022\":2,\"2024\":1,\"2025\":2,\"2026\":2,\"2056\":1,\"2084\":1,\"2085\":1,\"2116\":1,\"2147\":1,\"2165\":4,\"2216\":2,\"2232\":1,\"2233\":1,\"2234\":1,\"2235\":1,\"2236\":1,\"2237\":1,\"2238\":1,\"2239\":1,\"2240\":1,\"2241\":1,\"2242\":1,\"2243\":1,\"2244\":1,\"2245\":1,\"2246\":1,\"2247\":1,\"2248\":1,\"2249\":1,\"2250\":1,\"2251\":1,\"2252\":1,\"2253\":1,\"2254\":1,\"2255\":1,\"2256\":1,\"2257\":1,\"2258\":1,\"2259\":1,\"2260\":1,\"2261\":1,\"2266\":1,\"2276\":1,\"2315\":1,\"2332\":2,\"2333\":2,\"2366\":1,\"2370\":1,\"2380\":1,\"2381\":2,\"2382\":3,\"2383\":2,\"2385\":1,\"2388\":1,\"2389\":1,\"2390\":1,\"2391\":2,\"2393\":1,\"2394\":2,\"2395\":2,\"2425\":1,\"2453\":1,\"2454\":1,\"2485\":1,\"2516\":1,\"2534\":4,\"2585\":2,\"2601\":1,\"2602\":1,\"2603\":1,\"2604\":1,\"2605\":1,\"2606\":1,\"2607\":1,\"2608\":1,\"2609\":1,\"2610\":1,\"2611\":1,\"2612\":1,\"2613\":1,\"2614\":1,\"2615\":1,\"2616\":1,\"2617\":1,\"2618\":1,\"2619\":1,\"2620\":1,\"2621\":1,\"2622\":1,\"2623\":1,\"2624\":1,\"2625\":1,\"2626\":1,\"2627\":1,\"2628\":1,\"2629\":1,\"2630\":1,\"2635\":1,\"2645\":1}}],[\"analysis\",{\"1\":{\"10\":2,\"22\":2,\"34\":2}}],[\"apscheduler等\",{\"1\":{\"505\":1,\"1020\":1,\"1535\":1}}],[\"apscheduler\",{\"0\":{\"456\":1,\"457\":1,\"458\":1,\"971\":1,\"972\":1,\"973\":1,\"1486\":1,\"1487\":1,\"1488\":1},\"1\":{\"450\":3,\"451\":2,\"452\":3,\"453\":3,\"454\":6,\"457\":1,\"458\":4,\"505\":1,\"965\":3,\"966\":2,\"967\":3,\"968\":3,\"969\":6,\"972\":1,\"973\":4,\"1020\":1,\"1480\":3,\"1481\":2,\"1482\":3,\"1483\":3,\"1484\":6,\"1487\":1,\"1488\":4,\"1535\":1}}],[\"api的方式来获取信息或收发消息\",{\"1\":{\"454\":1,\"969\":1,\"1484\":1}}],[\"apinotavailable\",{\"1\":{\"195\":1,\"707\":1,\"1222\":1}}],[\"api\",{\"0\":{\"476\":1,\"485\":1,\"991\":1,\"1000\":1,\"1506\":1,\"1515\":1},\"1\":{\"58\":1,\"70\":1,\"118\":1,\"120\":1,\"121\":1,\"124\":3,\"136\":4,\"137\":4,\"170\":1,\"202\":2,\"210\":1,\"211\":2,\"212\":2,\"252\":1,\"253\":1,\"254\":1,\"255\":1,\"256\":1,\"257\":1,\"385\":1,\"386\":2,\"474\":1,\"476\":7,\"477\":2,\"484\":1,\"485\":7,\"487\":1,\"488\":3,\"489\":3,\"491\":4,\"497\":1,\"504\":1,\"529\":1,\"568\":1,\"580\":1,\"628\":1,\"630\":1,\"631\":1,\"634\":3,\"646\":4,\"647\":4,\"680\":1,\"714\":2,\"722\":1,\"723\":2,\"724\":2,\"765\":1,\"766\":1,\"767\":1,\"768\":1,\"769\":1,\"770\":1,\"900\":1,\"901\":2,\"989\":1,\"991\":7,\"992\":2,\"999\":1,\"1000\":7,\"1002\":1,\"1003\":3,\"1004\":3,\"1006\":4,\"1012\":1,\"1019\":1,\"1044\":1,\"1083\":1,\"1095\":1,\"1143\":1,\"1145\":1,\"1146\":1,\"1149\":3,\"1161\":4,\"1162\":4,\"1195\":1,\"1229\":2,\"1237\":1,\"1238\":2,\"1239\":2,\"1280\":1,\"1281\":1,\"1282\":1,\"1283\":1,\"1284\":1,\"1285\":1,\"1415\":1,\"1416\":2,\"1504\":1,\"1506\":7,\"1507\":2,\"1514\":1,\"1515\":7,\"1517\":1,\"1518\":3,\"1519\":3,\"1521\":4,\"1527\":1,\"1534\":1,\"1559\":1,\"1577\":1,\"1582\":5,\"1584\":4,\"1585\":6,\"1958\":1,\"1963\":5,\"1965\":4,\"1966\":6,\"2327\":1,\"2332\":5,\"2334\":4,\"2335\":6}}],[\"apis\",{\"1\":{\"58\":1,\"78\":1,\"492\":1,\"493\":1,\"568\":1,\"588\":1,\"1007\":1,\"1008\":1,\"1083\":1,\"1103\":1,\"1522\":1,\"1523\":1}}],[\"appendices\",{\"0\":{\"2755\":1,\"2762\":1,\"2769\":1}}],[\"append\",{\"1\":{\"480\":1,\"544\":3,\"995\":1,\"1059\":3,\"1510\":1,\"1574\":3,\"1901\":3,\"1910\":1,\"2270\":3,\"2279\":1,\"2639\":3,\"2648\":1}}],[\"apply\",{\"0\":{\"1924\":1,\"1925\":1,\"2293\":1,\"2294\":1,\"2662\":1,\"2663\":1}}],[\"applyaddfriendevent\",{\"1\":{\"478\":1,\"993\":1,\"1508\":1}}],[\"application\",{\"1\":{\"110\":2,\"439\":2,\"440\":1,\"620\":2,\"954\":2,\"955\":1,\"1135\":2,\"1469\":2,\"1470\":1,\"2686\":1,\"2701\":1,\"2716\":1}}],[\"appdata\",{\"1\":{\"438\":1,\"439\":1,\"440\":1,\"953\":1,\"954\":1,\"955\":1,\"1468\":1,\"1469\":1,\"1470\":1}}],[\"app=\",{\"1\":{\"64\":1,\"72\":1,\"574\":1,\"582\":1,\"1089\":1,\"1097\":1}}],[\"app\",{\"1\":{\"40\":1,\"64\":2,\"72\":2,\"123\":4,\"124\":3,\"220\":4,\"449\":2,\"504\":3,\"550\":1,\"574\":2,\"582\":2,\"633\":4,\"634\":3,\"732\":4,\"964\":2,\"1019\":3,\"1065\":1,\"1089\":2,\"1097\":2,\"1148\":4,\"1149\":3,\"1247\":4,\"1479\":2,\"1534\":3,\"1690\":1,\"1691\":1,\"1695\":1,\"1738\":1,\"1786\":1,\"1941\":11,\"1942\":5,\"2059\":1,\"2060\":1,\"2064\":1,\"2084\":1,\"2155\":1,\"2310\":11,\"2311\":5,\"2428\":1,\"2429\":1,\"2433\":1,\"2453\":1,\"2524\":1,\"2679\":11,\"2680\":5}}],[\"a\",{\"1\":{\"58\":1,\"78\":1,\"79\":2,\"101\":2,\"117\":3,\"152\":1,\"155\":1,\"156\":1,\"157\":1,\"218\":3,\"365\":1,\"419\":6,\"468\":2,\"472\":1,\"473\":1,\"568\":1,\"588\":1,\"589\":2,\"611\":2,\"627\":3,\"662\":1,\"665\":1,\"666\":1,\"667\":1,\"730\":3,\"880\":1,\"934\":6,\"983\":2,\"987\":1,\"988\":1,\"1083\":1,\"1103\":1,\"1104\":2,\"1126\":2,\"1142\":3,\"1177\":1,\"1180\":1,\"1181\":1,\"1182\":1,\"1245\":3,\"1395\":1,\"1449\":6,\"1498\":2,\"1502\":1,\"1503\":1,\"1900\":1,\"2269\":1,\"2638\":1}}],[\"asciinema\",{\"1\":{\"497\":1,\"1012\":1,\"1527\":1}}],[\"asctime\",{\"1\":{\"227\":1,\"739\":1,\"1254\":1}}],[\"asia\",{\"1\":{\"458\":1,\"973\":1,\"1488\":1}}],[\"as\",{\"1\":{\"121\":1,\"424\":2,\"435\":1,\"440\":1,\"468\":1,\"470\":1,\"472\":4,\"475\":1,\"477\":1,\"478\":1,\"479\":2,\"509\":1,\"631\":1,\"939\":2,\"950\":1,\"955\":1,\"983\":1,\"985\":1,\"987\":4,\"990\":1,\"992\":1,\"993\":1,\"994\":2,\"1024\":1,\"1146\":1,\"1454\":2,\"1465\":1,\"1470\":1,\"1498\":1,\"1500\":1,\"1502\":4,\"1505\":1,\"1507\":1,\"1508\":1,\"1509\":2,\"1539\":1,\"1905\":1,\"1906\":1,\"1941\":3,\"1942\":2,\"2274\":1,\"2275\":1,\"2310\":3,\"2311\":2,\"2643\":1,\"2644\":1,\"2679\":3,\"2680\":2,\"2686\":1,\"2701\":1,\"2716\":1}}],[\"assertionerror\",{\"1\":{\"220\":1,\"221\":1,\"732\":1,\"733\":1,\"1247\":1,\"1248\":1}}],[\"assert\",{\"1\":{\"83\":1,\"222\":1,\"428\":1,\"593\":1,\"734\":1,\"943\":1,\"1108\":1,\"1249\":1,\"1458\":1,\"1894\":1,\"1910\":1,\"1941\":3,\"1942\":2,\"2263\":1,\"2279\":1,\"2310\":3,\"2311\":2,\"2632\":1,\"2648\":1,\"2679\":3,\"2680\":2}}],[\"asgi=asgi\",{\"1\":{\"1941\":1,\"2310\":1,\"2679\":1}}],[\"asgimixin\",{\"1\":{\"118\":2,\"120\":2,\"121\":2,\"220\":2,\"221\":2,\"473\":2,\"628\":2,\"630\":2,\"631\":2,\"732\":2,\"733\":2,\"988\":2,\"1143\":2,\"1145\":2,\"1146\":2,\"1247\":2,\"1248\":2,\"1503\":2}}],[\"asgi\",{\"0\":{\"122\":1,\"123\":1,\"632\":1,\"633\":1,\"1147\":1,\"1148\":1},\"1\":{\"53\":2,\"58\":2,\"64\":3,\"70\":1,\"72\":2,\"118\":4,\"123\":4,\"124\":2,\"221\":4,\"473\":2,\"563\":2,\"568\":2,\"574\":3,\"580\":1,\"582\":2,\"628\":4,\"633\":4,\"634\":2,\"733\":4,\"988\":2,\"1078\":2,\"1083\":2,\"1089\":3,\"1095\":1,\"1097\":2,\"1143\":4,\"1148\":4,\"1149\":2,\"1248\":4,\"1503\":2,\"1737\":1,\"1739\":1,\"1941\":3,\"1942\":1,\"2083\":1,\"2085\":1,\"2310\":3,\"2311\":1,\"2452\":1,\"2454\":1,\"2679\":3,\"2680\":1}}],[\"asyncscalarresult\",{\"1\":{\"2696\":1,\"2711\":1,\"2726\":1}}],[\"asyncsession\",{\"0\":{\"2691\":1,\"2706\":1,\"2721\":1},\"1\":{\"2691\":2,\"2706\":2,\"2721\":2}}],[\"asyncresult\",{\"1\":{\"2696\":1,\"2711\":1,\"2726\":1}}],[\"asynciterator\",{\"1\":{\"2696\":2,\"2711\":2,\"2726\":2}}],[\"asyncio\",{\"1\":{\"2\":1,\"14\":1,\"26\":1,\"64\":3,\"70\":1,\"80\":1,\"472\":4,\"475\":2,\"484\":1,\"485\":1,\"487\":1,\"488\":1,\"489\":1,\"574\":3,\"580\":1,\"590\":1,\"987\":4,\"990\":2,\"999\":1,\"1000\":1,\"1002\":1,\"1003\":1,\"1004\":1,\"1089\":3,\"1095\":1,\"1105\":1,\"1502\":4,\"1505\":2,\"1514\":1,\"1515\":1,\"1517\":1,\"1518\":1,\"1519\":1,\"1941\":2,\"1942\":1,\"2310\":2,\"2311\":1,\"2679\":2,\"2680\":1}}],[\"asyncengine\",{\"1\":{\"1937\":1,\"2306\":1,\"2675\":1}}],[\"asyncexitstack\",{\"1\":{\"244\":1,\"245\":1,\"267\":1,\"268\":1,\"271\":1,\"272\":1,\"292\":1,\"335\":1,\"349\":1,\"757\":1,\"758\":1,\"780\":1,\"781\":1,\"784\":1,\"785\":1,\"804\":1,\"847\":1,\"864\":1,\"1272\":1,\"1273\":1,\"1295\":1,\"1296\":1,\"1299\":1,\"1300\":1,\"1319\":1,\"1362\":1,\"1379\":1}}],[\"asyncgenerator\",{\"1\":{\"407\":1,\"922\":1,\"1437\":1,\"1606\":1,\"1665\":1,\"1763\":1,\"1798\":1,\"1956\":1,\"2034\":1,\"2131\":1,\"2167\":1,\"2325\":1,\"2403\":1,\"2500\":1,\"2536\":1}}],[\"asynchronous\",{\"1\":{\"80\":1,\"590\":1,\"1105\":1}}],[\"async\",{\"0\":{\"2692\":1,\"2707\":1,\"2722\":1},\"1\":{\"78\":1,\"120\":1,\"121\":1,\"124\":1,\"127\":1,\"128\":1,\"129\":1,\"130\":1,\"132\":1,\"133\":1,\"134\":1,\"135\":1,\"136\":1,\"137\":1,\"139\":1,\"140\":2,\"200\":1,\"203\":1,\"205\":1,\"206\":1,\"207\":1,\"297\":1,\"333\":2,\"347\":2,\"406\":1,\"407\":1,\"423\":1,\"424\":4,\"426\":1,\"427\":2,\"428\":1,\"431\":5,\"454\":1,\"472\":4,\"473\":2,\"475\":1,\"476\":1,\"477\":2,\"588\":1,\"630\":1,\"631\":1,\"634\":1,\"637\":1,\"638\":1,\"639\":1,\"640\":1,\"642\":1,\"643\":1,\"644\":1,\"645\":1,\"646\":1,\"647\":1,\"649\":1,\"650\":2,\"712\":1,\"715\":1,\"717\":1,\"718\":1,\"719\":1,\"815\":1,\"845\":2,\"862\":2,\"921\":1,\"922\":1,\"938\":1,\"939\":4,\"941\":1,\"942\":2,\"943\":1,\"946\":5,\"969\":1,\"987\":4,\"988\":2,\"990\":1,\"991\":1,\"992\":2,\"1103\":1,\"1145\":1,\"1146\":1,\"1149\":1,\"1152\":1,\"1153\":1,\"1154\":1,\"1155\":1,\"1157\":1,\"1158\":1,\"1159\":1,\"1160\":1,\"1161\":1,\"1162\":1,\"1164\":1,\"1165\":2,\"1227\":1,\"1230\":1,\"1232\":1,\"1233\":1,\"1234\":1,\"1330\":1,\"1360\":2,\"1377\":2,\"1436\":1,\"1437\":1,\"1453\":1,\"1454\":4,\"1456\":1,\"1457\":2,\"1458\":1,\"1461\":5,\"1484\":1,\"1502\":4,\"1503\":2,\"1505\":1,\"1506\":1,\"1507\":2,\"1937\":1,\"1938\":1,\"1941\":5,\"1942\":3,\"2306\":1,\"2307\":1,\"2310\":5,\"2311\":3,\"2675\":1,\"2676\":1,\"2679\":5,\"2680\":3,\"2687\":16,\"2688\":3,\"2691\":5,\"2692\":5,\"2694\":1,\"2695\":1,\"2696\":18,\"2702\":16,\"2703\":3,\"2706\":5,\"2707\":5,\"2709\":1,\"2710\":1,\"2711\":18,\"2717\":16,\"2718\":3,\"2721\":5,\"2722\":5,\"2724\":1,\"2725\":1,\"2726\":18}}],[\"asyncclient\",{\"1\":{\"7\":1,\"19\":1,\"31\":1}}],[\"共享数据库以及网络请求连接会话\",{\"1\":{\"7\":1,\"19\":1,\"31\":1}}],[\"同样会返回该插件\",{\"1\":{\"1811\":1,\"2180\":1,\"2549\":1}}],[\"同样是一个合法的插件\",{\"1\":{\"514\":1,\"1029\":1,\"1544\":1}}],[\"同样能从文档中受益\",{\"1\":{\"497\":1,\"1012\":1,\"1527\":1}}],[\"同样的还有\",{\"1\":{\"1898\":1,\"2267\":1,\"2636\":1}}],[\"同样的\",{\"1\":{\"424\":1,\"476\":1,\"543\":1,\"939\":1,\"991\":1,\"1058\":1,\"1454\":1,\"1506\":1,\"1573\":1}}],[\"同样的代码逻辑多次重复\",{\"1\":{\"7\":1,\"19\":1,\"31\":1}}],[\"同步更新使用说明文档\",{\"1\":{\"496\":1,\"1011\":1,\"1526\":1}}],[\"同步更新使用文档\",{\"1\":{\"495\":1,\"1010\":1,\"1525\":1}}],[\"同时提供了便捷的查询方法\",{\"1\":{\"1902\":1,\"2271\":1,\"2640\":1}}],[\"同时可以使用\",{\"1\":{\"1897\":1,\"2266\":1,\"2635\":1}}],[\"同时支持\",{\"1\":{\"1895\":1,\"2264\":1,\"2633\":1}}],[\"同时也会自动去除\",{\"1\":{\"528\":1,\"1043\":1,\"1558\":1}}],[\"同时插件间也可能产生冲突\",{\"1\":{\"501\":1,\"1016\":1,\"1531\":1}}],[\"同时插件提供\",{\"1\":{\"435\":1,\"950\":1,\"1465\":1}}],[\"同时完善进阶内容\",{\"1\":{\"497\":1,\"1012\":1,\"1527\":1}}],[\"同时其官方提供了丰富的聊天机器人\",{\"1\":{\"488\":1,\"1003\":1,\"1518\":1}}],[\"同时对\",{\"1\":{\"484\":1,\"999\":1,\"1514\":1}}],[\"同时\",{\"1\":{\"0\":1,\"12\":1,\"24\":1,\"54\":1,\"109\":1,\"422\":1,\"428\":1,\"488\":1,\"489\":1,\"492\":1,\"510\":1,\"533\":1,\"564\":1,\"619\":1,\"937\":1,\"943\":1,\"1003\":1,\"1004\":1,\"1007\":1,\"1025\":1,\"1048\":1,\"1079\":1,\"1134\":1,\"1452\":1,\"1458\":1,\"1518\":1,\"1519\":1,\"1522\":1,\"1540\":1,\"1563\":1,\"1940\":1,\"2309\":1,\"2678\":1}}],[\"这类独立的数据库后端不会受平台和\",{\"1\":{\"2697\":1,\"2712\":1,\"2727\":1}}],[\"这类为大型机器人开发而设计的项目来说\",{\"1\":{\"487\":1,\"1002\":1,\"1517\":1}}],[\"这意味着我们需要频繁地创建并执行迁移脚本\",{\"1\":{\"2686\":1,\"2701\":1,\"2716\":1}}],[\"这就是迁移脚本的作用\",{\"1\":{\"2686\":1,\"2701\":1,\"2716\":1}}],[\"这就是我们创建的迁移脚本\",{\"1\":{\"2686\":1,\"2701\":1,\"2716\":1}}],[\"这使得我们可以实现如下命令\",{\"1\":{\"1910\":1,\"2279\":1,\"2648\":1}}],[\"这是因为\",{\"1\":{\"2685\":1,\"2700\":1,\"2715\":1}}],[\"这是注释\",{\"1\":{\"1896\":2,\"2265\":2,\"2634\":2}}],[\"这是一个示例插件\",{\"1\":{\"110\":1,\"620\":1,\"1135\":1}}],[\"这是一个以机器人\",{\"1\":{\"40\":1,\"550\":1,\"1065\":1}}],[\"这段代码通过alconna创捷了一个接受主命令名为pip\",{\"1\":{\"1893\":1,\"2262\":1,\"2631\":1}}],[\"这也是最常见的用法\",{\"1\":{\"1932\":1,\"2301\":1,\"2670\":1}}],[\"这也是一个以机器人\",{\"1\":{\"40\":1,\"550\":1,\"1065\":1}}],[\"这也意味着你可以将默认值设置为\",{\"1\":{\"1899\":1,\"2268\":1,\"2637\":1}}],[\"这也意味着\",{\"1\":{\"533\":1,\"1048\":1,\"1563\":1}}],[\"这由插件编写者决定\",{\"1\":{\"525\":1,\"1040\":1,\"1555\":1}}],[\"这种加载方式是以上两种方式的混合\",{\"1\":{\"519\":1,\"1034\":1,\"1549\":1}}],[\"这会导致插件不能正常运行\",{\"1\":{\"2686\":1,\"2701\":1,\"2716\":1}}],[\"这会导致插件加载失败\",{\"1\":{\"116\":1,\"626\":1,\"1141\":1}}],[\"这会导致\",{\"1\":{\"516\":1,\"1031\":1,\"1546\":1}}],[\"这时候就需要对错误进行跟踪\",{\"1\":{\"444\":1,\"959\":1,\"1474\":1}}],[\"这时候我们可以在这个钩子函数中进行这些操作\",{\"1\":{\"127\":1,\"637\":1,\"1152\":1}}],[\"这时候我们就需要在插件之间进行跨插件访问\",{\"1\":{\"115\":1,\"625\":1,\"1140\":1}}],[\"这个事件响应器会对\",{\"1\":{\"528\":1,\"1043\":1,\"1558\":1}}],[\"这个时候包\",{\"1\":{\"514\":1,\"1029\":1,\"1544\":1}}],[\"这个时候模块\",{\"1\":{\"513\":1,\"1028\":1,\"1543\":1}}],[\"这个\",{\"1\":{\"468\":1,\"983\":1,\"1498\":1}}],[\"这个函数\",{\"1\":{\"426\":1,\"941\":1,\"1456\":1}}],[\"这个参数就是一个响应规则\",{\"1\":{\"425\":1,\"940\":1,\"1455\":1}}],[\"这个方法由协议适配器进行了实现\",{\"1\":{\"423\":1,\"938\":1,\"1453\":1}}],[\"这个会话\",{\"1\":{\"140\":1,\"650\":1,\"1165\":1}}],[\"这个过程称为会话更新\",{\"1\":{\"138\":1,\"648\":1,\"1163\":1}}],[\"这个钩子函数会在任何协议适配器连接\",{\"1\":{\"129\":1,\"639\":1,\"1154\":1}}],[\"这个钩子函数会在\",{\"1\":{\"127\":1,\"128\":1,\"130\":1,\"132\":1,\"133\":1,\"134\":1,\"135\":1,\"136\":1,\"137\":1,\"637\":1,\"638\":1,\"640\":1,\"642\":1,\"643\":1,\"644\":1,\"645\":1,\"646\":1,\"647\":1,\"1152\":1,\"1153\":1,\"1155\":1,\"1157\":1,\"1158\":1,\"1159\":1,\"1160\":1,\"1161\":1,\"1162\":1}}],[\"这些代码是由\",{\"1\":{\"2686\":1,\"2701\":1,\"2716\":1}}],[\"这些独特的内容均需要由对应的协议适配器所提供\",{\"1\":{\"533\":1,\"1048\":1,\"1563\":1}}],[\"这些内容的意义和使用方法将会在后续的章节中一一介绍\",{\"1\":{\"529\":1,\"1044\":1,\"1559\":1}}],[\"这些将会在稍后的章节中逐一介绍\",{\"1\":{\"509\":1,\"1024\":1,\"1539\":1}}],[\"这些实现都各自重复实现了\",{\"1\":{\"492\":1,\"493\":1,\"1007\":1,\"1008\":1,\"1522\":1,\"1523\":1}}],[\"这些错误都会导致应用的运行出现问题\",{\"1\":{\"444\":1,\"959\":1,\"1474\":1}}],[\"这些信息都可以存储于会话状态中\",{\"1\":{\"431\":1,\"946\":1,\"1461\":1}}],[\"这些信息编写于插件模块的顶层\",{\"1\":{\"110\":1,\"620\":1,\"1135\":1}}],[\"这些异常并非所有需要用户处理\",{\"1\":{\"195\":1,\"707\":1,\"1222\":1}}],[\"这些配置将会在\",{\"1\":{\"165\":1,\"675\":1,\"1190\":1}}],[\"这些函数可以跟普通的事件处理函数一样接受相应的参数\",{\"1\":{\"131\":1,\"641\":1,\"1156\":1}}],[\"这些钩子函数指的是影响\",{\"1\":{\"131\":1,\"641\":1,\"1156\":1}}],[\"这些钩子函数是由驱动器来运行的\",{\"1\":{\"126\":1,\"636\":1,\"1151\":1}}],[\"这些钩子函数可以用装饰器的形式来使用\",{\"1\":{\"125\":1,\"635\":1,\"1150\":1}}],[\"这两个应用是同一个对象\",{\"1\":{\"123\":1,\"633\":1,\"1148\":1}}],[\"这两种途径各有优劣\",{\"1\":{\"118\":1,\"628\":1,\"1143\":1}}],[\"这里就不再赘述\",{\"1\":{\"1942\":1,\"2311\":1,\"2680\":1}}],[\"这里给出几个简单的例子\",{\"1\":{\"545\":1,\"1060\":1,\"1575\":1}}],[\"这里的逻辑是\",{\"1\":{\"492\":1,\"493\":1,\"1007\":1,\"1008\":1,\"1522\":1,\"1523\":1}}],[\"这里的插件名称是供使用者或机器人用户查看的\",{\"1\":{\"110\":1,\"620\":1,\"1135\":1}}],[\"这里为开发者提供几个常见问题的解决方法\",{\"1\":{\"480\":1,\"995\":1,\"1510\":1}}],[\"这里要断开\",{\"1\":{\"472\":1,\"987\":1,\"1502\":1}}],[\"这里不再赘述\",{\"1\":{\"431\":1,\"946\":1,\"1461\":1}}],[\"这里将不再展示\",{\"1\":{\"139\":1,\"649\":1,\"1164\":1}}],[\"这里将详细介绍驱动器配置的格式\",{\"1\":{\"54\":1,\"564\":1,\"1079\":1}}],[\"这里我们以\",{\"1\":{\"124\":1,\"634\":1,\"1149\":1}}],[\"这在响应规则一节中已经介绍过\",{\"1\":{\"88\":1,\"598\":1,\"1113\":1}}],[\"这在权限控制一节中已经介绍过\",{\"1\":{\"87\":1,\"597\":1,\"1112\":1}}],[\"这在你有以下情形的需求时非常有用\",{\"1\":{\"7\":1,\"19\":1,\"31\":1}}],[\"这样的面向对象编程\",{\"1\":{\"2687\":1,\"2702\":1,\"2717\":1}}],[\"这样可以使你的代码更加通用\",{\"1\":{\"423\":1,\"938\":1,\"1453\":1}}],[\"这样我们就可以通过协议适配器定义的子类型来获取更多的信息\",{\"1\":{\"423\":1,\"938\":1,\"1453\":1}}],[\"这样我们就可以实现持久化\",{\"1\":{\"81\":1,\"591\":1,\"1106\":1}}],[\"这样就能成功匹配\",{\"1\":{\"105\":1,\"615\":1,\"1130\":1}}],[\"这样\",{\"1\":{\"100\":1,\"114\":1,\"424\":2,\"428\":1,\"528\":1,\"529\":1,\"610\":1,\"624\":1,\"939\":2,\"943\":1,\"1043\":1,\"1044\":1,\"1125\":1,\"1139\":1,\"1454\":2,\"1458\":1,\"1558\":1,\"1559\":1}}],[\"这样适配器就可以通过驱动器接收事件和调用接口了\",{\"1\":{\"38\":1,\"548\":1,\"1063\":1}}],[\"这部分代码拥有共享的逻辑\",{\"1\":{\"7\":1,\"19\":1,\"31\":1}}],[\"在类属性中声明子依赖\",{\"1\":{\"2688\":1,\"2703\":1,\"2718\":1}}],[\"在复杂或有歧义的情况下\",{\"1\":{\"2686\":1,\"2701\":1,\"2716\":1}}],[\"在获取到模拟客户端后\",{\"1\":{\"1942\":1,\"2311\":1,\"2680\":1}}],[\"在获取到了\",{\"1\":{\"124\":1,\"634\":1,\"1149\":1}}],[\"在该组件未被解析时使用使用该值替换\",{\"1\":{\"1900\":1,\"2269\":1,\"2638\":1}}],[\"在实际命令中并不需要传入\",{\"1\":{\"1896\":1,\"2265\":1,\"2634\":1}}],[\"在实际使用中\",{\"1\":{\"534\":1,\"1049\":1,\"1564\":1}}],[\"在添加\",{\"1\":{\"1873\":1,\"1890\":1,\"2242\":1,\"2259\":1,\"2611\":1,\"2628\":1}}],[\"在添加路由规则时\",{\"1\":{\"118\":1,\"628\":1,\"1143\":1}}],[\"在传入字段名不是有效标识符时有用\",{\"1\":{\"1642\":1,\"2011\":1,\"2380\":1}}],[\"在命令匹配部分使用\",{\"1\":{\"1630\":1,\"1999\":1,\"2368\":1}}],[\"在事实上\",{\"1\":{\"545\":1,\"1060\":1,\"1575\":1}}],[\"在事件处理流程中\",{\"1\":{\"431\":1,\"946\":1,\"1461\":1}}],[\"在事件类型与重载一节中\",{\"1\":{\"41\":1,\"551\":1,\"1066\":1}}],[\"在以下的示例中\",{\"1\":{\"534\":1,\"1049\":1,\"1564\":1}}],[\"在不同平台中\",{\"1\":{\"530\":1,\"1045\":1,\"1560\":1}}],[\"在辅助函数中\",{\"1\":{\"529\":1,\"1044\":1,\"1559\":1}}],[\"在上面的示例中\",{\"1\":{\"2688\":1,\"2703\":1,\"2718\":1}}],[\"在上面的测试中\",{\"1\":{\"1941\":1,\"1942\":1,\"2310\":1,\"2311\":1,\"2679\":1,\"2680\":1}}],[\"在上面的代码中\",{\"1\":{\"423\":1,\"426\":1,\"938\":1,\"941\":1,\"1453\":1,\"1456\":1}}],[\"在上一节的使用依赖注入中\",{\"1\":{\"532\":1,\"533\":1,\"1047\":1,\"1048\":1,\"1562\":1,\"1563\":1}}],[\"在上一节创建插件中\",{\"1\":{\"528\":1,\"1043\":1,\"1558\":1}}],[\"在接下来的章节中\",{\"1\":{\"525\":1,\"1040\":1,\"1555\":1}}],[\"在接收到来自平台的事件数据后\",{\"1\":{\"475\":1,\"990\":1,\"1505\":1}}],[\"在接收用户新的一条消息后从头开始执行当前处理函数\",{\"1\":{\"256\":1,\"769\":1,\"1284\":1}}],[\"在接收用户新的一条消息后继续下一个处理函数\",{\"1\":{\"254\":1,\"767\":1,\"1282\":1}}],[\"在接收用户新的一条消息后继续运行该函数\",{\"1\":{\"250\":1,\"763\":1,\"1278\":1}}],[\"在接收用户新的一个事件后从头开始执行当前处理函数\",{\"1\":{\"255\":1,\"257\":1,\"768\":1,\"770\":1,\"1283\":1,\"1285\":1}}],[\"在正式编写插件之前\",{\"1\":{\"511\":1,\"1026\":1,\"1541\":1}}],[\"在创建alconna时候传入命名空间以替换默认命名空间\",{\"1\":{\"1905\":1,\"2274\":1,\"2643\":1}}],[\"在创建完成以上文件并确认已安装所需适配器和插件后\",{\"1\":{\"509\":1,\"1024\":1,\"1539\":1}}],[\"在创建项目前\",{\"1\":{\"507\":1,\"1022\":1,\"1537\":1}}],[\"在快速上手中\",{\"1\":{\"506\":1,\"526\":1,\"1021\":1,\"1041\":1,\"1536\":1,\"1556\":1}}],[\"在长期的使用中发现了一些问题和不足的地方\",{\"1\":{\"504\":1,\"1019\":1,\"1534\":1}}],[\"在解决以上问题的基础上\",{\"1\":{\"503\":1,\"1018\":1,\"1533\":1}}],[\"在早期提供了基于网页的\",{\"1\":{\"496\":1,\"1011\":1,\"1526\":1}}],[\"在聊天机器人的开发过程中\",{\"1\":{\"487\":1,\"1002\":1,\"1517\":1}}],[\"在代码中补充\",{\"1\":{\"485\":1,\"1000\":1,\"1515\":1}}],[\"在更新代码接口的同时需要手动更新文档\",{\"1\":{\"485\":1,\"1000\":1,\"1515\":1}}],[\"在完成测试后\",{\"1\":{\"1941\":1,\"2310\":1,\"2679\":1}}],[\"在完成适配器代码的编写后\",{\"1\":{\"481\":1,\"996\":1,\"1511\":1}}],[\"在完成依赖声明后\",{\"1\":{\"117\":1,\"627\":1,\"1142\":1}}],[\"在测试中无法导入\",{\"1\":{\"480\":1,\"995\":1,\"1510\":1}}],[\"在与平台断开连接或出现某些异常进行重连时\",{\"1\":{\"474\":1,\"989\":1,\"1504\":1}}],[\"在与平台建立连接后\",{\"1\":{\"474\":1,\"989\":1,\"1504\":1}}],[\"在编写平台相关内容之前\",{\"1\":{\"470\":1,\"985\":1,\"1500\":1}}],[\"在编写适配器时\",{\"1\":{\"464\":1,\"979\":1,\"1494\":1}}],[\"在编写适配器之前\",{\"1\":{\"464\":1,\"979\":1,\"1494\":1}}],[\"在编程中\",{\"1\":{\"7\":1,\"19\":1,\"31\":1}}],[\"在此我们会简要介绍其调用方法\",{\"1\":{\"452\":1,\"967\":1,\"1482\":1}}],[\"在此基础上添加了消息序列\",{\"1\":{\"100\":1,\"610\":1,\"1125\":1}}],[\"在项目目录中创建一个两层文件夹\",{\"1\":{\"515\":2,\"1030\":2,\"1545\":2}}],[\"在项目目录下执行以下命令\",{\"1\":{\"434\":1,\"445\":1,\"451\":1,\"949\":1,\"960\":1,\"966\":1,\"1464\":1,\"1475\":1,\"1481\":1}}],[\"在项目文件夹中\",{\"1\":{\"510\":1,\"1025\":1,\"1540\":1}}],[\"在项目文件夹中创建一个\",{\"1\":{\"508\":1,\"509\":1,\"1023\":1,\"1024\":1,\"1538\":1,\"1539\":1}}],[\"在项目\",{\"1\":{\"448\":1,\"963\":1,\"1478\":1}}],[\"在安装完成之后\",{\"1\":{\"446\":1,\"961\":1,\"1476\":1}}],[\"在应用实际运行过程中\",{\"1\":{\"444\":1,\"959\":1,\"1474\":1}}],[\"在期间的任何一个事件处理函数都可以进行读写\",{\"1\":{\"431\":1,\"946\":1,\"1461\":1}}],[\"在会话中\",{\"1\":{\"431\":1,\"946\":1,\"1461\":1}}],[\"在原有列表\",{\"1\":{\"543\":1,\"1058\":1,\"1573\":1}}],[\"在原\",{\"1\":{\"428\":1,\"943\":1,\"1458\":1}}],[\"在定义响应规则时\",{\"1\":{\"428\":1,\"943\":1,\"1458\":1}}],[\"在指南中\",{\"1\":{\"425\":1,\"940\":1,\"1455\":1}}],[\"在指南与深入中\",{\"1\":{\"84\":1,\"594\":1,\"1109\":1}}],[\"在自定义权限一节中\",{\"1\":{\"423\":1,\"938\":1,\"1453\":1}}],[\"在本章节中\",{\"1\":{\"422\":1,\"506\":1,\"937\":1,\"1021\":1,\"1452\":1,\"1536\":1}}],[\"在使用事件响应器操作发送消息时\",{\"1\":{\"535\":1,\"1050\":1,\"1565\":1}}],[\"在使用之前可以参考事件响应器进阶\",{\"1\":{\"529\":1,\"1044\":1,\"1559\":1}}],[\"在使用本插件前同样需要使用\",{\"1\":{\"435\":1,\"950\":1,\"1465\":1}}],[\"在使用前请先安装\",{\"1\":{\"434\":1,\"445\":1,\"451\":1,\"949\":1,\"960\":1,\"966\":1,\"1464\":1,\"1475\":1,\"1481\":1}}],[\"在使用插件的过程中\",{\"1\":{\"433\":1,\"948\":1,\"1463\":1}}],[\"在使用平台接口时\",{\"1\":{\"422\":1,\"937\":1,\"1452\":1}}],[\"在使用适配器之前\",{\"1\":{\"38\":1,\"548\":1,\"1063\":1}}],[\"在之前的示例中\",{\"1\":{\"422\":1,\"937\":1,\"1452\":1}}],[\"在机器人入口文件中\",{\"1\":{\"420\":1,\"935\":1,\"1450\":1}}],[\"在启动时会添加一个默认的日志处理器\",{\"1\":{\"420\":1,\"935\":1,\"1450\":1}}],[\"在参数不存在时向用户发送的消息\",{\"1\":{\"251\":1,\"764\":1,\"1279\":1}}],[\"在参数中获取\",{\"1\":{\"90\":1,\"600\":1,\"1115\":1}}],[\"在网络出现问题时抛出\",{\"1\":{\"211\":1,\"723\":1,\"1238\":1}}],[\"在注册了上述响应事件类型更新函数后\",{\"1\":{\"139\":1,\"649\":1,\"1164\":1}}],[\"在某个事件响应器对事件响应后\",{\"1\":{\"138\":1,\"648\":1,\"1163\":1}}],[\"在下面的代码中\",{\"1\":{\"124\":1,\"634\":1,\"1149\":1}}],[\"在向驱动器添加路由规则时\",{\"1\":{\"118\":1,\"628\":1,\"1143\":1}}],[\"在驱动器一节中\",{\"1\":{\"118\":1,\"628\":1,\"1143\":1}}],[\"在消息类型的事件响应器的基础上\",{\"1\":{\"93\":1,\"603\":1,\"1118\":1}}],[\"在响应器被触发时\",{\"1\":{\"92\":1,\"602\":1,\"1117\":1}}],[\"在部分情况中\",{\"1\":{\"90\":1,\"600\":1,\"1115\":1}}],[\"在这里加载插件\",{\"1\":{\"509\":1,\"515\":1,\"1024\":1,\"1030\":1,\"1539\":1,\"1545\":1}}],[\"在这里是指\",{\"1\":{\"7\":1,\"19\":1,\"31\":1}}],[\"在这个钩子函数中\",{\"1\":{\"136\":1,\"137\":1,\"646\":1,\"647\":1,\"1161\":1,\"1162\":1}}],[\"在这个钩子函数内抛出\",{\"1\":{\"132\":1,\"134\":1,\"642\":1,\"644\":1,\"1157\":1,\"1159\":1}}],[\"在这一节中\",{\"1\":{\"84\":1,\"594\":1,\"1109\":1}}],[\"在多实例间共享会话状态等功能\",{\"1\":{\"81\":1,\"591\":1,\"1106\":1}}],[\"在进入会话状态后\",{\"1\":{\"81\":1,\"591\":1,\"1106\":1}}],[\"在\",{\"1\":{\"10\":3,\"22\":3,\"34\":3,\"55\":1,\"64\":3,\"72\":1,\"110\":1,\"125\":1,\"138\":1,\"195\":1,\"203\":1,\"210\":1,\"333\":1,\"347\":1,\"394\":1,\"395\":1,\"423\":1,\"426\":1,\"435\":1,\"450\":1,\"454\":1,\"459\":1,\"472\":1,\"480\":1,\"504\":2,\"512\":1,\"515\":1,\"526\":1,\"527\":1,\"530\":1,\"532\":1,\"565\":1,\"574\":3,\"582\":1,\"620\":1,\"635\":1,\"648\":1,\"707\":1,\"715\":1,\"722\":1,\"845\":1,\"862\":1,\"909\":1,\"910\":1,\"938\":1,\"941\":1,\"950\":1,\"965\":1,\"969\":1,\"974\":1,\"987\":1,\"995\":1,\"1019\":2,\"1027\":1,\"1030\":1,\"1041\":1,\"1042\":1,\"1045\":1,\"1047\":1,\"1080\":1,\"1089\":3,\"1097\":1,\"1135\":1,\"1150\":1,\"1163\":1,\"1222\":1,\"1230\":1,\"1237\":1,\"1360\":1,\"1377\":1,\"1424\":1,\"1425\":1,\"1453\":1,\"1456\":1,\"1465\":1,\"1480\":1,\"1484\":1,\"1489\":1,\"1502\":1,\"1510\":1,\"1534\":2,\"1542\":1,\"1545\":1,\"1556\":1,\"1557\":1,\"1560\":1,\"1562\":1,\"1596\":1,\"1946\":1,\"2315\":1}}],[\"系统下\",{\"1\":{\"435\":1,\"950\":1,\"1465\":1}}],[\"系统\",{\"1\":{\"7\":1,\"19\":1,\"31\":1}}],[\"依赖于基于\",{\"1\":{\"450\":1,\"965\":1,\"1480\":1}}],[\"依赖于插件\",{\"1\":{\"117\":1,\"627\":1,\"1142\":1}}],[\"依赖参数\",{\"1\":{\"383\":1,\"384\":1,\"387\":1,\"388\":1,\"389\":1,\"390\":1,\"391\":1,\"392\":1,\"394\":1,\"395\":1,\"898\":1,\"899\":1,\"902\":1,\"903\":1,\"904\":1,\"905\":1,\"906\":1,\"907\":1,\"909\":1,\"910\":1,\"1413\":1,\"1414\":1,\"1417\":1,\"1418\":1,\"1419\":1,\"1420\":1,\"1421\":1,\"1422\":1,\"1424\":1,\"1425\":1}}],[\"依赖函数会根据其参数的类型注解来决定是否执行\",{\"1\":{\"424\":1,\"939\":1,\"1454\":1}}],[\"依赖函数\",{\"1\":{\"297\":1,\"815\":1,\"1330\":1}}],[\"依赖缓存\",{\"1\":{\"244\":1,\"245\":1,\"292\":1,\"335\":1,\"349\":1,\"396\":1,\"757\":1,\"758\":1,\"804\":1,\"847\":1,\"864\":1,\"911\":1,\"1272\":1,\"1273\":1,\"1319\":1,\"1362\":1,\"1379\":1,\"1426\":1}}],[\"依赖性\",{\"1\":{\"7\":1,\"19\":1,\"31\":1}}],[\"依赖\",{\"1\":{\"7\":1,\"19\":1,\"31\":1}}],[\"依赖注入获得了一个会话\",{\"1\":{\"2687\":1,\"2702\":1,\"2717\":1}}],[\"依赖注入获取\",{\"1\":{\"99\":1,\"100\":1,\"101\":1,\"609\":1,\"610\":1,\"611\":1,\"1124\":1,\"1125\":1,\"1126\":1}}],[\"依赖注入解析前的参数检查\",{\"1\":{\"1648\":1,\"2017\":1,\"2386\":1}}],[\"依赖注入的可调用对象\",{\"1\":{\"1648\":1,\"2017\":1,\"2386\":1}}],[\"依赖注入的基本单元\",{\"1\":{\"1647\":1,\"2016\":1,\"2385\":1}}],[\"依赖注入容器\",{\"1\":{\"1648\":1,\"2017\":1,\"2386\":1}}],[\"依赖注入也可以使用这个特性来对不同的返回值进行处理\",{\"1\":{\"424\":1,\"939\":1,\"1454\":1}}],[\"依赖注入等方式实现输入参数校验\",{\"1\":{\"58\":1,\"568\":1,\"1083\":1}}],[\"依赖注入\",{\"0\":{\"2688\":1,\"2689\":1,\"2703\":1,\"2704\":1,\"2718\":1,\"2719\":1},\"1\":{\"7\":1,\"19\":1,\"31\":1,\"2688\":1,\"2703\":1,\"2718\":1}}],[\"依赖注入系统\",{\"0\":{\"6\":1,\"18\":1,\"30\":1}}],[\"即内容是唯一的且非空的\",{\"1\":{\"2685\":1,\"2700\":1,\"2715\":1}}],[\"即回滚到初始状态\",{\"1\":{\"1933\":1,\"2302\":1,\"2671\":1}}],[\"即未经过\",{\"1\":{\"1919\":1,\"2288\":1,\"2657\":1}}],[\"即不声明\",{\"1\":{\"1899\":1,\"2268\":1,\"2637\":1}}],[\"即使有\",{\"1\":{\"1897\":1,\"2266\":1,\"2635\":1}}],[\"即使用\",{\"1\":{\"117\":1,\"627\":1,\"1142\":1}}],[\"即关闭\",{\"1\":{\"1678\":1,\"1679\":1,\"1680\":1,\"2047\":1,\"2048\":1,\"2049\":1,\"2416\":1,\"2417\":1,\"2418\":1}}],[\"即事件响应器收到的信息内容为\",{\"1\":{\"528\":1,\"1043\":1,\"1558\":1}}],[\"即插件\",{\"1\":{\"525\":1,\"1040\":1,\"1555\":1}}],[\"即可像\",{\"1\":{\"1941\":1,\"2310\":1,\"2679\":1}}],[\"即可运行机器人\",{\"1\":{\"509\":1,\"1024\":1,\"1539\":1}}],[\"即可创建一个带有基本结构的适配器项目\",{\"1\":{\"466\":1,\"981\":1,\"1496\":1}}],[\"即在\",{\"1\":{\"465\":1,\"980\":1,\"1495\":1}}],[\"即刻开始插件编写\",{\"1\":{\"432\":1,\"947\":1,\"1462\":1}}],[\"即为一个\",{\"1\":{\"426\":1,\"941\":1,\"1456\":1}}],[\"即只会输出\",{\"1\":{\"419\":1,\"934\":1,\"1449\":1}}],[\"即判断事件是否满足权限的处理函数\",{\"1\":{\"392\":1,\"907\":1,\"1422\":1}}],[\"即判断是否响应事件的处理函数\",{\"1\":{\"391\":1,\"906\":1,\"1421\":1}}],[\"即触发一次后删除\",{\"1\":{\"242\":1,\"755\":1,\"1270\":1}}],[\"即运行全局\",{\"1\":{\"225\":1,\"737\":1,\"1252\":1}}],[\"即是进入了会话状态\",{\"1\":{\"138\":1,\"648\":1,\"1163\":1}}],[\"即是该响应器所要响应的事件类型\",{\"1\":{\"86\":1,\"596\":1,\"1111\":1}}],[\"即便插件导入顺序不同\",{\"1\":{\"116\":1,\"626\":1,\"1141\":1}}],[\"即一个插件可以包含其他插件\",{\"1\":{\"112\":1,\"622\":1,\"1137\":1}}],[\"即仅使用基本适配器功能\",{\"1\":{\"110\":1,\"620\":1,\"1135\":1}}],[\"即以优先级为键\",{\"1\":{\"82\":1,\"592\":1,\"1107\":1}}],[\"即驱动器类\",{\"1\":{\"54\":1,\"564\":1,\"1079\":1}}],[\"即服务端型驱动器\",{\"1\":{\"53\":1,\"563\":1,\"1078\":1}}],[\"即客户端型驱动器\",{\"1\":{\"53\":1,\"563\":1,\"1078\":1}}],[\"即\",{\"1\":{\"7\":2,\"19\":2,\"31\":2,\"54\":1,\"64\":1,\"116\":1,\"426\":1,\"530\":1,\"564\":1,\"574\":1,\"626\":1,\"941\":1,\"1045\":1,\"1079\":1,\"1089\":1,\"1141\":1,\"1456\":1,\"1560\":1,\"1810\":1,\"1811\":1,\"2179\":1,\"2180\":1,\"2548\":1,\"2549\":1}}],[\"什么是依赖注入\",{\"0\":{\"7\":1,\"19\":1,\"31\":1}}],[\"减少代码冗余\",{\"1\":{\"6\":1,\"18\":1,\"30\":1}}],[\"增加代码的可读性\",{\"1\":{\"6\":1,\"18\":1,\"30\":1}}],[\"清晰\",{\"1\":{\"6\":1,\"18\":1,\"30\":1}}],[\"可逆地同步数据库模式\",{\"1\":{\"2686\":1,\"2701\":1,\"2716\":1}}],[\"可复现地\",{\"1\":{\"2686\":1,\"2701\":1,\"2716\":1}}],[\"可自定义类型\",{\"1\":{\"1863\":1,\"1880\":1,\"2232\":1,\"2249\":1,\"2601\":1,\"2618\":1}}],[\"可与其他驱动器共用的混入基类\",{\"1\":{\"1714\":1,\"2114\":1,\"2483\":1}}],[\"可导入的\",{\"1\":{\"517\":1,\"518\":1,\"1032\":1,\"1033\":1,\"1547\":1,\"1548\":1}}],[\"可选\",{\"1\":{\"503\":1,\"507\":1,\"1018\":1,\"1022\":1,\"1533\":1,\"1537\":1,\"1928\":2,\"1929\":2,\"2297\":2,\"2298\":2,\"2666\":2,\"2667\":2}}],[\"可选参数解析器\",{\"1\":{\"364\":1,\"879\":1,\"1394\":1}}],[\"可选参数\",{\"1\":{\"95\":1,\"96\":1,\"97\":1,\"605\":1,\"606\":1,\"607\":1,\"1120\":1,\"1121\":1,\"1122\":1}}],[\"可对网页的开发以及生产构建性能做相应的优化提升\",{\"1\":{\"503\":1,\"1018\":1,\"1533\":1}}],[\"可参考跨插件访问和嵌套插件\",{\"1\":{\"524\":1,\"1039\":1,\"1554\":1}}],[\"可参考\",{\"1\":{\"435\":1,\"453\":1,\"950\":1,\"968\":1,\"1465\":1,\"1483\":1}}],[\"可参考获取商店插件来了解并选择安装插件的方式\",{\"1\":{\"434\":1,\"445\":1,\"451\":1,\"949\":1,\"960\":1,\"966\":1,\"1464\":1,\"1475\":1,\"1481\":1}}],[\"可用\",{\"1\":{\"222\":1,\"734\":1,\"1249\":1}}],[\"可用于获取正确的数据存储路径并写入数据\",{\"1\":{\"433\":1,\"948\":1,\"1463\":1}}],[\"可用于在计划任务的回调等情形中获取当前\",{\"1\":{\"217\":1,\"729\":1,\"1244\":1}}],[\"可用于结束用户会话\",{\"1\":{\"207\":1,\"719\":1,\"1234\":1}}],[\"可用于用户重新输入\",{\"1\":{\"206\":1,\"718\":1,\"1233\":1}}],[\"可用于用户输入新信息\",{\"1\":{\"205\":1,\"717\":1,\"1232\":1}}],[\"可在\",{\"1\":{\"209\":1,\"721\":1,\"1236\":1}}],[\"可由插件编写者自由扩展定义\",{\"1\":{\"1847\":1,\"2216\":1,\"2585\":1}}],[\"可由\",{\"1\":{\"199\":1,\"202\":1,\"711\":1,\"714\":1,\"1226\":1,\"1229\":1}}],[\"可能会知道\",{\"1\":{\"2687\":1,\"2702\":1,\"2717\":1}}],[\"可能会出现各种各样的错误\",{\"1\":{\"444\":1,\"959\":1,\"1474\":1}}],[\"可能会出现意料之外的错误出现\",{\"1\":{\"116\":1,\"626\":1,\"1141\":1}}],[\"可能造成文档与代码不匹配\",{\"1\":{\"485\":1,\"1000\":1,\"1515\":1}}],[\"可能是由于代码逻辑错误\",{\"1\":{\"444\":1,\"959\":1,\"1474\":1}}],[\"可能为\",{\"1\":{\"390\":1,\"905\":1,\"1420\":1}}],[\"可能还未加载\",{\"1\":{\"111\":1,\"621\":1,\"1136\":1}}],[\"可不填写\",{\"1\":{\"110\":1,\"620\":1,\"1135\":1}}],[\"可以回退\",{\"1\":{\"2692\":1,\"2707\":1,\"2722\":1}}],[\"可以方便地帮助你获取数据库会话和查询数据\",{\"1\":{\"2689\":1,\"2704\":1,\"2719\":1}}],[\"可以方便地进行错误跟踪\",{\"1\":{\"444\":1,\"959\":1,\"1474\":1}}],[\"可以正确地生成迁移脚本\",{\"1\":{\"2686\":1,\"2701\":1,\"2716\":1}}],[\"可以注意到脚本的主体部分\",{\"1\":{\"2686\":1,\"2701\":1,\"2716\":1}}],[\"可以注意到表名是\",{\"1\":{\"2685\":1,\"2700\":1,\"2715\":1}}],[\"可以注入\",{\"1\":{\"132\":1,\"133\":1,\"134\":1,\"135\":1,\"642\":1,\"643\":1,\"644\":1,\"645\":1,\"1157\":1,\"1158\":1,\"1159\":1,\"1160\":1}}],[\"可以查阅专题以及其官方文档\",{\"1\":{\"2683\":1,\"2698\":1,\"2713\":1}}],[\"可以这样配置\",{\"1\":{\"1937\":1,\"2306\":1,\"2675\":1}}],[\"可以执行此命令\",{\"1\":{\"1933\":1,\"2302\":1,\"2671\":1}}],[\"可以设置\",{\"1\":{\"1910\":1,\"2279\":1,\"2648\":1}}],[\"可以设置包括参数字典在内的默认值\",{\"1\":{\"1900\":1,\"2269\":1,\"2638\":1}}],[\"可以动态操作快捷指令\",{\"1\":{\"1909\":1,\"2278\":1,\"2647\":1}}],[\"可以类型标注\",{\"1\":{\"1902\":1,\"2271\":1,\"2640\":1}}],[\"可以特别设置传入一类\",{\"1\":{\"1901\":1,\"2270\":1,\"2639\":1}}],[\"可以传入自己的\",{\"1\":{\"1900\":1,\"2269\":1,\"2638\":1}}],[\"可以传入一组\",{\"1\":{\"1900\":1,\"2269\":1,\"2638\":1}}],[\"可以抛出\",{\"1\":{\"1590\":1,\"1971\":1,\"2340\":1}}],[\"可以进行有限制的相互调用\",{\"1\":{\"512\":1,\"1027\":1,\"1542\":1}}],[\"可以运行机器人的场景进行功能体验或测试\",{\"1\":{\"496\":1,\"1011\":1,\"1526\":1}}],[\"可以向\",{\"1\":{\"419\":2,\"934\":2,\"1449\":2}}],[\"可以帮助我们了解运行状况\",{\"1\":{\"418\":1,\"933\":1,\"1448\":1}}],[\"可以序列化\",{\"1\":{\"415\":1,\"930\":1,\"1445\":1}}],[\"可以匹配\",{\"1\":{\"361\":2,\"876\":2,\"1391\":2}}],[\"可以为\",{\"1\":{\"169\":1,\"679\":1,\"1194\":1}}],[\"可以直接调用\",{\"1\":{\"476\":1,\"991\":1,\"1506\":1}}],[\"可以直接通过事件响应器辅助函数或者自行合并其他规则使用\",{\"1\":{\"430\":1,\"945\":1,\"1460\":1}}],[\"可以直接通过源码查看\",{\"1\":{\"110\":1,\"620\":1,\"1135\":1}}],[\"可以直接注入\",{\"1\":{\"129\":1,\"130\":1,\"639\":1,\"640\":1,\"1154\":1,\"1155\":1}}],[\"可以分为两类\",{\"1\":{\"125\":1,\"635\":1,\"1150\":1}}],[\"可以参考\",{\"1\":{\"120\":1,\"121\":1,\"435\":1,\"454\":1,\"630\":1,\"631\":1,\"950\":1,\"969\":1,\"1145\":1,\"1146\":1,\"1465\":1,\"1484\":1}}],[\"可以参考开发文档\",{\"1\":{\"51\":1,\"561\":1,\"1076\":1}}],[\"可以在更多平台上运行\",{\"1\":{\"423\":1,\"938\":1,\"1453\":1}}],[\"可以在\",{\"1\":{\"200\":1,\"205\":1,\"206\":1,\"207\":1,\"712\":1,\"717\":1,\"718\":1,\"719\":1,\"1227\":1,\"1232\":1,\"1233\":1,\"1234\":1}}],[\"可以在插件的\",{\"1\":{\"114\":1,\"624\":1,\"1139\":1}}],[\"可以在不需要外部网络连接时使用\",{\"1\":{\"57\":1,\"567\":1,\"1082\":1}}],[\"可以用于获取指定类型指定个数的消息段\",{\"1\":{\"543\":1,\"1058\":1,\"1573\":1}}],[\"可以用于索引指定类型的消息段\",{\"1\":{\"543\":1,\"1058\":1,\"1573\":1}}],[\"可以用于判断消息段是否为纯文本\",{\"1\":{\"539\":1,\"1054\":1,\"1569\":1}}],[\"可以用于存储任意信息\",{\"1\":{\"110\":1,\"620\":1,\"1135\":1}}],[\"可以用于管理一系列具有相同属性的响应器\",{\"1\":{\"106\":1,\"616\":1,\"1131\":1}}],[\"可以用于管理一系列具有相同前置命令的子命令响应器\",{\"1\":{\"105\":1,\"615\":1,\"1130\":1}}],[\"可以通过with方式创建命名空间\",{\"1\":{\"1905\":1,\"2274\":1,\"2643\":1}}],[\"可以通过以下几种方式构造\",{\"1\":{\"1895\":1,\"2264\":1,\"2633\":1}}],[\"可以通过该消息类型的\",{\"1\":{\"1609\":1,\"1978\":1,\"2347\":1}}],[\"可以通过该函数或直接通过\",{\"1\":{\"1582\":1,\"1963\":1,\"2332\":1}}],[\"可以通过依赖注入\",{\"1\":{\"534\":1,\"1049\":1,\"1564\":1}}],[\"可以通过类型\",{\"1\":{\"431\":1,\"946\":1,\"1461\":1}}],[\"可以通过类型注解\",{\"1\":{\"58\":1,\"568\":1,\"1083\":1}}],[\"可以通过\",{\"1\":{\"298\":1,\"361\":1,\"365\":1,\"367\":1,\"808\":1,\"876\":1,\"880\":1,\"882\":1,\"1323\":1,\"1391\":1,\"1395\":1,\"1397\":1,\"1873\":1,\"1890\":1,\"2242\":1,\"2259\":1,\"2611\":1,\"2628\":1}}],[\"可以通过加载插件来扩展功能\",{\"1\":{\"109\":1,\"619\":1,\"1134\":1}}],[\"可以添加\",{\"1\":{\"105\":1,\"615\":1,\"1130\":1}}],[\"可以是本地插件或是通过\",{\"1\":{\"1816\":1,\"2185\":1,\"2554\":1}}],[\"可以是任何\",{\"1\":{\"1648\":1,\"2017\":1,\"2386\":1}}],[\"可以是\",{\"1\":{\"93\":2,\"603\":2,\"1118\":2}}],[\"可以自行定义新的类型\",{\"1\":{\"86\":1,\"596\":1,\"1111\":1}}],[\"可以先阅读相关协议适配器文档说明\",{\"1\":{\"52\":1,\"562\":1,\"1077\":1}}],[\"可以多次调用\",{\"1\":{\"38\":1,\"548\":1,\"1063\":1}}],[\"可以使用父类型作为类型标注\",{\"1\":{\"2696\":1,\"2711\":1,\"2726\":1}}],[\"可以使用完整插件模块名或者插件标识符加载\",{\"1\":{\"1831\":1,\"2200\":1,\"2569\":1}}],[\"可以使用依赖注入\",{\"1\":{\"139\":1,\"140\":1,\"649\":1,\"650\":1,\"1164\":1,\"1165\":1}}],[\"可以使用\",{\"1\":{\"10\":1,\"22\":1,\"34\":1,\"90\":1,\"99\":1,\"111\":1,\"435\":1,\"520\":1,\"521\":1,\"538\":1,\"544\":1,\"600\":1,\"609\":1,\"621\":1,\"950\":1,\"1035\":1,\"1036\":1,\"1053\":1,\"1059\":1,\"1115\":1,\"1124\":1,\"1136\":1,\"1465\":1,\"1550\":1,\"1551\":1,\"1568\":1,\"1574\":1}}],[\"可以让事件的处理过程更加的简洁\",{\"1\":{\"6\":1,\"18\":1,\"30\":1}}],[\"可扩展的\",{\"1\":{\"0\":1,\"12\":1,\"24\":1,\"491\":1,\"1006\":1,\"1521\":1}}],[\"的非\",{\"1\":{\"2697\":1,\"2712\":1,\"2727\":1}}],[\"的城市有\",{\"1\":{\"2688\":2,\"2703\":2,\"2718\":2}}],[\"的天气\",{\"1\":{\"2687\":2,\"2702\":2,\"2717\":2}}],[\"的天气是什么\",{\"1\":{\"2685\":1,\"2700\":1,\"2715\":1}}],[\"的天气是\",{\"1\":{\"423\":1,\"938\":1,\"1453\":1,\"2687\":2,\"2702\":2,\"2717\":2}}],[\"的启动检查\",{\"1\":{\"2686\":1,\"2701\":1,\"2716\":1}}],[\"的启动流程\",{\"1\":{\"506\":1,\"1021\":1,\"1536\":1}}],[\"的知识\",{\"1\":{\"2683\":1,\"2698\":1,\"2713\":1}}],[\"的匹配行为\",{\"1\":{\"1919\":1,\"2288\":1,\"2657\":1}}],[\"的匹配结果\",{\"1\":{\"1909\":1,\"2278\":1,\"2647\":1}}],[\"的配置项\",{\"1\":{\"1917\":1,\"1920\":1,\"2286\":1,\"2289\":1,\"2655\":1,\"2658\":1}}],[\"的配置项外\",{\"1\":{\"165\":1,\"675\":1,\"1190\":1}}],[\"的值分两种\",{\"1\":{\"1914\":1,\"2283\":1,\"2652\":1}}],[\"的值为特殊值\",{\"1\":{\"1899\":1,\"2268\":1,\"2637\":1}}],[\"的快捷指令\",{\"1\":{\"1908\":1,\"1909\":2,\"2277\":1,\"2278\":2,\"2646\":1,\"2647\":2}}],[\"的第一个参数为快捷指令名称\",{\"1\":{\"1907\":1,\"2276\":1,\"2645\":1}}],[\"的元数据相当于其配置\",{\"1\":{\"1903\":1,\"2272\":1,\"2641\":1}}],[\"的解析参数字典\",{\"1\":{\"1902\":1,\"2271\":1,\"2640\":1}}],[\"的解析值\",{\"1\":{\"1902\":1,\"2271\":1,\"2640\":1}}],[\"的解析结果\",{\"1\":{\"1902\":2,\"2271\":2,\"2640\":2}}],[\"的唯一区别在于\",{\"1\":{\"1900\":1,\"2269\":1,\"2638\":1}}],[\"的名字或别名没有要求必须在前面写上\",{\"1\":{\"1900\":1,\"2269\":1,\"2638\":1}}],[\"的名称\",{\"1\":{\"417\":1,\"932\":1,\"1447\":1}}],[\"的字符串\",{\"1\":{\"1897\":4,\"2266\":4,\"2635\":4}}],[\"的字典将事件响应器存储于内存中\",{\"1\":{\"81\":1,\"591\":1,\"1106\":1}}],[\"的var表面上看需要传入一个\",{\"1\":{\"1897\":1,\"2266\":1,\"2635\":1}}],[\"的作用是用以标记解析出来的参数并存放于\",{\"1\":{\"1896\":1,\"2265\":1,\"2634\":1}}],[\"的组合\",{\"1\":{\"1894\":1,\"2263\":1,\"2632\":1}}],[\"的实例\",{\"1\":{\"1893\":1,\"1897\":1,\"2262\":1,\"2266\":1,\"2631\":1,\"2635\":1}}],[\"的消息段切片\",{\"1\":{\"1612\":1,\"1981\":1,\"2350\":1}}],[\"的消息段第\",{\"1\":{\"1612\":1,\"1981\":1,\"2350\":1}}],[\"的消息段\",{\"1\":{\"1612\":1,\"1981\":1,\"2350\":1}}],[\"的子类\",{\"1\":{\"534\":1,\"1049\":1,\"1564\":1}}],[\"的本质是由若干消息段所组成的序列\",{\"1\":{\"532\":1,\"1047\":1,\"1562\":1}}],[\"的主要作用是用于表达\",{\"1\":{\"532\":1,\"1047\":1,\"1562\":1}}],[\"的事件响应器了\",{\"1\":{\"528\":1,\"1043\":1,\"1558\":1}}],[\"的封装\",{\"1\":{\"522\":1,\"1037\":1,\"1552\":1}}],[\"的文件夹\",{\"1\":{\"515\":1,\"1030\":1,\"1545\":1}}],[\"的文件夹即是一个常规\",{\"1\":{\"514\":1,\"1029\":1,\"1544\":1}}],[\"的文档中\",{\"1\":{\"485\":1,\"1000\":1,\"1515\":1}}],[\"的一个模块\",{\"1\":{\"512\":1,\"1027\":1,\"1542\":1}}],[\"的一些工具函数\",{\"1\":{\"397\":1,\"912\":1,\"1427\":1}}],[\"的使用\",{\"1\":{\"505\":1,\"1020\":1,\"1535\":1}}],[\"的使用方法请参考\",{\"1\":{\"100\":1,\"610\":1,\"1125\":1}}],[\"的基本原理和使用方式\",{\"1\":{\"487\":1,\"1002\":1,\"1517\":1}}],[\"的用户\",{\"1\":{\"487\":1,\"1002\":1,\"1517\":1}}],[\"的方式指定组合参数之间的分隔符\",{\"1\":{\"1909\":1,\"2278\":1,\"2647\":1}}],[\"的方式创建一个机器人项目的最小实例并启动\",{\"1\":{\"506\":1,\"1021\":1,\"1536\":1}}],[\"的方式实现插件加载与跟踪管理\",{\"1\":{\"116\":1,\"626\":1,\"1141\":1}}],[\"的方法\",{\"1\":{\"478\":2,\"993\":2,\"1508\":2,\"1591\":1,\"1592\":1,\"1972\":1,\"1973\":1,\"2341\":1,\"2342\":1}}],[\"的信息也可以在此定义和存储\",{\"1\":{\"477\":1,\"992\":1,\"1507\":1}}],[\"的上层方法\",{\"1\":{\"477\":1,\"992\":1,\"1507\":1}}],[\"的区别\",{\"1\":{\"476\":1,\"991\":1,\"1506\":1}}],[\"的默认配置\",{\"1\":{\"1904\":1,\"2273\":1,\"2642\":1}}],[\"的默认\",{\"1\":{\"468\":1,\"983\":1,\"1498\":1}}],[\"的默认格式和过滤器\",{\"1\":{\"420\":1,\"935\":1,\"1450\":1}}],[\"的相关配置\",{\"1\":{\"458\":1,\"973\":1,\"1488\":1}}],[\"的更多使用方法\",{\"1\":{\"454\":1,\"969\":1,\"1484\":1}}],[\"的更多功能和原理\",{\"1\":{\"432\":1,\"947\":1,\"1462\":1}}],[\"的定时任务并不是由事件响应器所触发的事件\",{\"1\":{\"454\":1,\"969\":1,\"1484\":1}}],[\"的大多数功能用法\",{\"1\":{\"432\":1,\"947\":1,\"1462\":1}}],[\"的密码\",{\"1\":{\"431\":1,\"946\":1,\"1461\":1}}],[\"的抽象方法\",{\"1\":{\"423\":1,\"938\":1,\"1453\":1}}],[\"的执行函数\",{\"1\":{\"407\":1,\"922\":1,\"1437\":1}}],[\"的装饰器\",{\"1\":{\"406\":1,\"921\":1,\"1436\":1}}],[\"的集合\",{\"1\":{\"328\":1,\"346\":1,\"427\":1,\"843\":1,\"861\":1,\"942\":1,\"1358\":1,\"1376\":1,\"1457\":1}}],[\"的类型定义\",{\"1\":{\"328\":1,\"346\":1,\"843\":1,\"861\":1,\"1358\":1,\"1376\":1}}],[\"的类型注解和异步优先特性\",{\"1\":{\"0\":1,\"12\":1,\"24\":1}}],[\"的异常注入参数\",{\"1\":{\"306\":1,\"817\":1,\"1332\":1}}],[\"的异步版本\",{\"1\":{\"70\":1,\"580\":1,\"1095\":1}}],[\"的参数字典中\",{\"1\":{\"1902\":1,\"2271\":1,\"2640\":1}}],[\"的参数\",{\"1\":{\"252\":1,\"253\":1,\"254\":1,\"255\":1,\"256\":1,\"257\":1,\"299\":1,\"300\":1,\"301\":1,\"305\":1,\"306\":1,\"473\":2,\"765\":1,\"766\":1,\"767\":1,\"768\":1,\"769\":1,\"770\":1,\"812\":1,\"816\":1,\"817\":1,\"818\":1,\"819\":1,\"988\":2,\"1280\":1,\"1281\":1,\"1282\":1,\"1283\":1,\"1284\":1,\"1285\":1,\"1327\":1,\"1331\":1,\"1332\":1,\"1333\":1,\"1334\":1,\"1503\":2,\"1898\":1,\"1903\":1,\"2267\":1,\"2272\":1,\"2636\":1,\"2641\":1}}],[\"的参数类型不匹配\",{\"1\":{\"201\":1,\"713\":1,\"1228\":1}}],[\"的日志\",{\"1\":{\"417\":1,\"419\":1,\"932\":1,\"934\":1,\"1447\":1,\"1449\":1}}],[\"的日志转发到\",{\"1\":{\"228\":1,\"740\":1,\"1255\":1}}],[\"的日志记录\",{\"1\":{\"226\":1,\"738\":1,\"1253\":1}}],[\"的命名参数\",{\"1\":{\"225\":1,\"737\":1,\"1252\":1}}],[\"的位置参数\",{\"1\":{\"225\":1,\"737\":1,\"1252\":1}}],[\"的简写\",{\"1\":{\"222\":1,\"734\":1,\"1249\":1}}],[\"的运行\",{\"1\":{\"200\":1,\"712\":1,\"1227\":1}}],[\"的缩写\",{\"1\":{\"166\":1,\"676\":1,\"1191\":1,\"1846\":1,\"2215\":1,\"2584\":1}}],[\"的优先级读取环境信息\",{\"1\":{\"163\":1,\"673\":1,\"1188\":1}}],[\"的连接时运行\",{\"1\":{\"130\":1,\"640\":1,\"1155\":1}}],[\"的详细信息\",{\"1\":{\"120\":1,\"121\":1,\"630\":1,\"631\":1,\"1145\":1,\"1146\":1}}],[\"的路由\",{\"1\":{\"120\":1,\"121\":1,\"630\":1,\"631\":1,\"1145\":1,\"1146\":1}}],[\"的兼容层建立路由规则\",{\"1\":{\"118\":1,\"628\":1,\"1143\":1}}],[\"的插件\",{\"1\":{\"515\":1,\"1030\":1,\"1545\":1}}],[\"的插件系统为用户实现应用提供了极高的便捷性\",{\"1\":{\"501\":1,\"1016\":1,\"1531\":1}}],[\"的插件系统来获取相关信息\",{\"1\":{\"109\":1,\"619\":1,\"1134\":1}}],[\"的插件信息中看到这些子插件的信息\",{\"1\":{\"114\":1,\"624\":1,\"1139\":1}}],[\"的特性\",{\"1\":{\"108\":1,\"618\":1,\"1133\":1}}],[\"的规则\",{\"1\":{\"95\":1,\"96\":1,\"97\":1,\"98\":1,\"605\":1,\"606\":1,\"607\":1,\"608\":1,\"1120\":1,\"1121\":1,\"1122\":1,\"1123\":1}}],[\"的其他参数\",{\"1\":{\"69\":1,\"77\":1,\"579\":1,\"587\":1,\"1094\":1,\"1102\":1,\"1687\":1,\"1778\":1,\"2056\":1,\"2147\":1,\"2425\":1,\"2516\":1}}],[\"的库因此可能无法正常工作\",{\"1\":{\"64\":1,\"574\":1,\"1089\":1}}],[\"的\",{\"1\":{\"40\":1,\"64\":1,\"72\":1,\"222\":3,\"223\":1,\"252\":1,\"253\":1,\"254\":1,\"255\":1,\"256\":1,\"257\":1,\"340\":1,\"341\":1,\"342\":1,\"343\":1,\"367\":2,\"372\":1,\"373\":1,\"415\":1,\"457\":1,\"474\":1,\"475\":1,\"476\":2,\"480\":1,\"484\":1,\"504\":1,\"517\":1,\"520\":1,\"521\":1,\"538\":1,\"550\":1,\"574\":1,\"582\":1,\"734\":3,\"735\":1,\"765\":1,\"766\":1,\"767\":1,\"768\":1,\"769\":1,\"770\":1,\"855\":1,\"856\":1,\"857\":1,\"858\":1,\"882\":2,\"887\":1,\"888\":1,\"930\":1,\"972\":1,\"989\":1,\"990\":1,\"991\":2,\"995\":1,\"999\":1,\"1019\":1,\"1032\":1,\"1035\":1,\"1036\":1,\"1053\":1,\"1065\":1,\"1089\":1,\"1097\":1,\"1249\":3,\"1250\":1,\"1280\":1,\"1281\":1,\"1282\":1,\"1283\":1,\"1284\":1,\"1285\":1,\"1370\":1,\"1371\":1,\"1372\":1,\"1373\":1,\"1397\":2,\"1402\":1,\"1403\":1,\"1445\":1,\"1487\":1,\"1504\":1,\"1505\":1,\"1506\":2,\"1510\":1,\"1514\":1,\"1534\":1,\"1547\":1,\"1550\":1,\"1551\":1,\"1568\":1,\"1910\":1,\"1913\":1,\"2279\":1,\"2282\":1,\"2648\":1,\"2651\":1}}],[\"的核心\",{\"1\":{\"5\":1,\"17\":1,\"29\":1,\"1893\":1,\"2262\":1,\"2631\":1}}],[\"使框架对初学者更加友好\",{\"1\":{\"505\":1,\"1020\":1,\"1535\":1}}],[\"使其更加通俗易懂\",{\"1\":{\"497\":1,\"1012\":1,\"1527\":1}}],[\"使其变为子类型\",{\"1\":{\"423\":1,\"938\":1,\"1453\":1}}],[\"使开发者能够调用平台提供的\",{\"1\":{\"476\":1,\"991\":1,\"1506\":1}}],[\"使它在每次事件响应器运行后执行\",{\"1\":{\"291\":1,\"803\":1,\"1318\":1}}],[\"使它在每次事件响应器运行前执行\",{\"1\":{\"290\":1,\"802\":1,\"1317\":1}}],[\"使它在每次接收到事件并分发给各响应器之后执行\",{\"1\":{\"289\":1,\"801\":1,\"1316\":1}}],[\"使它在每次接收到事件并分发给各响应器之前执行\",{\"1\":{\"288\":1,\"800\":1,\"1315\":1}}],[\"使得解析命令时允许名称与后随参数之间没有分隔\",{\"1\":{\"1910\":1,\"2279\":1,\"2648\":1}}],[\"使得用户能够快速搭建聊天机器人\",{\"1\":{\"505\":1,\"1020\":1,\"1535\":1}}],[\"使得用户初次接触\",{\"1\":{\"4\":1,\"16\":1,\"28\":1}}],[\"使得插件更加清晰\",{\"1\":{\"112\":1,\"622\":1,\"1137\":1}}],[\"使用上有一定难度\",{\"1\":{\"1926\":1,\"2295\":1,\"2664\":1}}],[\"使用基类构建模板与使用\",{\"1\":{\"545\":1,\"1060\":1,\"1575\":1}}],[\"使用消息模板\",{\"0\":{\"545\":1,\"1060\":1,\"1575\":1}}],[\"使用消息序列\",{\"0\":{\"534\":1,\"1049\":1,\"1564\":1}}],[\"使用配置好环境的\",{\"1\":{\"510\":1,\"1025\":1,\"1540\":1}}],[\"使用脚手架\",{\"1\":{\"497\":1,\"1012\":1,\"1527\":1}}],[\"使用其它\",{\"1\":{\"484\":1,\"999\":1,\"1514\":1}}],[\"使用当前工作目录作为数据存储目录\",{\"1\":{\"437\":1,\"952\":1,\"1467\":1}}],[\"使用时无需关心操作系统的差异\",{\"1\":{\"435\":1,\"950\":1,\"1465\":1}}],[\"使用插件\",{\"0\":{\"435\":1,\"446\":1,\"452\":1,\"950\":1,\"961\":1,\"967\":1,\"1465\":1,\"1476\":1,\"1482\":1}}],[\"使用的\",{\"1\":{\"1692\":1,\"1768\":1,\"1783\":1,\"2061\":1,\"2137\":1,\"2152\":1,\"2430\":1,\"2506\":1,\"2521\":1}}],[\"使用的键名\",{\"1\":{\"431\":1,\"946\":1,\"1461\":1}}],[\"使用的事件循环会被\",{\"1\":{\"64\":1,\"574\":1,\"1089\":1}}],[\"使用优秀的\",{\"1\":{\"418\":1,\"933\":1,\"1448\":1}}],[\"使用默认\",{\"1\":{\"361\":1,\"365\":1,\"876\":1,\"880\":1,\"1391\":1,\"1395\":1}}],[\"使用嵌套插件\",{\"1\":{\"113\":1,\"515\":1,\"623\":1,\"1030\":1,\"1138\":1,\"1545\":1}}],[\"使用方法\",{\"1\":{\"109\":1,\"619\":1,\"1134\":1}}],[\"使用方法请阅读本文档指南以及\",{\"1\":{\"4\":1,\"16\":1,\"28\":1}}],[\"使用\",{\"0\":{\"122\":1,\"466\":1,\"632\":1,\"981\":1,\"1147\":1,\"1496\":1},\"1\":{\"64\":1,\"72\":1,\"162\":1,\"226\":1,\"372\":1,\"428\":1,\"453\":1,\"508\":1,\"525\":1,\"545\":1,\"574\":1,\"582\":1,\"672\":1,\"738\":1,\"887\":1,\"943\":1,\"968\":1,\"1023\":1,\"1040\":1,\"1060\":1,\"1089\":1,\"1097\":1,\"1187\":1,\"1253\":1,\"1402\":1,\"1458\":1,\"1483\":1,\"1538\":1,\"1555\":1,\"1575\":1,\"1576\":1,\"1695\":1,\"1786\":1,\"1850\":1,\"1900\":1,\"1945\":1,\"2064\":1,\"2155\":1,\"2219\":1,\"2269\":1,\"2314\":1,\"2433\":1,\"2524\":1,\"2588\":1,\"2638\":1}}],[\"使用适配器\",{\"0\":{\"36\":1,\"546\":1,\"1061\":1},\"1\":{\"497\":1,\"1012\":1,\"1527\":1}}],[\"nullable=false\",{\"1\":{\"2686\":6,\"2701\":6,\"2716\":6}}],[\"null\",{\"1\":{\"2685\":2,\"2686\":2,\"2700\":2,\"2701\":2,\"2715\":2,\"2716\":2}}],[\"number\",{\"1\":{\"1894\":1,\"1897\":2,\"2263\":1,\"2266\":2,\"2632\":1,\"2635\":2}}],[\"np\",{\"1\":{\"1906\":4,\"2275\":4,\"2644\":4}}],[\"np1\",{\"1\":{\"1905\":4,\"2274\":4,\"2643\":4}}],[\"ns\",{\"1\":{\"1905\":2,\"2274\":2,\"2643\":2}}],[\"nepattern\",{\"1\":{\"1894\":2,\"1897\":5,\"2263\":2,\"2266\":5,\"2632\":2,\"2635\":5}}],[\"net\",{\"1\":{\"493\":1,\"1008\":1,\"1523\":1}}],[\"networkerror\",{\"1\":{\"195\":1,\"707\":1,\"1222\":1}}],[\"need\",{\"1\":{\"472\":1,\"473\":1,\"987\":1,\"988\":1,\"1502\":1,\"1503\":1}}],[\"new\",{\"1\":{\"459\":1,\"527\":1,\"974\":1,\"1042\":1,\"1489\":1,\"1557\":1}}],[\"never\",{\"1\":{\"200\":1,\"712\":1,\"1227\":1}}],[\"nested\",{\"1\":{\"163\":1,\"165\":1,\"673\":1,\"675\":1,\"1188\":1,\"1190\":1}}],[\"next\",{\"1\":{\"118\":1,\"181\":1,\"628\":1,\"691\":1,\"1143\":1,\"1206\":1}}],[\"n\",{\"1\":{\"113\":1,\"515\":2,\"623\":1,\"1030\":2,\"1138\":1,\"1545\":2}}],[\"node\",{\"1\":{\"492\":1,\"493\":2,\"1007\":1,\"1008\":2,\"1522\":1,\"1523\":2}}],[\"no\",{\"1\":{\"478\":3,\"993\":3,\"1508\":3}}],[\"noreturn\",{\"1\":{\"253\":1,\"254\":1,\"255\":1,\"256\":1,\"257\":1,\"258\":1,\"766\":1,\"767\":1,\"768\":1,\"769\":1,\"770\":1,\"771\":1,\"1281\":1,\"1282\":1,\"1283\":1,\"1284\":1,\"1285\":1,\"1286\":1}}],[\"nologexception\",{\"1\":{\"195\":1,\"707\":1,\"1222\":1,\"1590\":2,\"1971\":2,\"2340\":2}}],[\"notrequired\",{\"1\":{\"1907\":6,\"2276\":6,\"2645\":6}}],[\"not\",{\"1\":{\"132\":1,\"134\":1,\"137\":1,\"147\":1,\"427\":1,\"439\":2,\"472\":3,\"473\":1,\"642\":1,\"644\":1,\"647\":1,\"657\":1,\"942\":1,\"954\":2,\"987\":3,\"988\":1,\"1157\":1,\"1159\":1,\"1162\":1,\"1172\":1,\"1457\":1,\"1469\":2,\"1502\":3,\"1503\":1,\"1911\":1,\"2280\":1,\"2649\":1,\"2685\":2,\"2686\":2,\"2687\":3,\"2700\":2,\"2701\":2,\"2702\":3,\"2715\":2,\"2716\":2,\"2717\":3,\"2752\":1}}],[\"notimplementederror\",{\"1\":{\"64\":1,\"574\":1,\"1089\":1}}],[\"notice\",{\"1\":{\"42\":1,\"86\":1,\"93\":1,\"139\":3,\"203\":1,\"216\":2,\"341\":2,\"478\":1,\"552\":1,\"596\":1,\"603\":1,\"649\":3,\"715\":1,\"728\":2,\"856\":2,\"993\":1,\"1067\":1,\"1111\":1,\"1118\":1,\"1164\":3,\"1230\":1,\"1243\":2,\"1371\":2,\"1508\":1,\"1809\":2,\"2178\":2,\"2547\":2}}],[\"noneflow\",{\"0\":{\"504\":1,\"1019\":1,\"1534\":1},\"1\":{\"504\":2,\"1019\":2,\"1534\":2}}],[\"nonepress\",{\"0\":{\"503\":1,\"1018\":1,\"1533\":1},\"1\":{\"503\":3,\"1018\":3,\"1533\":3}}],[\"noneblockly\",{\"0\":{\"505\":1,\"1020\":1,\"1535\":1},\"1\":{\"505\":2,\"1020\":2,\"1535\":2}}],[\"nonebug\",{\"0\":{\"487\":1,\"1002\":1,\"1517\":1},\"1\":{\"487\":2,\"1002\":2,\"1517\":2,\"1940\":1,\"1941\":2,\"1942\":1,\"2309\":1,\"2310\":2,\"2311\":1,\"2678\":1,\"2679\":2,\"2680\":1}}],[\"nonebotconfig\",{\"1\":{\"1688\":1,\"1779\":1,\"2057\":1,\"2148\":1,\"2426\":1,\"2517\":1}}],[\"nonebotexception\",{\"1\":{\"195\":1,\"707\":1,\"1222\":1}}],[\"nonebot\",{\"0\":{\"141\":1,\"162\":1,\"176\":1,\"195\":1,\"215\":1,\"226\":1,\"232\":1,\"287\":1,\"294\":1,\"328\":1,\"346\":1,\"372\":1,\"397\":1,\"483\":1,\"484\":1,\"485\":1,\"486\":1,\"487\":1,\"488\":1,\"489\":1,\"499\":1,\"500\":1,\"501\":1,\"651\":1,\"672\":1,\"686\":1,\"707\":1,\"727\":1,\"738\":1,\"744\":1,\"799\":1,\"806\":1,\"843\":1,\"861\":1,\"887\":1,\"912\":1,\"998\":1,\"999\":1,\"1000\":1,\"1001\":1,\"1002\":1,\"1003\":1,\"1004\":1,\"1014\":1,\"1015\":1,\"1016\":1,\"1166\":1,\"1187\":1,\"1201\":1,\"1222\":1,\"1242\":1,\"1253\":1,\"1259\":1,\"1314\":1,\"1321\":1,\"1358\":1,\"1376\":1,\"1402\":1,\"1427\":1,\"1513\":1,\"1514\":1,\"1515\":1,\"1516\":1,\"1517\":1,\"1518\":1,\"1519\":1,\"1529\":1,\"1530\":1,\"1531\":1,\"1576\":1,\"1646\":1,\"1654\":1,\"1658\":1,\"1676\":1,\"1704\":1,\"1713\":1,\"1765\":1,\"1771\":1,\"1795\":1,\"1808\":1,\"1815\":1,\"1825\":1,\"1838\":1,\"1858\":1,\"1945\":1,\"2015\":1,\"2023\":1,\"2027\":1,\"2045\":1,\"2073\":1,\"2082\":1,\"2134\":1,\"2140\":1,\"2164\":1,\"2177\":1,\"2184\":1,\"2194\":1,\"2207\":1,\"2227\":1,\"2314\":1,\"2384\":1,\"2392\":1,\"2396\":1,\"2414\":1,\"2442\":1,\"2451\":1,\"2503\":1,\"2509\":1,\"2533\":1,\"2546\":1,\"2553\":1,\"2563\":1,\"2576\":1,\"2596\":1},\"1\":{\"0\":4,\"2\":1,\"3\":1,\"4\":2,\"5\":1,\"6\":1,\"7\":1,\"12\":4,\"14\":1,\"15\":1,\"16\":2,\"17\":1,\"18\":1,\"19\":1,\"24\":4,\"26\":1,\"27\":1,\"28\":2,\"29\":1,\"30\":1,\"31\":1,\"37\":2,\"38\":3,\"39\":6,\"40\":7,\"54\":2,\"55\":2,\"57\":1,\"64\":3,\"72\":3,\"81\":3,\"82\":1,\"83\":1,\"86\":1,\"90\":1,\"93\":2,\"95\":2,\"96\":2,\"97\":2,\"98\":2,\"99\":2,\"100\":3,\"101\":2,\"102\":1,\"103\":2,\"104\":1,\"105\":2,\"106\":2,\"108\":2,\"109\":2,\"110\":4,\"111\":9,\"112\":2,\"114\":3,\"115\":2,\"116\":5,\"117\":3,\"118\":4,\"119\":1,\"120\":2,\"121\":2,\"123\":4,\"124\":2,\"125\":1,\"126\":1,\"127\":2,\"128\":2,\"129\":2,\"130\":2,\"131\":1,\"132\":5,\"133\":2,\"134\":5,\"135\":2,\"136\":2,\"137\":2,\"138\":2,\"140\":2,\"162\":2,\"164\":1,\"165\":2,\"166\":2,\"167\":1,\"168\":1,\"169\":1,\"176\":1,\"195\":2,\"196\":1,\"199\":1,\"200\":1,\"202\":1,\"203\":1,\"205\":1,\"206\":1,\"207\":1,\"209\":1,\"215\":1,\"217\":2,\"218\":3,\"219\":2,\"220\":2,\"221\":2,\"222\":5,\"223\":3,\"224\":4,\"225\":2,\"226\":2,\"227\":2,\"250\":1,\"251\":1,\"287\":1,\"365\":1,\"372\":1,\"397\":1,\"418\":1,\"419\":2,\"420\":8,\"421\":2,\"423\":3,\"424\":4,\"425\":1,\"426\":1,\"427\":2,\"428\":2,\"430\":1,\"431\":7,\"432\":2,\"433\":2,\"434\":2,\"435\":4,\"444\":2,\"445\":2,\"449\":1,\"450\":2,\"451\":2,\"452\":2,\"453\":4,\"454\":3,\"457\":1,\"459\":2,\"464\":1,\"465\":5,\"467\":1,\"468\":3,\"470\":4,\"471\":1,\"472\":4,\"473\":2,\"474\":2,\"475\":1,\"476\":2,\"477\":3,\"478\":5,\"479\":3,\"480\":4,\"481\":1,\"482\":2,\"484\":3,\"485\":1,\"487\":4,\"488\":4,\"489\":4,\"494\":2,\"495\":2,\"496\":2,\"497\":3,\"498\":2,\"499\":6,\"500\":6,\"501\":4,\"502\":2,\"503\":2,\"504\":4,\"505\":10,\"506\":1,\"507\":1,\"508\":3,\"509\":9,\"512\":3,\"515\":4,\"516\":4,\"517\":2,\"518\":1,\"519\":1,\"520\":1,\"521\":3,\"522\":2,\"523\":1,\"525\":6,\"526\":1,\"527\":5,\"528\":1,\"529\":2,\"530\":2,\"532\":1,\"533\":1,\"534\":1,\"536\":1,\"538\":1,\"539\":2,\"543\":1,\"545\":6,\"547\":2,\"548\":3,\"549\":6,\"550\":7,\"564\":2,\"565\":2,\"567\":1,\"574\":3,\"582\":3,\"591\":3,\"592\":1,\"593\":1,\"596\":1,\"600\":1,\"603\":2,\"605\":2,\"606\":2,\"607\":2,\"608\":2,\"609\":2,\"610\":3,\"611\":2,\"612\":1,\"613\":2,\"614\":1,\"615\":2,\"616\":2,\"618\":2,\"619\":2,\"620\":4,\"621\":9,\"622\":2,\"624\":3,\"625\":2,\"626\":5,\"627\":3,\"628\":4,\"629\":1,\"630\":2,\"631\":2,\"633\":4,\"634\":2,\"635\":1,\"636\":1,\"637\":2,\"638\":2,\"639\":2,\"640\":2,\"641\":1,\"642\":5,\"643\":2,\"644\":5,\"645\":2,\"646\":2,\"647\":2,\"648\":2,\"650\":2,\"672\":2,\"674\":1,\"675\":2,\"676\":2,\"677\":1,\"678\":1,\"679\":1,\"686\":1,\"707\":2,\"708\":1,\"711\":1,\"712\":1,\"714\":1,\"715\":1,\"717\":1,\"718\":1,\"719\":1,\"721\":1,\"727\":1,\"729\":2,\"730\":3,\"731\":2,\"732\":2,\"733\":2,\"734\":5,\"735\":3,\"736\":4,\"737\":2,\"738\":2,\"739\":2,\"763\":1,\"764\":1,\"799\":1,\"880\":1,\"887\":1,\"912\":1,\"933\":1,\"934\":2,\"935\":8,\"936\":2,\"938\":3,\"939\":4,\"940\":1,\"941\":1,\"942\":2,\"943\":2,\"945\":1,\"946\":7,\"947\":2,\"948\":2,\"949\":2,\"950\":4,\"959\":2,\"960\":2,\"964\":1,\"965\":2,\"966\":2,\"967\":2,\"968\":4,\"969\":3,\"972\":1,\"974\":2,\"979\":1,\"980\":5,\"982\":1,\"983\":3,\"985\":4,\"986\":1,\"987\":4,\"988\":2,\"989\":2,\"990\":1,\"991\":2,\"992\":3,\"993\":5,\"994\":3,\"995\":4,\"996\":1,\"997\":2,\"999\":3,\"1000\":1,\"1002\":4,\"1003\":4,\"1004\":4,\"1009\":2,\"1010\":2,\"1011\":2,\"1012\":3,\"1013\":2,\"1014\":6,\"1015\":6,\"1016\":4,\"1017\":2,\"1018\":2,\"1019\":4,\"1020\":10,\"1021\":1,\"1022\":1,\"1023\":3,\"1024\":9,\"1027\":3,\"1030\":4,\"1031\":4,\"1032\":2,\"1033\":1,\"1034\":1,\"1035\":1,\"1036\":3,\"1037\":2,\"1038\":1,\"1040\":6,\"1041\":1,\"1042\":5,\"1043\":1,\"1044\":2,\"1045\":2,\"1047\":1,\"1048\":1,\"1049\":1,\"1051\":1,\"1053\":1,\"1054\":2,\"1058\":1,\"1060\":6,\"1062\":2,\"1063\":3,\"1064\":6,\"1065\":7,\"1079\":2,\"1080\":2,\"1082\":1,\"1089\":3,\"1097\":3,\"1106\":3,\"1107\":1,\"1108\":1,\"1111\":1,\"1115\":1,\"1118\":2,\"1120\":2,\"1121\":2,\"1122\":2,\"1123\":2,\"1124\":2,\"1125\":3,\"1126\":2,\"1127\":1,\"1128\":2,\"1129\":1,\"1130\":2,\"1131\":2,\"1133\":2,\"1134\":2,\"1135\":4,\"1136\":9,\"1137\":2,\"1139\":3,\"1140\":2,\"1141\":5,\"1142\":3,\"1143\":4,\"1144\":1,\"1145\":2,\"1146\":2,\"1148\":4,\"1149\":2,\"1150\":1,\"1151\":1,\"1152\":2,\"1153\":2,\"1154\":2,\"1155\":2,\"1156\":1,\"1157\":5,\"1158\":2,\"1159\":5,\"1160\":2,\"1161\":2,\"1162\":2,\"1163\":2,\"1165\":2,\"1187\":2,\"1189\":1,\"1190\":2,\"1191\":2,\"1192\":1,\"1193\":1,\"1194\":1,\"1201\":1,\"1222\":2,\"1223\":1,\"1226\":1,\"1227\":1,\"1229\":1,\"1230\":1,\"1232\":1,\"1233\":1,\"1234\":1,\"1236\":1,\"1242\":1,\"1244\":2,\"1245\":3,\"1246\":2,\"1247\":2,\"1248\":2,\"1249\":5,\"1250\":3,\"1251\":4,\"1252\":2,\"1253\":2,\"1254\":2,\"1278\":1,\"1279\":1,\"1314\":1,\"1395\":1,\"1402\":1,\"1427\":1,\"1448\":1,\"1449\":2,\"1450\":8,\"1451\":2,\"1453\":3,\"1454\":4,\"1455\":1,\"1456\":1,\"1457\":2,\"1458\":2,\"1460\":1,\"1461\":7,\"1462\":2,\"1463\":2,\"1464\":2,\"1465\":4,\"1474\":2,\"1475\":2,\"1479\":1,\"1480\":2,\"1481\":2,\"1482\":2,\"1483\":4,\"1484\":3,\"1487\":1,\"1489\":2,\"1494\":1,\"1495\":5,\"1497\":1,\"1498\":3,\"1500\":4,\"1501\":1,\"1502\":4,\"1503\":2,\"1504\":2,\"1505\":1,\"1506\":2,\"1507\":3,\"1508\":5,\"1509\":3,\"1510\":4,\"1511\":1,\"1512\":2,\"1514\":3,\"1515\":1,\"1517\":4,\"1518\":4,\"1519\":4,\"1524\":2,\"1525\":2,\"1526\":2,\"1527\":3,\"1528\":2,\"1529\":6,\"1530\":6,\"1531\":4,\"1532\":2,\"1533\":2,\"1534\":4,\"1535\":10,\"1536\":1,\"1537\":1,\"1538\":3,\"1539\":9,\"1542\":3,\"1545\":4,\"1546\":4,\"1547\":2,\"1548\":1,\"1549\":1,\"1550\":1,\"1551\":3,\"1552\":2,\"1553\":1,\"1555\":6,\"1556\":1,\"1557\":5,\"1558\":1,\"1559\":2,\"1560\":2,\"1562\":1,\"1563\":1,\"1564\":1,\"1566\":1,\"1568\":1,\"1569\":2,\"1573\":1,\"1575\":6,\"1581\":1,\"1587\":1,\"1590\":2,\"1600\":1,\"1601\":1,\"1602\":1,\"1808\":1,\"1819\":1,\"1820\":3,\"1821\":1,\"1822\":1,\"1846\":1,\"1850\":1,\"1873\":1,\"1878\":1,\"1890\":1,\"1917\":1,\"1920\":1,\"1926\":4,\"1928\":4,\"1929\":3,\"1931\":4,\"1937\":2,\"1940\":2,\"1941\":7,\"1942\":5,\"1950\":1,\"1951\":1,\"1952\":1,\"1962\":1,\"1968\":1,\"1971\":2,\"2177\":1,\"2188\":1,\"2189\":3,\"2190\":1,\"2191\":1,\"2215\":1,\"2219\":1,\"2242\":1,\"2247\":1,\"2259\":1,\"2286\":1,\"2289\":1,\"2295\":4,\"2297\":4,\"2298\":3,\"2300\":4,\"2306\":2,\"2309\":2,\"2310\":7,\"2311\":5,\"2319\":1,\"2320\":1,\"2321\":1,\"2331\":1,\"2337\":1,\"2340\":2,\"2546\":1,\"2557\":1,\"2558\":3,\"2559\":1,\"2560\":1,\"2584\":1,\"2588\":1,\"2611\":1,\"2616\":1,\"2628\":1,\"2655\":1,\"2658\":1,\"2664\":4,\"2666\":4,\"2667\":3,\"2669\":4,\"2675\":2,\"2678\":2,\"2679\":7,\"2680\":5,\"2683\":1,\"2685\":2,\"2686\":6,\"2687\":11,\"2688\":2,\"2689\":1,\"2691\":3,\"2692\":3,\"2694\":2,\"2695\":2,\"2698\":1,\"2700\":2,\"2701\":6,\"2702\":11,\"2703\":2,\"2704\":1,\"2706\":3,\"2707\":3,\"2709\":2,\"2710\":2,\"2713\":1,\"2715\":2,\"2716\":6,\"2717\":11,\"2718\":2,\"2719\":1,\"2721\":3,\"2722\":3,\"2724\":2,\"2725\":2}}],[\"nonebot2\",{\"0\":{\"495\":1,\"496\":1,\"497\":1,\"1010\":1,\"1011\":1,\"1012\":1,\"1525\":1,\"1526\":1,\"1527\":1},\"1\":{\"0\":1,\"12\":1,\"24\":1,\"438\":3,\"439\":4,\"440\":3,\"463\":1,\"495\":5,\"496\":4,\"497\":9,\"507\":3,\"953\":3,\"954\":4,\"955\":3,\"978\":1,\"1010\":5,\"1011\":4,\"1012\":9,\"1022\":3,\"1468\":3,\"1469\":4,\"1470\":3,\"1493\":1,\"1525\":5,\"1526\":4,\"1527\":9,\"1537\":3,\"1658\":1,\"1676\":1,\"1704\":1,\"1771\":1,\"1795\":1,\"1893\":4,\"2027\":1,\"2045\":1,\"2073\":1,\"2140\":1,\"2164\":1,\"2262\":4,\"2396\":1,\"2414\":1,\"2442\":1,\"2509\":1,\"2533\":1,\"2631\":4}}],[\"none\",{\"0\":{\"57\":1,\"567\":1,\"1082\":1,\"1765\":1,\"2134\":1,\"2503\":1},\"1\":{\"60\":3,\"61\":3,\"62\":3,\"65\":2,\"66\":2,\"67\":2,\"68\":2,\"73\":2,\"74\":2,\"75\":2,\"76\":2,\"91\":1,\"111\":2,\"152\":1,\"158\":3,\"163\":3,\"165\":3,\"170\":1,\"222\":1,\"224\":2,\"225\":1,\"241\":1,\"242\":10,\"243\":1,\"244\":2,\"245\":2,\"248\":1,\"249\":1,\"250\":1,\"251\":2,\"253\":1,\"254\":1,\"255\":1,\"256\":1,\"257\":1,\"259\":2,\"260\":1,\"261\":2,\"262\":2,\"263\":1,\"264\":1,\"265\":2,\"267\":2,\"268\":2,\"271\":2,\"272\":2,\"278\":2,\"281\":1,\"282\":1,\"284\":1,\"292\":3,\"293\":1,\"295\":1,\"296\":1,\"297\":1,\"299\":2,\"300\":2,\"303\":1,\"305\":2,\"306\":1,\"326\":1,\"329\":1,\"330\":1,\"331\":1,\"332\":1,\"335\":2,\"349\":2,\"360\":1,\"361\":1,\"363\":3,\"364\":1,\"365\":1,\"375\":1,\"376\":1,\"378\":1,\"379\":1,\"386\":1,\"390\":1,\"401\":2,\"406\":2,\"407\":1,\"408\":3,\"410\":2,\"413\":1,\"428\":3,\"449\":21,\"472\":5,\"473\":1,\"570\":3,\"571\":3,\"572\":3,\"575\":2,\"576\":2,\"577\":2,\"578\":2,\"583\":2,\"584\":2,\"585\":2,\"586\":2,\"601\":1,\"621\":2,\"662\":1,\"668\":3,\"673\":3,\"675\":3,\"680\":1,\"734\":1,\"736\":2,\"737\":1,\"754\":1,\"755\":10,\"756\":1,\"757\":2,\"758\":2,\"761\":1,\"762\":1,\"763\":1,\"764\":2,\"766\":1,\"767\":1,\"768\":1,\"769\":1,\"770\":1,\"772\":2,\"773\":1,\"774\":2,\"775\":2,\"776\":1,\"777\":1,\"778\":2,\"780\":2,\"781\":2,\"784\":2,\"785\":2,\"790\":2,\"793\":1,\"794\":1,\"796\":1,\"804\":3,\"805\":1,\"807\":1,\"809\":1,\"810\":1,\"811\":1,\"812\":2,\"815\":1,\"816\":2,\"817\":1,\"818\":2,\"839\":1,\"841\":1,\"844\":1,\"847\":2,\"848\":1,\"849\":1,\"850\":1,\"864\":2,\"875\":1,\"876\":1,\"878\":3,\"879\":1,\"880\":1,\"890\":1,\"891\":1,\"893\":1,\"894\":1,\"901\":1,\"905\":1,\"916\":2,\"921\":2,\"922\":1,\"923\":3,\"925\":2,\"928\":1,\"943\":3,\"964\":21,\"987\":5,\"988\":1,\"1085\":3,\"1086\":3,\"1087\":3,\"1090\":2,\"1091\":2,\"1092\":2,\"1093\":2,\"1098\":2,\"1099\":2,\"1100\":2,\"1101\":2,\"1116\":1,\"1136\":2,\"1177\":1,\"1183\":3,\"1188\":3,\"1190\":3,\"1195\":1,\"1249\":1,\"1251\":2,\"1252\":1,\"1269\":1,\"1270\":10,\"1271\":1,\"1272\":2,\"1273\":2,\"1276\":1,\"1277\":1,\"1278\":1,\"1279\":2,\"1281\":1,\"1282\":1,\"1283\":1,\"1284\":1,\"1285\":1,\"1287\":2,\"1288\":1,\"1289\":2,\"1290\":2,\"1291\":1,\"1292\":1,\"1293\":2,\"1295\":2,\"1296\":2,\"1299\":2,\"1300\":2,\"1305\":2,\"1308\":1,\"1309\":1,\"1311\":1,\"1319\":3,\"1320\":1,\"1322\":1,\"1324\":1,\"1325\":1,\"1326\":1,\"1327\":2,\"1330\":1,\"1331\":2,\"1332\":1,\"1333\":2,\"1354\":1,\"1356\":1,\"1359\":1,\"1362\":2,\"1363\":1,\"1364\":1,\"1365\":1,\"1379\":2,\"1390\":1,\"1391\":1,\"1393\":3,\"1394\":1,\"1395\":1,\"1405\":1,\"1406\":1,\"1408\":1,\"1409\":1,\"1416\":1,\"1420\":1,\"1431\":2,\"1436\":2,\"1437\":1,\"1438\":3,\"1440\":2,\"1443\":1,\"1458\":3,\"1479\":21,\"1502\":5,\"1503\":1,\"1601\":1,\"1602\":1,\"1606\":1,\"1616\":1,\"1640\":1,\"1651\":1,\"1652\":1,\"1659\":2,\"1661\":1,\"1662\":1,\"1665\":1,\"1666\":2,\"1673\":1,\"1674\":1,\"1678\":2,\"1679\":2,\"1680\":2,\"1683\":1,\"1685\":1,\"1686\":1,\"1694\":1,\"1695\":3,\"1697\":1,\"1698\":1,\"1702\":1,\"1703\":1,\"1705\":2,\"1707\":1,\"1708\":1,\"1711\":2,\"1720\":1,\"1729\":1,\"1730\":4,\"1731\":3,\"1732\":3,\"1733\":1,\"1735\":2,\"1736\":1,\"1740\":1,\"1741\":1,\"1744\":1,\"1745\":1,\"1749\":1,\"1750\":1,\"1751\":1,\"1760\":2,\"1763\":1,\"1765\":1,\"1766\":1,\"1767\":1,\"1768\":1,\"1769\":1,\"1770\":1,\"1774\":1,\"1776\":1,\"1777\":1,\"1785\":1,\"1786\":3,\"1798\":1,\"1805\":1,\"1806\":1,\"1810\":1,\"1811\":1,\"1816\":1,\"1821\":1,\"1824\":1,\"1826\":2,\"1831\":1,\"1834\":2,\"1836\":1,\"1837\":1,\"1843\":1,\"1844\":1,\"1845\":1,\"1846\":2,\"1848\":1,\"1855\":1,\"1859\":1,\"1860\":1,\"1861\":1,\"1862\":1,\"1863\":5,\"1864\":5,\"1865\":5,\"1866\":5,\"1867\":5,\"1868\":5,\"1869\":5,\"1870\":5,\"1871\":5,\"1872\":7,\"1873\":7,\"1874\":5,\"1875\":5,\"1876\":5,\"1877\":7,\"1878\":7,\"1879\":5,\"1880\":5,\"1881\":5,\"1882\":5,\"1883\":5,\"1884\":5,\"1885\":5,\"1886\":5,\"1887\":5,\"1888\":5,\"1889\":7,\"1890\":7,\"1891\":5,\"1892\":5,\"1897\":1,\"1899\":1,\"1903\":1,\"1913\":2,\"1922\":2,\"1951\":1,\"1952\":1,\"1956\":1,\"1985\":1,\"2009\":1,\"2020\":1,\"2021\":1,\"2028\":2,\"2030\":1,\"2031\":1,\"2034\":1,\"2035\":2,\"2042\":1,\"2043\":1,\"2047\":2,\"2048\":2,\"2049\":2,\"2052\":1,\"2054\":1,\"2055\":1,\"2063\":1,\"2064\":3,\"2066\":1,\"2067\":1,\"2071\":1,\"2072\":1,\"2074\":2,\"2076\":1,\"2077\":1,\"2080\":2,\"2086\":1,\"2087\":1,\"2089\":1,\"2090\":4,\"2091\":3,\"2092\":3,\"2093\":1,\"2099\":1,\"2111\":2,\"2116\":2,\"2117\":1,\"2122\":1,\"2123\":1,\"2127\":1,\"2128\":1,\"2129\":1,\"2131\":1,\"2134\":1,\"2135\":1,\"2136\":1,\"2137\":1,\"2138\":1,\"2139\":1,\"2143\":1,\"2145\":1,\"2146\":1,\"2154\":1,\"2155\":3,\"2167\":1,\"2174\":1,\"2175\":1,\"2179\":1,\"2180\":1,\"2185\":1,\"2190\":1,\"2193\":1,\"2195\":2,\"2200\":1,\"2203\":2,\"2205\":1,\"2206\":1,\"2212\":1,\"2213\":1,\"2214\":1,\"2215\":2,\"2217\":1,\"2224\":1,\"2228\":1,\"2229\":1,\"2230\":1,\"2231\":1,\"2232\":5,\"2233\":5,\"2234\":5,\"2235\":5,\"2236\":5,\"2237\":5,\"2238\":5,\"2239\":5,\"2240\":5,\"2241\":7,\"2242\":7,\"2243\":5,\"2244\":5,\"2245\":5,\"2246\":7,\"2247\":7,\"2248\":5,\"2249\":5,\"2250\":5,\"2251\":5,\"2252\":5,\"2253\":5,\"2254\":5,\"2255\":5,\"2256\":5,\"2257\":5,\"2258\":7,\"2259\":7,\"2260\":5,\"2261\":5,\"2266\":1,\"2268\":1,\"2272\":1,\"2282\":2,\"2291\":2,\"2320\":1,\"2321\":1,\"2325\":1,\"2354\":1,\"2378\":1,\"2389\":1,\"2390\":1,\"2397\":2,\"2399\":1,\"2400\":1,\"2403\":1,\"2404\":2,\"2411\":1,\"2412\":1,\"2416\":2,\"2417\":2,\"2418\":2,\"2421\":1,\"2423\":1,\"2424\":1,\"2432\":1,\"2433\":3,\"2435\":1,\"2436\":1,\"2440\":1,\"2441\":1,\"2443\":2,\"2445\":1,\"2446\":1,\"2449\":2,\"2455\":1,\"2456\":1,\"2458\":1,\"2459\":4,\"2460\":3,\"2461\":3,\"2462\":1,\"2468\":1,\"2480\":2,\"2485\":2,\"2486\":1,\"2491\":1,\"2492\":1,\"2496\":1,\"2497\":1,\"2498\":1,\"2500\":1,\"2503\":1,\"2504\":1,\"2505\":1,\"2506\":1,\"2507\":1,\"2508\":1,\"2512\":1,\"2514\":1,\"2515\":1,\"2523\":1,\"2524\":3,\"2536\":1,\"2543\":1,\"2544\":1,\"2548\":1,\"2549\":1,\"2554\":1,\"2559\":1,\"2562\":1,\"2564\":2,\"2569\":1,\"2572\":2,\"2574\":1,\"2575\":1,\"2581\":1,\"2582\":1,\"2583\":1,\"2584\":2,\"2586\":1,\"2593\":1,\"2597\":1,\"2598\":1,\"2599\":1,\"2600\":1,\"2601\":5,\"2602\":5,\"2603\":5,\"2604\":5,\"2605\":5,\"2606\":5,\"2607\":5,\"2608\":5,\"2609\":5,\"2610\":7,\"2611\":7,\"2612\":5,\"2613\":5,\"2614\":5,\"2615\":7,\"2616\":7,\"2617\":5,\"2618\":5,\"2619\":5,\"2620\":5,\"2621\":5,\"2622\":5,\"2623\":5,\"2624\":5,\"2625\":5,\"2626\":5,\"2627\":7,\"2628\":7,\"2629\":5,\"2630\":5,\"2635\":1,\"2637\":1,\"2641\":1,\"2651\":2,\"2660\":2,\"2686\":7,\"2694\":1,\"2696\":4,\"2701\":7,\"2709\":1,\"2711\":4,\"2716\":7,\"2724\":1,\"2726\":4}}],[\"namespace=config\",{\"1\":{\"1905\":1,\"2274\":1,\"2643\":1}}],[\"namespace=ns\",{\"1\":{\"1905\":1,\"2274\":1,\"2643\":1}}],[\"namespace=none\",{\"1\":{\"363\":1,\"878\":1,\"1393\":1}}],[\"namespaces\",{\"1\":{\"1905\":2,\"2274\":2,\"2643\":2}}],[\"namespace\",{\"1\":{\"363\":7,\"878\":7,\"1393\":7,\"1905\":4,\"1906\":7,\"1913\":2,\"2274\":4,\"2275\":7,\"2282\":2,\"2643\":4,\"2644\":7,\"2651\":2}}],[\"names\",{\"1\":{\"111\":3,\"216\":2,\"621\":3,\"728\":2,\"1136\":3,\"1243\":2,\"1824\":1,\"2193\":1,\"2562\":1}}],[\"name=op\",{\"1\":{\"2686\":2,\"2701\":2,\"2716\":2}}],[\"name=\",{\"1\":{\"110\":1,\"120\":1,\"121\":1,\"545\":1,\"620\":1,\"630\":1,\"631\":1,\"1060\":1,\"1135\":1,\"1145\":1,\"1146\":1,\"1575\":1,\"1913\":3,\"2282\":3,\"2651\":3}}],[\"name\",{\"1\":{\"39\":1,\"43\":2,\"111\":3,\"120\":1,\"121\":1,\"149\":1,\"152\":1,\"208\":1,\"216\":2,\"218\":4,\"224\":1,\"227\":1,\"297\":1,\"417\":1,\"420\":2,\"435\":4,\"449\":1,\"465\":4,\"468\":1,\"470\":2,\"472\":1,\"473\":3,\"477\":1,\"478\":2,\"480\":1,\"509\":1,\"545\":2,\"549\":1,\"553\":2,\"621\":3,\"630\":1,\"631\":1,\"659\":1,\"662\":1,\"720\":1,\"728\":2,\"730\":4,\"736\":1,\"739\":1,\"815\":1,\"932\":1,\"935\":2,\"950\":4,\"964\":1,\"980\":4,\"983\":1,\"985\":2,\"987\":1,\"988\":3,\"992\":1,\"993\":2,\"995\":1,\"1024\":1,\"1060\":2,\"1064\":1,\"1068\":2,\"1136\":3,\"1145\":1,\"1146\":1,\"1174\":1,\"1177\":1,\"1235\":1,\"1243\":2,\"1245\":4,\"1251\":1,\"1254\":1,\"1330\":1,\"1447\":1,\"1450\":2,\"1465\":4,\"1479\":1,\"1495\":4,\"1498\":1,\"1500\":2,\"1502\":1,\"1503\":3,\"1507\":1,\"1508\":2,\"1510\":1,\"1539\":1,\"1575\":2,\"1640\":1,\"1644\":1,\"1729\":1,\"1730\":1,\"1731\":1,\"1811\":2,\"1821\":1,\"1823\":1,\"1831\":1,\"1894\":1,\"1898\":1,\"1900\":1,\"1904\":2,\"1905\":1,\"1906\":1,\"2009\":1,\"2013\":1,\"2089\":1,\"2090\":1,\"2091\":1,\"2180\":2,\"2190\":1,\"2192\":1,\"2200\":1,\"2263\":1,\"2267\":1,\"2269\":1,\"2273\":2,\"2274\":1,\"2275\":1,\"2378\":1,\"2382\":1,\"2458\":1,\"2459\":1,\"2460\":1,\"2549\":2,\"2559\":1,\"2561\":1,\"2569\":1,\"2632\":1,\"2636\":1,\"2638\":1,\"2642\":2,\"2643\":1,\"2644\":1,\"2686\":4,\"2697\":8,\"2701\":4,\"2712\":8,\"2716\":4,\"2727\":8}}],[\"nb\",{\"0\":{\"466\":1,\"981\":1,\"1496\":1},\"1\":{\"4\":1,\"16\":1,\"28\":1,\"64\":2,\"72\":2,\"113\":3,\"434\":1,\"435\":2,\"445\":1,\"451\":1,\"466\":1,\"495\":5,\"499\":2,\"501\":1,\"505\":2,\"506\":3,\"509\":2,\"510\":4,\"515\":3,\"516\":2,\"574\":2,\"582\":2,\"623\":3,\"949\":1,\"950\":2,\"960\":1,\"966\":1,\"981\":1,\"1010\":5,\"1014\":2,\"1016\":1,\"1020\":2,\"1021\":3,\"1024\":2,\"1025\":4,\"1030\":3,\"1031\":2,\"1089\":2,\"1097\":2,\"1138\":3,\"1464\":1,\"1465\":2,\"1475\":1,\"1481\":1,\"1496\":1,\"1525\":5,\"1529\":2,\"1531\":1,\"1535\":2,\"1536\":3,\"1539\":2,\"1540\":4,\"1545\":3,\"1546\":2,\"1658\":1,\"1676\":1,\"1704\":1,\"1771\":1,\"1795\":1,\"1928\":6,\"1929\":4,\"1931\":1,\"1932\":2,\"1933\":2,\"1934\":1,\"2027\":1,\"2045\":1,\"2073\":1,\"2140\":1,\"2164\":1,\"2297\":6,\"2298\":4,\"2300\":1,\"2301\":2,\"2302\":2,\"2303\":1,\"2396\":1,\"2414\":1,\"2442\":1,\"2509\":1,\"2533\":1,\"2666\":6,\"2667\":4,\"2669\":1,\"2670\":2,\"2671\":2,\"2672\":1,\"2686\":3,\"2697\":2,\"2701\":3,\"2712\":2,\"2716\":3,\"2727\":2}}],[\"编程语言\",{\"1\":{\"492\":1,\"1007\":1,\"1522\":1}}],[\"编程语言及\",{\"1\":{\"484\":1,\"485\":1,\"487\":1,\"488\":1,\"489\":1,\"999\":1,\"1000\":1,\"1002\":1,\"1003\":1,\"1004\":1,\"1514\":1,\"1515\":1,\"1517\":1,\"1518\":1,\"1519\":1}}],[\"编辑器推荐配置\",{\"0\":{\"9\":1,\"21\":1,\"33\":1}}],[\"编辑器支持\",{\"0\":{\"8\":1,\"20\":1,\"32\":1},\"1\":{\"3\":1,\"15\":1,\"27\":1}}],[\"编写跨平台插件\",{\"1\":{\"505\":1,\"1020\":1,\"1535\":1}}],[\"编写而成\",{\"1\":{\"504\":1,\"1019\":1,\"1534\":1}}],[\"编写相应的用户使用文档\",{\"1\":{\"501\":1,\"1016\":1,\"1531\":1}}],[\"编写飞书适配器并能够使用\",{\"1\":{\"489\":1,\"1004\":1,\"1519\":1}}],[\"编写一个飞书适配器来支持飞书机器人的开发\",{\"1\":{\"489\":1,\"1004\":1,\"1519\":1}}],[\"编写一个\",{\"1\":{\"488\":1,\"492\":1,\"1003\":1,\"1007\":1,\"1518\":1,\"1522\":1}}],[\"编写一个自定义的存储提供者\",{\"1\":{\"82\":1,\"592\":1,\"1107\":1}}],[\"编写详细的使用文档\",{\"1\":{\"487\":1,\"492\":1,\"493\":1,\"1002\":1,\"1007\":1,\"1008\":1,\"1517\":1,\"1522\":1,\"1523\":1}}],[\"编写或应用开源工具自动生成\",{\"1\":{\"485\":1,\"1000\":1,\"1515\":1}}],[\"编写各种不同的事件\",{\"1\":{\"478\":1,\"993\":1,\"1508\":1}}],[\"编写适配器\",{\"0\":{\"464\":1,\"979\":1,\"1494\":1}}],[\"编写定时任务更像是编写普通的函数\",{\"1\":{\"454\":1,\"969\":1,\"1484\":1}}],[\"编写存储提供者\",{\"0\":{\"82\":1,\"592\":1,\"1107\":1}}],[\"编写\",{\"1\":{\"2\":1,\"14\":1,\"26\":1,\"488\":1,\"493\":1,\"1003\":1,\"1008\":1,\"1518\":1,\"1523\":1}}],[\"杜绝在编辑器中\",{\"1\":{\"3\":1,\"15\":1,\"27\":1}}],[\"能较好的支持\",{\"1\":{\"501\":1,\"1016\":1,\"1531\":1}}],[\"能够正确解析插件间的依赖关系\",{\"1\":{\"512\":1,\"1027\":1,\"1542\":1}}],[\"能够基于\",{\"1\":{\"505\":1,\"1020\":1,\"1535\":1}}],[\"能够自动化的完成许多复杂流程的处理\",{\"1\":{\"504\":1,\"1019\":1,\"1534\":1}}],[\"能够提升页面渲染性能与\",{\"1\":{\"503\":1,\"1018\":1,\"1533\":1}}],[\"能够根据用户\",{\"1\":{\"492\":1,\"1007\":1,\"1522\":1}}],[\"能够为你的需求实现提供便捷灵活的支持\",{\"1\":{\"0\":1,\"12\":1,\"24\":1}}],[\"能将绝大多数的\",{\"1\":{\"3\":1,\"15\":1,\"27\":1}}],[\"等库类似的方法进行使用\",{\"1\":{\"1941\":1,\"2310\":1,\"2679\":1}}],[\"等处理的\",{\"1\":{\"1919\":1,\"2288\":1,\"2657\":1}}],[\"等框架\",{\"1\":{\"503\":1,\"1018\":1,\"1533\":1}}],[\"等迁移工具\",{\"1\":{\"501\":1,\"1016\":1,\"1531\":1}}],[\"等主流语言\",{\"1\":{\"493\":1,\"1008\":1,\"1523\":1}}],[\"等接口\",{\"1\":{\"492\":1,\"493\":1,\"1007\":1,\"1008\":1,\"1522\":1,\"1523\":1}}],[\"等官方接口\",{\"1\":{\"488\":1,\"489\":1,\"1003\":1,\"1004\":1,\"1518\":1,\"1519\":1}}],[\"等文档生成工具更佳\",{\"1\":{\"485\":1,\"488\":1,\"489\":1,\"1000\":1,\"1003\":1,\"1004\":1,\"1515\":1,\"1518\":1,\"1519\":1}}],[\"等方法\",{\"1\":{\"478\":1,\"993\":1,\"1508\":1}}],[\"等方法一次性加载所有插件\",{\"1\":{\"116\":1,\"626\":1,\"1141\":1}}],[\"等方式\",{\"1\":{\"474\":1,\"989\":1,\"1504\":1}}],[\"等操作系统\",{\"1\":{\"435\":1,\"950\":1,\"1465\":1}}],[\"等价于\",{\"1\":{\"333\":1,\"347\":1,\"845\":1,\"862\":1,\"1360\":1,\"1377\":1,\"2691\":1,\"2692\":1,\"2694\":1,\"2696\":12,\"2706\":1,\"2707\":1,\"2709\":1,\"2711\":12,\"2721\":1,\"2722\":1,\"2724\":1,\"2726\":12}}],[\"等函数参数\",{\"1\":{\"298\":1,\"808\":1,\"1323\":1}}],[\"等级\",{\"1\":{\"227\":1,\"739\":1,\"1254\":1}}],[\"等待用户回复的超时时间\",{\"1\":{\"175\":1,\"685\":1,\"1200\":1}}],[\"等组成\",{\"1\":{\"140\":1,\"650\":1,\"1165\":1}}],[\"等依赖注入函数\",{\"1\":{\"108\":1,\"618\":1,\"1133\":1}}],[\"等规范进行开发并且拥有完整类型注解\",{\"1\":{\"8\":1,\"20\":1,\"32\":1}}],[\"等\",{\"1\":{\"3\":1,\"15\":1,\"27\":1,\"53\":2,\"81\":1,\"139\":1,\"467\":1,\"485\":1,\"492\":1,\"493\":1,\"497\":1,\"499\":1,\"501\":1,\"504\":1,\"563\":2,\"591\":1,\"649\":1,\"982\":1,\"1000\":1,\"1007\":1,\"1008\":1,\"1012\":1,\"1014\":1,\"1016\":1,\"1019\":1,\"1078\":2,\"1106\":1,\"1164\":1,\"1497\":1,\"1515\":1,\"1522\":1,\"1523\":1,\"1527\":1,\"1529\":1,\"1531\":1,\"1534\":1,\"1596\":1,\"1946\":1,\"2315\":1}}],[\"push\",{\"1\":{\"2697\":2,\"2712\":2,\"2727\":2}}],[\"pull\",{\"1\":{\"11\":1,\"23\":1,\"35\":1,\"504\":1,\"1019\":1,\"1534\":1}}],[\"pk\",{\"1\":{\"2685\":1,\"2686\":3,\"2700\":1,\"2701\":3,\"2715\":1,\"2716\":3}}],[\"pp\",{\"1\":{\"1910\":2,\"2279\":2,\"2648\":2}}],[\"p<xxx>\",{\"1\":{\"1909\":1,\"2278\":1,\"2647\":1}}],[\"php\",{\"1\":{\"493\":1,\"1008\":1,\"1523\":1}}],[\"pipx\",{\"1\":{\"2697\":2,\"2712\":2,\"2727\":2}}],[\"pip\",{\"1\":{\"507\":2,\"1022\":2,\"1537\":2,\"1658\":1,\"1676\":1,\"1704\":1,\"1771\":1,\"1795\":1,\"1816\":1,\"1893\":4,\"1897\":1,\"1905\":2,\"1913\":3,\"1928\":1,\"2027\":1,\"2045\":1,\"2073\":1,\"2140\":1,\"2164\":1,\"2185\":1,\"2262\":4,\"2266\":1,\"2274\":2,\"2282\":3,\"2297\":1,\"2396\":1,\"2414\":1,\"2442\":1,\"2509\":1,\"2533\":1,\"2554\":1,\"2631\":4,\"2635\":1,\"2643\":2,\"2651\":3,\"2666\":1,\"2697\":2,\"2712\":2,\"2727\":2}}],[\"pii\",{\"1\":{\"449\":1,\"964\":1,\"1479\":1}}],[\"ping\",{\"1\":{\"97\":3,\"607\":3,\"1122\":3}}],[\"p\",{\"1\":{\"175\":1,\"406\":2,\"685\":1,\"921\":2,\"1200\":1,\"1436\":2,\"1796\":2,\"1894\":2,\"2165\":2,\"2263\":2,\"2534\":2,\"2632\":2}}],[\"please\",{\"1\":{\"2686\":5,\"2701\":5,\"2716\":5}}],[\"pluginmanager\",{\"1\":{\"1835\":1,\"1853\":1,\"2204\":1,\"2222\":1,\"2573\":1,\"2591\":1}}],[\"pluginmetadata\",{\"1\":{\"110\":4,\"620\":4,\"1135\":4,\"1809\":2,\"2178\":2,\"2547\":2}}],[\"plugins\",{\"1\":{\"110\":1,\"111\":4,\"113\":1,\"114\":4,\"216\":8,\"509\":3,\"513\":1,\"514\":1,\"515\":12,\"517\":1,\"518\":4,\"519\":2,\"520\":5,\"521\":5,\"523\":1,\"620\":1,\"621\":4,\"623\":1,\"624\":4,\"728\":8,\"1024\":3,\"1028\":1,\"1029\":1,\"1030\":12,\"1032\":1,\"1033\":4,\"1034\":2,\"1035\":5,\"1036\":5,\"1038\":1,\"1135\":1,\"1136\":4,\"1138\":1,\"1139\":4,\"1243\":8,\"1539\":3,\"1543\":1,\"1544\":1,\"1545\":12,\"1547\":1,\"1548\":4,\"1549\":2,\"1550\":5,\"1551\":5,\"1553\":1,\"1809\":6,\"1810\":1,\"1819\":3,\"1820\":2,\"1822\":1,\"1826\":1,\"2178\":6,\"2179\":1,\"2188\":3,\"2189\":2,\"2191\":1,\"2195\":1,\"2547\":6,\"2548\":1,\"2557\":3,\"2558\":2,\"2560\":1,\"2564\":1}}],[\"plugin\",{\"0\":{\"441\":1,\"442\":1,\"443\":1,\"956\":1,\"957\":1,\"958\":1,\"1471\":1,\"1472\":1,\"1473\":1,\"1808\":1,\"1815\":1,\"1825\":1,\"1838\":1,\"1858\":1,\"2177\":1,\"2184\":1,\"2194\":1,\"2207\":1,\"2227\":1,\"2546\":1,\"2553\":1,\"2563\":1,\"2576\":1,\"2596\":1},\"1\":{\"108\":2,\"110\":3,\"111\":12,\"113\":3,\"216\":12,\"242\":2,\"426\":6,\"427\":2,\"428\":5,\"433\":1,\"434\":3,\"435\":10,\"441\":3,\"442\":3,\"443\":3,\"444\":1,\"445\":3,\"450\":1,\"451\":3,\"452\":1,\"453\":3,\"454\":2,\"470\":2,\"472\":2,\"473\":2,\"496\":1,\"499\":1,\"501\":1,\"509\":2,\"515\":3,\"517\":4,\"519\":1,\"520\":4,\"521\":4,\"522\":2,\"525\":2,\"618\":2,\"620\":3,\"621\":12,\"623\":3,\"728\":12,\"755\":2,\"941\":6,\"942\":2,\"943\":5,\"948\":1,\"949\":3,\"950\":10,\"956\":3,\"957\":3,\"958\":3,\"959\":1,\"960\":3,\"965\":1,\"966\":3,\"967\":1,\"968\":3,\"969\":2,\"985\":2,\"987\":2,\"988\":2,\"1011\":1,\"1014\":1,\"1016\":1,\"1024\":2,\"1030\":3,\"1032\":4,\"1034\":1,\"1035\":4,\"1036\":4,\"1037\":2,\"1040\":2,\"1133\":2,\"1135\":3,\"1136\":12,\"1138\":3,\"1243\":12,\"1270\":2,\"1456\":6,\"1457\":2,\"1458\":5,\"1463\":1,\"1464\":3,\"1465\":10,\"1471\":3,\"1472\":3,\"1473\":3,\"1474\":1,\"1475\":3,\"1480\":1,\"1481\":3,\"1482\":1,\"1483\":3,\"1484\":2,\"1500\":2,\"1502\":2,\"1503\":2,\"1526\":1,\"1529\":1,\"1531\":1,\"1539\":2,\"1545\":3,\"1547\":4,\"1549\":1,\"1550\":4,\"1551\":4,\"1552\":2,\"1555\":2,\"1809\":4,\"1810\":3,\"1811\":2,\"1812\":1,\"1816\":3,\"1817\":2,\"1818\":2,\"1819\":4,\"1820\":4,\"1821\":1,\"1822\":1,\"1831\":1,\"1832\":1,\"1855\":1,\"1856\":1,\"1860\":1,\"1926\":4,\"1928\":5,\"1929\":4,\"1931\":4,\"1937\":2,\"2178\":4,\"2179\":3,\"2180\":2,\"2181\":1,\"2185\":3,\"2186\":2,\"2187\":2,\"2188\":4,\"2189\":4,\"2190\":1,\"2191\":1,\"2200\":1,\"2201\":1,\"2224\":1,\"2225\":1,\"2229\":1,\"2295\":4,\"2297\":5,\"2298\":4,\"2300\":4,\"2306\":2,\"2547\":4,\"2548\":3,\"2549\":2,\"2550\":1,\"2554\":3,\"2555\":2,\"2556\":2,\"2557\":4,\"2558\":4,\"2559\":1,\"2560\":1,\"2569\":1,\"2570\":1,\"2593\":1,\"2594\":1,\"2598\":1,\"2664\":4,\"2666\":5,\"2667\":4,\"2669\":4,\"2675\":2,\"2683\":1,\"2685\":2,\"2686\":3,\"2687\":2,\"2688\":1,\"2689\":1,\"2691\":1,\"2692\":1,\"2694\":1,\"2695\":1,\"2698\":1,\"2700\":2,\"2701\":3,\"2702\":2,\"2703\":1,\"2704\":1,\"2706\":1,\"2707\":1,\"2709\":1,\"2710\":1,\"2713\":1,\"2715\":2,\"2716\":3,\"2717\":2,\"2718\":1,\"2719\":1,\"2721\":1,\"2722\":1,\"2724\":1,\"2725\":1}}],[\"placeholder\",{\"1\":{\"1909\":1,\"2278\":1,\"2647\":1}}],[\"plain\",{\"1\":{\"532\":1,\"539\":2,\"1047\":1,\"1054\":2,\"1562\":1,\"1569\":2,\"1594\":1,\"1975\":1,\"2344\":1,\"2687\":3,\"2688\":6,\"2702\":3,\"2703\":6,\"2717\":3,\"2718\":6}}],[\"plaintext\",{\"1\":{\"49\":1,\"298\":1,\"367\":1,\"559\":1,\"808\":1,\"882\":1,\"1074\":1,\"1323\":1,\"1397\":1}}],[\"platform\",{\"1\":{\"472\":3,\"476\":4,\"477\":1,\"987\":3,\"991\":4,\"992\":1,\"1502\":3,\"1506\":4,\"1507\":1}}],[\"playwright\",{\"1\":{\"64\":1,\"574\":1,\"1089\":1}}],[\"position\",{\"1\":{\"2728\":1,\"2729\":1,\"2730\":1,\"2731\":1,\"2732\":1,\"2733\":1,\"2734\":1,\"2735\":1,\"2736\":1,\"2737\":1,\"2738\":1,\"2739\":1,\"2740\":1,\"2741\":1,\"2742\":1,\"2743\":1,\"2744\":1,\"2745\":1,\"2746\":1,\"2747\":1,\"2748\":1,\"2749\":1,\"2750\":1,\"2751\":1}}],[\"postgres\",{\"1\":{\"2697\":20,\"2712\":20,\"2727\":20}}],[\"postgresql+psycopg\",{\"1\":{\"1937\":1,\"2306\":1,\"2675\":1,\"2697\":2,\"2712\":2,\"2727\":2}}],[\"postgresql\",{\"1\":{\"1937\":1,\"2306\":1,\"2675\":1,\"2697\":6,\"2712\":6,\"2727\":6}}],[\"postcss\",{\"1\":{\"503\":1,\"1018\":1,\"1533\":1}}],[\"post\",{\"1\":{\"473\":2,\"988\":2,\"1503\":2,\"1941\":2,\"2310\":2,\"2679\":2}}],[\"postprocessor\",{\"1\":{\"133\":2,\"135\":2,\"643\":2,\"645\":2,\"1158\":2,\"1160\":2}}],[\"pool\",{\"1\":{\"1938\":3,\"1939\":1,\"2307\":3,\"2308\":1,\"2676\":3,\"2677\":1}}],[\"ports\",{\"1\":{\"2697\":4,\"2712\":4,\"2727\":4}}],[\"port\",{\"1\":{\"1695\":1,\"1786\":1,\"1936\":1,\"2064\":1,\"2155\":1,\"2305\":1,\"2433\":1,\"2524\":1,\"2674\":1}}],[\"port=8080\",{\"1\":{\"225\":1,\"508\":1,\"737\":1,\"1023\":1,\"1252\":1,\"1538\":1}}],[\"pong\",{\"1\":{\"97\":3,\"607\":3,\"1122\":3}}],[\"popular\",{\"1\":{\"70\":1,\"580\":1,\"1095\":1}}],[\"practice\",{\"0\":{\"2756\":1,\"2763\":1,\"2770\":1}}],[\"pr\",{\"1\":{\"504\":1,\"1019\":1,\"1534\":1}}],[\"pre\",{\"1\":{\"1648\":1,\"2017\":1,\"2386\":1}}],[\"preprocessor\",{\"1\":{\"132\":2,\"134\":2,\"199\":1,\"642\":2,\"644\":2,\"711\":1,\"1157\":2,\"1159\":2,\"1226\":1}}],[\"prefixes=\",{\"1\":{\"1905\":1,\"1906\":1,\"2274\":1,\"2275\":1,\"2643\":1,\"2644\":1}}],[\"prefixes\",{\"1\":{\"1904\":1,\"1905\":1,\"1906\":2,\"2273\":1,\"2274\":1,\"2275\":2,\"2642\":1,\"2643\":1,\"2644\":2}}],[\"prefix\",{\"1\":{\"105\":2,\"182\":1,\"413\":1,\"615\":2,\"694\":1,\"928\":1,\"1130\":2,\"1209\":1,\"1443\":1,\"1876\":1,\"1894\":1,\"1907\":1,\"2245\":1,\"2263\":1,\"2276\":1,\"2614\":1,\"2632\":1,\"2645\":1}}],[\"primarykeyconstraint\",{\"1\":{\"2686\":2,\"2701\":2,\"2716\":2}}],[\"primary\",{\"1\":{\"2685\":3,\"2686\":2,\"2688\":1,\"2691\":1,\"2692\":1,\"2694\":1,\"2700\":3,\"2701\":2,\"2703\":1,\"2706\":1,\"2707\":1,\"2709\":1,\"2715\":3,\"2716\":2,\"2718\":1,\"2721\":1,\"2722\":1,\"2724\":1}}],[\"private\",{\"1\":{\"424\":1,\"939\":1,\"1454\":1,\"1639\":1,\"2008\":1,\"2377\":1}}],[\"privatemessageevent\",{\"1\":{\"103\":2,\"424\":2,\"613\":2,\"939\":2,\"1128\":2,\"1454\":2}}],[\"print\",{\"1\":{\"418\":1,\"534\":1,\"933\":1,\"1049\":1,\"1448\":1,\"1564\":1,\"1893\":2,\"1909\":3,\"1910\":2,\"1913\":2,\"2262\":2,\"2278\":3,\"2279\":2,\"2282\":2,\"2631\":2,\"2647\":3,\"2648\":2,\"2651\":2,\"2685\":1,\"2696\":12,\"2700\":1,\"2711\":12,\"2715\":1,\"2726\":12}}],[\"priority=plugin\",{\"1\":{\"428\":1,\"943\":1,\"1458\":1}}],[\"priority=10\",{\"1\":{\"105\":1,\"529\":1,\"615\":1,\"1044\":1,\"1130\":1,\"1559\":1}}],[\"priority\",{\"1\":{\"89\":1,\"93\":1,\"242\":1,\"428\":1,\"599\":1,\"603\":1,\"755\":1,\"943\":1,\"1114\":1,\"1118\":1,\"1270\":1,\"1458\":1,\"1863\":1,\"1864\":1,\"1865\":1,\"1866\":1,\"1867\":1,\"1868\":1,\"1869\":1,\"1870\":1,\"1871\":1,\"1872\":1,\"1873\":1,\"1874\":1,\"1875\":1,\"1876\":1,\"1877\":1,\"1878\":1,\"1879\":1,\"1880\":1,\"1881\":1,\"1882\":1,\"1883\":1,\"1884\":1,\"1885\":1,\"1886\":1,\"1887\":1,\"1888\":1,\"1889\":1,\"1890\":1,\"1891\":1,\"1892\":1,\"2232\":1,\"2233\":1,\"2234\":1,\"2235\":1,\"2236\":1,\"2237\":1,\"2238\":1,\"2239\":1,\"2240\":1,\"2241\":1,\"2242\":1,\"2243\":1,\"2244\":1,\"2245\":1,\"2246\":1,\"2247\":1,\"2248\":1,\"2249\":1,\"2250\":1,\"2251\":1,\"2252\":1,\"2253\":1,\"2254\":1,\"2255\":1,\"2256\":1,\"2257\":1,\"2258\":1,\"2259\":1,\"2260\":1,\"2261\":1,\"2601\":1,\"2602\":1,\"2603\":1,\"2604\":1,\"2605\":1,\"2606\":1,\"2607\":1,\"2608\":1,\"2609\":1,\"2610\":1,\"2611\":1,\"2612\":1,\"2613\":1,\"2614\":1,\"2615\":1,\"2616\":1,\"2617\":1,\"2618\":1,\"2619\":1,\"2620\":1,\"2621\":1,\"2622\":1,\"2623\":1,\"2624\":1,\"2625\":1,\"2626\":1,\"2627\":1,\"2628\":1,\"2629\":1,\"2630\":1}}],[\"process\",{\"1\":{\"472\":1,\"987\":1,\"1502\":1}}],[\"processexception\",{\"1\":{\"195\":1,\"707\":1,\"1222\":1}}],[\"problem\",{\"1\":{\"419\":1,\"934\":1,\"1449\":1}}],[\"prompt=messagetemplate\",{\"1\":{\"431\":1,\"946\":1,\"1461\":1}}],[\"prompt=\",{\"1\":{\"423\":1,\"431\":1,\"938\":1,\"946\":1,\"1453\":1,\"1461\":1,\"2687\":1,\"2702\":1,\"2717\":1}}],[\"prompt\",{\"1\":{\"251\":1,\"254\":1,\"255\":1,\"256\":1,\"257\":1,\"507\":1,\"692\":1,\"693\":1,\"764\":1,\"767\":1,\"768\":1,\"769\":1,\"770\":1,\"808\":1,\"810\":1,\"841\":1,\"842\":1,\"1022\":1,\"1207\":1,\"1208\":1,\"1279\":1,\"1282\":1,\"1283\":1,\"1284\":1,\"1285\":1,\"1323\":1,\"1325\":1,\"1356\":1,\"1357\":1,\"1537\":1}}],[\"property\",{\"1\":{\"146\":1,\"656\":1,\"1171\":1}}],[\"propagation\",{\"1\":{\"90\":1,\"203\":2,\"600\":1,\"715\":2,\"1115\":1,\"1230\":2}}],[\"provider\",{\"1\":{\"83\":3,\"284\":1,\"593\":3,\"796\":1,\"1108\":3,\"1311\":1}}],[\"provides\",{\"1\":{\"78\":1,\"588\":1,\"1103\":1}}],[\"proactoreventloop\",{\"1\":{\"64\":2,\"574\":2,\"1089\":2}}],[\"proxy\",{\"1\":{\"53\":2,\"449\":2,\"563\":2,\"964\":2,\"1078\":2,\"1479\":2,\"1659\":1,\"1666\":1,\"1705\":1,\"1711\":1,\"1735\":1,\"1760\":1,\"2028\":1,\"2035\":1,\"2074\":1,\"2080\":1,\"2111\":1,\"2116\":1,\"2397\":1,\"2404\":1,\"2443\":1,\"2449\":1,\"2480\":1,\"2485\":1}}],[\"package\",{\"1\":{\"514\":1,\"1029\":1,\"1544\":1,\"1893\":4,\"1905\":2,\"1913\":6,\"2262\":4,\"2274\":2,\"2282\":6,\"2631\":4,\"2643\":2,\"2651\":6}}],[\"payload\",{\"1\":{\"475\":9,\"990\":9,\"1505\":9}}],[\"pause\",{\"1\":{\"205\":2,\"394\":1,\"395\":1,\"692\":2,\"717\":2,\"842\":1,\"909\":1,\"910\":1,\"1207\":2,\"1232\":2,\"1357\":1,\"1424\":1,\"1425\":1}}],[\"pausedexception\",{\"1\":{\"195\":1,\"707\":1,\"1222\":1}}],[\"password\",{\"1\":{\"431\":3,\"946\":3,\"1461\":3,\"1936\":1,\"2305\":1,\"2674\":1,\"2697\":6,\"2712\":6,\"2727\":6}}],[\"pass\",{\"1\":{\"127\":1,\"128\":1,\"129\":1,\"130\":1,\"133\":1,\"135\":1,\"154\":1,\"454\":2,\"637\":1,\"638\":1,\"639\":1,\"640\":1,\"643\":1,\"645\":1,\"664\":1,\"969\":2,\"1152\":1,\"1153\":1,\"1154\":1,\"1155\":1,\"1158\":1,\"1160\":1,\"1179\":1,\"1484\":2}}],[\"patch\",{\"0\":{\"1923\":1,\"2292\":1,\"2661\":1}}],[\"pat\",{\"1\":{\"1894\":1,\"2263\":1,\"2632\":1}}],[\"path=url\",{\"1\":{\"120\":1,\"121\":1,\"630\":1,\"631\":1,\"1145\":1,\"1146\":1}}],[\"path\",{\"1\":{\"114\":2,\"120\":1,\"121\":1,\"412\":2,\"435\":2,\"480\":3,\"517\":5,\"518\":1,\"519\":2,\"520\":2,\"521\":2,\"624\":2,\"630\":1,\"631\":1,\"927\":2,\"950\":2,\"995\":3,\"1032\":5,\"1033\":1,\"1034\":2,\"1035\":2,\"1036\":2,\"1139\":2,\"1145\":1,\"1146\":1,\"1442\":2,\"1465\":2,\"1510\":3,\"1547\":5,\"1548\":1,\"1549\":2,\"1550\":2,\"1551\":2,\"1729\":1,\"1730\":1,\"1731\":1,\"1732\":1,\"1816\":5,\"1818\":1,\"1819\":1,\"1820\":1,\"1826\":1,\"1834\":1,\"1835\":1,\"1902\":2,\"2089\":1,\"2090\":1,\"2091\":1,\"2092\":1,\"2185\":5,\"2187\":1,\"2188\":1,\"2189\":1,\"2195\":1,\"2203\":1,\"2204\":1,\"2271\":2,\"2458\":1,\"2459\":1,\"2460\":1,\"2461\":1,\"2554\":5,\"2556\":1,\"2557\":1,\"2558\":1,\"2564\":1,\"2572\":1,\"2573\":1,\"2640\":2}}],[\"pathlib\",{\"1\":{\"114\":1,\"435\":3,\"480\":1,\"517\":2,\"624\":1,\"950\":3,\"995\":1,\"1032\":2,\"1139\":1,\"1465\":3,\"1510\":1,\"1547\":2,\"1816\":1,\"2185\":1,\"2554\":1}}],[\"patterns默认支持的类型有\",{\"1\":{\"1897\":1,\"2266\":1,\"2635\":1}}],[\"patterns\",{\"1\":{\"1897\":2,\"2266\":2,\"2635\":2}}],[\"pattern\",{\"1\":{\"67\":1,\"68\":1,\"75\":1,\"76\":1,\"577\":1,\"578\":1,\"585\":1,\"586\":1,\"1092\":1,\"1093\":1,\"1100\":1,\"1101\":1,\"1685\":1,\"1686\":1,\"1776\":1,\"1777\":1,\"1874\":1,\"1891\":1,\"2054\":1,\"2055\":1,\"2145\":1,\"2146\":1,\"2243\":1,\"2260\":1,\"2423\":1,\"2424\":1,\"2514\":1,\"2515\":1,\"2612\":1,\"2629\":1}}],[\"parameter\",{\"1\":{\"1656\":1,\"2025\":1,\"2394\":1}}],[\"parameterless\",{\"1\":{\"248\":1,\"249\":1,\"250\":1,\"251\":1,\"761\":1,\"762\":1,\"763\":1,\"764\":1,\"1276\":1,\"1277\":1,\"1278\":1,\"1279\":1,\"1648\":1,\"1650\":1,\"1651\":1,\"2017\":1,\"2019\":1,\"2020\":1,\"2386\":1,\"2388\":1,\"2389\":1}}],[\"param\",{\"1\":{\"297\":1,\"815\":1,\"1330\":1,\"1649\":1,\"1650\":2,\"1651\":1,\"1656\":1,\"2018\":1,\"2019\":2,\"2020\":1,\"2025\":1,\"2387\":1,\"2388\":2,\"2389\":1,\"2394\":1}}],[\"params=platform\",{\"1\":{\"476\":1,\"991\":1,\"1506\":1}}],[\"params\",{\"0\":{\"294\":1,\"806\":1,\"1321\":1},\"1\":{\"1648\":1,\"1652\":1,\"1653\":1,\"1659\":1,\"1666\":1,\"1705\":1,\"1711\":1,\"1735\":1,\"1760\":1,\"2017\":1,\"2021\":1,\"2022\":1,\"2028\":1,\"2035\":1,\"2074\":1,\"2080\":1,\"2111\":1,\"2116\":1,\"2386\":1,\"2390\":1,\"2391\":1,\"2397\":1,\"2404\":1,\"2443\":1,\"2449\":1,\"2480\":1,\"2485\":1,\"2687\":3,\"2688\":1,\"2691\":1,\"2692\":1,\"2694\":1,\"2695\":1,\"2702\":3,\"2703\":1,\"2706\":1,\"2707\":1,\"2709\":1,\"2710\":1,\"2717\":3,\"2718\":1,\"2721\":1,\"2722\":1,\"2724\":1,\"2725\":1}}],[\"parse\",{\"1\":{\"188\":1,\"475\":1,\"700\":1,\"990\":1,\"1215\":1,\"1505\":1,\"1893\":1,\"1894\":1,\"1896\":2,\"1902\":1,\"1908\":1,\"1909\":3,\"1910\":3,\"1911\":1,\"1912\":1,\"1913\":2,\"1914\":2,\"2262\":1,\"2263\":1,\"2265\":2,\"2271\":1,\"2277\":1,\"2278\":3,\"2279\":3,\"2280\":1,\"2281\":1,\"2282\":2,\"2283\":2,\"2631\":1,\"2632\":1,\"2634\":2,\"2640\":1,\"2646\":1,\"2647\":3,\"2648\":3,\"2649\":1,\"2650\":1,\"2651\":2,\"2652\":2}}],[\"parserexit\",{\"1\":{\"195\":1,\"365\":1,\"707\":1,\"880\":1,\"1222\":1,\"1395\":1}}],[\"parser=parser\",{\"1\":{\"100\":2,\"365\":1,\"610\":2,\"880\":1,\"1125\":2,\"1395\":1}}],[\"parser\",{\"1\":{\"100\":5,\"364\":1,\"365\":3,\"610\":5,\"879\":1,\"880\":3,\"1125\":5,\"1394\":1,\"1395\":3,\"1873\":2,\"1878\":1,\"1890\":2,\"2242\":2,\"2247\":1,\"2259\":2,\"2611\":2,\"2616\":1,\"2628\":2}}],[\"partition\",{\"1\":{\"2696\":8,\"2711\":8,\"2726\":8}}],[\"partitions\",{\"1\":{\"2696\":17,\"2711\":17,\"2726\":17}}],[\"part\",{\"1\":{\"147\":1,\"657\":1,\"1172\":1}}],[\"parentheses\",{\"1\":{\"1903\":1,\"1914\":2,\"1922\":2,\"2272\":1,\"2283\":2,\"2291\":2,\"2641\":1,\"2652\":2,\"2660\":2}}],[\"parent\",{\"1\":{\"111\":1,\"113\":1,\"114\":4,\"480\":2,\"621\":1,\"623\":1,\"624\":4,\"995\":2,\"1136\":1,\"1138\":1,\"1139\":4,\"1510\":2}}],[\"page\",{\"1\":{\"11\":1,\"23\":1,\"35\":1}}],[\"perm\",{\"1\":{\"329\":2,\"330\":1,\"331\":2,\"332\":2,\"844\":2,\"848\":1,\"849\":2,\"850\":2,\"1359\":2,\"1363\":1,\"1364\":2,\"1365\":2}}],[\"perm=matcher\",{\"1\":{\"140\":2,\"650\":2,\"1165\":2}}],[\"permissionupdater\",{\"1\":{\"242\":1,\"247\":2,\"395\":1,\"755\":1,\"760\":2,\"910\":1,\"1270\":1,\"1275\":2,\"1425\":1}}],[\"permissionchecker\",{\"1\":{\"93\":1,\"328\":2,\"333\":2,\"334\":1,\"392\":1,\"603\":1,\"843\":2,\"845\":2,\"846\":1,\"907\":1,\"1118\":1,\"1358\":2,\"1360\":2,\"1361\":1,\"1422\":1,\"1863\":1,\"1864\":1,\"1865\":1,\"1866\":1,\"1867\":1,\"1868\":1,\"1869\":1,\"1870\":1,\"1871\":1,\"1872\":1,\"1873\":1,\"1874\":1,\"1875\":1,\"1876\":1,\"1877\":1,\"1878\":1,\"1879\":1,\"1880\":1,\"1881\":1,\"1882\":1,\"1883\":1,\"1884\":1,\"1885\":1,\"1886\":1,\"1887\":1,\"1888\":1,\"1889\":1,\"1890\":1,\"1891\":1,\"1892\":1,\"2232\":1,\"2233\":1,\"2234\":1,\"2235\":1,\"2236\":1,\"2237\":1,\"2238\":1,\"2239\":1,\"2240\":1,\"2241\":1,\"2242\":1,\"2243\":1,\"2244\":1,\"2245\":1,\"2246\":1,\"2247\":1,\"2248\":1,\"2249\":1,\"2250\":1,\"2251\":1,\"2252\":1,\"2253\":1,\"2254\":1,\"2255\":1,\"2256\":1,\"2257\":1,\"2258\":1,\"2259\":1,\"2260\":1,\"2261\":1,\"2601\":1,\"2602\":1,\"2603\":1,\"2604\":1,\"2605\":1,\"2606\":1,\"2607\":1,\"2608\":1,\"2609\":1,\"2610\":1,\"2611\":1,\"2612\":1,\"2613\":1,\"2614\":1,\"2615\":1,\"2616\":1,\"2617\":1,\"2618\":1,\"2619\":1,\"2620\":1,\"2621\":1,\"2622\":1,\"2623\":1,\"2624\":1,\"2625\":1,\"2626\":1,\"2627\":1,\"2628\":1,\"2629\":1,\"2630\":1}}],[\"permission\",{\"0\":{\"328\":1,\"843\":1,\"1358\":1},\"1\":{\"87\":2,\"93\":2,\"140\":9,\"236\":1,\"242\":4,\"268\":1,\"328\":2,\"329\":1,\"330\":1,\"331\":1,\"332\":1,\"333\":2,\"340\":1,\"341\":1,\"342\":1,\"343\":1,\"345\":1,\"395\":1,\"597\":2,\"603\":2,\"650\":9,\"749\":1,\"755\":4,\"781\":1,\"843\":2,\"844\":1,\"845\":2,\"848\":1,\"849\":1,\"850\":1,\"855\":1,\"856\":1,\"857\":1,\"858\":1,\"860\":1,\"910\":1,\"1112\":2,\"1118\":2,\"1165\":9,\"1264\":1,\"1270\":4,\"1296\":1,\"1358\":2,\"1359\":1,\"1360\":2,\"1363\":1,\"1364\":1,\"1365\":1,\"1370\":1,\"1371\":1,\"1372\":1,\"1373\":1,\"1375\":1,\"1425\":1,\"1863\":2,\"1864\":2,\"1865\":2,\"1866\":2,\"1867\":2,\"1868\":2,\"1869\":2,\"1870\":2,\"1871\":2,\"1872\":2,\"1873\":2,\"1874\":2,\"1875\":2,\"1876\":2,\"1877\":2,\"1878\":2,\"1879\":2,\"1880\":2,\"1881\":2,\"1882\":2,\"1883\":2,\"1884\":2,\"1885\":2,\"1886\":2,\"1887\":2,\"1888\":2,\"1889\":2,\"1890\":2,\"1891\":2,\"1892\":2,\"2232\":2,\"2233\":2,\"2234\":2,\"2235\":2,\"2236\":2,\"2237\":2,\"2238\":2,\"2239\":2,\"2240\":2,\"2241\":2,\"2242\":2,\"2243\":2,\"2244\":2,\"2245\":2,\"2246\":2,\"2247\":2,\"2248\":2,\"2249\":2,\"2250\":2,\"2251\":2,\"2252\":2,\"2253\":2,\"2254\":2,\"2255\":2,\"2256\":2,\"2257\":2,\"2258\":2,\"2259\":2,\"2260\":2,\"2261\":2,\"2601\":2,\"2602\":2,\"2603\":2,\"2604\":2,\"2605\":2,\"2606\":2,\"2607\":2,\"2608\":2,\"2609\":2,\"2610\":2,\"2611\":2,\"2612\":2,\"2613\":2,\"2614\":2,\"2615\":2,\"2616\":2,\"2617\":2,\"2618\":2,\"2619\":2,\"2620\":2,\"2621\":2,\"2622\":2,\"2623\":2,\"2624\":2,\"2625\":2,\"2626\":2,\"2627\":2,\"2628\":2,\"2629\":2,\"2630\":2}}],[\"performance\",{\"1\":{\"58\":1,\"79\":1,\"568\":1,\"589\":1,\"1083\":1,\"1104\":1}}],[\"pep302\",{\"1\":{\"1825\":1,\"2194\":1,\"2563\":1}}],[\"pep8\",{\"1\":{\"8\":1,\"20\":1,\"32\":1}}],[\"pep484\",{\"1\":{\"8\":1,\"20\":1,\"32\":1}}],[\"pep\",{\"1\":{\"3\":2,\"8\":1,\"15\":2,\"20\":1,\"27\":2,\"32\":1,\"372\":2,\"887\":2,\"1402\":2}}],[\"pypi\",{\"1\":{\"481\":1,\"996\":1,\"1511\":1}}],[\"pyproject\",{\"1\":{\"110\":1,\"465\":1,\"480\":1,\"515\":3,\"620\":1,\"980\":1,\"995\":1,\"1030\":3,\"1135\":1,\"1495\":1,\"1510\":1,\"1545\":3,\"1820\":1,\"2189\":1,\"2558\":1}}],[\"pytest\",{\"1\":{\"480\":3,\"995\":3,\"1510\":3,\"1941\":2,\"1942\":1,\"2310\":2,\"2311\":1,\"2679\":2,\"2680\":1,\"2697\":2,\"2712\":2,\"2727\":2}}],[\"python\",{\"1\":{\"0\":3,\"2\":1,\"10\":8,\"12\":3,\"14\":1,\"22\":8,\"24\":3,\"26\":1,\"34\":8,\"58\":2,\"64\":1,\"78\":1,\"79\":1,\"80\":1,\"81\":1,\"372\":1,\"421\":1,\"450\":2,\"475\":3,\"484\":1,\"485\":3,\"487\":3,\"488\":1,\"489\":1,\"493\":1,\"495\":1,\"496\":1,\"501\":1,\"504\":1,\"505\":2,\"506\":1,\"507\":1,\"508\":1,\"509\":1,\"510\":2,\"512\":1,\"514\":1,\"538\":2,\"568\":2,\"574\":1,\"588\":1,\"589\":1,\"590\":1,\"591\":1,\"887\":1,\"936\":1,\"965\":2,\"990\":3,\"999\":1,\"1000\":3,\"1002\":3,\"1003\":1,\"1004\":1,\"1008\":1,\"1010\":1,\"1011\":1,\"1016\":1,\"1019\":1,\"1020\":2,\"1021\":1,\"1022\":1,\"1023\":1,\"1024\":1,\"1025\":2,\"1027\":1,\"1029\":1,\"1053\":2,\"1083\":2,\"1089\":1,\"1103\":1,\"1104\":1,\"1105\":1,\"1106\":1,\"1402\":1,\"1451\":1,\"1480\":2,\"1505\":3,\"1514\":1,\"1515\":3,\"1517\":3,\"1518\":1,\"1519\":1,\"1523\":1,\"1525\":1,\"1526\":1,\"1531\":1,\"1534\":1,\"1535\":2,\"1536\":1,\"1537\":1,\"1538\":1,\"1539\":1,\"1540\":2,\"1542\":1,\"1544\":1,\"1568\":2,\"1894\":1,\"2263\":1,\"2632\":1,\"2697\":14,\"2712\":14,\"2727\":14}}],[\"pydanticfieldinfo\",{\"1\":{\"297\":1,\"815\":1,\"1330\":1}}],[\"pydantic\",{\"1\":{\"141\":2,\"142\":1,\"143\":1,\"144\":1,\"146\":1,\"147\":2,\"148\":1,\"161\":2,\"162\":2,\"297\":1,\"469\":1,\"475\":2,\"508\":1,\"538\":3,\"651\":2,\"652\":1,\"653\":1,\"654\":1,\"656\":1,\"657\":2,\"658\":1,\"671\":2,\"672\":2,\"815\":1,\"984\":1,\"990\":2,\"1023\":1,\"1053\":3,\"1166\":2,\"1167\":1,\"1168\":1,\"1169\":1,\"1171\":1,\"1172\":2,\"1173\":1,\"1186\":2,\"1187\":2,\"1330\":1,\"1499\":1,\"1505\":2,\"1538\":1,\"1568\":3,\"1647\":1,\"2016\":1,\"2385\":1}}],[\"py\",{\"1\":{\"110\":3,\"114\":1,\"465\":6,\"480\":1,\"509\":1,\"510\":2,\"513\":3,\"514\":3,\"515\":4,\"516\":2,\"517\":2,\"518\":1,\"620\":3,\"624\":1,\"980\":6,\"995\":1,\"1024\":1,\"1025\":2,\"1028\":3,\"1029\":3,\"1030\":4,\"1031\":2,\"1032\":2,\"1033\":1,\"1135\":3,\"1139\":1,\"1495\":6,\"1510\":1,\"1539\":1,\"1540\":2,\"1543\":3,\"1544\":3,\"1545\":4,\"1546\":2,\"1547\":2,\"1548\":1,\"2686\":4,\"2701\":4,\"2716\":4}}],[\"pylance\",{\"1\":{\"3\":1,\"8\":1,\"10\":5,\"15\":1,\"20\":1,\"22\":5,\"27\":1,\"32\":1,\"34\":5}}],[\"pyright\",{\"1\":{\"3\":1,\"8\":1,\"15\":1,\"20\":1,\"27\":1,\"32\":1}}],[\"999999\",{\"1\":{\"2686\":1,\"2701\":1,\"2716\":1}}],[\"9492159f98f7\",{\"1\":{\"1931\":1,\"2300\":1,\"2669\":1}}],[\"9\",{\"1\":{\"0\":1,\"12\":1,\"24\":1,\"2697\":2,\"2712\":2,\"2727\":2}}],[\"3306\",{\"1\":{\"2697\":6,\"2712\":6,\"2727\":6}}],[\"3600\",{\"1\":{\"1938\":1,\"2307\":1,\"2676\":1}}],[\"32\",{\"1\":{\"1894\":1,\"2263\":1,\"2632\":1}}],[\"30\",{\"1\":{\"457\":2,\"972\":2,\"1487\":2,\"1938\":1,\"2307\":1,\"2676\":1}}],[\"3\",{\"1\":{\"0\":1,\"12\":1,\"24\":1,\"58\":1,\"78\":1,\"319\":1,\"363\":1,\"431\":1,\"472\":1,\"568\":1,\"588\":1,\"832\":1,\"878\":1,\"946\":1,\"987\":1,\"1083\":1,\"1103\":1,\"1347\":1,\"1393\":1,\"1461\":1,\"1502\":1,\"1612\":1,\"1908\":1,\"1910\":1,\"1981\":1,\"2277\":1,\"2279\":1,\"2350\":1,\"2646\":1,\"2648\":1,\"2697\":10,\"2712\":10,\"2727\":10,\"2749\":1,\"2750\":1,\"2751\":1}}],[\"仅存储一个值\",{\"1\":{\"1901\":1,\"2270\":1,\"2639\":1}}],[\"仅执行一次\",{\"1\":{\"1863\":1,\"1864\":1,\"1865\":1,\"1866\":1,\"1867\":1,\"1868\":1,\"1869\":1,\"1870\":1,\"1871\":1,\"1872\":1,\"1873\":1,\"1874\":1,\"1875\":1,\"1877\":1,\"1878\":1,\"1880\":1,\"1881\":1,\"1882\":1,\"1883\":1,\"1884\":1,\"1885\":1,\"1886\":1,\"1887\":1,\"1888\":1,\"1889\":1,\"1890\":1,\"1891\":1,\"1892\":1,\"2232\":1,\"2233\":1,\"2234\":1,\"2235\":1,\"2236\":1,\"2237\":1,\"2238\":1,\"2239\":1,\"2240\":1,\"2241\":1,\"2242\":1,\"2243\":1,\"2244\":1,\"2246\":1,\"2247\":1,\"2249\":1,\"2250\":1,\"2251\":1,\"2252\":1,\"2253\":1,\"2254\":1,\"2255\":1,\"2256\":1,\"2257\":1,\"2258\":1,\"2259\":1,\"2260\":1,\"2261\":1,\"2601\":1,\"2602\":1,\"2603\":1,\"2604\":1,\"2605\":1,\"2606\":1,\"2607\":1,\"2608\":1,\"2609\":1,\"2610\":1,\"2611\":1,\"2612\":1,\"2613\":1,\"2615\":1,\"2616\":1,\"2618\":1,\"2619\":1,\"2620\":1,\"2621\":1,\"2622\":1,\"2623\":1,\"2624\":1,\"2625\":1,\"2626\":1,\"2627\":1,\"2628\":1,\"2629\":1,\"2630\":1}}],[\"仅在已声明插件的情况下可使用标识符\",{\"1\":{\"1823\":1,\"2192\":1,\"2561\":1}}],[\"仅在需要同时捕获不同类型事件时使用\",{\"1\":{\"340\":1,\"341\":1,\"342\":1,\"343\":1,\"855\":1,\"856\":1,\"857\":1,\"858\":1,\"1370\":1,\"1371\":1,\"1372\":1,\"1373\":1}}],[\"仅能使用\",{\"1\":{\"533\":1,\"1048\":1,\"1563\":1}}],[\"仅需要判断是否相等\",{\"1\":{\"1900\":1,\"2269\":1,\"2638\":1}}],[\"仅需要对插件进行简单的配置即可使用\",{\"1\":{\"446\":1,\"961\":1,\"1476\":1}}],[\"仅需完成环境配置及插件安装\",{\"1\":{\"0\":1,\"12\":1,\"24\":1}}],[\"仅用于\",{\"1\":{\"110\":1,\"620\":1,\"1135\":1}}],[\"仅支持\",{\"1\":{\"0\":1,\"12\":1,\"24\":1}}],[\"概览\",{\"0\":{\"0\":1,\"12\":1,\"24\":1}}]],\"version\":2}}")).map(([e,t])=>[e,It(t,{fields:["h","t","c"],storeFields:["h","t","c"]})]));self.onmessage=({data:{type:e="all",query:t,locale:s,options:n,id:o}})=>{const r=Ct[s];e==="suggest"?self.postMessage([e,o,et(t,r,n)]):e==="search"?self.postMessage([e,o,tt(t,r,n)]):self.postMessage({suggestions:[e,o,et(t,r,n)],results:[e,o,tt(t,r,n)]})};
//# sourceMappingURL=index.js.map
