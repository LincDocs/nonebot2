[...new Array(6)].map((e,t)=>`[vp-content] h${t+1}`).join(",");const{entries:$}=Object,{fromEntries:st}=Object,nt="ENTRIES",D="KEYS",W="VALUES",_="";class S{set;_type;_path;constructor(t,s){const n=t._tree,o=Array.from(n.keys());this.set=t,this._type=s,this._path=o.length>0?[{node:n,keys:o}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:s}=b(this._path);if(b(s)===_)return{done:!1,value:this.result()};const n=t.get(b(s));return this._path.push({node:n,keys:Array.from(n.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=b(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>b(t)).filter(t=>t!==_).join("")}value(){return b(this._path).node.get(_)}result(){switch(this._type){case W:return this.value();case D:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const b=e=>e[e.length-1],ot=(e,t,s)=>{const n=new Map;if(typeof t!="string")return n;const o=t.length+1,r=o+s,i=new Uint8Array(r*o).fill(s+1);for(let c=0;c<o;++c)i[c]=c;for(let c=1;c<r;++c)i[c*o]=c;return q(e,t,s,n,i,1,o,""),n},q=(e,t,s,n,o,r,i,c)=>{const l=r*i;t:for(const u of e.keys())if(u===_){const h=o[l-1];h<=s&&n.set(c,[e.get(u),h])}else{let h=r;for(let f=0;f<u.length;++f,++h){const m=u[f],g=i*h,y=g-i;let d=o[g];const a=Math.max(0,h-s-1),w=Math.min(i-1,h+s);for(let p=a;p<w;++p){const O=m!==t[p],C=o[y+p]+ +O,k=o[y+p+1]+1,x=o[g+p]+1,v=o[g+p+1]=Math.min(C,k,x);v<d&&(d=v)}if(d>s)continue t}q(e.get(u),t,s,n,o,h,i,c+u)}};class z{_tree;_prefix;_size=void 0;constructor(t=new Map,s=""){this._tree=t,this._prefix=s}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[s,n]=I(this._tree,t.slice(this._prefix.length));if(s===void 0){const[o,r]=L(n);for(const i of o.keys())if(i!==_&&i.startsWith(r)){const c=new Map;return c.set(i.slice(r.length),o.get(i)),new z(c,t)}}return new z(s,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,rt(this._tree,t)}entries(){return new S(this,nt)}forEach(t){for(const[s,n]of this)t(s,n,this)}fuzzyGet(t,s){return ot(this._tree,t,s)}get(t){const s=F(this._tree,t);return s!==void 0?s.get(_):void 0}has(t){return F(this._tree,t)?.has(_)??!1}keys(){return new S(this,D)}set(t,s){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,E(this._tree,t).set(_,s),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=E(this._tree,t);return n.set(_,s(n.get(_))),this}fetch(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=E(this._tree,t);let o=n.get(_);return o===void 0&&n.set(_,o=s()),o}values(){return new S(this,W)}[Symbol.iterator](){return this.entries()}static from(t){const s=new z;for(const[n,o]of t)s.set(n,o);return s}static fromObject(t){return z.from(Object.entries(t))}}const I=(e,t,s=[])=>{if(t.length===0||e==null)return[e,s];for(const n of e.keys())if(n!==_&&t.startsWith(n))return s.push([e,n]),I(e.get(n),t.slice(n.length),s);return s.push([e,t]),I(void 0,"",s)},F=(e,t)=>{if(t.length===0||!e)return e;for(const s of e.keys())if(s!==_&&t.startsWith(s))return F(e.get(s),t.slice(s.length))},E=(e,t)=>{const s=t.length;t:for(let n=0;e&&n<s;){for(const r of e.keys())if(r!==_&&t[n]===r[0]){const i=Math.min(s-n,r.length);let c=1;for(;c<i&&t[n+c]===r[c];)++c;const l=e.get(r);if(c===r.length)e=l;else{const u=new Map;u.set(r.slice(c),l),e.set(t.slice(n,n+c),u),e.delete(r),e=u}n+=c;continue t}const o=new Map;return e.set(t.slice(n),o),o}return e},rt=(e,t)=>{const[s,n]=I(e,t);if(s!==void 0){if(s.delete(_),s.size===0)A(n);else if(s.size===1){const[o,r]=s.entries().next().value;R(n,o,r)}}},A=e=>{if(e.length===0)return;const[t,s]=L(e);if(t.delete(s),t.size===0)A(e.slice(0,-1));else if(t.size===1){const[n,o]=t.entries().next().value;n!==_&&R(e.slice(0,-1),n,o)}},R=(e,t,s)=>{if(e.length===0)return;const[n,o]=L(e);n.set(o+t,s),n.delete(o)},L=e=>e[e.length-1],it=(e,t)=>{const s=e._idToShortId.get(t);if(s!=null)return e._storedFields.get(s)},ct=/[\n\r\p{Z}\p{P}]+/u,j="or",N="and",ut="and_not",ht=(e,t)=>{e.includes(t)||e.push(t)},P=(e,t)=>{for(const s of t)e.includes(s)||e.push(s)},B=({score:e},{score:t})=>t-e,lt=()=>new Map,M=e=>{const t=new Map;for(const s of Object.keys(e))t.set(parseInt(s,10),e[s]);return t},G=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,H={[j]:(e,t)=>{for(const s of t.keys()){const n=e.get(s);if(n==null)e.set(s,t.get(s));else{const{score:o,terms:r,match:i}=t.get(s);n.score=n.score+o,n.match=Object.assign(n.match,i),P(n.terms,r)}}return e},[N]:(e,t)=>{const s=new Map;for(const n of t.keys()){const o=e.get(n);if(o==null)continue;const{score:r,terms:i,match:c}=t.get(n);P(o.terms,i),s.set(n,{score:o.score+r,terms:o.terms,match:Object.assign(o.match,c)})}return s},[ut]:(e,t)=>{for(const s of t.keys())e.delete(s);return e}},dt=(e,t,s,n,o,r)=>{const{k:i,b:c,d:l}=r;return Math.log(1+(s-t+.5)/(t+.5))*(l+e*(i+1)/(e+i*(1-c+c*n/o)))},at=e=>(t,s,n)=>({term:t,fuzzy:typeof e.fuzzy=="function"?e.fuzzy(t,s,n):e.fuzzy??!1,prefix:typeof e.prefix=="function"?e.prefix(t,s,n):e.prefix===!0,termBoost:typeof e.boostTerm=="function"?e.boostTerm(t,s,n):1}),J=(e,t,s,n)=>{for(const o of Object.keys(e._fieldIds))if(e._fieldIds[o]===s){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${n}" was not present in field "${o}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},ft=(e,t,s,n)=>{if(!e._index.has(n)){J(e,s,t,n);return}const o=e._index.fetch(n,lt),r=o.get(t),i=r?.get(s);!r||typeof i>"u"?J(e,s,t,n):i<=1?r.size<=1?o.delete(t):r.delete(s):r.set(s,i-1),e._index.get(n).size===0&&e._index.delete(n)},mt={k:1.2,b:.7,d:.5},gt={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(ct),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{console?.[e]?.(t)},autoVacuum:!0},Y={combineWith:j,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:mt},pt={combineWith:N,prefix:(e,t,s)=>t===s.length-1},_t={batchSize:1e3,batchWait:10},K={minDirtFactor:.1,minDirtCount:20},yt={..._t,...K},U=Symbol("*"),wt=(e,t)=>{const s=new Map,n={...e._options.searchOptions,...t};for(const[o,r]of e._documentIds){const i=n.boostDocument?n.boostDocument(r,"",e._storedFields.get(o)):1;s.set(o,{score:i,terms:[],match:{}})}return s},Q=(e,t=j)=>{if(e.length===0)return new Map;const s=t.toLowerCase();if(!(s in H))throw new Error(`Invalid combination operator: ${t}`);return e.reduce(H[s])},T=(e,t,s,n,o,r,i,c,l,u=new Map)=>{if(r==null)return u;for(const h of Object.keys(i)){const f=i[h],m=e._fieldIds[h],g=r.get(m);if(g==null)continue;let y=g.size;const d=e._avgFieldLength[m];for(const a of g.keys()){if(!e._documentIds.has(a)){ft(e,m,a,s),y-=1;continue}const w=c?c(e._documentIds.get(a),s,e._storedFields.get(a)):1;if(!w)continue;const p=g.get(a),O=e._fieldLength.get(a)[m],C=dt(p,y,e._documentCount,O,d,l),k=n*o*f*w*C,x=u.get(a);if(x){x.score+=k,ht(x.terms,t);const v=G(x.match,s);v?v.push(h):x.match[s]=[h]}else u.set(a,{score:k,terms:[t],match:{[s]:[h]}})}}return u},xt=(e,t,s)=>{const n={...e._options.searchOptions,...s},o=(n.fields??e._options.fields).reduce((d,a)=>({...d,[a]:G(n.boost,a)||1}),{}),{boostDocument:r,weights:i,maxFuzzy:c,bm25:l}=n,{fuzzy:u,prefix:h}={...Y.weights,...i},f=e._index.get(t.term),m=T(e,t.term,t.term,1,t.termBoost,f,o,r,l);let g,y;if(t.prefix&&(g=e._index.atPrefix(t.term)),t.fuzzy){const d=t.fuzzy===!0?.2:t.fuzzy,a=d<1?Math.min(c,Math.round(t.term.length*d)):d;a&&(y=e._index.fuzzyGet(t.term,a))}if(g)for(const[d,a]of g){const w=d.length-t.term.length;if(!w)continue;y?.delete(d);const p=h*d.length/(d.length+.3*w);T(e,t.term,d,p,t.termBoost,a,o,r,l,m)}if(y)for(const d of y.keys()){const[a,w]=y.get(d);if(!w)continue;const p=u*d.length/(d.length+w);T(e,t.term,d,p,t.termBoost,a,o,r,l,m)}return m},X=(e,t,s={})=>{if(t===U)return wt(e,s);if(typeof t!="string"){const h={...s,...t,queries:void 0},f=t.queries.map(m=>X(e,m,h));return Q(f,h.combineWith)}const{tokenize:n,processTerm:o,searchOptions:r}=e._options,i={tokenize:n,processTerm:o,...r,...s},{tokenize:c,processTerm:l}=i,u=c(t).flatMap(h=>l(h)).filter(h=>!!h).map(at(i)).map(h=>xt(e,h,i));return Q(u,i.combineWith)},Z=(e,t,s={})=>{const{searchOptions:n}=e._options,o={...n,...s},r=X(e,t,s),i=[];for(const[c,{score:l,terms:u,match:h}]of r){const f=u.length||1,m={id:e._documentIds.get(c),score:l*f,terms:Object.keys(h),queryTerms:u,match:h};Object.assign(m,e._storedFields.get(c)),(o.filter==null||o.filter(m))&&i.push(m)}return t===U&&o.boostDocument==null||i.sort(B),i},zt=(e,t,s={})=>{s={...e._options.autoSuggestOptions,...s};const n=new Map;for(const{score:r,terms:i}of Z(e,t,s)){const c=i.join(" "),l=n.get(c);l!=null?(l.score+=r,l.count+=1):n.set(c,{score:r,terms:i,count:1})}const o=[];for(const[r,{score:i,terms:c,count:l}]of n)o.push({suggestion:r,terms:c,score:i/l});return o.sort(B),o};class bt{_options;_index;_documentCount;_documentIds;_idToShortId;_fieldIds;_fieldLength;_avgFieldLength;_nextId;_storedFields;_dirtCount;_currentVacuum;_enqueuedVacuum;_enqueuedVacuumConditions;constructor(t){if(!t?.fields)throw new Error('SlimSearch: option "fields" must be provided');const s=t.autoVacuum==null||t.autoVacuum===!0?yt:t.autoVacuum;this._options={...gt,...t,autoVacuum:s,searchOptions:{...Y,...t.searchOptions},autoSuggestOptions:{...pt,...t.autoSuggestOptions}},this._index=new z,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=K,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[s,n]of this._index){const o={};for(const[r,i]of n)o[r]=Object.fromEntries(i);t.push([s,o])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,version:2}}addFields(t){for(let s=0;s<t.length;s++)this._fieldIds[t[s]]=s}}const vt=e=>new bt(e),kt=({documentCount:e,nextId:t,fieldIds:s,averageFieldLength:n,dirtCount:o,version:r},i)=>{if(r!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const c=vt(i);return c._documentCount=e,c._nextId=t,c._idToShortId=new Map,c._fieldIds=s,c._avgFieldLength=n,c._dirtCount=o??0,c._index=new z,c},It=(e,t)=>{const{index:s,documentIds:n,fieldLength:o,storedFields:r}=e,i=kt(e,t);i._documentIds=M(n),i._fieldLength=M(o),i._storedFields=M(r);for(const[c,l]of i._documentIds)i._idToShortId.set(l,c);for(const[c,l]of s){const u=new Map;for(const h of Object.keys(l))u.set(parseInt(h,10),M(l[h]));i._index.set(c,u)}return i},V=(e,t)=>{const s=e.toLowerCase(),n=t.toLowerCase(),o=[];let r=0,i=0;const c=(u,h=!1)=>{let f;i===0?f=u.length>20?`… ${u.slice(-20)}`:u:h?f=u.length+i>100?`${u.slice(0,100-i)}… `:u:f=u.length>20?`${u.slice(0,20)} … ${u.slice(-20)}`:u,f&&o.push(f),i+=f.length,h||(o.push(["mark",t]),i+=t.length,i>=100&&o.push(" …"))};let l=s.indexOf(n,r);if(l===-1)return null;for(;l>=0;){const u=l+n.length;if(c(e.slice(r,l)),r=u,i>100)break;l=s.indexOf(n,r)}return i<100&&c(e.slice(r),!0),o},Mt=(e,t)=>t.contents.reduce((s,[,n])=>s+n,0)-e.contents.reduce((s,[,n])=>s+n,0),Ot=(e,t)=>Math.max(...t.contents.map(([,s])=>s))-Math.max(...e.contents.map(([,s])=>s)),tt=(e,t,s={})=>{const n={};return Z(t,e,{boost:{h:2,t:1,c:4},prefix:!0,...s}).forEach(o=>{const{id:r,terms:i,score:c}=o,l=r.includes("@"),u=r.includes("#"),[h,f]=r.split(/[#@]/),m=Number(h),g=i.sort((d,a)=>d.length-a.length).filter((d,a)=>i.slice(a+1).every(w=>!w.includes(d))),{contents:y}=n[m]??={title:"",contents:[]};if(l)y.push([{type:"customField",id:m,index:f,display:g.map(d=>o.c.map(a=>V(a,d))).flat().filter(d=>d!==null)},c]);else{const d=g.map(a=>V(o.h,a)).filter(a=>a!==null);if(d.length&&y.push([{type:u?"heading":"title",id:m,...u&&{anchor:f},display:d},c]),"t"in o&&o.t)for(const a of o.t){const w=g.map(p=>V(a,p)).filter(p=>p!==null);w.length&&y.push([{type:"text",id:m,...u&&{anchor:f},display:w},c])}}}),$(n).sort(([,o],[,r])=>"max"==="total"?Mt(o,r):Ot(o,r)).map(([o,{title:r,contents:i}])=>{if(!r){const c=it(t,o);c&&(r=c.h)}return{title:r,contents:i.map(([c])=>c)}})},et=(e,t,s={})=>{const n=zt(t,e,{fuzzy:.2,maxFuzzy:3,...s}).map(({suggestion:o})=>o);return e.includes(" ")?n:n.filter(o=>!o.includes(" "))},Ct=st($(JSON.parse("{\"/\":{\"documentCount\":2777,\"nextId\":2777,\"documentIds\":{\"0\":\"0\",\"1\":\"0#特色\",\"2\":\"0#异步优先\",\"3\":\"0#完整的类型注解\",\"4\":\"0#开箱即用\",\"5\":\"0#插件系统\",\"6\":\"0#依赖注入系统\",\"7\":\"0#什么是依赖注入\",\"8\":\"1\",\"9\":\"1#编辑器推荐配置\",\"10\":\"1#visual-studio-code\",\"11\":\"1#其他\",\"12\":\"2\",\"13\":\"2#特色\",\"14\":\"2#异步优先\",\"15\":\"2#完整的类型注解\",\"16\":\"2#开箱即用\",\"17\":\"2#插件系统\",\"18\":\"2#依赖注入系统\",\"19\":\"2#什么是依赖注入\",\"20\":\"3\",\"21\":\"3#编辑器推荐配置\",\"22\":\"3#visual-studio-code\",\"23\":\"3#其他\",\"24\":\"4\",\"25\":\"4#特色\",\"26\":\"4#异步优先\",\"27\":\"4#完整的类型注解\",\"28\":\"4#开箱即用\",\"29\":\"4#插件系统\",\"30\":\"4#依赖注入系统\",\"31\":\"4#什么是依赖注入\",\"32\":\"5\",\"33\":\"5#编辑器推荐配置\",\"34\":\"5#visual-studio-code\",\"35\":\"5#其他\",\"36\":\"6\",\"37\":\"6#适配器功能与组成\",\"38\":\"6#注册适配器\",\"39\":\"6#获取已注册的适配器\",\"40\":\"6#获取-bot-对象\",\"41\":\"6#获取事件通用信息\",\"42\":\"6#事件类型\",\"43\":\"6#事件名称\",\"44\":\"6#事件描述\",\"45\":\"6#事件日志字符串\",\"46\":\"6#事件主体-id\",\"47\":\"6#事件会话-id\",\"48\":\"6#事件消息\",\"49\":\"6#事件纯文本消息\",\"50\":\"6#事件是否与机器人有关\",\"51\":\"6#更多\",\"52\":\"7\",\"53\":\"7#驱动器类型\",\"54\":\"7#配置驱动器\",\"55\":\"7#获取驱动器\",\"56\":\"7#内置驱动器\",\"57\":\"7#none\",\"58\":\"7#fastapi-默认\",\"59\":\"7#fastapi-配置项\",\"60\":\"7#fastapi-openapi-url\",\"61\":\"7#fastapi-docs-url\",\"62\":\"7#fastapi-redoc-url\",\"63\":\"7#fastapi-include-adapter-schema\",\"64\":\"7#fastapi-reload\",\"65\":\"7#fastapi-reload-dirs\",\"66\":\"7#fastapi-reload-delay\",\"67\":\"7#fastapi-reload-includes\",\"68\":\"7#fastapi-reload-excludes\",\"69\":\"7#fastapi-extra\",\"70\":\"7#quart\",\"71\":\"7#quart-配置项\",\"72\":\"7#quart-reload\",\"73\":\"7#quart-reload-dirs\",\"74\":\"7#quart-reload-delay\",\"75\":\"7#quart-reload-includes\",\"76\":\"7#quart-reload-excludes\",\"77\":\"7#quart-extra\",\"78\":\"7#httpx\",\"79\":\"7#websockets\",\"80\":\"7#aiohttp\",\"81\":\"8\",\"82\":\"8#编写存储提供者\",\"83\":\"8#设置存储提供者\",\"84\":\"9\",\"85\":\"9#事件响应器组成\",\"86\":\"9#事件响应器类型\",\"87\":\"9#事件触发权限\",\"88\":\"9#事件响应规则\",\"89\":\"9#响应优先级\",\"90\":\"9#阻断\",\"91\":\"9#有效期\",\"92\":\"9#默认状态\",\"93\":\"9#基本辅助函数\",\"94\":\"9#内置响应规则\",\"95\":\"9#startswith\",\"96\":\"9#endswith\",\"97\":\"9#fullmatch\",\"98\":\"9#keyword\",\"99\":\"9#command\",\"100\":\"9#shell-command\",\"101\":\"9#regex\",\"102\":\"9#to-me\",\"103\":\"9#is-type\",\"104\":\"9#响应器组\",\"105\":\"9#commandgroup\",\"106\":\"9#matchergroup\",\"107\":\"9#第三方响应规则\",\"108\":\"9#alconna\",\"109\":\"10\",\"110\":\"10#插件元数据\",\"111\":\"10#获取插件信息\",\"112\":\"11\",\"113\":\"11#创建嵌套插件\",\"114\":\"11#已有插件\",\"115\":\"12\",\"116\":\"12#插件跟踪\",\"117\":\"12#插件依赖声明\",\"118\":\"13\",\"119\":\"13#通过兼容层添加路由\",\"120\":\"13#http-路由\",\"121\":\"13#websocket-路由\",\"122\":\"13#使用-asgi-应用添加路由\",\"123\":\"13#获取-asgi-应用\",\"124\":\"13#添加路由规则\",\"125\":\"14\",\"126\":\"14#全局钩子函数\",\"127\":\"14#启动准备\",\"128\":\"14#终止处理\",\"129\":\"14#bot-连接处理\",\"130\":\"14#bot-断开处理\",\"131\":\"14#事件处理钩子函数\",\"132\":\"14#事件预处理\",\"133\":\"14#事件后处理\",\"134\":\"14#运行预处理\",\"135\":\"14#运行后处理\",\"136\":\"14#平台接口调用钩子\",\"137\":\"14#平台接口调用后钩子\",\"138\":\"15\",\"139\":\"15#更新事件响应器类型\",\"140\":\"15#更新事件触发权限\",\"141\":\"16\",\"142\":\"16#Required\",\"143\":\"16#PydanticUndefined\",\"144\":\"16#PydanticUndefinedType\",\"145\":\"16#DEFAULT-CONFIG\",\"146\":\"16#FieldInfo\",\"147\":\"16#FieldInfo-extra\",\"148\":\"16#ModelField\",\"149\":\"16#ModelField-name\",\"150\":\"16#ModelField-annotation\",\"151\":\"16#ModelField-field-info\",\"152\":\"16#ModelField-construct\",\"153\":\"16#ModelField-get-default\",\"154\":\"16#ModelField-validate-value\",\"155\":\"16#extract-field-info\",\"156\":\"16#model-fields\",\"157\":\"16#model-config\",\"158\":\"16#model-dump\",\"159\":\"16#type-validate-python\",\"160\":\"16#type-validate-json\",\"161\":\"16#custom-validation\",\"162\":\"17\",\"163\":\"17#Env\",\"164\":\"17#Env-environment\",\"165\":\"17#Config\",\"166\":\"17#Config-driver\",\"167\":\"17#Config-host\",\"168\":\"17#Config-port\",\"169\":\"17#Config-log-level\",\"170\":\"17#Config-api-timeout\",\"171\":\"17#Config-superusers\",\"172\":\"17#Config-nickname\",\"173\":\"17#Config-command-start\",\"174\":\"17#Config-command-sep\",\"175\":\"17#Config-session-expire-timeout\",\"176\":\"18\",\"177\":\"18#RECEIVE-KEY\",\"178\":\"18#LAST-RECEIVE-KEY\",\"179\":\"18#ARG-KEY\",\"180\":\"18#REJECT-TARGET\",\"181\":\"18#REJECT-CACHE-TARGET\",\"182\":\"18#PREFIX-KEY\",\"183\":\"18#CMD-KEY\",\"184\":\"18#RAW-CMD-KEY\",\"185\":\"18#CMD-ARG-KEY\",\"186\":\"18#CMD-START-KEY\",\"187\":\"18#CMD-WHITESPACE-KEY\",\"188\":\"18#SHELL-ARGS\",\"189\":\"18#SHELL-ARGV\",\"190\":\"18#REGEX-MATCHED\",\"191\":\"18#STARTSWITH-KEY\",\"192\":\"18#ENDSWITH-KEY\",\"193\":\"18#FULLMATCH-KEY\",\"194\":\"18#KEYWORD-KEY\",\"195\":\"19\",\"196\":\"19#NoneBotException\",\"197\":\"19#ParserExit\",\"198\":\"19#ProcessException\",\"199\":\"19#IgnoredException\",\"200\":\"19#SkippedException\",\"201\":\"19#TypeMisMatch\",\"202\":\"19#MockApiException\",\"203\":\"19#StopPropagation\",\"204\":\"19#MatcherException\",\"205\":\"19#PausedException\",\"206\":\"19#RejectedException\",\"207\":\"19#FinishedException\",\"208\":\"19#AdapterException\",\"209\":\"19#NoLogException\",\"210\":\"19#ApiNotAvailable\",\"211\":\"19#NetworkError\",\"212\":\"19#ActionFailed\",\"213\":\"19#DriverException\",\"214\":\"19#WebSocketClosed\",\"215\":\"20\",\"216\":\"20#快捷导入\",\"217\":\"20#get-driver\",\"218\":\"20#get-adapter\",\"219\":\"20#get-adapters\",\"220\":\"20#get-app\",\"221\":\"20#get-asgi\",\"222\":\"20#get-bot\",\"223\":\"20#get-bots\",\"224\":\"20#init\",\"225\":\"20#run\",\"226\":\"21\",\"227\":\"21#logger\",\"228\":\"21#LoguruHandler\",\"229\":\"21#LoguruHandler-emit\",\"230\":\"21#default-filter\",\"231\":\"21#default-format\",\"232\":\"22\",\"233\":\"22#Matcher\",\"234\":\"22#Matcher-type\",\"235\":\"22#Matcher-rule\",\"236\":\"22#Matcher-permission\",\"237\":\"22#Matcher-handlers\",\"238\":\"22#Matcher-priority\",\"239\":\"22#Matcher-block\",\"240\":\"22#Matcher-temp\",\"241\":\"22#Matcher-expire-time\",\"242\":\"22#Matcher-new\",\"243\":\"22#Matcher-destroy\",\"244\":\"22#Matcher-check-perm\",\"245\":\"22#Matcher-check-rule\",\"246\":\"22#Matcher-type-updater\",\"247\":\"22#Matcher-permission-updater\",\"248\":\"22#Matcher-append-handler\",\"249\":\"22#Matcher-handle\",\"250\":\"22#Matcher-receive\",\"251\":\"22#Matcher-got\",\"252\":\"22#Matcher-send\",\"253\":\"22#Matcher-finish\",\"254\":\"22#Matcher-pause\",\"255\":\"22#Matcher-reject\",\"256\":\"22#Matcher-reject-arg\",\"257\":\"22#Matcher-reject-receive\",\"258\":\"22#Matcher-skip\",\"259\":\"22#Matcher-get-receive\",\"260\":\"22#Matcher-set-receive\",\"261\":\"22#Matcher-get-last-receive\",\"262\":\"22#Matcher-get-arg\",\"263\":\"22#Matcher-set-arg\",\"264\":\"22#Matcher-set-target\",\"265\":\"22#Matcher-get-target\",\"266\":\"22#Matcher-stop-propagation\",\"267\":\"22#Matcher-update-type\",\"268\":\"22#Matcher-update-permission\",\"269\":\"22#Matcher-resolve-reject\",\"270\":\"22#Matcher-ensure-context\",\"271\":\"22#Matcher-simple-run\",\"272\":\"22#Matcher-run\",\"273\":\"22#matchers\",\"274\":\"22#MatcherManager\",\"275\":\"22#MatcherManager-keys\",\"276\":\"22#MatcherManager-values\",\"277\":\"22#MatcherManager-items\",\"278\":\"22#MatcherManager-get\",\"279\":\"22#MatcherManager-pop\",\"280\":\"22#MatcherManager-popitem\",\"281\":\"22#MatcherManager-clear\",\"282\":\"22#MatcherManager-update\",\"283\":\"22#MatcherManager-setdefault\",\"284\":\"22#MatcherManager-set-provider\",\"285\":\"22#MatcherProvider\",\"286\":\"22#DEFAULT-PROVIDER-CLASS\",\"287\":\"23\",\"288\":\"23#event-preprocessor\",\"289\":\"23#event-postprocessor\",\"290\":\"23#run-preprocessor\",\"291\":\"23#run-postprocessor\",\"292\":\"23#check-and-run-matcher\",\"293\":\"23#handle-event\",\"294\":\"24\",\"295\":\"24#Arg\",\"296\":\"24#ArgStr\",\"297\":\"24#Depends\",\"298\":\"24#ArgParam\",\"299\":\"24#BotParam\",\"300\":\"24#EventParam\",\"301\":\"24#StateParam\",\"302\":\"24#DependParam\",\"303\":\"24#ArgPlainText\",\"304\":\"24#DefaultParam\",\"305\":\"24#MatcherParam\",\"306\":\"24#ExceptionParam\",\"307\":\"24#EventType\",\"308\":\"24#EventMessage\",\"309\":\"24#EventPlainText\",\"310\":\"24#EventToMe\",\"311\":\"24#Command\",\"312\":\"24#RawCommand\",\"313\":\"24#CommandArg\",\"314\":\"24#CommandStart\",\"315\":\"24#CommandWhitespace\",\"316\":\"24#ShellCommandArgs\",\"317\":\"24#ShellCommandArgv\",\"318\":\"24#RegexMatched\",\"319\":\"24#RegexStr\",\"320\":\"24#RegexGroup\",\"321\":\"24#RegexDict\",\"322\":\"24#Startswith\",\"323\":\"24#Endswith\",\"324\":\"24#Fullmatch\",\"325\":\"24#Keyword\",\"326\":\"24#Received\",\"327\":\"24#LastReceived\",\"328\":\"25\",\"329\":\"25#USER\",\"330\":\"25#User\",\"331\":\"25#User-from-event\",\"332\":\"25#User-from-permission\",\"333\":\"25#Permission\",\"334\":\"25#Permission-checkers\",\"335\":\"25#Permission---call--\",\"336\":\"25#Message\",\"337\":\"25#Notice\",\"338\":\"25#Request\",\"339\":\"25#MetaEvent\",\"340\":\"25#MESSAGE\",\"341\":\"25#NOTICE\",\"342\":\"25#REQUEST\",\"343\":\"25#METAEVENT\",\"344\":\"25#SuperUser\",\"345\":\"25#SUPERUSER\",\"346\":\"26\",\"347\":\"26#Rule\",\"348\":\"26#Rule-checkers\",\"349\":\"26#Rule---call--\",\"350\":\"26#CMD-RESULT\",\"351\":\"26#TRIE-VALUE\",\"352\":\"26#StartswithRule\",\"353\":\"26#startswith\",\"354\":\"26#EndswithRule\",\"355\":\"26#endswith\",\"356\":\"26#FullmatchRule\",\"357\":\"26#fullmatch\",\"358\":\"26#KeywordsRule\",\"359\":\"26#keyword\",\"360\":\"26#CommandRule\",\"361\":\"26#command\",\"362\":\"26#ArgumentParser\",\"363\":\"26#ArgumentParser-parse-known-args\",\"364\":\"26#ShellCommandRule\",\"365\":\"26#shell-command\",\"366\":\"26#RegexRule\",\"367\":\"26#regex\",\"368\":\"26#ToMeRule\",\"369\":\"26#to-me\",\"370\":\"26#IsTypeRule\",\"371\":\"26#is-type\",\"372\":\"27\",\"373\":\"27#overrides\",\"374\":\"27#type-has-args\",\"375\":\"27#origin-is-union\",\"376\":\"27#origin-is-literal\",\"377\":\"27#all-literal-values\",\"378\":\"27#origin-is-annotated\",\"379\":\"27#is-none-type\",\"380\":\"27#evaluate-forwardref\",\"381\":\"27#StateFlag\",\"382\":\"27#T-State\",\"383\":\"27#T-BotConnectionHook\",\"384\":\"27#T-BotDisconnectionHook\",\"385\":\"27#T-CallingAPIHook\",\"386\":\"27#T-CalledAPIHook\",\"387\":\"27#T-EventPreProcessor\",\"388\":\"27#T-EventPostProcessor\",\"389\":\"27#T-RunPreProcessor\",\"390\":\"27#T-RunPostProcessor\",\"391\":\"27#T-RuleChecker\",\"392\":\"27#T-PermissionChecker\",\"393\":\"27#T-Handler\",\"394\":\"27#T-TypeUpdater\",\"395\":\"27#T-PermissionUpdater\",\"396\":\"27#T-DependencyCache\",\"397\":\"28\",\"398\":\"28#escape-tag\",\"399\":\"28#deep-update\",\"400\":\"28#lenient-issubclass\",\"401\":\"28#generic-check-issubclass\",\"402\":\"28#type-is-complex\",\"403\":\"28#is-coroutine-callable\",\"404\":\"28#is-gen-callable\",\"405\":\"28#is-async-gen-callable\",\"406\":\"28#run-sync\",\"407\":\"28#run-sync-ctx-manager\",\"408\":\"28#run-coro-with-catch\",\"409\":\"28#get-name\",\"410\":\"28#path-to-module-name\",\"411\":\"28#resolve-dot-notation\",\"412\":\"28#classproperty\",\"413\":\"28#DataclassEncoder\",\"414\":\"28#DataclassEncoder-default\",\"415\":\"28#logger-wrapper\",\"416\":\"29\",\"417\":\"29#记录日志\",\"418\":\"29#自定义日志输出\",\"419\":\"29#重定向-logging-日志\",\"420\":\"30\",\"421\":\"30#事件类型\",\"422\":\"30#重载\",\"423\":\"31\",\"424\":\"31#rulechecker\",\"425\":\"31#rule\",\"426\":\"31#合并响应规则\",\"427\":\"31#主动使用响应规则\",\"428\":\"31#内置响应规则\",\"429\":\"32\",\"430\":\"33\",\"431\":\"34\",\"432\":\"34#安装插件\",\"433\":\"34#使用插件\",\"434\":\"34#配置项\",\"435\":\"34#localstore-use-cwd\",\"436\":\"34#localstore-cache-dir\",\"437\":\"34#localstore-data-dir\",\"438\":\"34#localstore-config-dir\",\"439\":\"34#localstore-plugin-cache-dir\",\"440\":\"34#localstore-plugin-data-dir\",\"441\":\"34#localstore-plugin-config-dir\",\"442\":\"35\",\"443\":\"35#安装插件\",\"444\":\"35#使用插件\",\"445\":\"35#获取-sentry-dsn\",\"446\":\"35#配置插件\",\"447\":\"35#配置项\",\"448\":\"36\",\"449\":\"36#安装插件\",\"450\":\"36#使用插件\",\"451\":\"36#导入调度器\",\"452\":\"36#添加定时任务\",\"453\":\"36#配置项\",\"454\":\"36#apscheduler-autostart\",\"455\":\"36#apscheduler-log-level\",\"456\":\"36#apscheduler-config\",\"457\":\"37\",\"458\":\"38\",\"459\":\"38#code-of-conduct\",\"460\":\"38#参与开发\",\"461\":\"38#鸣谢\",\"462\":\"39\",\"463\":\"39#组织结构\",\"464\":\"39#使用-nb-cli-创建项目\",\"465\":\"39#组成部分\",\"466\":\"39#log\",\"467\":\"39#config\",\"468\":\"39#adapter\",\"469\":\"39#与平台交互\",\"470\":\"39#客户端通信方式\",\"471\":\"39#服务端通信方式\",\"472\":\"39#建立-bot-连接\",\"473\":\"39#转换-event-事件\",\"474\":\"39#调用平台-api\",\"475\":\"39#bot\",\"476\":\"39#event\",\"477\":\"39#message\",\"478\":\"39#适配器测试\",\"479\":\"39#后续工作\",\"480\":\"40\",\"481\":\"40#nonebot-v1\",\"482\":\"40#更新-nonebot-v1-文档中的-指南-部分\",\"483\":\"40#nonebot-v1-api-文档自动生成\",\"484\":\"40#nonebot-v2\",\"485\":\"40#nonebot-v2-自动化测试框架-nonebug\",\"486\":\"40#nonebot-v2-telegram-适配器\",\"487\":\"40#nonebot-v2-飞书适配器\",\"488\":\"40#onebot\",\"489\":\"40#设计-onebot-v12-接口标准\",\"490\":\"40#实现-rust-版-libonebot\",\"491\":\"40#实现自选语言版-libonebot\",\"492\":\"41\",\"493\":\"41#nonebot2-命令行-cli-交互体验升级\",\"494\":\"41#nonebot2-命令行即时交互通信设计与实现\",\"495\":\"41#nonebot2-用户上手与深入教程设计\",\"496\":\"42\",\"497\":\"42#nonebot-项目管理图形化面板\",\"498\":\"42#nonebot-discord-适配器\",\"499\":\"42#nonebot-数据库支持插件\",\"500\":\"43\",\"501\":\"43#nonepress-官网组件库更新与优化\",\"502\":\"43#noneflow-社区自动化工作流管理优化\",\"503\":\"43#noneblockly-低代码框架开发\",\"504\":\"44\",\"505\":\"44#安装依赖\",\"506\":\"44#创建配置文件\",\"507\":\"44#创建入口文件\",\"508\":\"44#运行机器人\",\"509\":\"45\",\"510\":\"45#插件结构\",\"511\":\"45#单文件插件\",\"512\":\"45#包插件\",\"513\":\"45#创建插件\",\"514\":\"45#加载插件\",\"515\":\"45#load-plugin\",\"516\":\"45#load-plugins\",\"517\":\"45#load-all-plugins\",\"518\":\"45#load-from-json\",\"519\":\"45#load-from-toml\",\"520\":\"45#load-builtin-plugin\",\"521\":\"45#load-builtin-plugins\",\"522\":\"45#其他加载方式\",\"523\":\"46\",\"524\":\"47\",\"525\":\"47#事件响应器辅助函数\",\"526\":\"47#创建事件响应器\",\"527\":\"47#为事件响应器添加参数\",\"528\":\"48\",\"529\":\"48#认识消息类型\",\"530\":\"48#消息序列-message\",\"531\":\"48#消息段-messagesegment\",\"532\":\"48#使用消息序列\",\"533\":\"48#构造消息序列\",\"534\":\"48#直接构造\",\"535\":\"48#运算构造\",\"536\":\"48#从字典数组构造\",\"537\":\"48#获取消息纯文本\",\"538\":\"48#遍历\",\"539\":\"48#比较\",\"540\":\"48#检查消息段\",\"541\":\"48#过滤、索引与切片\",\"542\":\"48#拼接消息\",\"543\":\"48#使用消息模板\",\"544\":\"49\",\"545\":\"49#适配器功能与组成\",\"546\":\"49#注册适配器\",\"547\":\"49#获取已注册的适配器\",\"548\":\"49#获取-bot-对象\",\"549\":\"49#获取事件通用信息\",\"550\":\"49#事件类型\",\"551\":\"49#事件名称\",\"552\":\"49#事件描述\",\"553\":\"49#事件日志字符串\",\"554\":\"49#事件主体-id\",\"555\":\"49#事件会话-id\",\"556\":\"49#事件消息\",\"557\":\"49#事件纯文本消息\",\"558\":\"49#事件是否与机器人有关\",\"559\":\"49#更多\",\"560\":\"50\",\"561\":\"50#驱动器类型\",\"562\":\"50#配置驱动器\",\"563\":\"50#获取驱动器\",\"564\":\"50#内置驱动器\",\"565\":\"50#none\",\"566\":\"50#fastapi-默认\",\"567\":\"50#fastapi-配置项\",\"568\":\"50#fastapi-openapi-url\",\"569\":\"50#fastapi-docs-url\",\"570\":\"50#fastapi-redoc-url\",\"571\":\"50#fastapi-include-adapter-schema\",\"572\":\"50#fastapi-reload\",\"573\":\"50#fastapi-reload-dirs\",\"574\":\"50#fastapi-reload-delay\",\"575\":\"50#fastapi-reload-includes\",\"576\":\"50#fastapi-reload-excludes\",\"577\":\"50#fastapi-extra\",\"578\":\"50#quart\",\"579\":\"50#quart-配置项\",\"580\":\"50#quart-reload\",\"581\":\"50#quart-reload-dirs\",\"582\":\"50#quart-reload-delay\",\"583\":\"50#quart-reload-includes\",\"584\":\"50#quart-reload-excludes\",\"585\":\"50#quart-extra\",\"586\":\"50#httpx\",\"587\":\"50#websockets\",\"588\":\"50#aiohttp\",\"589\":\"51\",\"590\":\"51#编写存储提供者\",\"591\":\"51#设置存储提供者\",\"592\":\"52\",\"593\":\"52#事件响应器组成\",\"594\":\"52#事件响应器类型\",\"595\":\"52#事件触发权限\",\"596\":\"52#事件响应规则\",\"597\":\"52#响应优先级\",\"598\":\"52#阻断\",\"599\":\"52#有效期\",\"600\":\"52#默认状态\",\"601\":\"52#基本辅助函数\",\"602\":\"52#内置响应规则\",\"603\":\"52#startswith\",\"604\":\"52#endswith\",\"605\":\"52#fullmatch\",\"606\":\"52#keyword\",\"607\":\"52#command\",\"608\":\"52#shell-command\",\"609\":\"52#regex\",\"610\":\"52#to-me\",\"611\":\"52#is-type\",\"612\":\"52#响应器组\",\"613\":\"52#commandgroup\",\"614\":\"52#matchergroup\",\"615\":\"52#第三方响应规则\",\"616\":\"52#alconna\",\"617\":\"53\",\"618\":\"53#插件元数据\",\"619\":\"53#获取插件信息\",\"620\":\"54\",\"621\":\"54#创建嵌套插件\",\"622\":\"54#已有插件\",\"623\":\"55\",\"624\":\"55#插件跟踪\",\"625\":\"55#插件依赖声明\",\"626\":\"56\",\"627\":\"56#通过兼容层添加路由\",\"628\":\"56#http-路由\",\"629\":\"56#websocket-路由\",\"630\":\"56#使用-asgi-应用添加路由\",\"631\":\"56#获取-asgi-应用\",\"632\":\"56#添加路由规则\",\"633\":\"57\",\"634\":\"57#全局钩子函数\",\"635\":\"57#启动准备\",\"636\":\"57#终止处理\",\"637\":\"57#bot-连接处理\",\"638\":\"57#bot-断开处理\",\"639\":\"57#事件处理钩子函数\",\"640\":\"57#事件预处理\",\"641\":\"57#事件后处理\",\"642\":\"57#运行预处理\",\"643\":\"57#运行后处理\",\"644\":\"57#平台接口调用钩子\",\"645\":\"57#平台接口调用后钩子\",\"646\":\"58\",\"647\":\"58#更新事件响应器类型\",\"648\":\"58#更新事件触发权限\",\"649\":\"59\",\"650\":\"59#Required\",\"651\":\"59#PydanticUndefined\",\"652\":\"59#PydanticUndefinedType\",\"653\":\"59#DEFAULT-CONFIG\",\"654\":\"59#FieldInfo\",\"655\":\"59#FieldInfo-extra\",\"656\":\"59#ModelField\",\"657\":\"59#ModelField-name\",\"658\":\"59#ModelField-annotation\",\"659\":\"59#ModelField-field-info\",\"660\":\"59#ModelField-construct\",\"661\":\"59#ModelField-get-default\",\"662\":\"59#ModelField-validate-value\",\"663\":\"59#extract-field-info\",\"664\":\"59#model-fields\",\"665\":\"59#model-config\",\"666\":\"59#model-dump\",\"667\":\"59#type-validate-python\",\"668\":\"59#type-validate-json\",\"669\":\"59#custom-validation\",\"670\":\"60\",\"671\":\"60#Env\",\"672\":\"60#Env-environment\",\"673\":\"60#Config\",\"674\":\"60#Config-driver\",\"675\":\"60#Config-host\",\"676\":\"60#Config-port\",\"677\":\"60#Config-log-level\",\"678\":\"60#Config-api-timeout\",\"679\":\"60#Config-superusers\",\"680\":\"60#Config-nickname\",\"681\":\"60#Config-command-start\",\"682\":\"60#Config-command-sep\",\"683\":\"60#Config-session-expire-timeout\",\"684\":\"61\",\"685\":\"61#RECEIVE-KEY\",\"686\":\"61#LAST-RECEIVE-KEY\",\"687\":\"61#ARG-KEY\",\"688\":\"61#REJECT-TARGET\",\"689\":\"61#REJECT-CACHE-TARGET\",\"690\":\"61#PREFIX-KEY\",\"691\":\"61#CMD-KEY\",\"692\":\"61#RAW-CMD-KEY\",\"693\":\"61#CMD-ARG-KEY\",\"694\":\"61#CMD-START-KEY\",\"695\":\"61#CMD-WHITESPACE-KEY\",\"696\":\"61#SHELL-ARGS\",\"697\":\"61#SHELL-ARGV\",\"698\":\"61#REGEX-MATCHED\",\"699\":\"61#STARTSWITH-KEY\",\"700\":\"61#ENDSWITH-KEY\",\"701\":\"61#FULLMATCH-KEY\",\"702\":\"61#KEYWORD-KEY\",\"703\":\"62\",\"704\":\"62#NoneBotException\",\"705\":\"62#ParserExit\",\"706\":\"62#ProcessException\",\"707\":\"62#IgnoredException\",\"708\":\"62#SkippedException\",\"709\":\"62#TypeMisMatch\",\"710\":\"62#MockApiException\",\"711\":\"62#StopPropagation\",\"712\":\"62#MatcherException\",\"713\":\"62#PausedException\",\"714\":\"62#RejectedException\",\"715\":\"62#FinishedException\",\"716\":\"62#AdapterException\",\"717\":\"62#NoLogException\",\"718\":\"62#ApiNotAvailable\",\"719\":\"62#NetworkError\",\"720\":\"62#ActionFailed\",\"721\":\"62#DriverException\",\"722\":\"62#WebSocketClosed\",\"723\":\"63\",\"724\":\"63#快捷导入\",\"725\":\"63#get-driver\",\"726\":\"63#get-adapter\",\"727\":\"63#get-adapters\",\"728\":\"63#get-app\",\"729\":\"63#get-asgi\",\"730\":\"63#get-bot\",\"731\":\"63#get-bots\",\"732\":\"63#init\",\"733\":\"63#run\",\"734\":\"64\",\"735\":\"64#logger\",\"736\":\"64#LoguruHandler\",\"737\":\"64#LoguruHandler-emit\",\"738\":\"64#default-filter\",\"739\":\"64#default-format\",\"740\":\"65\",\"741\":\"65#Matcher\",\"742\":\"65#Matcher-type\",\"743\":\"65#Matcher-rule\",\"744\":\"65#Matcher-permission\",\"745\":\"65#Matcher-handlers\",\"746\":\"65#Matcher-priority\",\"747\":\"65#Matcher-block\",\"748\":\"65#Matcher-temp\",\"749\":\"65#Matcher-expire-time\",\"750\":\"65#Matcher-new\",\"751\":\"65#Matcher-destroy\",\"752\":\"65#Matcher-check-perm\",\"753\":\"65#Matcher-check-rule\",\"754\":\"65#Matcher-type-updater\",\"755\":\"65#Matcher-permission-updater\",\"756\":\"65#Matcher-append-handler\",\"757\":\"65#Matcher-handle\",\"758\":\"65#Matcher-receive\",\"759\":\"65#Matcher-got\",\"760\":\"65#Matcher-send\",\"761\":\"65#Matcher-finish\",\"762\":\"65#Matcher-pause\",\"763\":\"65#Matcher-reject\",\"764\":\"65#Matcher-reject-arg\",\"765\":\"65#Matcher-reject-receive\",\"766\":\"65#Matcher-skip\",\"767\":\"65#Matcher-get-receive\",\"768\":\"65#Matcher-set-receive\",\"769\":\"65#Matcher-get-last-receive\",\"770\":\"65#Matcher-get-arg\",\"771\":\"65#Matcher-set-arg\",\"772\":\"65#Matcher-set-target\",\"773\":\"65#Matcher-get-target\",\"774\":\"65#Matcher-stop-propagation\",\"775\":\"65#Matcher-update-type\",\"776\":\"65#Matcher-update-permission\",\"777\":\"65#Matcher-resolve-reject\",\"778\":\"65#Matcher-ensure-context\",\"779\":\"65#Matcher-simple-run\",\"780\":\"65#Matcher-run\",\"781\":\"65#matchers\",\"782\":\"65#MatcherManager\",\"783\":\"65#MatcherManager-keys\",\"784\":\"65#MatcherManager-values\",\"785\":\"65#MatcherManager-items\",\"786\":\"65#MatcherManager-get\",\"787\":\"65#MatcherManager-pop\",\"788\":\"65#MatcherManager-popitem\",\"789\":\"65#MatcherManager-clear\",\"790\":\"65#MatcherManager-update\",\"791\":\"65#MatcherManager-setdefault\",\"792\":\"65#MatcherManager-set-provider\",\"793\":\"65#MatcherProvider\",\"794\":\"65#DEFAULT-PROVIDER-CLASS\",\"795\":\"66\",\"796\":\"66#event-preprocessor\",\"797\":\"66#event-postprocessor\",\"798\":\"66#run-preprocessor\",\"799\":\"66#run-postprocessor\",\"800\":\"66#check-and-run-matcher\",\"801\":\"66#handle-event\",\"802\":\"67\",\"803\":\"67#Arg\",\"804\":\"67#ArgStr\",\"805\":\"67#Depends\",\"806\":\"67#ArgParam\",\"807\":\"67#BotParam\",\"808\":\"67#EventParam\",\"809\":\"67#StateParam\",\"810\":\"67#DependParam\",\"811\":\"67#ArgPlainText\",\"812\":\"67#DefaultParam\",\"813\":\"67#MatcherParam\",\"814\":\"67#ExceptionParam\",\"815\":\"67#EventType\",\"816\":\"67#EventMessage\",\"817\":\"67#EventPlainText\",\"818\":\"67#EventToMe\",\"819\":\"67#Command\",\"820\":\"67#RawCommand\",\"821\":\"67#CommandArg\",\"822\":\"67#CommandStart\",\"823\":\"67#CommandWhitespace\",\"824\":\"67#ShellCommandArgs\",\"825\":\"67#ShellCommandArgv\",\"826\":\"67#RegexMatched\",\"827\":\"67#RegexStr\",\"828\":\"67#RegexGroup\",\"829\":\"67#RegexDict\",\"830\":\"67#Startswith\",\"831\":\"67#Endswith\",\"832\":\"67#Fullmatch\",\"833\":\"67#Keyword\",\"834\":\"67#Received\",\"835\":\"67#LastReceived\",\"836\":\"68\",\"837\":\"68#USER\",\"838\":\"68#User\",\"839\":\"68#User-from-event\",\"840\":\"68#User-from-permission\",\"841\":\"68#Permission\",\"842\":\"68#Permission-checkers\",\"843\":\"68#Permission---call--\",\"844\":\"68#Message\",\"845\":\"68#Notice\",\"846\":\"68#Request\",\"847\":\"68#MetaEvent\",\"848\":\"68#MESSAGE\",\"849\":\"68#NOTICE\",\"850\":\"68#REQUEST\",\"851\":\"68#METAEVENT\",\"852\":\"68#SuperUser\",\"853\":\"68#SUPERUSER\",\"854\":\"69\",\"855\":\"69#Rule\",\"856\":\"69#Rule-checkers\",\"857\":\"69#Rule---call--\",\"858\":\"69#CMD-RESULT\",\"859\":\"69#TRIE-VALUE\",\"860\":\"69#StartswithRule\",\"861\":\"69#startswith\",\"862\":\"69#EndswithRule\",\"863\":\"69#endswith\",\"864\":\"69#FullmatchRule\",\"865\":\"69#fullmatch\",\"866\":\"69#KeywordsRule\",\"867\":\"69#keyword\",\"868\":\"69#CommandRule\",\"869\":\"69#command\",\"870\":\"69#ArgumentParser\",\"871\":\"69#ArgumentParser-parse-known-args\",\"872\":\"69#ShellCommandRule\",\"873\":\"69#shell-command\",\"874\":\"69#RegexRule\",\"875\":\"69#regex\",\"876\":\"69#ToMeRule\",\"877\":\"69#to-me\",\"878\":\"69#IsTypeRule\",\"879\":\"69#is-type\",\"880\":\"70\",\"881\":\"70#overrides\",\"882\":\"70#type-has-args\",\"883\":\"70#origin-is-union\",\"884\":\"70#origin-is-literal\",\"885\":\"70#all-literal-values\",\"886\":\"70#origin-is-annotated\",\"887\":\"70#is-none-type\",\"888\":\"70#evaluate-forwardref\",\"889\":\"70#StateFlag\",\"890\":\"70#T-State\",\"891\":\"70#T-BotConnectionHook\",\"892\":\"70#T-BotDisconnectionHook\",\"893\":\"70#T-CallingAPIHook\",\"894\":\"70#T-CalledAPIHook\",\"895\":\"70#T-EventPreProcessor\",\"896\":\"70#T-EventPostProcessor\",\"897\":\"70#T-RunPreProcessor\",\"898\":\"70#T-RunPostProcessor\",\"899\":\"70#T-RuleChecker\",\"900\":\"70#T-PermissionChecker\",\"901\":\"70#T-Handler\",\"902\":\"70#T-TypeUpdater\",\"903\":\"70#T-PermissionUpdater\",\"904\":\"70#T-DependencyCache\",\"905\":\"71\",\"906\":\"71#escape-tag\",\"907\":\"71#deep-update\",\"908\":\"71#lenient-issubclass\",\"909\":\"71#generic-check-issubclass\",\"910\":\"71#type-is-complex\",\"911\":\"71#is-coroutine-callable\",\"912\":\"71#is-gen-callable\",\"913\":\"71#is-async-gen-callable\",\"914\":\"71#run-sync\",\"915\":\"71#run-sync-ctx-manager\",\"916\":\"71#run-coro-with-catch\",\"917\":\"71#run-coro-with-shield\",\"918\":\"71#flatten-exception-group\",\"919\":\"71#get-name\",\"920\":\"71#path-to-module-name\",\"921\":\"71#resolve-dot-notation\",\"922\":\"71#classproperty\",\"923\":\"71#DataclassEncoder\",\"924\":\"71#DataclassEncoder-default\",\"925\":\"71#logger-wrapper\",\"926\":\"72\",\"927\":\"72#记录日志\",\"928\":\"72#自定义日志输出\",\"929\":\"72#重定向-logging-日志\",\"930\":\"73\",\"931\":\"73#事件类型\",\"932\":\"73#重载\",\"933\":\"74\",\"934\":\"74#rulechecker\",\"935\":\"74#rule\",\"936\":\"74#合并响应规则\",\"937\":\"74#主动使用响应规则\",\"938\":\"74#内置响应规则\",\"939\":\"75\",\"940\":\"76\",\"941\":\"77\",\"942\":\"77#安装插件\",\"943\":\"77#使用插件\",\"944\":\"77#配置项\",\"945\":\"77#localstore-use-cwd\",\"946\":\"77#localstore-cache-dir\",\"947\":\"77#localstore-data-dir\",\"948\":\"77#localstore-config-dir\",\"949\":\"77#localstore-plugin-cache-dir\",\"950\":\"77#localstore-plugin-data-dir\",\"951\":\"77#localstore-plugin-config-dir\",\"952\":\"78\",\"953\":\"78#安装插件\",\"954\":\"78#使用插件\",\"955\":\"78#获取-sentry-dsn\",\"956\":\"78#配置插件\",\"957\":\"78#配置项\",\"958\":\"79\",\"959\":\"79#安装插件\",\"960\":\"79#使用插件\",\"961\":\"79#导入调度器\",\"962\":\"79#添加定时任务\",\"963\":\"79#配置项\",\"964\":\"79#apscheduler-autostart\",\"965\":\"79#apscheduler-log-level\",\"966\":\"79#apscheduler-config\",\"967\":\"80\",\"968\":\"81\",\"969\":\"81#code-of-conduct\",\"970\":\"81#参与开发\",\"971\":\"81#鸣谢\",\"972\":\"82\",\"973\":\"82#组织结构\",\"974\":\"82#使用-nb-cli-创建项目\",\"975\":\"82#组成部分\",\"976\":\"82#log\",\"977\":\"82#config\",\"978\":\"82#adapter\",\"979\":\"82#与平台交互\",\"980\":\"82#客户端通信方式\",\"981\":\"82#服务端通信方式\",\"982\":\"82#建立-bot-连接\",\"983\":\"82#转换-event-事件\",\"984\":\"82#调用平台-api\",\"985\":\"82#bot\",\"986\":\"82#event\",\"987\":\"82#message\",\"988\":\"82#适配器测试\",\"989\":\"82#后续工作\",\"990\":\"83\",\"991\":\"83#nonebot-v1\",\"992\":\"83#更新-nonebot-v1-文档中的-指南-部分\",\"993\":\"83#nonebot-v1-api-文档自动生成\",\"994\":\"83#nonebot-v2\",\"995\":\"83#nonebot-v2-自动化测试框架-nonebug\",\"996\":\"83#nonebot-v2-telegram-适配器\",\"997\":\"83#nonebot-v2-飞书适配器\",\"998\":\"83#onebot\",\"999\":\"83#设计-onebot-v12-接口标准\",\"1000\":\"83#实现-rust-版-libonebot\",\"1001\":\"83#实现自选语言版-libonebot\",\"1002\":\"84\",\"1003\":\"84#nonebot2-命令行-cli-交互体验升级\",\"1004\":\"84#nonebot2-命令行即时交互通信设计与实现\",\"1005\":\"84#nonebot2-用户上手与深入教程设计\",\"1006\":\"85\",\"1007\":\"85#nonebot-项目管理图形化面板\",\"1008\":\"85#nonebot-discord-适配器\",\"1009\":\"85#nonebot-数据库支持插件\",\"1010\":\"86\",\"1011\":\"86#nonepress-官网组件库更新与优化\",\"1012\":\"86#noneflow-社区自动化工作流管理优化\",\"1013\":\"86#noneblockly-低代码框架开发\",\"1014\":\"87\",\"1015\":\"87#安装依赖\",\"1016\":\"87#创建配置文件\",\"1017\":\"87#创建入口文件\",\"1018\":\"87#运行机器人\",\"1019\":\"88\",\"1020\":\"88#插件结构\",\"1021\":\"88#单文件插件\",\"1022\":\"88#包插件\",\"1023\":\"88#创建插件\",\"1024\":\"88#加载插件\",\"1025\":\"88#load-plugin\",\"1026\":\"88#load-plugins\",\"1027\":\"88#load-all-plugins\",\"1028\":\"88#load-from-json\",\"1029\":\"88#load-from-toml\",\"1030\":\"88#load-builtin-plugin\",\"1031\":\"88#load-builtin-plugins\",\"1032\":\"88#其他加载方式\",\"1033\":\"89\",\"1034\":\"90\",\"1035\":\"90#事件响应器辅助函数\",\"1036\":\"90#创建事件响应器\",\"1037\":\"90#为事件响应器添加参数\",\"1038\":\"91\",\"1039\":\"91#认识消息类型\",\"1040\":\"91#消息序列-message\",\"1041\":\"91#消息段-messagesegment\",\"1042\":\"91#使用消息序列\",\"1043\":\"91#构造消息序列\",\"1044\":\"91#直接构造\",\"1045\":\"91#运算构造\",\"1046\":\"91#从字典数组构造\",\"1047\":\"91#获取消息纯文本\",\"1048\":\"91#遍历\",\"1049\":\"91#比较\",\"1050\":\"91#检查消息段\",\"1051\":\"91#过滤、索引与切片\",\"1052\":\"91#拼接消息\",\"1053\":\"91#使用消息模板\",\"1054\":\"92\",\"1055\":\"92#适配器功能与组成\",\"1056\":\"92#注册适配器\",\"1057\":\"92#获取已注册的适配器\",\"1058\":\"92#获取-bot-对象\",\"1059\":\"92#获取事件通用信息\",\"1060\":\"92#事件类型\",\"1061\":\"92#事件名称\",\"1062\":\"92#事件描述\",\"1063\":\"92#事件日志字符串\",\"1064\":\"92#事件主体-id\",\"1065\":\"92#事件会话-id\",\"1066\":\"92#事件消息\",\"1067\":\"92#事件纯文本消息\",\"1068\":\"92#事件是否与机器人有关\",\"1069\":\"92#更多\",\"1070\":\"93\",\"1071\":\"93#驱动器类型\",\"1072\":\"93#配置驱动器\",\"1073\":\"93#获取驱动器\",\"1074\":\"93#内置驱动器\",\"1075\":\"93#none\",\"1076\":\"93#fastapi-默认\",\"1077\":\"93#fastapi-配置项\",\"1078\":\"93#fastapi-openapi-url\",\"1079\":\"93#fastapi-docs-url\",\"1080\":\"93#fastapi-redoc-url\",\"1081\":\"93#fastapi-include-adapter-schema\",\"1082\":\"93#fastapi-reload\",\"1083\":\"93#fastapi-reload-dirs\",\"1084\":\"93#fastapi-reload-delay\",\"1085\":\"93#fastapi-reload-includes\",\"1086\":\"93#fastapi-reload-excludes\",\"1087\":\"93#fastapi-extra\",\"1088\":\"93#quart\",\"1089\":\"93#quart-配置项\",\"1090\":\"93#quart-reload\",\"1091\":\"93#quart-reload-dirs\",\"1092\":\"93#quart-reload-delay\",\"1093\":\"93#quart-reload-includes\",\"1094\":\"93#quart-reload-excludes\",\"1095\":\"93#quart-extra\",\"1096\":\"93#httpx\",\"1097\":\"93#websockets\",\"1098\":\"93#aiohttp\",\"1099\":\"94\",\"1100\":\"94#编写存储提供者\",\"1101\":\"94#设置存储提供者\",\"1102\":\"95\",\"1103\":\"95#事件响应器组成\",\"1104\":\"95#事件响应器类型\",\"1105\":\"95#事件触发权限\",\"1106\":\"95#事件响应规则\",\"1107\":\"95#响应优先级\",\"1108\":\"95#阻断\",\"1109\":\"95#有效期\",\"1110\":\"95#默认状态\",\"1111\":\"95#基本辅助函数\",\"1112\":\"95#内置响应规则\",\"1113\":\"95#startswith\",\"1114\":\"95#endswith\",\"1115\":\"95#fullmatch\",\"1116\":\"95#keyword\",\"1117\":\"95#command\",\"1118\":\"95#shell-command\",\"1119\":\"95#regex\",\"1120\":\"95#to-me\",\"1121\":\"95#is-type\",\"1122\":\"95#响应器组\",\"1123\":\"95#commandgroup\",\"1124\":\"95#matchergroup\",\"1125\":\"95#第三方响应规则\",\"1126\":\"95#alconna\",\"1127\":\"96\",\"1128\":\"96#插件元数据\",\"1129\":\"96#获取插件信息\",\"1130\":\"97\",\"1131\":\"97#创建嵌套插件\",\"1132\":\"97#已有插件\",\"1133\":\"98\",\"1134\":\"98#插件跟踪\",\"1135\":\"98#插件依赖声明\",\"1136\":\"99\",\"1137\":\"99#通过兼容层添加路由\",\"1138\":\"99#http-路由\",\"1139\":\"99#websocket-路由\",\"1140\":\"99#使用-asgi-应用添加路由\",\"1141\":\"99#获取-asgi-应用\",\"1142\":\"99#添加路由规则\",\"1143\":\"100\",\"1144\":\"100#全局钩子函数\",\"1145\":\"100#启动准备\",\"1146\":\"100#终止处理\",\"1147\":\"100#bot-连接处理\",\"1148\":\"100#bot-断开处理\",\"1149\":\"100#事件处理钩子函数\",\"1150\":\"100#事件预处理\",\"1151\":\"100#事件后处理\",\"1152\":\"100#运行预处理\",\"1153\":\"100#运行后处理\",\"1154\":\"100#平台接口调用钩子\",\"1155\":\"100#平台接口调用后钩子\",\"1156\":\"101\",\"1157\":\"101#更新事件响应器类型\",\"1158\":\"101#更新事件触发权限\",\"1159\":\"102\",\"1160\":\"102#Required\",\"1161\":\"102#PydanticUndefined\",\"1162\":\"102#PydanticUndefinedType\",\"1163\":\"102#DEFAULT-CONFIG\",\"1164\":\"102#FieldInfo\",\"1165\":\"102#FieldInfo-extra\",\"1166\":\"102#ModelField\",\"1167\":\"102#ModelField-name\",\"1168\":\"102#ModelField-annotation\",\"1169\":\"102#ModelField-field-info\",\"1170\":\"102#ModelField-construct\",\"1171\":\"102#ModelField-get-default\",\"1172\":\"102#ModelField-validate-value\",\"1173\":\"102#extract-field-info\",\"1174\":\"102#model-fields\",\"1175\":\"102#model-config\",\"1176\":\"102#model-dump\",\"1177\":\"102#type-validate-python\",\"1178\":\"102#type-validate-json\",\"1179\":\"102#custom-validation\",\"1180\":\"103\",\"1181\":\"103#Env\",\"1182\":\"103#Env-environment\",\"1183\":\"103#Config\",\"1184\":\"103#Config-driver\",\"1185\":\"103#Config-host\",\"1186\":\"103#Config-port\",\"1187\":\"103#Config-log-level\",\"1188\":\"103#Config-api-timeout\",\"1189\":\"103#Config-superusers\",\"1190\":\"103#Config-nickname\",\"1191\":\"103#Config-command-start\",\"1192\":\"103#Config-command-sep\",\"1193\":\"103#Config-session-expire-timeout\",\"1194\":\"104\",\"1195\":\"104#RECEIVE-KEY\",\"1196\":\"104#LAST-RECEIVE-KEY\",\"1197\":\"104#ARG-KEY\",\"1198\":\"104#REJECT-TARGET\",\"1199\":\"104#REJECT-CACHE-TARGET\",\"1200\":\"104#PAUSE-PROMPT-RESULT-KEY\",\"1201\":\"104#REJECT-PROMPT-RESULT-KEY\",\"1202\":\"104#PREFIX-KEY\",\"1203\":\"104#CMD-KEY\",\"1204\":\"104#RAW-CMD-KEY\",\"1205\":\"104#CMD-ARG-KEY\",\"1206\":\"104#CMD-START-KEY\",\"1207\":\"104#CMD-WHITESPACE-KEY\",\"1208\":\"104#SHELL-ARGS\",\"1209\":\"104#SHELL-ARGV\",\"1210\":\"104#REGEX-MATCHED\",\"1211\":\"104#STARTSWITH-KEY\",\"1212\":\"104#ENDSWITH-KEY\",\"1213\":\"104#FULLMATCH-KEY\",\"1214\":\"104#KEYWORD-KEY\",\"1215\":\"105\",\"1216\":\"105#NoneBotException\",\"1217\":\"105#ParserExit\",\"1218\":\"105#ProcessException\",\"1219\":\"105#IgnoredException\",\"1220\":\"105#SkippedException\",\"1221\":\"105#TypeMisMatch\",\"1222\":\"105#MockApiException\",\"1223\":\"105#StopPropagation\",\"1224\":\"105#MatcherException\",\"1225\":\"105#PausedException\",\"1226\":\"105#RejectedException\",\"1227\":\"105#FinishedException\",\"1228\":\"105#AdapterException\",\"1229\":\"105#NoLogException\",\"1230\":\"105#ApiNotAvailable\",\"1231\":\"105#NetworkError\",\"1232\":\"105#ActionFailed\",\"1233\":\"105#DriverException\",\"1234\":\"105#WebSocketClosed\",\"1235\":\"106\",\"1236\":\"106#快捷导入\",\"1237\":\"106#get-driver\",\"1238\":\"106#get-adapter\",\"1239\":\"106#get-adapters\",\"1240\":\"106#get-app\",\"1241\":\"106#get-asgi\",\"1242\":\"106#get-bot\",\"1243\":\"106#get-bots\",\"1244\":\"106#init\",\"1245\":\"106#run\",\"1246\":\"107\",\"1247\":\"107#logger\",\"1248\":\"107#LoguruHandler\",\"1249\":\"107#LoguruHandler-emit\",\"1250\":\"107#default-filter\",\"1251\":\"107#default-format\",\"1252\":\"108\",\"1253\":\"108#DEFAULT-PROVIDER-CLASS\",\"1254\":\"108#Matcher\",\"1255\":\"108#Matcher-type\",\"1256\":\"108#Matcher-rule\",\"1257\":\"108#Matcher-permission\",\"1258\":\"108#Matcher-handlers\",\"1259\":\"108#Matcher-priority\",\"1260\":\"108#Matcher-block\",\"1261\":\"108#Matcher-temp\",\"1262\":\"108#Matcher-expire-time\",\"1263\":\"108#Matcher-new\",\"1264\":\"108#Matcher-destroy\",\"1265\":\"108#Matcher-check-perm\",\"1266\":\"108#Matcher-check-rule\",\"1267\":\"108#Matcher-type-updater\",\"1268\":\"108#Matcher-permission-updater\",\"1269\":\"108#Matcher-append-handler\",\"1270\":\"108#Matcher-handle\",\"1271\":\"108#Matcher-receive\",\"1272\":\"108#Matcher-got\",\"1273\":\"108#Matcher-send\",\"1274\":\"108#Matcher-finish\",\"1275\":\"108#Matcher-pause\",\"1276\":\"108#Matcher-reject\",\"1277\":\"108#Matcher-reject-arg\",\"1278\":\"108#Matcher-reject-receive\",\"1279\":\"108#Matcher-skip\",\"1280\":\"108#Matcher-get-receive\",\"1281\":\"108#Matcher-set-receive\",\"1282\":\"108#Matcher-get-last-receive\",\"1283\":\"108#Matcher-get-arg\",\"1284\":\"108#Matcher-set-arg\",\"1285\":\"108#Matcher-set-target\",\"1286\":\"108#Matcher-get-target\",\"1287\":\"108#Matcher-stop-propagation\",\"1288\":\"108#Matcher-update-type\",\"1289\":\"108#Matcher-update-permission\",\"1290\":\"108#Matcher-resolve-reject\",\"1291\":\"108#Matcher-ensure-context\",\"1292\":\"108#Matcher-simple-run\",\"1293\":\"108#Matcher-run\",\"1294\":\"108#MatcherManager\",\"1295\":\"108#MatcherManager-keys\",\"1296\":\"108#MatcherManager-values\",\"1297\":\"108#MatcherManager-items\",\"1298\":\"108#MatcherManager-get\",\"1299\":\"108#MatcherManager-pop\",\"1300\":\"108#MatcherManager-popitem\",\"1301\":\"108#MatcherManager-clear\",\"1302\":\"108#MatcherManager-update\",\"1303\":\"108#MatcherManager-setdefault\",\"1304\":\"108#MatcherManager-set-provider\",\"1305\":\"108#MatcherProvider\",\"1306\":\"108#matchers\",\"1307\":\"109\",\"1308\":\"109#event-preprocessor\",\"1309\":\"109#event-postprocessor\",\"1310\":\"109#run-preprocessor\",\"1311\":\"109#run-postprocessor\",\"1312\":\"109#check-and-run-matcher\",\"1313\":\"109#handle-event\",\"1314\":\"110\",\"1315\":\"110#Arg\",\"1316\":\"110#ArgParam\",\"1317\":\"110#ArgPlainText\",\"1318\":\"110#ArgPromptResult\",\"1319\":\"110#ArgStr\",\"1320\":\"110#BotParam\",\"1321\":\"110#DefaultParam\",\"1322\":\"110#DependParam\",\"1323\":\"110#Depends\",\"1324\":\"110#EventParam\",\"1325\":\"110#ExceptionParam\",\"1326\":\"110#MatcherParam\",\"1327\":\"110#StateParam\",\"1328\":\"110#EventType\",\"1329\":\"110#EventMessage\",\"1330\":\"110#EventPlainText\",\"1331\":\"110#EventToMe\",\"1332\":\"110#Command\",\"1333\":\"110#RawCommand\",\"1334\":\"110#CommandArg\",\"1335\":\"110#CommandStart\",\"1336\":\"110#CommandWhitespace\",\"1337\":\"110#ShellCommandArgs\",\"1338\":\"110#ShellCommandArgv\",\"1339\":\"110#RegexMatched\",\"1340\":\"110#RegexStr\",\"1341\":\"110#RegexGroup\",\"1342\":\"110#RegexDict\",\"1343\":\"110#Startswith\",\"1344\":\"110#Endswith\",\"1345\":\"110#Fullmatch\",\"1346\":\"110#Keyword\",\"1347\":\"110#Received\",\"1348\":\"110#LastReceived\",\"1349\":\"110#ReceivePromptResult\",\"1350\":\"110#PausePromptResult\",\"1351\":\"111\",\"1352\":\"111#USER\",\"1353\":\"111#Permission\",\"1354\":\"111#Permission-checkers\",\"1355\":\"111#Permission---call--\",\"1356\":\"111#User\",\"1357\":\"111#User-from-event\",\"1358\":\"111#User-from-permission\",\"1359\":\"111#Message\",\"1360\":\"111#Notice\",\"1361\":\"111#Request\",\"1362\":\"111#MetaEvent\",\"1363\":\"111#MESSAGE\",\"1364\":\"111#NOTICE\",\"1365\":\"111#REQUEST\",\"1366\":\"111#METAEVENT\",\"1367\":\"111#SuperUser\",\"1368\":\"111#SUPERUSER\",\"1369\":\"112\",\"1370\":\"112#Rule\",\"1371\":\"112#Rule-checkers\",\"1372\":\"112#Rule---call--\",\"1373\":\"112#CMD-RESULT\",\"1374\":\"112#TRIE-VALUE\",\"1375\":\"112#StartswithRule\",\"1376\":\"112#startswith\",\"1377\":\"112#EndswithRule\",\"1378\":\"112#endswith\",\"1379\":\"112#FullmatchRule\",\"1380\":\"112#fullmatch\",\"1381\":\"112#KeywordsRule\",\"1382\":\"112#keyword\",\"1383\":\"112#CommandRule\",\"1384\":\"112#command\",\"1385\":\"112#ArgumentParser\",\"1386\":\"112#ArgumentParser-parse-known-args\",\"1387\":\"112#ShellCommandRule\",\"1388\":\"112#shell-command\",\"1389\":\"112#RegexRule\",\"1390\":\"112#regex\",\"1391\":\"112#ToMeRule\",\"1392\":\"112#to-me\",\"1393\":\"112#IsTypeRule\",\"1394\":\"112#is-type\",\"1395\":\"113\",\"1396\":\"113#overrides\",\"1397\":\"113#type-has-args\",\"1398\":\"113#origin-is-union\",\"1399\":\"113#origin-is-literal\",\"1400\":\"113#all-literal-values\",\"1401\":\"113#origin-is-annotated\",\"1402\":\"113#is-none-type\",\"1403\":\"113#evaluate-forwardref\",\"1404\":\"113#StateFlag\",\"1405\":\"113#T-State\",\"1406\":\"113#T-BotConnectionHook\",\"1407\":\"113#T-BotDisconnectionHook\",\"1408\":\"113#T-CallingAPIHook\",\"1409\":\"113#T-CalledAPIHook\",\"1410\":\"113#T-EventPreProcessor\",\"1411\":\"113#T-EventPostProcessor\",\"1412\":\"113#T-RunPreProcessor\",\"1413\":\"113#T-RunPostProcessor\",\"1414\":\"113#T-RuleChecker\",\"1415\":\"113#T-PermissionChecker\",\"1416\":\"113#T-Handler\",\"1417\":\"113#T-TypeUpdater\",\"1418\":\"113#T-PermissionUpdater\",\"1419\":\"113#T-DependencyCache\",\"1420\":\"114\",\"1421\":\"114#escape-tag\",\"1422\":\"114#deep-update\",\"1423\":\"114#lenient-issubclass\",\"1424\":\"114#generic-check-issubclass\",\"1425\":\"114#type-is-complex\",\"1426\":\"114#is-coroutine-callable\",\"1427\":\"114#is-gen-callable\",\"1428\":\"114#is-async-gen-callable\",\"1429\":\"114#run-sync\",\"1430\":\"114#run-sync-ctx-manager\",\"1431\":\"114#run-coro-with-catch\",\"1432\":\"114#run-coro-with-shield\",\"1433\":\"114#flatten-exception-group\",\"1434\":\"114#get-name\",\"1435\":\"114#path-to-module-name\",\"1436\":\"114#resolve-dot-notation\",\"1437\":\"114#classproperty\",\"1438\":\"114#DataclassEncoder\",\"1439\":\"114#DataclassEncoder-default\",\"1440\":\"114#logger-wrapper\",\"1441\":\"115\",\"1442\":\"115#记录日志\",\"1443\":\"115#自定义日志输出\",\"1444\":\"115#重定向-logging-日志\",\"1445\":\"116\",\"1446\":\"116#事件类型\",\"1447\":\"116#重载\",\"1448\":\"117\",\"1449\":\"117#rulechecker\",\"1450\":\"117#rule\",\"1451\":\"117#合并响应规则\",\"1452\":\"117#主动使用响应规则\",\"1453\":\"117#内置响应规则\",\"1454\":\"118\",\"1455\":\"119\",\"1456\":\"120\",\"1457\":\"120#安装插件\",\"1458\":\"120#使用插件\",\"1459\":\"120#配置项\",\"1460\":\"120#localstore-use-cwd\",\"1461\":\"120#localstore-cache-dir\",\"1462\":\"120#localstore-data-dir\",\"1463\":\"120#localstore-config-dir\",\"1464\":\"120#localstore-plugin-cache-dir\",\"1465\":\"120#localstore-plugin-data-dir\",\"1466\":\"120#localstore-plugin-config-dir\",\"1467\":\"121\",\"1468\":\"121#安装插件\",\"1469\":\"121#使用插件\",\"1470\":\"121#获取-sentry-dsn\",\"1471\":\"121#配置插件\",\"1472\":\"121#配置项\",\"1473\":\"122\",\"1474\":\"122#安装插件\",\"1475\":\"122#使用插件\",\"1476\":\"122#导入调度器\",\"1477\":\"122#添加定时任务\",\"1478\":\"122#配置项\",\"1479\":\"122#apscheduler-autostart\",\"1480\":\"122#apscheduler-log-level\",\"1481\":\"122#apscheduler-config\",\"1482\":\"123\",\"1483\":\"124\",\"1484\":\"124#code-of-conduct\",\"1485\":\"124#参与开发\",\"1486\":\"124#鸣谢\",\"1487\":\"125\",\"1488\":\"125#组织结构\",\"1489\":\"125#使用-nb-cli-创建项目\",\"1490\":\"125#组成部分\",\"1491\":\"125#log\",\"1492\":\"125#config\",\"1493\":\"125#adapter\",\"1494\":\"125#与平台交互\",\"1495\":\"125#客户端通信方式\",\"1496\":\"125#服务端通信方式\",\"1497\":\"125#建立-bot-连接\",\"1498\":\"125#转换-event-事件\",\"1499\":\"125#调用平台-api\",\"1500\":\"125#bot\",\"1501\":\"125#event\",\"1502\":\"125#message\",\"1503\":\"125#适配器测试\",\"1504\":\"125#后续工作\",\"1505\":\"126\",\"1506\":\"126#nonebot-v1\",\"1507\":\"126#更新-nonebot-v1-文档中的-指南-部分\",\"1508\":\"126#nonebot-v1-api-文档自动生成\",\"1509\":\"126#nonebot-v2\",\"1510\":\"126#nonebot-v2-自动化测试框架-nonebug\",\"1511\":\"126#nonebot-v2-telegram-适配器\",\"1512\":\"126#nonebot-v2-飞书适配器\",\"1513\":\"126#onebot\",\"1514\":\"126#设计-onebot-v12-接口标准\",\"1515\":\"126#实现-rust-版-libonebot\",\"1516\":\"126#实现自选语言版-libonebot\",\"1517\":\"127\",\"1518\":\"127#nonebot2-命令行-cli-交互体验升级\",\"1519\":\"127#nonebot2-命令行即时交互通信设计与实现\",\"1520\":\"127#nonebot2-用户上手与深入教程设计\",\"1521\":\"128\",\"1522\":\"128#nonebot-项目管理图形化面板\",\"1523\":\"128#nonebot-discord-适配器\",\"1524\":\"128#nonebot-数据库支持插件\",\"1525\":\"129\",\"1526\":\"129#nonepress-官网组件库更新与优化\",\"1527\":\"129#noneflow-社区自动化工作流管理优化\",\"1528\":\"129#noneblockly-低代码框架开发\",\"1529\":\"130\",\"1530\":\"130#安装依赖\",\"1531\":\"130#创建配置文件\",\"1532\":\"130#创建入口文件\",\"1533\":\"130#运行机器人\",\"1534\":\"131\",\"1535\":\"131#插件结构\",\"1536\":\"131#单文件插件\",\"1537\":\"131#包插件\",\"1538\":\"131#创建插件\",\"1539\":\"131#加载插件\",\"1540\":\"131#load-plugin\",\"1541\":\"131#load-plugins\",\"1542\":\"131#load-all-plugins\",\"1543\":\"131#load-from-json\",\"1544\":\"131#load-from-toml\",\"1545\":\"131#load-builtin-plugin\",\"1546\":\"131#load-builtin-plugins\",\"1547\":\"131#其他加载方式\",\"1548\":\"132\",\"1549\":\"133\",\"1550\":\"133#事件响应器辅助函数\",\"1551\":\"133#创建事件响应器\",\"1552\":\"133#为事件响应器添加参数\",\"1553\":\"134\",\"1554\":\"134#认识消息类型\",\"1555\":\"134#消息序列-message\",\"1556\":\"134#消息段-messagesegment\",\"1557\":\"134#使用消息序列\",\"1558\":\"134#构造消息序列\",\"1559\":\"134#直接构造\",\"1560\":\"134#运算构造\",\"1561\":\"134#从字典数组构造\",\"1562\":\"134#获取消息纯文本\",\"1563\":\"134#遍历\",\"1564\":\"134#比较\",\"1565\":\"134#检查消息段\",\"1566\":\"134#过滤、索引与切片\",\"1567\":\"134#拼接消息\",\"1568\":\"134#使用消息模板\",\"1569\":\"135\",\"1570\":\"135#Bot\",\"1571\":\"135#Bot-adapter\",\"1572\":\"135#Bot-self-id\",\"1573\":\"135#Bot-type\",\"1574\":\"135#Bot-config\",\"1575\":\"135#Bot-call-api\",\"1576\":\"135#Bot-send\",\"1577\":\"135#Bot-on-calling-api\",\"1578\":\"135#Bot-on-called-api\",\"1579\":\"135#Event\",\"1580\":\"135#Event-get-type\",\"1581\":\"135#Event-get-event-name\",\"1582\":\"135#Event-get-event-description\",\"1583\":\"135#Event-get-log-string\",\"1584\":\"135#Event-get-user-id\",\"1585\":\"135#Event-get-session-id\",\"1586\":\"135#Event-get-message\",\"1587\":\"135#Event-get-plaintext\",\"1588\":\"135#Event-is-tome\",\"1589\":\"135#Adapter\",\"1590\":\"135#Adapter-driver\",\"1591\":\"135#Adapter-bots\",\"1592\":\"135#Adapter-get-name\",\"1593\":\"135#Adapter-config\",\"1594\":\"135#Adapter-bot-connect\",\"1595\":\"135#Adapter-bot-disconnect\",\"1596\":\"135#Adapter-setup-http-server\",\"1597\":\"135#Adapter-setup-websocket-server\",\"1598\":\"135#Adapter-request\",\"1599\":\"135#Adapter-websocket\",\"1600\":\"135#Adapter-on-ready\",\"1601\":\"135#Message\",\"1602\":\"135#Message-template\",\"1603\":\"135#Message-get-segment-class\",\"1604\":\"135#Message--construct\",\"1605\":\"135#Message---getitem--\",\"1606\":\"135#Message---contains--\",\"1607\":\"135#Message-has\",\"1608\":\"135#Message-index\",\"1609\":\"135#Message-get\",\"1610\":\"135#Message-count\",\"1611\":\"135#Message-only\",\"1612\":\"135#Message-append\",\"1613\":\"135#Message-extend\",\"1614\":\"135#Message-join\",\"1615\":\"135#Message-copy\",\"1616\":\"135#Message-include\",\"1617\":\"135#Message-exclude\",\"1618\":\"135#Message-extract-plain-text\",\"1619\":\"135#MessageSegment\",\"1620\":\"135#MessageSegment-type\",\"1621\":\"135#MessageSegment-data\",\"1622\":\"135#MessageSegment-get-message-class\",\"1623\":\"135#MessageSegment---str--\",\"1624\":\"135#MessageSegment---add--\",\"1625\":\"135#MessageSegment-get\",\"1626\":\"135#MessageSegment-keys\",\"1627\":\"135#MessageSegment-values\",\"1628\":\"135#MessageSegment-items\",\"1629\":\"135#MessageSegment-join\",\"1630\":\"135#MessageSegment-copy\",\"1631\":\"135#MessageSegment-is-text\",\"1632\":\"135#MessageTemplate\",\"1633\":\"135#MessageTemplate-add-format-spec\",\"1634\":\"135#MessageTemplate-format\",\"1635\":\"135#MessageTemplate-format-map\",\"1636\":\"135#MessageTemplate-vformat\",\"1637\":\"135#MessageTemplate-get-field\",\"1638\":\"135#MessageTemplate-format-field\",\"1639\":\"136\",\"1640\":\"136#Param\",\"1641\":\"136#Dependent\",\"1642\":\"136#Dependent-parse-params\",\"1643\":\"136#Dependent-parse-parameterless\",\"1644\":\"136#Dependent-parse\",\"1645\":\"136#Dependent-check\",\"1646\":\"136#Dependent-solve\",\"1647\":\"137\",\"1648\":\"137#get-typed-signature\",\"1649\":\"137#get-typed-annotation\",\"1650\":\"137#check-field-type\",\"1651\":\"138\",\"1652\":\"138#Session\",\"1653\":\"138#Session-request\",\"1654\":\"138#Session-setup\",\"1655\":\"138#Session-close\",\"1656\":\"138#Mixin\",\"1657\":\"138#Mixin-request\",\"1658\":\"138#Mixin-websocket\",\"1659\":\"138#Mixin-get-session\",\"1660\":\"138#WebSocket\",\"1661\":\"138#WebSocket-accept\",\"1662\":\"138#WebSocket-close\",\"1663\":\"138#WebSocket-receive\",\"1664\":\"138#WebSocket-receive-text\",\"1665\":\"138#WebSocket-receive-bytes\",\"1666\":\"138#WebSocket-send-text\",\"1667\":\"138#WebSocket-send-bytes\",\"1668\":\"138#Driver\",\"1669\":\"139\",\"1670\":\"139#Config\",\"1671\":\"139#Config-fastapi-openapi-url\",\"1672\":\"139#Config-fastapi-docs-url\",\"1673\":\"139#Config-fastapi-redoc-url\",\"1674\":\"139#Config-fastapi-include-adapter-schema\",\"1675\":\"139#Config-fastapi-reload\",\"1676\":\"139#Config-fastapi-reload-dirs\",\"1677\":\"139#Config-fastapi-reload-delay\",\"1678\":\"139#Config-fastapi-reload-includes\",\"1679\":\"139#Config-fastapi-reload-excludes\",\"1680\":\"139#Config-fastapi-extra\",\"1681\":\"139#Driver\",\"1682\":\"139#Driver-type\",\"1683\":\"139#Driver-server-app\",\"1684\":\"139#Driver-asgi\",\"1685\":\"139#Driver-logger\",\"1686\":\"139#Driver-setup-http-server\",\"1687\":\"139#Driver-setup-websocket-server\",\"1688\":\"139#Driver-run\",\"1689\":\"139#FastAPIWebSocket\",\"1690\":\"139#FastAPIWebSocket-accept\",\"1691\":\"139#FastAPIWebSocket-close\",\"1692\":\"139#FastAPIWebSocket-receive\",\"1693\":\"139#FastAPIWebSocket-receive-text\",\"1694\":\"139#FastAPIWebSocket-receive-bytes\",\"1695\":\"139#FastAPIWebSocket-send-text\",\"1696\":\"139#FastAPIWebSocket-send-bytes\",\"1697\":\"140\",\"1698\":\"140#Session\",\"1699\":\"140#Session-request\",\"1700\":\"140#Session-setup\",\"1701\":\"140#Session-close\",\"1702\":\"140#Mixin\",\"1703\":\"140#Mixin-request\",\"1704\":\"140#Mixin-get-session\",\"1705\":\"140#Driver\",\"1706\":\"141\",\"1707\":\"141#Mixin\",\"1708\":\"141#Mixin-type\",\"1709\":\"141#Driver\",\"1710\":\"141#Driver-env\",\"1711\":\"141#Driver-config\",\"1712\":\"141#Driver-bots\",\"1713\":\"141#Driver-register-adapter\",\"1714\":\"141#Driver-type\",\"1715\":\"141#Driver-logger\",\"1716\":\"141#Driver-run\",\"1717\":\"141#Driver-on-startup\",\"1718\":\"141#Driver-on-shutdown\",\"1719\":\"141#Driver-on-bot-connect\",\"1720\":\"141#Driver-on-bot-disconnect\",\"1721\":\"141#Cookies\",\"1722\":\"141#Cookies-set\",\"1723\":\"141#Cookies-get\",\"1724\":\"141#Cookies-delete\",\"1725\":\"141#Cookies-clear\",\"1726\":\"141#Cookies-update\",\"1727\":\"141#Cookies-as-header\",\"1728\":\"141#Request\",\"1729\":\"141#Response\",\"1730\":\"141#ASGIMixin\",\"1731\":\"141#ASGIMixin-server-app\",\"1732\":\"141#ASGIMixin-asgi\",\"1733\":\"141#ASGIMixin-setup-http-server\",\"1734\":\"141#ASGIMixin-setup-websocket-server\",\"1735\":\"141#WebSocket\",\"1736\":\"141#WebSocket-closed\",\"1737\":\"141#WebSocket-accept\",\"1738\":\"141#WebSocket-close\",\"1739\":\"141#WebSocket-receive\",\"1740\":\"141#WebSocket-receive-text\",\"1741\":\"141#WebSocket-receive-bytes\",\"1742\":\"141#WebSocket-send\",\"1743\":\"141#WebSocket-send-text\",\"1744\":\"141#WebSocket-send-bytes\",\"1745\":\"141#HTTPVersion\",\"1746\":\"141#ForwardMixin\",\"1747\":\"141#ReverseMixin\",\"1748\":\"141#ForwardDriver\",\"1749\":\"141#ReverseDriver\",\"1750\":\"141#combine-driver\",\"1751\":\"141#HTTPClientMixin\",\"1752\":\"141#HTTPClientMixin-request\",\"1753\":\"141#HTTPClientMixin-get-session\",\"1754\":\"141#HTTPServerSetup\",\"1755\":\"141#WebSocketClientMixin\",\"1756\":\"141#WebSocketClientMixin-websocket\",\"1757\":\"141#WebSocketServerSetup\",\"1758\":\"142\",\"1759\":\"142#Driver\",\"1760\":\"142#Driver-type\",\"1761\":\"142#Driver-logger\",\"1762\":\"142#Driver-run\",\"1763\":\"142#Driver-exit\",\"1764\":\"143\",\"1765\":\"143#Config\",\"1766\":\"143#Config-quart-reload\",\"1767\":\"143#Config-quart-reload-dirs\",\"1768\":\"143#Config-quart-reload-delay\",\"1769\":\"143#Config-quart-reload-includes\",\"1770\":\"143#Config-quart-reload-excludes\",\"1771\":\"143#Config-quart-extra\",\"1772\":\"143#Driver\",\"1773\":\"143#Driver-type\",\"1774\":\"143#Driver-server-app\",\"1775\":\"143#Driver-asgi\",\"1776\":\"143#Driver-logger\",\"1777\":\"143#Driver-setup-http-server\",\"1778\":\"143#Driver-setup-websocket-server\",\"1779\":\"143#Driver-run\",\"1780\":\"143#WebSocket\",\"1781\":\"143#WebSocket-accept\",\"1782\":\"143#WebSocket-close\",\"1783\":\"143#WebSocket-receive\",\"1784\":\"143#WebSocket-receive-text\",\"1785\":\"143#WebSocket-receive-bytes\",\"1786\":\"143#WebSocket-send-text\",\"1787\":\"143#WebSocket-send-bytes\",\"1788\":\"144\",\"1789\":\"144#catch-closed\",\"1790\":\"144#Mixin\",\"1791\":\"144#Mixin-websocket\",\"1792\":\"144#WebSocket\",\"1793\":\"144#WebSocket-accept\",\"1794\":\"144#WebSocket-close\",\"1795\":\"144#WebSocket-receive\",\"1796\":\"144#WebSocket-receive-text\",\"1797\":\"144#WebSocket-receive-bytes\",\"1798\":\"144#WebSocket-send-text\",\"1799\":\"144#WebSocket-send-bytes\",\"1800\":\"144#Driver\",\"1801\":\"145\",\"1802\":\"145#快捷导入\",\"1803\":\"145#get-plugin\",\"1804\":\"145#get-plugin-by-module-name\",\"1805\":\"145#get-loaded-plugins\",\"1806\":\"145#get-available-plugin-names\",\"1807\":\"145#get-plugin-config\",\"1808\":\"146\",\"1809\":\"146#load-plugin\",\"1810\":\"146#load-plugins\",\"1811\":\"146#load-all-plugins\",\"1812\":\"146#load-from-json\",\"1813\":\"146#load-from-toml\",\"1814\":\"146#load-builtin-plugin\",\"1815\":\"146#load-builtin-plugins\",\"1816\":\"146#require\",\"1817\":\"146#inherit-supported-adapters\",\"1818\":\"147\",\"1819\":\"147#PluginManager\",\"1820\":\"147#PluginManager-third-party-plugins\",\"1821\":\"147#PluginManager-searched-plugins\",\"1822\":\"147#PluginManager-available-plugins\",\"1823\":\"147#PluginManager-controlled-modules\",\"1824\":\"147#PluginManager-load-plugin\",\"1825\":\"147#PluginManager-load-all-plugins\",\"1826\":\"147#PluginFinder\",\"1827\":\"147#PluginFinder-find-spec\",\"1828\":\"147#PluginLoader\",\"1829\":\"147#PluginLoader-create-module\",\"1830\":\"147#PluginLoader-exec-module\",\"1831\":\"148\",\"1832\":\"148#PluginMetadata\",\"1833\":\"148#PluginMetadata-name\",\"1834\":\"148#PluginMetadata-description\",\"1835\":\"148#PluginMetadata-usage\",\"1836\":\"148#PluginMetadata-type\",\"1837\":\"148#PluginMetadata-homepage\",\"1838\":\"148#PluginMetadata-config\",\"1839\":\"148#PluginMetadata-supported-adapters\",\"1840\":\"148#PluginMetadata-extra\",\"1841\":\"148#PluginMetadata-get-supported-adapters\",\"1842\":\"148#Plugin\",\"1843\":\"148#Plugin-name\",\"1844\":\"148#Plugin-module\",\"1845\":\"148#Plugin-module-name\",\"1846\":\"148#Plugin-manager\",\"1847\":\"148#Plugin-matcher\",\"1848\":\"148#Plugin-parent-plugin\",\"1849\":\"148#Plugin-sub-plugins\",\"1850\":\"148#Plugin-id-\",\"1851\":\"149\",\"1852\":\"149#store-matcher\",\"1853\":\"149#get-matcher-plugin\",\"1854\":\"149#get-matcher-module\",\"1855\":\"149#get-matcher-source\",\"1856\":\"149#on\",\"1857\":\"149#on-metaevent\",\"1858\":\"149#on-message\",\"1859\":\"149#on-notice\",\"1860\":\"149#on-request\",\"1861\":\"149#on-startswith\",\"1862\":\"149#on-endswith\",\"1863\":\"149#on-fullmatch\",\"1864\":\"149#on-keyword\",\"1865\":\"149#on-command\",\"1866\":\"149#on-shell-command\",\"1867\":\"149#on-regex\",\"1868\":\"149#on-type\",\"1869\":\"149#CommandGroup\",\"1870\":\"149#CommandGroup-command\",\"1871\":\"149#CommandGroup-shell-command\",\"1872\":\"149#MatcherGroup\",\"1873\":\"149#MatcherGroup-on\",\"1874\":\"149#MatcherGroup-on-metaevent\",\"1875\":\"149#MatcherGroup-on-message\",\"1876\":\"149#MatcherGroup-on-notice\",\"1877\":\"149#MatcherGroup-on-request\",\"1878\":\"149#MatcherGroup-on-startswith\",\"1879\":\"149#MatcherGroup-on-endswith\",\"1880\":\"149#MatcherGroup-on-fullmatch\",\"1881\":\"149#MatcherGroup-on-keyword\",\"1882\":\"149#MatcherGroup-on-command\",\"1883\":\"149#MatcherGroup-on-shell-command\",\"1884\":\"149#MatcherGroup-on-regex\",\"1885\":\"149#MatcherGroup-on-type\",\"1886\":\"150\",\"1887\":\"150#命令头\",\"1888\":\"150#参数声明-args\",\"1889\":\"150#key\",\"1890\":\"150#var\",\"1891\":\"150#multivar-与-keywordvar\",\"1892\":\"150#default\",\"1893\":\"150#选项与子命令-option-subcommand\",\"1894\":\"150#action\",\"1895\":\"150#解析结果-arparma\",\"1896\":\"150#元数据-commandmeta\",\"1897\":\"150#命名空间配置\",\"1898\":\"150#新建命名空间并替换\",\"1899\":\"150#修改默认的命名空间\",\"1900\":\"150#快捷指令\",\"1901\":\"150#args的使用\",\"1902\":\"150#command的使用\",\"1903\":\"150#紧凑命令\",\"1904\":\"150#模糊匹配\",\"1905\":\"150#半自动补全\",\"1906\":\"150#duplication\",\"1907\":\"150#上下文插值\",\"1908\":\"151\",\"1909\":\"151#alconna-auto-send-output\",\"1910\":\"151#alconna-use-command-start\",\"1911\":\"151#alconna-auto-completion\",\"1912\":\"151#alconna-use-origin\",\"1913\":\"151#alconna-use-command-sep\",\"1914\":\"151#alconna-global-extensions\",\"1915\":\"151#alconna-context-style\",\"1916\":\"151#alconna-enable-saa-patch\",\"1917\":\"151#alconna-apply-filehost\",\"1918\":\"151#alconna-apply-fetch-targets\",\"1919\":\"152\",\"1920\":\"152#示例\",\"1921\":\"152#创建新机器人\",\"1922\":\"152#卸载插件\",\"1923\":\"152#cli\",\"1924\":\"152#heads\",\"1925\":\"152#upgrade\",\"1926\":\"152#downgrade\",\"1927\":\"152#check\",\"1928\":\"152#配置\",\"1929\":\"152#sqlalchemy-database-url\",\"1930\":\"152#sqlalchemy-bind\",\"1931\":\"152#sqlalchemy-engine-options\",\"1932\":\"152#sqlalchemy-echo\",\"1933\":\"153\",\"1934\":\"153#测试-http-服务端\",\"1935\":\"153#测试-websocket-服务端\",\"1936\":\"153#测试-http-客户端\",\"1937\":\"153#测试-websocket-客户端\",\"1938\":\"154\",\"1939\":\"154#Bot\",\"1940\":\"154#Bot-adapter\",\"1941\":\"154#Bot-self-id\",\"1942\":\"154#Bot-type\",\"1943\":\"154#Bot-config\",\"1944\":\"154#Bot-call-api\",\"1945\":\"154#Bot-send\",\"1946\":\"154#Bot-on-calling-api\",\"1947\":\"154#Bot-on-called-api\",\"1948\":\"154#Event\",\"1949\":\"154#Event-get-type\",\"1950\":\"154#Event-get-event-name\",\"1951\":\"154#Event-get-event-description\",\"1952\":\"154#Event-get-log-string\",\"1953\":\"154#Event-get-user-id\",\"1954\":\"154#Event-get-session-id\",\"1955\":\"154#Event-get-message\",\"1956\":\"154#Event-get-plaintext\",\"1957\":\"154#Event-is-tome\",\"1958\":\"154#Adapter\",\"1959\":\"154#Adapter-driver\",\"1960\":\"154#Adapter-bots\",\"1961\":\"154#Adapter-get-name\",\"1962\":\"154#Adapter-config\",\"1963\":\"154#Adapter-bot-connect\",\"1964\":\"154#Adapter-bot-disconnect\",\"1965\":\"154#Adapter-setup-http-server\",\"1966\":\"154#Adapter-setup-websocket-server\",\"1967\":\"154#Adapter-request\",\"1968\":\"154#Adapter-websocket\",\"1969\":\"154#Adapter-on-ready\",\"1970\":\"154#Message\",\"1971\":\"154#Message-template\",\"1972\":\"154#Message-get-segment-class\",\"1973\":\"154#Message--construct\",\"1974\":\"154#Message---getitem--\",\"1975\":\"154#Message---contains--\",\"1976\":\"154#Message-has\",\"1977\":\"154#Message-index\",\"1978\":\"154#Message-get\",\"1979\":\"154#Message-count\",\"1980\":\"154#Message-only\",\"1981\":\"154#Message-append\",\"1982\":\"154#Message-extend\",\"1983\":\"154#Message-join\",\"1984\":\"154#Message-copy\",\"1985\":\"154#Message-include\",\"1986\":\"154#Message-exclude\",\"1987\":\"154#Message-extract-plain-text\",\"1988\":\"154#MessageSegment\",\"1989\":\"154#MessageSegment-type\",\"1990\":\"154#MessageSegment-data\",\"1991\":\"154#MessageSegment-get-message-class\",\"1992\":\"154#MessageSegment---str--\",\"1993\":\"154#MessageSegment---add--\",\"1994\":\"154#MessageSegment-get\",\"1995\":\"154#MessageSegment-keys\",\"1996\":\"154#MessageSegment-values\",\"1997\":\"154#MessageSegment-items\",\"1998\":\"154#MessageSegment-join\",\"1999\":\"154#MessageSegment-copy\",\"2000\":\"154#MessageSegment-is-text\",\"2001\":\"154#MessageTemplate\",\"2002\":\"154#MessageTemplate-add-format-spec\",\"2003\":\"154#MessageTemplate-format\",\"2004\":\"154#MessageTemplate-format-map\",\"2005\":\"154#MessageTemplate-vformat\",\"2006\":\"154#MessageTemplate-get-field\",\"2007\":\"154#MessageTemplate-format-field\",\"2008\":\"155\",\"2009\":\"155#Param\",\"2010\":\"155#Dependent\",\"2011\":\"155#Dependent-parse-params\",\"2012\":\"155#Dependent-parse-parameterless\",\"2013\":\"155#Dependent-parse\",\"2014\":\"155#Dependent-check\",\"2015\":\"155#Dependent-solve\",\"2016\":\"156\",\"2017\":\"156#get-typed-signature\",\"2018\":\"156#get-typed-annotation\",\"2019\":\"156#check-field-type\",\"2020\":\"157\",\"2021\":\"157#Session\",\"2022\":\"157#Session-request\",\"2023\":\"157#Session-setup\",\"2024\":\"157#Session-close\",\"2025\":\"157#Mixin\",\"2026\":\"157#Mixin-request\",\"2027\":\"157#Mixin-websocket\",\"2028\":\"157#Mixin-get-session\",\"2029\":\"157#WebSocket\",\"2030\":\"157#WebSocket-accept\",\"2031\":\"157#WebSocket-close\",\"2032\":\"157#WebSocket-receive\",\"2033\":\"157#WebSocket-receive-text\",\"2034\":\"157#WebSocket-receive-bytes\",\"2035\":\"157#WebSocket-send-text\",\"2036\":\"157#WebSocket-send-bytes\",\"2037\":\"157#Driver\",\"2038\":\"158\",\"2039\":\"158#Config\",\"2040\":\"158#Config-fastapi-openapi-url\",\"2041\":\"158#Config-fastapi-docs-url\",\"2042\":\"158#Config-fastapi-redoc-url\",\"2043\":\"158#Config-fastapi-include-adapter-schema\",\"2044\":\"158#Config-fastapi-reload\",\"2045\":\"158#Config-fastapi-reload-dirs\",\"2046\":\"158#Config-fastapi-reload-delay\",\"2047\":\"158#Config-fastapi-reload-includes\",\"2048\":\"158#Config-fastapi-reload-excludes\",\"2049\":\"158#Config-fastapi-extra\",\"2050\":\"158#Driver\",\"2051\":\"158#Driver-type\",\"2052\":\"158#Driver-server-app\",\"2053\":\"158#Driver-asgi\",\"2054\":\"158#Driver-logger\",\"2055\":\"158#Driver-setup-http-server\",\"2056\":\"158#Driver-setup-websocket-server\",\"2057\":\"158#Driver-run\",\"2058\":\"158#FastAPIWebSocket\",\"2059\":\"158#FastAPIWebSocket-accept\",\"2060\":\"158#FastAPIWebSocket-close\",\"2061\":\"158#FastAPIWebSocket-receive\",\"2062\":\"158#FastAPIWebSocket-receive-text\",\"2063\":\"158#FastAPIWebSocket-receive-bytes\",\"2064\":\"158#FastAPIWebSocket-send-text\",\"2065\":\"158#FastAPIWebSocket-send-bytes\",\"2066\":\"159\",\"2067\":\"159#Session\",\"2068\":\"159#Session-request\",\"2069\":\"159#Session-setup\",\"2070\":\"159#Session-close\",\"2071\":\"159#Mixin\",\"2072\":\"159#Mixin-request\",\"2073\":\"159#Mixin-get-session\",\"2074\":\"159#Driver\",\"2075\":\"160\",\"2076\":\"160#Mixin\",\"2077\":\"160#Mixin-type\",\"2078\":\"160#Driver\",\"2079\":\"160#Driver-env\",\"2080\":\"160#Driver-config\",\"2081\":\"160#Driver-bots\",\"2082\":\"160#Driver-register-adapter\",\"2083\":\"160#Driver-type\",\"2084\":\"160#Driver-logger\",\"2085\":\"160#Driver-run\",\"2086\":\"160#Driver-on-startup\",\"2087\":\"160#Driver-on-shutdown\",\"2088\":\"160#Driver-on-bot-connect\",\"2089\":\"160#Driver-on-bot-disconnect\",\"2090\":\"160#Cookies\",\"2091\":\"160#Cookies-set\",\"2092\":\"160#Cookies-get\",\"2093\":\"160#Cookies-delete\",\"2094\":\"160#Cookies-clear\",\"2095\":\"160#Cookies-update\",\"2096\":\"160#Cookies-as-header\",\"2097\":\"160#Request\",\"2098\":\"160#Response\",\"2099\":\"160#ASGIMixin\",\"2100\":\"160#ASGIMixin-server-app\",\"2101\":\"160#ASGIMixin-asgi\",\"2102\":\"160#ASGIMixin-setup-http-server\",\"2103\":\"160#ASGIMixin-setup-websocket-server\",\"2104\":\"160#WebSocket\",\"2105\":\"160#WebSocket-closed\",\"2106\":\"160#WebSocket-accept\",\"2107\":\"160#WebSocket-close\",\"2108\":\"160#WebSocket-receive\",\"2109\":\"160#WebSocket-receive-text\",\"2110\":\"160#WebSocket-receive-bytes\",\"2111\":\"160#WebSocket-send\",\"2112\":\"160#WebSocket-send-text\",\"2113\":\"160#WebSocket-send-bytes\",\"2114\":\"160#HTTPVersion\",\"2115\":\"160#ForwardMixin\",\"2116\":\"160#ReverseMixin\",\"2117\":\"160#ForwardDriver\",\"2118\":\"160#ReverseDriver\",\"2119\":\"160#combine-driver\",\"2120\":\"160#HTTPClientMixin\",\"2121\":\"160#HTTPClientMixin-request\",\"2122\":\"160#HTTPClientMixin-get-session\",\"2123\":\"160#HTTPServerSetup\",\"2124\":\"160#WebSocketClientMixin\",\"2125\":\"160#WebSocketClientMixin-websocket\",\"2126\":\"160#WebSocketServerSetup\",\"2127\":\"161\",\"2128\":\"161#Driver\",\"2129\":\"161#Driver-type\",\"2130\":\"161#Driver-logger\",\"2131\":\"161#Driver-run\",\"2132\":\"161#Driver-exit\",\"2133\":\"162\",\"2134\":\"162#Config\",\"2135\":\"162#Config-quart-reload\",\"2136\":\"162#Config-quart-reload-dirs\",\"2137\":\"162#Config-quart-reload-delay\",\"2138\":\"162#Config-quart-reload-includes\",\"2139\":\"162#Config-quart-reload-excludes\",\"2140\":\"162#Config-quart-extra\",\"2141\":\"162#Driver\",\"2142\":\"162#Driver-type\",\"2143\":\"162#Driver-server-app\",\"2144\":\"162#Driver-asgi\",\"2145\":\"162#Driver-logger\",\"2146\":\"162#Driver-setup-http-server\",\"2147\":\"162#Driver-setup-websocket-server\",\"2148\":\"162#Driver-run\",\"2149\":\"162#WebSocket\",\"2150\":\"162#WebSocket-accept\",\"2151\":\"162#WebSocket-close\",\"2152\":\"162#WebSocket-receive\",\"2153\":\"162#WebSocket-receive-text\",\"2154\":\"162#WebSocket-receive-bytes\",\"2155\":\"162#WebSocket-send-text\",\"2156\":\"162#WebSocket-send-bytes\",\"2157\":\"163\",\"2158\":\"163#catch-closed\",\"2159\":\"163#Mixin\",\"2160\":\"163#Mixin-websocket\",\"2161\":\"163#WebSocket\",\"2162\":\"163#WebSocket-accept\",\"2163\":\"163#WebSocket-close\",\"2164\":\"163#WebSocket-receive\",\"2165\":\"163#WebSocket-receive-text\",\"2166\":\"163#WebSocket-receive-bytes\",\"2167\":\"163#WebSocket-send-text\",\"2168\":\"163#WebSocket-send-bytes\",\"2169\":\"163#Driver\",\"2170\":\"164\",\"2171\":\"164#快捷导入\",\"2172\":\"164#get-plugin\",\"2173\":\"164#get-plugin-by-module-name\",\"2174\":\"164#get-loaded-plugins\",\"2175\":\"164#get-available-plugin-names\",\"2176\":\"164#get-plugin-config\",\"2177\":\"165\",\"2178\":\"165#load-plugin\",\"2179\":\"165#load-plugins\",\"2180\":\"165#load-all-plugins\",\"2181\":\"165#load-from-json\",\"2182\":\"165#load-from-toml\",\"2183\":\"165#load-builtin-plugin\",\"2184\":\"165#load-builtin-plugins\",\"2185\":\"165#require\",\"2186\":\"165#inherit-supported-adapters\",\"2187\":\"166\",\"2188\":\"166#PluginManager\",\"2189\":\"166#PluginManager-third-party-plugins\",\"2190\":\"166#PluginManager-searched-plugins\",\"2191\":\"166#PluginManager-available-plugins\",\"2192\":\"166#PluginManager-controlled-modules\",\"2193\":\"166#PluginManager-load-plugin\",\"2194\":\"166#PluginManager-load-all-plugins\",\"2195\":\"166#PluginFinder\",\"2196\":\"166#PluginFinder-find-spec\",\"2197\":\"166#PluginLoader\",\"2198\":\"166#PluginLoader-create-module\",\"2199\":\"166#PluginLoader-exec-module\",\"2200\":\"167\",\"2201\":\"167#PluginMetadata\",\"2202\":\"167#PluginMetadata-name\",\"2203\":\"167#PluginMetadata-description\",\"2204\":\"167#PluginMetadata-usage\",\"2205\":\"167#PluginMetadata-type\",\"2206\":\"167#PluginMetadata-homepage\",\"2207\":\"167#PluginMetadata-config\",\"2208\":\"167#PluginMetadata-supported-adapters\",\"2209\":\"167#PluginMetadata-extra\",\"2210\":\"167#PluginMetadata-get-supported-adapters\",\"2211\":\"167#Plugin\",\"2212\":\"167#Plugin-name\",\"2213\":\"167#Plugin-module\",\"2214\":\"167#Plugin-module-name\",\"2215\":\"167#Plugin-manager\",\"2216\":\"167#Plugin-matcher\",\"2217\":\"167#Plugin-parent-plugin\",\"2218\":\"167#Plugin-sub-plugins\",\"2219\":\"167#Plugin-id-\",\"2220\":\"168\",\"2221\":\"168#store-matcher\",\"2222\":\"168#get-matcher-plugin\",\"2223\":\"168#get-matcher-module\",\"2224\":\"168#get-matcher-source\",\"2225\":\"168#on\",\"2226\":\"168#on-metaevent\",\"2227\":\"168#on-message\",\"2228\":\"168#on-notice\",\"2229\":\"168#on-request\",\"2230\":\"168#on-startswith\",\"2231\":\"168#on-endswith\",\"2232\":\"168#on-fullmatch\",\"2233\":\"168#on-keyword\",\"2234\":\"168#on-command\",\"2235\":\"168#on-shell-command\",\"2236\":\"168#on-regex\",\"2237\":\"168#on-type\",\"2238\":\"168#CommandGroup\",\"2239\":\"168#CommandGroup-command\",\"2240\":\"168#CommandGroup-shell-command\",\"2241\":\"168#MatcherGroup\",\"2242\":\"168#MatcherGroup-on\",\"2243\":\"168#MatcherGroup-on-metaevent\",\"2244\":\"168#MatcherGroup-on-message\",\"2245\":\"168#MatcherGroup-on-notice\",\"2246\":\"168#MatcherGroup-on-request\",\"2247\":\"168#MatcherGroup-on-startswith\",\"2248\":\"168#MatcherGroup-on-endswith\",\"2249\":\"168#MatcherGroup-on-fullmatch\",\"2250\":\"168#MatcherGroup-on-keyword\",\"2251\":\"168#MatcherGroup-on-command\",\"2252\":\"168#MatcherGroup-on-shell-command\",\"2253\":\"168#MatcherGroup-on-regex\",\"2254\":\"168#MatcherGroup-on-type\",\"2255\":\"169\",\"2256\":\"169#命令头\",\"2257\":\"169#参数声明-args\",\"2258\":\"169#key\",\"2259\":\"169#var\",\"2260\":\"169#multivar-与-keywordvar\",\"2261\":\"169#default\",\"2262\":\"169#选项与子命令-option-subcommand\",\"2263\":\"169#action\",\"2264\":\"169#解析结果-arparma\",\"2265\":\"169#元数据-commandmeta\",\"2266\":\"169#命名空间配置\",\"2267\":\"169#新建命名空间并替换\",\"2268\":\"169#修改默认的命名空间\",\"2269\":\"169#快捷指令\",\"2270\":\"169#args的使用\",\"2271\":\"169#command的使用\",\"2272\":\"169#紧凑命令\",\"2273\":\"169#模糊匹配\",\"2274\":\"169#半自动补全\",\"2275\":\"169#duplication\",\"2276\":\"169#上下文插值\",\"2277\":\"170\",\"2278\":\"170#alconna-auto-send-output\",\"2279\":\"170#alconna-use-command-start\",\"2280\":\"170#alconna-auto-completion\",\"2281\":\"170#alconna-use-origin\",\"2282\":\"170#alconna-use-command-sep\",\"2283\":\"170#alconna-global-extensions\",\"2284\":\"170#alconna-context-style\",\"2285\":\"170#alconna-enable-saa-patch\",\"2286\":\"170#alconna-apply-filehost\",\"2287\":\"170#alconna-apply-fetch-targets\",\"2288\":\"171\",\"2289\":\"171#示例\",\"2290\":\"171#创建新机器人\",\"2291\":\"171#卸载插件\",\"2292\":\"171#cli\",\"2293\":\"171#heads\",\"2294\":\"171#upgrade\",\"2295\":\"171#downgrade\",\"2296\":\"171#check\",\"2297\":\"171#配置\",\"2298\":\"171#sqlalchemy-database-url\",\"2299\":\"171#sqlalchemy-bind\",\"2300\":\"171#sqlalchemy-engine-options\",\"2301\":\"171#sqlalchemy-echo\",\"2302\":\"172\",\"2303\":\"172#测试-http-服务端\",\"2304\":\"172#测试-websocket-服务端\",\"2305\":\"172#测试-http-客户端\",\"2306\":\"172#测试-websocket-客户端\",\"2307\":\"173\",\"2308\":\"173#Adapter\",\"2309\":\"173#Adapter-driver\",\"2310\":\"173#Adapter-bots\",\"2311\":\"173#Adapter-get-name\",\"2312\":\"173#Adapter-config\",\"2313\":\"173#Adapter-bot-connect\",\"2314\":\"173#Adapter-bot-disconnect\",\"2315\":\"173#Adapter-setup-http-server\",\"2316\":\"173#Adapter-setup-websocket-server\",\"2317\":\"173#Adapter-request\",\"2318\":\"173#Adapter-websocket\",\"2319\":\"173#Adapter-on-ready\",\"2320\":\"173#Bot\",\"2321\":\"173#Bot-adapter\",\"2322\":\"173#Bot-self-id\",\"2323\":\"173#Bot-type\",\"2324\":\"173#Bot-config\",\"2325\":\"173#Bot-call-api\",\"2326\":\"173#Bot-send\",\"2327\":\"173#Bot-on-calling-api\",\"2328\":\"173#Bot-on-called-api\",\"2329\":\"173#Event\",\"2330\":\"173#Event-get-type\",\"2331\":\"173#Event-get-event-name\",\"2332\":\"173#Event-get-event-description\",\"2333\":\"173#Event-get-log-string\",\"2334\":\"173#Event-get-user-id\",\"2335\":\"173#Event-get-session-id\",\"2336\":\"173#Event-get-message\",\"2337\":\"173#Event-get-plaintext\",\"2338\":\"173#Event-is-tome\",\"2339\":\"173#Message\",\"2340\":\"173#Message-template\",\"2341\":\"173#Message-get-segment-class\",\"2342\":\"173#Message--construct\",\"2343\":\"173#Message---getitem--\",\"2344\":\"173#Message---contains--\",\"2345\":\"173#Message-has\",\"2346\":\"173#Message-index\",\"2347\":\"173#Message-get\",\"2348\":\"173#Message-count\",\"2349\":\"173#Message-only\",\"2350\":\"173#Message-append\",\"2351\":\"173#Message-extend\",\"2352\":\"173#Message-join\",\"2353\":\"173#Message-copy\",\"2354\":\"173#Message-include\",\"2355\":\"173#Message-exclude\",\"2356\":\"173#Message-extract-plain-text\",\"2357\":\"173#MessageSegment\",\"2358\":\"173#MessageSegment-type\",\"2359\":\"173#MessageSegment-data\",\"2360\":\"173#MessageSegment-get-message-class\",\"2361\":\"173#MessageSegment---str--\",\"2362\":\"173#MessageSegment---add--\",\"2363\":\"173#MessageSegment-get\",\"2364\":\"173#MessageSegment-keys\",\"2365\":\"173#MessageSegment-values\",\"2366\":\"173#MessageSegment-items\",\"2367\":\"173#MessageSegment-join\",\"2368\":\"173#MessageSegment-copy\",\"2369\":\"173#MessageSegment-is-text\",\"2370\":\"173#MessageTemplate\",\"2371\":\"173#MessageTemplate-add-format-spec\",\"2372\":\"173#MessageTemplate-format\",\"2373\":\"173#MessageTemplate-format-map\",\"2374\":\"173#MessageTemplate-vformat\",\"2375\":\"173#MessageTemplate-get-field\",\"2376\":\"173#MessageTemplate-format-field\",\"2377\":\"174\",\"2378\":\"174#Param\",\"2379\":\"174#Dependent\",\"2380\":\"174#Dependent-parse-params\",\"2381\":\"174#Dependent-parse-parameterless\",\"2382\":\"174#Dependent-parse\",\"2383\":\"174#Dependent-check\",\"2384\":\"174#Dependent-solve\",\"2385\":\"175\",\"2386\":\"175#get-typed-signature\",\"2387\":\"175#get-typed-annotation\",\"2388\":\"175#check-field-type\",\"2389\":\"176\",\"2390\":\"176#Session\",\"2391\":\"176#Session-request\",\"2392\":\"176#Session-setup\",\"2393\":\"176#Session-close\",\"2394\":\"176#Mixin\",\"2395\":\"176#Mixin-request\",\"2396\":\"176#Mixin-websocket\",\"2397\":\"176#Mixin-get-session\",\"2398\":\"176#WebSocket\",\"2399\":\"176#WebSocket-accept\",\"2400\":\"176#WebSocket-close\",\"2401\":\"176#WebSocket-receive\",\"2402\":\"176#WebSocket-receive-text\",\"2403\":\"176#WebSocket-receive-bytes\",\"2404\":\"176#WebSocket-send-text\",\"2405\":\"176#WebSocket-send-bytes\",\"2406\":\"176#Driver\",\"2407\":\"177\",\"2408\":\"177#Config\",\"2409\":\"177#Config-fastapi-openapi-url\",\"2410\":\"177#Config-fastapi-docs-url\",\"2411\":\"177#Config-fastapi-redoc-url\",\"2412\":\"177#Config-fastapi-include-adapter-schema\",\"2413\":\"177#Config-fastapi-reload\",\"2414\":\"177#Config-fastapi-reload-dirs\",\"2415\":\"177#Config-fastapi-reload-delay\",\"2416\":\"177#Config-fastapi-reload-includes\",\"2417\":\"177#Config-fastapi-reload-excludes\",\"2418\":\"177#Config-fastapi-extra\",\"2419\":\"177#Driver\",\"2420\":\"177#Driver-type\",\"2421\":\"177#Driver-server-app\",\"2422\":\"177#Driver-asgi\",\"2423\":\"177#Driver-logger\",\"2424\":\"177#Driver-setup-http-server\",\"2425\":\"177#Driver-setup-websocket-server\",\"2426\":\"177#Driver-run\",\"2427\":\"177#FastAPIWebSocket\",\"2428\":\"177#FastAPIWebSocket-accept\",\"2429\":\"177#FastAPIWebSocket-close\",\"2430\":\"177#FastAPIWebSocket-receive\",\"2431\":\"177#FastAPIWebSocket-receive-text\",\"2432\":\"177#FastAPIWebSocket-receive-bytes\",\"2433\":\"177#FastAPIWebSocket-send-text\",\"2434\":\"177#FastAPIWebSocket-send-bytes\",\"2435\":\"178\",\"2436\":\"178#Session\",\"2437\":\"178#Session-request\",\"2438\":\"178#Session-setup\",\"2439\":\"178#Session-close\",\"2440\":\"178#Mixin\",\"2441\":\"178#Mixin-request\",\"2442\":\"178#Mixin-get-session\",\"2443\":\"178#Driver\",\"2444\":\"179\",\"2445\":\"179#ASGIMixin\",\"2446\":\"179#ASGIMixin-server-app\",\"2447\":\"179#ASGIMixin-asgi\",\"2448\":\"179#ASGIMixin-setup-http-server\",\"2449\":\"179#ASGIMixin-setup-websocket-server\",\"2450\":\"179#Cookies\",\"2451\":\"179#Cookies-set\",\"2452\":\"179#Cookies-get\",\"2453\":\"179#Cookies-delete\",\"2454\":\"179#Cookies-clear\",\"2455\":\"179#Cookies-update\",\"2456\":\"179#Cookies-as-header\",\"2457\":\"179#Driver\",\"2458\":\"179#Driver-env\",\"2459\":\"179#Driver-config\",\"2460\":\"179#Driver-bots\",\"2461\":\"179#Driver-register-adapter\",\"2462\":\"179#Driver-type\",\"2463\":\"179#Driver-logger\",\"2464\":\"179#Driver-run\",\"2465\":\"179#Driver-on-startup\",\"2466\":\"179#Driver-on-shutdown\",\"2467\":\"179#Driver-on-bot-connect\",\"2468\":\"179#Driver-on-bot-disconnect\",\"2469\":\"179#ForwardDriver\",\"2470\":\"179#ForwardMixin\",\"2471\":\"179#HTTPClientMixin\",\"2472\":\"179#HTTPClientMixin-request\",\"2473\":\"179#HTTPClientMixin-get-session\",\"2474\":\"179#HTTPServerSetup\",\"2475\":\"179#HTTPVersion\",\"2476\":\"179#Mixin\",\"2477\":\"179#Mixin-type\",\"2478\":\"179#Request\",\"2479\":\"179#Response\",\"2480\":\"179#ReverseDriver\",\"2481\":\"179#ReverseMixin\",\"2482\":\"179#WebSocket\",\"2483\":\"179#WebSocket-closed\",\"2484\":\"179#WebSocket-accept\",\"2485\":\"179#WebSocket-close\",\"2486\":\"179#WebSocket-receive\",\"2487\":\"179#WebSocket-receive-text\",\"2488\":\"179#WebSocket-receive-bytes\",\"2489\":\"179#WebSocket-send\",\"2490\":\"179#WebSocket-send-text\",\"2491\":\"179#WebSocket-send-bytes\",\"2492\":\"179#WebSocketClientMixin\",\"2493\":\"179#WebSocketClientMixin-websocket\",\"2494\":\"179#WebSocketServerSetup\",\"2495\":\"179#combine-driver\",\"2496\":\"180\",\"2497\":\"180#Driver\",\"2498\":\"180#Driver-type\",\"2499\":\"180#Driver-logger\",\"2500\":\"180#Driver-run\",\"2501\":\"180#Driver-exit\",\"2502\":\"181\",\"2503\":\"181#Config\",\"2504\":\"181#Config-quart-reload\",\"2505\":\"181#Config-quart-reload-dirs\",\"2506\":\"181#Config-quart-reload-delay\",\"2507\":\"181#Config-quart-reload-includes\",\"2508\":\"181#Config-quart-reload-excludes\",\"2509\":\"181#Config-quart-extra\",\"2510\":\"181#Driver\",\"2511\":\"181#Driver-type\",\"2512\":\"181#Driver-server-app\",\"2513\":\"181#Driver-asgi\",\"2514\":\"181#Driver-logger\",\"2515\":\"181#Driver-setup-http-server\",\"2516\":\"181#Driver-setup-websocket-server\",\"2517\":\"181#Driver-run\",\"2518\":\"181#WebSocket\",\"2519\":\"181#WebSocket-accept\",\"2520\":\"181#WebSocket-close\",\"2521\":\"181#WebSocket-receive\",\"2522\":\"181#WebSocket-receive-text\",\"2523\":\"181#WebSocket-receive-bytes\",\"2524\":\"181#WebSocket-send-text\",\"2525\":\"181#WebSocket-send-bytes\",\"2526\":\"182\",\"2527\":\"182#catch-closed\",\"2528\":\"182#Mixin\",\"2529\":\"182#Mixin-websocket\",\"2530\":\"182#WebSocket\",\"2531\":\"182#WebSocket-accept\",\"2532\":\"182#WebSocket-close\",\"2533\":\"182#WebSocket-receive\",\"2534\":\"182#WebSocket-receive-text\",\"2535\":\"182#WebSocket-receive-bytes\",\"2536\":\"182#WebSocket-send-text\",\"2537\":\"182#WebSocket-send-bytes\",\"2538\":\"182#Driver\",\"2539\":\"183\",\"2540\":\"183#快捷导入\",\"2541\":\"183#get-plugin\",\"2542\":\"183#get-plugin-by-module-name\",\"2543\":\"183#get-loaded-plugins\",\"2544\":\"183#get-available-plugin-names\",\"2545\":\"183#get-plugin-config\",\"2546\":\"184\",\"2547\":\"184#load-plugin\",\"2548\":\"184#load-plugins\",\"2549\":\"184#load-all-plugins\",\"2550\":\"184#load-from-json\",\"2551\":\"184#load-from-toml\",\"2552\":\"184#load-builtin-plugin\",\"2553\":\"184#load-builtin-plugins\",\"2554\":\"184#require\",\"2555\":\"184#inherit-supported-adapters\",\"2556\":\"185\",\"2557\":\"185#PluginManager\",\"2558\":\"185#PluginManager-third-party-plugins\",\"2559\":\"185#PluginManager-searched-plugins\",\"2560\":\"185#PluginManager-available-plugins\",\"2561\":\"185#PluginManager-controlled-modules\",\"2562\":\"185#PluginManager-load-plugin\",\"2563\":\"185#PluginManager-load-all-plugins\",\"2564\":\"185#PluginFinder\",\"2565\":\"185#PluginFinder-find-spec\",\"2566\":\"185#PluginLoader\",\"2567\":\"185#PluginLoader-create-module\",\"2568\":\"185#PluginLoader-exec-module\",\"2569\":\"186\",\"2570\":\"186#PluginMetadata\",\"2571\":\"186#PluginMetadata-name\",\"2572\":\"186#PluginMetadata-description\",\"2573\":\"186#PluginMetadata-usage\",\"2574\":\"186#PluginMetadata-type\",\"2575\":\"186#PluginMetadata-homepage\",\"2576\":\"186#PluginMetadata-config\",\"2577\":\"186#PluginMetadata-supported-adapters\",\"2578\":\"186#PluginMetadata-extra\",\"2579\":\"186#PluginMetadata-get-supported-adapters\",\"2580\":\"186#Plugin\",\"2581\":\"186#Plugin-name\",\"2582\":\"186#Plugin-module\",\"2583\":\"186#Plugin-module-name\",\"2584\":\"186#Plugin-manager\",\"2585\":\"186#Plugin-matcher\",\"2586\":\"186#Plugin-parent-plugin\",\"2587\":\"186#Plugin-sub-plugins\",\"2588\":\"186#Plugin-id-\",\"2589\":\"187\",\"2590\":\"187#store-matcher\",\"2591\":\"187#get-matcher-plugin\",\"2592\":\"187#get-matcher-module\",\"2593\":\"187#get-matcher-source\",\"2594\":\"187#on\",\"2595\":\"187#on-metaevent\",\"2596\":\"187#on-message\",\"2597\":\"187#on-notice\",\"2598\":\"187#on-request\",\"2599\":\"187#on-startswith\",\"2600\":\"187#on-endswith\",\"2601\":\"187#on-fullmatch\",\"2602\":\"187#on-keyword\",\"2603\":\"187#on-command\",\"2604\":\"187#on-shell-command\",\"2605\":\"187#on-regex\",\"2606\":\"187#on-type\",\"2607\":\"187#CommandGroup\",\"2608\":\"187#CommandGroup-command\",\"2609\":\"187#CommandGroup-shell-command\",\"2610\":\"187#MatcherGroup\",\"2611\":\"187#MatcherGroup-on\",\"2612\":\"187#MatcherGroup-on-metaevent\",\"2613\":\"187#MatcherGroup-on-message\",\"2614\":\"187#MatcherGroup-on-notice\",\"2615\":\"187#MatcherGroup-on-request\",\"2616\":\"187#MatcherGroup-on-startswith\",\"2617\":\"187#MatcherGroup-on-endswith\",\"2618\":\"187#MatcherGroup-on-fullmatch\",\"2619\":\"187#MatcherGroup-on-keyword\",\"2620\":\"187#MatcherGroup-on-command\",\"2621\":\"187#MatcherGroup-on-shell-command\",\"2622\":\"187#MatcherGroup-on-regex\",\"2623\":\"187#MatcherGroup-on-type\",\"2624\":\"188\",\"2625\":\"188#命令头\",\"2626\":\"188#参数声明-args\",\"2627\":\"188#key\",\"2628\":\"188#var\",\"2629\":\"188#multivar-与-keywordvar\",\"2630\":\"188#default\",\"2631\":\"188#选项与子命令-option-subcommand\",\"2632\":\"188#action\",\"2633\":\"188#解析结果-arparma\",\"2634\":\"188#元数据-commandmeta\",\"2635\":\"188#命名空间配置\",\"2636\":\"188#新建命名空间并替换\",\"2637\":\"188#修改默认的命名空间\",\"2638\":\"188#快捷指令\",\"2639\":\"188#args的使用\",\"2640\":\"188#command的使用\",\"2641\":\"188#紧凑命令\",\"2642\":\"188#模糊匹配\",\"2643\":\"188#半自动补全\",\"2644\":\"188#duplication\",\"2645\":\"188#上下文插值\",\"2646\":\"189\",\"2647\":\"189#alconna-auto-send-output\",\"2648\":\"189#alconna-use-command-start\",\"2649\":\"189#alconna-auto-completion\",\"2650\":\"189#alconna-use-origin\",\"2651\":\"189#alconna-use-command-sep\",\"2652\":\"189#alconna-global-extensions\",\"2653\":\"189#alconna-context-style\",\"2654\":\"189#alconna-enable-saa-patch\",\"2655\":\"189#alconna-apply-filehost\",\"2656\":\"189#alconna-apply-fetch-targets\",\"2657\":\"190\",\"2658\":\"190#示例\",\"2659\":\"190#创建新机器人\",\"2660\":\"190#卸载插件\",\"2661\":\"190#cli\",\"2662\":\"190#heads\",\"2663\":\"190#upgrade\",\"2664\":\"190#downgrade\",\"2665\":\"190#check\",\"2666\":\"190#配置\",\"2667\":\"190#sqlalchemy-database-url\",\"2668\":\"190#sqlalchemy-bind\",\"2669\":\"190#sqlalchemy-engine-options\",\"2670\":\"190#sqlalchemy-echo\",\"2671\":\"191\",\"2672\":\"191#测试-http-服务端\",\"2673\":\"191#测试-websocket-服务端\",\"2674\":\"191#测试-http-客户端\",\"2675\":\"191#测试-websocket-客户端\",\"2676\":\"192\",\"2677\":\"192#示例\",\"2678\":\"192#模型定义\",\"2679\":\"192#首次迁移\",\"2680\":\"192#会话管理\",\"2681\":\"192#依赖注入\",\"2682\":\"193\",\"2683\":\"193#数据库会话\",\"2684\":\"193#asyncsession\",\"2685\":\"193#async-scoped-session\",\"2686\":\"193#查询数据\",\"2687\":\"193#model\",\"2688\":\"193#sqldepends\",\"2689\":\"193#类型标注\",\"2690\":\"194\",\"2691\":\"195\",\"2692\":\"195#示例\",\"2693\":\"195#模型定义\",\"2694\":\"195#首次迁移\",\"2695\":\"195#会话管理\",\"2696\":\"195#依赖注入\",\"2697\":\"196\",\"2698\":\"196#数据库会话\",\"2699\":\"196#asyncsession\",\"2700\":\"196#async-scoped-session\",\"2701\":\"196#查询数据\",\"2702\":\"196#model\",\"2703\":\"196#sqldepends\",\"2704\":\"196#类型标注\",\"2705\":\"197\",\"2706\":\"198\",\"2707\":\"198#示例\",\"2708\":\"198#模型定义\",\"2709\":\"198#首次迁移\",\"2710\":\"198#会话管理\",\"2711\":\"198#依赖注入\",\"2712\":\"199\",\"2713\":\"199#数据库会话\",\"2714\":\"199#asyncsession\",\"2715\":\"199#async-scoped-session\",\"2716\":\"199#查询数据\",\"2717\":\"199#model\",\"2718\":\"199#sqldepends\",\"2719\":\"199#类型标注\",\"2720\":\"200\",\"2721\":\"201\",\"2722\":\"202\",\"2723\":\"203\",\"2724\":\"204\",\"2725\":\"205\",\"2726\":\"206\",\"2727\":\"207\",\"2728\":\"208\",\"2729\":\"209\",\"2730\":\"210\",\"2731\":\"211\",\"2732\":\"212\",\"2733\":\"213\",\"2734\":\"214\",\"2735\":\"215\",\"2736\":\"216\",\"2737\":\"217\",\"2738\":\"218\",\"2739\":\"219\",\"2740\":\"220\",\"2741\":\"221\",\"2742\":\"222\",\"2743\":\"223\",\"2744\":\"224\",\"2745\":\"225\",\"2746\":\"226\",\"2747\":\"227\",\"2748\":\"228\",\"2749\":\"229\",\"2750\":\"230\",\"2751\":\"231\",\"2752\":\"232\",\"2753\":\"233\",\"2754\":\"234\",\"2755\":\"235\",\"2756\":\"236\",\"2757\":\"237\",\"2758\":\"238\",\"2759\":\"239\",\"2760\":\"240\",\"2761\":\"241\",\"2762\":\"242\",\"2763\":\"243\",\"2764\":\"244\",\"2765\":\"245\",\"2766\":\"246\",\"2767\":\"247\",\"2768\":\"248\",\"2769\":\"249\",\"2770\":\"250\",\"2771\":\"251\",\"2772\":\"252\",\"2773\":\"253\",\"2774\":\"254\",\"2775\":\"255\",\"2776\":\"256\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[1,22],\"1\":[1],\"2\":[1,7],\"3\":[1,16],\"4\":[1,11],\"5\":[1,6],\"6\":[1,7],\"7\":[1,30],\"8\":[1,12],\"9\":[1],\"10\":[3,37],\"11\":[1,10],\"12\":[1,22],\"13\":[1],\"14\":[1,8],\"15\":[1,16],\"16\":[1,11],\"17\":[1,6],\"18\":[1,7],\"19\":[1,30],\"20\":[1,12],\"21\":[1],\"22\":[3,37],\"23\":[1,10],\"24\":[1,22],\"25\":[1],\"26\":[1,8],\"27\":[1,16],\"28\":[1,11],\"29\":[1,6],\"30\":[1,7],\"31\":[1,30],\"32\":[1,12],\"33\":[1],\"34\":[3,37],\"35\":[1,10],\"36\":[1,5],\"37\":[1,27],\"38\":[1,25],\"39\":[1,15],\"40\":[3,40],\"41\":[1,7],\"42\":[1,11],\"43\":[1,8],\"44\":[1,8],\"45\":[1,9],\"46\":[2,10],\"47\":[2,13],\"48\":[1,9],\"49\":[1,10],\"50\":[1,13],\"51\":[1,5],\"52\":[1,11],\"53\":[1,41],\"54\":[1,47],\"55\":[1,12],\"56\":[1],\"57\":[1,8],\"58\":[3,39],\"59\":[2],\"60\":[1,15],\"61\":[1,14],\"62\":[1,14],\"63\":[1,12],\"64\":[1,74],\"65\":[1,10],\"66\":[1,9],\"67\":[1,13],\"68\":[1,13],\"69\":[1,9],\"70\":[1,20],\"71\":[2],\"72\":[1,34],\"73\":[1,10],\"74\":[1,9],\"75\":[1,13],\"76\":[1,13],\"77\":[1,9],\"78\":[1,30],\"79\":[1,29],\"80\":[1,14],\"81\":[1,22],\"82\":[1,21],\"83\":[1,13],\"84\":[1,13],\"85\":[1],\"86\":[1,27],\"87\":[1,10],\"88\":[1,10],\"89\":[1,9],\"90\":[1,27],\"91\":[1,20],\"92\":[1,10],\"93\":[1,46],\"94\":[1],\"95\":[1,23],\"96\":[1,23],\"97\":[1,25],\"98\":[1,18],\"99\":[1,55],\"100\":[1,53],\"101\":[1,32],\"102\":[1,10],\"103\":[1,19],\"104\":[1,5],\"105\":[1,34],\"106\":[1,18],\"107\":[1],\"108\":[1,35],\"109\":[1,12],\"110\":[1,102],\"111\":[1,47],\"112\":[1,10],\"113\":[1,22],\"114\":[1,29],\"115\":[1,13],\"116\":[1,35],\"117\":[1,29],\"118\":[1,46],\"119\":[1,11],\"120\":[2,63],\"121\":[2,70],\"122\":[3],\"123\":[3,18],\"124\":[1,32],\"125\":[1,21],\"126\":[1,6],\"127\":[1,21],\"128\":[1,19],\"129\":[2,22],\"130\":[2,22],\"131\":[1,5],\"132\":[1,33],\"133\":[1,21],\"134\":[1,37],\"135\":[1,29],\"136\":[1,35],\"137\":[1,38],\"138\":[1,15],\"139\":[1,32],\"140\":[1,53],\"141\":[2,10],\"142\":[1,11],\"143\":[1,4],\"144\":[1,4],\"145\":[1,7],\"146\":[1,15],\"147\":[1,21],\"148\":[1,10],\"149\":[1,9],\"150\":[1,9],\"151\":[1,8],\"152\":[1,19],\"153\":[1,11],\"154\":[1,10],\"155\":[1,17],\"156\":[1,13],\"157\":[1,11],\"158\":[1,19],\"159\":[1,10],\"160\":[1,13],\"161\":[1,15],\"162\":[2,16],\"163\":[1,23],\"164\":[1,10],\"165\":[1,30],\"166\":[1,19],\"167\":[1,9],\"168\":[1,7],\"169\":[1,21],\"170\":[1,10],\"171\":[1,9],\"172\":[1,6],\"173\":[1,11],\"174\":[1,12],\"175\":[1,22],\"176\":[2,4],\"177\":[1,7],\"178\":[1,7],\"179\":[1,6],\"180\":[1,9],\"181\":[1,9],\"182\":[1,6],\"183\":[1,6],\"184\":[1,7],\"185\":[1,7],\"186\":[1,7],\"187\":[1,7],\"188\":[1,9],\"189\":[1,7],\"190\":[1,6],\"191\":[1,6],\"192\":[1,6],\"193\":[1,6],\"194\":[1,6],\"195\":[2,29],\"196\":[1,6],\"197\":[1,4],\"198\":[1,4],\"199\":[1,10],\"200\":[1,27],\"201\":[1,6],\"202\":[1,14],\"203\":[1,27],\"204\":[1,6],\"205\":[1,24],\"206\":[1,24],\"207\":[1,25],\"208\":[1,11],\"209\":[1,15],\"210\":[1,6],\"211\":[1,8],\"212\":[1,7],\"213\":[1,5],\"214\":[1,5],\"215\":[1,7],\"216\":[1,39],\"217\":[1,21],\"218\":[1,38],\"219\":[1,24],\"220\":[1,27],\"221\":[1,26],\"222\":[1,46],\"223\":[1,29],\"224\":[1,37],\"225\":[1,24],\"226\":[2,14],\"227\":[1,27],\"228\":[1,9],\"229\":[1,6],\"230\":[1,12],\"231\":[1,4],\"232\":[2,3],\"233\":[1,4],\"234\":[1,5],\"235\":[1,5],\"236\":[1,5],\"237\":[1,7],\"238\":[1,5],\"239\":[1,4],\"240\":[1,5],\"241\":[1,7],\"242\":[1,67],\"243\":[1,6],\"244\":[1,22],\"245\":[1,25],\"246\":[1,8],\"247\":[1,8],\"248\":[1,10],\"249\":[1,13],\"250\":[1,19],\"251\":[1,27],\"252\":[1,22],\"253\":[1,23],\"254\":[1,24],\"255\":[1,28],\"256\":[1,29],\"257\":[1,29],\"258\":[1,8],\"259\":[1,19],\"260\":[1,11],\"261\":[1,18],\"262\":[1,19],\"263\":[1,11],\"264\":[1,7],\"265\":[1,12],\"266\":[1,6],\"267\":[1,15],\"268\":[1,15],\"269\":[1,4],\"270\":[1,7],\"271\":[1,17],\"272\":[1,17],\"273\":[1,2],\"274\":[1,6],\"275\":[1,6],\"276\":[1,8],\"277\":[1,9],\"278\":[1,15],\"279\":[1,8],\"280\":[1,9],\"281\":[1,4],\"282\":[1,9],\"283\":[1,9],\"284\":[1,10],\"285\":[1,10],\"286\":[1,4],\"287\":[2,5],\"288\":[1,9],\"289\":[1,9],\"290\":[1,9],\"291\":[1,9],\"292\":[1,25],\"293\":[1,18],\"294\":[2,2],\"295\":[1,10],\"296\":[1,9],\"297\":[1,41],\"298\":[1,23],\"299\":[1,19],\"300\":[1,19],\"301\":[1,17],\"302\":[1,16],\"303\":[1,9],\"304\":[1,12],\"305\":[1,19],\"306\":[1,18],\"307\":[1,6],\"308\":[1,6],\"309\":[1,6],\"310\":[1,7],\"311\":[1,8],\"312\":[1,6],\"313\":[1,6],\"314\":[1,6],\"315\":[1,6],\"316\":[1,7],\"317\":[1,7],\"318\":[1,8],\"319\":[1,22],\"320\":[1,10],\"321\":[1,11],\"322\":[1,6],\"323\":[1,6],\"324\":[1,6],\"325\":[1,6],\"326\":[1,11],\"327\":[1,8],\"328\":[2,15],\"329\":[1,21],\"330\":[1,14],\"331\":[1,20],\"332\":[1,20],\"333\":[1,20],\"334\":[1,7],\"335\":[1,20],\"336\":[1,4],\"337\":[1,4],\"338\":[1,4],\"339\":[1,4],\"340\":[1,12],\"341\":[1,12],\"342\":[1,12],\"343\":[1,13],\"344\":[1,4],\"345\":[1,4],\"346\":[2,13],\"347\":[1,20],\"348\":[1,7],\"349\":[1,23],\"350\":[1,2],\"351\":[1,7],\"352\":[1,10],\"353\":[1,13],\"354\":[1,10],\"355\":[1,13],\"356\":[1,10],\"357\":[1,13],\"358\":[1,6],\"359\":[1,8],\"360\":[1,14],\"361\":[1,40],\"362\":[1,16],\"363\":[1,21],\"364\":[1,15],\"365\":[1,64],\"366\":[1,9],\"367\":[1,38],\"368\":[1,4],\"369\":[1,6],\"370\":[1,7],\"371\":[1,9],\"372\":[2,15],\"373\":[1,10],\"374\":[1,5],\"375\":[1,8],\"376\":[1,12],\"377\":[1,10],\"378\":[1,12],\"379\":[1,9],\"380\":[1,9],\"381\":[1,2],\"382\":[1,6],\"383\":[1,13],\"384\":[1,13],\"385\":[1,12],\"386\":[1,19],\"387\":[1,18],\"388\":[1,18],\"389\":[1,20],\"390\":[1,24],\"391\":[1,18],\"392\":[1,16],\"393\":[1,7],\"394\":[1,26],\"395\":[1,25],\"396\":[1,8],\"397\":[2,3],\"398\":[1,13],\"399\":[1,11],\"400\":[1,14],\"401\":[1,33],\"402\":[1,8],\"403\":[1,11],\"404\":[1,9],\"405\":[1,9],\"406\":[1,17],\"407\":[1,16],\"408\":[1,27],\"409\":[1,7],\"410\":[1,7],\"411\":[1,12],\"412\":[1,8],\"413\":[1,9],\"414\":[1,4],\"415\":[1,19],\"416\":[1,15],\"417\":[1,65],\"418\":[1,70],\"419\":[3,25],\"420\":[1,14],\"421\":[1,66],\"422\":[1,68],\"423\":[1,26],\"424\":[1,34],\"425\":[1,42],\"426\":[1,65],\"427\":[1,23],\"428\":[1,4],\"429\":[1,68],\"430\":[1,10],\"431\":[1,14],\"432\":[1,10],\"433\":[1,64],\"434\":[1],\"435\":[3,7],\"436\":[3,34],\"437\":[3,48],\"438\":[3,43],\"439\":[4,11],\"440\":[4,11],\"441\":[4,11],\"442\":[1,18],\"443\":[1,10],\"444\":[1,3],\"445\":[3,11],\"446\":[1,12],\"447\":[1,57],\"448\":[1,18],\"449\":[1,10],\"450\":[1,14],\"451\":[1,16],\"452\":[1,53],\"453\":[1],\"454\":[2,9],\"455\":[3,20],\"456\":[2,14],\"457\":[1,24],\"458\":[1],\"459\":[3,5],\"460\":[1,3],\"461\":[1,4],\"462\":[1,15],\"463\":[1,32],\"464\":[4,8],\"465\":[1,13],\"466\":[1,40],\"467\":[1,18],\"468\":[1,46],\"469\":[1,9],\"470\":[1,123],\"471\":[1,90],\"472\":[3,34],\"473\":[3,68],\"474\":[2,106],\"475\":[1,71],\"476\":[1,91],\"477\":[1,57],\"478\":[1,44],\"479\":[1,14],\"480\":[2,24],\"481\":[2],\"482\":[6,62],\"483\":[4,44],\"484\":[2],\"485\":[5,41],\"486\":[4,54],\"487\":[3,49],\"488\":[1],\"489\":[4,39],\"490\":[4,71],\"491\":[2,74],\"492\":[2,36],\"493\":[4,46],\"494\":[2,37],\"495\":[2,63],\"496\":[2,32],\"497\":[2,44],\"498\":[3,36],\"499\":[2,45],\"500\":[2,26],\"501\":[2,75],\"502\":[2,76],\"503\":[2,64],\"504\":[1,29],\"505\":[1,33],\"506\":[1,32],\"507\":[1,59],\"508\":[1,18],\"509\":[1,3],\"510\":[1,12],\"511\":[1,14],\"512\":[1,19],\"513\":[1,62],\"514\":[1,35],\"515\":[1,29],\"516\":[1,21],\"517\":[1,13],\"518\":[1,32],\"519\":[1,37],\"520\":[1,13],\"521\":[1,10],\"522\":[1,3],\"523\":[1,40],\"524\":[1,21],\"525\":[1,37],\"526\":[1,38],\"527\":[1,36],\"528\":[1,20],\"529\":[1],\"530\":[1,29],\"531\":[1,30],\"532\":[1,48],\"533\":[1,13],\"534\":[1,17],\"535\":[1,7],\"536\":[1,24],\"537\":[1,29],\"538\":[1,10],\"539\":[1,12],\"540\":[1,17],\"541\":[2,52],\"542\":[1,37],\"543\":[1,69],\"544\":[1,5],\"545\":[1,27],\"546\":[1,25],\"547\":[1,15],\"548\":[3,40],\"549\":[1,7],\"550\":[1,11],\"551\":[1,8],\"552\":[1,8],\"553\":[1,9],\"554\":[2,10],\"555\":[2,13],\"556\":[1,9],\"557\":[1,10],\"558\":[1,13],\"559\":[1,5],\"560\":[1,11],\"561\":[1,41],\"562\":[1,47],\"563\":[1,12],\"564\":[1],\"565\":[1,8],\"566\":[3,39],\"567\":[2],\"568\":[1,15],\"569\":[1,14],\"570\":[1,14],\"571\":[1,12],\"572\":[1,74],\"573\":[1,10],\"574\":[1,9],\"575\":[1,13],\"576\":[1,13],\"577\":[1,9],\"578\":[1,20],\"579\":[2],\"580\":[1,34],\"581\":[1,10],\"582\":[1,9],\"583\":[1,13],\"584\":[1,13],\"585\":[1,9],\"586\":[1,30],\"587\":[1,29],\"588\":[1,14],\"589\":[1,22],\"590\":[1,21],\"591\":[1,13],\"592\":[1,13],\"593\":[1],\"594\":[1,27],\"595\":[1,10],\"596\":[1,10],\"597\":[1,9],\"598\":[1,27],\"599\":[1,20],\"600\":[1,10],\"601\":[1,46],\"602\":[1,5],\"603\":[1,23],\"604\":[1,23],\"605\":[1,25],\"606\":[1,18],\"607\":[1,55],\"608\":[1,53],\"609\":[1,32],\"610\":[1,10],\"611\":[1,19],\"612\":[1,5],\"613\":[1,34],\"614\":[1,18],\"615\":[1],\"616\":[1,35],\"617\":[1,12],\"618\":[1,102],\"619\":[1,47],\"620\":[1,10],\"621\":[1,22],\"622\":[1,29],\"623\":[1,13],\"624\":[1,35],\"625\":[1,29],\"626\":[1,46],\"627\":[1,11],\"628\":[2,63],\"629\":[2,70],\"630\":[3],\"631\":[3,18],\"632\":[1,32],\"633\":[1,21],\"634\":[1,6],\"635\":[1,21],\"636\":[1,19],\"637\":[2,22],\"638\":[2,22],\"639\":[1,5],\"640\":[1,33],\"641\":[1,21],\"642\":[1,37],\"643\":[1,29],\"644\":[1,35],\"645\":[1,38],\"646\":[1,15],\"647\":[1,32],\"648\":[1,53],\"649\":[2,10],\"650\":[1,11],\"651\":[1,4],\"652\":[1,4],\"653\":[1,7],\"654\":[1,15],\"655\":[1,21],\"656\":[1,10],\"657\":[1,9],\"658\":[1,9],\"659\":[1,8],\"660\":[1,19],\"661\":[1,11],\"662\":[1,10],\"663\":[1,17],\"664\":[1,13],\"665\":[1,11],\"666\":[1,19],\"667\":[1,10],\"668\":[1,13],\"669\":[1,15],\"670\":[2,16],\"671\":[1,23],\"672\":[1,10],\"673\":[1,30],\"674\":[1,19],\"675\":[1,9],\"676\":[1,7],\"677\":[1,21],\"678\":[1,10],\"679\":[1,9],\"680\":[1,6],\"681\":[1,11],\"682\":[1,12],\"683\":[1,22],\"684\":[2,4],\"685\":[1,7],\"686\":[1,7],\"687\":[1,6],\"688\":[1,9],\"689\":[1,9],\"690\":[1,6],\"691\":[1,6],\"692\":[1,7],\"693\":[1,7],\"694\":[1,7],\"695\":[1,7],\"696\":[1,9],\"697\":[1,7],\"698\":[1,6],\"699\":[1,6],\"700\":[1,6],\"701\":[1,6],\"702\":[1,6],\"703\":[2,29],\"704\":[1,6],\"705\":[1,4],\"706\":[1,4],\"707\":[1,10],\"708\":[1,27],\"709\":[1,6],\"710\":[1,14],\"711\":[1,27],\"712\":[1,6],\"713\":[1,24],\"714\":[1,24],\"715\":[1,25],\"716\":[1,11],\"717\":[1,15],\"718\":[1,6],\"719\":[1,8],\"720\":[1,7],\"721\":[1,5],\"722\":[1,5],\"723\":[1,7],\"724\":[1,39],\"725\":[1,21],\"726\":[1,38],\"727\":[1,24],\"728\":[1,27],\"729\":[1,26],\"730\":[1,46],\"731\":[1,29],\"732\":[1,37],\"733\":[1,24],\"734\":[2,14],\"735\":[1,27],\"736\":[1,9],\"737\":[1,6],\"738\":[1,12],\"739\":[1,4],\"740\":[2,3],\"741\":[1,4],\"742\":[1,5],\"743\":[1,5],\"744\":[1,5],\"745\":[1,7],\"746\":[1,5],\"747\":[1,4],\"748\":[1,5],\"749\":[1,7],\"750\":[1,67],\"751\":[1,6],\"752\":[1,22],\"753\":[1,25],\"754\":[1,8],\"755\":[1,8],\"756\":[1,10],\"757\":[1,13],\"758\":[1,19],\"759\":[1,27],\"760\":[1,22],\"761\":[1,23],\"762\":[1,24],\"763\":[1,28],\"764\":[1,29],\"765\":[1,29],\"766\":[1,8],\"767\":[1,19],\"768\":[1,11],\"769\":[1,18],\"770\":[1,19],\"771\":[1,11],\"772\":[1,7],\"773\":[1,12],\"774\":[1,6],\"775\":[1,15],\"776\":[1,15],\"777\":[1,4],\"778\":[1,7],\"779\":[1,17],\"780\":[1,17],\"781\":[1,2],\"782\":[1,6],\"783\":[1,6],\"784\":[1,8],\"785\":[1,9],\"786\":[1,15],\"787\":[1,8],\"788\":[1,9],\"789\":[1,4],\"790\":[1,9],\"791\":[1,9],\"792\":[1,10],\"793\":[1,10],\"794\":[1,4],\"795\":[2,5],\"796\":[1,9],\"797\":[1,9],\"798\":[1,9],\"799\":[1,9],\"800\":[1,25],\"801\":[1,19],\"802\":[2,2],\"803\":[1,10],\"804\":[1,9],\"805\":[1,41],\"806\":[1,23],\"807\":[1,19],\"808\":[1,19],\"809\":[1,17],\"810\":[1,16],\"811\":[1,9],\"812\":[1,12],\"813\":[1,19],\"814\":[1,18],\"815\":[1,6],\"816\":[1,6],\"817\":[1,6],\"818\":[1,7],\"819\":[1,8],\"820\":[1,6],\"821\":[1,6],\"822\":[1,6],\"823\":[1,6],\"824\":[1,7],\"825\":[1,7],\"826\":[1,8],\"827\":[1,22],\"828\":[1,10],\"829\":[1,11],\"830\":[1,6],\"831\":[1,6],\"832\":[1,6],\"833\":[1,6],\"834\":[1,11],\"835\":[1,8],\"836\":[2,15],\"837\":[1,21],\"838\":[1,14],\"839\":[1,20],\"840\":[1,20],\"841\":[1,20],\"842\":[1,7],\"843\":[1,20],\"844\":[1,4],\"845\":[1,4],\"846\":[1,4],\"847\":[1,4],\"848\":[1,12],\"849\":[1,12],\"850\":[1,12],\"851\":[1,13],\"852\":[1,4],\"853\":[1,4],\"854\":[2,13],\"855\":[1,20],\"856\":[1,7],\"857\":[1,23],\"858\":[1,2],\"859\":[1,7],\"860\":[1,10],\"861\":[1,13],\"862\":[1,10],\"863\":[1,13],\"864\":[1,10],\"865\":[1,13],\"866\":[1,6],\"867\":[1,8],\"868\":[1,14],\"869\":[1,40],\"870\":[1,16],\"871\":[1,21],\"872\":[1,15],\"873\":[1,64],\"874\":[1,9],\"875\":[1,38],\"876\":[1,4],\"877\":[1,6],\"878\":[1,7],\"879\":[1,9],\"880\":[2,15],\"881\":[1,10],\"882\":[1,5],\"883\":[1,8],\"884\":[1,12],\"885\":[1,10],\"886\":[1,12],\"887\":[1,9],\"888\":[1,9],\"889\":[1,2],\"890\":[1,6],\"891\":[1,13],\"892\":[1,13],\"893\":[1,12],\"894\":[1,19],\"895\":[1,18],\"896\":[1,18],\"897\":[1,20],\"898\":[1,24],\"899\":[1,18],\"900\":[1,16],\"901\":[1,7],\"902\":[1,26],\"903\":[1,25],\"904\":[1,8],\"905\":[2,3],\"906\":[1,13],\"907\":[1,11],\"908\":[1,14],\"909\":[1,33],\"910\":[1,8],\"911\":[1,11],\"912\":[1,9],\"913\":[1,9],\"914\":[1,17],\"915\":[1,16],\"916\":[1,27],\"917\":[1,10],\"918\":[1,9],\"919\":[1,7],\"920\":[1,7],\"921\":[1,12],\"922\":[1,8],\"923\":[1,9],\"924\":[1,4],\"925\":[1,19],\"926\":[1,15],\"927\":[1,65],\"928\":[1,70],\"929\":[3,25],\"930\":[1,14],\"931\":[1,66],\"932\":[1,68],\"933\":[1,26],\"934\":[1,37],\"935\":[1,42],\"936\":[1,65],\"937\":[1,23],\"938\":[1,4],\"939\":[1,68],\"940\":[1,10],\"941\":[1,14],\"942\":[1,10],\"943\":[1,64],\"944\":[1],\"945\":[3,7],\"946\":[3,34],\"947\":[3,48],\"948\":[3,43],\"949\":[4,11],\"950\":[4,11],\"951\":[4,11],\"952\":[1,18],\"953\":[1,10],\"954\":[1,3],\"955\":[3,11],\"956\":[1,12],\"957\":[1,57],\"958\":[1,18],\"959\":[1,10],\"960\":[1,14],\"961\":[1,16],\"962\":[1,53],\"963\":[1],\"964\":[2,9],\"965\":[3,20],\"966\":[2,14],\"967\":[1,24],\"968\":[1],\"969\":[3,5],\"970\":[1,3],\"971\":[1,4],\"972\":[1,15],\"973\":[1,32],\"974\":[4,8],\"975\":[1,13],\"976\":[1,40],\"977\":[1,18],\"978\":[1,46],\"979\":[1,9],\"980\":[1,123],\"981\":[1,90],\"982\":[3,34],\"983\":[3,68],\"984\":[2,106],\"985\":[1,71],\"986\":[1,91],\"987\":[1,57],\"988\":[1,44],\"989\":[1,14],\"990\":[2,24],\"991\":[2],\"992\":[6,62],\"993\":[4,44],\"994\":[2],\"995\":[5,41],\"996\":[4,54],\"997\":[3,49],\"998\":[1],\"999\":[4,39],\"1000\":[4,71],\"1001\":[2,74],\"1002\":[2,36],\"1003\":[4,46],\"1004\":[2,37],\"1005\":[2,63],\"1006\":[2,32],\"1007\":[2,44],\"1008\":[3,36],\"1009\":[2,45],\"1010\":[2,26],\"1011\":[2,75],\"1012\":[2,76],\"1013\":[2,64],\"1014\":[1,29],\"1015\":[1,33],\"1016\":[1,32],\"1017\":[1,59],\"1018\":[1,22],\"1019\":[1,3],\"1020\":[1,12],\"1021\":[1,14],\"1022\":[1,19],\"1023\":[1,62],\"1024\":[1,35],\"1025\":[1,29],\"1026\":[1,21],\"1027\":[1,13],\"1028\":[1,32],\"1029\":[1,37],\"1030\":[1,13],\"1031\":[1,10],\"1032\":[1,3],\"1033\":[1,40],\"1034\":[1,21],\"1035\":[1,37],\"1036\":[1,38],\"1037\":[1,40],\"1038\":[1,20],\"1039\":[1],\"1040\":[1,29],\"1041\":[1,30],\"1042\":[1,48],\"1043\":[1,13],\"1044\":[1,17],\"1045\":[1,7],\"1046\":[1,24],\"1047\":[1,29],\"1048\":[1,10],\"1049\":[1,12],\"1050\":[1,17],\"1051\":[2,52],\"1052\":[1,37],\"1053\":[1,69],\"1054\":[1,5],\"1055\":[1,27],\"1056\":[1,25],\"1057\":[1,15],\"1058\":[3,40],\"1059\":[1,7],\"1060\":[1,11],\"1061\":[1,8],\"1062\":[1,8],\"1063\":[1,9],\"1064\":[2,10],\"1065\":[2,13],\"1066\":[1,9],\"1067\":[1,10],\"1068\":[1,13],\"1069\":[1,5],\"1070\":[1,11],\"1071\":[1,41],\"1072\":[1,47],\"1073\":[1,12],\"1074\":[1],\"1075\":[1,8],\"1076\":[3,39],\"1077\":[2],\"1078\":[1,15],\"1079\":[1,14],\"1080\":[1,14],\"1081\":[1,12],\"1082\":[1,74],\"1083\":[1,10],\"1084\":[1,9],\"1085\":[1,13],\"1086\":[1,13],\"1087\":[1,9],\"1088\":[1,20],\"1089\":[2],\"1090\":[1,34],\"1091\":[1,10],\"1092\":[1,9],\"1093\":[1,13],\"1094\":[1,13],\"1095\":[1,9],\"1096\":[1,30],\"1097\":[1,29],\"1098\":[1,14],\"1099\":[1,22],\"1100\":[1,21],\"1101\":[1,13],\"1102\":[1,13],\"1103\":[1],\"1104\":[1,27],\"1105\":[1,10],\"1106\":[1,10],\"1107\":[1,9],\"1108\":[1,27],\"1109\":[1,20],\"1110\":[1,10],\"1111\":[1,46],\"1112\":[1,5],\"1113\":[1,23],\"1114\":[1,23],\"1115\":[1,25],\"1116\":[1,18],\"1117\":[1,55],\"1118\":[1,53],\"1119\":[1,32],\"1120\":[1,10],\"1121\":[1,19],\"1122\":[1,5],\"1123\":[1,34],\"1124\":[1,18],\"1125\":[1],\"1126\":[1,35],\"1127\":[1,12],\"1128\":[1,102],\"1129\":[1,47],\"1130\":[1,10],\"1131\":[1,22],\"1132\":[1,29],\"1133\":[1,13],\"1134\":[1,35],\"1135\":[1,29],\"1136\":[1,46],\"1137\":[1,11],\"1138\":[2,63],\"1139\":[2,70],\"1140\":[3],\"1141\":[3,18],\"1142\":[1,32],\"1143\":[1,21],\"1144\":[1,6],\"1145\":[1,21],\"1146\":[1,19],\"1147\":[2,22],\"1148\":[2,22],\"1149\":[1,5],\"1150\":[1,33],\"1151\":[1,21],\"1152\":[1,37],\"1153\":[1,29],\"1154\":[1,35],\"1155\":[1,38],\"1156\":[1,15],\"1157\":[1,32],\"1158\":[1,53],\"1159\":[2,10],\"1160\":[1,11],\"1161\":[1,4],\"1162\":[1,4],\"1163\":[1,7],\"1164\":[1,15],\"1165\":[1,21],\"1166\":[1,10],\"1167\":[1,9],\"1168\":[1,9],\"1169\":[1,8],\"1170\":[1,19],\"1171\":[1,11],\"1172\":[1,10],\"1173\":[1,17],\"1174\":[1,13],\"1175\":[1,11],\"1176\":[1,19],\"1177\":[1,10],\"1178\":[1,13],\"1179\":[1,15],\"1180\":[2,16],\"1181\":[1,23],\"1182\":[1,10],\"1183\":[1,30],\"1184\":[1,19],\"1185\":[1,9],\"1186\":[1,7],\"1187\":[1,21],\"1188\":[1,10],\"1189\":[1,9],\"1190\":[1,6],\"1191\":[1,11],\"1192\":[1,12],\"1193\":[1,22],\"1194\":[2,4],\"1195\":[1,7],\"1196\":[1,7],\"1197\":[1,6],\"1198\":[1,9],\"1199\":[1,9],\"1200\":[1,8],\"1201\":[1,8],\"1202\":[1,6],\"1203\":[1,6],\"1204\":[1,7],\"1205\":[1,7],\"1206\":[1,7],\"1207\":[1,7],\"1208\":[1,9],\"1209\":[1,7],\"1210\":[1,6],\"1211\":[1,6],\"1212\":[1,6],\"1213\":[1,6],\"1214\":[1,6],\"1215\":[2,29],\"1216\":[1,6],\"1217\":[1,4],\"1218\":[1,4],\"1219\":[1,10],\"1220\":[1,27],\"1221\":[1,6],\"1222\":[1,14],\"1223\":[1,27],\"1224\":[1,6],\"1225\":[1,24],\"1226\":[1,24],\"1227\":[1,25],\"1228\":[1,11],\"1229\":[1,15],\"1230\":[1,6],\"1231\":[1,8],\"1232\":[1,7],\"1233\":[1,5],\"1234\":[1,5],\"1235\":[1,7],\"1236\":[1,39],\"1237\":[1,21],\"1238\":[1,38],\"1239\":[1,24],\"1240\":[1,27],\"1241\":[1,26],\"1242\":[1,46],\"1243\":[1,29],\"1244\":[1,37],\"1245\":[1,24],\"1246\":[2,14],\"1247\":[1,27],\"1248\":[1,9],\"1249\":[1,6],\"1250\":[1,12],\"1251\":[1,4],\"1252\":[2,3],\"1253\":[1,4],\"1254\":[1,4],\"1255\":[1,5],\"1256\":[1,5],\"1257\":[1,5],\"1258\":[1,7],\"1259\":[1,5],\"1260\":[1,4],\"1261\":[1,5],\"1262\":[1,7],\"1263\":[1,67],\"1264\":[1,6],\"1265\":[1,22],\"1266\":[1,25],\"1267\":[1,8],\"1268\":[1,8],\"1269\":[1,10],\"1270\":[1,13],\"1271\":[1,19],\"1272\":[1,27],\"1273\":[1,22],\"1274\":[1,23],\"1275\":[1,24],\"1276\":[1,28],\"1277\":[1,29],\"1278\":[1,29],\"1279\":[1,8],\"1280\":[1,19],\"1281\":[1,11],\"1282\":[1,18],\"1283\":[1,19],\"1284\":[1,11],\"1285\":[1,7],\"1286\":[1,12],\"1287\":[1,6],\"1288\":[1,15],\"1289\":[1,15],\"1290\":[1,4],\"1291\":[1,7],\"1292\":[1,17],\"1293\":[1,17],\"1294\":[1,6],\"1295\":[1,6],\"1296\":[1,8],\"1297\":[1,9],\"1298\":[1,15],\"1299\":[1,8],\"1300\":[1,9],\"1301\":[1,4],\"1302\":[1,9],\"1303\":[1,9],\"1304\":[1,10],\"1305\":[1,10],\"1306\":[1,2],\"1307\":[2,5],\"1308\":[1,9],\"1309\":[1,9],\"1310\":[1,9],\"1311\":[1,9],\"1312\":[1,25],\"1313\":[1,19],\"1314\":[2,2],\"1315\":[1,10],\"1316\":[1,24],\"1317\":[1,9],\"1318\":[1,11],\"1319\":[1,9],\"1320\":[1,19],\"1321\":[1,12],\"1322\":[1,16],\"1323\":[1,41],\"1324\":[1,19],\"1325\":[1,18],\"1326\":[1,19],\"1327\":[1,17],\"1328\":[1,6],\"1329\":[1,6],\"1330\":[1,6],\"1331\":[1,7],\"1332\":[1,8],\"1333\":[1,6],\"1334\":[1,6],\"1335\":[1,6],\"1336\":[1,6],\"1337\":[1,7],\"1338\":[1,7],\"1339\":[1,8],\"1340\":[1,21],\"1341\":[1,10],\"1342\":[1,11],\"1343\":[1,6],\"1344\":[1,6],\"1345\":[1,6],\"1346\":[1,6],\"1347\":[1,11],\"1348\":[1,8],\"1349\":[1,11],\"1350\":[1,8],\"1351\":[2,15],\"1352\":[1,21],\"1353\":[1,20],\"1354\":[1,7],\"1355\":[1,20],\"1356\":[1,14],\"1357\":[1,20],\"1358\":[1,20],\"1359\":[1,4],\"1360\":[1,4],\"1361\":[1,4],\"1362\":[1,4],\"1363\":[1,12],\"1364\":[1,12],\"1365\":[1,12],\"1366\":[1,13],\"1367\":[1,4],\"1368\":[1,4],\"1369\":[2,13],\"1370\":[1,20],\"1371\":[1,7],\"1372\":[1,23],\"1373\":[1,2],\"1374\":[1,7],\"1375\":[1,10],\"1376\":[1,13],\"1377\":[1,10],\"1378\":[1,13],\"1379\":[1,10],\"1380\":[1,13],\"1381\":[1,6],\"1382\":[1,8],\"1383\":[1,14],\"1384\":[1,40],\"1385\":[1,16],\"1386\":[1,21],\"1387\":[1,15],\"1388\":[1,64],\"1389\":[1,9],\"1390\":[1,38],\"1391\":[1,4],\"1392\":[1,6],\"1393\":[1,7],\"1394\":[1,9],\"1395\":[2,15],\"1396\":[1,10],\"1397\":[1,5],\"1398\":[1,8],\"1399\":[1,12],\"1400\":[1,10],\"1401\":[1,12],\"1402\":[1,9],\"1403\":[1,9],\"1404\":[1,2],\"1405\":[1,6],\"1406\":[1,13],\"1407\":[1,13],\"1408\":[1,12],\"1409\":[1,19],\"1410\":[1,18],\"1411\":[1,18],\"1412\":[1,20],\"1413\":[1,24],\"1414\":[1,18],\"1415\":[1,16],\"1416\":[1,7],\"1417\":[1,26],\"1418\":[1,25],\"1419\":[1,8],\"1420\":[2,3],\"1421\":[1,13],\"1422\":[1,11],\"1423\":[1,14],\"1424\":[1,33],\"1425\":[1,8],\"1426\":[1,11],\"1427\":[1,9],\"1428\":[1,9],\"1429\":[1,17],\"1430\":[1,16],\"1431\":[1,27],\"1432\":[1,10],\"1433\":[1,9],\"1434\":[1,7],\"1435\":[1,7],\"1436\":[1,12],\"1437\":[1,8],\"1438\":[1,9],\"1439\":[1,4],\"1440\":[1,19],\"1441\":[1,15],\"1442\":[1,65],\"1443\":[1,70],\"1444\":[3,25],\"1445\":[1,14],\"1446\":[1,66],\"1447\":[1,68],\"1448\":[1,26],\"1449\":[1,37],\"1450\":[1,42],\"1451\":[1,65],\"1452\":[1,23],\"1453\":[1,4],\"1454\":[1,68],\"1455\":[1,10],\"1456\":[1,14],\"1457\":[1,10],\"1458\":[1,64],\"1459\":[1],\"1460\":[3,7],\"1461\":[3,34],\"1462\":[3,48],\"1463\":[3,43],\"1464\":[4,11],\"1465\":[4,11],\"1466\":[4,11],\"1467\":[1,18],\"1468\":[1,10],\"1469\":[1,3],\"1470\":[3,11],\"1471\":[1,12],\"1472\":[1,57],\"1473\":[1,18],\"1474\":[1,10],\"1475\":[1,14],\"1476\":[1,16],\"1477\":[1,53],\"1478\":[1],\"1479\":[2,9],\"1480\":[3,20],\"1481\":[2,14],\"1482\":[1,24],\"1483\":[1],\"1484\":[3,5],\"1485\":[1,3],\"1486\":[1,4],\"1487\":[1,15],\"1488\":[1,32],\"1489\":[4,8],\"1490\":[1,13],\"1491\":[1,40],\"1492\":[1,18],\"1493\":[1,46],\"1494\":[1,9],\"1495\":[1,123],\"1496\":[1,90],\"1497\":[3,34],\"1498\":[3,68],\"1499\":[2,106],\"1500\":[1,71],\"1501\":[1,91],\"1502\":[1,57],\"1503\":[1,44],\"1504\":[1,14],\"1505\":[2,24],\"1506\":[2],\"1507\":[6,62],\"1508\":[4,44],\"1509\":[2],\"1510\":[5,41],\"1511\":[4,54],\"1512\":[3,49],\"1513\":[1],\"1514\":[4,39],\"1515\":[4,71],\"1516\":[2,74],\"1517\":[2,36],\"1518\":[4,46],\"1519\":[2,37],\"1520\":[2,63],\"1521\":[2,32],\"1522\":[2,44],\"1523\":[3,36],\"1524\":[2,45],\"1525\":[2,26],\"1526\":[2,75],\"1527\":[2,76],\"1528\":[2,64],\"1529\":[1,29],\"1530\":[1,33],\"1531\":[1,32],\"1532\":[1,59],\"1533\":[1,22],\"1534\":[1,3],\"1535\":[1,12],\"1536\":[1,14],\"1537\":[1,19],\"1538\":[1,62],\"1539\":[1,35],\"1540\":[1,29],\"1541\":[1,21],\"1542\":[1,13],\"1543\":[1,32],\"1544\":[1,37],\"1545\":[1,13],\"1546\":[1,10],\"1547\":[1,3],\"1548\":[1,40],\"1549\":[1,21],\"1550\":[1,37],\"1551\":[1,38],\"1552\":[1,40],\"1553\":[1,20],\"1554\":[1],\"1555\":[1,29],\"1556\":[1,30],\"1557\":[1,48],\"1558\":[1,13],\"1559\":[1,17],\"1560\":[1,7],\"1561\":[1,24],\"1562\":[1,29],\"1563\":[1,10],\"1564\":[1,12],\"1565\":[1,17],\"1566\":[2,52],\"1567\":[1,37],\"1568\":[1,69],\"1569\":[2,8],\"1570\":[1,16],\"1571\":[1,4],\"1572\":[1,5],\"1573\":[1,4],\"1574\":[1,6],\"1575\":[1,24],\"1576\":[1,16],\"1577\":[1,17],\"1578\":[1,21],\"1579\":[1,7],\"1580\":[1,9],\"1581\":[1,6],\"1582\":[1,7],\"1583\":[1,15],\"1584\":[1,9],\"1585\":[1,12],\"1586\":[1,6],\"1587\":[1,14],\"1588\":[1,6],\"1589\":[1,21],\"1590\":[1,4],\"1591\":[1,7],\"1592\":[1,6],\"1593\":[1,6],\"1594\":[1,13],\"1595\":[1,12],\"1596\":[1,9],\"1597\":[1,9],\"1598\":[1,9],\"1599\":[1,11],\"1600\":[1,5],\"1601\":[1,5],\"1602\":[1,22],\"1603\":[1,8],\"1604\":[1,9],\"1605\":[1,31],\"1606\":[1,11],\"1607\":[1,11],\"1608\":[1,21],\"1609\":[1,14],\"1610\":[1,11],\"1611\":[1,11],\"1612\":[1,10],\"1613\":[1,10],\"1614\":[1,11],\"1615\":[1,6],\"1616\":[1,9],\"1617\":[1,9],\"1618\":[1,6],\"1619\":[1,4],\"1620\":[1,4],\"1621\":[1,6],\"1622\":[1,8],\"1623\":[1,7],\"1624\":[1,8],\"1625\":[1,7],\"1626\":[1,4],\"1627\":[1,4],\"1628\":[1,4],\"1629\":[1,7],\"1630\":[1,4],\"1631\":[1,6],\"1632\":[1,17],\"1633\":[1,9],\"1634\":[1,7],\"1635\":[1,10],\"1636\":[1,11],\"1637\":[1,14],\"1638\":[1,7],\"1639\":[2,2],\"1640\":[1,15],\"1641\":[1,18],\"1642\":[1,12],\"1643\":[1,10],\"1644\":[1,16],\"1645\":[1,5],\"1646\":[1,7],\"1647\":[3],\"1648\":[1,9],\"1649\":[1,11],\"1650\":[1,8],\"1651\":[3,11],\"1652\":[1,16],\"1653\":[1,5],\"1654\":[1,4],\"1655\":[1,4],\"1656\":[1,5],\"1657\":[1,5],\"1658\":[1,8],\"1659\":[1,17],\"1660\":[1,13],\"1661\":[1,4],\"1662\":[1,7],\"1663\":[1,4],\"1664\":[1,4],\"1665\":[1,4],\"1666\":[1,5],\"1667\":[1,5],\"1668\":[1,6],\"1669\":[3,11],\"1670\":[1,7],\"1671\":[1,10],\"1672\":[1,9],\"1673\":[1,9],\"1674\":[1,7],\"1675\":[1,5],\"1676\":[1,10],\"1677\":[1,7],\"1678\":[1,13],\"1679\":[1,13],\"1680\":[1,9],\"1681\":[1,9],\"1682\":[1,5],\"1683\":[1,5],\"1684\":[1,5],\"1685\":[1,7],\"1686\":[1,5],\"1687\":[1,5],\"1688\":[1,17],\"1689\":[1,9],\"1690\":[1,4],\"1691\":[1,7],\"1692\":[1,6],\"1693\":[1,4],\"1694\":[1,4],\"1695\":[1,5],\"1696\":[1,5],\"1697\":[3,13],\"1698\":[1,16],\"1699\":[1,5],\"1700\":[1,4],\"1701\":[1,4],\"1702\":[1,5],\"1703\":[1,5],\"1704\":[1,17],\"1705\":[1,6],\"1706\":[2,3],\"1707\":[1,4],\"1708\":[1,4],\"1709\":[1,13],\"1710\":[1,4],\"1711\":[1,4],\"1712\":[1,6],\"1713\":[1,11],\"1714\":[1,4],\"1715\":[1,6],\"1716\":[1,7],\"1717\":[1,7],\"1718\":[1,7],\"1719\":[1,13],\"1720\":[1,13],\"1721\":[1,4],\"1722\":[1,8],\"1723\":[1,9],\"1724\":[1,8],\"1725\":[1,7],\"1726\":[1,5],\"1727\":[1,7],\"1728\":[1,29],\"1729\":[1,13],\"1730\":[1,7],\"1731\":[1,6],\"1732\":[1,6],\"1733\":[1,9],\"1734\":[1,9],\"1735\":[1,4],\"1736\":[1,4],\"1737\":[1,8],\"1738\":[1,11],\"1739\":[1,11],\"1740\":[1,9],\"1741\":[1,9],\"1742\":[1,12],\"1743\":[1,10],\"1744\":[1,10],\"1745\":[1,12],\"1746\":[1,4],\"1747\":[1,4],\"1748\":[1,8],\"1749\":[1,8],\"1750\":[1,16],\"1751\":[1,5],\"1752\":[1,9],\"1753\":[1,21],\"1754\":[1,5],\"1755\":[1,5],\"1756\":[1,11],\"1757\":[1,5],\"1758\":[3,4],\"1759\":[1,9],\"1760\":[1,5],\"1761\":[1,7],\"1762\":[1,9],\"1763\":[1,10],\"1764\":[3,11],\"1765\":[1,5],\"1766\":[1,5],\"1767\":[1,10],\"1768\":[1,7],\"1769\":[1,13],\"1770\":[1,13],\"1771\":[1,9],\"1772\":[1,9],\"1773\":[1,5],\"1774\":[1,4],\"1775\":[1,5],\"1776\":[1,6],\"1777\":[1,5],\"1778\":[1,5],\"1779\":[1,17],\"1780\":[1,11],\"1781\":[1,4],\"1782\":[1,7],\"1783\":[1,6],\"1784\":[1,4],\"1785\":[1,4],\"1786\":[1,5],\"1787\":[1,5],\"1788\":[3,12],\"1789\":[1,9],\"1790\":[1,5],\"1791\":[1,8],\"1792\":[1,10],\"1793\":[1,4],\"1794\":[1,7],\"1795\":[1,6],\"1796\":[1,4],\"1797\":[1,4],\"1798\":[1,5],\"1799\":[1,5],\"1800\":[1,6],\"1801\":[2,4],\"1802\":[1,31],\"1803\":[1,23],\"1804\":[1,14],\"1805\":[1,8],\"1806\":[1,9],\"1807\":[1,7],\"1808\":[3,2],\"1809\":[1,20],\"1810\":[1,13],\"1811\":[1,17],\"1812\":[1,29],\"1813\":[1,33],\"1814\":[1,12],\"1815\":[1,12],\"1816\":[1,12],\"1817\":[1,17],\"1818\":[3,5],\"1819\":[1,15],\"1820\":[1,6],\"1821\":[1,6],\"1822\":[1,6],\"1823\":[1,6],\"1824\":[1,11],\"1825\":[1,8],\"1826\":[1,2],\"1827\":[1,11],\"1828\":[1,7],\"1829\":[1,6],\"1830\":[1,5],\"1831\":[3,2],\"1832\":[1,5],\"1833\":[1,4],\"1834\":[1,4],\"1835\":[1,4],\"1836\":[1,7],\"1837\":[1,6],\"1838\":[1,7],\"1839\":[1,17],\"1840\":[1,6],\"1841\":[1,10],\"1842\":[1,4],\"1843\":[1,9],\"1844\":[1,4],\"1845\":[1,4],\"1846\":[1,4],\"1847\":[1,6],\"1848\":[1,6],\"1849\":[1,5],\"1850\":[1,4],\"1851\":[3,2],\"1852\":[1,9],\"1853\":[1,16],\"1854\":[1,16],\"1855\":[1,10],\"1856\":[1,45],\"1857\":[1,42],\"1858\":[1,42],\"1859\":[1,42],\"1860\":[1,42],\"1861\":[1,49],\"1862\":[1,49],\"1863\":[1,49],\"1864\":[1,47],\"1865\":[1,59],\"1866\":[1,69],\"1867\":[1,56],\"1868\":[1,47],\"1869\":[1,32],\"1870\":[1,53],\"1871\":[1,57],\"1872\":[1,29],\"1873\":[1,45],\"1874\":[1,42],\"1875\":[1,42],\"1876\":[1,42],\"1877\":[1,42],\"1878\":[1,49],\"1879\":[1,49],\"1880\":[1,49],\"1881\":[1,47],\"1882\":[1,59],\"1883\":[1,69],\"1884\":[1,56],\"1885\":[1,47],\"1886\":[2,59],\"1887\":[1,103],\"1888\":[3,27],\"1889\":[1,47],\"1890\":[1,123],\"1891\":[3,28],\"1892\":[1,23],\"1893\":[4,71],\"1894\":[1,35],\"1895\":[3,60],\"1896\":[3,65],\"1897\":[1,46],\"1898\":[1,51],\"1899\":[1,19],\"1900\":[1,34],\"1901\":[1,23],\"1902\":[1,82],\"1903\":[1,62],\"1904\":[1,28],\"1905\":[1,32],\"1906\":[1,75],\"1907\":[1,31],\"1908\":[1],\"1909\":[4,7],\"1910\":[4,12],\"1911\":[3,9],\"1912\":[3,13],\"1913\":[4,13],\"1914\":[3,13],\"1915\":[3,12],\"1916\":[4,8],\"1917\":[3,6],\"1918\":[4,6],\"1919\":[1,17],\"1920\":[1],\"1921\":[1,28],\"1922\":[1,22],\"1923\":[1,5],\"1924\":[1,23],\"1925\":[1,14],\"1926\":[1,14],\"1927\":[1,10],\"1928\":[1],\"1929\":[3,18],\"1930\":[2,39],\"1931\":[3,20],\"1932\":[2,25],\"1933\":[1,18],\"1934\":[3,82],\"1935\":[3,67],\"1936\":[3,1],\"1937\":[3,1],\"1938\":[2,8],\"1939\":[1,16],\"1940\":[1,4],\"1941\":[1,5],\"1942\":[1,4],\"1943\":[1,6],\"1944\":[1,24],\"1945\":[1,16],\"1946\":[1,17],\"1947\":[1,21],\"1948\":[1,7],\"1949\":[1,9],\"1950\":[1,6],\"1951\":[1,7],\"1952\":[1,15],\"1953\":[1,9],\"1954\":[1,12],\"1955\":[1,6],\"1956\":[1,14],\"1957\":[1,6],\"1958\":[1,21],\"1959\":[1,4],\"1960\":[1,7],\"1961\":[1,6],\"1962\":[1,6],\"1963\":[1,13],\"1964\":[1,12],\"1965\":[1,9],\"1966\":[1,9],\"1967\":[1,9],\"1968\":[1,11],\"1969\":[1,5],\"1970\":[1,5],\"1971\":[1,22],\"1972\":[1,8],\"1973\":[1,9],\"1974\":[1,31],\"1975\":[1,11],\"1976\":[1,11],\"1977\":[1,21],\"1978\":[1,14],\"1979\":[1,11],\"1980\":[1,11],\"1981\":[1,10],\"1982\":[1,10],\"1983\":[1,11],\"1984\":[1,6],\"1985\":[1,9],\"1986\":[1,9],\"1987\":[1,6],\"1988\":[1,4],\"1989\":[1,4],\"1990\":[1,6],\"1991\":[1,8],\"1992\":[1,7],\"1993\":[1,8],\"1994\":[1,7],\"1995\":[1,4],\"1996\":[1,4],\"1997\":[1,4],\"1998\":[1,7],\"1999\":[1,4],\"2000\":[1,6],\"2001\":[1,17],\"2002\":[1,9],\"2003\":[1,7],\"2004\":[1,10],\"2005\":[1,11],\"2006\":[1,14],\"2007\":[1,7],\"2008\":[2,2],\"2009\":[1,15],\"2010\":[1,18],\"2011\":[1,12],\"2012\":[1,10],\"2013\":[1,16],\"2014\":[1,5],\"2015\":[1,7],\"2016\":[3],\"2017\":[1,9],\"2018\":[1,11],\"2019\":[1,8],\"2020\":[3,11],\"2021\":[1,16],\"2022\":[1,5],\"2023\":[1,4],\"2024\":[1,4],\"2025\":[1,5],\"2026\":[1,5],\"2027\":[1,8],\"2028\":[1,17],\"2029\":[1,13],\"2030\":[1,4],\"2031\":[1,7],\"2032\":[1,4],\"2033\":[1,4],\"2034\":[1,4],\"2035\":[1,5],\"2036\":[1,5],\"2037\":[1,6],\"2038\":[3,11],\"2039\":[1,7],\"2040\":[1,10],\"2041\":[1,9],\"2042\":[1,9],\"2043\":[1,7],\"2044\":[1,5],\"2045\":[1,10],\"2046\":[1,7],\"2047\":[1,13],\"2048\":[1,13],\"2049\":[1,9],\"2050\":[1,9],\"2051\":[1,5],\"2052\":[1,5],\"2053\":[1,5],\"2054\":[1,7],\"2055\":[1,5],\"2056\":[1,5],\"2057\":[1,17],\"2058\":[1,9],\"2059\":[1,4],\"2060\":[1,7],\"2061\":[1,6],\"2062\":[1,4],\"2063\":[1,4],\"2064\":[1,5],\"2065\":[1,5],\"2066\":[3,13],\"2067\":[1,16],\"2068\":[1,5],\"2069\":[1,4],\"2070\":[1,4],\"2071\":[1,5],\"2072\":[1,5],\"2073\":[1,17],\"2074\":[1,6],\"2075\":[2,3],\"2076\":[1,4],\"2077\":[1,4],\"2078\":[1,13],\"2079\":[1,4],\"2080\":[1,4],\"2081\":[1,6],\"2082\":[1,11],\"2083\":[1,4],\"2084\":[1,6],\"2085\":[1,7],\"2086\":[1,7],\"2087\":[1,7],\"2088\":[1,13],\"2089\":[1,13],\"2090\":[1,4],\"2091\":[1,8],\"2092\":[1,9],\"2093\":[1,8],\"2094\":[1,7],\"2095\":[1,5],\"2096\":[1,7],\"2097\":[1,29],\"2098\":[1,13],\"2099\":[1,7],\"2100\":[1,6],\"2101\":[1,6],\"2102\":[1,9],\"2103\":[1,9],\"2104\":[1,4],\"2105\":[1,4],\"2106\":[1,8],\"2107\":[1,11],\"2108\":[1,11],\"2109\":[1,9],\"2110\":[1,9],\"2111\":[1,12],\"2112\":[1,10],\"2113\":[1,10],\"2114\":[1,12],\"2115\":[1,4],\"2116\":[1,4],\"2117\":[1,8],\"2118\":[1,8],\"2119\":[1,16],\"2120\":[1,5],\"2121\":[1,9],\"2122\":[1,21],\"2123\":[1,5],\"2124\":[1,5],\"2125\":[1,11],\"2126\":[1,5],\"2127\":[3,4],\"2128\":[1,9],\"2129\":[1,5],\"2130\":[1,7],\"2131\":[1,9],\"2132\":[1,10],\"2133\":[3,11],\"2134\":[1,5],\"2135\":[1,5],\"2136\":[1,10],\"2137\":[1,7],\"2138\":[1,13],\"2139\":[1,13],\"2140\":[1,9],\"2141\":[1,9],\"2142\":[1,5],\"2143\":[1,4],\"2144\":[1,5],\"2145\":[1,6],\"2146\":[1,5],\"2147\":[1,5],\"2148\":[1,17],\"2149\":[1,11],\"2150\":[1,4],\"2151\":[1,7],\"2152\":[1,6],\"2153\":[1,4],\"2154\":[1,4],\"2155\":[1,5],\"2156\":[1,5],\"2157\":[3,12],\"2158\":[1,9],\"2159\":[1,5],\"2160\":[1,8],\"2161\":[1,10],\"2162\":[1,4],\"2163\":[1,7],\"2164\":[1,6],\"2165\":[1,4],\"2166\":[1,4],\"2167\":[1,5],\"2168\":[1,5],\"2169\":[1,6],\"2170\":[2,4],\"2171\":[1,31],\"2172\":[1,23],\"2173\":[1,14],\"2174\":[1,8],\"2175\":[1,9],\"2176\":[1,7],\"2177\":[3,2],\"2178\":[1,20],\"2179\":[1,13],\"2180\":[1,17],\"2181\":[1,29],\"2182\":[1,33],\"2183\":[1,12],\"2184\":[1,12],\"2185\":[1,12],\"2186\":[1,17],\"2187\":[3,5],\"2188\":[1,15],\"2189\":[1,6],\"2190\":[1,6],\"2191\":[1,6],\"2192\":[1,6],\"2193\":[1,11],\"2194\":[1,8],\"2195\":[1,2],\"2196\":[1,11],\"2197\":[1,7],\"2198\":[1,6],\"2199\":[1,5],\"2200\":[3,2],\"2201\":[1,5],\"2202\":[1,4],\"2203\":[1,4],\"2204\":[1,4],\"2205\":[1,7],\"2206\":[1,6],\"2207\":[1,7],\"2208\":[1,17],\"2209\":[1,6],\"2210\":[1,10],\"2211\":[1,4],\"2212\":[1,9],\"2213\":[1,4],\"2214\":[1,4],\"2215\":[1,4],\"2216\":[1,6],\"2217\":[1,6],\"2218\":[1,5],\"2219\":[1,4],\"2220\":[3,2],\"2221\":[1,9],\"2222\":[1,16],\"2223\":[1,16],\"2224\":[1,10],\"2225\":[1,45],\"2226\":[1,42],\"2227\":[1,42],\"2228\":[1,42],\"2229\":[1,42],\"2230\":[1,49],\"2231\":[1,49],\"2232\":[1,49],\"2233\":[1,47],\"2234\":[1,59],\"2235\":[1,69],\"2236\":[1,56],\"2237\":[1,47],\"2238\":[1,32],\"2239\":[1,53],\"2240\":[1,57],\"2241\":[1,29],\"2242\":[1,45],\"2243\":[1,42],\"2244\":[1,42],\"2245\":[1,42],\"2246\":[1,42],\"2247\":[1,49],\"2248\":[1,49],\"2249\":[1,49],\"2250\":[1,47],\"2251\":[1,59],\"2252\":[1,69],\"2253\":[1,56],\"2254\":[1,47],\"2255\":[2,59],\"2256\":[1,103],\"2257\":[3,27],\"2258\":[1,47],\"2259\":[1,123],\"2260\":[3,28],\"2261\":[1,23],\"2262\":[4,71],\"2263\":[1,35],\"2264\":[3,60],\"2265\":[3,65],\"2266\":[1,46],\"2267\":[1,51],\"2268\":[1,19],\"2269\":[1,34],\"2270\":[1,23],\"2271\":[1,82],\"2272\":[1,62],\"2273\":[1,28],\"2274\":[1,32],\"2275\":[1,75],\"2276\":[1,31],\"2277\":[1],\"2278\":[4,7],\"2279\":[4,12],\"2280\":[3,9],\"2281\":[3,13],\"2282\":[4,13],\"2283\":[3,13],\"2284\":[3,12],\"2285\":[4,8],\"2286\":[3,6],\"2287\":[4,6],\"2288\":[1,17],\"2289\":[1],\"2290\":[1,28],\"2291\":[1,22],\"2292\":[1,5],\"2293\":[1,23],\"2294\":[1,14],\"2295\":[1,14],\"2296\":[1,10],\"2297\":[1],\"2298\":[3,18],\"2299\":[2,39],\"2300\":[3,20],\"2301\":[2,25],\"2302\":[1,18],\"2303\":[3,82],\"2304\":[3,67],\"2305\":[3,1],\"2306\":[3,1],\"2307\":[2,8],\"2308\":[1,21],\"2309\":[1,4],\"2310\":[1,7],\"2311\":[1,6],\"2312\":[1,6],\"2313\":[1,13],\"2314\":[1,12],\"2315\":[1,9],\"2316\":[1,9],\"2317\":[1,9],\"2318\":[1,11],\"2319\":[1,5],\"2320\":[1,16],\"2321\":[1,4],\"2322\":[1,5],\"2323\":[1,4],\"2324\":[1,6],\"2325\":[1,24],\"2326\":[1,16],\"2327\":[1,17],\"2328\":[1,21],\"2329\":[1,7],\"2330\":[1,9],\"2331\":[1,6],\"2332\":[1,7],\"2333\":[1,15],\"2334\":[1,9],\"2335\":[1,12],\"2336\":[1,6],\"2337\":[1,14],\"2338\":[1,6],\"2339\":[1,5],\"2340\":[1,22],\"2341\":[1,8],\"2342\":[1,9],\"2343\":[1,31],\"2344\":[1,11],\"2345\":[1,11],\"2346\":[1,21],\"2347\":[1,14],\"2348\":[1,11],\"2349\":[1,11],\"2350\":[1,10],\"2351\":[1,10],\"2352\":[1,11],\"2353\":[1,6],\"2354\":[1,9],\"2355\":[1,9],\"2356\":[1,6],\"2357\":[1,4],\"2358\":[1,4],\"2359\":[1,6],\"2360\":[1,8],\"2361\":[1,7],\"2362\":[1,8],\"2363\":[1,7],\"2364\":[1,4],\"2365\":[1,4],\"2366\":[1,4],\"2367\":[1,7],\"2368\":[1,4],\"2369\":[1,6],\"2370\":[1,17],\"2371\":[1,9],\"2372\":[1,7],\"2373\":[1,10],\"2374\":[1,11],\"2375\":[1,14],\"2376\":[1,7],\"2377\":[2,2],\"2378\":[1,15],\"2379\":[1,18],\"2380\":[1,12],\"2381\":[1,10],\"2382\":[1,16],\"2383\":[1,5],\"2384\":[1,7],\"2385\":[3],\"2386\":[1,9],\"2387\":[1,11],\"2388\":[1,8],\"2389\":[3,11],\"2390\":[1,16],\"2391\":[1,5],\"2392\":[1,4],\"2393\":[1,4],\"2394\":[1,5],\"2395\":[1,5],\"2396\":[1,8],\"2397\":[1,17],\"2398\":[1,13],\"2399\":[1,4],\"2400\":[1,7],\"2401\":[1,4],\"2402\":[1,4],\"2403\":[1,4],\"2404\":[1,5],\"2405\":[1,5],\"2406\":[1,6],\"2407\":[3,11],\"2408\":[1,7],\"2409\":[1,10],\"2410\":[1,9],\"2411\":[1,9],\"2412\":[1,7],\"2413\":[1,5],\"2414\":[1,10],\"2415\":[1,7],\"2416\":[1,13],\"2417\":[1,13],\"2418\":[1,9],\"2419\":[1,9],\"2420\":[1,5],\"2421\":[1,5],\"2422\":[1,5],\"2423\":[1,7],\"2424\":[1,5],\"2425\":[1,5],\"2426\":[1,17],\"2427\":[1,9],\"2428\":[1,4],\"2429\":[1,7],\"2430\":[1,6],\"2431\":[1,4],\"2432\":[1,4],\"2433\":[1,5],\"2434\":[1,5],\"2435\":[3,13],\"2436\":[1,16],\"2437\":[1,5],\"2438\":[1,4],\"2439\":[1,4],\"2440\":[1,5],\"2441\":[1,5],\"2442\":[1,17],\"2443\":[1,6],\"2444\":[2,3],\"2445\":[1,7],\"2446\":[1,6],\"2447\":[1,6],\"2448\":[1,9],\"2449\":[1,9],\"2450\":[1,4],\"2451\":[1,8],\"2452\":[1,9],\"2453\":[1,8],\"2454\":[1,7],\"2455\":[1,5],\"2456\":[1,7],\"2457\":[1,13],\"2458\":[1,4],\"2459\":[1,4],\"2460\":[1,6],\"2461\":[1,11],\"2462\":[1,4],\"2463\":[1,6],\"2464\":[1,7],\"2465\":[1,7],\"2466\":[1,7],\"2467\":[1,13],\"2468\":[1,13],\"2469\":[1,8],\"2470\":[1,4],\"2471\":[1,5],\"2472\":[1,9],\"2473\":[1,21],\"2474\":[1,5],\"2475\":[1,12],\"2476\":[1,4],\"2477\":[1,4],\"2478\":[1,29],\"2479\":[1,13],\"2480\":[1,8],\"2481\":[1,4],\"2482\":[1,4],\"2483\":[1,4],\"2484\":[1,8],\"2485\":[1,11],\"2486\":[1,11],\"2487\":[1,9],\"2488\":[1,9],\"2489\":[1,12],\"2490\":[1,10],\"2491\":[1,10],\"2492\":[1,5],\"2493\":[1,11],\"2494\":[1,5],\"2495\":[1,16],\"2496\":[3,4],\"2497\":[1,9],\"2498\":[1,5],\"2499\":[1,7],\"2500\":[1,9],\"2501\":[1,10],\"2502\":[3,11],\"2503\":[1,5],\"2504\":[1,5],\"2505\":[1,10],\"2506\":[1,7],\"2507\":[1,13],\"2508\":[1,13],\"2509\":[1,9],\"2510\":[1,9],\"2511\":[1,5],\"2512\":[1,4],\"2513\":[1,5],\"2514\":[1,6],\"2515\":[1,5],\"2516\":[1,5],\"2517\":[1,17],\"2518\":[1,11],\"2519\":[1,4],\"2520\":[1,7],\"2521\":[1,6],\"2522\":[1,4],\"2523\":[1,4],\"2524\":[1,5],\"2525\":[1,5],\"2526\":[3,12],\"2527\":[1,9],\"2528\":[1,5],\"2529\":[1,8],\"2530\":[1,10],\"2531\":[1,4],\"2532\":[1,7],\"2533\":[1,6],\"2534\":[1,4],\"2535\":[1,4],\"2536\":[1,5],\"2537\":[1,5],\"2538\":[1,6],\"2539\":[2,4],\"2540\":[1,31],\"2541\":[1,23],\"2542\":[1,14],\"2543\":[1,8],\"2544\":[1,9],\"2545\":[1,7],\"2546\":[3,2],\"2547\":[1,20],\"2548\":[1,13],\"2549\":[1,17],\"2550\":[1,29],\"2551\":[1,33],\"2552\":[1,12],\"2553\":[1,12],\"2554\":[1,12],\"2555\":[1,17],\"2556\":[3,5],\"2557\":[1,15],\"2558\":[1,6],\"2559\":[1,6],\"2560\":[1,6],\"2561\":[1,6],\"2562\":[1,11],\"2563\":[1,8],\"2564\":[1,2],\"2565\":[1,11],\"2566\":[1,7],\"2567\":[1,6],\"2568\":[1,5],\"2569\":[3,2],\"2570\":[1,5],\"2571\":[1,4],\"2572\":[1,4],\"2573\":[1,4],\"2574\":[1,7],\"2575\":[1,6],\"2576\":[1,7],\"2577\":[1,17],\"2578\":[1,6],\"2579\":[1,10],\"2580\":[1,4],\"2581\":[1,9],\"2582\":[1,4],\"2583\":[1,4],\"2584\":[1,4],\"2585\":[1,6],\"2586\":[1,6],\"2587\":[1,5],\"2588\":[1,4],\"2589\":[3,2],\"2590\":[1,9],\"2591\":[1,16],\"2592\":[1,16],\"2593\":[1,10],\"2594\":[1,45],\"2595\":[1,42],\"2596\":[1,42],\"2597\":[1,42],\"2598\":[1,42],\"2599\":[1,49],\"2600\":[1,49],\"2601\":[1,49],\"2602\":[1,47],\"2603\":[1,59],\"2604\":[1,69],\"2605\":[1,56],\"2606\":[1,47],\"2607\":[1,32],\"2608\":[1,53],\"2609\":[1,57],\"2610\":[1,29],\"2611\":[1,45],\"2612\":[1,42],\"2613\":[1,42],\"2614\":[1,42],\"2615\":[1,42],\"2616\":[1,49],\"2617\":[1,49],\"2618\":[1,49],\"2619\":[1,47],\"2620\":[1,59],\"2621\":[1,69],\"2622\":[1,56],\"2623\":[1,47],\"2624\":[2,59],\"2625\":[1,103],\"2626\":[3,27],\"2627\":[1,47],\"2628\":[1,123],\"2629\":[3,28],\"2630\":[1,23],\"2631\":[4,71],\"2632\":[1,35],\"2633\":[3,60],\"2634\":[3,65],\"2635\":[1,46],\"2636\":[1,51],\"2637\":[1,19],\"2638\":[1,34],\"2639\":[1,23],\"2640\":[1,82],\"2641\":[1,62],\"2642\":[1,28],\"2643\":[1,32],\"2644\":[1,75],\"2645\":[1,31],\"2646\":[1],\"2647\":[4,7],\"2648\":[4,12],\"2649\":[3,9],\"2650\":[3,13],\"2651\":[4,13],\"2652\":[3,13],\"2653\":[3,12],\"2654\":[4,8],\"2655\":[3,6],\"2656\":[4,6],\"2657\":[1,17],\"2658\":[1],\"2659\":[1,28],\"2660\":[1,22],\"2661\":[1,5],\"2662\":[1,23],\"2663\":[1,14],\"2664\":[1,14],\"2665\":[1,10],\"2666\":[1],\"2667\":[3,18],\"2668\":[2,39],\"2669\":[3,20],\"2670\":[2,25],\"2671\":[1,18],\"2672\":[3,82],\"2673\":[3,67],\"2674\":[3,1],\"2675\":[3,1],\"2676\":[1,18],\"2677\":[1],\"2678\":[1,64],\"2679\":[1,210],\"2680\":[1,117],\"2681\":[1,70],\"2682\":[1,6],\"2683\":[1],\"2684\":[1,47],\"2685\":[3,45],\"2686\":[1],\"2687\":[1,40],\"2688\":[1,34],\"2689\":[1,52],\"2690\":[1,113],\"2691\":[1,18],\"2692\":[1],\"2693\":[1,64],\"2694\":[1,210],\"2695\":[1,117],\"2696\":[1,70],\"2697\":[1,6],\"2698\":[1],\"2699\":[1,47],\"2700\":[3,45],\"2701\":[1],\"2702\":[1,40],\"2703\":[1,34],\"2704\":[1,52],\"2705\":[1,113],\"2706\":[1,18],\"2707\":[1],\"2708\":[1,64],\"2709\":[1,210],\"2710\":[1,117],\"2711\":[1,70],\"2712\":[1,6],\"2713\":[1],\"2714\":[1,47],\"2715\":[3,45],\"2716\":[1],\"2717\":[1,40],\"2718\":[1,34],\"2719\":[1,52],\"2720\":[1,113],\"2721\":[1,3],\"2722\":[1,3],\"2723\":[1,3],\"2724\":[1,3],\"2725\":[1,6],\"2726\":[1,5],\"2727\":[1,5],\"2728\":[1,3],\"2729\":[1,3],\"2730\":[1,3],\"2731\":[1,3],\"2732\":[1,6],\"2733\":[1,5],\"2734\":[1,5],\"2735\":[1,3],\"2736\":[1,3],\"2737\":[1,3],\"2738\":[1,3],\"2739\":[1,6],\"2740\":[1,5],\"2741\":[1,5],\"2742\":[1,5],\"2743\":[1,5],\"2744\":[1,5],\"2745\":[1,3],\"2746\":[1],\"2747\":[1],\"2748\":[1],\"2749\":[2],\"2750\":[1],\"2751\":[1],\"2752\":[1],\"2753\":[1],\"2754\":[1],\"2755\":[1],\"2756\":[2],\"2757\":[1],\"2758\":[1],\"2759\":[1],\"2760\":[1],\"2761\":[1],\"2762\":[1],\"2763\":[2],\"2764\":[1],\"2765\":[1],\"2766\":[1],\"2767\":[1],\"2768\":[1],\"2769\":[1],\"2770\":[1],\"2771\":[1],\"2772\":[1],\"2773\":[1],\"2774\":[1],\"2775\":[1],\"2776\":[1]},\"averageFieldLength\":[1.203096867122797,18.555832284208584],\"storedFields\":{\"0\":{\"h\":\"概览\",\"t\":[\"NoneBot2 是一个现代、跨平台、可扩展的 Python 聊天机器人框架（下称 NoneBot），它基于 Python 的类型注解和异步优先特性（兼容同步），能够为你的需求实现提供便捷灵活的支持。同时，NoneBot 拥有大量的开发者为其开发插件，用户无需编写任何代码，仅需完成环境配置及插件安装，就可以正常使用 NoneBot。\",\"需要注意的是，NoneBot 仅支持 Python 3.9 以上版本\"]},\"1\":{\"h\":\"特色\"},\"2\":{\"h\":\"异步优先\",\"t\":[\"NoneBot 基于 Python asyncio 编写，并在异步机制的基础上进行了一定程度的同步函数兼容。\"]},\"3\":{\"h\":\"完整的类型注解\",\"t\":[\"NoneBot 参考 PEP 484 等 PEP 完整实现了类型注解，通过 Pyright（Pylance） 检查。配合编辑器的类型推导功能，能将绝大多数的 Bug 杜绝在编辑器中（编辑器支持）。\"]},\"4\":{\"h\":\"开箱即用\",\"t\":[\"NoneBot 提供了使用便捷、具有交互式功能的命令行工具--nb-cli，使得用户初次接触 NoneBot 时更容易上手。使用方法请阅读本文档指南以及 CLI 文档。\"]},\"5\":{\"h\":\"插件系统\",\"t\":[\"插件系统是 NoneBot 的核心，通过它可以实现机器人的模块化以及功能扩展，便于维护和管理。\"]},\"6\":{\"h\":\"依赖注入系统\",\"t\":[\"NoneBot 采用了一套自行定义的依赖注入系统，可以让事件的处理过程更加的简洁、清晰，增加代码的可读性，减少代码冗余。\"]},\"7\":{\"h\":\"什么是依赖注入\",\"t\":[\"『依赖注入』意思是，在编程中，有一种方法可以让你的代码声明它工作和使用所需要的东西，即**『依赖』**。\",\"系统（在这里是指 NoneBot）将负责做任何需要的事情，为你的代码提供这些必要依赖（即**『注入』**依赖性）\",\"这在你有以下情形的需求时非常有用：\",\"这部分代码拥有共享的逻辑（同样的代码逻辑多次重复）\",\"共享数据库以及网络请求连接会话 \",\"比如 httpx.AsyncClient、aiohttp.ClientSession 和 sqlalchemy.Session\",\"机器人用户权限检查以及认证\",\"还有更多...\",\"它在完成上述工作的同时，还能尽量减少代码的耦合和重复\"]},\"8\":{\"h\":\"编辑器支持\",\"t\":[\"框架基于 PEP484、PEP 561、PEP8 等规范进行开发并且拥有完整类型注解。框架使用 Pyright（Pylance）工具进行类型检查，确保代码可以被编辑器正确解析。\"]},\"9\":{\"h\":\"编辑器推荐配置\"},\"10\":{\"h\":\"Visual Studio Code\",\"t\":[\"在 Visual Studio Code 中，可以使用 Pylance Language Server 并启用 Type Checking 配置以达到最佳开发体验。\",\"在 VSCode 插件视图搜索并安装 Python (ms-python.python) 和 Pylance (ms-python.vscode-pylance) 插件。\",\"修改 VSCode 配置 在 VSCode 设置视图搜索配置项 Python: Language Server 并将其值设置为 Pylance，搜索配置项 Python > Analysis: Type Checking Mode 并将其值设置为 basic。\",\"或者向项目 .vscode 文件夹中配置文件添加以下内容：\",\"{ \\\"python.languageServer\\\": \\\"Pylance\\\", \\\"python.analysis.typeCheckingMode\\\": \\\"basic\\\" }\"]},\"11\":{\"h\":\"其他\",\"t\":[\"欢迎提交 Pull Request 添加其他编辑器配置推荐。点击左下角 Edit this page 前往编辑。\"]},\"12\":{\"h\":\"概览\",\"t\":[\"NoneBot2 是一个现代、跨平台、可扩展的 Python 聊天机器人框架（下称 NoneBot），它基于 Python 的类型注解和异步优先特性（兼容同步），能够为你的需求实现提供便捷灵活的支持。同时，NoneBot 拥有大量的开发者为其开发插件，用户无需编写任何代码，仅需完成环境配置及插件安装，就可以正常使用 NoneBot。\",\"需要注意的是，NoneBot 仅支持 Python 3.9 以上版本\"]},\"13\":{\"h\":\"特色\"},\"14\":{\"h\":\"异步优先\",\"t\":[\"NoneBot 基于 Python asyncio / trio 编写，并在异步机制的基础上进行了一定程度的同步函数兼容。\"]},\"15\":{\"h\":\"完整的类型注解\",\"t\":[\"NoneBot 参考 PEP 484 等 PEP 完整实现了类型注解，通过 Pyright（Pylance） 检查。配合编辑器的类型推导功能，能将绝大多数的 Bug 杜绝在编辑器中（编辑器支持）。\"]},\"16\":{\"h\":\"开箱即用\",\"t\":[\"NoneBot 提供了使用便捷、具有交互式功能的命令行工具--nb-cli，使得用户初次接触 NoneBot 时更容易上手。使用方法请阅读本文档指南以及 CLI 文档。\"]},\"17\":{\"h\":\"插件系统\",\"t\":[\"插件系统是 NoneBot 的核心，通过它可以实现机器人的模块化以及功能扩展，便于维护和管理。\"]},\"18\":{\"h\":\"依赖注入系统\",\"t\":[\"NoneBot 采用了一套自行定义的依赖注入系统，可以让事件的处理过程更加的简洁、清晰，增加代码的可读性，减少代码冗余。\"]},\"19\":{\"h\":\"什么是依赖注入\",\"t\":[\"『依赖注入』意思是，在编程中，有一种方法可以让你的代码声明它工作和使用所需要的东西，即**『依赖』**。\",\"系统（在这里是指 NoneBot）将负责做任何需要的事情，为你的代码提供这些必要依赖（即**『注入』**依赖性）\",\"这在你有以下情形的需求时非常有用：\",\"这部分代码拥有共享的逻辑（同样的代码逻辑多次重复）\",\"共享数据库以及网络请求连接会话 \",\"比如 httpx.AsyncClient、aiohttp.ClientSession 和 sqlalchemy.Session\",\"机器人用户权限检查以及认证\",\"还有更多...\",\"它在完成上述工作的同时，还能尽量减少代码的耦合和重复\"]},\"20\":{\"h\":\"编辑器支持\",\"t\":[\"框架基于 PEP484、PEP 561、PEP8 等规范进行开发并且拥有完整类型注解。框架使用 Pyright（Pylance）工具进行类型检查，确保代码可以被编辑器正确解析。\"]},\"21\":{\"h\":\"编辑器推荐配置\"},\"22\":{\"h\":\"Visual Studio Code\",\"t\":[\"在 Visual Studio Code 中，可以使用 Pylance Language Server 并启用 Type Checking 配置以达到最佳开发体验。\",\"在 VSCode 插件视图搜索并安装 Python (ms-python.python) 和 Pylance (ms-python.vscode-pylance) 插件。\",\"修改 VSCode 配置 在 VSCode 设置视图搜索配置项 Python: Language Server 并将其值设置为 Pylance，搜索配置项 Python > Analysis: Type Checking Mode 并将其值设置为 basic。\",\"或者向项目 .vscode 文件夹中配置文件添加以下内容：\",\"{ \\\"python.languageServer\\\": \\\"Pylance\\\", \\\"python.analysis.typeCheckingMode\\\": \\\"basic\\\" }\"]},\"23\":{\"h\":\"其他\",\"t\":[\"欢迎提交 Pull Request 添加其他编辑器配置推荐。点击左下角 Edit this page 前往编辑。\"]},\"24\":{\"h\":\"概览\",\"t\":[\"NoneBot2 是一个现代、跨平台、可扩展的 Python 聊天机器人框架（下称 NoneBot），它基于 Python 的类型注解和异步优先特性（兼容同步），能够为你的需求实现提供便捷灵活的支持。同时，NoneBot 拥有大量的开发者为其开发插件，用户无需编写任何代码，仅需完成环境配置及插件安装，就可以正常使用 NoneBot。\",\"需要注意的是，NoneBot 仅支持 Python 3.9 以上版本\"]},\"25\":{\"h\":\"特色\"},\"26\":{\"h\":\"异步优先\",\"t\":[\"NoneBot 基于 Python asyncio / trio 编写，并在异步机制的基础上进行了一定程度的同步函数兼容。\"]},\"27\":{\"h\":\"完整的类型注解\",\"t\":[\"NoneBot 参考 PEP 484 等 PEP 完整实现了类型注解，通过 Pyright（Pylance） 检查。配合编辑器的类型推导功能，能将绝大多数的 Bug 杜绝在编辑器中（编辑器支持）。\"]},\"28\":{\"h\":\"开箱即用\",\"t\":[\"NoneBot 提供了使用便捷、具有交互式功能的命令行工具--nb-cli，使得用户初次接触 NoneBot 时更容易上手。使用方法请阅读本文档指南以及 CLI 文档。\"]},\"29\":{\"h\":\"插件系统\",\"t\":[\"插件系统是 NoneBot 的核心，通过它可以实现机器人的模块化以及功能扩展，便于维护和管理。\"]},\"30\":{\"h\":\"依赖注入系统\",\"t\":[\"NoneBot 采用了一套自行定义的依赖注入系统，可以让事件的处理过程更加的简洁、清晰，增加代码的可读性，减少代码冗余。\"]},\"31\":{\"h\":\"什么是依赖注入\",\"t\":[\"『依赖注入』意思是，在编程中，有一种方法可以让你的代码声明它工作和使用所需要的东西，即**『依赖』**。\",\"系统（在这里是指 NoneBot）将负责做任何需要的事情，为你的代码提供这些必要依赖（即**『注入』**依赖性）\",\"这在你有以下情形的需求时非常有用：\",\"这部分代码拥有共享的逻辑（同样的代码逻辑多次重复）\",\"共享数据库以及网络请求连接会话 \",\"比如 httpx.AsyncClient、aiohttp.ClientSession 和 sqlalchemy.Session\",\"机器人用户权限检查以及认证\",\"还有更多...\",\"它在完成上述工作的同时，还能尽量减少代码的耦合和重复\"]},\"32\":{\"h\":\"编辑器支持\",\"t\":[\"框架基于 PEP484、PEP 561、PEP8 等规范进行开发并且拥有完整类型注解。框架使用 Pyright（Pylance）工具进行类型检查，确保代码可以被编辑器正确解析。\"]},\"33\":{\"h\":\"编辑器推荐配置\"},\"34\":{\"h\":\"Visual Studio Code\",\"t\":[\"在 Visual Studio Code 中，可以使用 Pylance Language Server 并启用 Type Checking 配置以达到最佳开发体验。\",\"在 VSCode 插件视图搜索并安装 Python (ms-python.python) 和 Pylance (ms-python.vscode-pylance) 插件。\",\"修改 VSCode 配置 在 VSCode 设置视图搜索配置项 Python: Language Server 并将其值设置为 Pylance，搜索配置项 Python > Analysis: Type Checking Mode 并将其值设置为 basic。\",\"或者向项目 .vscode 文件夹中配置文件添加以下内容：\",\"{ \\\"python.languageServer\\\": \\\"Pylance\\\", \\\"python.analysis.typeCheckingMode\\\": \\\"basic\\\" }\"]},\"35\":{\"h\":\"其他\",\"t\":[\"欢迎提交 Pull Request 添加其他编辑器配置推荐。点击左下角 Edit this page 前往编辑。\"]},\"36\":{\"h\":\"使用适配器\",\"t\":[\"适配器 (Adapter) 是机器人与平台交互的核心桥梁，它负责在驱动器和机器人插件之间转换与传递消息。\"]},\"37\":{\"h\":\"适配器功能与组成\",\"t\":[\"适配器通常有两种功能，分别是接收事件和调用平台接口。其中，接收事件是指将驱动器收到的事件消息转换为 NoneBot 定义的事件模型，然后交由机器人插件处理；调用平台接口是指将机器人插件调用平台接口的数据转换为平台指定的格式，然后交由驱动器发送，并接收接口返回数据。\",\"为了实现这两种功能，适配器通常由四个部分组成：\",\"Adapter：负责转换事件和调用接口，正确创建 Bot 对象并注册到 NoneBot 中。\",\"Bot：负责存储平台机器人相关信息，并提供回复事件的方法。\",\"Event：负责定义事件内容，以及事件主体对象。\",\"Message：负责正确序列化消息，以便机器人插件处理。\"]},\"38\":{\"h\":\"注册适配器\",\"t\":[\"在使用适配器之前，我们需要先将适配器注册到驱动器中，这样适配器就可以通过驱动器接收事件和调用接口了。我们以 Console 适配器为例，来看看如何注册适配器：\",\"import nonebot from nonebot.adapters.console import Adapter driver = nonebot.get_driver() driver.register_adapter(Adapter)\",\"我们首先需要从适配器模块中导入所需要的适配器类，然后通过驱动器的 register_adapter 方法将适配器注册到驱动器中即可。如果我们需要多平台支持，可以多次调用 register_adapter 方法来注册多个适配器。\"]},\"39\":{\"h\":\"获取已注册的适配器\",\"t\":[\"NoneBot 提供了 get_adapter 方法来获取已注册的适配器，我们可以通过适配器的名称或类型来获取指定的适配器实例：\",\"import nonebot from nonebot.adapters.console import Adapter adapters = nonebot.get_adapters() console_adapter = nonebot.get_adapter(Adapter) console_adapter = nonebot.get_adapter(Adapter.get_name())\"]},\"40\":{\"h\":\"获取 Bot 对象\",\"t\":[\"当前所有适配器已连接的 Bot 对象可以通过 get_bots 方法获取，这是一个以机器人 ID 为键的字典：\",\"import nonebot bots = nonebot.get_bots()\",\"我们也可以通过 get_bot 方法获取指定 ID 的 Bot 对象。如果省略 ID 参数，将会返回所有 Bot 中的第一个：\",\"import nonebot bot = nonebot.get_bot(\\\"bot_id\\\")\",\"如果需要获取指定适配器连接的 Bot 对象，我们可以通过适配器的 bots 属性获取，这也是一个以机器人 ID 为键的字典：\",\"import nonebot from nonebot.adapters.console import Adapter console_adapter = nonebot.get_adapter(Adapter) bots = console_adapter.bots\",\"Bot 对象都具有一个 self_id 属性，它是机器人的唯一 ID，由适配器填写，通常为机器人的帐号 ID 或者 APP ID。\"]},\"41\":{\"h\":\"获取事件通用信息\",\"t\":[\"适配器的所有事件模型均继承自 Event 基类，在事件类型与重载一节中，我们也提到了如何使用基类抽象方法来获取事件通用信息。基类能提供如下信息：\"]},\"42\":{\"h\":\"事件类型\",\"t\":[\"事件类型通常为 meta_event、message、notice、request。\",\"type: str = event.get_type()\"]},\"43\":{\"h\":\"事件名称\",\"t\":[\"事件名称由适配器定义，通常用于日志记录。\",\"name: str = event.get_event_name()\"]},\"44\":{\"h\":\"事件描述\",\"t\":[\"事件描述由适配器定义，通常用于日志记录。\",\"description: str = event.get_event_description()\"]},\"45\":{\"h\":\"事件日志字符串\",\"t\":[\"事件日志字符串由事件名称和事件描述组成，用于日志记录。\",\"log: str = event.get_log_string()\"]},\"46\":{\"h\":\"事件主体 ID\",\"t\":[\"事件主体 ID 通常为机器人用户 ID。\",\"user_id: str = event.get_user_id()\"]},\"47\":{\"h\":\"事件会话 ID\",\"t\":[\"事件会话 ID 通常为机器人用户 ID 与群聊/频道 ID 组合而成。\",\"session_id: str = event.get_session_id()\"]},\"48\":{\"h\":\"事件消息\",\"t\":[\"如果事件包含消息，则可以通过该方法获取，否则会产生异常。\",\"message: Message = event.get_message()\"]},\"49\":{\"h\":\"事件纯文本消息\",\"t\":[\"通常为事件消息的纯文本内容，如果事件不包含消息，则会产生异常。\",\"text: str = event.get_plaintext()\"]},\"50\":{\"h\":\"事件是否与机器人有关\",\"t\":[\"由适配器实现的判断，通常将事件目标主体为机器人、消息中包含“@机器人”或以“机器人的昵称”开始视为与机器人有关。\",\"is_tome: bool = event.is_tome()\"]},\"51\":{\"h\":\"更多\",\"t\":[\"官方支持的适配器和社区贡献的适配器均可在商店中查看。如果你想要开发自己的适配器，可以参考开发文档。欢迎通过商店发布你的适配器。\"]},\"52\":{\"h\":\"选择驱动器\",\"t\":[\"驱动器 (Driver) 是机器人运行的基石，它是机器人初始化的第一步，主要负责数据收发。\",\"提示\",\"驱动器的选择通常与机器人所使用的协议适配器相关，如果不知道该选择哪个驱动器，可以先阅读相关协议适配器文档说明。\",\"提示\",\"如何安装驱动器请参考安装驱动器。\"]},\"53\":{\"h\":\"驱动器类型\",\"t\":[\"驱动器类型大体上可以分为两种：\",\"Forward：即客户端型驱动器，多用于使用 HTTP 轮询，连接 WebSocket 服务器等情形。\",\"Reverse：即服务端型驱动器，多用于使用 WebHook，接收 WebSocket 客户端连接等情形。\",\"客户端型驱动器可以分为以下两种：\",\"异步发送 HTTP 请求，自定义 HTTP Method、URL、Header、Body、Cookie、Proxy、Timeout 等。\",\"异步建立 WebSocket 连接上下文，自定义 WebSocket URL、Header、Cookie、Proxy、Timeout 等。\",\"服务端型驱动器目前有：\",\"ASGI 应用框架，具有以下功能： \",\"协议适配器自定义 HTTP 上报地址以及对上报数据处理的回调函数。\",\"协议适配器自定义 WebSocket 连接请求地址以及对 WebSocket 请求处理的回调函数。\",\"用户可以向 ASGI 应用添加任何服务端相关功能，如：添加自定义路由。\"]},\"54\":{\"h\":\"配置驱动器\",\"t\":[\"驱动器的配置方法已经在配置章节中简单进行了介绍，这里将详细介绍驱动器配置的格式。\",\"NoneBot 中的客户端和服务端型驱动器可以相互配合使用，但服务端型驱动器仅能选择一个。所有驱动器模块都会包含一个 Driver 子类，即驱动器类，他可以作为驱动器单独运行。同时，客户端驱动器模块中还会提供一个 Mixin 子类，用于在与其他驱动器配合使用时加载。因此，驱动器配置格式采用特殊语法：<module>[:<Driver>][+<module>[:<Mixin>]]*。\",\"其中，<module> 代表驱动器模块路径；<Driver> 代表驱动器类名，默认为 Driver；<Mixin> 代表驱动器混入类名，默认为 Mixin。即，我们需要选择一个主要驱动器，然后在其基础上配合使用其他驱动器的功能。主要驱动器可以为客户端或服务端类型，但混入类驱动器只能为客户端类型。\",\"特别的，为了简化内置驱动器模块路径，我们可以使用 ~ 符号作为内置驱动器模块路径的前缀，如 ~fastapi 代表使用内置驱动器 fastapi。NoneBot 内置了多个驱动器适配，但需要安装额外依赖才能使用，具体请参考安装驱动器。常见的驱动器配置如下：\",\"DRIVER=~fastapi DRIVER=~aiohttp DRIVER=~httpx+~websockets DRIVER=~fastapi+~httpx+~websockets\"]},\"55\":{\"h\":\"获取驱动器\",\"t\":[\"在 NoneBot 框架初始化完成后，我们就可以通过 get_driver() 方法获取全局驱动器实例：\",\"from nonebot import get_driver driver = get_driver()\"]},\"56\":{\"h\":\"内置驱动器\"},\"57\":{\"h\":\"None\",\"t\":[\"**类型：**服务端驱动器\",\"NoneBot 内置的空驱动器，不提供任何收发数据功能，可以在不需要外部网络连接时使用。\",\"DRIVER=~none\"]},\"58\":{\"h\":\"FastAPI（默认）\",\"t\":[\"**类型：**ASGI 服务端驱动器\",\"FastAPI is a modern, fast (high-performance), web framework for building APIs with Python 3.6+ based on standard Python type hints.\",\"FastAPI 是一个易上手、高性能的异步 Web 框架，具有极佳的编写体验。 FastAPI 可以通过类型注解、依赖注入等方式实现输入参数校验、自动生成 API 文档等功能，也可以挂载其他 ASGI、WSGI 应用。\",\"DRIVER=~fastapi\"]},\"59\":{\"h\":\"FastAPI 配置项\"},\"60\":{\"h\":\"\",\"t\":[\"类型：str | None 默认值：None 说明：FastAPI 提供的 OpenAPI JSON 定义地址，如果为 None，则不提供 OpenAPI JSON 定义。\"]},\"61\":{\"h\":\"\",\"t\":[\"类型：str | None 默认值：None 说明：FastAPI 提供的 Swagger 文档地址，如果为 None，则不提供 Swagger 文档。\"]},\"62\":{\"h\":\"\",\"t\":[\"类型：str | None 默认值：None 说明：FastAPI 提供的 ReDoc 文档地址，如果为 None，则不提供 ReDoc 文档。\"]},\"63\":{\"h\":\"\",\"t\":[\"类型：bool 默认值：True 说明：FastAPI 提供的 OpenAPI JSON 定义中是否包含适配器路由的 Schema。\"]},\"64\":{\"h\":\"\",\"t\":[\"警告\",\"不推荐开启该配置项，在 Windows 平台上开启该功能有可能会造成预料之外的影响！替代方案：使用 nb-cli 命令行工具以及参数 --reload 启动 NoneBot。\",\"nb run --reload\",\"开启该功能后，在 uvicorn 运行时（FastAPI 提供的 ASGI 底层，即 reload 功能的实际来源），asyncio 使用的事件循环会被 uvicorn 从默认的 ProactorEventLoop 强制切换到 SelectorEventLoop。\",\"相关信息参考 uvicorn#529，uvicorn#1070，uvicorn#1257\",\"后者（SelectorEventLoop）在 Windows 平台的可使用性不如前者（ProactorEventLoop），包括但不限于\",\"不支持创建子进程\",\"最多只支持 512 个套接字\",\"...\",\"具体信息参考 Python 文档\",\"所以，一些使用了 asyncio 的库因此可能无法正常工作，如：\",\"playwright\",\"如果在开启该功能后，原本正常运行的代码报错，且打印的异常堆栈信息和 asyncio 有关（异常一般为 NotImplementedError）， 你可能就需要考虑相关库对事件循环的支持，以及是否启用该功能。\",\"类型：bool 默认值：False 说明：是否开启 uvicorn 的 reload 功能，需要在机器人入口文件提供 ASGI 应用路径。\",\"app = nonebot.get_asgi() nonebot.run(app=\\\"bot:app\\\")\"]},\"65\":{\"h\":\"\",\"t\":[\"类型：List[str] | None 默认值：None 说明：重载监控文件夹列表，默认为 uvicorn 默认值\"]},\"66\":{\"h\":\"\",\"t\":[\"类型：float | None 默认值：None 说明：重载延迟，默认为 uvicorn 默认值\"]},\"67\":{\"h\":\"\",\"t\":[\"类型：List[str] | None 默认值：None 说明：要监听的文件列表，支持 glob pattern，默认为 uvicorn 默认值\"]},\"68\":{\"h\":\"\",\"t\":[\"类型：List[str] | None 默认值：None 说明：不要监听的文件列表，支持 glob pattern，默认为 uvicorn 默认值\"]},\"69\":{\"h\":\"\",\"t\":[\"类型：Dist[str, Any] 默认值：{} 说明：传递给 FastAPI 的其他参数\"]},\"70\":{\"h\":\"Quart\",\"t\":[\"**类型：**ASGI 服务端驱动器\",\"Quart is an asyncio reimplementation of the popular Flask microframework API.\",\"Quart 是一个类 Flask 的异步版本，拥有与 Flask 非常相似的接口和使用方法。\",\"DRIVER=~quart\"]},\"71\":{\"h\":\"Quart 配置项\"},\"72\":{\"h\":\"\",\"t\":[\"警告\",\"不推荐开启该配置项，在 Windows 平台上开启该功能有可能会造成预料之外的影响！替代方案：使用 nb-cli 命令行工具以及参数 --reload 启动 NoneBot。\",\"nb run --reload\",\"类型：bool 默认值：False 说明：是否开启 uvicorn 的 reload 功能，需要在机器人入口文件提供 ASGI 应用路径。\",\"app = nonebot.get_asgi() nonebot.run(app=\\\"bot:app\\\")\"]},\"73\":{\"h\":\"\",\"t\":[\"类型：List[str] | None 默认值：None 说明：重载监控文件夹列表，默认为 uvicorn 默认值\"]},\"74\":{\"h\":\"\",\"t\":[\"类型：float | None 默认值：None 说明：重载延迟，默认为 uvicorn 默认值\"]},\"75\":{\"h\":\"\",\"t\":[\"类型：List[str] | None 默认值：None 说明：要监听的文件列表，支持 glob pattern，默认为 uvicorn 默认值\"]},\"76\":{\"h\":\"\",\"t\":[\"类型：List[str] | None 默认值：None 说明：不要监听的文件列表，支持 glob pattern，默认为 uvicorn 默认值\"]},\"77\":{\"h\":\"\",\"t\":[\"类型：Dist[str, Any] 默认值：{} 说明：传递给 Quart 的其他参数\"]},\"78\":{\"h\":\"HTTPX\",\"t\":[\"**类型：**HTTP 客户端驱动器\",\"注意\",\"本驱动器仅支持 HTTP 请求，不支持 WebSocket 连接请求。\",\"HTTPX is a fully featured HTTP client for Python 3, which provides sync and async APIs, and support for both HTTP/1.1 and HTTP/2.\",\"DRIVER=~httpx\"]},\"79\":{\"h\":\"websockets\",\"t\":[\"**类型：**WebSocket 客户端驱动器\",\"注意\",\"本驱动器仅支持 WebSocket 连接请求，不支持 HTTP 请求。\",\"websockets is a library for building WebSocket servers and clients in Python with a focus on correctness, simplicity, robustness, and performance.\",\"DRIVER=~websockets\"]},\"80\":{\"h\":\"AIOHTTP\",\"t\":[\"**类型：**HTTP/WebSocket 客户端驱动器\",\"AIOHTTP: Asynchronous HTTP Client/Server for asyncio and Python.\",\"DRIVER=~aiohttp\"]},\"81\":{\"h\":\"事件响应器存储\",\"t\":[\"事件响应器是 NoneBot 处理事件的核心，它们默认存储在一个字典中。在进入会话状态后，事件响应器将会转为临时响应器，作为最高优先级同样存储于该字典中。因此，事件响应器的存储类似于会话存储，它决定了整个 NoneBot 对事件的处理行为。\",\"NoneBot 默认使用 Python 的字典将事件响应器存储于内存中，但是我们也可以自定义事件响应器存储，将事件响应器存储于其他地方，例如 Redis 等。这样我们就可以实现持久化、在多实例间共享会话状态等功能。\"]},\"82\":{\"h\":\"编写存储提供者\",\"t\":[\"事件响应器的存储提供者 MatcherProvider 抽象类继承自 MutableMapping[int, list[type[Matcher]]]，即以优先级为键，以事件响应器列表为值的映射。我们可以方便地进行逐优先级事件传播。\",\"编写一个自定义的存储提供者，只需要继承并实现 MatcherProvider 抽象类：\",\"from nonebot.matcher import MatcherProvider class CustomProvider(MatcherProvider): ...\"]},\"83\":{\"h\":\"设置存储提供者\",\"t\":[\"我们可以通过 matchers.set_provider 方法设置存储提供者：\",\"from nonebot.matcher import matchers matchers.set_provider(CustomProvider) assert isinstance(matchers.provider, CustomProvider)\"]},\"84\":{\"h\":\"事件响应器进阶\",\"t\":[\"在指南与深入中，我们已经介绍了事件响应器的基本用法以及响应规则、权限控制等功能。在这一节中，我们将介绍事件响应器的组成，内置的响应规则，与第三方响应规则拓展。\",\"提示\",\"事件响应器允许继承，你可以通过直接继承 Matcher 类来创建一个新的事件响应器。\"]},\"85\":{\"h\":\"事件响应器组成\"},\"86\":{\"h\":\"事件响应器类型\",\"t\":[\"事件响应器类型 type 即是该响应器所要响应的事件类型，只有在接收到的事件类型与该响应器的类型相同时，才会触发该响应器。如果类型为空字符串 \\\"\\\"，则响应器将会响应所有类型的事件。事件响应器类型的检查在所有其他检查（权限控制、响应规则）之前进行。\",\"NoneBot 内置了四种常用事件类型：meta_event、message、notice、request，分别对应元事件、消息、通知、请求。通常情况下，协议适配器会将事件合理地分类至这四种类型中。如果有其他类型的事件需要响应，可以自行定义新的类型。\"]},\"87\":{\"h\":\"事件触发权限\",\"t\":[\"事件触发权限 permission 是一个 Permission 对象，这在权限控制一节中已经介绍过。事件触发权限会在事件响应器的类型检查通过后进行检查，如果权限检查通过，则执行响应规则检查。\"]},\"88\":{\"h\":\"事件响应规则\",\"t\":[\"事件响应规则 rule 是一个 Rule 对象，这在响应规则一节中已经介绍过。事件响应器的响应规则会在事件响应器的权限检查通过后进行匹配，如果响应规则检查通过，则触发该响应器。\"]},\"89\":{\"h\":\"响应优先级\",\"t\":[\"响应优先级 priority 是一个正整数，用于指定响应器的优先级。响应器的优先级越小，越先被触发。如果响应器的优先级相同，则按照响应器的注册顺序进行触发。\"]},\"90\":{\"h\":\"阻断\",\"t\":[\"阻断 block 是一个布尔值，用于指定响应器是否阻断事件的传播。如果阻断为 True，则在该响应器被触发后，事件将不会再传播给其他下一优先级的响应器。\",\"NoneBot 内置的事件响应器中，所有非 command 规则的 message 类型的事件响应器都会阻断事件传递，其他则不会。\",\"在部分情况中，可以使用 stop_propagation 方法动态阻止事件传播，该方法需要 handler 在参数中获取 matcher 实例后调用方法。\"]},\"91\":{\"h\":\"有效期\",\"t\":[\"事件响应器的有效期分为 temp 和 expire_time 。temp 是一个布尔值，用于指定响应器是否为临时响应器。如果为 True，则该响应器在被触发后会被自动销毁。expire_time 是一个 datetime 对象，用于指定响应器的过期时间。如果 expire_time 不为 None，则在该时间点后，该响应器会被自动销毁。\"]},\"92\":{\"h\":\"默认状态\",\"t\":[\"事件响应器的默认状态 default_state 是一个 dict 对象，用于指定响应器的默认状态。在响应器被触发时，响应器将会初始化默认状态然后开始执行事件处理流程。\"]},\"93\":{\"h\":\"基本辅助函数\",\"t\":[\"NoneBot 为四种类型的事件响应器提供了五个基本的辅助函数：\",\"on：创建任何类型的事件响应器。\",\"on_metaevent：创建元事件响应器。\",\"on_message：创建消息事件响应器。\",\"on_request：创建请求事件响应器。\",\"on_notice：创建通知事件响应器。\",\"除了 on 函数具有一个 type 参数外，其余参数均相同：\",\"rule：响应规则，可以是 Rule 对象或者 RuleChecker 函数。\",\"permission：事件触发权限，可以是 Permission 对象或者 PermissionChecker 函数。\",\"handlers：事件处理函数列表。\",\"temp：是否为临时响应器。\",\"expire_time：响应器的过期时间。\",\"priority：响应器的优先级。\",\"block：是否阻断事件传播。\",\"state：响应器的默认状态。\",\"在消息类型的事件响应器的基础上，NoneBot 还内置了一些常用的响应规则，并结合为辅助函数来方便我们快速创建指定功能的响应器。下面我们逐个介绍。\"]},\"94\":{\"h\":\"内置响应规则\"},\"95\":{\"h\":\"\",\"t\":[\"startswith 响应规则用于匹配消息纯文本部分的开头是否与指定字符串（或一系列字符串）相同。可选参数 ignorecase 用于指定是否忽略大小写，默认为 False。\",\"例如，我们可以创建一个匹配消息开头为 ! 或者 / 的规则：\",\"from nonebot.rule import startswith rule = startswith((\\\"!\\\", \\\"/\\\"), ignorecase=False)\",\"也可以直接使用辅助函数新建一个响应器：\",\"from nonebot import on_startswith matcher = on_startswith((\\\"!\\\", \\\"/\\\"), ignorecase=False)\"]},\"96\":{\"h\":\"\",\"t\":[\"endswith 响应规则用于匹配消息纯文本部分的结尾是否与指定字符串（或一系列字符串）相同。可选参数 ignorecase 用于指定是否忽略大小写，默认为 False。\",\"例如，我们可以创建一个匹配消息结尾为 . 或者 。 的规则：\",\"from nonebot.rule import endswith rule = endswith((\\\".\\\", \\\"。\\\"), ignorecase=False)\",\"也可以直接使用辅助函数新建一个响应器：\",\"from nonebot import on_endswith matcher = on_endswith((\\\".\\\", \\\"。\\\"), ignorecase=False)\"]},\"97\":{\"h\":\"\",\"t\":[\"fullmatch 响应规则用于匹配消息纯文本部分是否与指定字符串（或一系列字符串）完全相同。可选参数 ignorecase 用于指定是否忽略大小写，默认为 False。\",\"例如，我们可以创建一个匹配消息为 ping 或者 pong 的规则：\",\"from nonebot.rule import fullmatch rule = fullmatch((\\\"ping\\\", \\\"pong\\\"), ignorecase=False)\",\"也可以直接使用辅助函数新建一个响应器：\",\"from nonebot import on_fullmatch matcher = on_fullmatch((\\\"ping\\\", \\\"pong\\\"), ignorecase=False)\"]},\"98\":{\"h\":\"\",\"t\":[\"keyword 响应规则用于匹配消息纯文本部分是否包含指定字符串（或一系列字符串）。\",\"例如，我们可以创建一个匹配消息中包含 hello 或者 hi 的规则：\",\"from nonebot.rule import keyword rule = keyword(\\\"hello\\\", \\\"hi\\\")\",\"也可以直接使用辅助函数新建一个响应器：\",\"from nonebot import on_keyword matcher = on_keyword({\\\"hello\\\", \\\"hi\\\"})\"]},\"99\":{\"h\":\"\",\"t\":[\"command 是最常用的响应规则，它用于匹配消息是否为命令。它会根据配置中的 Command Start 和 Command Separator 来判断消息是否为命令。\",\"例如，当我们配置了 Command Start 为 /，Command Separator 为 . 时：\",\"from nonebot.rule import command # 匹配 \\\"/help\\\" 或者 \\\"/帮助\\\" 开头的消息 rule = command(\\\"help\\\", \\\"帮助\\\") # 匹配 \\\"/help.cmd\\\" 开头的消息 rule = command((\\\"help\\\", \\\"cmd\\\"))\",\"也可以直接使用辅助函数新建一个响应器：\",\"from nonebot import on_command matcher = on_command(\\\"help\\\", aliases={\\\"帮助\\\"})\",\"此外，command 响应规则默认允许消息命令与参数间不加空格，如果需要严格匹配命令与参数间的空白符，可以使用 command 函数的 force_whitespace 参数。force_whitespace 参数可以是 bool 类型或者具体的字符串，默认为 False。如果为 True，则命令与参数间必须有任意个数的空白符；如果为字符串，则命令与参数间必须有且与给定字符串一致的空白符。\",\"rule = command(\\\"help\\\", force_whitespace=True) rule = command(\\\"help\\\", force_whitespace=\\\" \\\")\",\"命令解析后的结果可以通过 Command、RawCommand、CommandArg、CommandStart、CommandWhitespace 依赖注入获取。\"]},\"100\":{\"h\":\"\",\"t\":[\"shell_command 响应规则用于匹配类 shell 命令形式的消息。它首先与 command 响应规则一样进行命令匹配，如果匹配成功，则会进行进一步的参数解析。参数解析采用 argparse 标准库进行，在此基础上添加了消息序列 Message 支持。\",\"例如，我们可以创建一个匹配 /cmd 命令并且带有 -v 选项与默认 -h 帮助选项的规则：\",\"from nonebot.rule import shell_command, ArgumentParser parser = ArgumentParser() parser.add_argument(\\\"-v\\\", \\\"--verbose\\\", action=\\\"store_true\\\") rule = shell_command(\\\"cmd\\\", parser=parser)\",\"更多关于 argparse 的使用方法请参考 argparse 文档。我们也可以选择不提供 parser 参数，这样 shell_command 将不会解析参数，但会提供参数列表 argv。\",\"直接使用辅助函数新建一个响应器：\",\"from nonebot import on_shell_command from nonebot.rule import ArgumentParser parser = ArgumentParser() parser.add_argument(\\\"-v\\\", \\\"--verbose\\\", action=\\\"store_true\\\") matcher = on_shell_command(\\\"cmd\\\", parser=parser)\",\"参数解析后的结果可以通过 ShellCommandArgv、ShellCommandArgs 依赖注入获取。\"]},\"101\":{\"h\":\"\",\"t\":[\"regex 响应规则用于匹配消息是否与指定正则表达式匹配。\",\"提示\",\"正则表达式匹配使用 search 而非 match，如需从头匹配请使用 r\\\"^xxx\\\" 模式来确保匹配开头。\",\"例如，我们可以创建一个匹配消息中包含字母并且忽略大小写的规则：\",\"from nonebot.rule import regex rule = regex(r\\\"[a-z]+\\\", flags=re.IGNORECASE)\",\"也可以直接使用辅助函数新建一个响应器：\",\"from nonebot import on_regex matcher = on_regex(r\\\"[a-z]+\\\", flags=re.IGNORECASE)\",\"正则匹配后的结果可以通过 RegexStr、RegexGroup、RegexDict 依赖注入获取。\"]},\"102\":{\"h\":\"\",\"t\":[\"to_me 响应规则用于匹配事件是否与机器人相关。\",\"例如：\",\"from nonebot.rule import to_me rule = to_me()\"]},\"103\":{\"h\":\"\",\"t\":[\"is_type 响应规则用于匹配事件类型是否为指定类型（或者一系列类型）。\",\"例如，我们可以创建一个匹配 OneBot v11 私聊和群聊消息事件的规则：\",\"from nonebot.rule import is_type from nonebot.adapters.onebot.v11 import PrivateMessageEvent, GroupMessageEvent rule = is_type(PrivateMessageEvent, GroupMessageEvent)\"]},\"104\":{\"h\":\"响应器组\",\"t\":[\"为了更方便的管理一系列功能相近的响应器，NoneBot 提供了两种响应器组，它们可以帮助我们进行响应器的统一管理。\"]},\"105\":{\"h\":\"\",\"t\":[\"CommandGroup 可以用于管理一系列具有相同前置命令的子命令响应器。\",\"例如，我们创建 /cmd、/cmd.sub、/cmd.help 三个命令，他们具有相同的优先级：\",\"from nonebot import CommandGroup group = CommandGroup(\\\"cmd\\\", priority=10) cmd = group.command(tuple()) sub_cmd = group.command(\\\"sub\\\") help_cmd = group.command(\\\"help\\\")\",\"命令别名 aliases 默认不会添加 CommandGroup 设定的前缀，如果需要为 aliases 添加前缀，可以添加 prefix_aliases=True 参数:\",\"from nonebot import CommandGroup group = CommandGroup(\\\"cmd\\\", prefix_aliases=True) cmd = group.command(tuple()) help_cmd = group.command(\\\"help\\\", aliases={\\\"帮助\\\"})\",\"这样就能成功匹配 /cmd、/cmd.help、/cmd.帮助 命令。如果未设置，将默认匹配 /cmd、/cmd.help、/帮助 命令。\"]},\"106\":{\"h\":\"\",\"t\":[\"MatcherGroup 可以用于管理一系列具有相同属性的响应器。\",\"例如，我们创建一个具有相同响应规则的响应器组：\",\"from nonebot.rule import to_me from nonebot import MatcherGroup group = MatcherGroup(rule=to_me()) matcher1 = group.on_message() matcher2 = group.on_message()\"]},\"107\":{\"h\":\"第三方响应规则\"},\"108\":{\"h\":\"Alconna\",\"t\":[\"nonebot-plugin-alconna 是一类提供了拓展响应规则的插件。 该插件使用 Alconna 作为命令解析器， 是一个简单、灵活、高效的命令参数解析器, 并且不局限于解析命令式字符串。\",\"该插件提供了一类新的事件响应器辅助函数 on_alconna，以及 AlconnaResult 等依赖注入函数。\",\"基于 Alconna 的特性，该插件同时提供了一系列便捷的消息段标注。 标注可用于在 Alconna 中匹配消息中除 text 外的其他消息段，也可用于快速创建各适配器下的消息段。所有标注位于 nonebot_plugin_alconna.adapters 中。\",\"该插件同时通过提供 UniMessage (通用消息模型) 实现了跨平台接收和发送消息的功能。\",\"详情请阅读最佳实践中的 命令解析拓展 章节。\"]},\"109\":{\"h\":\"插件信息\",\"t\":[\"NoneBot 是一个插件化的框架，可以通过加载插件来扩展功能。同时，我们也可以通过 NoneBot 的插件系统来获取相关信息，例如插件的名称、使用方法，用于收集帮助信息等。下面我们将介绍如何为插件添加元数据，以及如何获取插件信息。\"]},\"110\":{\"h\":\"插件元数据\",\"t\":[\"在 NoneBot 中，插件 Plugin 对象中存储了插件系统所需要的一系列信息。包括插件的索引名称、插件模块、插件中的事件响应器、插件父子关系等。通常，只有插件开发者才需要关心这些信息，而插件使用者或者机器人用户想要看到的是插件使用方法等帮助信息。因此，我们可以为插件添加插件元数据 PluginMetadata，它允许插件开发者为插件添加一些额外的信息。这些信息编写于插件模块的顶层，可以直接通过源码查看，或者通过 NoneBot 插件系统获取收集到的信息，通过其他方式发送给机器人用户等。\",\"现在，假设我们有一个插件 example, 它的模块结构如下：\",\"📦 awesome-bot ├── 📂 awesome_bot │ └── 📂 plugins | └── 📂 example | ├── 📜 __init__.py | └── 📜 config.py ├── 📜 pyproject.toml └── 📜 README.md\",\"我们需要在插件顶层模块 example/__init__.py 中添加插件元数据，如下所示：\",\"from nonebot.plugin import PluginMetadata from .config import Config __plugin_meta__ = PluginMetadata( name=\\\"示例插件\\\", description=\\\"这是一个示例插件\\\", usage=\\\"没什么用\\\", type=\\\"application\\\", config=Config, extra={}, )\",\"我们可以看到，插件元数据 PluginMetadata 有三个基本属性：插件名称、插件描述、插件使用方法。除此之外，还有几个可选的属性（具体填写见发布插件章节）：\",\"type：插件类别，发布插件必填。当前有效类别有：library（为其他插件编写提供功能），application（向机器人用户提供功能）；\",\"homepage：插件项目主页，发布插件必填；\",\"config：插件的配置类，如无配置类可不填；\",\"supported_adapters：支持的适配器模块名集合，若插件可以保证兼容所有适配器（即仅使用基本适配器功能）可不填写；\",\"extra：一个字典，可以用于存储任意信息。其他插件可以通过约定 extra 字典的键名来达成收集某些特殊信息的目的。\",\"请注意，这里的插件名称是供使用者或机器人用户查看的，与插件索引名称无关。插件索引名称（插件模块名称）仅用于 NoneBot 插件系统内部索引。\"]},\"111\":{\"h\":\"获取插件信息\",\"t\":[\"NoneBot 提供了多种获取插件对象的方法，例如获取当前所有已导入的插件：\",\"import nonebot plugins: set[Plugin] = nonebot.get_loaded_plugins()\",\"也可以通过插件索引名称获取插件对象：\",\"import nonebot plugin: Plugin | None = nonebot.get_plugin(\\\"example\\\")\",\"或者通过模块路径获取插件对象：\",\"import nonebot plugin: Plugin | None = nonebot.get_plugin_by_module_name(\\\"awesome_bot.plugins.example\\\")\",\"如果需要获取所有当前声明的插件名称（可能还未加载），可以使用 get_available_plugin_names 函数：\",\"import nonebot plugin_names: set[str] = nonebot.get_available_plugin_names()\",\"插件对象 Plugin 中包含了多个属性：\",\"name：插件索引名称\",\"module：插件模块\",\"module_name：插件模块路径\",\"manager：插件管理器\",\"matcher：插件中定义的事件响应器\",\"parent_plugin：插件的父插件\",\"sub_plugins：插件的子插件集合\",\"metadata：插件元数据\",\"通过这些属性以及插件元数据，我们就可以收集所需要的插件信息了。\"]},\"112\":{\"h\":\"嵌套插件\",\"t\":[\"NoneBot 支持嵌套插件，即一个插件可以包含其他插件。通过这种方式，我们可以将一个大型插件拆分成多个功能子插件，使得插件更加清晰、易于维护。我们可以直接在插件中使用 NoneBot 加载插件的方法来加载子插件。\"]},\"113\":{\"h\":\"创建嵌套插件\",\"t\":[\"我们可以在使用 nb-cli 命令创建插件时，选择直接通过模板创建一个嵌套插件：\",\"$ nb plugin create [?] 插件名称: parent [?] 使用嵌套插件? (y/N) Y [?] 输出目录: awesome_bot/plugins\",\"或者使用 nb plugin create --sub-plugin 选项直接创建一个嵌套插件。\"]},\"114\":{\"h\":\"已有插件\",\"t\":[\"如果你已经有一个插件，想要在其中嵌套加载子插件，可以在插件的 __init__.py 中添加如下代码：\",\"import nonebot from pathlib import Path sub_plugins = nonebot.load_plugins( str(Path(__file__).parent.joinpath(\\\"plugins\\\").resolve()) )\",\"这样，parent 插件就会加载 parent/plugins 目录下的所有插件。NoneBot 会正确识别这些插件的父子关系，你可以在 parent 的插件信息中看到这些子插件的信息，也可以在子插件信息中看到它们的父插件信息。\"]},\"115\":{\"h\":\"跨插件访问\",\"t\":[\"NoneBot 插件化系统的设计使得插件之间可以功能独立、各司其职，我们可以更好地维护和扩展插件。但是，有时候我们可能需要在不同插件之间调用功能。NoneBot 生态中就有一类插件，它们专为其他插件提供功能支持，如：定时任务插件、数据存储插件等。这时候我们就需要在插件之间进行跨插件访问。\"]},\"116\":{\"h\":\"插件跟踪\",\"t\":[\"由于 NoneBot 插件系统通过 Import Hooks 的方式实现插件加载与跟踪管理，因此我们不能在 NoneBot 跟踪插件前进行模块 import，这会导致插件加载失败。即，我们不能在使用 NoneBot 提供的加载插件方法前，直接使用 import 语句导入插件。\",\"对于在项目目录下的插件，我们通常直接使用 load_from_toml 等方法一次性加载所有插件。由于这些插件已经被声明，即便插件导入顺序不同，NoneBot 也能正确跟踪插件。此时，我们不需要对跨插件访问进行特殊处理。但当我们使用了外部插件，如果没有事先声明或加载插件，NoneBot 并不会将其当作插件进行跟踪，可能会出现意料之外的错误出现。\",\"简单来说，我们必须在 import 外部插件之前，确保依赖的外部插件已经被声明或加载。\"]},\"117\":{\"h\":\"插件依赖声明\",\"t\":[\"NoneBot 提供了一种方法来确保我们依赖的插件已经被正确加载，即使用 require 函数。通过 require 函数，我们可以在当前插件中声明依赖的插件，NoneBot 会在加载当前插件时，检查依赖的插件是否已经被加载，如果没有，会尝试优先加载依赖的插件。\",\"假设我们有一个插件 a 依赖于插件 b，我们可以在插件 a 中使用 require 函数声明其依赖于插件 b：\",\"from nonebot import require require(\\\"b\\\") from b import some_function\",\"其中，require 函数的参数为插件索引名称或者外部插件的模块名称。在完成依赖声明后，我们可以在插件 a 中直接导入插件 b 所提供的功能。\"]},\"118\":{\"h\":\"添加路由\",\"t\":[\"在驱动器一节中，我们了解了驱动器的两种类型。既然驱动器可以作为服务端运行，那么我们就可以向驱动器添加路由规则，从而实现自定义的 API 接口等功能。在添加路由规则时，我们需要注意驱动器的类型，详情可以参考选择驱动器。\",\"NoneBot 中，我们可以通过两种途径向 ASGI 驱动器添加路由规则：\",\"通过 NoneBot 的兼容层建立路由规则。\",\"直接向 ASGI 应用添加路由规则。\",\"这两种途径各有优劣，前者可以在各种服务端型驱动器下运行，但并不能直接使用 ASGI 应用框架提供的特性与功能；后者直接使用 ASGI 应用，更自由、功能完整，但只能在特定类型驱动器下运行。\",\"在向驱动器添加路由规则时，我们需要注意驱动器是否为服务端类型，我们可以通过以下方式判断：\",\"from nonebot import get_driver from nonebot.drivers import ASGIMixin # highlight-next-line can_use = isinstance(get_driver(), ASGIMixin)\"]},\"119\":{\"h\":\"通过兼容层添加路由\",\"t\":[\"NoneBot 兼容层定义了两个数据类 HTTPServerSetup 和 WebSocketServerSetup，分别用于定义 HTTP 服务端和 WebSocket 服务端的路由规则。\"]},\"120\":{\"h\":\"HTTP 路由\",\"t\":[\"HTTPServerSetup 具有四个属性：\",\"path：路由路径，不支持特殊占位表达式。类型为 URL。\",\"method：请求方法。类型为 str。\",\"name：路由名称，不可重复。类型为 str。\",\"handle_func：路由处理函数。类型为 Callable[[Request], Awaitable[Response]]。\",\"例如，我们添加一个 /hello 的路由，当请求方法为 GET 时，返回 200 OK 以及返回体信息：\",\"from nonebot import get_driver from nonebot.drivers import URL, Request, Response, ASGIMixin, HTTPServerSetup async def hello(request: Request) -> Response: return Response(200, content=\\\"Hello, world!\\\") if isinstance((driver := get_driver()), ASGIMixin): driver.setup_http_server( HTTPServerSetup( path=URL(\\\"/hello\\\"), method=\\\"GET\\\", name=\\\"hello\\\", handle_func=hello, ) )\",\"对于 Request 和 Response 的详细信息，可以参考 API 文档。\"]},\"121\":{\"h\":\"WebSocket 路由\",\"t\":[\"WebSocketServerSetup 具有三个属性：\",\"path：路由路径，不支持特殊占位表达式。类型为 URL。\",\"name：路由名称，不可重复。类型为 str。\",\"handle_func：路由处理函数。类型为 Callable[[WebSocket], Awaitable[Any]]。\",\"例如，我们添加一个 /ws 的路由，发送所有接收到的数据：\",\"from nonebot import get_driver from nonebot.drivers import URL, ASGIMixin, WebSocket, WebSocketServerSetup async def ws_handler(ws: WebSocket): await ws.accept() try: while True: data = await ws.receive() await ws.send(data) except WebSocketClosed as e: # handle closed ... finally: with contextlib.suppress(Exception): await websocket.close() # do some cleanup if isinstance((driver := get_driver()), ASGIMixin): driver.setup_websocket_server( WebSocketServerSetup( path=URL(\\\"/ws\\\"), name=\\\"ws\\\", handle_func=ws_handler, ) )\",\"对于 WebSocket 的详细信息，可以参考 API 文档。\"]},\"122\":{\"h\":\"使用 ASGI 应用添加路由\"},\"123\":{\"h\":\"获取 ASGI 应用\",\"t\":[\"NoneBot 服务端类型的驱动器具有两个属性 server_app 和 asgi，分别对应驱动框架应用和 ASGI 应用。通常情况下，这两个应用是同一个对象。我们可以通过 get_app() 方法快速获取：\",\"import nonebot app = nonebot.get_app() asgi = nonebot.get_asgi()\"]},\"124\":{\"h\":\"添加路由规则\",\"t\":[\"在获取到了 ASGI 应用后，我们就可以直接使用 ASGI 应用框架提供的功能来添加路由规则了。这里我们以 FastAPI 为例，演示如何添加路由规则。\",\"在下面的代码中，我们添加了一个 GET 类型的 /api 路由，具体方法参考 FastAPI 文档。\",\"import nonebot from fastapi import FastAPI app: FastAPI = nonebot.get_app() @app.get(\\\"/api\\\") async def custom_api(): return {\\\"message\\\": \\\"Hello, world!\\\"}\"]},\"125\":{\"h\":\"钩子函数\",\"t\":[\"钩子编程（hooking），也称作“挂钩”，是计算机程序设计术语，指通过拦截软件模块间的函数调用、消息传递、事件传递来修改或扩展操作系统、应用程序或其他软件组件的行为的各种技术。处理被拦截的函数调用、事件、消息的代码，被称为钩子（hook）。\",\"在 NoneBot 中有一系列预定义的钩子函数，可以分为两类：全局钩子函数和事件处理钩子函数，这些钩子函数可以用装饰器的形式来使用。\"]},\"126\":{\"h\":\"全局钩子函数\",\"t\":[\"全局钩子函数是指 NoneBot 针对其本身运行过程的钩子函数。\",\"这些钩子函数是由驱动器来运行的，故需要先获得全局驱动器。\"]},\"127\":{\"h\":\"启动准备\",\"t\":[\"这个钩子函数会在 NoneBot 启动时运行。很多时候，我们并不希望在模块被导入时就执行一些耗时操作，如：连接数据库，这时候我们可以在这个钩子函数中进行这些操作。\",\"from nonebot import get_driver driver = get_driver() @driver.on_startup async def do_something(): pass\"]},\"128\":{\"h\":\"终止处理\",\"t\":[\"这个钩子函数会在 NoneBot 终止时运行。我们可以在这个钩子函数中进行一些清理工作，如：关闭数据库连接。\",\"from nonebot import get_driver driver = get_driver() @driver.on_shutdown async def do_something(): pass\"]},\"129\":{\"h\":\"Bot 连接处理\",\"t\":[\"这个钩子函数会在任何协议适配器连接 Bot 对象至 NoneBot 时运行。支持依赖注入，可以直接注入 Bot 对象。\",\"from nonebot import get_driver driver = get_driver() @driver.on_bot_connect async def do_something(bot: Bot): pass\"]},\"130\":{\"h\":\"Bot 断开处理\",\"t\":[\"这个钩子函数会在 Bot 断开与 NoneBot 的连接时运行。支持依赖注入，可以直接注入 Bot 对象。\",\"from nonebot import get_driver driver = get_driver() @driver.on_bot_disconnect async def do_something(bot: Bot): pass\"]},\"131\":{\"h\":\"事件处理钩子函数\",\"t\":[\"这些钩子函数指的是影响 NoneBot 进行事件处理的函数, 这些函数可以跟普通的事件处理函数一样接受相应的参数。\"]},\"132\":{\"h\":\"事件预处理\",\"t\":[\"这个钩子函数会在 NoneBot 接收到新的事件时运行。支持依赖注入，可以注入 Bot 对象、事件、会话状态。在这个钩子函数内抛出 nonebot.exception.IgnoredException 会使 NoneBot 忽略该事件。\",\"from nonebot.exception import IgnoredException from nonebot.message import event_preprocessor @event_preprocessor async def do_something(event: Event): if not event.is_tome(): raise IgnoredException(\\\"some reason\\\")\"]},\"133\":{\"h\":\"事件后处理\",\"t\":[\"这个钩子函数会在 NoneBot 处理事件完成后运行。支持依赖注入，可以注入 Bot 对象、事件、会话状态。\",\"from nonebot.message import event_postprocessor @event_postprocessor async def do_something(event: Event): pass\"]},\"134\":{\"h\":\"运行预处理\",\"t\":[\"这个钩子函数会在 NoneBot 运行事件响应器前运行。支持依赖注入，可以注入 Bot 对象、事件、事件响应器、会话状态。在这个钩子函数内抛出 nonebot.exception.IgnoredException 也会使 NoneBot 忽略本次运行。\",\"from nonebot.message import run_preprocessor from nonebot.exception import IgnoredException @run_preprocessor async def do_something(event: Event, matcher: Matcher): if not event.is_tome(): raise IgnoredException(\\\"some reason\\\")\"]},\"135\":{\"h\":\"运行后处理\",\"t\":[\"这个钩子函数会在 NoneBot 运行事件响应器后运行。支持依赖注入，可以注入 Bot 对象、事件、事件响应器、会话状态、运行中产生的异常。\",\"from nonebot.message import run_postprocessor @run_postprocessor async def do_something(event: Event, matcher: Matcher, exception: Optional[Exception]): pass\"]},\"136\":{\"h\":\"平台接口调用钩子\",\"t\":[\"这个钩子函数会在 Bot 对象调用平台接口时运行。在这个钩子函数中，我们可以通过引起 MockApiException 异常来阻止 Bot 对象调用平台接口并返回指定的结果。\",\"from nonebot.adapters import Bot from nonebot.exception import MockApiException @Bot.on_calling_api async def handle_api_call(bot: Bot, api: str, data: Dict[str, Any]): if api == \\\"send_msg\\\": raise MockApiException(result={\\\"message_id\\\": 123})\"]},\"137\":{\"h\":\"平台接口调用后钩子\",\"t\":[\"这个钩子函数会在 Bot 对象调用平台接口后运行。在这个钩子函数中，我们可以通过引起 MockApiException 异常来忽略平台接口返回的结果并返回指定的结果。\",\"from nonebot.adapters import Bot from nonebot.exception import MockApiException @Bot.on_called_api async def handle_api_result( bot: Bot, exception: Optional[Exception], api: str, data: Dict[str, Any], result: Any ): if not exception and api == \\\"send_msg\\\": raise MockApiException(result={**result, \\\"message_id\\\": 123})\"]},\"138\":{\"h\":\"会话更新\",\"t\":[\"在 NoneBot 中，在某个事件响应器对事件响应后，即是进入了会话状态，会话状态会持续到整个事件响应流程结束。会话过程中，机器人可以与用户进行多次交互。每次需要等待用户事件时，NoneBot 将会复制一个新的临时事件响应器，并更新该事件响应器使其响应当前会话主体的消息，这个过程称为会话更新。\",\"会话更新分为两部分：更新事件响应器类型和更新事件触发权限。\"]},\"139\":{\"h\":\"更新事件响应器类型\",\"t\":[\"通常情况下，与机器人用户进行的会话都是通过消息事件进行的，因此会话更新后的默认响应事件类型为 message。如果希望接收一个特定类型的消息，比如 notice 等，我们需要自定义响应事件类型更新函数。响应事件类型更新函数是一个 Dependent，可以使用依赖注入。\",\"foo = on_message() @foo.type_updater async def _() -> str: return \\\"notice\\\"\",\"在注册了上述响应事件类型更新函数后，当我们需要等待用户事件时，将只会响应 notice 类型的事件。如果希望在会话过程中的不同阶段响应不同类型的事件，我们就需要使用更复杂的逻辑来更新响应事件类型（如：根据会话状态），这里将不再展示。\"]},\"140\":{\"h\":\"更新事件触发权限\",\"t\":[\"会话通常是由机器人与用户进行的一对一交互，因此会话更新后的默认触发权限为当前事件的会话 ID。这个会话 ID 由协议适配器生成，通常由用户 ID 和群 ID 等组成。如果希望实现更复杂的会话功能（如：多用户同时参与的会话），我们需要自定义触发权限更新函数。触发权限更新函数是一个 Dependent，可以使用依赖注入。\",\"from nonebot.permission import User foo = on_message() @foo.permission_updater async def _(event: Event, matcher: Matcher) -> Permission: return Permission(User.from_event(event, perm=matcher.permission))\",\"上述权限更新函数是默认的权限更新函数，它将会话的触发权限更新为当前事件的会话 ID。如果我们希望响应多个用户的消息，我们可以如下修改：\",\"from nonebot.permission import USER foo = on_message() @foo.permission_updater async def _(matcher: Matcher) -> Permission: return USER(\\\"session1\\\", \\\"session2\\\", perm=matcher.permission)\",\"请注意，此处为全大写字母的 USER 权限，它可以匹配多个会话 ID。通过这种方式，我们可以实现多用户同时参与的会话。\",\"我们已经了解了如何控制会话的更新，相信你已经能够实现更复杂的会话功能了，例如多人小游戏等等。欢迎将你的作品分享到插件商店。\"]},\"141\":{\"h\":\"nonebot.compat\",\"t\":[\"本模块为 Pydantic 版本兼容层模块\",\"为兼容 Pydantic V1 与 V2 版本，定义了一系列兼容函数与类供使用。\"]},\"142\":{\"h\":\"\",\"t\":[\"类型: untyped\",\"说明: Alias of Ellipsis for compatibility with pydantic v1\"]},\"143\":{\"h\":\"\",\"t\":[\"说明: Pydantic Undefined object\"]},\"144\":{\"h\":\"\",\"t\":[\"说明: Pydantic Undefined type\"]},\"145\":{\"h\":\"\",\"t\":[\"类型: untyped\",\"说明: Default config for validations\"]},\"146\":{\"h\":\"\",\"t\":[\"说明: FieldInfo class with extra property for compatibility with pydantic v1\",\"参数\",\"default (Any)\",\"**kwargs (Any)\"]},\"147\":{\"h\":\"\",\"t\":[\"类型: dict[str, Any]\",\"说明\",\"Extra data that is not part of the standard pydantic fields.\",\"For compatibility with pydantic v1.\"]},\"148\":{\"h\":\"\",\"t\":[\"说明: ModelField class for compatibility with pydantic v1\",\"参数\",\"auto\"]},\"149\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明: The name of the field.\"]},\"150\":{\"h\":\"\",\"t\":[\"类型: Any\",\"说明: The annotation of the field.\"]},\"151\":{\"h\":\"\",\"t\":[\"类型: FieldInfo\",\"说明: The FieldInfo of the field.\"]},\"152\":{\"h\":\"\",\"t\":[\"说明: Construct a ModelField from given infos.\",\"参数\",\"name (str)\",\"annotation (Any)\",\"field_info (FieldInfo | None)\",\"返回\",\"Self\"]},\"153\":{\"h\":\"\",\"t\":[\"说明: Get the default value of the field.\",\"参数\",\"empty\",\"返回\",\"Any\"]},\"154\":{\"h\":\"\",\"t\":[\"说明: Validate the value pass to the field.\",\"参数\",\"value (Any)\",\"返回\",\"Any\"]},\"155\":{\"h\":\"\",\"t\":[\"说明: Get FieldInfo init kwargs from a FieldInfo instance.\",\"参数\",\"field_info (BaseFieldInfo)\",\"返回\",\"dict[str, Any]\"]},\"156\":{\"h\":\"\",\"t\":[\"说明: Get field list of a model.\",\"参数\",\"model (type[BaseModel])\",\"返回\",\"list[ModelField]\"]},\"157\":{\"h\":\"\",\"t\":[\"说明: Get config of a model.\",\"参数\",\"model (type[BaseModel])\",\"返回\",\"Any\"]},\"158\":{\"h\":\"\",\"t\":[\"参数\",\"model (BaseModel)\",\"include (set[str] | None)\",\"exclude (set[str] | None)\",\"by_alias (bool)\",\"exclude_unset (bool)\",\"exclude_defaults (bool)\",\"exclude_none (bool)\",\"返回\",\"dict[str, Any]\"]},\"159\":{\"h\":\"\",\"t\":[\"说明: Validate data with given type.\",\"参数\",\"type_ (type[T])\",\"data (Any)\",\"返回\",\"T\"]},\"160\":{\"h\":\"\",\"t\":[\"说明: Validate JSON with given type.\",\"参数\",\"type_ (type[T])\",\"data (str | bytes)\",\"返回\",\"T\"]},\"161\":{\"h\":\"\",\"t\":[\"说明: Use pydantic v1 like validator generator in pydantic v2\",\"参数\",\"class_ (type[CVC])\",\"返回\",\"type[CVC]\"]},\"162\":{\"h\":\"nonebot.config\",\"t\":[\"本模块定义了 NoneBot 本身运行所需的配置项。\",\"NoneBot 使用 pydantic 以及python-dotenv 来读取配置。\",\"配置项需符合特殊格式或 json 序列化格式 详情见 pydantic Field Type 文档。\"]},\"163\":{\"h\":\"\",\"t\":[\"说明\",\"运行环境配置。大小写不敏感。\",\"将会从 环境变量 > dotenv 配置文件 的优先级读取环境信息。\",\"参数\",\"_env_file (DOTENV_TYPE | None)\",\"_env_file_encoding (str | None)\",\"_env_nested_delimiter (str | None)\",\"**values (Any)\"]},\"164\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明\",\"当前环境名。\",\"NoneBot 将从 .env.{environment} 文件中加载配置。\"]},\"165\":{\"h\":\"\",\"t\":[\"说明\",\"NoneBot 主要配置。大小写不敏感。\",\"除了 NoneBot 的配置项外，还可以自行添加配置项到 .env.{environment} 文件中。 这些配置将会在 json 反序列化后一起带入 Config 类中。\",\"配置方法参考: 配置\",\"参数\",\"_env_file (DOTENV_TYPE | None)\",\"_env_file_encoding (str | None)\",\"_env_nested_delimiter (str | None)\",\"**values (Any)\"]},\"166\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明\",\"NoneBot 运行所使用的 Driver 。继承自 Driver 。\",\"配置格式为 <module>[:<Driver>][+<module>[:<Mixin>]]*。\",\"~ 为 nonebot.drivers. 的缩写。\",\"配置方法参考: 配置驱动器\"]},\"167\":{\"h\":\"\",\"t\":[\"类型: IPvAnyAddress\",\"说明: NoneBot ReverseDriver 服务端监听的 IP/主机名。\"]},\"168\":{\"h\":\"\",\"t\":[\"类型: int\",\"说明: NoneBot ReverseDriver 服务端监听的端口。\"]},\"169\":{\"h\":\"\",\"t\":[\"类型: int | str\",\"说明\",\"NoneBot 日志输出等级，可以为 int 类型等级或等级名称。\",\"参考 记录日志，loguru 日志等级。\",\"提示\",\"日志等级名称应为大写，如 INFO。\",\"用法\",\"LOG_LEVEL=25 LOG_LEVEL=INFO\"]},\"170\":{\"h\":\"\",\"t\":[\"类型: float | None\",\"说明: API 请求超时时间，单位: 秒。\"]},\"171\":{\"h\":\"\",\"t\":[\"类型: set[str]\",\"说明: 机器人超级用户。\",\"用法\",\"SUPERUSERS=[\\\"12345789\\\"]\"]},\"172\":{\"h\":\"\",\"t\":[\"类型: set[str]\",\"说明: 机器人昵称。\"]},\"173\":{\"h\":\"\",\"t\":[\"类型: set[str]\",\"说明\",\"命令的起始标记，用于判断一条消息是不是命令。\",\"参考命令响应规则。\",\"用法\",\"COMMAND_START=[\\\"/\\\", \\\"\\\"]\"]},\"174\":{\"h\":\"\",\"t\":[\"类型: set[str]\",\"说明\",\"命令的分隔标记，用于将文本形式的命令切分为元组（实际的命令名）。\",\"参考命令响应规则。\",\"用法\",\"COMMAND_SEP=[\\\".\\\"]\"]},\"175\":{\"h\":\"\",\"t\":[\"类型: timedelta\",\"说明: 等待用户回复的超时时间。\",\"用法\",\"SESSION_EXPIRE_TIMEOUT=[-][DD]D[,][HH:MM:]SS[.ffffff] SESSION_EXPIRE_TIMEOUT=[±]P[DD]DT[HH]H[MM]M[SS]S # ISO 8601\"]},\"176\":{\"h\":\"nonebot.consts\",\"t\":[\"本模块包含了 NoneBot 事件处理过程中使用到的常量。\"]},\"177\":{\"h\":\"\",\"t\":[\"类型: Literal['_receive_{id}']\",\"说明:receive 存储 key\"]},\"178\":{\"h\":\"\",\"t\":[\"类型: Literal['_last_receive']\",\"说明:last_receive 存储 key\"]},\"179\":{\"h\":\"\",\"t\":[\"类型: Literal['{key}']\",\"说明:arg 存储 key\"]},\"180\":{\"h\":\"\",\"t\":[\"类型: Literal['_current_target']\",\"说明: 当前 reject 目标存储 key\"]},\"181\":{\"h\":\"\",\"t\":[\"类型: Literal['_next_target']\",\"说明: 下一个 reject 目标存储 key\"]},\"182\":{\"h\":\"\",\"t\":[\"类型: Literal['_prefix']\",\"说明: 命令前缀存储 key\"]},\"183\":{\"h\":\"\",\"t\":[\"类型: Literal['command']\",\"说明: 命令元组存储 key\"]},\"184\":{\"h\":\"\",\"t\":[\"类型: Literal['raw_command']\",\"说明: 命令文本存储 key\"]},\"185\":{\"h\":\"\",\"t\":[\"类型: Literal['command_arg']\",\"说明: 命令参数存储 key\"]},\"186\":{\"h\":\"\",\"t\":[\"类型: Literal['command_start']\",\"说明: 命令开头存储 key\"]},\"187\":{\"h\":\"\",\"t\":[\"类型: Literal['command_whitespace']\",\"说明: 命令与参数间空白符存储 key\"]},\"188\":{\"h\":\"\",\"t\":[\"类型: Literal['_args']\",\"说明: shell 命令 parse 后参数字典存储 key\"]},\"189\":{\"h\":\"\",\"t\":[\"类型: Literal['_argv']\",\"说明: shell 命令原始参数列表存储 key\"]},\"190\":{\"h\":\"\",\"t\":[\"类型: Literal['_matched']\",\"说明: 正则匹配结果存储 key\"]},\"191\":{\"h\":\"\",\"t\":[\"类型: Literal['_startswith']\",\"说明: 响应触发前缀 key\"]},\"192\":{\"h\":\"\",\"t\":[\"类型: Literal['_endswith']\",\"说明: 响应触发后缀 key\"]},\"193\":{\"h\":\"\",\"t\":[\"类型: Literal['_fullmatch']\",\"说明: 响应触发完整消息 key\"]},\"194\":{\"h\":\"\",\"t\":[\"类型: Literal['_keyword']\",\"说明: 响应触发关键字 key\"]},\"195\":{\"h\":\"nonebot.exception\",\"t\":[\"本模块包含了所有 NoneBot 运行时可能会抛出的异常。\",\"这些异常并非所有需要用户处理，在 NoneBot 内部运行时被捕获，并进行对应操作。\",\"NoneBotException ├── ParserExit ├── ProcessException | ├── IgnoredException | ├── SkippedException | | └── TypeMisMatch | ├── MockApiException | └── StopPropagation ├── MatcherException | ├── PausedException | ├── RejectedException | └── FinishedException ├── AdapterException | ├── NoLogException | ├── ApiNotAvailable | ├── NetworkError | └── ActionFailed └── DriverException └── WebSocketClosed\"]},\"196\":{\"h\":\"\",\"t\":[\"说明: 所有 NoneBot 发生的异常基类。\",\"参数\",\"auto\"]},\"197\":{\"h\":\"\",\"t\":[\"说明: 处理消息失败时返回的异常。\",\"参数\",\"auto\"]},\"198\":{\"h\":\"\",\"t\":[\"说明: 事件处理过程中发生的异常基类。\",\"参数\",\"auto\"]},\"199\":{\"h\":\"\",\"t\":[\"说明: 指示 NoneBot 应该忽略该事件。可由 PreProcessor 抛出。\",\"参数\",\"reason: 忽略事件的原因\"]},\"200\":{\"h\":\"\",\"t\":[\"说明\",\"指示 NoneBot 立即结束当前 Dependent 的运行。\",\"例如，可以在 Handler 中通过 Matcher.skip 抛出。\",\"参数\",\"auto\",\"用法\",\"def always_skip(): Matcher.skip() @matcher.handle() async def handler(dependency = Depends(always_skip)): # never run\"]},\"201\":{\"h\":\"\",\"t\":[\"说明: 当前 Handler 的参数类型不匹配。\",\"参数\",\"auto\"]},\"202\":{\"h\":\"\",\"t\":[\"说明: 指示 NoneBot 阻止本次 API 调用或修改本次调用返回值，并返回自定义内容。 可由 api hook 抛出。\",\"参数\",\"result: 返回的内容\"]},\"203\":{\"h\":\"\",\"t\":[\"说明\",\"指示 NoneBot 终止事件向下层传播。\",\"在 Matcher.block 为 True 或使用 Matcher.stop_propagation 方法时抛出。\",\"参数\",\"auto\",\"用法\",\"matcher = on_notice(block=True) # 或者 @matcher.handle() async def handler(matcher: Matcher): matcher.stop_propagation()\"]},\"204\":{\"h\":\"\",\"t\":[\"说明: 所有 Matcher 发生的异常基类。\",\"参数\",\"auto\"]},\"205\":{\"h\":\"\",\"t\":[\"说明\",\"指示 NoneBot 结束当前 Handler 并等待下一条消息后继续下一个 Handler。 可用于用户输入新信息。\",\"可以在 Handler 中通过 Matcher.pause 抛出。\",\"参数\",\"auto\",\"用法\",\"@matcher.handle() async def handler(): await matcher.pause(\\\"some message\\\")\"]},\"206\":{\"h\":\"\",\"t\":[\"说明\",\"指示 NoneBot 结束当前 Handler 并等待下一条消息后重新运行当前 Handler。 可用于用户重新输入。\",\"可以在 Handler 中通过 Matcher.reject 抛出。\",\"参数\",\"auto\",\"用法\",\"@matcher.handle() async def handler(): await matcher.reject(\\\"some message\\\")\"]},\"207\":{\"h\":\"\",\"t\":[\"说明\",\"指示 NoneBot 结束当前 Handler 且后续 Handler 不再被运行。可用于结束用户会话。\",\"可以在 Handler 中通过 Matcher.finish 抛出。\",\"参数\",\"auto\",\"用法\",\"@matcher.handle() async def handler(): await matcher.finish(\\\"some message\\\")\"]},\"208\":{\"h\":\"\",\"t\":[\"说明: 代表 Adapter 抛出的异常，所有的 Adapter 都要在内部继承自这个 Exception。\",\"参数\",\"adapter_name: 标识 adapter\"]},\"209\":{\"h\":\"\",\"t\":[\"说明\",\"指示 NoneBot 对当前 Event 进行处理但不显示 Log 信息。\",\"可在 Event.get_log_string 时抛出\",\"参数\",\"auto\"]},\"210\":{\"h\":\"\",\"t\":[\"说明: 在 API 连接不可用时抛出。\",\"参数\",\"auto\"]},\"211\":{\"h\":\"\",\"t\":[\"说明: 在网络出现问题时抛出， 如: API 请求地址不正确, API 请求无返回或返回状态非正常等。\",\"参数\",\"auto\"]},\"212\":{\"h\":\"\",\"t\":[\"说明: API 请求成功返回数据，但 API 操作失败。\",\"参数\",\"auto\"]},\"213\":{\"h\":\"\",\"t\":[\"说明:Driver 抛出的异常基类。\",\"参数\",\"auto\"]},\"214\":{\"h\":\"\",\"t\":[\"说明: WebSocket 连接已关闭。\",\"参数\",\"auto\"]},\"215\":{\"h\":\"nonebot\",\"t\":[\"本模块主要定义了 NoneBot 启动所需函数，供 bot 入口文件调用。\"]},\"216\":{\"h\":\"快捷导入\",\"t\":[\"为方便使用，本模块从子模块导入了部分内容，以下内容可以直接通过本模块导入:\",\"on => on\",\"on_metaevent => on_metaevent\",\"on_message => on_message\",\"on_notice => on_notice\",\"on_request => on_request\",\"on_startswith => on_startswith\",\"on_endswith => on_endswith\",\"on_fullmatch => on_fullmatch\",\"on_keyword => on_keyword\",\"on_command => on_command\",\"on_shell_command => on_shell_command\",\"on_regex => on_regex\",\"on_type => on_type\",\"CommandGroup => CommandGroup\",\"Matchergroup => MatcherGroup\",\"load_plugin => load_plugin\",\"load_plugins => load_plugins\",\"load_all_plugins => load_all_plugins\",\"load_from_json => load_from_json\",\"load_from_toml => load_from_toml\",\"load_builtin_plugin =>load_builtin_plugin\",\"load_builtin_plugins =>load_builtin_plugins\",\"get_plugin => get_plugin\",\"get_plugin_by_module_name =>get_plugin_by_module_name\",\"get_loaded_plugins =>get_loaded_plugins\",\"get_available_plugin_names =>get_available_plugin_names\",\"get_plugin_config => get_plugin_config\",\"require => require\"]},\"217\":{\"h\":\"\",\"t\":[\"说明\",\"获取全局 Driver 实例。\",\"可用于在计划任务的回调等情形中获取当前 Driver 实例。\",\"参数\",\"empty\",\"返回\",\"Driver: 全局 Driver 对象\",\"异常\",\"ValueError: 全局 Driver 对象尚未初始化 (nonebot.init 尚未调用)\",\"用法\",\"driver = nonebot.get_driver()\"]},\"218\":{\"h\":\"\",\"t\":[\"说明: 获取已注册的 Adapter 实例。\",\"重载\",\"1.(name) -> Adapter\",\"参数\",\"name (str): 适配器名称\",\"返回\",\"Adapter: 指定名称的 Adapter 对象\",\"2.(name) -> A\",\"参数\",\"name (type[A]): 适配器类型\",\"返回\",\"A: 指定类型的 Adapter 对象\",\"异常\",\"ValueError: 指定的 Adapter 未注册\",\"ValueError: 全局 Driver 对象尚未初始化 (nonebot.init 尚未调用)\",\"用法\",\"from nonebot.adapters.console import Adapter adapter = nonebot.get_adapter(Adapter)\"]},\"219\":{\"h\":\"\",\"t\":[\"说明: 获取所有已注册的 Adapter 实例。\",\"参数\",\"empty\",\"返回\",\"dict[str, Adapter]: 所有 Adapter 实例字典\",\"异常\",\"ValueError: 全局 Driver 对象尚未初始化 (nonebot.init 尚未调用)\",\"用法\",\"adapters = nonebot.get_adapters()\"]},\"220\":{\"h\":\"\",\"t\":[\"说明: 获取全局 ASGIMixin 对应的 Server App 对象。\",\"参数\",\"empty\",\"返回\",\"Any: Server App 对象\",\"异常\",\"AssertionError: 全局 Driver 对象不是 ASGIMixin 类型\",\"ValueError: 全局 Driver 对象尚未初始化 (nonebot.init 尚未调用)\",\"用法\",\"app = nonebot.get_app()\"]},\"221\":{\"h\":\"\",\"t\":[\"说明: 获取全局 ASGIMixin 对应的 ASGI 对象。\",\"参数\",\"empty\",\"返回\",\"Any: ASGI 对象\",\"异常\",\"AssertionError: 全局 Driver 对象不是 ASGIMixin 类型\",\"ValueError: 全局 Driver 对象尚未初始化 (nonebot.init 尚未调用)\",\"用法\",\"asgi = nonebot.get_asgi()\"]},\"222\":{\"h\":\"\",\"t\":[\"说明\",\"获取一个连接到 NoneBot 的 Bot 对象。\",\"当提供 self_id 时，此函数是 get_bots()[self_id] 的简写； 当不提供时，返回一个 Bot。\",\"参数\",\"self_id (str | None): 用来识别 Bot 的 Bot.self_id 属性\",\"返回\",\"Bot: Bot 对象\",\"异常\",\"KeyError: 对应 self_id 的 Bot 不存在\",\"ValueError: 没有传入 self_id 且没有 Bot 可用\",\"ValueError: 全局 Driver 对象尚未初始化 (nonebot.init 尚未调用)\",\"用法\",\"assert nonebot.get_bot(\\\"12345\\\") == nonebot.get_bots()[\\\"12345\\\"] another_unspecified_bot = nonebot.get_bot()\"]},\"223\":{\"h\":\"\",\"t\":[\"说明: 获取所有连接到 NoneBot 的 Bot 对象。\",\"参数\",\"empty\",\"返回\",\"dict[str, Bot]: 一个以 Bot.self_id 为键\",\"Bot 对象为值的字典\",\"异常\",\"ValueError: 全局 Driver 对象尚未初始化 (nonebot.init 尚未调用)\",\"用法\",\"bots = nonebot.get_bots()\"]},\"224\":{\"h\":\"\",\"t\":[\"说明\",\"初始化 NoneBot 以及 全局 Driver 对象。\",\"NoneBot 将会从 .env 文件中读取环境信息，并使用相应的 env 文件配置。\",\"也可以传入自定义的 _env_file 来指定 NoneBot 从该文件读取配置。\",\"参数\",\"_env_file (DOTENV_TYPE | None): 配置文件名，默认从 .env.{env_name} 中读取配置\",\"**kwargs (Any): 任意变量，将会存储到 Driver.config 对象里\",\"返回\",\"None\",\"用法\",\"nonebot.init(database=Database(...))\"]},\"225\":{\"h\":\"\",\"t\":[\"说明: 启动 NoneBot，即运行全局 Driver 对象。\",\"参数\",\"*args (Any): 传入 Driver.run 的位置参数\",\"**kwargs (Any): 传入 Driver.run 的命名参数\",\"返回\",\"None\",\"用法\",\"nonebot.run(host=\\\"127.0.0.1\\\", port=8080)\"]},\"226\":{\"h\":\"nonebot.log\",\"t\":[\"本模块定义了 NoneBot 的日志记录 Logger。\",\"NoneBot 使用 loguru 来记录日志信息。\",\"自定义 logger 请参考 自定义日志 以及 loguru 文档。\"]},\"227\":{\"h\":\"\",\"t\":[\"类型: Logger\",\"说明\",\"NoneBot 日志记录器对象。\",\"默认信息:\",\"格式: [%(asctime)s %(name)s] %(levelname)s: %(message)s\",\"等级: INFO ，根据 config.log_level 配置改变\",\"输出: 输出至 stdout\",\"用法\",\"from nonebot.log import logger\"]},\"228\":{\"h\":\"\",\"t\":[\"说明: logging 与 loguru 之间的桥梁，将 logging 的日志转发到 loguru。\",\"参数\",\"auto\"]},\"229\":{\"h\":\"\",\"t\":[\"参数\",\"record (logging.LogRecord)\",\"返回\",\"untyped\"]},\"230\":{\"h\":\"\",\"t\":[\"说明: 默认的日志过滤器，根据 config.log_level 配置改变日志等级。\",\"参数\",\"record (Record)\",\"返回\",\"untyped\"]},\"231\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明: 默认日志格式\"]},\"232\":{\"h\":\"nonebot.matcher\",\"t\":[\"本模块实现事件响应器的创建与运行，并提供一些快捷方法来帮助用户更好的与机器人进行对话。\"]},\"233\":{\"h\":\"\",\"t\":[\"说明: 事件响应器类\",\"参数\",\"empty\"]},\"234\":{\"h\":\"\",\"t\":[\"类型: ClassVar[str]\",\"说明: 事件响应器类型\"]},\"235\":{\"h\":\"\",\"t\":[\"类型: ClassVar[Rule]\",\"说明: 事件响应器匹配规则\"]},\"236\":{\"h\":\"\",\"t\":[\"类型: ClassVar[Permission]\",\"说明: 事件响应器触发权限\"]},\"237\":{\"h\":\"\",\"t\":[\"类型: ClassVar[list[Dependent[Any]]]\",\"说明: 事件响应器拥有的事件处理函数列表\"]},\"238\":{\"h\":\"\",\"t\":[\"类型: ClassVar[int]\",\"说明: 事件响应器优先级\"]},\"239\":{\"h\":\"\",\"t\":[\"类型: bool\",\"说明: 事件响应器是否阻止事件传播\"]},\"240\":{\"h\":\"\",\"t\":[\"类型: ClassVar[bool]\",\"说明: 事件响应器是否为临时\"]},\"241\":{\"h\":\"\",\"t\":[\"类型: ClassVar[datetime | None]\",\"说明: 事件响应器过期时间点\"]},\"242\":{\"h\":\"\",\"t\":[\"说明: 创建一个新的事件响应器，并存储至 matchers <#matchers>_\",\"参数\",\"type_ (str): 事件响应器类型，与 event.get_type() 一致时触发，空字符串表示任意\",\"rule (Rule | None): 匹配规则\",\"permission (Permission | None): 权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器，即触发一次后删除\",\"priority (int): 响应优先级\",\"block (bool): 是否阻止事件向更低优先级的响应器传播\",\"plugin (Plugin | None): Deprecated. 事件响应器所在插件\",\"module (ModuleType | None): Deprecated. 事件响应器所在模块\",\"source (MatcherSource | None): 事件响应器源代码上下文信息\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"default_state (T_State | None): 默认状态 state\",\"default_type_updater (T_TypeUpdater | Dependent[str] | None): 默认事件类型更新函数\",\"default_permission_updater (T_PermissionUpdater | Dependent[Permission] | None): 默认会话权限更新函数\",\"返回\",\"type[Matcher]: 新的事件响应器类\"]},\"243\":{\"h\":\"\",\"t\":[\"说明: 销毁当前的事件响应器\",\"参数\",\"empty\",\"返回\",\"None\"]},\"244\":{\"h\":\"\",\"t\":[\"说明: 检查是否满足触发权限\",\"参数\",\"bot (Bot): Bot 对象\",\"event (Event): 上报事件\",\"stack (AsyncExitStack | None): 异步上下文栈\",\"dependency_cache (T_DependencyCache | None): 依赖缓存\",\"返回\",\"bool: 是否满足权限\"]},\"245\":{\"h\":\"\",\"t\":[\"说明: 检查是否满足匹配规则\",\"参数\",\"bot (Bot): Bot 对象\",\"event (Event): 上报事件\",\"state (T_State): 当前状态\",\"stack (AsyncExitStack | None): 异步上下文栈\",\"dependency_cache (T_DependencyCache | None): 依赖缓存\",\"返回\",\"bool: 是否满足匹配规则\"]},\"246\":{\"h\":\"\",\"t\":[\"说明: 装饰一个函数来更改当前事件响应器的默认响应事件类型更新函数\",\"参数\",\"func (T_TypeUpdater): 响应事件类型更新函数\",\"返回\",\"T_TypeUpdater\"]},\"247\":{\"h\":\"\",\"t\":[\"说明: 装饰一个函数来更改当前事件响应器的默认会话权限更新函数\",\"参数\",\"func (T_PermissionUpdater): 会话权限更新函数\",\"返回\",\"T_PermissionUpdater\"]},\"248\":{\"h\":\"\",\"t\":[\"参数\",\"handler (T_Handler)\",\"parameterless (Iterable[Any] | None)\",\"返回\"]},\"249\":{\"h\":\"\",\"t\":[\"说明: 装饰一个函数来向事件响应器直接添加一个处理函数\",\"参数\",\"parameterless (Iterable[Any] | None): 非参数类型依赖列表\",\"返回\",\"(T_Handler) -> T_Handler\"]},\"250\":{\"h\":\"\",\"t\":[\"说明: 装饰一个函数来指示 NoneBot 在接收用户新的一条消息后继续运行该函数\",\"参数\",\"id (str): 消息 ID\",\"parameterless (Iterable[Any] | None): 非参数类型依赖列表\",\"返回\",\"(T_Handler) -> T_Handler\"]},\"251\":{\"h\":\"\",\"t\":[\"说明\",\"装饰一个函数来指示 NoneBot 获取一个参数 key\",\"当要获取的 key 不存在时接收用户新的一条消息再运行该函数， 如果 key 已存在则直接继续运行\",\"参数\",\"key (str): 参数名\",\"prompt (str | Message | MessageSegment | MessageTemplate | None): 在参数不存在时向用户发送的消息\",\"parameterless (Iterable[Any] | None): 非参数类型依赖列表\",\"返回\",\"(T_Handler) -> T_Handler\"]},\"252\":{\"h\":\"\",\"t\":[\"说明: 发送一条消息给当前交互用户\",\"参数\",\"message (str | Message | MessageSegment | MessageTemplate): 消息内容\",\"**kwargs (Any): Bot.send 的参数， 请参考对应 adapter 的 bot 对象 api\",\"返回\",\"Any\"]},\"253\":{\"h\":\"\",\"t\":[\"说明: 发送一条消息给当前交互用户并结束当前事件响应器\",\"参数\",\"message (str | Message | MessageSegment | MessageTemplate | None): 消息内容\",\"**kwargs: Bot.send 的参数， 请参考对应 adapter 的 bot 对象 api\",\"返回\",\"NoReturn\"]},\"254\":{\"h\":\"\",\"t\":[\"说明: 发送一条消息给当前交互用户并暂停事件响应器，在接收用户新的一条消息后继续下一个处理函数\",\"参数\",\"prompt (str | Message | MessageSegment | MessageTemplate | None): 消息内容\",\"**kwargs: Bot.send 的参数， 请参考对应 adapter 的 bot 对象 api\",\"返回\",\"NoReturn\"]},\"255\":{\"h\":\"\",\"t\":[\"说明: 最近使用 got / receive 接收的消息不符合预期， 发送一条消息给当前交互用户并将当前事件处理流程中断在当前位置，在接收用户新的一个事件后从头开始执行当前处理函数\",\"参数\",\"prompt (str | Message | MessageSegment | MessageTemplate | None): 消息内容\",\"**kwargs: Bot.send 的参数， 请参考对应 adapter 的 bot 对象 api\",\"返回\",\"NoReturn\"]},\"256\":{\"h\":\"\",\"t\":[\"说明: 最近使用 got 接收的消息不符合预期， 发送一条消息给当前交互用户并将当前事件处理流程中断在当前位置，在接收用户新的一条消息后从头开始执行当前处理函数\",\"参数\",\"key (str): 参数名\",\"prompt (str | Message | MessageSegment | MessageTemplate | None): 消息内容\",\"**kwargs: Bot.send 的参数， 请参考对应 adapter 的 bot 对象 api\",\"返回\",\"NoReturn\"]},\"257\":{\"h\":\"\",\"t\":[\"说明: 最近使用 receive 接收的消息不符合预期， 发送一条消息给当前交互用户并将当前事件处理流程中断在当前位置，在接收用户新的一个事件后从头开始执行当前处理函数\",\"参数\",\"id (str): 消息 id\",\"prompt (str | Message | MessageSegment | MessageTemplate | None): 消息内容\",\"**kwargs: Bot.send 的参数， 请参考对应 adapter 的 bot 对象 api\",\"返回\",\"NoReturn\"]},\"258\":{\"h\":\"\",\"t\":[\"说明\",\"跳过当前事件处理函数，继续下一个处理函数\",\"通常在事件处理函数的依赖中使用。\",\"参数\",\"empty\",\"返回\",\"NoReturn\"]},\"259\":{\"h\":\"\",\"t\":[\"说明\",\"获取一个 receive 事件\",\"如果没有找到对应的事件，返回 default 值\",\"重载\",\"1.(id) -> Event | None\",\"参数\",\"id (str)\",\"返回\",\"Event | None\",\"2.(id, default) -> Event | T\",\"参数\",\"id (str)\",\"default (T)\",\"返回\",\"Event | T\"]},\"260\":{\"h\":\"\",\"t\":[\"说明: 设置一个 receive 事件\",\"参数\",\"id (str)\",\"event (Event)\",\"返回\",\"None\"]},\"261\":{\"h\":\"\",\"t\":[\"说明\",\"获取最近一次 receive 事件\",\"如果没有事件，返回 default 值\",\"重载\",\"1.() -> Event | None\",\"参数\",\"empty\",\"返回\",\"Event | None\",\"2.(default) -> Event | T\",\"参数\",\"default (T)\",\"返回\",\"Event | T\"]},\"262\":{\"h\":\"\",\"t\":[\"说明\",\"获取一个 got 消息\",\"如果没有找到对应的消息，返回 default 值\",\"重载\",\"1.(key) -> Message | None\",\"参数\",\"key (str)\",\"返回\",\"Message | None\",\"2.(key, default) -> Message | T\",\"参数\",\"key (str)\",\"default (T)\",\"返回\",\"Message | T\"]},\"263\":{\"h\":\"\",\"t\":[\"说明: 设置一个 got 消息\",\"参数\",\"key (str)\",\"message (Message)\",\"返回\",\"None\"]},\"264\":{\"h\":\"\",\"t\":[\"参数\",\"target (str)\",\"cache (bool)\",\"返回\",\"None\"]},\"265\":{\"h\":\"\",\"t\":[\"重载\",\"1.() -> str | None\",\"参数\",\"empty\",\"返回\",\"str | None\",\"2.(default) -> str | T\",\"参数\",\"default (T)\",\"返回\",\"str | T\"]},\"266\":{\"h\":\"\",\"t\":[\"说明: 阻止事件传播\",\"参数\",\"empty\",\"返回\",\"untyped\"]},\"267\":{\"h\":\"\",\"t\":[\"参数\",\"bot (Bot)\",\"event (Event)\",\"stack (AsyncExitStack | None)\",\"dependency_cache (T_DependencyCache | None)\",\"返回\",\"str\"]},\"268\":{\"h\":\"\",\"t\":[\"参数\",\"bot (Bot)\",\"event (Event)\",\"stack (AsyncExitStack | None)\",\"dependency_cache (T_DependencyCache | None)\",\"返回\",\"Permission\"]},\"269\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"untyped\"]},\"270\":{\"h\":\"\",\"t\":[\"参数\",\"bot (Bot)\",\"event (Event)\",\"返回\",\"untyped\"]},\"271\":{\"h\":\"\",\"t\":[\"参数\",\"bot (Bot)\",\"event (Event)\",\"state (T_State)\",\"stack (AsyncExitStack | None)\",\"dependency_cache (T_DependencyCache | None)\",\"返回\",\"untyped\"]},\"272\":{\"h\":\"\",\"t\":[\"参数\",\"bot (Bot)\",\"event (Event)\",\"state (T_State)\",\"stack (AsyncExitStack | None)\",\"dependency_cache (T_DependencyCache | None)\",\"返回\",\"untyped\"]},\"273\":{\"h\":\"\",\"t\":[\"类型: untyped\"]},\"274\":{\"h\":\"\",\"t\":[\"说明\",\"事件响应器管理器\",\"实现了常用字典操作，用于管理事件响应器。\",\"参数\",\"empty\"]},\"275\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"KeysView[int]\"]},\"276\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"ValuesView[list[type[Matcher]]]\"]},\"277\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"ItemsView[int, list[type[Matcher]]]\"]},\"278\":{\"h\":\"\",\"t\":[\"重载\",\"1.(key) -> list[type[Matcher]] | None\",\"参数\",\"key (int)\",\"返回\",\"list[type[Matcher]] | None\",\"2.(key, default) -> list[type[Matcher]] | T\",\"参数\",\"key (int)\",\"default (T)\",\"返回\",\"list[type[Matcher]] | T\"]},\"279\":{\"h\":\"\",\"t\":[\"参数\",\"key (int)\",\"返回\",\"list[type[Matcher]]\"]},\"280\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"tuple[int, list[type[Matcher]]]\"]},\"281\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"None\"]},\"282\":{\"h\":\"\",\"t\":[\"参数\",\"__m (MutableMapping[int, list[type[Matcher]]])\",\"返回\",\"None\"]},\"283\":{\"h\":\"\",\"t\":[\"参数\",\"key (int)\",\"default (list[type[Matcher]])\",\"返回\",\"list[type[Matcher]]\"]},\"284\":{\"h\":\"\",\"t\":[\"说明: 设置事件响应器存储器\",\"参数\",\"provider_class (type[MatcherProvider]): 事件响应器存储器类\",\"返回\",\"None\"]},\"285\":{\"h\":\"\",\"t\":[\"说明: 事件响应器存储器基类\",\"参数\",\"matchers (Mapping[int, list[type[Matcher]]]): 当前存储器中已有的事件响应器\"]},\"286\":{\"h\":\"\",\"t\":[\"类型: untyped\",\"说明: 默认存储器类型\"]},\"287\":{\"h\":\"nonebot.message\",\"t\":[\"本模块定义了事件处理主要流程。\",\"NoneBot 内部处理并按优先级分发事件给所有事件响应器，提供了多个插槽以进行事件的预处理等。\"]},\"288\":{\"h\":\"\",\"t\":[\"说明\",\"事件预处理。\",\"装饰一个函数，使它在每次接收到事件并分发给各响应器之前执行。\",\"参数\",\"func (T_EventPreProcessor)\",\"返回\",\"T_EventPreProcessor\"]},\"289\":{\"h\":\"\",\"t\":[\"说明\",\"事件后处理。\",\"装饰一个函数，使它在每次接收到事件并分发给各响应器之后执行。\",\"参数\",\"func (T_EventPostProcessor)\",\"返回\",\"T_EventPostProcessor\"]},\"290\":{\"h\":\"\",\"t\":[\"说明\",\"运行预处理。\",\"装饰一个函数，使它在每次事件响应器运行前执行。\",\"参数\",\"func (T_RunPreProcessor)\",\"返回\",\"T_RunPreProcessor\"]},\"291\":{\"h\":\"\",\"t\":[\"说明\",\"运行后处理。\",\"装饰一个函数，使它在每次事件响应器运行后执行。\",\"参数\",\"func (T_RunPostProcessor)\",\"返回\",\"T_RunPostProcessor\"]},\"292\":{\"h\":\"\",\"t\":[\"说明: 检查并运行事件响应器。\",\"参数\",\"Matcher (type[Matcher]): 事件响应器\",\"bot (Bot): Bot 对象\",\"event (Event): Event 对象\",\"state (T_State): 会话状态\",\"stack (AsyncExitStack | None): 异步上下文栈\",\"dependency_cache (T_DependencyCache | None): 依赖缓存\",\"返回\",\"None\"]},\"293\":{\"h\":\"\",\"t\":[\"说明: 处理一个事件。调用该函数以实现分发事件。\",\"参数\",\"bot (Bot): Bot 对象\",\"event (Event): Event 对象\",\"返回\",\"None\",\"用法\",\"import asyncio asyncio.create_task(handle_event(bot, event))\"]},\"294\":{\"h\":\"nonebot.params\",\"t\":[\"本模块定义了依赖注入的各类参数。\"]},\"295\":{\"h\":\"\",\"t\":[\"说明: Arg 参数消息\",\"参数\",\"key (str | None)\",\"返回\",\"Any\"]},\"296\":{\"h\":\"\",\"t\":[\"说明: Arg 参数消息文本\",\"参数\",\"key (str | None)\",\"返回\",\"str\"]},\"297\":{\"h\":\"\",\"t\":[\"说明: 子依赖装饰器\",\"参数\",\"dependency (T_Handler | None): 依赖函数。默认为参数的类型注释。\",\"use_cache (bool): 是否使用缓存。默认为 True。\",\"validate (bool | PydanticFieldInfo): 是否使用 Pydantic 类型校验。默认为 False。\",\"返回\",\"Any\",\"用法\",\"def depend_func() -> Any: return ... def depend_gen_func(): try: yield ... finally: ... async def handler( param_name: Any = Depends(depend_func), gen: Any = Depends(depend_gen_func), ): ...\"]},\"298\":{\"h\":\"\",\"t\":[\"说明\",\"Arg 注入参数\",\"本注入解析事件响应器操作 got 所获取的参数。\",\"可以通过 Arg、ArgStr、ArgPlainText 等函数参数 key 指定获取的参数， 留空则会根据参数名称获取。\",\"参数\",\"*args\",\"key (str)\",\"type (Literal['message', 'str', 'plaintext'])\",\"**kwargs (Any)\"]},\"299\":{\"h\":\"\",\"t\":[\"说明\",\"注入参数。\",\"本注入解析所有类型为且仅为 Bot 及其子类或 None 的参数。\",\"为保证兼容性，本注入还会解析名为 bot 且没有类型注解的参数。\",\"参数\",\"*args\",\"checker (ModelField | None)\",\"**kwargs (Any)\"]},\"300\":{\"h\":\"\",\"t\":[\"说明\",\"注入参数\",\"本注入解析所有类型为且仅为 Event 及其子类或 None 的参数。\",\"为保证兼容性，本注入还会解析名为 event 且没有类型注解的参数。\",\"参数\",\"*args\",\"checker (ModelField | None)\",\"**kwargs (Any)\"]},\"301\":{\"h\":\"\",\"t\":[\"说明\",\"事件处理状态注入参数\",\"本注入解析所有类型为 T_State 的参数。\",\"为保证兼容性，本注入还会解析名为 state 且没有类型注解的参数。\",\"参数\",\"*args\",\"validate (bool)\",\"**kwargs (Any)\"]},\"302\":{\"h\":\"\",\"t\":[\"说明\",\"子依赖注入参数。\",\"本注入解析所有子依赖注入，然后将它们的返回值作为参数值传递给父依赖。\",\"本注入应该具有最高优先级，因此应该在其他参数之前检查。\",\"参数\",\"*args\",\"dependent (Dependent[Any])\",\"use_cache (bool)\",\"**kwargs (Any)\"]},\"303\":{\"h\":\"\",\"t\":[\"说明: Arg 参数消息纯文本\",\"参数\",\"key (str | None)\",\"返回\",\"str\"]},\"304\":{\"h\":\"\",\"t\":[\"说明\",\"默认值注入参数\",\"本注入解析所有剩余未能解析且具有默认值的参数。\",\"本注入参数应该具有最低优先级，因此应该在所有其他注入参数之后使用。\",\"参数\",\"*args\",\"validate (bool)\",\"**kwargs (Any)\"]},\"305\":{\"h\":\"\",\"t\":[\"说明\",\"事件响应器实例注入参数\",\"本注入解析所有类型为且仅为 Matcher 及其子类或 None 的参数。\",\"为保证兼容性，本注入还会解析名为 matcher 且没有类型注解的参数。\",\"参数\",\"*args\",\"checker (ModelField | None)\",\"**kwargs (Any)\"]},\"306\":{\"h\":\"\",\"t\":[\"说明\",\"的异常注入参数\",\"本注入解析所有类型为 Exception 或 None 的参数。\",\"为保证兼容性，本注入还会解析名为 exception 且没有类型注解的参数。\",\"参数\",\"*args\",\"validate (bool)\",\"**kwargs (Any)\"]},\"307\":{\"h\":\"\",\"t\":[\"说明: 类型参数\",\"参数\",\"empty\",\"返回\",\"str\"]},\"308\":{\"h\":\"\",\"t\":[\"说明: 消息参数\",\"参数\",\"empty\",\"返回\",\"Any\"]},\"309\":{\"h\":\"\",\"t\":[\"说明: 纯文本消息参数\",\"参数\",\"empty\",\"返回\",\"str\"]},\"310\":{\"h\":\"\",\"t\":[\"说明:to_me 参数\",\"参数\",\"empty\",\"返回\",\"bool\"]},\"311\":{\"h\":\"\",\"t\":[\"说明: 消息命令元组\",\"参数\",\"empty\",\"返回\",\"tuple[str, ...]\"]},\"312\":{\"h\":\"\",\"t\":[\"说明: 消息命令文本\",\"参数\",\"empty\",\"返回\",\"str\"]},\"313\":{\"h\":\"\",\"t\":[\"说明: 消息命令参数\",\"参数\",\"empty\",\"返回\",\"Any\"]},\"314\":{\"h\":\"\",\"t\":[\"说明: 消息命令开头\",\"参数\",\"empty\",\"返回\",\"str\"]},\"315\":{\"h\":\"\",\"t\":[\"说明: 消息命令与参数之间的空白\",\"参数\",\"empty\",\"返回\",\"str\"]},\"316\":{\"h\":\"\",\"t\":[\"说明: shell 命令解析后的参数字典\",\"参数\",\"empty\",\"返回\",\"Any\"]},\"317\":{\"h\":\"\",\"t\":[\"说明: shell 命令原始参数列表\",\"参数\",\"empty\",\"返回\",\"Any\"]},\"318\":{\"h\":\"\",\"t\":[\"说明: 正则匹配结果\",\"参数\",\"empty\",\"返回\",\"Match[str]\"]},\"319\":{\"h\":\"\",\"t\":[\"说明: 正则匹配结果文本\",\"重载\",\"1.(__group=0) -> str\",\"参数\",\"__group (Literal[0])\",\"返回\",\"str\",\"2.(__group) -> str | Any\",\"参数\",\"__group (str | int)\",\"返回\",\"str | Any\",\"3.(__group1, __group2, *groups) -> tuple[str | Any, ...]\",\"参数\",\"__group1 (str | int)\",\"__group2 (str | int)\",\"*groups (str | int)\",\"返回\",\"tuple[str | Any, ...]\"]},\"320\":{\"h\":\"\",\"t\":[\"说明: 正则匹配结果 group 元组\",\"参数\",\"empty\",\"返回\",\"tuple[Any, ...]\"]},\"321\":{\"h\":\"\",\"t\":[\"说明: 正则匹配结果 group 字典\",\"参数\",\"empty\",\"返回\",\"dict[str, Any]\"]},\"322\":{\"h\":\"\",\"t\":[\"说明: 响应触发前缀\",\"参数\",\"empty\",\"返回\",\"str\"]},\"323\":{\"h\":\"\",\"t\":[\"说明: 响应触发后缀\",\"参数\",\"empty\",\"返回\",\"str\"]},\"324\":{\"h\":\"\",\"t\":[\"说明: 响应触发完整消息\",\"参数\",\"empty\",\"返回\",\"str\"]},\"325\":{\"h\":\"\",\"t\":[\"说明: 响应触发关键字\",\"参数\",\"empty\",\"返回\",\"str\"]},\"326\":{\"h\":\"\",\"t\":[\"说明:receive 事件参数\",\"参数\",\"id (str | None)\",\"default (Any)\",\"返回\",\"Any\"]},\"327\":{\"h\":\"\",\"t\":[\"说明:last_receive 事件参数\",\"参数\",\"default (Any)\",\"返回\",\"Any\"]},\"328\":{\"h\":\"nonebot.permission\",\"t\":[\"本模块是 Matcher.permission 的类型定义。\",\"每个事件响应器 拥有一个 Permission，其中是 PermissionChecker 的集合。 只要有一个 PermissionChecker 检查结果为 True 时就会继续运行。\"]},\"329\":{\"h\":\"\",\"t\":[\"说明\",\"匹配当前事件属于指定会话。\",\"如果 perm 中仅有 User 类型的权限检查函数，则会去除原有检查函数的会话 ID 限制。\",\"参数\",\"*users (str)\",\"perm (Permission | None): 需要同时满足的权限\",\"user: 会话白名单\",\"返回\",\"untyped\"]},\"330\":{\"h\":\"\",\"t\":[\"说明: 检查当前事件是否属于指定会话。\",\"参数\",\"users (tuple[str, ...]): 会话 ID 元组\",\"perm (Permission | None): 需同时满足的权限\"]},\"331\":{\"h\":\"\",\"t\":[\"说明\",\"从事件中获取会话 ID。\",\"如果 perm 中仅有 User 类型的权限检查函数，则会去除原有的会话 ID 限制。\",\"参数\",\"event (Event): Event 对象\",\"perm (Permission | None): 需同时满足的权限\",\"返回\",\"Self\"]},\"332\":{\"h\":\"\",\"t\":[\"说明\",\"指定会话与权限。\",\"如果 perm 中仅有 User 类型的权限检查函数，则会去除原有的会话 ID 限制。\",\"参数\",\"*users (str): 会话白名单\",\"perm (Permission | None): 需同时满足的权限\",\"返回\",\"Self\"]},\"333\":{\"h\":\"\",\"t\":[\"说明\",\"权限类。\",\"当事件传递时，在 Matcher 运行前进行检查。\",\"参数\",\"*checkers (T_PermissionChecker | Dependent[bool]): PermissionChecker\",\"用法\",\"Permission(async_function) | sync_function # 等价于 Permission(async_function, sync_function)\"]},\"334\":{\"h\":\"\",\"t\":[\"类型: set[Dependent[bool]]\",\"说明: 存储 PermissionChecker\"]},\"335\":{\"h\":\"\",\"t\":[\"说明: 检查是否满足某个权限。\",\"参数\",\"bot (Bot): Bot 对象\",\"event (Event): Event 对象\",\"stack (AsyncExitStack | None): 异步上下文栈\",\"dependency_cache (T_DependencyCache | None): 依赖缓存\",\"返回\",\"bool\"]},\"336\":{\"h\":\"\",\"t\":[\"说明: 检查是否为消息事件\",\"参数\",\"auto\"]},\"337\":{\"h\":\"\",\"t\":[\"说明: 检查是否为通知事件\",\"参数\",\"auto\"]},\"338\":{\"h\":\"\",\"t\":[\"说明: 检查是否为请求事件\",\"参数\",\"auto\"]},\"339\":{\"h\":\"\",\"t\":[\"说明: 检查是否为元事件\",\"参数\",\"auto\"]},\"340\":{\"h\":\"\",\"t\":[\"类型:Permission\",\"说明\",\"匹配任意 message 类型事件\",\"仅在需要同时捕获不同类型事件时使用，优先使用 message type 的 Matcher。\"]},\"341\":{\"h\":\"\",\"t\":[\"类型:Permission\",\"说明\",\"匹配任意 notice 类型事件\",\"仅在需要同时捕获不同类型事件时使用，优先使用 notice type 的 Matcher。\"]},\"342\":{\"h\":\"\",\"t\":[\"类型:Permission\",\"说明\",\"匹配任意 request 类型事件\",\"仅在需要同时捕获不同类型事件时使用，优先使用 request type 的 Matcher。\"]},\"343\":{\"h\":\"\",\"t\":[\"类型:Permission\",\"说明\",\"匹配任意 meta_event 类型事件\",\"仅在需要同时捕获不同类型事件时使用，优先使用 meta_event type 的 Matcher。\"]},\"344\":{\"h\":\"\",\"t\":[\"说明: 检查当前事件是否是消息事件且属于超级管理员\",\"参数\",\"auto\"]},\"345\":{\"h\":\"\",\"t\":[\"类型:Permission\",\"说明: 匹配任意超级用户事件\"]},\"346\":{\"h\":\"nonebot.rule\",\"t\":[\"本模块是 Matcher.rule 的类型定义。\",\"每个事件响应器拥有一个Rule，其中是 RuleChecker 的集合。 只有当所有 RuleChecker 检查结果为 True 时继续运行。\"]},\"347\":{\"h\":\"\",\"t\":[\"说明\",\"规则类。\",\"当事件传递时，在 Matcher 运行前进行检查。\",\"参数\",\"*checkers (T_RuleChecker | Dependent[bool]): RuleChecker\",\"用法\",\"Rule(async_function) & sync_function # 等价于 Rule(async_function, sync_function)\"]},\"348\":{\"h\":\"\",\"t\":[\"类型: set[Dependent[bool]]\",\"说明: 存储 RuleChecker\"]},\"349\":{\"h\":\"\",\"t\":[\"说明: 检查是否符合所有规则\",\"参数\",\"bot (Bot): Bot 对象\",\"event (Event): Event 对象\",\"state (T_State): 当前 State\",\"stack (AsyncExitStack | None): 异步上下文栈\",\"dependency_cache (T_DependencyCache | None): 依赖缓存\",\"返回\",\"bool\"]},\"350\":{\"h\":\"\",\"t\":[\"参数\",\"auto\"]},\"351\":{\"h\":\"\",\"t\":[\"说明: TRIE_VALUE(command_start, command)\",\"参数\",\"auto\"]},\"352\":{\"h\":\"\",\"t\":[\"说明: 检查消息纯文本是否以指定字符串开头。\",\"参数\",\"msg (tuple[str, ...]): 指定消息开头字符串元组\",\"ignorecase (bool): 是否忽略大小写\"]},\"353\":{\"h\":\"\",\"t\":[\"说明: 匹配消息纯文本开头。\",\"参数\",\"msg (str | tuple[str, ...]): 指定消息开头字符串元组\",\"ignorecase (bool): 是否忽略大小写\",\"返回\",\"Rule\"]},\"354\":{\"h\":\"\",\"t\":[\"说明: 检查消息纯文本是否以指定字符串结尾。\",\"参数\",\"msg (tuple[str, ...]): 指定消息结尾字符串元组\",\"ignorecase (bool): 是否忽略大小写\"]},\"355\":{\"h\":\"\",\"t\":[\"说明: 匹配消息纯文本结尾。\",\"参数\",\"msg (str | tuple[str, ...]): 指定消息开头字符串元组\",\"ignorecase (bool): 是否忽略大小写\",\"返回\",\"Rule\"]},\"356\":{\"h\":\"\",\"t\":[\"说明: 检查消息纯文本是否与指定字符串全匹配。\",\"参数\",\"msg (tuple[str, ...]): 指定消息全匹配字符串元组\",\"ignorecase (bool): 是否忽略大小写\"]},\"357\":{\"h\":\"\",\"t\":[\"说明: 完全匹配消息。\",\"参数\",\"msg (str | tuple[str, ...]): 指定消息全匹配字符串元组\",\"ignorecase (bool): 是否忽略大小写\",\"返回\",\"Rule\"]},\"358\":{\"h\":\"\",\"t\":[\"说明: 检查消息纯文本是否包含指定关键字。\",\"参数\",\"*keywords (str): 指定关键字元组\"]},\"359\":{\"h\":\"\",\"t\":[\"说明: 匹配消息纯文本关键词。\",\"参数\",\"*keywords (str): 指定关键字元组\",\"返回\",\"Rule\"]},\"360\":{\"h\":\"\",\"t\":[\"说明: 检查消息是否为指定命令。\",\"参数\",\"cmds (list[tuple[str, ...]]): 指定命令元组列表\",\"force_whitespace (str | bool | None): 是否强制命令后必须有指定空白符\"]},\"361\":{\"h\":\"\",\"t\":[\"说明\",\"匹配消息命令。\",\"根据配置里提供的 command_start,command_sep 判断消息是否为命令。\",\"可以通过 Command 获取匹配成功的命令（例: (\\\"test\\\",)）， 通过 RawCommand 获取匹配成功的原始命令文本（例: \\\"/test\\\"）， 通过 CommandArg 获取匹配成功的命令参数。\",\"参数\",\"*cmds (str | tuple[str, ...]): 命令文本或命令元组\",\"force_whitespace (str | bool | None): 是否强制命令后必须有指定空白符\",\"返回\",\"Rule\",\"用法\",\"使用默认 command_start, command_sep 配置情况下：\",\"命令 (\\\"test\\\",) 可以匹配: /test 开头的消息 命令 (\\\"test\\\", \\\"sub\\\") 可以匹配: /test.sub 开头的消息\",\"提示\",\"命令内容与后续消息间无需空格!\"]},\"362\":{\"h\":\"\",\"t\":[\"说明\",\"shell_like 命令参数解析器，解析出错时不会退出程序。\",\"支持 Message 富文本解析。\",\"参数\",\"auto\",\"用法\",\"用法与 argparse.ArgumentParser 相同， 参考文档: argparse\"]},\"363\":{\"h\":\"\",\"t\":[\"重载\",\"1.(args=None, namespace=None) -> tuple[Namespace, list[str | MessageSegment]]\",\"参数\",\"args (Sequence[str | MessageSegment] | None)\",\"namespace (None)\",\"返回\",\"tuple[Namespace, list[str | MessageSegment]]\",\"2.(args, namespace) -> tuple[T, list[str | MessageSegment]]\",\"参数\",\"args (Sequence[str | MessageSegment] | None)\",\"namespace (T)\",\"返回\",\"tuple[T, list[str | MessageSegment]]\",\"3.(*, namespace) -> tuple[T, list[str | MessageSegment]]\",\"参数\",\"namespace (T)\",\"返回\",\"tuple[T, list[str | MessageSegment]]\"]},\"364\":{\"h\":\"\",\"t\":[\"说明: 检查消息是否为指定 shell 命令。\",\"参数\",\"cmds (list[tuple[str, ...]]): 指定命令元组列表\",\"parser (ArgumentParser | None): 可选参数解析器\"]},\"365\":{\"h\":\"\",\"t\":[\"说明\",\"匹配 shell_like 形式的消息命令。\",\"根据配置里提供的 command_start,command_sep 判断消息是否为命令。\",\"可以通过 Command 获取匹配成功的命令 （例: (\\\"test\\\",)）， 通过 RawCommand 获取匹配成功的原始命令文本 （例: \\\"/test\\\"）， 通过 ShellCommandArgv 获取解析前的参数列表 （例: [\\\"arg\\\", \\\"-h\\\"]）， 通过 ShellCommandArgs 获取解析后的参数字典 （例: {\\\"arg\\\": \\\"arg\\\", \\\"h\\\": True}）。\",\"警告\",\"如果参数解析失败，则通过 ShellCommandArgs 获取的将是 ParserExit 异常。\",\"参数\",\"*cmds (str | tuple[str, ...]): 命令文本或命令元组\",\"parser (ArgumentParser | None): ArgumentParser 对象\",\"返回\",\"Rule\",\"用法\",\"使用默认 command_start, command_sep 配置，更多示例参考argparse 标准库文档。\",\"from nonebot.rule import ArgumentParser parser = ArgumentParser() parser.add_argument(\\\"-a\\\", action=\\\"store_true\\\") rule = shell_command(\\\"ls\\\", parser=parser)\",\"提示\",\"命令内容与后续消息间无需空格!\"]},\"366\":{\"h\":\"\",\"t\":[\"说明: 检查消息字符串是否符合指定正则表达式。\",\"参数\",\"regex (str): 正则表达式\",\"flags (int): 正则表达式标记\"]},\"367\":{\"h\":\"\",\"t\":[\"说明\",\"匹配符合正则表达式的消息字符串。\",\"可以通过 RegexStr 获取匹配成功的字符串， 通过 RegexGroup 获取匹配成功的 group 元组， 通过 RegexDict 获取匹配成功的 group 字典。\",\"参数\",\"regex (str): 正则表达式\",\"flags (int | re.RegexFlag): 正则表达式标记\",\"返回\",\"Rule\",\"提示\",\"正则表达式匹配使用 search 而非 match，如需从头匹配请使用 r\\\"^xxx\\\" 来确保匹配开头\",\"提示\",\"正则表达式匹配使用 EventMessage 的 str 字符串， 而非 EventMessage 的 PlainText 纯文本字符串\"]},\"368\":{\"h\":\"\",\"t\":[\"说明: 检查事件是否与机器人有关。\",\"参数\",\"auto\"]},\"369\":{\"h\":\"\",\"t\":[\"说明: 匹配与机器人有关的事件。\",\"参数\",\"empty\",\"返回\",\"Rule\"]},\"370\":{\"h\":\"\",\"t\":[\"说明: 检查事件类型是否为指定类型。\",\"参数\",\"*types (type[Event])\"]},\"371\":{\"h\":\"\",\"t\":[\"说明: 匹配事件类型。\",\"参数\",\"*types (type[Event]): 事件类型\",\"返回\",\"Rule\"]},\"372\":{\"h\":\"nonebot.typing\",\"t\":[\"本模块定义了 NoneBot 模块中共享的一些类型。\",\"使用 Python 的 Type Hint 语法， 参考 PEP 484,PEP 526 和typing。\"]},\"373\":{\"h\":\"\",\"t\":[\"说明: 标记一个方法为父类 interface 的 implement\",\"参数\",\"InterfaceClass (object)\",\"返回\",\"untyped\"]},\"374\":{\"h\":\"\",\"t\":[\"参数\",\"type_ (type[Any])\",\"返回\",\"bool\"]},\"375\":{\"h\":\"\",\"t\":[\"参数\",\"origin (type[Any] | None)\",\"返回\",\"bool\"]},\"376\":{\"h\":\"\",\"t\":[\"说明: 判断是否是 Literal 类型\",\"参数\",\"origin (type[Any] | None)\",\"返回\",\"bool\"]},\"377\":{\"h\":\"\",\"t\":[\"说明: 获取 Literal 类型包含的所有值\",\"参数\",\"type_ (type[Any])\",\"返回\",\"list[Any]\"]},\"378\":{\"h\":\"\",\"t\":[\"说明: 判断是否是 Annotated 类型\",\"参数\",\"origin (type[Any] | None)\",\"返回\",\"bool\"]},\"379\":{\"h\":\"\",\"t\":[\"说明: 判断是否是 None 类型\",\"参数\",\"type_ (type[Any])\",\"返回\",\"bool\"]},\"380\":{\"h\":\"\",\"t\":[\"参数\",\"ref (ForwardRef)\",\"globalns (dict[str, Any])\",\"localns (dict[str, Any])\",\"返回\",\"Any\"]},\"381\":{\"h\":\"\",\"t\":[\"参数\",\"auto\"]},\"382\":{\"h\":\"\",\"t\":[\"类型: dict[Any, Any]\",\"说明: 事件处理状态 State 类型\"]},\"383\":{\"h\":\"\",\"t\":[\"类型: _DependentCallable[Any]\",\"说明\",\"Bot 连接建立时钩子函数\",\"依赖参数:\",\"DependParam: 子依赖参数\",\"BotParam: Bot 对象\",\"DefaultParam: 带有默认值的参数\"]},\"384\":{\"h\":\"\",\"t\":[\"类型: _DependentCallable[Any]\",\"说明\",\"Bot 连接断开时钩子函数\",\"依赖参数:\",\"DependParam: 子依赖参数\",\"BotParam: Bot 对象\",\"DefaultParam: 带有默认值的参数\"]},\"385\":{\"h\":\"\",\"t\":[\"类型: (Bot, str, dict[str, Any]) -> Awaitable[Any]\",\"说明:bot.call_api 钩子函数\"]},\"386\":{\"h\":\"\",\"t\":[\"类型: (Bot, Exception | None, str, dict[str, Any], Any) -> Awaitable[Any]\",\"说明:bot.call_api 后执行的函数，参数分别为 bot, exception, api, data, result\"]},\"387\":{\"h\":\"\",\"t\":[\"类型: _DependentCallable[Any]\",\"说明\",\"事件预处理函数 EventPreProcessor 类型\",\"依赖参数:\",\"DependParam: 子依赖参数\",\"BotParam: Bot 对象\",\"EventParam: Event 对象\",\"StateParam: State 对象\",\"DefaultParam: 带有默认值的参数\"]},\"388\":{\"h\":\"\",\"t\":[\"类型: _DependentCallable[Any]\",\"说明\",\"事件后处理函数 EventPostProcessor 类型\",\"依赖参数:\",\"DependParam: 子依赖参数\",\"BotParam: Bot 对象\",\"EventParam: Event 对象\",\"StateParam: State 对象\",\"DefaultParam: 带有默认值的参数\"]},\"389\":{\"h\":\"\",\"t\":[\"类型: _DependentCallable[Any]\",\"说明\",\"事件响应器运行前预处理函数 RunPreProcessor 类型\",\"依赖参数:\",\"DependParam: 子依赖参数\",\"BotParam: Bot 对象\",\"EventParam: Event 对象\",\"StateParam: State 对象\",\"MatcherParam: Matcher 对象\",\"DefaultParam: 带有默认值的参数\"]},\"390\":{\"h\":\"\",\"t\":[\"类型: _DependentCallable[Any]\",\"说明\",\"事件响应器运行后后处理函数 RunPostProcessor 类型\",\"依赖参数:\",\"DependParam: 子依赖参数\",\"BotParam: Bot 对象\",\"EventParam: Event 对象\",\"StateParam: State 对象\",\"MatcherParam: Matcher 对象\",\"ExceptionParam: 异常对象（可能为 None）\",\"DefaultParam: 带有默认值的参数\"]},\"391\":{\"h\":\"\",\"t\":[\"类型: _DependentCallable[bool]\",\"说明\",\"RuleChecker 即判断是否响应事件的处理函数。\",\"依赖参数:\",\"DependParam: 子依赖参数\",\"BotParam: Bot 对象\",\"EventParam: Event 对象\",\"StateParam: State 对象\",\"DefaultParam: 带有默认值的参数\"]},\"392\":{\"h\":\"\",\"t\":[\"类型: _DependentCallable[bool]\",\"说明\",\"PermissionChecker 即判断事件是否满足权限的处理函数。\",\"依赖参数:\",\"DependParam: 子依赖参数\",\"BotParam: Bot 对象\",\"EventParam: Event 对象\",\"DefaultParam: 带有默认值的参数\"]},\"393\":{\"h\":\"\",\"t\":[\"类型: _DependentCallable[Any]\",\"说明: Handler 处理函数。\"]},\"394\":{\"h\":\"\",\"t\":[\"类型: _DependentCallable[str]\",\"说明\",\"TypeUpdater 在 Matcher.pause, Matcher.reject 时被运行，用于更新响应的事件类型。 默认会更新为 message。\",\"依赖参数:\",\"DependParam: 子依赖参数\",\"BotParam: Bot 对象\",\"EventParam: Event 对象\",\"StateParam: State 对象\",\"MatcherParam: Matcher 对象\",\"DefaultParam: 带有默认值的参数\"]},\"395\":{\"h\":\"\",\"t\":[\"类型: _DependentCallable[Permission]\",\"说明\",\"PermissionUpdater 在 Matcher.pause, Matcher.reject 时被运行，用于更新会话对象权限。 默认会更新为当前事件的触发对象。\",\"依赖参数:\",\"DependParam: 子依赖参数\",\"BotParam: Bot 对象\",\"EventParam: Event 对象\",\"StateParam: State 对象\",\"MatcherParam: Matcher 对象\",\"DefaultParam: 带有默认值的参数\"]},\"396\":{\"h\":\"\",\"t\":[\"类型: dict[_DependentCallable[Any], Task[Any]]\",\"说明: 依赖缓存, 用于存储依赖函数的返回值\"]},\"397\":{\"h\":\"nonebot.utils\",\"t\":[\"本模块包含了 NoneBot 的一些工具函数\"]},\"398\":{\"h\":\"\",\"t\":[\"说明\",\"用于记录带颜色日志时转义 <tag> 类型特殊标签\",\"参考: loguru color 标签\",\"参数\",\"s (str): 需要转义的字符串\",\"返回\",\"str\"]},\"399\":{\"h\":\"\",\"t\":[\"说明: 深度更新合并字典\",\"参数\",\"mapping (dict[K, Any])\",\"*updating_mappings (dict[K, Any])\",\"返回\",\"dict[K, Any]\"]},\"400\":{\"h\":\"\",\"t\":[\"说明: 检查 cls 是否是 class_or_tuple 中的一个类型子类并忽略类型错误。\",\"参数\",\"cls (Any)\",\"class_or_tuple (type[Any] | tuple[type[Any], ...])\",\"返回\",\"bool\"]},\"401\":{\"h\":\"\",\"t\":[\"说明\",\"检查 cls 是否是 class_or_tuple 中的一个类型子类。\",\"特别的：\",\"如果 cls 是 typing.Union 或 types.UnionType 类型， 则会检查其中的所有类型是否是 class_or_tuple 中一个类型的子类或 None。\",\"如果 cls 是 typing.Literal 类型， 则会检查其中的所有值是否是 class_or_tuple 中一个类型的实例。\",\"如果 cls 是 typing.TypeVar 类型， 则会检查其 __bound__ 或 __constraints__ 是否是 class_or_tuple 中一个类型的子类或 None。\",\"参数\",\"cls (Any)\",\"class_or_tuple (type[Any] | tuple[type[Any], ...])\",\"返回\",\"bool\"]},\"402\":{\"h\":\"\",\"t\":[\"说明: 检查 type_ 是否是复杂类型\",\"参数\",\"type_ (type[Any])\",\"返回\",\"bool\"]},\"403\":{\"h\":\"\",\"t\":[\"说明: 检查 call 是否是一个 callable 协程函数\",\"参数\",\"call ((...) -> Any)\",\"返回\",\"bool\"]},\"404\":{\"h\":\"\",\"t\":[\"说明: 检查 call 是否是一个生成器函数\",\"参数\",\"call ((...) -> Any)\",\"返回\",\"bool\"]},\"405\":{\"h\":\"\",\"t\":[\"说明: 检查 call 是否是一个异步生成器函数\",\"参数\",\"call ((...) -> Any)\",\"返回\",\"bool\"]},\"406\":{\"h\":\"\",\"t\":[\"说明: 一个用于包装 sync function 为 async function 的装饰器\",\"参数\",\"call ((P) -> R): 被装饰的同步函数\",\"返回\",\"(P) -> Coroutine[None, None, R]\"]},\"407\":{\"h\":\"\",\"t\":[\"说明: 一个用于包装 sync context manager 为 async context manager 的执行函数\",\"参数\",\"cm (AbstractContextManager[T])\",\"返回\",\"AsyncGenerator[T, None]\"]},\"408\":{\"h\":\"\",\"t\":[\"说明: 运行协程并当遇到指定异常时返回指定值。\",\"重载\",\"1.(coro, exc, return_on_err=None) -> T | None\",\"参数\",\"coro (Coroutine[Any, Any, T])\",\"exc (tuple[type[Exception], ...])\",\"return_on_err (None)\",\"返回\",\"T | None\",\"2.(coro, exc, return_on_err) -> T | R\",\"参数\",\"coro (Coroutine[Any, Any, T])\",\"exc (tuple[type[Exception], ...])\",\"return_on_err (R)\",\"返回\",\"T | R\",\"参数\",\"coro: 要运行的协程\",\"exc: 要捕获的异常\",\"return_on_err: 当发生异常时返回的值\",\"返回\",\"协程的返回值或发生异常时的指定值\"]},\"409\":{\"h\":\"\",\"t\":[\"说明: 获取对象的名称\",\"参数\",\"obj (Any)\",\"返回\",\"str\"]},\"410\":{\"h\":\"\",\"t\":[\"说明: 转换路径为模块名\",\"参数\",\"path (Path)\",\"返回\",\"str\"]},\"411\":{\"h\":\"\",\"t\":[\"说明: 解析并导入点分表示法的对象\",\"参数\",\"obj_str (str)\",\"default_attr (str)\",\"default_prefix (str | None)\",\"返回\",\"Any\"]},\"412\":{\"h\":\"\",\"t\":[\"说明: 类属性装饰器\",\"参数\",\"func ((Any) -> T)\"]},\"413\":{\"h\":\"\",\"t\":[\"说明: 可以序列化 Message(List[Dataclass]) 的 JSONEncoder\",\"参数\",\"auto\"]},\"414\":{\"h\":\"\",\"t\":[\"参数\",\"o\",\"返回\",\"untyped\"]},\"415\":{\"h\":\"\",\"t\":[\"说明: 用于打印 adapter 的日志。\",\"参数\",\"logger_name (str): adapter 的名称\",\"返回\",\"untyped: 日志记录函数\",\"日志记录函数的参数:\",\"level: 日志等级\",\"message: 日志信息\",\"exception: 异常信息\"]},\"416\":{\"h\":\"日志\",\"t\":[\"无论是在开发还是在生产环境中，日志都是一个重要的功能，可以帮助我们了解运行状况、排查问题等。虽然我们可以使用 print 来将需要的信息输出到控制台，但是这种方式难以控制，而且不利于日志的归档、分析等。NoneBot 使用优秀的 Loguru 库来进行日志记录。\"]},\"417\":{\"h\":\"记录日志\",\"t\":[\"我们可以从 NoneBot 中导入 logger 对象，然后使用 logger 对象的方法来记录日志。\",\"from nonebot import logger logger.trace(\\\"This is a trace message\\\") logger.debug(\\\"This is a debug message\\\") logger.info(\\\"This is an info message\\\") logger.success(\\\"This is a success message\\\") logger.warning(\\\"This is a warning message\\\") logger.error(\\\"This is an error message\\\") logger.critical(\\\"This is a critical message\\\")\",\"我们仅需一行代码即可记录对应级别的日志。日志可以通过配置 LOG_LEVEL 配置项来过滤输出等级，控制台中仅会输出大于等于 LOG_LEVEL 的日志。默认的 LOG_LEVEL 为 INFO，即只会输出 INFO、SUCCESS、WARNING、ERROR、CRITICAL 级别的日志。\",\"如果需要记录 Exception traceback 日志，可以向 logger 添加 exception 选项：\",\"try: 1 / 0 except ZeroDivisionError: logger.opt(exception=True).error(\\\"ZeroDivisionError\\\")\",\"如果需要输出彩色日志，可以向 logger 添加 colors 选项：\",\"logger.opt(colors=True).warning(\\\"We got a <red>BIG</red> problem\\\")\",\"更多日志记录方法请参考 Loguru 文档。\"]},\"418\":{\"h\":\"自定义日志输出\",\"t\":[\"NoneBot 在启动时会添加一个默认的日志处理器，该处理器会将日志输出到stdout，并且根据 LOG_LEVEL 配置项过滤日志等级。\",\"默认的日志格式为：\",\"<g>{time:MM-DD HH:mm:ss}</g> [<lvl>{level}</lvl>] <c><u>{name}</u></c> | {message}\",\"我们可以从 nonebot.log 模块导入以使用 NoneBot 的默认格式和过滤器：\",\"from nonebot.log import default_format, default_filter\",\"如果需要自定义日志格式，我们需要移除 NoneBot 默认的日志处理器并添加新的日志处理器。例如，在机器人入口文件中 nonebot.init 之前添加以下内容：\",\"from nonebot.log import logger_id # 移除 NoneBot 默认的日志处理器 logger.remove(logger_id) # 添加新的日志处理器 logger.add( sys.stdout, level=0, diagnose=True, format=\\\"<g>{time:MM-DD HH:mm:ss}</g> [<lvl>{level}</lvl>] <c><u>{name}</u></c> | {message}\\\", filter=default_filter )\",\"如果想要输出日志到文件，我们可以使用 logger.add 方法添加文件处理器：\",\"logger.add(\\\"error.log\\\", level=\\\"ERROR\\\", format=default_format, rotation=\\\"1 week\\\")\",\"更多日志处理器的使用方法请参考 Loguru 文档。\"]},\"419\":{\"h\":\"重定向 logging 日志\",\"t\":[\"logging 是 Python 标准库中的日志模块，NoneBot 提供了一个 logging handler 用于将 logging 日志重定向到 loguru 处理。\",\"from nonebot.log import LoguruHandler # root logger 添加 LoguruHandler logging.basicConfig(handlers=[LoguruHandler()]) # 或者为其他 logging.Logger 添加 LoguruHandler logger.addHandler(LoguruHandler())\"]},\"420\":{\"h\":\"事件类型与重载\",\"t\":[\"在之前的示例中，我们已经了解了如何获取事件信息以及使用平台接口。但是，事件信息通常不仅仅包含消息这一个内容，还有其他平台提供的信息，例如消息发送时间、消息发送者等等。同时，在使用平台接口时，我们需要确保使用的平台接口与所要发送的平台类型一致，对不同类型的事件需要做出不同的处理。在本章节中，我们将介绍如何获取事件更多的信息以及根据事件类型进行不同的处理。\"]},\"421\":{\"h\":\"事件类型\",\"t\":[\"在 NoneBot 中，事件均是 nonebot.adapters.Event 基类的子类型，基类对一些必要的属性进行了抽象，子类型则根据不同的平台进行了实现。在自定义权限一节中，我们就使用了 Event 的抽象方法 get_user_id 来获取事件发送者 ID，这个方法由协议适配器进行了实现，返回机器人用户对应的平台 ID。更多的基类抽象方法可以在使用适配器中查看。\",\"既然事件是基类的子类型，我们实际可以获得的信息通常多于基类抽象方法所提供的。如果我们不满足于基类能获得的信息，我们可以小小的修改一下事件处理函数的事件参数类型注解，使其变为子类型，这样我们就可以通过协议适配器定义的子类型来获取更多的信息。我们以 Console 协议适配器为例：\",\"from nonebot.adapters.console import MessageEvent @weather.got(\\\"location\\\", prompt=\\\"请输入地名\\\") async def got_location(event: MessageEvent, location: str = ArgPlainText()): await weather.finish(f\\\"{event.time.strftime('%Y-%m-%d')} {location} 的天气是...\\\")\",\"在上面的代码中，我们获取了 Console 协议适配器的消息事件提供的发送时间 time 属性。\",\"注意\",\"如果基类就能满足你的需求，那么就不要修改事件参数类型注解，这样可以使你的代码更加通用，可以在更多平台上运行。如何根据不同平台事件类型进行不同的处理，我们将在重载一节中介绍。\"]},\"422\":{\"h\":\"重载\",\"t\":[\"我们在编写机器人时，常常会遇到这样一个问题：如何对私聊和群聊消息进行不同的处理？如何对不同平台的事件进行不同的处理？针对这些问题，NoneBot 提供了一个便捷而高效的解决方案 ── 重载。简单来说，依赖函数会根据其参数的类型注解来决定是否执行，忽略不符合其参数类型注解的情况。这样，我们就可以通过修改事件参数类型注解来实现对不同事件的处理，或者修改 Bot 参数类型注解来实现使用不同平台的接口。我们以 OneBot 协议适配器为例：\",\"from nonebot.adapters.onebot.v11 import PrivateMessageEvent, GroupMessageEvent @matcher.handle() async def handle_private(event: PrivateMessageEvent): await matcher.finish(\\\"私聊消息\\\") @matcher.handle() async def handle_group(event: GroupMessageEvent): await matcher.finish(\\\"群聊消息\\\")\",\"这样，机器人用户就会在私聊和群聊中分别收到不同的回复。同样的，我们也可以通过修改 Bot 参数类型注解来实现使用不同平台的接口：\",\"from nonebot.adapters.console import Bot as ConsoleBot from nonebot.adapters.onebot.v11 import Bot as OneBot @matcher.handle() async def handle_console(bot: ConsoleBot): await bot.bell() @matcher.handle() async def handle_onebot(bot: OneBot): await bot.send_group_message(group_id=123123, message=\\\"OneBot\\\")\",\"注意\",\"重载机制对所有的参数类型注解都有效，因此，依赖注入也可以使用这个特性来对不同的返回值进行处理。\",\"但 Bot、Event 和 Matcher 三者的参数类型注解具有最高检查优先级，如果三者任一类型注解不匹配，那么其他依赖注入将不会执行（如：Depends）。\",\"提示\",\"如何更好地编写一个跨平台的插件，我们将在最佳实践中介绍。\"]},\"423\":{\"h\":\"响应规则\",\"t\":[\"机器人在实际应用中，往往会接收到多种多样的事件类型，NoneBot 通过响应规则来控制事件的处理。\",\"在指南中，我们为 weather 命令添加了一个 rule=to_me() 参数，这个参数就是一个响应规则，确保只有在私聊或者 @bot 时才会响应。\",\"响应规则是一个 Rule 对象，它由一系列的 RuleChecker 函数组成，每个 RuleChecker 函数都会检查事件是否符合条件，如果所有的检查都通过，则事件会被处理。\"]},\"424\":{\"h\":\"RuleChecker\",\"t\":[\"RuleChecker 是一个返回值为 bool 类型的依赖函数，即 RuleChecker 支持依赖注入。我们可以根据上一节中添加的配置项，在 weather 插件目录中编写一个响应规则：\",\"plugin_config = get_plugin_config(Config) async def is_enable() -> bool: return plugin_config.weather_plugin_enabled weather = on_command(\\\"天气\\\", rule=is_enable)\",\"在上面的代码中，我们定义了一个函数 is_enable，它会检查配置项 weather_plugin_enabled 是否为 True。这个函数 is_enable 即为一个 RuleChecker。\"]},\"425\":{\"h\":\"Rule\",\"t\":[\"Rule 是若干个 RuleChecker 的集合，它会并发调用每个 RuleChecker，只有当所有 RuleChecker 检查通过时匹配成功。例如：我们可以组合两个 RuleChecker，一个用于检查插件是否启用，一个用于检查用户是否在黑名单中：\",\"from nonebot.rule import Rule from nonebot.adapters import Event async def is_enable() -> bool: return plugin_config.weather_plugin_enabled async def is_blacklisted(event: Event) -> bool: return event.get_user_id() not in BLACKLIST rule = Rule(is_enable, is_blacklisted) weather = on_command(\\\"天气\\\", rule=rule)\"]},\"426\":{\"h\":\"合并响应规则\",\"t\":[\"在定义响应规则时，我们可以将规则进行细分，来更好地复用规则。而在使用时，我们需要合并多个规则。除了使用 Rule 对象来组合多个 RuleChecker 外，我们还可以对 Rule 对象进行合并。在原 weather 插件中，我们可以将 rule=to_me() 与 rule=is_enable 使用 & 运算符合并：\",\"from nonebot.rule import to_me plugin_config = get_plugin_config(Config) async def is_enable() -> bool: return plugin_config.weather_plugin_enabled weather = on_command( \\\"天气\\\", rule=to_me() & is_enable, aliases={\\\"weather\\\", \\\"查天气\\\"}, priority=plugin_config.weather_command_priority block=True, )\",\"这样，weather 命令就只会在插件启用且在私聊或者 @bot 时才会响应。\",\"合并响应规则可以有多种形式，例如：\",\"rule1 = Rule(foo_checker) rule2 = Rule(bar_checker) rule = rule1 & rule2 rule = rule1 & bar_checker rule = foo_checker & rule2\",\"同时，我们也无需担心合并了一个 None 值，Rule 会忽略 None 值。\",\"assert (rule & None) is rule\"]},\"427\":{\"h\":\"主动使用响应规则\",\"t\":[\"除了在事件响应器中使用响应规则外，我们也可以主动使用响应规则来判断事件是否符合条件。例如：\",\"rule = Rule(some_checker) result: bool = await rule(bot, event, state)\",\"我们只需要传入 Bot 对象、事件和会话状态，Rule 会并发调用所有 RuleChecker 进行检查，并返回结果。\"]},\"428\":{\"h\":\"内置响应规则\",\"t\":[\"NoneBot 内置了一些常用的响应规则，可以直接通过事件响应器辅助函数或者自行合并其他规则使用。内置响应规则列表可以参考事件响应器进阶\"]},\"429\":{\"h\":\"会话状态\",\"t\":[\"在事件处理流程中，和用户交互的过程即是会话。在会话中，我们可能需要记录一些信息，例如用户的重试次数等等，以便在会话中的不同阶段进行判断和处理。这些信息都可以存储于会话状态中。\",\"NoneBot 中的会话状态是一个字典，可以通过类型 T_State 来获取。字典内可以存储任意类型的数据，但是要注意的是，NoneBot 本身会在会话状态中存储一些信息，因此不要使用 NoneBot 使用的键名。\",\"from nonebot.typing import T_State @matcher.got(\\\"key\\\", prompt=\\\"请输入密码\\\") async def _(state: T_State, key: str = ArgPlainText()): if key != \\\"some password\\\": try_count = state.get(\\\"try_count\\\", 1) if try_count >= 3: await matcher.finish(\\\"密码错误次数过多\\\") else: state[\\\"try_count\\\"] = try_count + 1 await matcher.reject(\\\"密码错误，请重新输入\\\") await matcher.finish(\\\"密码正确\\\")\",\"会话状态的生命周期与事件处理流程相同，在期间的任何一个事件处理函数都可以进行读写。\",\"from nonebot.typing import T_State @matcher.handle() async def _(state: T_State): state[\\\"key\\\"] = \\\"value\\\" @matcher.handle() async def _(state: T_State): await matcher.finish(state[\\\"key\\\"])\",\"会话状态还可以用于发送动态消息，消息模板在发送时会使用会话状态字典进行渲染。消息模板的使用方法已经在消息处理中介绍过，这里不再赘述。\",\"from nonebot.typing import T_State from nonebot.adapters import MessageTemplate @matcher.handle() async def _(state: T_State): state[\\\"username\\\"] = \\\"user\\\" @matcher.got(\\\"password\\\", prompt=MessageTemplate(\\\"请输入 {username} 的密码\\\")) async def _(): await matcher.finish(MessageTemplate(\\\"密码为 {password}\\\"))\"]},\"430\":{\"h\":\"下一步\",\"t\":[\"至此，我们已经了解了 NoneBot 的大多数功能用法，相信你已经可以独自写出一个插件了。现在你可以选择：\",\"即刻开始插件编写！\",\"更深入地了解 NoneBot 的更多功能和原理！\"]},\"431\":{\"h\":\"数据存储\",\"t\":[\"在使用插件的过程中，难免会需要存储一些持久化数据，例如用户的个人信息、群组的信息等。除了使用数据库等第三方存储之外，还可以使用本地文件来自行管理数据。NoneBot 提供了 nonebot-plugin-localstore 插件，可用于获取正确的数据存储路径并写入数据。\"]},\"432\":{\"h\":\"安装插件\",\"t\":[\"在使用前请先安装 nonebot-plugin-localstore 插件至项目环境中，可参考获取商店插件来了解并选择安装插件的方式。如：\",\"在项目目录下执行以下命令：\",\"nb plugin install nonebot-plugin-localstore\"]},\"433\":{\"h\":\"使用插件\",\"t\":[\"nonebot-plugin-localstore 插件兼容 Windows、Linux 和 macOS 等操作系统，使用时无需关心操作系统的差异。同时插件提供 nb-cli 脚本，可以使用 nb localstore 命令来检查数据存储路径。\",\"在使用本插件前同样需要使用 require 方法进行加载并导入需要使用的方法，可参考 跨插件访问 一节进行了解，如：\",\"from nonebot import require require(\\\"nonebot_plugin_localstore\\\") import nonebot_plugin_localstore as store # 获取插件缓存目录 cache_dir = store.get_plugin_cache_dir() # 获取插件缓存文件 cache_file = store.get_plugin_cache_file(\\\"file_name\\\") # 获取插件数据目录 data_dir = store.get_plugin_data_dir() # 获取插件数据文件 data_file = store.get_plugin_data_file(\\\"file_name\\\") # 获取插件配置目录 config_dir = store.get_plugin_config_dir() # 获取插件配置文件 config_file = store.get_plugin_config_file(\\\"file_name\\\")\",\"警告\",\"在 Windows 和 macOS 系统下，插件的数据目录和配置目录是同一个目录，因此在使用时需要注意避免文件名冲突。\",\"插件提供的方法均返回一个 pathlib.Path 路径，可以参考 pathlib 文档来了解如何使用。常用的方法有：\",\"from pathlib import Path data_file = store.get_plugin_data_file(\\\"file_name\\\") # 写入文件内容 data_file.write_text(\\\"Hello World!\\\") # 读取文件内容 data = data_file.read_text()\",\"提示\",\"对于嵌套插件，子插件的存储目录将位于父插件存储目录下。\"]},\"434\":{\"h\":\"配置项\"},\"435\":{\"h\":\"localstore_use_cwd\",\"t\":[\"使用当前工作目录作为数据存储目录，以下数据目录配置项默认值将会对应变更\",\"默认值：False\",\"LOCALSTORE_USE_CWD=true\"]},\"436\":{\"h\":\"localstore_cache_dir\",\"t\":[\"自定义缓存目录\",\"默认值：\",\"当 localstore_use_cwd 为 True 时，缓存目录为 <current_working_directory>/cache，否则：\",\"macOS: ~/Library/Caches/nonebot2\",\"Unix: ~/.cache/nonebot2 (XDG default)\",\"Windows: C:\\\\Users\\\\<username>\\\\AppData\\\\Local\\\\nonebot2\\\\Cache\",\"LOCALSTORE_CACHE_DIR=/tmp/cache\"]},\"437\":{\"h\":\"localstore_data_dir\",\"t\":[\"自定义数据目录\",\"默认值：\",\"当 localstore_use_cwd 为 True 时，数据目录为 <current_working_directory>/data，否则：\",\"macOS: ~/Library/Application Support/nonebot2\",\"Unix: ~/.local/share/nonebot2 or in $XDG_DATA_HOME, if defined\",\"Win XP (not roaming): C:\\\\Documents and Settings\\\\<username>\\\\Application Data\\\\nonebot2\",\"Win 7 (not roaming): C:\\\\Users\\\\<username>\\\\AppData\\\\Local\\\\nonebot2\",\"LOCALSTORE_DATA_DIR=/tmp/data\"]},\"438\":{\"h\":\"localstore_config_dir\",\"t\":[\"自定义配置目录\",\"默认值：\",\"当 localstore_use_cwd 为 True 时，配置目录为 <current_working_directory>/config，否则：\",\"macOS: same as user_data_dir\",\"Unix: ~/.config/nonebot2\",\"Win XP (roaming): C:\\\\Documents and Settings\\\\<username>\\\\Local Settings\\\\Application Data\\\\nonebot2\",\"Win 7 (roaming): C:\\\\Users\\\\<username>\\\\AppData\\\\Roaming\\\\nonebot2\",\"LOCALSTORE_CONFIG_DIR=/tmp/config\"]},\"439\":{\"h\":\"localstore_plugin_cache_dir\",\"t\":[\"自定义插件缓存目录\",\"默认值：{}\",\"LOCALSTORE_PLUGIN_CACHE_DIR=' { \\\"plugin_id\\\": \\\"/tmp/plugin_cache\\\" } '\"]},\"440\":{\"h\":\"localstore_plugin_data_dir\",\"t\":[\"自定义插件数据目录\",\"默认值：{}\",\"LOCALSTORE_PLUGIN_DATA_DIR=' { \\\"plugin_id\\\": \\\"/tmp/plugin_data\\\" } '\"]},\"441\":{\"h\":\"localstore_plugin_config_dir\",\"t\":[\"自定义插件配置目录\",\"默认值：{}\",\"LOCALSTORE_PLUGIN_CONFIG_DIR=' { \\\"plugin_id\\\": \\\"/tmp/plugin_config\\\" } '\"]},\"442\":{\"h\":\"错误跟踪\",\"t\":[\"在应用实际运行过程中，可能会出现各种各样的错误。可能是由于代码逻辑错误，也可能是由于用户输入错误，甚至是由于第三方服务的错误。这些错误都会导致应用的运行出现问题，这时候就需要对错误进行跟踪，以便及时发现问题并进行修复。NoneBot 提供了 nonebot-plugin-sentry 插件，支持 sentry 平台，可以方便地进行错误跟踪。\"]},\"443\":{\"h\":\"安装插件\",\"t\":[\"在使用前请先安装 nonebot-plugin-sentry 插件至项目环境中，可参考获取商店插件来了解并选择安装插件的方式。如：\",\"在项目目录下执行以下命令：\",\"nb plugin install nonebot-plugin-sentry\"]},\"444\":{\"h\":\"使用插件\",\"t\":[\"在安装完成之后，仅需要对插件进行简单的配置即可使用。\"]},\"445\":{\"h\":\"获取 sentry DSN\",\"t\":[\"前往 sentry 平台，注册并创建一个新的项目，然后在项目设置中找到 Client Keys (DSN)，复制其中的 DSN 值。\"]},\"446\":{\"h\":\"配置插件\",\"t\":[\"注意\",\"错误跟踪通常在生产环境中使用，因此开发环境中 sentry_dsn 留空即会停用插件。\",\"在项目 dotenv 配置文件中添加以下配置即可使用：\",\"SENTRY_DSN=<your_sentry_dsn>\"]},\"447\":{\"h\":\"配置项\",\"t\":[\"配置项具体含义参考 Sentry Docs。\",\"sentry_dsn: str\",\"sentry_debug: bool = False\",\"sentry_release: str | None = None\",\"sentry_release: str | None = None\",\"sentry_environment: str | None = nonebot env\",\"sentry_server_name: str | None = None\",\"sentry_sample_rate: float = 1.\",\"sentry_max_breadcrumbs: int = 100\",\"sentry_attach_stacktrace: bool = False\",\"sentry_send_default_pii: bool = False\",\"sentry_in_app_include: List[str] = Field(default_factory=list)\",\"sentry_in_app_exclude: List[str] = Field(default_factory=list)\",\"sentry_request_bodies: str = \\\"medium\\\"\",\"sentry_with_locals: bool = True\",\"sentry_ca_certs: str | None = None\",\"sentry_before_send: Callable[[Any, Any], Any | None] | None = None\",\"sentry_before_breadcrumb: Callable[[Any, Any], Any | None] | None = None\",\"sentry_transport: Any | None = None\",\"sentry_http_proxy: str | None = None\",\"sentry_https_proxy: str | None = None\",\"sentry_shutdown_timeout: int = 2\"]},\"448\":{\"h\":\"定时任务\",\"t\":[\"APScheduler (Advanced Python Scheduler) 是一个 Python 第三方库，其强大的定时任务功能被广泛应用于各个场景。在 NoneBot 中，定时任务作为一个额外功能，依赖于基于 APScheduler 开发的 nonebot-plugin-apscheduler 插件进行支持。\"]},\"449\":{\"h\":\"安装插件\",\"t\":[\"在使用前请先安装 nonebot-plugin-apscheduler 插件至项目环境中，可参考获取商店插件来了解并选择安装插件的方式。如：\",\"在项目目录下执行以下命令：\",\"nb plugin install nonebot-plugin-apscheduler\"]},\"450\":{\"h\":\"使用插件\",\"t\":[\"nonebot-plugin-apscheduler 本质上是对 APScheduler 进行了封装以适用于 NoneBot 开发，因此其使用方式与 APScheduler 本身并无显著区别。在此我们会简要介绍其调用方法，更多的使用方面的功能请参考APScheduler 官方文档。\"]},\"451\":{\"h\":\"导入调度器\",\"t\":[\"由于 nonebot_plugin_apscheduler 作为插件，因此需要在使用前对其进行加载并导入其中的 scheduler 调度器来创建定时任务。使用 require 方法可轻松完成这一过程，可参考 跨插件访问 一节进行了解。\",\"from nonebot import require require(\\\"nonebot_plugin_apscheduler\\\") from nonebot_plugin_apscheduler import scheduler\"]},\"452\":{\"h\":\"添加定时任务\",\"t\":[\"在 APScheduler 官方文档 中提供了以下两种直接添加任务的方式：\",\"from nonebot import require require(\\\"nonebot_plugin_apscheduler\\\") from nonebot_plugin_apscheduler import scheduler # 基于装饰器的方式 @scheduler.scheduled_job(\\\"cron\\\", hour=\\\"*/2\\\", id=\\\"job_0\\\", args=[1], kwargs={arg2: 2}) async def run_every_2_hour(arg1: int, arg2: int): pass # 基于 add_job 方法的方式 def run_every_day(arg1: int, arg2: int): pass scheduler.add_job( run_every_day, \\\"interval\\\", days=1, id=\\\"job_1\\\", args=[1], kwargs={arg2: 2} )\",\"注意\",\"由于 APScheduler 的定时任务并不是由事件响应器所触发的事件，因此其任务函数无法同事件处理函数一样通过依赖注入获取上下文信息，也无法通过事件响应器对象的方法进行任何操作，因此我们需要使用调用平台 API的方式来获取信息或收发消息。\",\"相对于事件处理依赖而言，编写定时任务更像是编写普通的函数，需要我们自行获取信息以及发送信息，请不要将事件处理依赖的特殊语法用于定时任务！\",\"关于 APScheduler 的更多使用方法，可以参考 APScheduler 官方文档 进行了解。\"]},\"453\":{\"h\":\"配置项\"},\"454\":{\"h\":\"apscheduler_autostart\",\"t\":[\"类型: bool\",\"默认值: True\",\"是否自动启动 scheduler ，若不启动需要自行调用 scheduler.start()。\"]},\"455\":{\"h\":\"apscheduler_log_level\",\"t\":[\"类型: int\",\"默认值: 30\",\"apscheduler 输出的日志等级\",\"WARNING = 30 (默认)\",\"INFO = 20\",\"DEBUG = 10 (只有在开启 nonebot 的 debug 模式才会显示 debug 日志)\"]},\"456\":{\"h\":\"apscheduler_config\",\"t\":[\"类型: dict\",\"默认值: { \\\"apscheduler.timezone\\\": \\\"Asia/Shanghai\\\" }\",\"apscheduler 的相关配置。参考配置调度器, 配置参数\",\"配置需要包含 apscheduler. 作为前缀，例如 apscheduler.timezone。\"]},\"457\":{\"h\":\"参与讨论\",\"t\":[\"如果在安装或者开发 NoneBot 过程中遇到了任何问题，或者有新奇的点子，欢迎参与我们的社区讨论：\",\"点击下方链接前往 GitHub，前往 Issues 页面，在 New Issue Template 中选择 Question\",\"NoneBot：\",\"通过 QQ 群（点击下方链接直达）\",\"通过 QQ 频道\",\"通过 Discord 服务器（点击下方链接直达）\"]},\"458\":{\"h\":\"贡献指南\"},\"459\":{\"h\":\"Code of Conduct\",\"t\":[\"请参阅 Code of Conduct。\"]},\"460\":{\"h\":\"参与开发\",\"t\":[\"请参阅 Contributing。\"]},\"461\":{\"h\":\"鸣谢\",\"t\":[\"感谢以下开发者对 NoneBot2 作出的贡献：\"]},\"462\":{\"h\":\"编写适配器\",\"t\":[\"在编写适配器之前，我们需要先了解适配器的功能与组成，适配器通常由 Adapter、Bot、Event 和 Message 四个部分组成，在编写适配器时，我们需要继承 NoneBot 中的基类，并根据实际平台来编写每个部分功能。\"]},\"463\":{\"h\":\"组织结构\",\"t\":[\"NoneBot 适配器项目通常以 nonebot-adapter-{adapter-name} 作为项目名，并以命名空间包的形式编写，即在 nonebot/adapters/{adapter-name} 目录中编写实际代码，例如：\",\"📦 nonebot-adapter-{adapter-name} ├── 📂 nonebot │ ├── 📂 adapters │ │ ├── 📂 {adapter-name} │ │ │ ├── 📜 __init__.py │ │ │ ├── 📜 adapter.py │ │ │ ├── 📜 bot.py │ │ │ ├── 📜 config.py │ │ │ ├── 📜 event.py │ │ │ └── 📜 message.py ├── 📜 pyproject.toml └── 📜 README.md\",\"提示\",\"上述的项目结构仅作推荐，不做强制要求，保证实际可用性即可。\"]},\"464\":{\"h\":\"使用 NB-CLI 创建项目\",\"t\":[\"我们可以使用脚手架快速创建项目：\",\"nb adapter create\",\"按照指引，输入适配器名称以及存储位置，即可创建一个带有基本结构的适配器项目。\"]},\"465\":{\"h\":\"组成部分\",\"t\":[\"提示\",\"本章节的代码中提到的 Adapter、Bot、Event 和 Message 等，均为下文中适配器所编写的类，而非 NoneBot 中的基类。\"]},\"466\":{\"h\":\"Log\",\"t\":[\"适配器在处理时通常需要打印日志，但直接使用 NoneBot 的默认 logger 不方便区分适配器输出和其它日志。因此我们可以使用 NoneBot 提供的 logger_wrapper 方法，自定义一个 log 函数用于快捷打印适配器日志：\",\"from nonebot.utils import logger_wrapper log = logger_wrapper(\\\"your_adapter_name\\\")\",\"这个 log 函数会在默认 logger 中添加适配器名称前缀，它接收三个参数：日志等级、日志内容以及可选的异常，具体用法如下：\",\"from .log import log log(\\\"DEBUG\\\", \\\"A DEBUG log.\\\") log(\\\"INFO\\\", \\\"A INFO log.\\\") try: ... except Exception as e: log(\\\"ERROR\\\", \\\"something error.\\\", e)\"]},\"467\":{\"h\":\"Config\",\"t\":[\"通常适配器需要一些配置项，例如平台连接密钥等。适配器的配置方法与插件配置类似，例如：\",\"from pydantic import BaseModel class Config(BaseModel): xxx_id: str xxx_token: str\",\"配置项的读取将在下方 Adapter 中介绍。\"]},\"468\":{\"h\":\"Adapter\",\"t\":[\"Adapter 负责转换事件、调用接口，以及正确创建 Bot 对象并注册到 NoneBot 中。在编写平台相关内容之前，我们需要继承基类，并实现适配器的基本信息：\",\"from typing import Any from typing_extensions import override from nonebot.drivers import Driver from nonebot import get_plugin_config from nonebot.adapters import Adapter as BaseAdapter from .config import Config class Adapter(BaseAdapter): @override def __init__(self, driver: Driver, **kwargs: Any): super().__init__(driver, **kwargs) # 读取适配器所需的配置项 self.adapter_config: Config = get_plugin_config(Config) @classmethod @override def get_name(cls) -> str: \\\"\\\"\\\"适配器名称\\\"\\\"\\\" return \\\"your_adapter_name\\\"\"]},\"469\":{\"h\":\"与平台交互\",\"t\":[\"NoneBot 提供了多种 Driver 来帮助适配器进行网络通信，主要分为客户端和服务端两种类型。我们需要根据平台文档和特性选择合适的通信方式，并编写相关方法用于初始化适配器，与平台建立连接和进行交互：\"]},\"470\":{\"h\":\"客户端通信方式\",\"t\":[\"import asyncio from typing_extensions import override from nonebot import get_plugin_config from nonebot.exception import WebSocketClosed from nonebot.drivers import Request, WebSocketClientMixin class Adapter(BaseAdapter): @override def __init__(self, driver: Driver, **kwargs: Any): super().__init__(driver, **kwargs) self.adapter_config: Config = get_plugin_config(Config) self.task: Optional[asyncio.Task] = None # 存储 ws 任务 self.setup() def setup(self) -> None: if not isinstance(self.driver, WebSocketClientMixin): # 判断用户配置的Driver类型是否符合适配器要求，不符合时应抛出异常 raise RuntimeError( f\\\"Current driver {self.config.driver} doesn't support websocket client connections!\\\" f\\\"{self.get_name()} Adapter need a WebSocket Client Driver to work.\\\" ) # 在 NoneBot 启动和关闭时进行相关操作 self.driver.on_startup(self.startup) self.driver.on_shutdown(self.shutdown) async def startup(self) -> None: \\\"\\\"\\\"定义启动时的操作，例如和平台建立连接\\\"\\\"\\\" self.task = asyncio.create_task(self._forward_ws()) # 建立 ws 连接 async def _forward_ws(self): request = Request( method=\\\"GET\\\", url=\\\"your_platform_websocket_url\\\", headers={\\\"token\\\": \\\"...\\\"}, # 鉴权请求头 ) while True: try: async with self.websocket(request) as ws: try: # 处理 websocket ... except WebSocketClosed as e: log( \\\"ERROR\\\", \\\"<r><bg #f8bbd0>WebSocket Closed</bg #f8bbd0></r>\\\", e, ) except Exception as e: log( \\\"ERROR\\\", \\\"<r><bg #f8bbd0>Error while process data from \\\" \\\"websocket platform_websocket_url. \\\" \\\"Trying to reconnect...</bg #f8bbd0></r>\\\", e, ) finally: # 这里要断开 Bot 连接 except Exception as e: # 尝试重连 log( \\\"ERROR\\\", \\\"<r><bg #f8bbd0>Error while setup websocket to \\\" \\\"platform_websocket_url. Trying to reconnect...</bg #f8bbd0></r>\\\", e, ) await asyncio.sleep(3) # 重连间隔 async def shutdown(self) -> None: \\\"\\\"\\\"定义关闭时的操作，例如停止任务、断开连接\\\"\\\"\\\" # 断开 ws 连接 if self.task is not None and not self.task.done(): self.task.cancel()\"]},\"471\":{\"h\":\"服务端通信方式\",\"t\":[\"from nonebot import get_plugin_config from nonebot.drivers import ( Request, ASGIMixin, WebSocket, HTTPServerSetup, WebSocketServerSetup ) class Adapter(BaseAdapter): @override def __init__(self, driver: Driver, **kwargs: Any): super().__init__(driver, **kwargs) self.adapter_config: Config = get_plugin_config(Config) self.setup() def setup(self) -> None: if not isinstance(self.driver, ASGIMixin): raise RuntimeError( f\\\"Current driver {self.config.driver} doesn't support asgi server!\\\" f\\\"{self.get_name()} Adapter need a asgi server driver to work.\\\" ) # 建立服务端路由 # HTTP Webhook 路由 http_setup = HTTPServerSetup( URL(\\\"your_webhook_url\\\"), # 路由地址 \\\"POST\\\", # 接收的方法 \\\"WEBHOOK name\\\", # 路由名称 self._handle_http, # 处理函数 ) self.setup_http_server(http_setup) # 反向 Websocket 路由 ws_setup = WebSocketServerSetup( URL(\\\"your_websocket_url\\\"), # 路由地址 \\\"WebSocket name\\\", # 路由名称 self._handle_ws, # 处理函数 ) self.setup_websocket_server(ws_setup) async def _handle_http(self, request: Request) -> Response: \\\"\\\"\\\"HTTP 路由处理函数，只有一个类型为 Request 的参数，且返回值类型为 Response\\\"\\\"\\\" ... return Response( status_code=200, # 状态码 headers={\\\"something\\\": \\\"something\\\"}, # 响应头 content=\\\"xxx\\\", # 响应内容 ) async def _handle_ws(self, websocket: WebSocket) -> Any: \\\"\\\"\\\"WebSocket 路由处理函数，只有一个类型为 WebSocket 的参数\\\"\\\"\\\" ...\",\"更多通信交互方式可以参考以下适配器：\",\"OneBot - WebSocket 客户端、WebSocket 服务端、HTTP WEBHOOK、HTTP POST\",\"QQGuild - WebSocket 服务端\",\"Telegram - HTTP WEBHOOK\"]},\"472\":{\"h\":\"建立 Bot 连接\",\"t\":[\"在与平台建立连接后，我们需要将 Bot 实例化，并调用适配器提供的的 bot_connect 方法告知 NoneBot 建立了 Bot 连接。在与平台断开连接或出现某些异常进行重连时，我们需要调用 bot_disconnect 方法告知 NoneBot 断开了 Bot 连接。\",\"from .bot import Bot class Adapter(BaseAdapter): def _handle_connect(self): bot_id = ... # 通过配置或者平台 API 等方式，获取到 Bot 的 ID bot = Bot(self, self_id=bot_id) # 实例化 Bot self.bot_connect(bot) # 建立 Bot 连接 def _handle_disconnect(self): self.bot_disconnect(bot) # 断开 Bot 连接\"]},\"473\":{\"h\":\"转换 Event 事件\",\"t\":[\"在接收到来自平台的事件数据后，我们需要将其转为适配器的 Event，并调用 Bot 的 handle_event 方法来让 Bot 对事件进行处理：\",\"import asyncio from typing import Any, Dict from nonebot.compat import type_validate_python from .bot import Bot from .event import Event from .log import log class Adapter(BaseAdapter): @classmethod def payload_to_event(cls, payload: Dict[str, Any]) -> Event: \\\"\\\"\\\"根据平台事件的特性，转换平台 payload 为具体 Event Event 模型继承自 pydantic.BaseModel，具体请参考 pydantic 文档 \\\"\\\"\\\" # 做一层异常处理，以应对平台事件数据的变更 try: return type_validate_python(your_event_class, payload) except Exception as e: # 无法正常解析为具体 Event 时，给出日志提示 log( \\\"WARNING\\\", f\\\"Parse event error: {str(payload)}\\\", ) # 也可以尝试转为基础 Event 进行处理 return type_validate_python(Event, payload) async def _forward(self, bot: Bot): payload: Dict[str, Any] # 接收到的事件数据 event = self.payload_to_event(payload) # 让 bot 对事件进行处理 asyncio.create_task(bot.handle_event(event))\"]},\"474\":{\"h\":\"调用平台 API\",\"t\":[\"我们需要实现 Adapter 的 _call_api 方法，使开发者能够调用平台提供的 API。如果通过 WebSocket 通信可以通过 send 方法来发送数据，如果采用 HTTP 请求，则需要通过 NoneBot 提供的 Request 对象，调用 driver 的 request 方法来发送请求。\",\"from typing import Any from typing_extensions import override from nonebot.drivers import Request, WebSocket from .bot import Bot class Adapter(BaseAdapter): @override async def _call_api(self, bot: Bot, api: str, **data: Any) -> Any: log(\\\"DEBUG\\\", f\\\"Calling API <y>{api}</y>\\\") # 给予日志提示 platform_data = your_handle_data_method(data) # 自行将数据转为平台所需要的格式 # 采用 HTTP 请求的方式，需要构造一个 Request 对象 request = Request( method=\\\"GET\\\", # 请求方法 url=api, # 接口地址 headers=..., # 请求头，通常需要包含鉴权信息 params=platform_data, # 自行处理数据的传输形式 # json=platform_data, # data=platform_data, ) # 发送请求，返回结果 return await self.driver.request(request) # 采用 WebSocket 通信的方式，可以直接调用 send 方法发送数据 # 通过某种方式获取到 bot 对应的 websocket 对象 ws: WebSocket = your_get_websocket_method(bot.self_id) await ws.send_text(platform_data) # 发送 str 类型的数据 await ws.send_bytes(platform_data) # 发送 bytes 类型的数据 await ws.send(platform_data) # 是以上两种方式的合体 # 接收并返回结果，同样的，也有 str 和 bytes 的区别 return await ws.receive_text() return await ws.receive_bytes() return await ws.receive()\",\"调用平台 API 实现方式具体可以参考以下适配器：\",\"Websocket:\",\"OneBot V11\",\"OneBot V12\",\"HTTP:\",\"QQ 频道\",\"Telegram\",\"飞书\"]},\"475\":{\"h\":\"Bot\",\"t\":[\"Bot 是机器人开发者能够直接获取并使用的核心对象，负责存储平台机器人相关信息，并提供回复事件、调用 API 的上层方法。我们需要继承基类 Bot，并实现相关方法：\",\"from typing import TYPE_CHECKING, Any, Union from typing_extensions import override from nonebot.message import handle_event from nonebot.adapters import Bot as BaseBot from .event import Event from .message import Message, MessageSegment if TYPE_CHECKING: from .adapter import Adapter class Bot(BaseBot): \\\"\\\"\\\" your_adapter_name 协议 Bot 适配。 \\\"\\\"\\\" @override def __init__(self, adapter: Adapter, self_id: str, **kwargs: Any): super().__init__(adapter, self_id) self.adapter: Adapter = adapter # 一些有关 Bot 的信息也可以在此定义和存储 async def handle_event(self, event: Event): # 根据需要，对事件进行某些预处理，例如： # 检查事件是否和机器人有关操作，去除事件消息首尾的 @bot # 检查事件是否有回复消息，调用平台 API 获取原始消息的消息内容 ... # 调用 handle_event 让 NoneBot 对事件进行处理 await handle_event(self, event) @override async def send( self, event: Event, message: Union[str, Message, MessageSegment], **kwargs: Any, ) -> Any: # 根据平台实现 Bot 回复事件的方法 # 将消息处理为平台所需的格式后，调用发送消息接口进行发送，例如： data = message_to_platform_data(message) await self.send_message( data=data, ... )\"]},\"476\":{\"h\":\"Event\",\"t\":[\"Event 是 NoneBot 中的事件主体对象，所有平台消息在进入处理流程前需要转换为 NoneBot 事件。我们需要继承基类 Event，并实现相关方法：\",\"from typing_extensions import override from nonebot.compat import model_dump from nonebot.adapters import Event as BaseEvent class Event(BaseEvent): @override def get_event_name(self) -> str: # 返回事件的名称，用于日志打印 return \\\"event name\\\" @override def get_event_description(self) -> str: # 返回事件的描述，用于日志打印，请注意转义 loguru tag return escape_tag(repr(model_dump(self))) @override def get_message(self): # 获取事件消息的方法，根据事件具体实现，如果事件非消息类型事件，则抛出异常 raise ValueError(\\\"Event has no message!\\\") @override def get_user_id(self) -> str: # 获取用户 ID 的方法，根据事件具体实现，如果事件没有用户 ID，则抛出异常 raise ValueError(\\\"Event has no context!\\\") @override def get_session_id(self) -> str: # 获取事件会话 ID 的方法，根据事件具体实现，如果事件没有相关 ID，则抛出异常 raise ValueError(\\\"Event has no context!\\\") @override def is_tome(self) -> bool: # 判断事件是否和机器人有关 return False\",\"然后根据平台消息的类型，编写各种不同的事件，并且注意要根据事件类型实现 get_type 方法，具体请参考事件类型。消息类型事件还应重写 get_message 和 get_user_id 等方法，例如：\",\"from .message import Message class HeartbeatEvent(Event): \\\"\\\"\\\"心跳时间，通常为元事件\\\"\\\"\\\" @override def get_type(self) -> str: return \\\"meta_event\\\" class MessageEvent(Event): \\\"\\\"\\\"消息事件\\\"\\\"\\\" message_id: str user_id: str @override def get_type(self) -> str: return \\\"message\\\" @override def get_message(self) -> Message: # 返回事件消息对应的 NoneBot Message 对象 return self.message @override def get_user_id(self) -> str: return self.user_id class JoinRoomEvent(Event): \\\"\\\"\\\"加入房间事件，通常为通知事件\\\"\\\"\\\" user_id: str room_id: str @override def get_type(self) -> str: return \\\"notice\\\" class ApplyAddFriendEvent(Event): \\\"\\\"\\\"申请添加好友事件，通常为请求事件\\\"\\\"\\\" user_id: str @override def get_type(self) -> str: return \\\"request\\\"\"]},\"477\":{\"h\":\"Message\",\"t\":[\"Message 负责正确序列化消息，以便机器人插件处理。我们需要继承 MessageSegment 和 Message 两个类，并实现相关方法：\",\"from typing import Type, Iterable from typing_extensions import override from nonebot.utils import escape_tag from nonebot.adapters import Message as BaseMessage from nonebot.adapters import MessageSegment as BaseMessageSegment class MessageSegment(BaseMessageSegment[\\\"Message\\\"]): @classmethod @override def get_message_class(cls) -> Type[\\\"Message\\\"]: # 返回适配器的 Message 类型本身 return Message @override def __str__(self) -> str: # 返回该消息段的纯文本表现形式，通常在日志中展示 return \\\"text of MessageSegment\\\" @override def is_text(self) -> bool: # 判断该消息段是否为纯文本 return self.type == \\\"text\\\" class Message(BaseMessage[MessageSegment]): @classmethod @override def get_segment_class(cls) -> Type[MessageSegment]: # 返回适配器的 MessageSegment 类型本身 return MessageSegment @staticmethod @override def _construct(msg: str) -> Iterable[MessageSegment]: # 实现从字符串中构造消息数组，如无字符串嵌入格式可直接返回文本类型 MessageSegment ...\",\"然后根据平台具体的消息类型，来实现各种 MessageSegment 消息段，具体可以参考以下适配器：\",\"OneBot\",\"QQGuild\",\"Telegram\"]},\"478\":{\"h\":\"适配器测试\",\"t\":[\"关于适配器测试相关内容在这里不再展开，开发者可以根据需要进行合适的测试。这里为开发者提供几个常见问题的解决方法：\",\"在测试中无法导入 editable 模式安装的适配器代码。在 pytest 的 conftest.py 内添加如下代码：\",\"from pathlib import Path import nonebot.adapters nonebot.adapters.__path__.append( # type: ignore str((Path(__file__).parent.parent / \\\"nonebot\\\" / \\\"adapters\\\").resolve()) )\",\"需要计算适配器测试覆盖率，请在 pyproject.toml 中添加 pytest 配置：\",\"[tool.pytest.ini_options] addopts = \\\"--cov nonebot/adapters/{adapter-name} --cov-report term-missing\\\"\"]},\"479\":{\"h\":\"后续工作\",\"t\":[\"在完成适配器代码的编写后，如果想要将适配器发布到 NoneBot 商店，我们需要将适配器发布到 PyPI 中，然后前往商店页面，切换到适配器页签，点击发布适配器按钮，填写适配器相关信息并提交。\",\"另外建议编写适配器文档或者一些插件开发示例，以便其他开发者使用我们的适配器。\"]},\"480\":{\"h\":\"暑期 2021\",\"t\":[\"开源软件供应链点亮计划 - 暑期 2021 是中国科学院软件研究所与 openEuler 社区共同举办的一项面向高校学生的暑期活动，旨在鼓励在校学生积极参与开源软件的开发维护，促进优秀开源软件社区的蓬勃发展。关于具体的活动规划、报名方式，请查看该活动的 官网 和 帮助文档。\",\"NoneBot 社区有幸作为开源社区参与了本次活动，下面列出了目前我们已经发布的项目，欢迎感兴趣的同学在上面给出的活动官网报名，或通过 contact@nonebot.dev 联系我们。\"]},\"481\":{\"h\":\"NoneBot v1\"},\"482\":{\"h\":\"更新 NoneBot v1 文档中的“指南”部分\",\"t\":[\"由于 NoneBot v1 和 aiocqhttp 最初基于的 QQ 机器人平台不再提供服务，CQHTTP 接口也转型且改名为 OneBot 标准，目前 NoneBot v1 文档的“指南”部分和 aiocqhttp 文档有部分过时内容需要更新。我们希望将其中与旧的机器人平台相关的内容改为基于 go-cqhttp 或通用的 OneBot 表述，同时对 NoneBot v1 的 awesome-bot 示例做一次全面检查，修改其中可能已经不可用的部分。\",\"难度：低\",\"导师：@cleoold\",\"产出要求\",\"修改“指南”文档和 aiocqhttp 文档中与旧的 QQ 机器人平台相关的部分\",\"检查 awesome-bot 示例是否有已经过时/不可用的地方，并更新/修复\",\"修改“图灵机器人”案例，使用其它 AI 聊天 API 提供商（需先做简单调研）\",\"技术要求\",\"熟悉 Python 编程语言及 asyncio 机制\",\"了解 Git 基本用法\",\"了解聊天机器人基本开发过程\",\"了解 VuePress 更佳\"]},\"483\":{\"h\":\"NoneBot v1 API 文档自动生成\",\"t\":[\"目前 NoneBot v1 的文档中“API”部分是手动编写的，在更新代码接口的同时需要手动更新文档，可能造成文档与代码不匹配，形成额外的维护成本。我们希望将 API 文档改为直接编写在 Python docstring 中，通过工具自动生成 API 文档。\",\"难度：中\",\"导师：@cleoold\",\"产出要求\",\"调研市面上常见的 Python API 文档生成工具\",\"在代码中补充 API 文档\",\"编写或应用开源工具自动生成 API 文档\",\"配置 GitHub Actions 或其它 CI 自动化构建和部署 API 文档\",\"技术要求\",\"熟悉 Python 编程语言及 asyncio 和 Type Hints\",\"了解 Git 基本用法\",\"了解 Sphinx 等文档生成工具更佳\",\"了解 GitHub Actions 等 CI 工具更佳\"]},\"484\":{\"h\":\"NoneBot v2\"},\"485\":{\"h\":\"NoneBot v2 自动化测试框架“NoneBug”\",\"t\":[\"在聊天机器人的开发过程中，一套自动化的测试机制是非常重要的，特别是对于 NoneBot 2 这类为大型机器人开发而设计的项目来说，需要手动测试每一个边际条件是非常痛苦的。我们希望能够开发一款基于 NoneBot 2 插件机制的自动化测试框架，为 NoneBot 2 用户提供一套易用便捷、高度灵活的自动化测试框架。\",\"难度：高\",\"导师：@yanyongyu\",\"产出要求\",\"调研现有的 Python 和其它语言集成测试框架\",\"设计 NoneBug 的用户 API 和实现方式\",\"实现 NoneBug 自动化测试框架\",\"编写详细的使用文档\",\"技术要求\",\"熟悉 Python 编程语言及 asyncio 和 Type Hints\",\"了解 Git 基本用法\",\"了解 NoneBot v2 的基本原理和使用方式\",\"了解主流的 Python 自动化测试框架\"]},\"486\":{\"h\":\"NoneBot v2 Telegram 适配器\",\"t\":[\"目前 NoneBot v2 已支持 OneBot、Mirai HTTP API、钉钉协议，社区反馈有更多的平台需求，希望能在 NoneBot v2 获得更多的跨平台支持，提高机器人的便携性。同时，我们也希望随着新平台加入，提升现有 NoneBot v2 核心代码的平台通用性。Telegram 是一款较为广泛使用的安全即时聊天软件，同时其官方提供了丰富的聊天机器人 API，因此我们希望为 NoneBot v2 编写一个 Telegram 适配器来支持 Telegram 机器人的开发。\",\"难度：中\",\"导师：@yanyongyu\",\"产出要求\",\"调研 Telegram Bot API 以及 WebHook 等官方接口\",\"编写 Telegram 适配器并能够使用\",\"代码遵守项目 Contributing 规范\",\"技术要求\",\"熟悉 Python 编程语言及 asyncio 和 Type Hints\",\"了解 Git 基本用法\",\"了解 Web 开发相关知识\",\"了解 Sphinx 等文档生成工具更佳\"]},\"487\":{\"h\":\"NoneBot v2 飞书适配器\",\"t\":[\"目前 NoneBot v2 已支持 OneBot、Mirai HTTP API、钉钉协议，社区反馈有更多的平台需求，希望能在 NoneBot v2 获得更多的跨平台支持，提高机器人的便携性。同时，我们也希望随着新平台加入，提升现有 NoneBot v2 核心代码的平台通用性。飞书是目前企业用户广泛使用的即时聊天和协作软件，其官方提供了丰富的聊天机器人 API，因此我们希望为 NoneBot v2 编写一个飞书适配器来支持飞书机器人的开发。\",\"难度：中\",\"导师：@yanyongyu\",\"产出要求\",\"调研飞书机器人 API 以及 WebHook 等官方接口\",\"编写飞书适配器并能够使用\",\"代码遵守项目 Contributing 规范\",\"技术要求\",\"熟悉 Python 编程语言及 asyncio 和 Type Hints\",\"了解 Git 基本用法\",\"了解 Web 开发相关知识\",\"了解 Sphinx 等文档生成工具更佳\"]},\"488\":{\"h\":\"OneBot\"},\"489\":{\"h\":\"设计 OneBot v12 接口标准\",\"t\":[\"目前的 OneBot 标准的 v11 版本仍然与 QQ 平台有较多耦合，我们希望在 v12 去掉与 QQ 耦合的历史包袱，形成一个通用的、可扩展的、易于使用的同时易于实现的聊天机器人接口标准。\",\"难度：中\",\"导师：@richardchien\",\"产出要求\",\"调研各聊天机器人平台的官方/非官方接口特点\",\"通用化 OneBot 核心 API，分离 QQ 特定的 API，去掉无用 API\",\"优化现有的通信、消息表示机制\",\"补充 QQ 特定的缺失 API\",\"文档需符合风格指南\",\"技术要求\",\"熟悉至少两个聊天平台的聊天机器人开发\",\"了解 Git 基本用法\",\"了解使用不同语言编写聊天机器人时的常用实践\",\"对文档的优雅性与美观性有追求更佳\"]},\"490\":{\"h\":\"实现 Rust 版 libonebot\",\"t\":[\"目前最常用的 OneBot 实现包括 go-cqhttp、onebot-kotlin、node-onebot 等，这些实现都各自重复实现了 Web 通信、消息解析、配置读写等功能，当社区中的开发者想针对一个新的聊天平台实现 OneBot 时，他们往往同样需要再次实现类似逻辑。我们希望使用 Rust 编写一个 libonebot 模块，该模块实现所有 OneBot 实现所共享的功能，从而方便其他开发者们使用 Rust 快速编写具体的 OneBot 实现。同时，我们希望借此项目在聊天机器人社区中推广 Rust 编程语言。\",\"注：这里的逻辑是 libonebot + 针对某聊天平台的对接代码 = 某聊天平台的 OneBot 实现，libonebot 要做的是让 OneBot 实现的开发者只需编写针对特定聊天平台的对接代码，而无需关心 OneBot 标准定义的通信方式、消息格式等。\",\"难度：高\",\"导师：@richardchien\",\"产出要求\",\"实现所有 OneBot 实现所共享的功能，包括 Web 通信、消息解析、配置读写等\",\"充分考虑同时兼容 OneBot v11 和 v12 接口\",\"能够根据用户（OneBot 实现的开发者）所实现的接口自动实现类似 get_available_apis 等接口\",\"编写详细的使用文档\",\"如果可能，与 v12 设计项目联动，实现第一手 v12 支持\",\"技术要求\",\"熟悉聊天机器人开发\",\"熟悉 Rust Web 开发\"]},\"491\":{\"h\":\"实现自选语言版 libonebot\",\"t\":[\"目前最常用的 OneBot 实现包括 go-cqhttp、onebot-kotlin、node-onebot 等，这些实现都各自重复实现了 Web 通信、消息解析、配置读写等功能，当社区中的开发者想针对一个新的聊天平台实现 OneBot 时，他们往往同样需要再次实现类似逻辑。我们希望使用 Python、Go、Kotlin、Node、PHP、C#.NET 等主流语言（任选一个）编写 libonebot 模块，该模块实现所有 OneBot 实现所共享的功能，从而方便其他开发者们使用对应语言快速编写具体的 OneBot 实现。\",\"注：这里的逻辑是 libonebot + 针对某聊天平台的对接代码 = 某聊天平台的 OneBot 实现，libonebot 要做的是让 OneBot 实现的开发者只需编写针对特定聊天平台的对接代码，而无需关心 OneBot 标准定义的通信方式、消息格式等。\",\"难度：中\",\"导师：@richardchien\",\"产出要求\",\"实现所有 OneBot 实现所共享的功能，包括 Web 通信、消息解析、配置读写等\",\"充分考虑同时兼容 OneBot v11 和 v12 接口\",\"编写详细的使用文档\",\"如果可能，实现更多附加特性，如根据用户（OneBot 实现的开发者）所实现的接口自动实现类似 get_available_apis 等接口、实现第一手 v12 支持等\",\"技术要求\",\"熟悉聊天机器人开发\",\"熟悉所选语言的 Web 开发\"]},\"492\":{\"h\":\"暑期 2022\",\"t\":[\"开源之夏 - 暑期 2022 是由开源软件供应链点亮计划发起、由中国科学院软件研究所与 openEuler 社区主办的一项面向高校学生的暑期活动，类似 Google Summer of Code（GSoC），旨在鼓励在校学生积极参与开源软件的开发维护，促进优秀开源软件社区的蓬勃发展。关于具体的活动规划、报名方式，请查看该活动的 官网 和 帮助文档。\",\"NoneBot 社区有幸作为开源社区 参与 了本次活动，下面列出了目前我们已经发布的项目，欢迎感兴趣的同学加入 QQ 群 737131827 或通过 contact@nonebot.dev 联系我们。\"]},\"493\":{\"h\":\"NoneBot2 命令行 CLI 交互体验升级\",\"t\":[\"NoneBot2 为用户提供了命令行脚手架 ──nb-cli，辅助用户更好地上手项目以及进行开发。nb-cli 主要包括：创建项目、运行项目、安装与卸载插件、部署项目等功能。随着 NoneBot2 Beta 版本的发布，脚手架功能存在一定的定位不明确、功能体验不佳。本项目旨在重新设计 nb-cli 功能框架，完善功能，优化用户体验。\",\"难度：进阶\",\"导师：@yanyongyu\",\"产出要求\",\"设计 nb-cli 功能框架 \",\"明确各功能模块\",\"设计用户交互模式\",\"完成 nb-cli 主要功能代码 \",\"项目管理\",\"插件管理\",\"其它\",\"同步更新使用文档\",\"技术要求\",\"熟悉 Python 命令行交互代码编写\",\"熟悉 NoneBot2 框架功能\",\"熟悉 NoneBot2 项目组织方式\",\"成果仓库\",\"https://github.com/nonebot/nb-cli\",\"https://github.com/nonebot/nonebot2\"]},\"494\":{\"h\":\"NoneBot2 命令行即时交互通信设计与实现\",\"t\":[\"NoneBot2 在早期提供了基于网页的 nonebot-plugin-test 插件，无需平台适配接入即可对机器人进行测试，方便了开发者直观的感受机器人文本交互功能。我们希望提供一款基于命令行的适配器/驱动器，用于无平台适配接入、可以运行机器人的场景进行功能体验或测试。\",\"难度：进阶\",\"导师：@mnixry\",\"产出要求\",\"设计命令行与 NoneBot2 通信模式 \",\"直接调用/HTTP/WebSocket\",\"设计命令行交互界面\",\"实现相应适配器/驱动器\",\"同步更新使用说明文档\",\"技术要求\",\"熟悉 Python 命令行交互代码编写\",\"熟悉 NoneBot2 框架功能\",\"熟悉 NoneBot2 项目组织方式\",\"成果仓库\",\"https://github.com/nonebot/adapter-console\"]},\"495\":{\"h\":\"NoneBot2 用户上手与深入教程设计\",\"t\":[\"NoneBot2 为用户提供了详细的文档介绍，辅助用户更好的上手项目以及进行开发。文档分为基础与进阶两个部分。基础部分帮助新用户快速上手开发，主要包括：安装 NoneBot2、使用脚手架、创建配置项目、使用适配器、加载插件、定义消息事件、处理消息事件、调用平台 API 等。进阶部分向已经熟悉开发流程的用户介绍更多高级技巧，主要包括：NoneBot2 工作原理、定时任务、权限控制、钩子函数、跨插件访问、单元测试、发布插件等。目前文档对于用户而言过于费解，导致用户难以理解 NoneBot2 开发。本项目旨在优化文档内容，使其更加通俗易懂，不让文档成为用户上手的阻碍，同时完善进阶内容，让有更复杂需求的用户，同样能从文档中受益。\",\"相关 issue：\",\"https://github.com/nonebot/nonebot2/issues/793\",\"https://github.com/nonebot/nonebot2/issues/295\",\"难度：进阶\",\"导师：@SK-415\",\"产出要求\",\"文档通俗易懂 \",\"附有适当的图片指引（如 asciinema）\",\"内容完整，由浅入深\",\"适当的界面美化，合理分配布局\",\"技术要求\",\"熟悉文档结构组织与语言表达\",\"熟悉 NoneBot2 框架功能\",\"熟悉 NoneBot2 项目组织方式\",\"成果仓库\",\"https://github.com/nonebot/nonebot2\"]},\"496\":{\"h\":\"暑期 2023\",\"t\":[\"开源之夏 - 暑期 2023 是由开源软件供应链点亮计划发起、由中国科学院软件研究所与 openEuler 社区主办的一项面向高校学生的暑期活动，类似 Google Summer of Code（GSoC），旨在鼓励在校学生积极参与开源软件的开发维护，促进优秀开源软件社区的蓬勃发展。关于具体的活动规划、报名方式，请查看该活动的 官网 和 帮助文档。\",\"NoneBot 社区有幸作为开源社区 参与 了本次活动，下面列出了目前我们已经发布的项目，欢迎感兴趣的同学通过 contact@nonebot.dev 联系我们。\"]},\"497\":{\"h\":\"NoneBot 项目管理图形化面板\",\"t\":[\"NoneBot 目前提供了开箱即用的命令行脚手架来帮助初次使用的用户更快的上手编写应用。但是，对于未有一定开发经验的用户，命令行的使用仍具有一定的困难。此外，其他项目如 koishi、vue 等，均可通过图形化界面的形式为用户提供更便捷的项目开发。因此，我们希望借助现有命令行脚手架的可扩展特性，提供一个项目管理面板服务，以网页的形式帮助用户开发 NoneBot 应用。\",\"难度：进阶\",\"导师：@mnixry\",\"产出要求\",\"设计并实现项目管理面板相关功能 \",\"创建与管理项目\",\"配置与运行项目\",\"NoneBot 插件管理\",\"实现相应 nb-cli 插件提供面板服务\",\"代码符合 NoneBot Contributing 规范\",\"技术要求\",\"熟悉 nb-cli 相关功能\",\"熟悉 NoneBot 框架功能\",\"熟悉前后端相关实现方式\",\"成果仓库\",\"https://github.com/nonebot/cli-plugin-webui\"]},\"498\":{\"h\":\"NoneBot Discord 适配器\",\"t\":[\"NoneBot 作为一个跨平台聊天机器人框架，目前已有 OneBot、飞书、Telegram、QQ 频道等诸多平台的适配支持。作为众多用户期待的平台适配之一，我们希望借此机会接入 Discord 聊天机器人。\",\"难度：进阶\",\"导师：@iyume\",\"产出要求\",\"调研 Discord Bot 相关功能与接口\",\"设计与编写 NoneBot Discord 适配器\",\"代码符合 NoneBot Contributing 规范\",\"技术要求\",\"熟悉 NoneBot 框架功能\",\"熟悉 NoneBot 各模块职责与适配器编写\",\"成果仓库\",\"https://github.com/nonebot/adapter-discord\"]},\"499\":{\"h\":\"NoneBot 数据库支持插件\",\"t\":[\"NoneBot 的插件系统为用户实现应用提供了极高的便捷性，但因此也增加了插件统一管理的难度。目前，我们发现许多用户发布的插件中存在文件存储结构化数据、数据存放散乱等现象，同时插件间也可能产生冲突。因此，我们希望提供一个统一的数据存储与管理方式，便于用户读写应用数据。\",\"难度：进阶\",\"导师：@yanyongyu\",\"产出要求\",\"设计并实现 ORM 插件 \",\"提供关系模型定义功能\",\"提供模型迁移与管理功能\",\"能较好的支持 Python 类型检查与推导\",\"编写相应的用户使用文档\",\"代码符合 NoneBot Contributing 规范\",\"技术要求\",\"熟悉 NoneBot 框架功能与插件编写\",\"熟悉 SQLAlchemy 等 ORM 框架 \",\"熟悉 SQLAlchemy ORM\",\"熟悉 alembic 等迁移工具\",\"熟悉 nb-cli 插件编写\",\"成果仓库\",\"https://github.com/nonebot/plugin-orm\"]},\"500\":{\"h\":\"暑期 2024\",\"t\":[\"开源之夏 - 暑期 2024 是中国科学院软件研究所发起的开源软件供应链点亮计划系列暑期活动，旨在鼓励高校学生积极参与开源软件的开发维护，促进优秀开源软件社区的蓬勃发展。活动联合各大开源社区，针对重要开源软件的开发与维护提供项目开发任务，并向全球高校学生开放报名。关于具体的活动规划、报名方式，请查看该活动的 官网 和 帮助文档。\",\"NoneBot 社区有幸作为开源社区 参与 了本次活动，下面列出了目前我们已经发布的项目，欢迎感兴趣的同学通过 contact@nonebot.dev 联系我们。\"]},\"501\":{\"h\":\"NonePress 官网组件库更新与优化\",\"t\":[\"NoneBot 官网目前采用基于 TailwindCSS 自研的 NonePress 组件库及 Docusaurus 框架进行构建。由于相关依赖版本迭代迅速，目前官网组件库已产生了较大的版本落后。本项目希望在跟进框架新版本的基础上，对文档整体视觉体验进行重新设计，提升页面的无障碍访问性，基于 React Hydrate 特性实现完整的静态网站生成（SSG）以提升搜索引擎优化（SEO）水平。在解决以上问题的基础上，可对网页的开发以及生产构建性能做相应的优化提升，例如在生产构建使用自有的 webpack loader、替换现有的热重载逻辑以减少开发环境启动耗时等。\",\"难度：进阶\",\"导师：@yanyongyu\",\"产出要求\",\"基于 Docusaurus v3 重构 NonePress 组件库及相关插件 \",\"升级相关依赖并重新打造 Docusaurus theme（布局与组件）\",\"根据需求实现/修改 Docusaurus 插件使得官网内容构建正常\",\"能够提升页面渲染性能与 MDX 相关能力\",\"升级官网采用新版组件库 \",\"Algolia 索引与 SEO 正常\",\"桌面端与移动端显示正常\",\"优化官网开发与生产构建体验\",\"（可选）优化官网部分页面 \",\"优化官网过长的 changelog\",\"优化官网插件商店的展示细节\",\"技术要求\",\"熟练掌握 TS、PostCSS、TSX、MDX等相关技术\",\"掌握 React、Docusaurus、tailwind css 等框架\",\"熟悉静态网站生成 SSG、SEO 优化与 Algolia 索引原理等\",\"成果仓库\",\"https://github.com/nonebot/docusaurus-theme-nonepress\"]},\"502\":{\"h\":\"NoneFlow 社区自动化工作流管理优化\",\"t\":[\"NoneFlow 在 NoneBot 社区中承担着重要的角色，它由 NoneBot 框架基于 GitHub APP 编写而成，能够自动化的完成许多复杂流程的处理，如：用户请求提交插件到商店时进行自动化检测，并在人工审核通过后自动存储至 registry；定时自动更新 registry 内插件信息，跟进插件新版本情况等。但是，在长期的使用中发现了一些问题和不足的地方，例如：项目本身结构复杂耦合，添加新自动化流程与维护现有流程困难；目前采用了 GitHub 用户名作为插件作者名，但已有不少插件作者改名；插件存储至 registry 并定时更新，缺少统计相关信息以帮助商店更好的展示当前插件状态；插件作者想要修改插件信息时无法便捷的找到操作方式等。本项目希望针对以上问题与不足的地方进行修复与优化，提升用户体验。\",\"难度：进阶\",\"导师：@uy/sun\",\"产出要求\",\"重构现有工作流处理结构 \",\"整合现有 Issue、Pull Request、Git 相关操作\",\"提供用户修改信息的处理方式\",\"正确处理 PR 的 Open、Close、Draft 状态\",\"修复流程中存在的问题 \",\"插件作者名正确展示\",\"registry 定时更新中需要插件测试环境隔离\",\"在 registry 定时更新的同时提供统计数据\",\"技术要求\",\"掌握 GitHub APP 开发 \",\"熟悉 GitHub REST API、GraphQL 等\",\"熟悉 GitHub APP 权限限制\",\"熟悉 NoneBot 框架与 Python 相关技术\",\"熟悉 Git、GitHub Action、GitHub 工作流\",\"成果仓库\",\"https://github.com/nonebot/noneflow\"]},\"503\":{\"h\":\"NoneBlockly 低代码框架开发\",\"t\":[\"经过深入分析社区反馈，我们发现部分新手因不熟悉编程概念或框架本身而遇到问题。为了解决初学者在使用面向开发者的聊天机器人框架 NoneBot 时遇到的挑战，我们计划引入 Blockly 提供低代码编程支持。通过减少常见的编码错误和降低入门门槛，使框架对初学者更加友好，从而提升用户体验并有助于 NoneBot 生态的成长。本项目将基于 Blockly 实现 NoneBot 插件的低代码编写，使得用户能够快速搭建聊天机器人。\",\"难度：进阶\",\"导师：@mnixry\",\"产出要求\",\"实现 NoneBlockly 低代码开发框架 \",\"能够基于 Alconna 编写跨平台插件\",\"确保插件对 Python 和 NoneBot 版本的兼容性\",\"支持对多种类型 NoneBot 事件的响应\",\"支持对 NoneBot 消息对象的便捷操作\",\"集成 localstore 文件存储、apscheduler 定时任务、网络请求等常用功能\",\"对接 NB-CLI 脚手架，通过脚手架扩展使用低代码框架\",\"技术要求\",\"掌握 Python 与 NoneBot 框架的使用 \",\"熟悉 NoneBot 插件的开发，包括事件响应与消息处理等\",\"熟悉 NoneBot 生态组件（Alconna、localstore、apscheduler等）的使用\",\"了解 NB-CLI 脚手架的扩展开发\",\"熟悉 Blockly 低代码框架的使用和开发\",\"成果仓库\",\"https://github.com/nonebot/noneblockly\"]},\"504\":{\"h\":\"手动创建项目\",\"t\":[\"在快速上手中，我们已经介绍了如何安装和使用 nb-cli 创建一个项目。在本章节中，我们将简要介绍如何在不使用 nb-cli 的方式创建一个机器人项目的最小实例并启动。如果你想要了解 NoneBot 的启动流程，也可以阅读本章节。\",\"警告\",\"我们十分不推荐直接创建机器人项目，请优先考虑使用 nb-cli 进行项目创建。\",\"一个机器人项目的最小实例中至少需要包含以下内容:\",\"入口文件：初始化并运行机器人的 Python 文件\",\"配置文件：存储机器人启动所需的配置\",\"插件：为机器人提供具体的功能\",\"下面我们创建一个项目文件夹，来存放项目所需文件，以下步骤均在该文件夹中进行。\"]},\"505\":{\"h\":\"安装依赖\",\"t\":[\"在创建项目前，我们首先需要将项目所需依赖安装至环境中。\",\"（可选）创建虚拟环境，以 venv 为例\",\"python -m venv .venv --prompt nonebot2 # windows .venv\\\\Scripts\\\\activate # linux/macOS source .venv/bin/activate\",\"安装 nonebot2 以及驱动器\",\"pip install 'nonebot2[fastapi]'\",\"驱动器包名可以在 驱动器商店 中找到。\",\"安装适配器\",\"pip install nonebot-adapter-console\",\"适配器包名可以在 适配器商店 中找到。\"]},\"506\":{\"h\":\"创建配置文件\",\"t\":[\"配置文件用于存放 NoneBot 运行所需要的配置项，使用 pydantic 以及 python-dotenv 来读取配置。配置项需符合 dotenv 格式，复杂类型数据需使用 JSON 格式填写。具体可选配置方式以及配置项详情参考配置。\",\"在项目文件夹中创建一个 .env 文本文件，并写入以下内容:\",\"HOST=0.0.0.0 # 配置 NoneBot 监听的 IP / 主机名 PORT=8080 # 配置 NoneBot 监听的端口 COMMAND_START=[\\\"/\\\"] # 配置命令起始字符 COMMAND_SEP=[\\\".\\\"] # 配置命令分割字符\"]},\"507\":{\"h\":\"创建入口文件\",\"t\":[\"入口文件（ Entrypoint ）顾名思义，是用来初始化并运行机器人的 Python 文件。入口文件需要完成框架的初始化、注册适配器、加载插件等工作。\",\"提示\",\"如果你使用 nb-cli 创建项目，入口文件不会被创建，该文件功能会被 nb run 命令代替。\",\"在项目文件夹中创建一个 bot.py 文件，并写入以下内容:\",\"import nonebot from nonebot.adapters.console import Adapter as ConsoleAdapter # 避免重复命名 # 初始化 NoneBot nonebot.init() # 注册适配器 driver = nonebot.get_driver() driver.register_adapter(ConsoleAdapter) # 在这里加载插件 nonebot.load_builtin_plugins(\\\"echo\\\") # 内置插件 # nonebot.load_plugin(\\\"thirdparty_plugin\\\") # 第三方插件 # nonebot.load_plugins(\\\"awesome_bot/plugins\\\") # 本地插件 if __name__ == \\\"__main__\\\": nonebot.run()\",\"我们暂时不需要了解其中内容的含义，这些将会在稍后的章节中逐一介绍。在创建完成以上文件并确认已安装所需适配器和插件后，即可运行机器人。\"]},\"508\":{\"h\":\"运行机器人\",\"t\":[\"在项目文件夹中，使用配置好环境的 Python 解释器运行入口文件（如果使用虚拟环境，请先激活虚拟环境）:\",\"python bot.py\",\"如果你后续使用了 nb-cli ，你仍可以使用 nb run 命令来运行机器人，nb-cli 会自动检测入口文件 bot.py 是否存在并运行。\"]},\"509\":{\"h\":\"插件编写准备\",\"t\":[\"在正式编写插件之前，我们需要先了解一下插件的概念。\"]},\"510\":{\"h\":\"插件结构\",\"t\":[\"在 NoneBot 中，插件即是 Python 的一个模块（module）。NoneBot 会在导入时对这些模块做一些特殊的处理使得他们成为一个插件。插件间应尽量减少耦合，可以进行有限制的相互调用，NoneBot 能够正确解析插件间的依赖关系。\"]},\"511\":{\"h\":\"单文件插件\",\"t\":[\"一个普通的 .py 文件即可以作为一个插件，例如创建一个 foo.py 文件：\",\"📂 plugins └── 📜 foo.py\",\"这个时候模块 foo 已经可以被称为一个插件了，尽管它还什么都没做。\"]},\"512\":{\"h\":\"包插件\",\"t\":[\"一个包含 __init__.py 的文件夹即是一个常规 Python 包 package，例如创建一个 foo 文件夹：\",\"📂 plugins └── 📂 foo └── 📜 __init__.py\",\"这个时候包 foo 同样是一个合法的插件，插件内容可以在 __init__.py 文件中编写。\"]},\"513\":{\"h\":\"创建插件\",\"t\":[\"注意\",\"如果在之前的快速上手章节中已经使用 bootstrap 模板创建了项目，那么你需要做出如下修改：\",\"在项目目录中创建一个两层文件夹 awesome_bot/plugins\",\"📦 awesome-bot ├── 📂 awesome_bot │ └── 📂 plugins ├── 📜 pyproject.toml └── 📜 README.md\",\"修改 pyproject.toml 文件中的 nonebot 配置项，在 plugin_dirs 中添加 awesome_bot/plugins\",\"[tool.nonebot] plugin_dirs = [\\\"awesome_bot/plugins\\\"]\",\"注意\",\"如果在之前的创建项目章节中手动创建了相关文件，那么你需要做出如下修改：\",\"在项目目录中创建一个两层文件夹 awesome_bot/plugins\",\"📦 awesome-bot ├── 📂 awesome_bot │ └── 📂 plugins └── 📜 bot.py\",\"修改 bot.py 文件中的加载插件部分，取消注释或者添加如下代码\",\"# 在这里加载插件 nonebot.load_builtin_plugins(\\\"echo\\\") # 内置插件 nonebot.load_plugins(\\\"awesome_bot/plugins\\\") # 本地插件\",\"创建插件可以通过 nb-cli 命令从完整模板创建，也可以手动新建空白文件。通过以下命令创建一个名为 weather 的插件：\",\"$ nb plugin create [?] 插件名称: weather [?] 使用嵌套插件? (y/N) N [?] 输出目录: awesome_bot/plugins\",\"nb-cli 会在 awesome_bot/plugins 目录下创建一个名为 weather 的文件夹，其中包含的文件将在稍后章节中用到。\",\"📦 awesome-bot ├── 📂 awesome_bot │ └── 📂 plugins | └── 📂 foo | ├── 📜 __init__.py | └── 📜 config.py ├── 📜 pyproject.toml └── 📜 README.md\"]},\"514\":{\"h\":\"加载插件\",\"t\":[\"警告\",\"请勿在插件被加载前 import 插件模块，这会导致 NoneBot 无法将其转换为插件而出现意料之外的情况。\",\"加载插件是在机器人入口文件中完成的，需要在框架初始化之后，运行之前进行。\",\"请注意，加载的插件模块名称（插件文件名或文件夹名）不能相同，且每一个插件只能被加载一次，重复加载将会导致异常。\",\"如果你使用 nb-cli 管理插件，那么你可以跳过这一节，nb-cli 将会自动处理加载。\",\"如果你使用自定义的入口文件bot.py，那么你需要在 bot.py 中加载插件。\",\"import nonebot nonebot.init() # 加载插件 nonebot.run()\",\"加载插件的方式有多种，但在底层的加载逻辑是一致的。以下是为加载插件提供的几种方式：\"]},\"515\":{\"h\":\"\",\"t\":[\"通过点分割模块名称或使用 pathlib 的 Path 对象来加载插件。通常用于加载第三方插件或者项目插件。例如：\",\"from pathlib import Path nonebot.load_plugin(\\\"path.to.your.plugin\\\") # 加载第三方插件 nonebot.load_plugin(Path(\\\"./path/to/your/plugin.py\\\")) # 加载项目插件\",\"注意\",\"请注意，本地插件的路径应该为相对机器人 入口文件（通常为 bot.py） 可导入的，例如在项目 plugins 目录下。\"]},\"516\":{\"h\":\"\",\"t\":[\"加载传入插件目录中的所有插件，通常用于加载一系列本地编写的项目插件。例如：\",\"nonebot.load_plugins(\\\"src/plugins\\\", \\\"path/to/your/plugins\\\")\",\"注意\",\"请注意，插件目录应该为相对机器人 入口文件（通常为 bot.py） 可导入的，例如在项目 plugins 目录下。\"]},\"517\":{\"h\":\"\",\"t\":[\"这种加载方式是以上两种方式的混合，加载所有传入的插件模块名称，以及所有给定目录下的插件。例如：\",\"nonebot.load_all_plugins([\\\"path.to.your.plugin\\\"], [\\\"path/to/your/plugins\\\"])\"]},\"518\":{\"h\":\"\",\"t\":[\"通过 JSON 文件加载插件，是 load_all_plugins 的 JSON 变种。通过读取 JSON 文件中的 plugins 字段和 plugin_dirs 字段进行加载。例如：\",\"{ \\\"plugins\\\": [\\\"path.to.your.plugin\\\"], \\\"plugin_dirs\\\": [\\\"path/to/your/plugins\\\"] }\",\"nonebot.load_from_json(\\\"plugin_config.json\\\", encoding=\\\"utf-8\\\")\",\"提示\",\"如果 JSON 配置文件中的字段无法满足你的需求，可以使用 load_all_plugins 方法自行读取配置来加载插件。\"]},\"519\":{\"h\":\"\",\"t\":[\"通过 TOML 文件加载插件，是 load_all_plugins 的 TOML 变种。通过读取 TOML 文件中的 [tool.nonebot] Table 中的 plugins 和 plugin_dirs Array 进行加载。例如：\",\"[tool.nonebot] plugins = [\\\"path.to.your.plugin\\\"] plugin_dirs = [\\\"path/to/your/plugins\\\"]\",\"nonebot.load_from_toml(\\\"plugin_config.toml\\\", encoding=\\\"utf-8\\\")\",\"提示\",\"如果 TOML 配置文件中的字段无法满足你的需求，可以使用 load_all_plugins 方法自行读取配置来加载插件。\"]},\"520\":{\"h\":\"\",\"t\":[\"加载一个内置插件，传入的插件名必须为 NoneBot 内置插件。该方法是 load_plugin 的封装。例如：\",\"nonebot.load_builtin_plugin(\\\"echo\\\")\"]},\"521\":{\"h\":\"\",\"t\":[\"加载传入插件列表中的所有内置插件。例如：\",\"nonebot.load_builtin_plugins(\\\"echo\\\", \\\"single_session\\\")\"]},\"522\":{\"h\":\"其他加载方式\",\"t\":[\"有关其他插件加载的方式，可参考跨插件访问和嵌套插件。\"]},\"523\":{\"h\":\"机器人的构成\",\"t\":[\"了解机器人的基本构成有助于你更好地使用 NoneBot，本章节将介绍 NoneBot 中的基本组成部分，稍后的文档中将会使用到这些概念。\",\"使用 NoneBot 框架搭建的机器人具有以下几个基本组成部分：\",\"NoneBot 机器人框架主体：负责连接各个组成部分，提供基本的机器人功能\",\"驱动器 Driver：客户端/服务端的功能实现，负责接收和发送消息（通常为 HTTP 通信）\",\"适配器 Adapter：驱动器的上层，负责将平台消息与 NoneBot 事件/操作系统的消息格式相互转换\",\"插件 Plugin：机器人的功能实现，通常为负责处理事件并进行一系列的操作\",\"除 NoneBot 机器人框架主体外，其他部分均可按需选择、互相搭配，但由于平台的兼容性问题，部分插件可能仅在某些特定平台上可用（这由插件编写者决定）。\",\"在接下来的章节中，我们将重点介绍机器人功能实现，即插件 Plugin 部分。\"]},\"524\":{\"h\":\"事件响应器\",\"t\":[\"事件响应器（Matcher）是对接收到的事件进行响应的基本单元，所有的事件响应器都继承自 Matcher 基类。\",\"在 NoneBot 中，事件响应器可以通过一系列特定的规则筛选出具有某种特征的事件，并按照特定的流程交由预定义的事件处理依赖进行处理。例如，在快速上手中，我们使用了内置插件 echo ，它定义的事件响应器能响应机器人用户发送的“/echo hello world”消息，提取“hello world”信息并作为回复消息发送。\"]},\"525\":{\"h\":\"事件响应器辅助函数\",\"t\":[\"NoneBot 中所有事件响应器均继承自 Matcher 基类，但直接使用 Matcher.new() 方法创建事件响应器过于繁琐且不能记录插件信息。因此，NoneBot 中提供了一系列“事件响应器辅助函数”（下称“辅助函数”）来辅助我们用最简的方式创建带有不同规则预设的事件响应器，提高代码可读性和书写效率。通常情况下，我们只需要使用辅助函数即可完成事件响应器的创建。\",\"在 NoneBot 中，辅助函数以 on() 或 on_<type/rule>() 形式出现（例如 on_command()），调用后根据不同的参数返回一个 Type[Matcher] 类型的新事件响应器。\",\"目前 NoneBot 提供了多种功能各异的辅助函数、具有共同命令名称前缀的命令组以及具有共同参数的响应器组，均可以从 nonebot 模块直接导入使用，具体内容参考事件响应器进阶。\"]},\"526\":{\"h\":\"创建事件响应器\",\"t\":[\"在上一节创建插件中，我们创建了一个 weather 插件，现在我们来实现他的功能。\",\"我们直接使用 on_command() 辅助函数来创建一个事件响应器：\",\"from nonebot import on_command weather = on_command(\\\"天气\\\")\",\"这样，我们就获得一个名为 weather 的事件响应器了，这个事件响应器会对 /天气 开头的消息进行响应。\",\"提示\",\"如果一条消息中包含“@机器人”或以“机器人的昵称”开始，例如 @bot /天气 时，协议适配器会将 event.is_tome() 判断为 True ，同时也会自动去除 @bot，即事件响应器收到的信息内容为 /天气，方便进行命令匹配。\"]},\"527\":{\"h\":\"为事件响应器添加参数\",\"t\":[\"在辅助函数中，我们可以添加一些参数来对事件响应器进行更加精细的调整，例如事件响应器的优先级、匹配规则等。例如：\",\"from nonebot import on_command from nonebot.rule import to_me weather = on_command(\\\"天气\\\", rule=to_me(), aliases={\\\"weather\\\", \\\"查天气\\\"}, priority=10, block=True)\",\"这样，我们就获得了一个可以响应 天气、weather、查天气 三个命令，需要私聊或 @bot 时才会响应，优先级为 10 ，阻断事件传播的事件响应器了。这些内容的意义和使用方法将会在后续的章节中一一介绍。\",\"提示\",\"需要注意的是，不同的辅助函数有不同的可选参数，在使用之前可以参考事件响应器进阶或编辑器的提示。\"]},\"528\":{\"h\":\"处理消息\",\"t\":[\"在不同平台中，一条消息可能会有承载有各种不同的表现形式，它可能是一段纯文本、一张图片、一段语音、一篇富文本文章，也有可能是多种类型的组合等等。\",\"在 NoneBot 中，为确保消息的正常处理与跨平台兼容性，采用了扁平化的消息序列形式，即 Message 对象。消息序列是 NoneBot 中的消息载体，无论是接收还是发送的消息，都采用消息序列的形式进行处理。\"]},\"529\":{\"h\":\"认识消息类型\"},\"530\":{\"h\":\"消息序列\",\"t\":[\"在 NoneBot 中，消息序列 Message 的主要作用是用于表达“一串消息”。由于消息序列继承自 List[MessageSegment]，所以 Message 的本质是由若干消息段所组成的序列。因此，消息序列的使用方法与 List 有很多相似之处，例如切片、索引、拼接等。\",\"在上一节的使用依赖注入中，我们已经通过依赖注入 CommandArg() 获取了命令的参数，它的类型即是消息序列。我们使用了消息序列的 extract_plain_text() 方法来获取消息序列中的纯文本内容。\"]},\"531\":{\"h\":\"消息段\",\"t\":[\"顾名思义，消息段 MessageSegment 是一段消息。由于消息序列的本质是由若干消息段所组成的序列，消息段可以被认为是构成消息序列的最小单位。简单来说，消息序列类似于一个自然段，而消息段则是组成自然段的一句话。同时，作为特殊消息载体的存在，绝大多数的平台都有着独特的消息类型，这些独特的内容均需要由对应的协议适配器所提供，以适应不同平台中的消息模式。这也意味着，你需要导入对应的协议适配器中的消息序列和消息段后才能使用其特殊的工厂方法。\",\"注意\",\"消息段的类型是由协议适配器提供的，因此你需要参考协议适配器的文档并导入对应的消息段后才能使用其特殊的消息类型。\",\"在上一节的使用依赖注入中，我们导入的为 nonebot.adapters.Message 抽象基类，因此我们无法使用平台特有的消息类型。仅能使用 str 作为纯文本消息回复。\"]},\"532\":{\"h\":\"使用消息序列\",\"t\":[\"注意\",\"在以下的示例中，为了更好的理解多种类型的消息组成方式，我们将使用 Console 协议适配器来演示消息序列的使用方法。在实际使用中，你需要确保你使用的消息序列类型与你所要发送的平台类型一致。\",\"通常情况下，适配器在接收到消息时，会将消息转换为消息序列，可以通过依赖注入 EventMessage，或者使用 event.get_message() 获取。\",\"由于消息序列是 List[MessageSegment] 的子类，所以你总是可以用和操作 List 类似的方式来处理消息序列。例如：\",\">>> from nonebot.adapters.console import Message, MessageSegment >>> message = Message([ MessageSegment(type=\\\"text\\\", data={\\\"text\\\":\\\"hello\\\"}), MessageSegment(type=\\\"markdown\\\", data={\\\"markup\\\":\\\"**world**\\\"}), ]) >>> for segment in message: ... print(segment.type, segment.data) ... text {'text': 'hello'} markdown {'markup': '**world**'} >>> len(message) 2\"]},\"533\":{\"h\":\"构造消息序列\",\"t\":[\"在使用事件响应器操作发送消息时，既可以使用 str 作为消息，也可以使用 Message、MessageSegment 或者 MessageTemplate。那么，我们就需要先构造一个消息序列。消息序列可以通过多种方式构造：\"]},\"534\":{\"h\":\"直接构造\",\"t\":[\"Message 类可以直接实例化，支持 str、MessageSegment、Iterable[MessageSegment] 或适配器自定义类型的参数。\",\"from nonebot.adapters.console import Message, MessageSegment # str Message(\\\"Hello, world!\\\") # MessageSegment Message(MessageSegment.text(\\\"Hello, world!\\\")) # List[MessageSegment] Message([MessageSegment.text(\\\"Hello, world!\\\")])\"]},\"535\":{\"h\":\"运算构造\",\"t\":[\"Message 对象可以通过 str、MessageSegment 相加构造，详情请参考拼接消息。\"]},\"536\":{\"h\":\"从字典数组构造\",\"t\":[\"Message 对象支持 Pydantic 自定义类型构造，可以使用 Pydantic 的 TypeAdapter 方法进行构造。\",\"from pydantic import TypeAdapter from nonebot.adapters.console import Message, MessageSegment # 由字典构造消息段 TypeAdapter(MessageSegment).validate_python( {\\\"type\\\": \\\"text\\\", \\\"data\\\": {\\\"text\\\": \\\"text\\\"}} ) == MessageSegment.text(\\\"text\\\") # 由字典数组构造消息序列 TypeAdapter(Message).validate_python( [MessageSegment.text(\\\"text\\\"), {\\\"type\\\": \\\"text\\\", \\\"data\\\": {\\\"text\\\": \\\"text\\\"}}], ) == Message([MessageSegment.text(\\\"text\\\"), MessageSegment.text(\\\"text\\\")])\"]},\"537\":{\"h\":\"获取消息纯文本\",\"t\":[\"由于消息中存在各种类型的消息段，因此 str(message) 通常不能得到消息的纯文本，而是一个消息序列的字符串表示。\",\"NoneBot 为消息段定义了一个方法 is_text() ，可以用于判断消息段是否为纯文本；也可以使用 message.extract_plain_text() 方法获取消息纯文本。\",\"from nonebot.adapters.console import Message, MessageSegment # 判断消息段是否为纯文本 MessageSegment.text(\\\"text\\\").is_text() == True # 提取消息纯文本字符串 Message( [MessageSegment.text(\\\"text\\\"), MessageSegment.markdown(\\\"**markup**\\\")] ).extract_plain_text() == \\\"text\\\"\"]},\"538\":{\"h\":\"遍历\",\"t\":[\"消息序列继承自 List[MessageSegment] ，因此可以使用 for 循环遍历消息段。\",\"for segment in message: ...\"]},\"539\":{\"h\":\"比较\",\"t\":[\"消息和消息段都可以使用 == 或 != 运算符比较是否相同。\",\"MessageSegment.text(\\\"text\\\") != MessageSegment.text(\\\"foo\\\") some_message == Message([MessageSegment.text(\\\"text\\\")])\"]},\"540\":{\"h\":\"检查消息段\",\"t\":[\"我们可以通过 in 运算符或消息序列的 has 方法来：\",\"# 是否存在消息段 MessageSegment.text(\\\"text\\\") in message # 是否存在指定类型的消息段 \\\"text\\\" in message\",\"我们还可以使用消息序列的 only 方法来检查消息中是否仅包含指定的消息段。\",\"# 是否都为指定消息段 message.only(MessageSegment.text(\\\"test\\\")) # 是否仅包含指定类型的消息段 message.only(\\\"text\\\")\"]},\"541\":{\"h\":\"过滤、索引与切片\",\"t\":[\"消息序列对列表的索引与切片进行了增强，在原有列表 int 索引与 slice 切片的基础上，支持 type 过滤索引与切片。\",\"from nonebot.adapters.console import Message, MessageSegment message = Message( [ MessageSegment.text(\\\"test\\\"), MessageSegment.markdown(\\\"test2\\\"), MessageSegment.markdown(\\\"test3\\\"), MessageSegment.text(\\\"test4\\\"), ] ) # 索引 message[0] == MessageSegment.text(\\\"test\\\") # 切片 message[0:2] == Message( [MessageSegment.text(\\\"test\\\"), MessageSegment.markdown(\\\"test2\\\")] ) # 类型过滤 message[\\\"markdown\\\"] == Message( [MessageSegment.markdown(\\\"test2\\\"), MessageSegment.markdown(\\\"test3\\\")] ) # 类型索引 message[\\\"markdown\\\", 0] == MessageSegment.markdown(\\\"test2\\\") # 类型切片 message[\\\"markdown\\\", 0:2] == Message( [MessageSegment.markdown(\\\"test2\\\"), MessageSegment.markdown(\\\"test3\\\")] )\",\"我们也可以通过消息序列的 include、exclude 方法进行类型过滤。\",\"message.include(\\\"text\\\", \\\"markdown\\\") message.exclude(\\\"text\\\")\",\"同样的，消息序列对列表的 index、count 方法也进行了增强，可以用于索引指定类型的消息段。\",\"# 指定类型首个消息段索引 message.index(\\\"markdown\\\") == 1 # 指定类型消息段数量 message.count(\\\"markdown\\\") == 2\",\"此外，消息序列添加了一个 get 方法，可以用于获取指定类型指定个数的消息段。\",\"# 获取指定类型指定个数的消息段 message.get(\\\"markdown\\\", 1) == Message([MessageSegment.markdown(\\\"test2\\\")])\"]},\"542\":{\"h\":\"拼接消息\",\"t\":[\"str、Message、MessageSegment 对象之间可以直接相加，相加均会返回一个新的 Message 对象。\",\"# 消息序列与消息段相加 Message([MessageSegment.text(\\\"text\\\")]) + MessageSegment.text(\\\"text\\\") # 消息序列与字符串相加 Message([MessageSegment.text(\\\"text\\\")]) + \\\"text\\\" # 消息序列与消息序列相加 Message([MessageSegment.text(\\\"text\\\")]) + Message([MessageSegment.text(\\\"text\\\")]) # 字符串与消息序列相加 \\\"text\\\" + Message([MessageSegment.text(\\\"text\\\")]) # 消息段与消息段相加 MessageSegment.text(\\\"text\\\") + MessageSegment.text(\\\"text\\\") # 消息段与字符串相加 MessageSegment.text(\\\"text\\\") + \\\"text\\\" # 消息段与消息序列相加 MessageSegment.text(\\\"text\\\") + Message([MessageSegment.text(\\\"text\\\")]) # 字符串与消息段相加 \\\"text\\\" + MessageSegment.text(\\\"text\\\")\",\"如果需要在当前消息序列后直接拼接新的消息段，可以使用 Message.append、Message.extend 方法，或者使用自加。\",\"msg = Message([MessageSegment.text(\\\"text\\\")]) # 自加 msg += \\\"text\\\" msg += MessageSegment.text(\\\"text\\\") msg += Message([MessageSegment.text(\\\"text\\\")]) # 附加 msg.append(\\\"text\\\") msg.append(MessageSegment.text(\\\"text\\\")) # 扩展 msg.extend([MessageSegment.text(\\\"text\\\")])\",\"我们也可以通过消息段或消息序列的 join 方法来拼接一串消息：\",\"seg = MessageSegment.text(\\\"text\\\") msg = seg.join( [ MessageSegment.text(\\\"first\\\"), Message( [ MessageSegment.text(\\\"second\\\"), MessageSegment.text(\\\"third\\\"), ] ) ] ) msg == Message( [ MessageSegment.text(\\\"first\\\"), MessageSegment.text(\\\"text\\\"), MessageSegment.text(\\\"second\\\"), MessageSegment.text(\\\"third\\\"), ] )\"]},\"543\":{\"h\":\"使用消息模板\",\"t\":[\"为了提供安全可靠的跨平台模板字符，我们提供了一个消息模板功能来构建消息序列\",\"它在以下常见场景中尤其有用：\",\"多行富文本编排（包含图片，文字以及表情等）\",\"客制化（由 Bot 最终用户提供消息模板时）\",\"在事实上，它的用法和 str.format 极为相近，所以你在使用的时候，总是可以参考Python 文档来达到你想要的效果，这里给出几个简单的例子。\",\"默认情况下，消息模板采用 str 纯文本形式的格式化：\",\">>> from nonebot.adapters import MessageTemplate >>> MessageTemplate(\\\"{} {}\\\").format(\\\"hello\\\", \\\"world\\\") 'hello world'\",\"如果 Message.template 构建消息模板，那么消息模板将采用消息序列形式的格式化，此时的消息将会是平台特定的：\",\"注意\",\"使用 Message.template 构建消息模板时，应注意消息序列为平台适配器提供的类型，不能使用 nonebot.adapters.Message 基类作为模板构建。使用基类构建模板与使用 str 构建模板的效果是一样的，因此请使用上述的 MessageTemplate 类直接构建模板。：\",\">>> from nonebot.adapters.console import Message, MessageSegment >>> Message.template(\\\"{} {}\\\").format(\\\"hello\\\", \\\"world\\\") Message( MessageSegment.text(\\\"hello\\\"), MessageSegment.text(\\\" \\\"), MessageSegment.text(\\\"world\\\") )\",\"消息模板支持使用消息段进行格式化：\",\">>> from nonebot.adapters.console import Message, MessageSegment >>> Message.template(\\\"{}{}\\\").format(MessageSegment.markdown(\\\"**markup**\\\"), \\\"world\\\") Message( MessageSegment(type='markdown', data={'markup': '**markup**'}), MessageSegment(type='text', data={'text': 'world'}) )\",\"消息模板同样支持使用消息序列作为模板：\",\">>> from nonebot.adapters.console import Message, MessageSegment >>> Message.template( ... MessageSegment.text(\\\"{user_id}\\\") + MessageSegment.emoji(\\\"tada\\\") + ... MessageSegment.text(\\\"{message}\\\") ... ).format_map({\\\"user_id\\\": 123456, \\\"message\\\": \\\"hello world\\\"}) Message( MessageSegment(type='text', data={'text': '123456'}), MessageSegment(type='emoji', data={'emoji': 'tada'}), MessageSegment(type='text', data={'text': 'hello world'}) )\",\"注意\",\"只有消息序列中的文本类型消息段才能被格式化，其他类型的消息段将会原样添加。\",\"消息模板支持使用拓展控制符来控制消息段类型：\",\">>> from nonebot.adapters.console import Message, MessageSegment >>> Message.template(\\\"{name:emoji}\\\").format(name='tada') Message(MessageSegment(type='emoji', data={'name': 'tada'}))\"]},\"544\":{\"h\":\"使用适配器\",\"t\":[\"适配器 (Adapter) 是机器人与平台交互的核心桥梁，它负责在驱动器和机器人插件之间转换与传递消息。\"]},\"545\":{\"h\":\"适配器功能与组成\",\"t\":[\"适配器通常有两种功能，分别是接收事件和调用平台接口。其中，接收事件是指将驱动器收到的事件消息转换为 NoneBot 定义的事件模型，然后交由机器人插件处理；调用平台接口是指将机器人插件调用平台接口的数据转换为平台指定的格式，然后交由驱动器发送，并接收接口返回数据。\",\"为了实现这两种功能，适配器通常由四个部分组成：\",\"Adapter：负责转换事件和调用接口，正确创建 Bot 对象并注册到 NoneBot 中。\",\"Bot：负责存储平台机器人相关信息，并提供回复事件的方法。\",\"Event：负责定义事件内容，以及事件主体对象。\",\"Message：负责正确序列化消息，以便机器人插件处理。\"]},\"546\":{\"h\":\"注册适配器\",\"t\":[\"在使用适配器之前，我们需要先将适配器注册到驱动器中，这样适配器就可以通过驱动器接收事件和调用接口了。我们以 Console 适配器为例，来看看如何注册适配器：\",\"import nonebot from nonebot.adapters.console import Adapter driver = nonebot.get_driver() driver.register_adapter(Adapter)\",\"我们首先需要从适配器模块中导入所需要的适配器类，然后通过驱动器的 register_adapter 方法将适配器注册到驱动器中即可。如果我们需要多平台支持，可以多次调用 register_adapter 方法来注册多个适配器。\"]},\"547\":{\"h\":\"获取已注册的适配器\",\"t\":[\"NoneBot 提供了 get_adapter 方法来获取已注册的适配器，我们可以通过适配器的名称或类型来获取指定的适配器实例：\",\"import nonebot from nonebot.adapters.console import Adapter adapters = nonebot.get_adapters() console_adapter = nonebot.get_adapter(Adapter) console_adapter = nonebot.get_adapter(Adapter.get_name())\"]},\"548\":{\"h\":\"获取 Bot 对象\",\"t\":[\"当前所有适配器已连接的 Bot 对象可以通过 get_bots 方法获取，这是一个以机器人 ID 为键的字典：\",\"import nonebot bots = nonebot.get_bots()\",\"我们也可以通过 get_bot 方法获取指定 ID 的 Bot 对象。如果省略 ID 参数，将会返回所有 Bot 中的第一个：\",\"import nonebot bot = nonebot.get_bot(\\\"bot_id\\\")\",\"如果需要获取指定适配器连接的 Bot 对象，我们可以通过适配器的 bots 属性获取，这也是一个以机器人 ID 为键的字典：\",\"import nonebot from nonebot.adapters.console import Adapter console_adapter = nonebot.get_adapter(Adapter) bots = console_adapter.bots\",\"Bot 对象都具有一个 self_id 属性，它是机器人的唯一 ID，由适配器填写，通常为机器人的帐号 ID 或者 APP ID。\"]},\"549\":{\"h\":\"获取事件通用信息\",\"t\":[\"适配器的所有事件模型均继承自 Event 基类，在事件类型与重载一节中，我们也提到了如何使用基类抽象方法来获取事件通用信息。基类能提供如下信息：\"]},\"550\":{\"h\":\"事件类型\",\"t\":[\"事件类型通常为 meta_event、message、notice、request。\",\"type: str = event.get_type()\"]},\"551\":{\"h\":\"事件名称\",\"t\":[\"事件名称由适配器定义，通常用于日志记录。\",\"name: str = event.get_event_name()\"]},\"552\":{\"h\":\"事件描述\",\"t\":[\"事件描述由适配器定义，通常用于日志记录。\",\"description: str = event.get_event_description()\"]},\"553\":{\"h\":\"事件日志字符串\",\"t\":[\"事件日志字符串由事件名称和事件描述组成，用于日志记录。\",\"log: str = event.get_log_string()\"]},\"554\":{\"h\":\"事件主体 ID\",\"t\":[\"事件主体 ID 通常为机器人用户 ID。\",\"user_id: str = event.get_user_id()\"]},\"555\":{\"h\":\"事件会话 ID\",\"t\":[\"事件会话 ID 通常为机器人用户 ID 与群聊/频道 ID 组合而成。\",\"session_id: str = event.get_session_id()\"]},\"556\":{\"h\":\"事件消息\",\"t\":[\"如果事件包含消息，则可以通过该方法获取，否则会产生异常。\",\"message: Message = event.get_message()\"]},\"557\":{\"h\":\"事件纯文本消息\",\"t\":[\"通常为事件消息的纯文本内容，如果事件不包含消息，则会产生异常。\",\"text: str = event.get_plaintext()\"]},\"558\":{\"h\":\"事件是否与机器人有关\",\"t\":[\"由适配器实现的判断，通常将事件目标主体为机器人、消息中包含“@机器人”或以“机器人的昵称”开始视为与机器人有关。\",\"is_tome: bool = event.is_tome()\"]},\"559\":{\"h\":\"更多\",\"t\":[\"官方支持的适配器和社区贡献的适配器均可在商店中查看。如果你想要开发自己的适配器，可以参考开发文档。欢迎通过商店发布你的适配器。\"]},\"560\":{\"h\":\"选择驱动器\",\"t\":[\"驱动器 (Driver) 是机器人运行的基石，它是机器人初始化的第一步，主要负责数据收发。\",\"提示\",\"驱动器的选择通常与机器人所使用的协议适配器相关，如果不知道该选择哪个驱动器，可以先阅读相关协议适配器文档说明。\",\"提示\",\"如何安装驱动器请参考安装驱动器。\"]},\"561\":{\"h\":\"驱动器类型\",\"t\":[\"驱动器类型大体上可以分为两种：\",\"Forward：即客户端型驱动器，多用于使用 HTTP 轮询，连接 WebSocket 服务器等情形。\",\"Reverse：即服务端型驱动器，多用于使用 WebHook，接收 WebSocket 客户端连接等情形。\",\"客户端型驱动器可以分为以下两种：\",\"异步发送 HTTP 请求，自定义 HTTP Method、URL、Header、Body、Cookie、Proxy、Timeout 等。\",\"异步建立 WebSocket 连接上下文，自定义 WebSocket URL、Header、Cookie、Proxy、Timeout 等。\",\"服务端型驱动器目前有：\",\"ASGI 应用框架，具有以下功能： \",\"协议适配器自定义 HTTP 上报地址以及对上报数据处理的回调函数。\",\"协议适配器自定义 WebSocket 连接请求地址以及对 WebSocket 请求处理的回调函数。\",\"用户可以向 ASGI 应用添加任何服务端相关功能，如：添加自定义路由。\"]},\"562\":{\"h\":\"配置驱动器\",\"t\":[\"驱动器的配置方法已经在配置章节中简单进行了介绍，这里将详细介绍驱动器配置的格式。\",\"NoneBot 中的客户端和服务端型驱动器可以相互配合使用，但服务端型驱动器仅能选择一个。所有驱动器模块都会包含一个 Driver 子类，即驱动器类，他可以作为驱动器单独运行。同时，客户端驱动器模块中还会提供一个 Mixin 子类，用于在与其他驱动器配合使用时加载。因此，驱动器配置格式采用特殊语法：<module>[:<Driver>][+<module>[:<Mixin>]]*。\",\"其中，<module> 代表驱动器模块路径；<Driver> 代表驱动器类名，默认为 Driver；<Mixin> 代表驱动器混入类名，默认为 Mixin。即，我们需要选择一个主要驱动器，然后在其基础上配合使用其他驱动器的功能。主要驱动器可以为客户端或服务端类型，但混入类驱动器只能为客户端类型。\",\"特别的，为了简化内置驱动器模块路径，我们可以使用 ~ 符号作为内置驱动器模块路径的前缀，如 ~fastapi 代表使用内置驱动器 fastapi。NoneBot 内置了多个驱动器适配，但需要安装额外依赖才能使用，具体请参考安装驱动器。常见的驱动器配置如下：\",\"DRIVER=~fastapi DRIVER=~aiohttp DRIVER=~httpx+~websockets DRIVER=~fastapi+~httpx+~websockets\"]},\"563\":{\"h\":\"获取驱动器\",\"t\":[\"在 NoneBot 框架初始化完成后，我们就可以通过 get_driver() 方法获取全局驱动器实例：\",\"from nonebot import get_driver driver = get_driver()\"]},\"564\":{\"h\":\"内置驱动器\"},\"565\":{\"h\":\"None\",\"t\":[\"**类型：**服务端驱动器\",\"NoneBot 内置的空驱动器，不提供任何收发数据功能，可以在不需要外部网络连接时使用。\",\"DRIVER=~none\"]},\"566\":{\"h\":\"FastAPI（默认）\",\"t\":[\"**类型：**ASGI 服务端驱动器\",\"FastAPI is a modern, fast (high-performance), web framework for building APIs with Python 3.6+ based on standard Python type hints.\",\"FastAPI 是一个易上手、高性能的异步 Web 框架，具有极佳的编写体验。 FastAPI 可以通过类型注解、依赖注入等方式实现输入参数校验、自动生成 API 文档等功能，也可以挂载其他 ASGI、WSGI 应用。\",\"DRIVER=~fastapi\"]},\"567\":{\"h\":\"FastAPI 配置项\"},\"568\":{\"h\":\"\",\"t\":[\"类型：str | None 默认值：None 说明：FastAPI 提供的 OpenAPI JSON 定义地址，如果为 None，则不提供 OpenAPI JSON 定义。\"]},\"569\":{\"h\":\"\",\"t\":[\"类型：str | None 默认值：None 说明：FastAPI 提供的 Swagger 文档地址，如果为 None，则不提供 Swagger 文档。\"]},\"570\":{\"h\":\"\",\"t\":[\"类型：str | None 默认值：None 说明：FastAPI 提供的 ReDoc 文档地址，如果为 None，则不提供 ReDoc 文档。\"]},\"571\":{\"h\":\"\",\"t\":[\"类型：bool 默认值：True 说明：FastAPI 提供的 OpenAPI JSON 定义中是否包含适配器路由的 Schema。\"]},\"572\":{\"h\":\"\",\"t\":[\"警告\",\"不推荐开启该配置项，在 Windows 平台上开启该功能有可能会造成预料之外的影响！替代方案：使用 nb-cli 命令行工具以及参数 --reload 启动 NoneBot。\",\"nb run --reload\",\"开启该功能后，在 uvicorn 运行时（FastAPI 提供的 ASGI 底层，即 reload 功能的实际来源），asyncio 使用的事件循环会被 uvicorn 从默认的 ProactorEventLoop 强制切换到 SelectorEventLoop。\",\"相关信息参考 uvicorn#529，uvicorn#1070，uvicorn#1257\",\"后者（SelectorEventLoop）在 Windows 平台的可使用性不如前者（ProactorEventLoop），包括但不限于\",\"不支持创建子进程\",\"最多只支持 512 个套接字\",\"...\",\"具体信息参考 Python 文档\",\"所以，一些使用了 asyncio 的库因此可能无法正常工作，如：\",\"playwright\",\"如果在开启该功能后，原本正常运行的代码报错，且打印的异常堆栈信息和 asyncio 有关（异常一般为 NotImplementedError）， 你可能就需要考虑相关库对事件循环的支持，以及是否启用该功能。\",\"类型：bool 默认值：False 说明：是否开启 uvicorn 的 reload 功能，需要在机器人入口文件提供 ASGI 应用路径。\",\"app = nonebot.get_asgi() nonebot.run(app=\\\"bot:app\\\")\"]},\"573\":{\"h\":\"\",\"t\":[\"类型：List[str] | None 默认值：None 说明：重载监控文件夹列表，默认为 uvicorn 默认值\"]},\"574\":{\"h\":\"\",\"t\":[\"类型：float | None 默认值：None 说明：重载延迟，默认为 uvicorn 默认值\"]},\"575\":{\"h\":\"\",\"t\":[\"类型：List[str] | None 默认值：None 说明：要监听的文件列表，支持 glob pattern，默认为 uvicorn 默认值\"]},\"576\":{\"h\":\"\",\"t\":[\"类型：List[str] | None 默认值：None 说明：不要监听的文件列表，支持 glob pattern，默认为 uvicorn 默认值\"]},\"577\":{\"h\":\"\",\"t\":[\"类型：Dist[str, Any] 默认值：{} 说明：传递给 FastAPI 的其他参数\"]},\"578\":{\"h\":\"Quart\",\"t\":[\"**类型：**ASGI 服务端驱动器\",\"Quart is an asyncio reimplementation of the popular Flask microframework API.\",\"Quart 是一个类 Flask 的异步版本，拥有与 Flask 非常相似的接口和使用方法。\",\"DRIVER=~quart\"]},\"579\":{\"h\":\"Quart 配置项\"},\"580\":{\"h\":\"\",\"t\":[\"警告\",\"不推荐开启该配置项，在 Windows 平台上开启该功能有可能会造成预料之外的影响！替代方案：使用 nb-cli 命令行工具以及参数 --reload 启动 NoneBot。\",\"nb run --reload\",\"类型：bool 默认值：False 说明：是否开启 uvicorn 的 reload 功能，需要在机器人入口文件提供 ASGI 应用路径。\",\"app = nonebot.get_asgi() nonebot.run(app=\\\"bot:app\\\")\"]},\"581\":{\"h\":\"\",\"t\":[\"类型：List[str] | None 默认值：None 说明：重载监控文件夹列表，默认为 uvicorn 默认值\"]},\"582\":{\"h\":\"\",\"t\":[\"类型：float | None 默认值：None 说明：重载延迟，默认为 uvicorn 默认值\"]},\"583\":{\"h\":\"\",\"t\":[\"类型：List[str] | None 默认值：None 说明：要监听的文件列表，支持 glob pattern，默认为 uvicorn 默认值\"]},\"584\":{\"h\":\"\",\"t\":[\"类型：List[str] | None 默认值：None 说明：不要监听的文件列表，支持 glob pattern，默认为 uvicorn 默认值\"]},\"585\":{\"h\":\"\",\"t\":[\"类型：Dist[str, Any] 默认值：{} 说明：传递给 Quart 的其他参数\"]},\"586\":{\"h\":\"HTTPX\",\"t\":[\"**类型：**HTTP 客户端驱动器\",\"注意\",\"本驱动器仅支持 HTTP 请求，不支持 WebSocket 连接请求。\",\"HTTPX is a fully featured HTTP client for Python 3, which provides sync and async APIs, and support for both HTTP/1.1 and HTTP/2.\",\"DRIVER=~httpx\"]},\"587\":{\"h\":\"websockets\",\"t\":[\"**类型：**WebSocket 客户端驱动器\",\"注意\",\"本驱动器仅支持 WebSocket 连接请求，不支持 HTTP 请求。\",\"websockets is a library for building WebSocket servers and clients in Python with a focus on correctness, simplicity, robustness, and performance.\",\"DRIVER=~websockets\"]},\"588\":{\"h\":\"AIOHTTP\",\"t\":[\"**类型：**HTTP/WebSocket 客户端驱动器\",\"AIOHTTP: Asynchronous HTTP Client/Server for asyncio and Python.\",\"DRIVER=~aiohttp\"]},\"589\":{\"h\":\"事件响应器存储\",\"t\":[\"事件响应器是 NoneBot 处理事件的核心，它们默认存储在一个字典中。在进入会话状态后，事件响应器将会转为临时响应器，作为最高优先级同样存储于该字典中。因此，事件响应器的存储类似于会话存储，它决定了整个 NoneBot 对事件的处理行为。\",\"NoneBot 默认使用 Python 的字典将事件响应器存储于内存中，但是我们也可以自定义事件响应器存储，将事件响应器存储于其他地方，例如 Redis 等。这样我们就可以实现持久化、在多实例间共享会话状态等功能。\"]},\"590\":{\"h\":\"编写存储提供者\",\"t\":[\"事件响应器的存储提供者 MatcherProvider 抽象类继承自 MutableMapping[int, list[type[Matcher]]]，即以优先级为键，以事件响应器列表为值的映射。我们可以方便地进行逐优先级事件传播。\",\"编写一个自定义的存储提供者，只需要继承并实现 MatcherProvider 抽象类：\",\"from nonebot.matcher import MatcherProvider class CustomProvider(MatcherProvider): ...\"]},\"591\":{\"h\":\"设置存储提供者\",\"t\":[\"我们可以通过 matchers.set_provider 方法设置存储提供者：\",\"from nonebot.matcher import matchers matchers.set_provider(CustomProvider) assert isinstance(matchers.provider, CustomProvider)\"]},\"592\":{\"h\":\"事件响应器进阶\",\"t\":[\"在指南与深入中，我们已经介绍了事件响应器的基本用法以及响应规则、权限控制等功能。在这一节中，我们将介绍事件响应器的组成，内置的响应规则，与第三方响应规则拓展。\",\"提示\",\"事件响应器允许继承，你可以通过直接继承 Matcher 类来创建一个新的事件响应器。\"]},\"593\":{\"h\":\"事件响应器组成\"},\"594\":{\"h\":\"事件响应器类型\",\"t\":[\"事件响应器类型 type 即是该响应器所要响应的事件类型，只有在接收到的事件类型与该响应器的类型相同时，才会触发该响应器。如果类型为空字符串 \\\"\\\"，则响应器将会响应所有类型的事件。事件响应器类型的检查在所有其他检查（权限控制、响应规则）之前进行。\",\"NoneBot 内置了四种常用事件类型：meta_event、message、notice、request，分别对应元事件、消息、通知、请求。通常情况下，协议适配器会将事件合理地分类至这四种类型中。如果有其他类型的事件需要响应，可以自行定义新的类型。\"]},\"595\":{\"h\":\"事件触发权限\",\"t\":[\"事件触发权限 permission 是一个 Permission 对象，这在权限控制一节中已经介绍过。事件触发权限会在事件响应器的类型检查通过后进行检查，如果权限检查通过，则执行响应规则检查。\"]},\"596\":{\"h\":\"事件响应规则\",\"t\":[\"事件响应规则 rule 是一个 Rule 对象，这在响应规则一节中已经介绍过。事件响应器的响应规则会在事件响应器的权限检查通过后进行匹配，如果响应规则检查通过，则触发该响应器。\"]},\"597\":{\"h\":\"响应优先级\",\"t\":[\"响应优先级 priority 是一个正整数，用于指定响应器的优先级。响应器的优先级越小，越先被触发。如果响应器的优先级相同，则按照响应器的注册顺序进行触发。\"]},\"598\":{\"h\":\"阻断\",\"t\":[\"阻断 block 是一个布尔值，用于指定响应器是否阻断事件的传播。如果阻断为 True，则在该响应器被触发后，事件将不会再传播给其他下一优先级的响应器。\",\"NoneBot 内置的事件响应器中，所有非 command 规则的 message 类型的事件响应器都会阻断事件传递，其他则不会。\",\"在部分情况中，可以使用 stop_propagation 方法动态阻止事件传播，该方法需要 handler 在参数中获取 matcher 实例后调用方法。\"]},\"599\":{\"h\":\"有效期\",\"t\":[\"事件响应器的有效期分为 temp 和 expire_time 。temp 是一个布尔值，用于指定响应器是否为临时响应器。如果为 True，则该响应器在被触发后会被自动销毁。expire_time 是一个 datetime 对象，用于指定响应器的过期时间。如果 expire_time 不为 None，则在该时间点后，该响应器会被自动销毁。\"]},\"600\":{\"h\":\"默认状态\",\"t\":[\"事件响应器的默认状态 default_state 是一个 dict 对象，用于指定响应器的默认状态。在响应器被触发时，响应器将会初始化默认状态然后开始执行事件处理流程。\"]},\"601\":{\"h\":\"基本辅助函数\",\"t\":[\"NoneBot 为四种类型的事件响应器提供了五个基本的辅助函数：\",\"on：创建任何类型的事件响应器。\",\"on_metaevent：创建元事件响应器。\",\"on_message：创建消息事件响应器。\",\"on_request：创建请求事件响应器。\",\"on_notice：创建通知事件响应器。\",\"除了 on 函数具有一个 type 参数外，其余参数均相同：\",\"rule：响应规则，可以是 Rule 对象或者 RuleChecker 函数。\",\"permission：事件触发权限，可以是 Permission 对象或者 PermissionChecker 函数。\",\"handlers：事件处理函数列表。\",\"temp：是否为临时响应器。\",\"expire_time：响应器的过期时间。\",\"priority：响应器的优先级。\",\"block：是否阻断事件传播。\",\"state：响应器的默认状态。\",\"在消息类型的事件响应器的基础上，NoneBot 还内置了一些常用的响应规则，并结合为辅助函数来方便我们快速创建指定功能的响应器。下面我们逐个介绍。\"]},\"602\":{\"h\":\"内置响应规则\",\"t\":[\"提示\",\"响应规则的使用方法可以参考 深入 - 响应规则。\"]},\"603\":{\"h\":\"\",\"t\":[\"startswith 响应规则用于匹配消息纯文本部分的开头是否与指定字符串（或一系列字符串）相同。可选参数 ignorecase 用于指定是否忽略大小写，默认为 False。\",\"例如，我们可以创建一个匹配消息开头为 ! 或者 / 的规则：\",\"from nonebot.rule import startswith rule = startswith((\\\"!\\\", \\\"/\\\"), ignorecase=False)\",\"也可以直接使用辅助函数新建一个响应器：\",\"from nonebot import on_startswith matcher = on_startswith((\\\"!\\\", \\\"/\\\"), ignorecase=False)\"]},\"604\":{\"h\":\"\",\"t\":[\"endswith 响应规则用于匹配消息纯文本部分的结尾是否与指定字符串（或一系列字符串）相同。可选参数 ignorecase 用于指定是否忽略大小写，默认为 False。\",\"例如，我们可以创建一个匹配消息结尾为 . 或者 。 的规则：\",\"from nonebot.rule import endswith rule = endswith((\\\".\\\", \\\"。\\\"), ignorecase=False)\",\"也可以直接使用辅助函数新建一个响应器：\",\"from nonebot import on_endswith matcher = on_endswith((\\\".\\\", \\\"。\\\"), ignorecase=False)\"]},\"605\":{\"h\":\"\",\"t\":[\"fullmatch 响应规则用于匹配消息纯文本部分是否与指定字符串（或一系列字符串）完全相同。可选参数 ignorecase 用于指定是否忽略大小写，默认为 False。\",\"例如，我们可以创建一个匹配消息为 ping 或者 pong 的规则：\",\"from nonebot.rule import fullmatch rule = fullmatch((\\\"ping\\\", \\\"pong\\\"), ignorecase=False)\",\"也可以直接使用辅助函数新建一个响应器：\",\"from nonebot import on_fullmatch matcher = on_fullmatch((\\\"ping\\\", \\\"pong\\\"), ignorecase=False)\"]},\"606\":{\"h\":\"\",\"t\":[\"keyword 响应规则用于匹配消息纯文本部分是否包含指定字符串（或一系列字符串）。\",\"例如，我们可以创建一个匹配消息中包含 hello 或者 hi 的规则：\",\"from nonebot.rule import keyword rule = keyword(\\\"hello\\\", \\\"hi\\\")\",\"也可以直接使用辅助函数新建一个响应器：\",\"from nonebot import on_keyword matcher = on_keyword({\\\"hello\\\", \\\"hi\\\"})\"]},\"607\":{\"h\":\"\",\"t\":[\"command 是最常用的响应规则，它用于匹配消息是否为命令。它会根据配置中的 Command Start 和 Command Separator 来判断消息是否为命令。\",\"例如，当我们配置了 Command Start 为 /，Command Separator 为 . 时：\",\"from nonebot.rule import command # 匹配 \\\"/help\\\" 或者 \\\"/帮助\\\" 开头的消息 rule = command(\\\"help\\\", \\\"帮助\\\") # 匹配 \\\"/help.cmd\\\" 开头的消息 rule = command((\\\"help\\\", \\\"cmd\\\"))\",\"也可以直接使用辅助函数新建一个响应器：\",\"from nonebot import on_command matcher = on_command(\\\"help\\\", aliases={\\\"帮助\\\"})\",\"此外，command 响应规则默认允许消息命令与参数间不加空格，如果需要严格匹配命令与参数间的空白符，可以使用 command 函数的 force_whitespace 参数。force_whitespace 参数可以是 bool 类型或者具体的字符串，默认为 False。如果为 True，则命令与参数间必须有任意个数的空白符；如果为字符串，则命令与参数间必须有且与给定字符串一致的空白符。\",\"rule = command(\\\"help\\\", force_whitespace=True) rule = command(\\\"help\\\", force_whitespace=\\\" \\\")\",\"命令解析后的结果可以通过 Command、RawCommand、CommandArg、CommandStart、CommandWhitespace 依赖注入获取。\"]},\"608\":{\"h\":\"\",\"t\":[\"shell_command 响应规则用于匹配类 shell 命令形式的消息。它首先与 command 响应规则一样进行命令匹配，如果匹配成功，则会进行进一步的参数解析。参数解析采用 argparse 标准库进行，在此基础上添加了消息序列 Message 支持。\",\"例如，我们可以创建一个匹配 /cmd 命令并且带有 -v 选项与默认 -h 帮助选项的规则：\",\"from nonebot.rule import shell_command, ArgumentParser parser = ArgumentParser() parser.add_argument(\\\"-v\\\", \\\"--verbose\\\", action=\\\"store_true\\\") rule = shell_command(\\\"cmd\\\", parser=parser)\",\"更多关于 argparse 的使用方法请参考 argparse 文档。我们也可以选择不提供 parser 参数，这样 shell_command 将不会解析参数，但会提供参数列表 argv。\",\"直接使用辅助函数新建一个响应器：\",\"from nonebot import on_shell_command from nonebot.rule import ArgumentParser parser = ArgumentParser() parser.add_argument(\\\"-v\\\", \\\"--verbose\\\", action=\\\"store_true\\\") matcher = on_shell_command(\\\"cmd\\\", parser=parser)\",\"参数解析后的结果可以通过 ShellCommandArgv、ShellCommandArgs 依赖注入获取。\"]},\"609\":{\"h\":\"\",\"t\":[\"regex 响应规则用于匹配消息是否与指定正则表达式匹配。\",\"提示\",\"正则表达式匹配使用 search 而非 match，如需从头匹配请使用 r\\\"^xxx\\\" 模式来确保匹配开头。\",\"例如，我们可以创建一个匹配消息中包含字母并且忽略大小写的规则：\",\"from nonebot.rule import regex rule = regex(r\\\"[a-z]+\\\", flags=re.IGNORECASE)\",\"也可以直接使用辅助函数新建一个响应器：\",\"from nonebot import on_regex matcher = on_regex(r\\\"[a-z]+\\\", flags=re.IGNORECASE)\",\"正则匹配后的结果可以通过 RegexStr、RegexGroup、RegexDict 依赖注入获取。\"]},\"610\":{\"h\":\"\",\"t\":[\"to_me 响应规则用于匹配事件是否与机器人相关。\",\"例如：\",\"from nonebot.rule import to_me rule = to_me()\"]},\"611\":{\"h\":\"\",\"t\":[\"is_type 响应规则用于匹配事件类型是否为指定类型（或者一系列类型）。\",\"例如，我们可以创建一个匹配 OneBot v11 私聊和群聊消息事件的规则：\",\"from nonebot.rule import is_type from nonebot.adapters.onebot.v11 import PrivateMessageEvent, GroupMessageEvent rule = is_type(PrivateMessageEvent, GroupMessageEvent)\"]},\"612\":{\"h\":\"响应器组\",\"t\":[\"为了更方便的管理一系列功能相近的响应器，NoneBot 提供了两种响应器组，它们可以帮助我们进行响应器的统一管理。\"]},\"613\":{\"h\":\"\",\"t\":[\"CommandGroup 可以用于管理一系列具有相同前置命令的子命令响应器。\",\"例如，我们创建 /cmd、/cmd.sub、/cmd.help 三个命令，他们具有相同的优先级：\",\"from nonebot import CommandGroup group = CommandGroup(\\\"cmd\\\", priority=10) cmd = group.command(tuple()) sub_cmd = group.command(\\\"sub\\\") help_cmd = group.command(\\\"help\\\")\",\"命令别名 aliases 默认不会添加 CommandGroup 设定的前缀，如果需要为 aliases 添加前缀，可以添加 prefix_aliases=True 参数:\",\"from nonebot import CommandGroup group = CommandGroup(\\\"cmd\\\", prefix_aliases=True) cmd = group.command(tuple()) help_cmd = group.command(\\\"help\\\", aliases={\\\"帮助\\\"})\",\"这样就能成功匹配 /cmd、/cmd.help、/cmd.帮助 命令。如果未设置，将默认匹配 /cmd、/cmd.help、/帮助 命令。\"]},\"614\":{\"h\":\"\",\"t\":[\"MatcherGroup 可以用于管理一系列具有相同属性的响应器。\",\"例如，我们创建一个具有相同响应规则的响应器组：\",\"from nonebot.rule import to_me from nonebot import MatcherGroup group = MatcherGroup(rule=to_me()) matcher1 = group.on_message() matcher2 = group.on_message()\"]},\"615\":{\"h\":\"第三方响应规则\"},\"616\":{\"h\":\"Alconna\",\"t\":[\"nonebot-plugin-alconna 是一类提供了拓展响应规则的插件。 该插件使用 Alconna 作为命令解析器， 是一个简单、灵活、高效的命令参数解析器, 并且不局限于解析命令式字符串。\",\"该插件提供了一类新的事件响应器辅助函数 on_alconna，以及 AlconnaResult 等依赖注入函数。\",\"基于 Alconna 的特性，该插件同时提供了一系列便捷的消息段标注。 标注可用于在 Alconna 中匹配消息中除 text 外的其他消息段，也可用于快速创建各适配器下的消息段。所有标注位于 nonebot_plugin_alconna.adapters 中。\",\"该插件同时通过提供 UniMessage (通用消息模型) 实现了跨平台接收和发送消息的功能。\",\"详情请阅读最佳实践中的 命令解析拓展 章节。\"]},\"617\":{\"h\":\"插件信息\",\"t\":[\"NoneBot 是一个插件化的框架，可以通过加载插件来扩展功能。同时，我们也可以通过 NoneBot 的插件系统来获取相关信息，例如插件的名称、使用方法，用于收集帮助信息等。下面我们将介绍如何为插件添加元数据，以及如何获取插件信息。\"]},\"618\":{\"h\":\"插件元数据\",\"t\":[\"在 NoneBot 中，插件 Plugin 对象中存储了插件系统所需要的一系列信息。包括插件的索引名称、插件模块、插件中的事件响应器、插件父子关系等。通常，只有插件开发者才需要关心这些信息，而插件使用者或者机器人用户想要看到的是插件使用方法等帮助信息。因此，我们可以为插件添加插件元数据 PluginMetadata，它允许插件开发者为插件添加一些额外的信息。这些信息编写于插件模块的顶层，可以直接通过源码查看，或者通过 NoneBot 插件系统获取收集到的信息，通过其他方式发送给机器人用户等。\",\"现在，假设我们有一个插件 example, 它的模块结构如下：\",\"📦 awesome-bot ├── 📂 awesome_bot │ └── 📂 plugins | └── 📂 example | ├── 📜 __init__.py | └── 📜 config.py ├── 📜 pyproject.toml └── 📜 README.md\",\"我们需要在插件顶层模块 example/__init__.py 中添加插件元数据，如下所示：\",\"from nonebot.plugin import PluginMetadata from .config import Config __plugin_meta__ = PluginMetadata( name=\\\"示例插件\\\", description=\\\"这是一个示例插件\\\", usage=\\\"没什么用\\\", type=\\\"application\\\", config=Config, extra={}, )\",\"我们可以看到，插件元数据 PluginMetadata 有三个基本属性：插件名称、插件描述、插件使用方法。除此之外，还有几个可选的属性（具体填写见发布插件章节）：\",\"type：插件类别，发布插件必填。当前有效类别有：library（为其他插件编写提供功能），application（向机器人用户提供功能）；\",\"homepage：插件项目主页，发布插件必填；\",\"config：插件的配置类，如无配置类可不填；\",\"supported_adapters：支持的适配器模块名集合，若插件可以保证兼容所有适配器（即仅使用基本适配器功能）可不填写；\",\"extra：一个字典，可以用于存储任意信息。其他插件可以通过约定 extra 字典的键名来达成收集某些特殊信息的目的。\",\"请注意，这里的插件名称是供使用者或机器人用户查看的，与插件索引名称无关。插件索引名称（插件模块名称）仅用于 NoneBot 插件系统内部索引。\"]},\"619\":{\"h\":\"获取插件信息\",\"t\":[\"NoneBot 提供了多种获取插件对象的方法，例如获取当前所有已导入的插件：\",\"import nonebot plugins: set[Plugin] = nonebot.get_loaded_plugins()\",\"也可以通过插件索引名称获取插件对象：\",\"import nonebot plugin: Plugin | None = nonebot.get_plugin(\\\"example\\\")\",\"或者通过模块路径获取插件对象：\",\"import nonebot plugin: Plugin | None = nonebot.get_plugin_by_module_name(\\\"awesome_bot.plugins.example\\\")\",\"如果需要获取所有当前声明的插件名称（可能还未加载），可以使用 get_available_plugin_names 函数：\",\"import nonebot plugin_names: set[str] = nonebot.get_available_plugin_names()\",\"插件对象 Plugin 中包含了多个属性：\",\"name：插件索引名称\",\"module：插件模块\",\"module_name：插件模块路径\",\"manager：插件管理器\",\"matcher：插件中定义的事件响应器\",\"parent_plugin：插件的父插件\",\"sub_plugins：插件的子插件集合\",\"metadata：插件元数据\",\"通过这些属性以及插件元数据，我们就可以收集所需要的插件信息了。\"]},\"620\":{\"h\":\"嵌套插件\",\"t\":[\"NoneBot 支持嵌套插件，即一个插件可以包含其他插件。通过这种方式，我们可以将一个大型插件拆分成多个功能子插件，使得插件更加清晰、易于维护。我们可以直接在插件中使用 NoneBot 加载插件的方法来加载子插件。\"]},\"621\":{\"h\":\"创建嵌套插件\",\"t\":[\"我们可以在使用 nb-cli 命令创建插件时，选择直接通过模板创建一个嵌套插件：\",\"$ nb plugin create [?] 插件名称: parent [?] 使用嵌套插件? (y/N) Y [?] 输出目录: awesome_bot/plugins\",\"或者使用 nb plugin create --sub-plugin 选项直接创建一个嵌套插件。\"]},\"622\":{\"h\":\"已有插件\",\"t\":[\"如果你已经有一个插件，想要在其中嵌套加载子插件，可以在插件的 __init__.py 中添加如下代码：\",\"import nonebot from pathlib import Path sub_plugins = nonebot.load_plugins( str(Path(__file__).parent.joinpath(\\\"plugins\\\").resolve()) )\",\"这样，parent 插件就会加载 parent/plugins 目录下的所有插件。NoneBot 会正确识别这些插件的父子关系，你可以在 parent 的插件信息中看到这些子插件的信息，也可以在子插件信息中看到它们的父插件信息。\"]},\"623\":{\"h\":\"跨插件访问\",\"t\":[\"NoneBot 插件化系统的设计使得插件之间可以功能独立、各司其职，我们可以更好地维护和扩展插件。但是，有时候我们可能需要在不同插件之间调用功能。NoneBot 生态中就有一类插件，它们专为其他插件提供功能支持，如：定时任务插件、数据存储插件等。这时候我们就需要在插件之间进行跨插件访问。\"]},\"624\":{\"h\":\"插件跟踪\",\"t\":[\"由于 NoneBot 插件系统通过 Import Hooks 的方式实现插件加载与跟踪管理，因此我们不能在 NoneBot 跟踪插件前进行模块 import，这会导致插件加载失败。即，我们不能在使用 NoneBot 提供的加载插件方法前，直接使用 import 语句导入插件。\",\"对于在项目目录下的插件，我们通常直接使用 load_from_toml 等方法一次性加载所有插件。由于这些插件已经被声明，即便插件导入顺序不同，NoneBot 也能正确跟踪插件。此时，我们不需要对跨插件访问进行特殊处理。但当我们使用了外部插件，如果没有事先声明或加载插件，NoneBot 并不会将其当作插件进行跟踪，可能会出现意料之外的错误出现。\",\"简单来说，我们必须在 import 外部插件之前，确保依赖的外部插件已经被声明或加载。\"]},\"625\":{\"h\":\"插件依赖声明\",\"t\":[\"NoneBot 提供了一种方法来确保我们依赖的插件已经被正确加载，即使用 require 函数。通过 require 函数，我们可以在当前插件中声明依赖的插件，NoneBot 会在加载当前插件时，检查依赖的插件是否已经被加载，如果没有，会尝试优先加载依赖的插件。\",\"假设我们有一个插件 a 依赖于插件 b，我们可以在插件 a 中使用 require 函数声明其依赖于插件 b：\",\"from nonebot import require require(\\\"b\\\") from b import some_function\",\"其中，require 函数的参数为插件索引名称或者外部插件的模块名称。在完成依赖声明后，我们可以在插件 a 中直接导入插件 b 所提供的功能。\"]},\"626\":{\"h\":\"添加路由\",\"t\":[\"在驱动器一节中，我们了解了驱动器的两种类型。既然驱动器可以作为服务端运行，那么我们就可以向驱动器添加路由规则，从而实现自定义的 API 接口等功能。在添加路由规则时，我们需要注意驱动器的类型，详情可以参考选择驱动器。\",\"NoneBot 中，我们可以通过两种途径向 ASGI 驱动器添加路由规则：\",\"通过 NoneBot 的兼容层建立路由规则。\",\"直接向 ASGI 应用添加路由规则。\",\"这两种途径各有优劣，前者可以在各种服务端型驱动器下运行，但并不能直接使用 ASGI 应用框架提供的特性与功能；后者直接使用 ASGI 应用，更自由、功能完整，但只能在特定类型驱动器下运行。\",\"在向驱动器添加路由规则时，我们需要注意驱动器是否为服务端类型，我们可以通过以下方式判断：\",\"from nonebot import get_driver from nonebot.drivers import ASGIMixin # highlight-next-line can_use = isinstance(get_driver(), ASGIMixin)\"]},\"627\":{\"h\":\"通过兼容层添加路由\",\"t\":[\"NoneBot 兼容层定义了两个数据类 HTTPServerSetup 和 WebSocketServerSetup，分别用于定义 HTTP 服务端和 WebSocket 服务端的路由规则。\"]},\"628\":{\"h\":\"HTTP 路由\",\"t\":[\"HTTPServerSetup 具有四个属性：\",\"path：路由路径，不支持特殊占位表达式。类型为 URL。\",\"method：请求方法。类型为 str。\",\"name：路由名称，不可重复。类型为 str。\",\"handle_func：路由处理函数。类型为 Callable[[Request], Awaitable[Response]]。\",\"例如，我们添加一个 /hello 的路由，当请求方法为 GET 时，返回 200 OK 以及返回体信息：\",\"from nonebot import get_driver from nonebot.drivers import URL, Request, Response, ASGIMixin, HTTPServerSetup async def hello(request: Request) -> Response: return Response(200, content=\\\"Hello, world!\\\") if isinstance((driver := get_driver()), ASGIMixin): driver.setup_http_server( HTTPServerSetup( path=URL(\\\"/hello\\\"), method=\\\"GET\\\", name=\\\"hello\\\", handle_func=hello, ) )\",\"对于 Request 和 Response 的详细信息，可以参考 API 文档。\"]},\"629\":{\"h\":\"WebSocket 路由\",\"t\":[\"WebSocketServerSetup 具有三个属性：\",\"path：路由路径，不支持特殊占位表达式。类型为 URL。\",\"name：路由名称，不可重复。类型为 str。\",\"handle_func：路由处理函数。类型为 Callable[[WebSocket], Awaitable[Any]]。\",\"例如，我们添加一个 /ws 的路由，发送所有接收到的数据：\",\"from nonebot import get_driver from nonebot.drivers import URL, ASGIMixin, WebSocket, WebSocketServerSetup async def ws_handler(ws: WebSocket): await ws.accept() try: while True: data = await ws.receive() await ws.send(data) except WebSocketClosed as e: # handle closed ... finally: with contextlib.suppress(Exception): await websocket.close() # do some cleanup if isinstance((driver := get_driver()), ASGIMixin): driver.setup_websocket_server( WebSocketServerSetup( path=URL(\\\"/ws\\\"), name=\\\"ws\\\", handle_func=ws_handler, ) )\",\"对于 WebSocket 的详细信息，可以参考 API 文档。\"]},\"630\":{\"h\":\"使用 ASGI 应用添加路由\"},\"631\":{\"h\":\"获取 ASGI 应用\",\"t\":[\"NoneBot 服务端类型的驱动器具有两个属性 server_app 和 asgi，分别对应驱动框架应用和 ASGI 应用。通常情况下，这两个应用是同一个对象。我们可以通过 get_app() 方法快速获取：\",\"import nonebot app = nonebot.get_app() asgi = nonebot.get_asgi()\"]},\"632\":{\"h\":\"添加路由规则\",\"t\":[\"在获取到了 ASGI 应用后，我们就可以直接使用 ASGI 应用框架提供的功能来添加路由规则了。这里我们以 FastAPI 为例，演示如何添加路由规则。\",\"在下面的代码中，我们添加了一个 GET 类型的 /api 路由，具体方法参考 FastAPI 文档。\",\"import nonebot from fastapi import FastAPI app: FastAPI = nonebot.get_app() @app.get(\\\"/api\\\") async def custom_api(): return {\\\"message\\\": \\\"Hello, world!\\\"}\"]},\"633\":{\"h\":\"钩子函数\",\"t\":[\"钩子编程（hooking），也称作“挂钩”，是计算机程序设计术语，指通过拦截软件模块间的函数调用、消息传递、事件传递来修改或扩展操作系统、应用程序或其他软件组件的行为的各种技术。处理被拦截的函数调用、事件、消息的代码，被称为钩子（hook）。\",\"在 NoneBot 中有一系列预定义的钩子函数，可以分为两类：全局钩子函数和事件处理钩子函数，这些钩子函数可以用装饰器的形式来使用。\"]},\"634\":{\"h\":\"全局钩子函数\",\"t\":[\"全局钩子函数是指 NoneBot 针对其本身运行过程的钩子函数。\",\"这些钩子函数是由驱动器来运行的，故需要先获得全局驱动器。\"]},\"635\":{\"h\":\"启动准备\",\"t\":[\"这个钩子函数会在 NoneBot 启动时运行。很多时候，我们并不希望在模块被导入时就执行一些耗时操作，如：连接数据库，这时候我们可以在这个钩子函数中进行这些操作。\",\"from nonebot import get_driver driver = get_driver() @driver.on_startup async def do_something(): pass\"]},\"636\":{\"h\":\"终止处理\",\"t\":[\"这个钩子函数会在 NoneBot 终止时运行。我们可以在这个钩子函数中进行一些清理工作，如：关闭数据库连接。\",\"from nonebot import get_driver driver = get_driver() @driver.on_shutdown async def do_something(): pass\"]},\"637\":{\"h\":\"Bot 连接处理\",\"t\":[\"这个钩子函数会在任何协议适配器连接 Bot 对象至 NoneBot 时运行。支持依赖注入，可以直接注入 Bot 对象。\",\"from nonebot import get_driver driver = get_driver() @driver.on_bot_connect async def do_something(bot: Bot): pass\"]},\"638\":{\"h\":\"Bot 断开处理\",\"t\":[\"这个钩子函数会在 Bot 断开与 NoneBot 的连接时运行。支持依赖注入，可以直接注入 Bot 对象。\",\"from nonebot import get_driver driver = get_driver() @driver.on_bot_disconnect async def do_something(bot: Bot): pass\"]},\"639\":{\"h\":\"事件处理钩子函数\",\"t\":[\"这些钩子函数指的是影响 NoneBot 进行事件处理的函数, 这些函数可以跟普通的事件处理函数一样接受相应的参数。\"]},\"640\":{\"h\":\"事件预处理\",\"t\":[\"这个钩子函数会在 NoneBot 接收到新的事件时运行。支持依赖注入，可以注入 Bot 对象、事件、会话状态。在这个钩子函数内抛出 nonebot.exception.IgnoredException 会使 NoneBot 忽略该事件。\",\"from nonebot.exception import IgnoredException from nonebot.message import event_preprocessor @event_preprocessor async def do_something(event: Event): if not event.is_tome(): raise IgnoredException(\\\"some reason\\\")\"]},\"641\":{\"h\":\"事件后处理\",\"t\":[\"这个钩子函数会在 NoneBot 处理事件完成后运行。支持依赖注入，可以注入 Bot 对象、事件、会话状态。\",\"from nonebot.message import event_postprocessor @event_postprocessor async def do_something(event: Event): pass\"]},\"642\":{\"h\":\"运行预处理\",\"t\":[\"这个钩子函数会在 NoneBot 运行事件响应器前运行。支持依赖注入，可以注入 Bot 对象、事件、事件响应器、会话状态。在这个钩子函数内抛出 nonebot.exception.IgnoredException 也会使 NoneBot 忽略本次运行。\",\"from nonebot.message import run_preprocessor from nonebot.exception import IgnoredException @run_preprocessor async def do_something(event: Event, matcher: Matcher): if not event.is_tome(): raise IgnoredException(\\\"some reason\\\")\"]},\"643\":{\"h\":\"运行后处理\",\"t\":[\"这个钩子函数会在 NoneBot 运行事件响应器后运行。支持依赖注入，可以注入 Bot 对象、事件、事件响应器、会话状态、运行中产生的异常。\",\"from nonebot.message import run_postprocessor @run_postprocessor async def do_something(event: Event, matcher: Matcher, exception: Optional[Exception]): pass\"]},\"644\":{\"h\":\"平台接口调用钩子\",\"t\":[\"这个钩子函数会在 Bot 对象调用平台接口时运行。在这个钩子函数中，我们可以通过引起 MockApiException 异常来阻止 Bot 对象调用平台接口并返回指定的结果。\",\"from nonebot.adapters import Bot from nonebot.exception import MockApiException @Bot.on_calling_api async def handle_api_call(bot: Bot, api: str, data: Dict[str, Any]): if api == \\\"send_msg\\\": raise MockApiException(result={\\\"message_id\\\": 123})\"]},\"645\":{\"h\":\"平台接口调用后钩子\",\"t\":[\"这个钩子函数会在 Bot 对象调用平台接口后运行。在这个钩子函数中，我们可以通过引起 MockApiException 异常来忽略平台接口返回的结果并返回指定的结果。\",\"from nonebot.adapters import Bot from nonebot.exception import MockApiException @Bot.on_called_api async def handle_api_result( bot: Bot, exception: Optional[Exception], api: str, data: Dict[str, Any], result: Any ): if not exception and api == \\\"send_msg\\\": raise MockApiException(result={**result, \\\"message_id\\\": 123})\"]},\"646\":{\"h\":\"会话更新\",\"t\":[\"在 NoneBot 中，在某个事件响应器对事件响应后，即是进入了会话状态，会话状态会持续到整个事件响应流程结束。会话过程中，机器人可以与用户进行多次交互。每次需要等待用户事件时，NoneBot 将会复制一个新的临时事件响应器，并更新该事件响应器使其响应当前会话主体的消息，这个过程称为会话更新。\",\"会话更新分为两部分：更新事件响应器类型和更新事件触发权限。\"]},\"647\":{\"h\":\"更新事件响应器类型\",\"t\":[\"通常情况下，与机器人用户进行的会话都是通过消息事件进行的，因此会话更新后的默认响应事件类型为 message。如果希望接收一个特定类型的消息，比如 notice 等，我们需要自定义响应事件类型更新函数。响应事件类型更新函数是一个 Dependent，可以使用依赖注入。\",\"foo = on_message() @foo.type_updater async def _() -> str: return \\\"notice\\\"\",\"在注册了上述响应事件类型更新函数后，当我们需要等待用户事件时，将只会响应 notice 类型的事件。如果希望在会话过程中的不同阶段响应不同类型的事件，我们就需要使用更复杂的逻辑来更新响应事件类型（如：根据会话状态），这里将不再展示。\"]},\"648\":{\"h\":\"更新事件触发权限\",\"t\":[\"会话通常是由机器人与用户进行的一对一交互，因此会话更新后的默认触发权限为当前事件的会话 ID。这个会话 ID 由协议适配器生成，通常由用户 ID 和群 ID 等组成。如果希望实现更复杂的会话功能（如：多用户同时参与的会话），我们需要自定义触发权限更新函数。触发权限更新函数是一个 Dependent，可以使用依赖注入。\",\"from nonebot.permission import User foo = on_message() @foo.permission_updater async def _(event: Event, matcher: Matcher) -> Permission: return Permission(User.from_event(event, perm=matcher.permission))\",\"上述权限更新函数是默认的权限更新函数，它将会话的触发权限更新为当前事件的会话 ID。如果我们希望响应多个用户的消息，我们可以如下修改：\",\"from nonebot.permission import USER foo = on_message() @foo.permission_updater async def _(matcher: Matcher) -> Permission: return USER(\\\"session1\\\", \\\"session2\\\", perm=matcher.permission)\",\"请注意，此处为全大写字母的 USER 权限，它可以匹配多个会话 ID。通过这种方式，我们可以实现多用户同时参与的会话。\",\"我们已经了解了如何控制会话的更新，相信你已经能够实现更复杂的会话功能了，例如多人小游戏等等。欢迎将你的作品分享到插件商店。\"]},\"649\":{\"h\":\"nonebot.compat\",\"t\":[\"本模块为 Pydantic 版本兼容层模块\",\"为兼容 Pydantic V1 与 V2 版本，定义了一系列兼容函数与类供使用。\"]},\"650\":{\"h\":\"\",\"t\":[\"类型: untyped\",\"说明: Alias of Ellipsis for compatibility with pydantic v1\"]},\"651\":{\"h\":\"\",\"t\":[\"说明: Pydantic Undefined object\"]},\"652\":{\"h\":\"\",\"t\":[\"说明: Pydantic Undefined type\"]},\"653\":{\"h\":\"\",\"t\":[\"类型: untyped\",\"说明: Default config for validations\"]},\"654\":{\"h\":\"\",\"t\":[\"说明: FieldInfo class with extra property for compatibility with pydantic v1\",\"参数\",\"default (Any)\",\"**kwargs (Any)\"]},\"655\":{\"h\":\"\",\"t\":[\"类型: dict[str, Any]\",\"说明\",\"Extra data that is not part of the standard pydantic fields.\",\"For compatibility with pydantic v1.\"]},\"656\":{\"h\":\"\",\"t\":[\"说明: ModelField class for compatibility with pydantic v1\",\"参数\",\"auto\"]},\"657\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明: The name of the field.\"]},\"658\":{\"h\":\"\",\"t\":[\"类型: Any\",\"说明: The annotation of the field.\"]},\"659\":{\"h\":\"\",\"t\":[\"类型: FieldInfo\",\"说明: The FieldInfo of the field.\"]},\"660\":{\"h\":\"\",\"t\":[\"说明: Construct a ModelField from given infos.\",\"参数\",\"name (str)\",\"annotation (Any)\",\"field_info (FieldInfo | None)\",\"返回\",\"Self\"]},\"661\":{\"h\":\"\",\"t\":[\"说明: Get the default value of the field.\",\"参数\",\"empty\",\"返回\",\"Any\"]},\"662\":{\"h\":\"\",\"t\":[\"说明: Validate the value pass to the field.\",\"参数\",\"value (Any)\",\"返回\",\"Any\"]},\"663\":{\"h\":\"\",\"t\":[\"说明: Get FieldInfo init kwargs from a FieldInfo instance.\",\"参数\",\"field_info (BaseFieldInfo)\",\"返回\",\"dict[str, Any]\"]},\"664\":{\"h\":\"\",\"t\":[\"说明: Get field list of a model.\",\"参数\",\"model (type[BaseModel])\",\"返回\",\"list[ModelField]\"]},\"665\":{\"h\":\"\",\"t\":[\"说明: Get config of a model.\",\"参数\",\"model (type[BaseModel])\",\"返回\",\"Any\"]},\"666\":{\"h\":\"\",\"t\":[\"参数\",\"model (BaseModel)\",\"include (set[str] | None)\",\"exclude (set[str] | None)\",\"by_alias (bool)\",\"exclude_unset (bool)\",\"exclude_defaults (bool)\",\"exclude_none (bool)\",\"返回\",\"dict[str, Any]\"]},\"667\":{\"h\":\"\",\"t\":[\"说明: Validate data with given type.\",\"参数\",\"type_ (type[T])\",\"data (Any)\",\"返回\",\"T\"]},\"668\":{\"h\":\"\",\"t\":[\"说明: Validate JSON with given type.\",\"参数\",\"type_ (type[T])\",\"data (str | bytes)\",\"返回\",\"T\"]},\"669\":{\"h\":\"\",\"t\":[\"说明: Use pydantic v1 like validator generator in pydantic v2\",\"参数\",\"class_ (type[CVC])\",\"返回\",\"type[CVC]\"]},\"670\":{\"h\":\"nonebot.config\",\"t\":[\"本模块定义了 NoneBot 本身运行所需的配置项。\",\"NoneBot 使用 pydantic 以及python-dotenv 来读取配置。\",\"配置项需符合特殊格式或 json 序列化格式 详情见 pydantic Field Type 文档。\"]},\"671\":{\"h\":\"\",\"t\":[\"说明\",\"运行环境配置。大小写不敏感。\",\"将会从 环境变量 > dotenv 配置文件 的优先级读取环境信息。\",\"参数\",\"_env_file (DOTENV_TYPE | None)\",\"_env_file_encoding (str | None)\",\"_env_nested_delimiter (str | None)\",\"**values (Any)\"]},\"672\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明\",\"当前环境名。\",\"NoneBot 将从 .env.{environment} 文件中加载配置。\"]},\"673\":{\"h\":\"\",\"t\":[\"说明\",\"NoneBot 主要配置。大小写不敏感。\",\"除了 NoneBot 的配置项外，还可以自行添加配置项到 .env.{environment} 文件中。 这些配置将会在 json 反序列化后一起带入 Config 类中。\",\"配置方法参考: 配置\",\"参数\",\"_env_file (DOTENV_TYPE | None)\",\"_env_file_encoding (str | None)\",\"_env_nested_delimiter (str | None)\",\"**values (Any)\"]},\"674\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明\",\"NoneBot 运行所使用的 Driver 。继承自 Driver 。\",\"配置格式为 <module>[:<Driver>][+<module>[:<Mixin>]]*。\",\"~ 为 nonebot.drivers. 的缩写。\",\"配置方法参考: 配置驱动器\"]},\"675\":{\"h\":\"\",\"t\":[\"类型: IPvAnyAddress\",\"说明: NoneBot ReverseDriver 服务端监听的 IP/主机名。\"]},\"676\":{\"h\":\"\",\"t\":[\"类型: int\",\"说明: NoneBot ReverseDriver 服务端监听的端口。\"]},\"677\":{\"h\":\"\",\"t\":[\"类型: int | str\",\"说明\",\"NoneBot 日志输出等级，可以为 int 类型等级或等级名称。\",\"参考 记录日志，loguru 日志等级。\",\"提示\",\"日志等级名称应为大写，如 INFO。\",\"用法\",\"LOG_LEVEL=25 LOG_LEVEL=INFO\"]},\"678\":{\"h\":\"\",\"t\":[\"类型: float | None\",\"说明: API 请求超时时间，单位: 秒。\"]},\"679\":{\"h\":\"\",\"t\":[\"类型: set[str]\",\"说明: 机器人超级用户。\",\"用法\",\"SUPERUSERS=[\\\"12345789\\\"]\"]},\"680\":{\"h\":\"\",\"t\":[\"类型: set[str]\",\"说明: 机器人昵称。\"]},\"681\":{\"h\":\"\",\"t\":[\"类型: set[str]\",\"说明\",\"命令的起始标记，用于判断一条消息是不是命令。\",\"参考命令响应规则。\",\"用法\",\"COMMAND_START=[\\\"/\\\", \\\"\\\"]\"]},\"682\":{\"h\":\"\",\"t\":[\"类型: set[str]\",\"说明\",\"命令的分隔标记，用于将文本形式的命令切分为元组（实际的命令名）。\",\"参考命令响应规则。\",\"用法\",\"COMMAND_SEP=[\\\".\\\"]\"]},\"683\":{\"h\":\"\",\"t\":[\"类型: timedelta\",\"说明: 等待用户回复的超时时间。\",\"用法\",\"SESSION_EXPIRE_TIMEOUT=[-][DD]D[,][HH:MM:]SS[.ffffff] SESSION_EXPIRE_TIMEOUT=[±]P[DD]DT[HH]H[MM]M[SS]S # ISO 8601\"]},\"684\":{\"h\":\"nonebot.consts\",\"t\":[\"本模块包含了 NoneBot 事件处理过程中使用到的常量。\"]},\"685\":{\"h\":\"\",\"t\":[\"类型: Literal['_receive_{id}']\",\"说明:receive 存储 key\"]},\"686\":{\"h\":\"\",\"t\":[\"类型: Literal['_last_receive']\",\"说明:last_receive 存储 key\"]},\"687\":{\"h\":\"\",\"t\":[\"类型: Literal['{key}']\",\"说明:arg 存储 key\"]},\"688\":{\"h\":\"\",\"t\":[\"类型: Literal['_current_target']\",\"说明: 当前 reject 目标存储 key\"]},\"689\":{\"h\":\"\",\"t\":[\"类型: Literal['_next_target']\",\"说明: 下一个 reject 目标存储 key\"]},\"690\":{\"h\":\"\",\"t\":[\"类型: Literal['_prefix']\",\"说明: 命令前缀存储 key\"]},\"691\":{\"h\":\"\",\"t\":[\"类型: Literal['command']\",\"说明: 命令元组存储 key\"]},\"692\":{\"h\":\"\",\"t\":[\"类型: Literal['raw_command']\",\"说明: 命令文本存储 key\"]},\"693\":{\"h\":\"\",\"t\":[\"类型: Literal['command_arg']\",\"说明: 命令参数存储 key\"]},\"694\":{\"h\":\"\",\"t\":[\"类型: Literal['command_start']\",\"说明: 命令开头存储 key\"]},\"695\":{\"h\":\"\",\"t\":[\"类型: Literal['command_whitespace']\",\"说明: 命令与参数间空白符存储 key\"]},\"696\":{\"h\":\"\",\"t\":[\"类型: Literal['_args']\",\"说明: shell 命令 parse 后参数字典存储 key\"]},\"697\":{\"h\":\"\",\"t\":[\"类型: Literal['_argv']\",\"说明: shell 命令原始参数列表存储 key\"]},\"698\":{\"h\":\"\",\"t\":[\"类型: Literal['_matched']\",\"说明: 正则匹配结果存储 key\"]},\"699\":{\"h\":\"\",\"t\":[\"类型: Literal['_startswith']\",\"说明: 响应触发前缀 key\"]},\"700\":{\"h\":\"\",\"t\":[\"类型: Literal['_endswith']\",\"说明: 响应触发后缀 key\"]},\"701\":{\"h\":\"\",\"t\":[\"类型: Literal['_fullmatch']\",\"说明: 响应触发完整消息 key\"]},\"702\":{\"h\":\"\",\"t\":[\"类型: Literal['_keyword']\",\"说明: 响应触发关键字 key\"]},\"703\":{\"h\":\"nonebot.exception\",\"t\":[\"本模块包含了所有 NoneBot 运行时可能会抛出的异常。\",\"这些异常并非所有需要用户处理，在 NoneBot 内部运行时被捕获，并进行对应操作。\",\"NoneBotException ├── ParserExit ├── ProcessException | ├── IgnoredException | ├── SkippedException | | └── TypeMisMatch | ├── MockApiException | └── StopPropagation ├── MatcherException | ├── PausedException | ├── RejectedException | └── FinishedException ├── AdapterException | ├── NoLogException | ├── ApiNotAvailable | ├── NetworkError | └── ActionFailed └── DriverException └── WebSocketClosed\"]},\"704\":{\"h\":\"\",\"t\":[\"说明: 所有 NoneBot 发生的异常基类。\",\"参数\",\"auto\"]},\"705\":{\"h\":\"\",\"t\":[\"说明: 处理消息失败时返回的异常。\",\"参数\",\"auto\"]},\"706\":{\"h\":\"\",\"t\":[\"说明: 事件处理过程中发生的异常基类。\",\"参数\",\"auto\"]},\"707\":{\"h\":\"\",\"t\":[\"说明: 指示 NoneBot 应该忽略该事件。可由 PreProcessor 抛出。\",\"参数\",\"reason: 忽略事件的原因\"]},\"708\":{\"h\":\"\",\"t\":[\"说明\",\"指示 NoneBot 立即结束当前 Dependent 的运行。\",\"例如，可以在 Handler 中通过 Matcher.skip 抛出。\",\"参数\",\"auto\",\"用法\",\"def always_skip(): Matcher.skip() @matcher.handle() async def handler(dependency = Depends(always_skip)): # never run\"]},\"709\":{\"h\":\"\",\"t\":[\"说明: 当前 Handler 的参数类型不匹配。\",\"参数\",\"auto\"]},\"710\":{\"h\":\"\",\"t\":[\"说明: 指示 NoneBot 阻止本次 API 调用或修改本次调用返回值，并返回自定义内容。 可由 api hook 抛出。\",\"参数\",\"result: 返回的内容\"]},\"711\":{\"h\":\"\",\"t\":[\"说明\",\"指示 NoneBot 终止事件向下层传播。\",\"在 Matcher.block 为 True 或使用 Matcher.stop_propagation 方法时抛出。\",\"参数\",\"auto\",\"用法\",\"matcher = on_notice(block=True) # 或者 @matcher.handle() async def handler(matcher: Matcher): matcher.stop_propagation()\"]},\"712\":{\"h\":\"\",\"t\":[\"说明: 所有 Matcher 发生的异常基类。\",\"参数\",\"auto\"]},\"713\":{\"h\":\"\",\"t\":[\"说明\",\"指示 NoneBot 结束当前 Handler 并等待下一条消息后继续下一个 Handler。 可用于用户输入新信息。\",\"可以在 Handler 中通过 Matcher.pause 抛出。\",\"参数\",\"auto\",\"用法\",\"@matcher.handle() async def handler(): await matcher.pause(\\\"some message\\\")\"]},\"714\":{\"h\":\"\",\"t\":[\"说明\",\"指示 NoneBot 结束当前 Handler 并等待下一条消息后重新运行当前 Handler。 可用于用户重新输入。\",\"可以在 Handler 中通过 Matcher.reject 抛出。\",\"参数\",\"auto\",\"用法\",\"@matcher.handle() async def handler(): await matcher.reject(\\\"some message\\\")\"]},\"715\":{\"h\":\"\",\"t\":[\"说明\",\"指示 NoneBot 结束当前 Handler 且后续 Handler 不再被运行。可用于结束用户会话。\",\"可以在 Handler 中通过 Matcher.finish 抛出。\",\"参数\",\"auto\",\"用法\",\"@matcher.handle() async def handler(): await matcher.finish(\\\"some message\\\")\"]},\"716\":{\"h\":\"\",\"t\":[\"说明: 代表 Adapter 抛出的异常，所有的 Adapter 都要在内部继承自这个 Exception。\",\"参数\",\"adapter_name: 标识 adapter\"]},\"717\":{\"h\":\"\",\"t\":[\"说明\",\"指示 NoneBot 对当前 Event 进行处理但不显示 Log 信息。\",\"可在 Event.get_log_string 时抛出\",\"参数\",\"auto\"]},\"718\":{\"h\":\"\",\"t\":[\"说明: 在 API 连接不可用时抛出。\",\"参数\",\"auto\"]},\"719\":{\"h\":\"\",\"t\":[\"说明: 在网络出现问题时抛出， 如: API 请求地址不正确, API 请求无返回或返回状态非正常等。\",\"参数\",\"auto\"]},\"720\":{\"h\":\"\",\"t\":[\"说明: API 请求成功返回数据，但 API 操作失败。\",\"参数\",\"auto\"]},\"721\":{\"h\":\"\",\"t\":[\"说明:Driver 抛出的异常基类。\",\"参数\",\"auto\"]},\"722\":{\"h\":\"\",\"t\":[\"说明: WebSocket 连接已关闭。\",\"参数\",\"auto\"]},\"723\":{\"h\":\"nonebot\",\"t\":[\"本模块主要定义了 NoneBot 启动所需函数，供 bot 入口文件调用。\"]},\"724\":{\"h\":\"快捷导入\",\"t\":[\"为方便使用，本模块从子模块导入了部分内容，以下内容可以直接通过本模块导入:\",\"on => on\",\"on_metaevent => on_metaevent\",\"on_message => on_message\",\"on_notice => on_notice\",\"on_request => on_request\",\"on_startswith => on_startswith\",\"on_endswith => on_endswith\",\"on_fullmatch => on_fullmatch\",\"on_keyword => on_keyword\",\"on_command => on_command\",\"on_shell_command => on_shell_command\",\"on_regex => on_regex\",\"on_type => on_type\",\"CommandGroup => CommandGroup\",\"Matchergroup => MatcherGroup\",\"load_plugin => load_plugin\",\"load_plugins => load_plugins\",\"load_all_plugins => load_all_plugins\",\"load_from_json => load_from_json\",\"load_from_toml => load_from_toml\",\"load_builtin_plugin =>load_builtin_plugin\",\"load_builtin_plugins =>load_builtin_plugins\",\"get_plugin => get_plugin\",\"get_plugin_by_module_name =>get_plugin_by_module_name\",\"get_loaded_plugins =>get_loaded_plugins\",\"get_available_plugin_names =>get_available_plugin_names\",\"get_plugin_config => get_plugin_config\",\"require => require\"]},\"725\":{\"h\":\"\",\"t\":[\"说明\",\"获取全局 Driver 实例。\",\"可用于在计划任务的回调等情形中获取当前 Driver 实例。\",\"参数\",\"empty\",\"返回\",\"Driver: 全局 Driver 对象\",\"异常\",\"ValueError: 全局 Driver 对象尚未初始化 (nonebot.init 尚未调用)\",\"用法\",\"driver = nonebot.get_driver()\"]},\"726\":{\"h\":\"\",\"t\":[\"说明: 获取已注册的 Adapter 实例。\",\"重载\",\"1.(name) -> Adapter\",\"参数\",\"name (str): 适配器名称\",\"返回\",\"Adapter: 指定名称的 Adapter 对象\",\"2.(name) -> A\",\"参数\",\"name (type[A]): 适配器类型\",\"返回\",\"A: 指定类型的 Adapter 对象\",\"异常\",\"ValueError: 指定的 Adapter 未注册\",\"ValueError: 全局 Driver 对象尚未初始化 (nonebot.init 尚未调用)\",\"用法\",\"from nonebot.adapters.console import Adapter adapter = nonebot.get_adapter(Adapter)\"]},\"727\":{\"h\":\"\",\"t\":[\"说明: 获取所有已注册的 Adapter 实例。\",\"参数\",\"empty\",\"返回\",\"dict[str, Adapter]: 所有 Adapter 实例字典\",\"异常\",\"ValueError: 全局 Driver 对象尚未初始化 (nonebot.init 尚未调用)\",\"用法\",\"adapters = nonebot.get_adapters()\"]},\"728\":{\"h\":\"\",\"t\":[\"说明: 获取全局 ASGIMixin 对应的 Server App 对象。\",\"参数\",\"empty\",\"返回\",\"Any: Server App 对象\",\"异常\",\"AssertionError: 全局 Driver 对象不是 ASGIMixin 类型\",\"ValueError: 全局 Driver 对象尚未初始化 (nonebot.init 尚未调用)\",\"用法\",\"app = nonebot.get_app()\"]},\"729\":{\"h\":\"\",\"t\":[\"说明: 获取全局 ASGIMixin 对应的 ASGI 对象。\",\"参数\",\"empty\",\"返回\",\"Any: ASGI 对象\",\"异常\",\"AssertionError: 全局 Driver 对象不是 ASGIMixin 类型\",\"ValueError: 全局 Driver 对象尚未初始化 (nonebot.init 尚未调用)\",\"用法\",\"asgi = nonebot.get_asgi()\"]},\"730\":{\"h\":\"\",\"t\":[\"说明\",\"获取一个连接到 NoneBot 的 Bot 对象。\",\"当提供 self_id 时，此函数是 get_bots()[self_id] 的简写； 当不提供时，返回一个 Bot。\",\"参数\",\"self_id (str | None): 用来识别 Bot 的 Bot.self_id 属性\",\"返回\",\"Bot: Bot 对象\",\"异常\",\"KeyError: 对应 self_id 的 Bot 不存在\",\"ValueError: 没有传入 self_id 且没有 Bot 可用\",\"ValueError: 全局 Driver 对象尚未初始化 (nonebot.init 尚未调用)\",\"用法\",\"assert nonebot.get_bot(\\\"12345\\\") == nonebot.get_bots()[\\\"12345\\\"] another_unspecified_bot = nonebot.get_bot()\"]},\"731\":{\"h\":\"\",\"t\":[\"说明: 获取所有连接到 NoneBot 的 Bot 对象。\",\"参数\",\"empty\",\"返回\",\"dict[str, Bot]: 一个以 Bot.self_id 为键\",\"Bot 对象为值的字典\",\"异常\",\"ValueError: 全局 Driver 对象尚未初始化 (nonebot.init 尚未调用)\",\"用法\",\"bots = nonebot.get_bots()\"]},\"732\":{\"h\":\"\",\"t\":[\"说明\",\"初始化 NoneBot 以及 全局 Driver 对象。\",\"NoneBot 将会从 .env 文件中读取环境信息，并使用相应的 env 文件配置。\",\"也可以传入自定义的 _env_file 来指定 NoneBot 从该文件读取配置。\",\"参数\",\"_env_file (DOTENV_TYPE | None): 配置文件名，默认从 .env.{env_name} 中读取配置\",\"**kwargs (Any): 任意变量，将会存储到 Driver.config 对象里\",\"返回\",\"None\",\"用法\",\"nonebot.init(database=Database(...))\"]},\"733\":{\"h\":\"\",\"t\":[\"说明: 启动 NoneBot，即运行全局 Driver 对象。\",\"参数\",\"*args (Any): 传入 Driver.run 的位置参数\",\"**kwargs (Any): 传入 Driver.run 的命名参数\",\"返回\",\"None\",\"用法\",\"nonebot.run(host=\\\"127.0.0.1\\\", port=8080)\"]},\"734\":{\"h\":\"nonebot.log\",\"t\":[\"本模块定义了 NoneBot 的日志记录 Logger。\",\"NoneBot 使用 loguru 来记录日志信息。\",\"自定义 logger 请参考 自定义日志 以及 loguru 文档。\"]},\"735\":{\"h\":\"\",\"t\":[\"类型: Logger\",\"说明\",\"NoneBot 日志记录器对象。\",\"默认信息:\",\"格式: [%(asctime)s %(name)s] %(levelname)s: %(message)s\",\"等级: INFO ，根据 config.log_level 配置改变\",\"输出: 输出至 stdout\",\"用法\",\"from nonebot.log import logger\"]},\"736\":{\"h\":\"\",\"t\":[\"说明: logging 与 loguru 之间的桥梁，将 logging 的日志转发到 loguru。\",\"参数\",\"auto\"]},\"737\":{\"h\":\"\",\"t\":[\"参数\",\"record (logging.LogRecord)\",\"返回\",\"untyped\"]},\"738\":{\"h\":\"\",\"t\":[\"说明: 默认的日志过滤器，根据 config.log_level 配置改变日志等级。\",\"参数\",\"record (Record)\",\"返回\",\"untyped\"]},\"739\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明: 默认日志格式\"]},\"740\":{\"h\":\"nonebot.matcher\",\"t\":[\"本模块实现事件响应器的创建与运行，并提供一些快捷方法来帮助用户更好的与机器人进行对话。\"]},\"741\":{\"h\":\"\",\"t\":[\"说明: 事件响应器类\",\"参数\",\"empty\"]},\"742\":{\"h\":\"\",\"t\":[\"类型: ClassVar[str]\",\"说明: 事件响应器类型\"]},\"743\":{\"h\":\"\",\"t\":[\"类型: ClassVar[Rule]\",\"说明: 事件响应器匹配规则\"]},\"744\":{\"h\":\"\",\"t\":[\"类型: ClassVar[Permission]\",\"说明: 事件响应器触发权限\"]},\"745\":{\"h\":\"\",\"t\":[\"类型: ClassVar[list[Dependent[Any]]]\",\"说明: 事件响应器拥有的事件处理函数列表\"]},\"746\":{\"h\":\"\",\"t\":[\"类型: ClassVar[int]\",\"说明: 事件响应器优先级\"]},\"747\":{\"h\":\"\",\"t\":[\"类型: bool\",\"说明: 事件响应器是否阻止事件传播\"]},\"748\":{\"h\":\"\",\"t\":[\"类型: ClassVar[bool]\",\"说明: 事件响应器是否为临时\"]},\"749\":{\"h\":\"\",\"t\":[\"类型: ClassVar[datetime | None]\",\"说明: 事件响应器过期时间点\"]},\"750\":{\"h\":\"\",\"t\":[\"说明: 创建一个新的事件响应器，并存储至 matchers <#matchers>_\",\"参数\",\"type_ (str): 事件响应器类型，与 event.get_type() 一致时触发，空字符串表示任意\",\"rule (Rule | None): 匹配规则\",\"permission (Permission | None): 权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器，即触发一次后删除\",\"priority (int): 响应优先级\",\"block (bool): 是否阻止事件向更低优先级的响应器传播\",\"plugin (Plugin | None): Deprecated. 事件响应器所在插件\",\"module (ModuleType | None): Deprecated. 事件响应器所在模块\",\"source (MatcherSource | None): 事件响应器源代码上下文信息\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"default_state (T_State | None): 默认状态 state\",\"default_type_updater (T_TypeUpdater | Dependent[str] | None): 默认事件类型更新函数\",\"default_permission_updater (T_PermissionUpdater | Dependent[Permission] | None): 默认会话权限更新函数\",\"返回\",\"type[Matcher]: 新的事件响应器类\"]},\"751\":{\"h\":\"\",\"t\":[\"说明: 销毁当前的事件响应器\",\"参数\",\"empty\",\"返回\",\"None\"]},\"752\":{\"h\":\"\",\"t\":[\"说明: 检查是否满足触发权限\",\"参数\",\"bot (Bot): Bot 对象\",\"event (Event): 上报事件\",\"stack (AsyncExitStack | None): 异步上下文栈\",\"dependency_cache (T_DependencyCache | None): 依赖缓存\",\"返回\",\"bool: 是否满足权限\"]},\"753\":{\"h\":\"\",\"t\":[\"说明: 检查是否满足匹配规则\",\"参数\",\"bot (Bot): Bot 对象\",\"event (Event): 上报事件\",\"state (T_State): 当前状态\",\"stack (AsyncExitStack | None): 异步上下文栈\",\"dependency_cache (T_DependencyCache | None): 依赖缓存\",\"返回\",\"bool: 是否满足匹配规则\"]},\"754\":{\"h\":\"\",\"t\":[\"说明: 装饰一个函数来更改当前事件响应器的默认响应事件类型更新函数\",\"参数\",\"func (T_TypeUpdater): 响应事件类型更新函数\",\"返回\",\"T_TypeUpdater\"]},\"755\":{\"h\":\"\",\"t\":[\"说明: 装饰一个函数来更改当前事件响应器的默认会话权限更新函数\",\"参数\",\"func (T_PermissionUpdater): 会话权限更新函数\",\"返回\",\"T_PermissionUpdater\"]},\"756\":{\"h\":\"\",\"t\":[\"参数\",\"handler (T_Handler)\",\"parameterless (Iterable[Any] | None)\",\"返回\"]},\"757\":{\"h\":\"\",\"t\":[\"说明: 装饰一个函数来向事件响应器直接添加一个处理函数\",\"参数\",\"parameterless (Iterable[Any] | None): 非参数类型依赖列表\",\"返回\",\"(T_Handler) -> T_Handler\"]},\"758\":{\"h\":\"\",\"t\":[\"说明: 装饰一个函数来指示 NoneBot 在接收用户新的一条消息后继续运行该函数\",\"参数\",\"id (str): 消息 ID\",\"parameterless (Iterable[Any] | None): 非参数类型依赖列表\",\"返回\",\"(T_Handler) -> T_Handler\"]},\"759\":{\"h\":\"\",\"t\":[\"说明\",\"装饰一个函数来指示 NoneBot 获取一个参数 key\",\"当要获取的 key 不存在时接收用户新的一条消息再运行该函数， 如果 key 已存在则直接继续运行\",\"参数\",\"key (str): 参数名\",\"prompt (str | Message | MessageSegment | MessageTemplate | None): 在参数不存在时向用户发送的消息\",\"parameterless (Iterable[Any] | None): 非参数类型依赖列表\",\"返回\",\"(T_Handler) -> T_Handler\"]},\"760\":{\"h\":\"\",\"t\":[\"说明: 发送一条消息给当前交互用户\",\"参数\",\"message (str | Message | MessageSegment | MessageTemplate): 消息内容\",\"**kwargs (Any): Bot.send 的参数， 请参考对应 adapter 的 bot 对象 api\",\"返回\",\"Any\"]},\"761\":{\"h\":\"\",\"t\":[\"说明: 发送一条消息给当前交互用户并结束当前事件响应器\",\"参数\",\"message (str | Message | MessageSegment | MessageTemplate | None): 消息内容\",\"**kwargs: Bot.send 的参数， 请参考对应 adapter 的 bot 对象 api\",\"返回\",\"NoReturn\"]},\"762\":{\"h\":\"\",\"t\":[\"说明: 发送一条消息给当前交互用户并暂停事件响应器，在接收用户新的一条消息后继续下一个处理函数\",\"参数\",\"prompt (str | Message | MessageSegment | MessageTemplate | None): 消息内容\",\"**kwargs: Bot.send 的参数， 请参考对应 adapter 的 bot 对象 api\",\"返回\",\"NoReturn\"]},\"763\":{\"h\":\"\",\"t\":[\"说明: 最近使用 got / receive 接收的消息不符合预期， 发送一条消息给当前交互用户并将当前事件处理流程中断在当前位置，在接收用户新的一个事件后从头开始执行当前处理函数\",\"参数\",\"prompt (str | Message | MessageSegment | MessageTemplate | None): 消息内容\",\"**kwargs: Bot.send 的参数， 请参考对应 adapter 的 bot 对象 api\",\"返回\",\"NoReturn\"]},\"764\":{\"h\":\"\",\"t\":[\"说明: 最近使用 got 接收的消息不符合预期， 发送一条消息给当前交互用户并将当前事件处理流程中断在当前位置，在接收用户新的一条消息后从头开始执行当前处理函数\",\"参数\",\"key (str): 参数名\",\"prompt (str | Message | MessageSegment | MessageTemplate | None): 消息内容\",\"**kwargs: Bot.send 的参数， 请参考对应 adapter 的 bot 对象 api\",\"返回\",\"NoReturn\"]},\"765\":{\"h\":\"\",\"t\":[\"说明: 最近使用 receive 接收的消息不符合预期， 发送一条消息给当前交互用户并将当前事件处理流程中断在当前位置，在接收用户新的一个事件后从头开始执行当前处理函数\",\"参数\",\"id (str): 消息 id\",\"prompt (str | Message | MessageSegment | MessageTemplate | None): 消息内容\",\"**kwargs: Bot.send 的参数， 请参考对应 adapter 的 bot 对象 api\",\"返回\",\"NoReturn\"]},\"766\":{\"h\":\"\",\"t\":[\"说明\",\"跳过当前事件处理函数，继续下一个处理函数\",\"通常在事件处理函数的依赖中使用。\",\"参数\",\"empty\",\"返回\",\"NoReturn\"]},\"767\":{\"h\":\"\",\"t\":[\"说明\",\"获取一个 receive 事件\",\"如果没有找到对应的事件，返回 default 值\",\"重载\",\"1.(id) -> Event | None\",\"参数\",\"id (str)\",\"返回\",\"Event | None\",\"2.(id, default) -> Event | T\",\"参数\",\"id (str)\",\"default (T)\",\"返回\",\"Event | T\"]},\"768\":{\"h\":\"\",\"t\":[\"说明: 设置一个 receive 事件\",\"参数\",\"id (str)\",\"event (Event)\",\"返回\",\"None\"]},\"769\":{\"h\":\"\",\"t\":[\"说明\",\"获取最近一次 receive 事件\",\"如果没有事件，返回 default 值\",\"重载\",\"1.() -> Event | None\",\"参数\",\"empty\",\"返回\",\"Event | None\",\"2.(default) -> Event | T\",\"参数\",\"default (T)\",\"返回\",\"Event | T\"]},\"770\":{\"h\":\"\",\"t\":[\"说明\",\"获取一个 got 消息\",\"如果没有找到对应的消息，返回 default 值\",\"重载\",\"1.(key) -> Message | None\",\"参数\",\"key (str)\",\"返回\",\"Message | None\",\"2.(key, default) -> Message | T\",\"参数\",\"key (str)\",\"default (T)\",\"返回\",\"Message | T\"]},\"771\":{\"h\":\"\",\"t\":[\"说明: 设置一个 got 消息\",\"参数\",\"key (str)\",\"message (Message)\",\"返回\",\"None\"]},\"772\":{\"h\":\"\",\"t\":[\"参数\",\"target (str)\",\"cache (bool)\",\"返回\",\"None\"]},\"773\":{\"h\":\"\",\"t\":[\"重载\",\"1.() -> str | None\",\"参数\",\"empty\",\"返回\",\"str | None\",\"2.(default) -> str | T\",\"参数\",\"default (T)\",\"返回\",\"str | T\"]},\"774\":{\"h\":\"\",\"t\":[\"说明: 阻止事件传播\",\"参数\",\"empty\",\"返回\",\"untyped\"]},\"775\":{\"h\":\"\",\"t\":[\"参数\",\"bot (Bot)\",\"event (Event)\",\"stack (AsyncExitStack | None)\",\"dependency_cache (T_DependencyCache | None)\",\"返回\",\"str\"]},\"776\":{\"h\":\"\",\"t\":[\"参数\",\"bot (Bot)\",\"event (Event)\",\"stack (AsyncExitStack | None)\",\"dependency_cache (T_DependencyCache | None)\",\"返回\",\"Permission\"]},\"777\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"untyped\"]},\"778\":{\"h\":\"\",\"t\":[\"参数\",\"bot (Bot)\",\"event (Event)\",\"返回\",\"untyped\"]},\"779\":{\"h\":\"\",\"t\":[\"参数\",\"bot (Bot)\",\"event (Event)\",\"state (T_State)\",\"stack (AsyncExitStack | None)\",\"dependency_cache (T_DependencyCache | None)\",\"返回\",\"untyped\"]},\"780\":{\"h\":\"\",\"t\":[\"参数\",\"bot (Bot)\",\"event (Event)\",\"state (T_State)\",\"stack (AsyncExitStack | None)\",\"dependency_cache (T_DependencyCache | None)\",\"返回\",\"untyped\"]},\"781\":{\"h\":\"\",\"t\":[\"类型: untyped\"]},\"782\":{\"h\":\"\",\"t\":[\"说明\",\"事件响应器管理器\",\"实现了常用字典操作，用于管理事件响应器。\",\"参数\",\"empty\"]},\"783\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"KeysView[int]\"]},\"784\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"ValuesView[list[type[Matcher]]]\"]},\"785\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"ItemsView[int, list[type[Matcher]]]\"]},\"786\":{\"h\":\"\",\"t\":[\"重载\",\"1.(key) -> list[type[Matcher]] | None\",\"参数\",\"key (int)\",\"返回\",\"list[type[Matcher]] | None\",\"2.(key, default) -> list[type[Matcher]] | T\",\"参数\",\"key (int)\",\"default (T)\",\"返回\",\"list[type[Matcher]] | T\"]},\"787\":{\"h\":\"\",\"t\":[\"参数\",\"key (int)\",\"返回\",\"list[type[Matcher]]\"]},\"788\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"tuple[int, list[type[Matcher]]]\"]},\"789\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"None\"]},\"790\":{\"h\":\"\",\"t\":[\"参数\",\"__m (MutableMapping[int, list[type[Matcher]]])\",\"返回\",\"None\"]},\"791\":{\"h\":\"\",\"t\":[\"参数\",\"key (int)\",\"default (list[type[Matcher]])\",\"返回\",\"list[type[Matcher]]\"]},\"792\":{\"h\":\"\",\"t\":[\"说明: 设置事件响应器存储器\",\"参数\",\"provider_class (type[MatcherProvider]): 事件响应器存储器类\",\"返回\",\"None\"]},\"793\":{\"h\":\"\",\"t\":[\"说明: 事件响应器存储器基类\",\"参数\",\"matchers (Mapping[int, list[type[Matcher]]]): 当前存储器中已有的事件响应器\"]},\"794\":{\"h\":\"\",\"t\":[\"类型: untyped\",\"说明: 默认存储器类型\"]},\"795\":{\"h\":\"nonebot.message\",\"t\":[\"本模块定义了事件处理主要流程。\",\"NoneBot 内部处理并按优先级分发事件给所有事件响应器，提供了多个插槽以进行事件的预处理等。\"]},\"796\":{\"h\":\"\",\"t\":[\"说明\",\"事件预处理。\",\"装饰一个函数，使它在每次接收到事件并分发给各响应器之前执行。\",\"参数\",\"func (T_EventPreProcessor)\",\"返回\",\"T_EventPreProcessor\"]},\"797\":{\"h\":\"\",\"t\":[\"说明\",\"事件后处理。\",\"装饰一个函数，使它在每次接收到事件并分发给各响应器之后执行。\",\"参数\",\"func (T_EventPostProcessor)\",\"返回\",\"T_EventPostProcessor\"]},\"798\":{\"h\":\"\",\"t\":[\"说明\",\"运行预处理。\",\"装饰一个函数，使它在每次事件响应器运行前执行。\",\"参数\",\"func (T_RunPreProcessor)\",\"返回\",\"T_RunPreProcessor\"]},\"799\":{\"h\":\"\",\"t\":[\"说明\",\"运行后处理。\",\"装饰一个函数，使它在每次事件响应器运行后执行。\",\"参数\",\"func (T_RunPostProcessor)\",\"返回\",\"T_RunPostProcessor\"]},\"800\":{\"h\":\"\",\"t\":[\"说明: 检查并运行事件响应器。\",\"参数\",\"Matcher (type[Matcher]): 事件响应器\",\"bot (Bot): Bot 对象\",\"event (Event): Event 对象\",\"state (T_State): 会话状态\",\"stack (AsyncExitStack | None): 异步上下文栈\",\"dependency_cache (T_DependencyCache | None): 依赖缓存\",\"返回\",\"None\"]},\"801\":{\"h\":\"\",\"t\":[\"说明: 处理一个事件。调用该函数以实现分发事件。\",\"参数\",\"bot (Bot): Bot 对象\",\"event (Event): Event 对象\",\"返回\",\"None\",\"用法\",\"driver.task_group.start_soon(handle_event, bot, event)\"]},\"802\":{\"h\":\"nonebot.params\",\"t\":[\"本模块定义了依赖注入的各类参数。\"]},\"803\":{\"h\":\"\",\"t\":[\"说明: Arg 参数消息\",\"参数\",\"key (str | None)\",\"返回\",\"Any\"]},\"804\":{\"h\":\"\",\"t\":[\"说明: Arg 参数消息文本\",\"参数\",\"key (str | None)\",\"返回\",\"str\"]},\"805\":{\"h\":\"\",\"t\":[\"说明: 子依赖装饰器\",\"参数\",\"dependency (T_Handler | None): 依赖函数。默认为参数的类型注释。\",\"use_cache (bool): 是否使用缓存。默认为 True。\",\"validate (bool | PydanticFieldInfo): 是否使用 Pydantic 类型校验。默认为 False。\",\"返回\",\"Any\",\"用法\",\"def depend_func() -> Any: return ... def depend_gen_func(): try: yield ... finally: ... async def handler( param_name: Any = Depends(depend_func), gen: Any = Depends(depend_gen_func), ): ...\"]},\"806\":{\"h\":\"\",\"t\":[\"说明\",\"Arg 注入参数\",\"本注入解析事件响应器操作 got 所获取的参数。\",\"可以通过 Arg、ArgStr、ArgPlainText 等函数参数 key 指定获取的参数， 留空则会根据参数名称获取。\",\"参数\",\"*args\",\"key (str)\",\"type (Literal['message', 'str', 'plaintext'])\",\"**kwargs (Any)\"]},\"807\":{\"h\":\"\",\"t\":[\"说明\",\"注入参数。\",\"本注入解析所有类型为且仅为 Bot 及其子类或 None 的参数。\",\"为保证兼容性，本注入还会解析名为 bot 且没有类型注解的参数。\",\"参数\",\"*args\",\"checker (ModelField | None)\",\"**kwargs (Any)\"]},\"808\":{\"h\":\"\",\"t\":[\"说明\",\"注入参数\",\"本注入解析所有类型为且仅为 Event 及其子类或 None 的参数。\",\"为保证兼容性，本注入还会解析名为 event 且没有类型注解的参数。\",\"参数\",\"*args\",\"checker (ModelField | None)\",\"**kwargs (Any)\"]},\"809\":{\"h\":\"\",\"t\":[\"说明\",\"事件处理状态注入参数\",\"本注入解析所有类型为 T_State 的参数。\",\"为保证兼容性，本注入还会解析名为 state 且没有类型注解的参数。\",\"参数\",\"*args\",\"validate (bool)\",\"**kwargs (Any)\"]},\"810\":{\"h\":\"\",\"t\":[\"说明\",\"子依赖注入参数。\",\"本注入解析所有子依赖注入，然后将它们的返回值作为参数值传递给父依赖。\",\"本注入应该具有最高优先级，因此应该在其他参数之前检查。\",\"参数\",\"*args\",\"dependent (Dependent[Any])\",\"use_cache (bool)\",\"**kwargs (Any)\"]},\"811\":{\"h\":\"\",\"t\":[\"说明: Arg 参数消息纯文本\",\"参数\",\"key (str | None)\",\"返回\",\"str\"]},\"812\":{\"h\":\"\",\"t\":[\"说明\",\"默认值注入参数\",\"本注入解析所有剩余未能解析且具有默认值的参数。\",\"本注入参数应该具有最低优先级，因此应该在所有其他注入参数之后使用。\",\"参数\",\"*args\",\"validate (bool)\",\"**kwargs (Any)\"]},\"813\":{\"h\":\"\",\"t\":[\"说明\",\"事件响应器实例注入参数\",\"本注入解析所有类型为且仅为 Matcher 及其子类或 None 的参数。\",\"为保证兼容性，本注入还会解析名为 matcher 且没有类型注解的参数。\",\"参数\",\"*args\",\"checker (ModelField | None)\",\"**kwargs (Any)\"]},\"814\":{\"h\":\"\",\"t\":[\"说明\",\"的异常注入参数\",\"本注入解析所有类型为 Exception 或 None 的参数。\",\"为保证兼容性，本注入还会解析名为 exception 且没有类型注解的参数。\",\"参数\",\"*args\",\"validate (bool)\",\"**kwargs (Any)\"]},\"815\":{\"h\":\"\",\"t\":[\"说明: 类型参数\",\"参数\",\"empty\",\"返回\",\"str\"]},\"816\":{\"h\":\"\",\"t\":[\"说明: 消息参数\",\"参数\",\"empty\",\"返回\",\"Any\"]},\"817\":{\"h\":\"\",\"t\":[\"说明: 纯文本消息参数\",\"参数\",\"empty\",\"返回\",\"str\"]},\"818\":{\"h\":\"\",\"t\":[\"说明:to_me 参数\",\"参数\",\"empty\",\"返回\",\"bool\"]},\"819\":{\"h\":\"\",\"t\":[\"说明: 消息命令元组\",\"参数\",\"empty\",\"返回\",\"tuple[str, ...]\"]},\"820\":{\"h\":\"\",\"t\":[\"说明: 消息命令文本\",\"参数\",\"empty\",\"返回\",\"str\"]},\"821\":{\"h\":\"\",\"t\":[\"说明: 消息命令参数\",\"参数\",\"empty\",\"返回\",\"Any\"]},\"822\":{\"h\":\"\",\"t\":[\"说明: 消息命令开头\",\"参数\",\"empty\",\"返回\",\"str\"]},\"823\":{\"h\":\"\",\"t\":[\"说明: 消息命令与参数之间的空白\",\"参数\",\"empty\",\"返回\",\"str\"]},\"824\":{\"h\":\"\",\"t\":[\"说明: shell 命令解析后的参数字典\",\"参数\",\"empty\",\"返回\",\"Any\"]},\"825\":{\"h\":\"\",\"t\":[\"说明: shell 命令原始参数列表\",\"参数\",\"empty\",\"返回\",\"Any\"]},\"826\":{\"h\":\"\",\"t\":[\"说明: 正则匹配结果\",\"参数\",\"empty\",\"返回\",\"Match[str]\"]},\"827\":{\"h\":\"\",\"t\":[\"说明: 正则匹配结果文本\",\"重载\",\"1.(__group=0) -> str\",\"参数\",\"__group (Literal[0])\",\"返回\",\"str\",\"2.(__group) -> str | Any\",\"参数\",\"__group (str | int)\",\"返回\",\"str | Any\",\"3.(__group1, __group2, *groups) -> tuple[str | Any, ...]\",\"参数\",\"__group1 (str | int)\",\"__group2 (str | int)\",\"*groups (str | int)\",\"返回\",\"tuple[str | Any, ...]\"]},\"828\":{\"h\":\"\",\"t\":[\"说明: 正则匹配结果 group 元组\",\"参数\",\"empty\",\"返回\",\"tuple[Any, ...]\"]},\"829\":{\"h\":\"\",\"t\":[\"说明: 正则匹配结果 group 字典\",\"参数\",\"empty\",\"返回\",\"dict[str, Any]\"]},\"830\":{\"h\":\"\",\"t\":[\"说明: 响应触发前缀\",\"参数\",\"empty\",\"返回\",\"str\"]},\"831\":{\"h\":\"\",\"t\":[\"说明: 响应触发后缀\",\"参数\",\"empty\",\"返回\",\"str\"]},\"832\":{\"h\":\"\",\"t\":[\"说明: 响应触发完整消息\",\"参数\",\"empty\",\"返回\",\"str\"]},\"833\":{\"h\":\"\",\"t\":[\"说明: 响应触发关键字\",\"参数\",\"empty\",\"返回\",\"str\"]},\"834\":{\"h\":\"\",\"t\":[\"说明:receive 事件参数\",\"参数\",\"id (str | None)\",\"default (Any)\",\"返回\",\"Any\"]},\"835\":{\"h\":\"\",\"t\":[\"说明:last_receive 事件参数\",\"参数\",\"default (Any)\",\"返回\",\"Any\"]},\"836\":{\"h\":\"nonebot.permission\",\"t\":[\"本模块是 Matcher.permission 的类型定义。\",\"每个事件响应器 拥有一个 Permission，其中是 PermissionChecker 的集合。 只要有一个 PermissionChecker 检查结果为 True 时就会继续运行。\"]},\"837\":{\"h\":\"\",\"t\":[\"说明\",\"匹配当前事件属于指定会话。\",\"如果 perm 中仅有 User 类型的权限检查函数，则会去除原有检查函数的会话 ID 限制。\",\"参数\",\"*users (str)\",\"perm (Permission | None): 需要同时满足的权限\",\"user: 会话白名单\",\"返回\",\"untyped\"]},\"838\":{\"h\":\"\",\"t\":[\"说明: 检查当前事件是否属于指定会话。\",\"参数\",\"users (tuple[str, ...]): 会话 ID 元组\",\"perm (Permission | None): 需同时满足的权限\"]},\"839\":{\"h\":\"\",\"t\":[\"说明\",\"从事件中获取会话 ID。\",\"如果 perm 中仅有 User 类型的权限检查函数，则会去除原有的会话 ID 限制。\",\"参数\",\"event (Event): Event 对象\",\"perm (Permission | None): 需同时满足的权限\",\"返回\",\"Self\"]},\"840\":{\"h\":\"\",\"t\":[\"说明\",\"指定会话与权限。\",\"如果 perm 中仅有 User 类型的权限检查函数，则会去除原有的会话 ID 限制。\",\"参数\",\"*users (str): 会话白名单\",\"perm (Permission | None): 需同时满足的权限\",\"返回\",\"Self\"]},\"841\":{\"h\":\"\",\"t\":[\"说明\",\"权限类。\",\"当事件传递时，在 Matcher 运行前进行检查。\",\"参数\",\"*checkers (T_PermissionChecker | Dependent[bool]): PermissionChecker\",\"用法\",\"Permission(async_function) | sync_function # 等价于 Permission(async_function, sync_function)\"]},\"842\":{\"h\":\"\",\"t\":[\"类型: set[Dependent[bool]]\",\"说明: 存储 PermissionChecker\"]},\"843\":{\"h\":\"\",\"t\":[\"说明: 检查是否满足某个权限。\",\"参数\",\"bot (Bot): Bot 对象\",\"event (Event): Event 对象\",\"stack (AsyncExitStack | None): 异步上下文栈\",\"dependency_cache (T_DependencyCache | None): 依赖缓存\",\"返回\",\"bool\"]},\"844\":{\"h\":\"\",\"t\":[\"说明: 检查是否为消息事件\",\"参数\",\"auto\"]},\"845\":{\"h\":\"\",\"t\":[\"说明: 检查是否为通知事件\",\"参数\",\"auto\"]},\"846\":{\"h\":\"\",\"t\":[\"说明: 检查是否为请求事件\",\"参数\",\"auto\"]},\"847\":{\"h\":\"\",\"t\":[\"说明: 检查是否为元事件\",\"参数\",\"auto\"]},\"848\":{\"h\":\"\",\"t\":[\"类型:Permission\",\"说明\",\"匹配任意 message 类型事件\",\"仅在需要同时捕获不同类型事件时使用，优先使用 message type 的 Matcher。\"]},\"849\":{\"h\":\"\",\"t\":[\"类型:Permission\",\"说明\",\"匹配任意 notice 类型事件\",\"仅在需要同时捕获不同类型事件时使用，优先使用 notice type 的 Matcher。\"]},\"850\":{\"h\":\"\",\"t\":[\"类型:Permission\",\"说明\",\"匹配任意 request 类型事件\",\"仅在需要同时捕获不同类型事件时使用，优先使用 request type 的 Matcher。\"]},\"851\":{\"h\":\"\",\"t\":[\"类型:Permission\",\"说明\",\"匹配任意 meta_event 类型事件\",\"仅在需要同时捕获不同类型事件时使用，优先使用 meta_event type 的 Matcher。\"]},\"852\":{\"h\":\"\",\"t\":[\"说明: 检查当前事件是否是消息事件且属于超级管理员\",\"参数\",\"auto\"]},\"853\":{\"h\":\"\",\"t\":[\"类型:Permission\",\"说明: 匹配任意超级用户事件\"]},\"854\":{\"h\":\"nonebot.rule\",\"t\":[\"本模块是 Matcher.rule 的类型定义。\",\"每个事件响应器拥有一个Rule，其中是 RuleChecker 的集合。 只有当所有 RuleChecker 检查结果为 True 时继续运行。\"]},\"855\":{\"h\":\"\",\"t\":[\"说明\",\"规则类。\",\"当事件传递时，在 Matcher 运行前进行检查。\",\"参数\",\"*checkers (T_RuleChecker | Dependent[bool]): RuleChecker\",\"用法\",\"Rule(async_function) & sync_function # 等价于 Rule(async_function, sync_function)\"]},\"856\":{\"h\":\"\",\"t\":[\"类型: set[Dependent[bool]]\",\"说明: 存储 RuleChecker\"]},\"857\":{\"h\":\"\",\"t\":[\"说明: 检查是否符合所有规则\",\"参数\",\"bot (Bot): Bot 对象\",\"event (Event): Event 对象\",\"state (T_State): 当前 State\",\"stack (AsyncExitStack | None): 异步上下文栈\",\"dependency_cache (T_DependencyCache | None): 依赖缓存\",\"返回\",\"bool\"]},\"858\":{\"h\":\"\",\"t\":[\"参数\",\"auto\"]},\"859\":{\"h\":\"\",\"t\":[\"说明: TRIE_VALUE(command_start, command)\",\"参数\",\"auto\"]},\"860\":{\"h\":\"\",\"t\":[\"说明: 检查消息纯文本是否以指定字符串开头。\",\"参数\",\"msg (tuple[str, ...]): 指定消息开头字符串元组\",\"ignorecase (bool): 是否忽略大小写\"]},\"861\":{\"h\":\"\",\"t\":[\"说明: 匹配消息纯文本开头。\",\"参数\",\"msg (str | tuple[str, ...]): 指定消息开头字符串元组\",\"ignorecase (bool): 是否忽略大小写\",\"返回\",\"Rule\"]},\"862\":{\"h\":\"\",\"t\":[\"说明: 检查消息纯文本是否以指定字符串结尾。\",\"参数\",\"msg (tuple[str, ...]): 指定消息结尾字符串元组\",\"ignorecase (bool): 是否忽略大小写\"]},\"863\":{\"h\":\"\",\"t\":[\"说明: 匹配消息纯文本结尾。\",\"参数\",\"msg (str | tuple[str, ...]): 指定消息开头字符串元组\",\"ignorecase (bool): 是否忽略大小写\",\"返回\",\"Rule\"]},\"864\":{\"h\":\"\",\"t\":[\"说明: 检查消息纯文本是否与指定字符串全匹配。\",\"参数\",\"msg (tuple[str, ...]): 指定消息全匹配字符串元组\",\"ignorecase (bool): 是否忽略大小写\"]},\"865\":{\"h\":\"\",\"t\":[\"说明: 完全匹配消息。\",\"参数\",\"msg (str | tuple[str, ...]): 指定消息全匹配字符串元组\",\"ignorecase (bool): 是否忽略大小写\",\"返回\",\"Rule\"]},\"866\":{\"h\":\"\",\"t\":[\"说明: 检查消息纯文本是否包含指定关键字。\",\"参数\",\"*keywords (str): 指定关键字元组\"]},\"867\":{\"h\":\"\",\"t\":[\"说明: 匹配消息纯文本关键词。\",\"参数\",\"*keywords (str): 指定关键字元组\",\"返回\",\"Rule\"]},\"868\":{\"h\":\"\",\"t\":[\"说明: 检查消息是否为指定命令。\",\"参数\",\"cmds (list[tuple[str, ...]]): 指定命令元组列表\",\"force_whitespace (str | bool | None): 是否强制命令后必须有指定空白符\"]},\"869\":{\"h\":\"\",\"t\":[\"说明\",\"匹配消息命令。\",\"根据配置里提供的 command_start,command_sep 判断消息是否为命令。\",\"可以通过 Command 获取匹配成功的命令（例: (\\\"test\\\",)）， 通过 RawCommand 获取匹配成功的原始命令文本（例: \\\"/test\\\"）， 通过 CommandArg 获取匹配成功的命令参数。\",\"参数\",\"*cmds (str | tuple[str, ...]): 命令文本或命令元组\",\"force_whitespace (str | bool | None): 是否强制命令后必须有指定空白符\",\"返回\",\"Rule\",\"用法\",\"使用默认 command_start, command_sep 配置情况下：\",\"命令 (\\\"test\\\",) 可以匹配: /test 开头的消息 命令 (\\\"test\\\", \\\"sub\\\") 可以匹配: /test.sub 开头的消息\",\"提示\",\"命令内容与后续消息间无需空格!\"]},\"870\":{\"h\":\"\",\"t\":[\"说明\",\"shell_like 命令参数解析器，解析出错时不会退出程序。\",\"支持 Message 富文本解析。\",\"参数\",\"auto\",\"用法\",\"用法与 argparse.ArgumentParser 相同， 参考文档: argparse\"]},\"871\":{\"h\":\"\",\"t\":[\"重载\",\"1.(args=None, namespace=None) -> tuple[Namespace, list[str | MessageSegment]]\",\"参数\",\"args (Sequence[str | MessageSegment] | None)\",\"namespace (None)\",\"返回\",\"tuple[Namespace, list[str | MessageSegment]]\",\"2.(args, namespace) -> tuple[T, list[str | MessageSegment]]\",\"参数\",\"args (Sequence[str | MessageSegment] | None)\",\"namespace (T)\",\"返回\",\"tuple[T, list[str | MessageSegment]]\",\"3.(*, namespace) -> tuple[T, list[str | MessageSegment]]\",\"参数\",\"namespace (T)\",\"返回\",\"tuple[T, list[str | MessageSegment]]\"]},\"872\":{\"h\":\"\",\"t\":[\"说明: 检查消息是否为指定 shell 命令。\",\"参数\",\"cmds (list[tuple[str, ...]]): 指定命令元组列表\",\"parser (ArgumentParser | None): 可选参数解析器\"]},\"873\":{\"h\":\"\",\"t\":[\"说明\",\"匹配 shell_like 形式的消息命令。\",\"根据配置里提供的 command_start,command_sep 判断消息是否为命令。\",\"可以通过 Command 获取匹配成功的命令 （例: (\\\"test\\\",)）， 通过 RawCommand 获取匹配成功的原始命令文本 （例: \\\"/test\\\"）， 通过 ShellCommandArgv 获取解析前的参数列表 （例: [\\\"arg\\\", \\\"-h\\\"]）， 通过 ShellCommandArgs 获取解析后的参数字典 （例: {\\\"arg\\\": \\\"arg\\\", \\\"h\\\": True}）。\",\"警告\",\"如果参数解析失败，则通过 ShellCommandArgs 获取的将是 ParserExit 异常。\",\"参数\",\"*cmds (str | tuple[str, ...]): 命令文本或命令元组\",\"parser (ArgumentParser | None): ArgumentParser 对象\",\"返回\",\"Rule\",\"用法\",\"使用默认 command_start, command_sep 配置，更多示例参考argparse 标准库文档。\",\"from nonebot.rule import ArgumentParser parser = ArgumentParser() parser.add_argument(\\\"-a\\\", action=\\\"store_true\\\") rule = shell_command(\\\"ls\\\", parser=parser)\",\"提示\",\"命令内容与后续消息间无需空格!\"]},\"874\":{\"h\":\"\",\"t\":[\"说明: 检查消息字符串是否符合指定正则表达式。\",\"参数\",\"regex (str): 正则表达式\",\"flags (int): 正则表达式标记\"]},\"875\":{\"h\":\"\",\"t\":[\"说明\",\"匹配符合正则表达式的消息字符串。\",\"可以通过 RegexStr 获取匹配成功的字符串， 通过 RegexGroup 获取匹配成功的 group 元组， 通过 RegexDict 获取匹配成功的 group 字典。\",\"参数\",\"regex (str): 正则表达式\",\"flags (int | re.RegexFlag): 正则表达式标记\",\"返回\",\"Rule\",\"提示\",\"正则表达式匹配使用 search 而非 match，如需从头匹配请使用 r\\\"^xxx\\\" 来确保匹配开头\",\"提示\",\"正则表达式匹配使用 EventMessage 的 str 字符串， 而非 EventMessage 的 PlainText 纯文本字符串\"]},\"876\":{\"h\":\"\",\"t\":[\"说明: 检查事件是否与机器人有关。\",\"参数\",\"auto\"]},\"877\":{\"h\":\"\",\"t\":[\"说明: 匹配与机器人有关的事件。\",\"参数\",\"empty\",\"返回\",\"Rule\"]},\"878\":{\"h\":\"\",\"t\":[\"说明: 检查事件类型是否为指定类型。\",\"参数\",\"*types (type[Event])\"]},\"879\":{\"h\":\"\",\"t\":[\"说明: 匹配事件类型。\",\"参数\",\"*types (type[Event]): 事件类型\",\"返回\",\"Rule\"]},\"880\":{\"h\":\"nonebot.typing\",\"t\":[\"本模块定义了 NoneBot 模块中共享的一些类型。\",\"使用 Python 的 Type Hint 语法， 参考 PEP 484,PEP 526 和typing。\"]},\"881\":{\"h\":\"\",\"t\":[\"说明: 标记一个方法为父类 interface 的 implement\",\"参数\",\"InterfaceClass (object)\",\"返回\",\"untyped\"]},\"882\":{\"h\":\"\",\"t\":[\"参数\",\"type_ (type[Any])\",\"返回\",\"bool\"]},\"883\":{\"h\":\"\",\"t\":[\"参数\",\"origin (type[Any] | None)\",\"返回\",\"bool\"]},\"884\":{\"h\":\"\",\"t\":[\"说明: 判断是否是 Literal 类型\",\"参数\",\"origin (type[Any] | None)\",\"返回\",\"bool\"]},\"885\":{\"h\":\"\",\"t\":[\"说明: 获取 Literal 类型包含的所有值\",\"参数\",\"type_ (type[Any])\",\"返回\",\"list[Any]\"]},\"886\":{\"h\":\"\",\"t\":[\"说明: 判断是否是 Annotated 类型\",\"参数\",\"origin (type[Any] | None)\",\"返回\",\"bool\"]},\"887\":{\"h\":\"\",\"t\":[\"说明: 判断是否是 None 类型\",\"参数\",\"type_ (type[Any])\",\"返回\",\"bool\"]},\"888\":{\"h\":\"\",\"t\":[\"参数\",\"ref (ForwardRef)\",\"globalns (dict[str, Any])\",\"localns (dict[str, Any])\",\"返回\",\"Any\"]},\"889\":{\"h\":\"\",\"t\":[\"参数\",\"auto\"]},\"890\":{\"h\":\"\",\"t\":[\"类型: dict[Any, Any]\",\"说明: 事件处理状态 State 类型\"]},\"891\":{\"h\":\"\",\"t\":[\"类型: _DependentCallable[Any]\",\"说明\",\"Bot 连接建立时钩子函数\",\"依赖参数:\",\"DependParam: 子依赖参数\",\"BotParam: Bot 对象\",\"DefaultParam: 带有默认值的参数\"]},\"892\":{\"h\":\"\",\"t\":[\"类型: _DependentCallable[Any]\",\"说明\",\"Bot 连接断开时钩子函数\",\"依赖参数:\",\"DependParam: 子依赖参数\",\"BotParam: Bot 对象\",\"DefaultParam: 带有默认值的参数\"]},\"893\":{\"h\":\"\",\"t\":[\"类型: (Bot, str, dict[str, Any]) -> Awaitable[Any]\",\"说明:bot.call_api 钩子函数\"]},\"894\":{\"h\":\"\",\"t\":[\"类型: (Bot, Exception | None, str, dict[str, Any], Any) -> Awaitable[Any]\",\"说明:bot.call_api 后执行的函数，参数分别为 bot, exception, api, data, result\"]},\"895\":{\"h\":\"\",\"t\":[\"类型: _DependentCallable[Any]\",\"说明\",\"事件预处理函数 EventPreProcessor 类型\",\"依赖参数:\",\"DependParam: 子依赖参数\",\"BotParam: Bot 对象\",\"EventParam: Event 对象\",\"StateParam: State 对象\",\"DefaultParam: 带有默认值的参数\"]},\"896\":{\"h\":\"\",\"t\":[\"类型: _DependentCallable[Any]\",\"说明\",\"事件后处理函数 EventPostProcessor 类型\",\"依赖参数:\",\"DependParam: 子依赖参数\",\"BotParam: Bot 对象\",\"EventParam: Event 对象\",\"StateParam: State 对象\",\"DefaultParam: 带有默认值的参数\"]},\"897\":{\"h\":\"\",\"t\":[\"类型: _DependentCallable[Any]\",\"说明\",\"事件响应器运行前预处理函数 RunPreProcessor 类型\",\"依赖参数:\",\"DependParam: 子依赖参数\",\"BotParam: Bot 对象\",\"EventParam: Event 对象\",\"StateParam: State 对象\",\"MatcherParam: Matcher 对象\",\"DefaultParam: 带有默认值的参数\"]},\"898\":{\"h\":\"\",\"t\":[\"类型: _DependentCallable[Any]\",\"说明\",\"事件响应器运行后后处理函数 RunPostProcessor 类型\",\"依赖参数:\",\"DependParam: 子依赖参数\",\"BotParam: Bot 对象\",\"EventParam: Event 对象\",\"StateParam: State 对象\",\"MatcherParam: Matcher 对象\",\"ExceptionParam: 异常对象（可能为 None）\",\"DefaultParam: 带有默认值的参数\"]},\"899\":{\"h\":\"\",\"t\":[\"类型: _DependentCallable[bool]\",\"说明\",\"RuleChecker 即判断是否响应事件的处理函数。\",\"依赖参数:\",\"DependParam: 子依赖参数\",\"BotParam: Bot 对象\",\"EventParam: Event 对象\",\"StateParam: State 对象\",\"DefaultParam: 带有默认值的参数\"]},\"900\":{\"h\":\"\",\"t\":[\"类型: _DependentCallable[bool]\",\"说明\",\"PermissionChecker 即判断事件是否满足权限的处理函数。\",\"依赖参数:\",\"DependParam: 子依赖参数\",\"BotParam: Bot 对象\",\"EventParam: Event 对象\",\"DefaultParam: 带有默认值的参数\"]},\"901\":{\"h\":\"\",\"t\":[\"类型: _DependentCallable[Any]\",\"说明: Handler 处理函数。\"]},\"902\":{\"h\":\"\",\"t\":[\"类型: _DependentCallable[str]\",\"说明\",\"TypeUpdater 在 Matcher.pause, Matcher.reject 时被运行，用于更新响应的事件类型。 默认会更新为 message。\",\"依赖参数:\",\"DependParam: 子依赖参数\",\"BotParam: Bot 对象\",\"EventParam: Event 对象\",\"StateParam: State 对象\",\"MatcherParam: Matcher 对象\",\"DefaultParam: 带有默认值的参数\"]},\"903\":{\"h\":\"\",\"t\":[\"类型: _DependentCallable[Permission]\",\"说明\",\"PermissionUpdater 在 Matcher.pause, Matcher.reject 时被运行，用于更新会话对象权限。 默认会更新为当前事件的触发对象。\",\"依赖参数:\",\"DependParam: 子依赖参数\",\"BotParam: Bot 对象\",\"EventParam: Event 对象\",\"StateParam: State 对象\",\"MatcherParam: Matcher 对象\",\"DefaultParam: 带有默认值的参数\"]},\"904\":{\"h\":\"\",\"t\":[\"类型: dict[_DependentCallable[Any], DependencyCache]\",\"说明: 依赖缓存, 用于存储依赖函数的返回值\"]},\"905\":{\"h\":\"nonebot.utils\",\"t\":[\"本模块包含了 NoneBot 的一些工具函数\"]},\"906\":{\"h\":\"\",\"t\":[\"说明\",\"用于记录带颜色日志时转义 <tag> 类型特殊标签\",\"参考: loguru color 标签\",\"参数\",\"s (str): 需要转义的字符串\",\"返回\",\"str\"]},\"907\":{\"h\":\"\",\"t\":[\"说明: 深度更新合并字典\",\"参数\",\"mapping (dict[K, Any])\",\"*updating_mappings (dict[K, Any])\",\"返回\",\"dict[K, Any]\"]},\"908\":{\"h\":\"\",\"t\":[\"说明: 检查 cls 是否是 class_or_tuple 中的一个类型子类并忽略类型错误。\",\"参数\",\"cls (Any)\",\"class_or_tuple (type[Any] | tuple[type[Any], ...])\",\"返回\",\"bool\"]},\"909\":{\"h\":\"\",\"t\":[\"说明\",\"检查 cls 是否是 class_or_tuple 中的一个类型子类。\",\"特别的：\",\"如果 cls 是 typing.Union 或 types.UnionType 类型， 则会检查其中的所有类型是否是 class_or_tuple 中一个类型的子类或 None。\",\"如果 cls 是 typing.Literal 类型， 则会检查其中的所有值是否是 class_or_tuple 中一个类型的实例。\",\"如果 cls 是 typing.TypeVar 类型， 则会检查其 __bound__ 或 __constraints__ 是否是 class_or_tuple 中一个类型的子类或 None。\",\"参数\",\"cls (Any)\",\"class_or_tuple (type[Any] | tuple[type[Any], ...])\",\"返回\",\"bool\"]},\"910\":{\"h\":\"\",\"t\":[\"说明: 检查 type_ 是否是复杂类型\",\"参数\",\"type_ (type[Any])\",\"返回\",\"bool\"]},\"911\":{\"h\":\"\",\"t\":[\"说明: 检查 call 是否是一个 callable 协程函数\",\"参数\",\"call ((...) -> Any)\",\"返回\",\"bool\"]},\"912\":{\"h\":\"\",\"t\":[\"说明: 检查 call 是否是一个生成器函数\",\"参数\",\"call ((...) -> Any)\",\"返回\",\"bool\"]},\"913\":{\"h\":\"\",\"t\":[\"说明: 检查 call 是否是一个异步生成器函数\",\"参数\",\"call ((...) -> Any)\",\"返回\",\"bool\"]},\"914\":{\"h\":\"\",\"t\":[\"说明: 一个用于包装 sync function 为 async function 的装饰器\",\"参数\",\"call ((P) -> R): 被装饰的同步函数\",\"返回\",\"(P) -> Coroutine[None, None, R]\"]},\"915\":{\"h\":\"\",\"t\":[\"说明: 一个用于包装 sync context manager 为 async context manager 的执行函数\",\"参数\",\"cm (AbstractContextManager[T])\",\"返回\",\"AsyncGenerator[T, None]\"]},\"916\":{\"h\":\"\",\"t\":[\"说明: 运行协程并当遇到指定异常时返回指定值。\",\"重载\",\"1.(coro, exc, return_on_err=None) -> T | None\",\"参数\",\"coro (Coroutine[Any, Any, T])\",\"exc (tuple[type[Exception], ...])\",\"return_on_err (None)\",\"返回\",\"T | None\",\"2.(coro, exc, return_on_err) -> T | R\",\"参数\",\"coro (Coroutine[Any, Any, T])\",\"exc (tuple[type[Exception], ...])\",\"return_on_err (R)\",\"返回\",\"T | R\",\"参数\",\"coro: 要运行的协程\",\"exc: 要捕获的异常\",\"return_on_err: 当发生异常时返回的值\",\"返回\",\"协程的返回值或发生异常时的指定值\"]},\"917\":{\"h\":\"\",\"t\":[\"说明: 运行协程并在取消时屏蔽取消异常。\",\"参数\",\"coro (Coroutine[Any, Any, T]): 要运行的协程\",\"返回\",\"T: 协程的返回值\"]},\"918\":{\"h\":\"\",\"t\":[\"参数\",\"exc_group (BaseExceptionGroup[E])\",\"返回\",\"Generator[E, None, None]\"]},\"919\":{\"h\":\"\",\"t\":[\"说明: 获取对象的名称\",\"参数\",\"obj (Any)\",\"返回\",\"str\"]},\"920\":{\"h\":\"\",\"t\":[\"说明: 转换路径为模块名\",\"参数\",\"path (Path)\",\"返回\",\"str\"]},\"921\":{\"h\":\"\",\"t\":[\"说明: 解析并导入点分表示法的对象\",\"参数\",\"obj_str (str)\",\"default_attr (str)\",\"default_prefix (str | None)\",\"返回\",\"Any\"]},\"922\":{\"h\":\"\",\"t\":[\"说明: 类属性装饰器\",\"参数\",\"func ((Any) -> T)\"]},\"923\":{\"h\":\"\",\"t\":[\"说明: 可以序列化 Message(List[Dataclass]) 的 JSONEncoder\",\"参数\",\"auto\"]},\"924\":{\"h\":\"\",\"t\":[\"参数\",\"o\",\"返回\",\"untyped\"]},\"925\":{\"h\":\"\",\"t\":[\"说明: 用于打印 adapter 的日志。\",\"参数\",\"logger_name (str): adapter 的名称\",\"返回\",\"untyped: 日志记录函数\",\"日志记录函数的参数:\",\"level: 日志等级\",\"message: 日志信息\",\"exception: 异常信息\"]},\"926\":{\"h\":\"日志\",\"t\":[\"无论是在开发还是在生产环境中，日志都是一个重要的功能，可以帮助我们了解运行状况、排查问题等。虽然我们可以使用 print 来将需要的信息输出到控制台，但是这种方式难以控制，而且不利于日志的归档、分析等。NoneBot 使用优秀的 Loguru 库来进行日志记录。\"]},\"927\":{\"h\":\"记录日志\",\"t\":[\"我们可以从 NoneBot 中导入 logger 对象，然后使用 logger 对象的方法来记录日志。\",\"from nonebot import logger logger.trace(\\\"This is a trace message\\\") logger.debug(\\\"This is a debug message\\\") logger.info(\\\"This is an info message\\\") logger.success(\\\"This is a success message\\\") logger.warning(\\\"This is a warning message\\\") logger.error(\\\"This is an error message\\\") logger.critical(\\\"This is a critical message\\\")\",\"我们仅需一行代码即可记录对应级别的日志。日志可以通过配置 LOG_LEVEL 配置项来过滤输出等级，控制台中仅会输出大于等于 LOG_LEVEL 的日志。默认的 LOG_LEVEL 为 INFO，即只会输出 INFO、SUCCESS、WARNING、ERROR、CRITICAL 级别的日志。\",\"如果需要记录 Exception traceback 日志，可以向 logger 添加 exception 选项：\",\"try: 1 / 0 except ZeroDivisionError: logger.opt(exception=True).error(\\\"ZeroDivisionError\\\")\",\"如果需要输出彩色日志，可以向 logger 添加 colors 选项：\",\"logger.opt(colors=True).warning(\\\"We got a <red>BIG</red> problem\\\")\",\"更多日志记录方法请参考 Loguru 文档。\"]},\"928\":{\"h\":\"自定义日志输出\",\"t\":[\"NoneBot 在启动时会添加一个默认的日志处理器，该处理器会将日志输出到stdout，并且根据 LOG_LEVEL 配置项过滤日志等级。\",\"默认的日志格式为：\",\"<g>{time:MM-DD HH:mm:ss}</g> [<lvl>{level}</lvl>] <c><u>{name}</u></c> | {message}\",\"我们可以从 nonebot.log 模块导入以使用 NoneBot 的默认格式和过滤器：\",\"from nonebot.log import default_format, default_filter\",\"如果需要自定义日志格式，我们需要移除 NoneBot 默认的日志处理器并添加新的日志处理器。例如，在机器人入口文件中 nonebot.init 之前添加以下内容：\",\"from nonebot.log import logger_id # 移除 NoneBot 默认的日志处理器 logger.remove(logger_id) # 添加新的日志处理器 logger.add( sys.stdout, level=0, diagnose=True, format=\\\"<g>{time:MM-DD HH:mm:ss}</g> [<lvl>{level}</lvl>] <c><u>{name}</u></c> | {message}\\\", filter=default_filter )\",\"如果想要输出日志到文件，我们可以使用 logger.add 方法添加文件处理器：\",\"logger.add(\\\"error.log\\\", level=\\\"ERROR\\\", format=default_format, rotation=\\\"1 week\\\")\",\"更多日志处理器的使用方法请参考 Loguru 文档。\"]},\"929\":{\"h\":\"重定向 logging 日志\",\"t\":[\"logging 是 Python 标准库中的日志模块，NoneBot 提供了一个 logging handler 用于将 logging 日志重定向到 loguru 处理。\",\"from nonebot.log import LoguruHandler # root logger 添加 LoguruHandler logging.basicConfig(handlers=[LoguruHandler()]) # 或者为其他 logging.Logger 添加 LoguruHandler logger.addHandler(LoguruHandler())\"]},\"930\":{\"h\":\"事件类型与重载\",\"t\":[\"在之前的示例中，我们已经了解了如何获取事件信息以及使用平台接口。但是，事件信息通常不仅仅包含消息这一个内容，还有其他平台提供的信息，例如消息发送时间、消息发送者等等。同时，在使用平台接口时，我们需要确保使用的平台接口与所要发送的平台类型一致，对不同类型的事件需要做出不同的处理。在本章节中，我们将介绍如何获取事件更多的信息以及根据事件类型进行不同的处理。\"]},\"931\":{\"h\":\"事件类型\",\"t\":[\"在 NoneBot 中，事件均是 nonebot.adapters.Event 基类的子类型，基类对一些必要的属性进行了抽象，子类型则根据不同的平台进行了实现。在自定义权限一节中，我们就使用了 Event 的抽象方法 get_user_id 来获取事件发送者 ID，这个方法由协议适配器进行了实现，返回机器人用户对应的平台 ID。更多的基类抽象方法可以在使用适配器中查看。\",\"既然事件是基类的子类型，我们实际可以获得的信息通常多于基类抽象方法所提供的。如果我们不满足于基类能获得的信息，我们可以小小的修改一下事件处理函数的事件参数类型注解，使其变为子类型，这样我们就可以通过协议适配器定义的子类型来获取更多的信息。我们以 Console 协议适配器为例：\",\"from nonebot.adapters.console import MessageEvent @weather.got(\\\"location\\\", prompt=\\\"请输入地名\\\") async def got_location(event: MessageEvent, location: str = ArgPlainText()): await weather.finish(f\\\"{event.time.strftime('%Y-%m-%d')} {location} 的天气是...\\\")\",\"在上面的代码中，我们获取了 Console 协议适配器的消息事件提供的发送时间 time 属性。\",\"注意\",\"如果基类就能满足你的需求，那么就不要修改事件参数类型注解，这样可以使你的代码更加通用，可以在更多平台上运行。如何根据不同平台事件类型进行不同的处理，我们将在重载一节中介绍。\"]},\"932\":{\"h\":\"重载\",\"t\":[\"我们在编写机器人时，常常会遇到这样一个问题：如何对私聊和群聊消息进行不同的处理？如何对不同平台的事件进行不同的处理？针对这些问题，NoneBot 提供了一个便捷而高效的解决方案 ── 重载。简单来说，依赖函数会根据其参数的类型注解来决定是否执行，忽略不符合其参数类型注解的情况。这样，我们就可以通过修改事件参数类型注解来实现对不同事件的处理，或者修改 Bot 参数类型注解来实现使用不同平台的接口。我们以 OneBot 协议适配器为例：\",\"from nonebot.adapters.onebot.v11 import PrivateMessageEvent, GroupMessageEvent @matcher.handle() async def handle_private(event: PrivateMessageEvent): await matcher.finish(\\\"私聊消息\\\") @matcher.handle() async def handle_group(event: GroupMessageEvent): await matcher.finish(\\\"群聊消息\\\")\",\"这样，机器人用户就会在私聊和群聊中分别收到不同的回复。同样的，我们也可以通过修改 Bot 参数类型注解来实现使用不同平台的接口：\",\"from nonebot.adapters.console import Bot as ConsoleBot from nonebot.adapters.onebot.v11 import Bot as OneBot @matcher.handle() async def handle_console(bot: ConsoleBot): await bot.bell() @matcher.handle() async def handle_onebot(bot: OneBot): await bot.send_group_message(group_id=123123, message=\\\"OneBot\\\")\",\"注意\",\"重载机制对所有的参数类型注解都有效，因此，依赖注入也可以使用这个特性来对不同的返回值进行处理。\",\"但 Bot、Event 和 Matcher 三者的参数类型注解具有最高检查优先级，如果三者任一类型注解不匹配，那么其他依赖注入将不会执行（如：Depends）。\",\"提示\",\"如何更好地编写一个跨平台的插件，我们将在最佳实践中介绍。\"]},\"933\":{\"h\":\"响应规则\",\"t\":[\"机器人在实际应用中，往往会接收到多种多样的事件类型，NoneBot 通过响应规则来控制事件的处理。\",\"在指南中，我们为 weather 命令添加了一个 rule=to_me() 参数，这个参数就是一个响应规则，确保只有在私聊或者 @bot 时才会响应。\",\"响应规则是一个 Rule 对象，它由一系列的 RuleChecker 函数组成，每个 RuleChecker 函数都会检查事件是否符合条件，如果所有的检查都通过，则事件会被处理。\"]},\"934\":{\"h\":\"RuleChecker\",\"t\":[\"RuleChecker 是一个返回值为 bool 类型的依赖函数，即 RuleChecker 支持依赖注入。我们可以根据上一节中添加的配置项，在 weather 插件目录中编写一个响应规则：\",\"from nonebot import get_plugin_config from .config import Config plugin_config = get_plugin_config(Config) async def is_enable() -> bool: return plugin_config.weather_plugin_enabled weather = on_command(\\\"天气\\\", rule=is_enable)\",\"在上面的代码中，我们定义了一个函数 is_enable，它会检查配置项 weather_plugin_enabled 是否为 True。这个函数 is_enable 即为一个 RuleChecker。\"]},\"935\":{\"h\":\"Rule\",\"t\":[\"Rule 是若干个 RuleChecker 的集合，它会并发调用每个 RuleChecker，只有当所有 RuleChecker 检查通过时匹配成功。例如：我们可以组合两个 RuleChecker，一个用于检查插件是否启用，一个用于检查用户是否在黑名单中：\",\"from nonebot.rule import Rule from nonebot.adapters import Event async def is_enable() -> bool: return plugin_config.weather_plugin_enabled async def is_blacklisted(event: Event) -> bool: return event.get_user_id() not in BLACKLIST rule = Rule(is_enable, is_blacklisted) weather = on_command(\\\"天气\\\", rule=rule)\"]},\"936\":{\"h\":\"合并响应规则\",\"t\":[\"在定义响应规则时，我们可以将规则进行细分，来更好地复用规则。而在使用时，我们需要合并多个规则。除了使用 Rule 对象来组合多个 RuleChecker 外，我们还可以对 Rule 对象进行合并。在原 weather 插件中，我们可以将 rule=to_me() 与 rule=is_enable 使用 & 运算符合并：\",\"from nonebot.rule import to_me from nonebot import get_plugin_config from .config import Config plugin_config = get_plugin_config(Config) async def is_enable() -> bool: return plugin_config.weather_plugin_enabled weather = on_command( \\\"天气\\\", rule=to_me() & is_enable, aliases={\\\"weather\\\", \\\"查天气\\\"}, priority=plugin_config.weather_command_priority, block=True, )\",\"这样，weather 命令就只会在插件启用且在私聊或者 @bot 时才会响应。\",\"合并响应规则可以有多种形式，例如：\",\"rule1 = Rule(foo_checker) rule2 = Rule(bar_checker) rule = rule1 & rule2 rule = rule1 & bar_checker rule = foo_checker & rule2\",\"同时，我们也无需担心合并了一个 None 值，Rule 会忽略 None 值。\",\"assert (rule & None) is rule\"]},\"937\":{\"h\":\"主动使用响应规则\",\"t\":[\"除了在事件响应器中使用响应规则外，我们也可以主动使用响应规则来判断事件是否符合条件。例如：\",\"rule = Rule(some_checker) result: bool = await rule(bot, event, state)\",\"我们只需要传入 Bot 对象、事件和会话状态，Rule 会并发调用所有 RuleChecker 进行检查，并返回结果。\"]},\"938\":{\"h\":\"内置响应规则\",\"t\":[\"NoneBot 内置了一些常用的响应规则，可以直接通过事件响应器辅助函数或者自行合并其他规则使用。内置响应规则列表可以参考事件响应器进阶\"]},\"939\":{\"h\":\"会话状态\",\"t\":[\"在事件处理流程中，和用户交互的过程即是会话。在会话中，我们可能需要记录一些信息，例如用户的重试次数等等，以便在会话中的不同阶段进行判断和处理。这些信息都可以存储于会话状态中。\",\"NoneBot 中的会话状态是一个字典，可以通过类型 T_State 来获取。字典内可以存储任意类型的数据，但是要注意的是，NoneBot 本身会在会话状态中存储一些信息，因此不要使用 NoneBot 使用的键名。\",\"from nonebot.typing import T_State @matcher.got(\\\"key\\\", prompt=\\\"请输入密码\\\") async def _(state: T_State, key: str = ArgPlainText()): if key != \\\"some password\\\": try_count = state.get(\\\"try_count\\\", 1) if try_count >= 3: await matcher.finish(\\\"密码错误次数过多\\\") else: state[\\\"try_count\\\"] = try_count + 1 await matcher.reject(\\\"密码错误，请重新输入\\\") await matcher.finish(\\\"密码正确\\\")\",\"会话状态的生命周期与事件处理流程相同，在期间的任何一个事件处理函数都可以进行读写。\",\"from nonebot.typing import T_State @matcher.handle() async def _(state: T_State): state[\\\"key\\\"] = \\\"value\\\" @matcher.handle() async def _(state: T_State): await matcher.finish(state[\\\"key\\\"])\",\"会话状态还可以用于发送动态消息，消息模板在发送时会使用会话状态字典进行渲染。消息模板的使用方法已经在消息处理中介绍过，这里不再赘述。\",\"from nonebot.typing import T_State from nonebot.adapters import MessageTemplate @matcher.handle() async def _(state: T_State): state[\\\"username\\\"] = \\\"user\\\" @matcher.got(\\\"password\\\", prompt=MessageTemplate(\\\"请输入 {username} 的密码\\\")) async def _(): await matcher.finish(MessageTemplate(\\\"密码为 {password}\\\"))\"]},\"940\":{\"h\":\"下一步\",\"t\":[\"至此，我们已经了解了 NoneBot 的大多数功能用法，相信你已经可以独自写出一个插件了。现在你可以选择：\",\"即刻开始插件编写！\",\"更深入地了解 NoneBot 的更多功能和原理！\"]},\"941\":{\"h\":\"数据存储\",\"t\":[\"在使用插件的过程中，难免会需要存储一些持久化数据，例如用户的个人信息、群组的信息等。除了使用数据库等第三方存储之外，还可以使用本地文件来自行管理数据。NoneBot 提供了 nonebot-plugin-localstore 插件，可用于获取正确的数据存储路径并写入数据。\"]},\"942\":{\"h\":\"安装插件\",\"t\":[\"在使用前请先安装 nonebot-plugin-localstore 插件至项目环境中，可参考获取商店插件来了解并选择安装插件的方式。如：\",\"在项目目录下执行以下命令：\",\"nb plugin install nonebot-plugin-localstore\"]},\"943\":{\"h\":\"使用插件\",\"t\":[\"nonebot-plugin-localstore 插件兼容 Windows、Linux 和 macOS 等操作系统，使用时无需关心操作系统的差异。同时插件提供 nb-cli 脚本，可以使用 nb localstore 命令来检查数据存储路径。\",\"在使用本插件前同样需要使用 require 方法进行加载并导入需要使用的方法，可参考 跨插件访问 一节进行了解，如：\",\"from nonebot import require require(\\\"nonebot_plugin_localstore\\\") import nonebot_plugin_localstore as store # 获取插件缓存目录 cache_dir = store.get_plugin_cache_dir() # 获取插件缓存文件 cache_file = store.get_plugin_cache_file(\\\"file_name\\\") # 获取插件数据目录 data_dir = store.get_plugin_data_dir() # 获取插件数据文件 data_file = store.get_plugin_data_file(\\\"file_name\\\") # 获取插件配置目录 config_dir = store.get_plugin_config_dir() # 获取插件配置文件 config_file = store.get_plugin_config_file(\\\"file_name\\\")\",\"警告\",\"在 Windows 和 macOS 系统下，插件的数据目录和配置目录是同一个目录，因此在使用时需要注意避免文件名冲突。\",\"插件提供的方法均返回一个 pathlib.Path 路径，可以参考 pathlib 文档来了解如何使用。常用的方法有：\",\"from pathlib import Path data_file = store.get_plugin_data_file(\\\"file_name\\\") # 写入文件内容 data_file.write_text(\\\"Hello World!\\\") # 读取文件内容 data = data_file.read_text()\",\"提示\",\"对于嵌套插件，子插件的存储目录将位于父插件存储目录下。\"]},\"944\":{\"h\":\"配置项\"},\"945\":{\"h\":\"localstore_use_cwd\",\"t\":[\"使用当前工作目录作为数据存储目录，以下数据目录配置项默认值将会对应变更\",\"默认值：False\",\"LOCALSTORE_USE_CWD=true\"]},\"946\":{\"h\":\"localstore_cache_dir\",\"t\":[\"自定义缓存目录\",\"默认值：\",\"当 localstore_use_cwd 为 True 时，缓存目录为 <current_working_directory>/cache，否则：\",\"macOS: ~/Library/Caches/nonebot2\",\"Unix: ~/.cache/nonebot2 (XDG default)\",\"Windows: C:\\\\Users\\\\<username>\\\\AppData\\\\Local\\\\nonebot2\\\\Cache\",\"LOCALSTORE_CACHE_DIR=/tmp/cache\"]},\"947\":{\"h\":\"localstore_data_dir\",\"t\":[\"自定义数据目录\",\"默认值：\",\"当 localstore_use_cwd 为 True 时，数据目录为 <current_working_directory>/data，否则：\",\"macOS: ~/Library/Application Support/nonebot2\",\"Unix: ~/.local/share/nonebot2 or in $XDG_DATA_HOME, if defined\",\"Win XP (not roaming): C:\\\\Documents and Settings\\\\<username>\\\\Application Data\\\\nonebot2\",\"Win 7 (not roaming): C:\\\\Users\\\\<username>\\\\AppData\\\\Local\\\\nonebot2\",\"LOCALSTORE_DATA_DIR=/tmp/data\"]},\"948\":{\"h\":\"localstore_config_dir\",\"t\":[\"自定义配置目录\",\"默认值：\",\"当 localstore_use_cwd 为 True 时，配置目录为 <current_working_directory>/config，否则：\",\"macOS: same as user_data_dir\",\"Unix: ~/.config/nonebot2\",\"Win XP (roaming): C:\\\\Documents and Settings\\\\<username>\\\\Local Settings\\\\Application Data\\\\nonebot2\",\"Win 7 (roaming): C:\\\\Users\\\\<username>\\\\AppData\\\\Roaming\\\\nonebot2\",\"LOCALSTORE_CONFIG_DIR=/tmp/config\"]},\"949\":{\"h\":\"localstore_plugin_cache_dir\",\"t\":[\"自定义插件缓存目录\",\"默认值：{}\",\"LOCALSTORE_PLUGIN_CACHE_DIR=' { \\\"plugin_id\\\": \\\"/tmp/plugin_cache\\\" } '\"]},\"950\":{\"h\":\"localstore_plugin_data_dir\",\"t\":[\"自定义插件数据目录\",\"默认值：{}\",\"LOCALSTORE_PLUGIN_DATA_DIR=' { \\\"plugin_id\\\": \\\"/tmp/plugin_data\\\" } '\"]},\"951\":{\"h\":\"localstore_plugin_config_dir\",\"t\":[\"自定义插件配置目录\",\"默认值：{}\",\"LOCALSTORE_PLUGIN_CONFIG_DIR=' { \\\"plugin_id\\\": \\\"/tmp/plugin_config\\\" } '\"]},\"952\":{\"h\":\"错误跟踪\",\"t\":[\"在应用实际运行过程中，可能会出现各种各样的错误。可能是由于代码逻辑错误，也可能是由于用户输入错误，甚至是由于第三方服务的错误。这些错误都会导致应用的运行出现问题，这时候就需要对错误进行跟踪，以便及时发现问题并进行修复。NoneBot 提供了 nonebot-plugin-sentry 插件，支持 sentry 平台，可以方便地进行错误跟踪。\"]},\"953\":{\"h\":\"安装插件\",\"t\":[\"在使用前请先安装 nonebot-plugin-sentry 插件至项目环境中，可参考获取商店插件来了解并选择安装插件的方式。如：\",\"在项目目录下执行以下命令：\",\"nb plugin install nonebot-plugin-sentry\"]},\"954\":{\"h\":\"使用插件\",\"t\":[\"在安装完成之后，仅需要对插件进行简单的配置即可使用。\"]},\"955\":{\"h\":\"获取 sentry DSN\",\"t\":[\"前往 sentry 平台，注册并创建一个新的项目，然后在项目设置中找到 Client Keys (DSN)，复制其中的 DSN 值。\"]},\"956\":{\"h\":\"配置插件\",\"t\":[\"注意\",\"错误跟踪通常在生产环境中使用，因此开发环境中 sentry_dsn 留空即会停用插件。\",\"在项目 dotenv 配置文件中添加以下配置即可使用：\",\"SENTRY_DSN=<your_sentry_dsn>\"]},\"957\":{\"h\":\"配置项\",\"t\":[\"配置项具体含义参考 Sentry Docs。\",\"sentry_dsn: str\",\"sentry_debug: bool = False\",\"sentry_release: str | None = None\",\"sentry_release: str | None = None\",\"sentry_environment: str | None = nonebot env\",\"sentry_server_name: str | None = None\",\"sentry_sample_rate: float = 1.\",\"sentry_max_breadcrumbs: int = 100\",\"sentry_attach_stacktrace: bool = False\",\"sentry_send_default_pii: bool = False\",\"sentry_in_app_include: List[str] = Field(default_factory=list)\",\"sentry_in_app_exclude: List[str] = Field(default_factory=list)\",\"sentry_request_bodies: str = \\\"medium\\\"\",\"sentry_with_locals: bool = True\",\"sentry_ca_certs: str | None = None\",\"sentry_before_send: Callable[[Any, Any], Any | None] | None = None\",\"sentry_before_breadcrumb: Callable[[Any, Any], Any | None] | None = None\",\"sentry_transport: Any | None = None\",\"sentry_http_proxy: str | None = None\",\"sentry_https_proxy: str | None = None\",\"sentry_shutdown_timeout: int = 2\"]},\"958\":{\"h\":\"定时任务\",\"t\":[\"APScheduler (Advanced Python Scheduler) 是一个 Python 第三方库，其强大的定时任务功能被广泛应用于各个场景。在 NoneBot 中，定时任务作为一个额外功能，依赖于基于 APScheduler 开发的 nonebot-plugin-apscheduler 插件进行支持。\"]},\"959\":{\"h\":\"安装插件\",\"t\":[\"在使用前请先安装 nonebot-plugin-apscheduler 插件至项目环境中，可参考获取商店插件来了解并选择安装插件的方式。如：\",\"在项目目录下执行以下命令：\",\"nb plugin install nonebot-plugin-apscheduler\"]},\"960\":{\"h\":\"使用插件\",\"t\":[\"nonebot-plugin-apscheduler 本质上是对 APScheduler 进行了封装以适用于 NoneBot 开发，因此其使用方式与 APScheduler 本身并无显著区别。在此我们会简要介绍其调用方法，更多的使用方面的功能请参考APScheduler 官方文档。\"]},\"961\":{\"h\":\"导入调度器\",\"t\":[\"由于 nonebot_plugin_apscheduler 作为插件，因此需要在使用前对其进行加载并导入其中的 scheduler 调度器来创建定时任务。使用 require 方法可轻松完成这一过程，可参考 跨插件访问 一节进行了解。\",\"from nonebot import require require(\\\"nonebot_plugin_apscheduler\\\") from nonebot_plugin_apscheduler import scheduler\"]},\"962\":{\"h\":\"添加定时任务\",\"t\":[\"在 APScheduler 官方文档 中提供了以下两种直接添加任务的方式：\",\"from nonebot import require require(\\\"nonebot_plugin_apscheduler\\\") from nonebot_plugin_apscheduler import scheduler # 基于装饰器的方式 @scheduler.scheduled_job(\\\"cron\\\", hour=\\\"*/2\\\", id=\\\"job_0\\\", args=[1], kwargs={arg2: 2}) async def run_every_2_hour(arg1: int, arg2: int): pass # 基于 add_job 方法的方式 def run_every_day(arg1: int, arg2: int): pass scheduler.add_job( run_every_day, \\\"interval\\\", days=1, id=\\\"job_1\\\", args=[1], kwargs={arg2: 2} )\",\"注意\",\"由于 APScheduler 的定时任务并不是由事件响应器所触发的事件，因此其任务函数无法同事件处理函数一样通过依赖注入获取上下文信息，也无法通过事件响应器对象的方法进行任何操作，因此我们需要使用调用平台 API的方式来获取信息或收发消息。\",\"相对于事件处理依赖而言，编写定时任务更像是编写普通的函数，需要我们自行获取信息以及发送信息，请不要将事件处理依赖的特殊语法用于定时任务！\",\"关于 APScheduler 的更多使用方法，可以参考 APScheduler 官方文档 进行了解。\"]},\"963\":{\"h\":\"配置项\"},\"964\":{\"h\":\"apscheduler_autostart\",\"t\":[\"类型: bool\",\"默认值: True\",\"是否自动启动 scheduler ，若不启动需要自行调用 scheduler.start()。\"]},\"965\":{\"h\":\"apscheduler_log_level\",\"t\":[\"类型: int\",\"默认值: 30\",\"apscheduler 输出的日志等级\",\"WARNING = 30 (默认)\",\"INFO = 20\",\"DEBUG = 10 (只有在开启 nonebot 的 debug 模式才会显示 debug 日志)\"]},\"966\":{\"h\":\"apscheduler_config\",\"t\":[\"类型: dict\",\"默认值: { \\\"apscheduler.timezone\\\": \\\"Asia/Shanghai\\\" }\",\"apscheduler 的相关配置。参考配置调度器, 配置参数\",\"配置需要包含 apscheduler. 作为前缀，例如 apscheduler.timezone。\"]},\"967\":{\"h\":\"参与讨论\",\"t\":[\"如果在安装或者开发 NoneBot 过程中遇到了任何问题，或者有新奇的点子，欢迎参与我们的社区讨论：\",\"点击下方链接前往 GitHub，前往 Issues 页面，在 New Issue Template 中选择 Question\",\"NoneBot：\",\"通过 QQ 群（点击下方链接直达）\",\"通过 QQ 频道\",\"通过 Discord 服务器（点击下方链接直达）\"]},\"968\":{\"h\":\"贡献指南\"},\"969\":{\"h\":\"Code of Conduct\",\"t\":[\"请参阅 Code of Conduct。\"]},\"970\":{\"h\":\"参与开发\",\"t\":[\"请参阅 Contributing。\"]},\"971\":{\"h\":\"鸣谢\",\"t\":[\"感谢以下开发者对 NoneBot2 作出的贡献：\"]},\"972\":{\"h\":\"编写适配器\",\"t\":[\"在编写适配器之前，我们需要先了解适配器的功能与组成，适配器通常由 Adapter、Bot、Event 和 Message 四个部分组成，在编写适配器时，我们需要继承 NoneBot 中的基类，并根据实际平台来编写每个部分功能。\"]},\"973\":{\"h\":\"组织结构\",\"t\":[\"NoneBot 适配器项目通常以 nonebot-adapter-{adapter-name} 作为项目名，并以命名空间包的形式编写，即在 nonebot/adapters/{adapter-name} 目录中编写实际代码，例如：\",\"📦 nonebot-adapter-{adapter-name} ├── 📂 nonebot │ ├── 📂 adapters │ │ ├── 📂 {adapter-name} │ │ │ ├── 📜 __init__.py │ │ │ ├── 📜 adapter.py │ │ │ ├── 📜 bot.py │ │ │ ├── 📜 config.py │ │ │ ├── 📜 event.py │ │ │ └── 📜 message.py ├── 📜 pyproject.toml └── 📜 README.md\",\"提示\",\"上述的项目结构仅作推荐，不做强制要求，保证实际可用性即可。\"]},\"974\":{\"h\":\"使用 NB-CLI 创建项目\",\"t\":[\"我们可以使用脚手架快速创建项目：\",\"nb adapter create\",\"按照指引，输入适配器名称以及存储位置，即可创建一个带有基本结构的适配器项目。\"]},\"975\":{\"h\":\"组成部分\",\"t\":[\"提示\",\"本章节的代码中提到的 Adapter、Bot、Event 和 Message 等，均为下文中适配器所编写的类，而非 NoneBot 中的基类。\"]},\"976\":{\"h\":\"Log\",\"t\":[\"适配器在处理时通常需要打印日志，但直接使用 NoneBot 的默认 logger 不方便区分适配器输出和其它日志。因此我们可以使用 NoneBot 提供的 logger_wrapper 方法，自定义一个 log 函数用于快捷打印适配器日志：\",\"from nonebot.utils import logger_wrapper log = logger_wrapper(\\\"your_adapter_name\\\")\",\"这个 log 函数会在默认 logger 中添加适配器名称前缀，它接收三个参数：日志等级、日志内容以及可选的异常，具体用法如下：\",\"from .log import log log(\\\"DEBUG\\\", \\\"A DEBUG log.\\\") log(\\\"INFO\\\", \\\"A INFO log.\\\") try: ... except Exception as e: log(\\\"ERROR\\\", \\\"something error.\\\", e)\"]},\"977\":{\"h\":\"Config\",\"t\":[\"通常适配器需要一些配置项，例如平台连接密钥等。适配器的配置方法与插件配置类似，例如：\",\"from pydantic import BaseModel class Config(BaseModel): xxx_id: str xxx_token: str\",\"配置项的读取将在下方 Adapter 中介绍。\"]},\"978\":{\"h\":\"Adapter\",\"t\":[\"Adapter 负责转换事件、调用接口，以及正确创建 Bot 对象并注册到 NoneBot 中。在编写平台相关内容之前，我们需要继承基类，并实现适配器的基本信息：\",\"from typing import Any from typing_extensions import override from nonebot.drivers import Driver from nonebot import get_plugin_config from nonebot.adapters import Adapter as BaseAdapter from .config import Config class Adapter(BaseAdapter): @override def __init__(self, driver: Driver, **kwargs: Any): super().__init__(driver, **kwargs) # 读取适配器所需的配置项 self.adapter_config: Config = get_plugin_config(Config) @classmethod @override def get_name(cls) -> str: \\\"\\\"\\\"适配器名称\\\"\\\"\\\" return \\\"your_adapter_name\\\"\"]},\"979\":{\"h\":\"与平台交互\",\"t\":[\"NoneBot 提供了多种 Driver 来帮助适配器进行网络通信，主要分为客户端和服务端两种类型。我们需要根据平台文档和特性选择合适的通信方式，并编写相关方法用于初始化适配器，与平台建立连接和进行交互：\"]},\"980\":{\"h\":\"客户端通信方式\",\"t\":[\"import asyncio from typing_extensions import override from nonebot import get_plugin_config from nonebot.exception import WebSocketClosed from nonebot.drivers import Request, WebSocketClientMixin class Adapter(BaseAdapter): @override def __init__(self, driver: Driver, **kwargs: Any): super().__init__(driver, **kwargs) self.adapter_config: Config = get_plugin_config(Config) self.task: Optional[asyncio.Task] = None # 存储 ws 任务 self.setup() def setup(self) -> None: if not isinstance(self.driver, WebSocketClientMixin): # 判断用户配置的Driver类型是否符合适配器要求，不符合时应抛出异常 raise RuntimeError( f\\\"Current driver {self.config.driver} doesn't support websocket client connections!\\\" f\\\"{self.get_name()} Adapter need a WebSocket Client Driver to work.\\\" ) # 在 NoneBot 启动和关闭时进行相关操作 self.driver.on_startup(self.startup) self.driver.on_shutdown(self.shutdown) async def startup(self) -> None: \\\"\\\"\\\"定义启动时的操作，例如和平台建立连接\\\"\\\"\\\" self.task = asyncio.create_task(self._forward_ws()) # 建立 ws 连接 async def _forward_ws(self): request = Request( method=\\\"GET\\\", url=\\\"your_platform_websocket_url\\\", headers={\\\"token\\\": \\\"...\\\"}, # 鉴权请求头 ) while True: try: async with self.websocket(request) as ws: try: # 处理 websocket ... except WebSocketClosed as e: log( \\\"ERROR\\\", \\\"<r><bg #f8bbd0>WebSocket Closed</bg #f8bbd0></r>\\\", e, ) except Exception as e: log( \\\"ERROR\\\", \\\"<r><bg #f8bbd0>Error while process data from \\\" \\\"websocket platform_websocket_url. \\\" \\\"Trying to reconnect...</bg #f8bbd0></r>\\\", e, ) finally: # 这里要断开 Bot 连接 except Exception as e: # 尝试重连 log( \\\"ERROR\\\", \\\"<r><bg #f8bbd0>Error while setup websocket to \\\" \\\"platform_websocket_url. Trying to reconnect...</bg #f8bbd0></r>\\\", e, ) await asyncio.sleep(3) # 重连间隔 async def shutdown(self) -> None: \\\"\\\"\\\"定义关闭时的操作，例如停止任务、断开连接\\\"\\\"\\\" # 断开 ws 连接 if self.task is not None and not self.task.done(): self.task.cancel()\"]},\"981\":{\"h\":\"服务端通信方式\",\"t\":[\"from nonebot import get_plugin_config from nonebot.drivers import ( Request, ASGIMixin, WebSocket, HTTPServerSetup, WebSocketServerSetup ) class Adapter(BaseAdapter): @override def __init__(self, driver: Driver, **kwargs: Any): super().__init__(driver, **kwargs) self.adapter_config: Config = get_plugin_config(Config) self.setup() def setup(self) -> None: if not isinstance(self.driver, ASGIMixin): raise RuntimeError( f\\\"Current driver {self.config.driver} doesn't support asgi server!\\\" f\\\"{self.get_name()} Adapter need a asgi server driver to work.\\\" ) # 建立服务端路由 # HTTP Webhook 路由 http_setup = HTTPServerSetup( URL(\\\"your_webhook_url\\\"), # 路由地址 \\\"POST\\\", # 接收的方法 \\\"WEBHOOK name\\\", # 路由名称 self._handle_http, # 处理函数 ) self.setup_http_server(http_setup) # 反向 Websocket 路由 ws_setup = WebSocketServerSetup( URL(\\\"your_websocket_url\\\"), # 路由地址 \\\"WebSocket name\\\", # 路由名称 self._handle_ws, # 处理函数 ) self.setup_websocket_server(ws_setup) async def _handle_http(self, request: Request) -> Response: \\\"\\\"\\\"HTTP 路由处理函数，只有一个类型为 Request 的参数，且返回值类型为 Response\\\"\\\"\\\" ... return Response( status_code=200, # 状态码 headers={\\\"something\\\": \\\"something\\\"}, # 响应头 content=\\\"xxx\\\", # 响应内容 ) async def _handle_ws(self, websocket: WebSocket) -> Any: \\\"\\\"\\\"WebSocket 路由处理函数，只有一个类型为 WebSocket 的参数\\\"\\\"\\\" ...\",\"更多通信交互方式可以参考以下适配器：\",\"OneBot - WebSocket 客户端、WebSocket 服务端、HTTP WEBHOOK、HTTP POST\",\"QQGuild - WebSocket 服务端\",\"Telegram - HTTP WEBHOOK\"]},\"982\":{\"h\":\"建立 Bot 连接\",\"t\":[\"在与平台建立连接后，我们需要将 Bot 实例化，并调用适配器提供的的 bot_connect 方法告知 NoneBot 建立了 Bot 连接。在与平台断开连接或出现某些异常进行重连时，我们需要调用 bot_disconnect 方法告知 NoneBot 断开了 Bot 连接。\",\"from .bot import Bot class Adapter(BaseAdapter): def _handle_connect(self): bot_id = ... # 通过配置或者平台 API 等方式，获取到 Bot 的 ID bot = Bot(self, self_id=bot_id) # 实例化 Bot self.bot_connect(bot) # 建立 Bot 连接 def _handle_disconnect(self): self.bot_disconnect(bot) # 断开 Bot 连接\"]},\"983\":{\"h\":\"转换 Event 事件\",\"t\":[\"在接收到来自平台的事件数据后，我们需要将其转为适配器的 Event，并调用 Bot 的 handle_event 方法来让 Bot 对事件进行处理：\",\"import asyncio from typing import Any, Dict from nonebot.compat import type_validate_python from .bot import Bot from .event import Event from .log import log class Adapter(BaseAdapter): @classmethod def payload_to_event(cls, payload: Dict[str, Any]) -> Event: \\\"\\\"\\\"根据平台事件的特性，转换平台 payload 为具体 Event Event 模型继承自 pydantic.BaseModel，具体请参考 pydantic 文档 \\\"\\\"\\\" # 做一层异常处理，以应对平台事件数据的变更 try: return type_validate_python(your_event_class, payload) except Exception as e: # 无法正常解析为具体 Event 时，给出日志提示 log( \\\"WARNING\\\", f\\\"Parse event error: {str(payload)}\\\", ) # 也可以尝试转为基础 Event 进行处理 return type_validate_python(Event, payload) async def _forward(self, bot: Bot): payload: Dict[str, Any] # 接收到的事件数据 event = self.payload_to_event(payload) # 让 bot 对事件进行处理 asyncio.create_task(bot.handle_event(event))\"]},\"984\":{\"h\":\"调用平台 API\",\"t\":[\"我们需要实现 Adapter 的 _call_api 方法，使开发者能够调用平台提供的 API。如果通过 WebSocket 通信可以通过 send 方法来发送数据，如果采用 HTTP 请求，则需要通过 NoneBot 提供的 Request 对象，调用 driver 的 request 方法来发送请求。\",\"from typing import Any from typing_extensions import override from nonebot.drivers import Request, WebSocket from .bot import Bot class Adapter(BaseAdapter): @override async def _call_api(self, bot: Bot, api: str, **data: Any) -> Any: log(\\\"DEBUG\\\", f\\\"Calling API <y>{api}</y>\\\") # 给予日志提示 platform_data = your_handle_data_method(data) # 自行将数据转为平台所需要的格式 # 采用 HTTP 请求的方式，需要构造一个 Request 对象 request = Request( method=\\\"GET\\\", # 请求方法 url=api, # 接口地址 headers=..., # 请求头，通常需要包含鉴权信息 params=platform_data, # 自行处理数据的传输形式 # json=platform_data, # data=platform_data, ) # 发送请求，返回结果 return await self.driver.request(request) # 采用 WebSocket 通信的方式，可以直接调用 send 方法发送数据 # 通过某种方式获取到 bot 对应的 websocket 对象 ws: WebSocket = your_get_websocket_method(bot.self_id) await ws.send_text(platform_data) # 发送 str 类型的数据 await ws.send_bytes(platform_data) # 发送 bytes 类型的数据 await ws.send(platform_data) # 是以上两种方式的合体 # 接收并返回结果，同样的，也有 str 和 bytes 的区别 return await ws.receive_text() return await ws.receive_bytes() return await ws.receive()\",\"调用平台 API 实现方式具体可以参考以下适配器：\",\"Websocket:\",\"OneBot V11\",\"OneBot V12\",\"HTTP:\",\"QQ 频道\",\"Telegram\",\"飞书\"]},\"985\":{\"h\":\"Bot\",\"t\":[\"Bot 是机器人开发者能够直接获取并使用的核心对象，负责存储平台机器人相关信息，并提供回复事件、调用 API 的上层方法。我们需要继承基类 Bot，并实现相关方法：\",\"from typing import TYPE_CHECKING, Any, Union from typing_extensions import override from nonebot.message import handle_event from nonebot.adapters import Bot as BaseBot from .event import Event from .message import Message, MessageSegment if TYPE_CHECKING: from .adapter import Adapter class Bot(BaseBot): \\\"\\\"\\\" your_adapter_name 协议 Bot 适配。 \\\"\\\"\\\" @override def __init__(self, adapter: Adapter, self_id: str, **kwargs: Any): super().__init__(adapter, self_id) self.adapter: Adapter = adapter # 一些有关 Bot 的信息也可以在此定义和存储 async def handle_event(self, event: Event): # 根据需要，对事件进行某些预处理，例如： # 检查事件是否和机器人有关操作，去除事件消息首尾的 @bot # 检查事件是否有回复消息，调用平台 API 获取原始消息的消息内容 ... # 调用 handle_event 让 NoneBot 对事件进行处理 await handle_event(self, event) @override async def send( self, event: Event, message: Union[str, Message, MessageSegment], **kwargs: Any, ) -> Any: # 根据平台实现 Bot 回复事件的方法 # 将消息处理为平台所需的格式后，调用发送消息接口进行发送，例如： data = message_to_platform_data(message) await self.send_message( data=data, ... )\"]},\"986\":{\"h\":\"Event\",\"t\":[\"Event 是 NoneBot 中的事件主体对象，所有平台消息在进入处理流程前需要转换为 NoneBot 事件。我们需要继承基类 Event，并实现相关方法：\",\"from typing_extensions import override from nonebot.compat import model_dump from nonebot.adapters import Event as BaseEvent class Event(BaseEvent): @override def get_event_name(self) -> str: # 返回事件的名称，用于日志打印 return \\\"event name\\\" @override def get_event_description(self) -> str: # 返回事件的描述，用于日志打印，请注意转义 loguru tag return escape_tag(repr(model_dump(self))) @override def get_message(self): # 获取事件消息的方法，根据事件具体实现，如果事件非消息类型事件，则抛出异常 raise ValueError(\\\"Event has no message!\\\") @override def get_user_id(self) -> str: # 获取用户 ID 的方法，根据事件具体实现，如果事件没有用户 ID，则抛出异常 raise ValueError(\\\"Event has no context!\\\") @override def get_session_id(self) -> str: # 获取事件会话 ID 的方法，根据事件具体实现，如果事件没有相关 ID，则抛出异常 raise ValueError(\\\"Event has no context!\\\") @override def is_tome(self) -> bool: # 判断事件是否和机器人有关 return False\",\"然后根据平台消息的类型，编写各种不同的事件，并且注意要根据事件类型实现 get_type 方法，具体请参考事件类型。消息类型事件还应重写 get_message 和 get_user_id 等方法，例如：\",\"from .message import Message class HeartbeatEvent(Event): \\\"\\\"\\\"心跳时间，通常为元事件\\\"\\\"\\\" @override def get_type(self) -> str: return \\\"meta_event\\\" class MessageEvent(Event): \\\"\\\"\\\"消息事件\\\"\\\"\\\" message_id: str user_id: str @override def get_type(self) -> str: return \\\"message\\\" @override def get_message(self) -> Message: # 返回事件消息对应的 NoneBot Message 对象 return self.message @override def get_user_id(self) -> str: return self.user_id class JoinRoomEvent(Event): \\\"\\\"\\\"加入房间事件，通常为通知事件\\\"\\\"\\\" user_id: str room_id: str @override def get_type(self) -> str: return \\\"notice\\\" class ApplyAddFriendEvent(Event): \\\"\\\"\\\"申请添加好友事件，通常为请求事件\\\"\\\"\\\" user_id: str @override def get_type(self) -> str: return \\\"request\\\"\"]},\"987\":{\"h\":\"Message\",\"t\":[\"Message 负责正确序列化消息，以便机器人插件处理。我们需要继承 MessageSegment 和 Message 两个类，并实现相关方法：\",\"from typing import Type, Iterable from typing_extensions import override from nonebot.utils import escape_tag from nonebot.adapters import Message as BaseMessage from nonebot.adapters import MessageSegment as BaseMessageSegment class MessageSegment(BaseMessageSegment[\\\"Message\\\"]): @classmethod @override def get_message_class(cls) -> Type[\\\"Message\\\"]: # 返回适配器的 Message 类型本身 return Message @override def __str__(self) -> str: # 返回该消息段的纯文本表现形式，通常在日志中展示 return \\\"text of MessageSegment\\\" @override def is_text(self) -> bool: # 判断该消息段是否为纯文本 return self.type == \\\"text\\\" class Message(BaseMessage[MessageSegment]): @classmethod @override def get_segment_class(cls) -> Type[MessageSegment]: # 返回适配器的 MessageSegment 类型本身 return MessageSegment @staticmethod @override def _construct(msg: str) -> Iterable[MessageSegment]: # 实现从字符串中构造消息数组，如无字符串嵌入格式可直接返回文本类型 MessageSegment ...\",\"然后根据平台具体的消息类型，来实现各种 MessageSegment 消息段，具体可以参考以下适配器：\",\"OneBot\",\"QQGuild\",\"Telegram\"]},\"988\":{\"h\":\"适配器测试\",\"t\":[\"关于适配器测试相关内容在这里不再展开，开发者可以根据需要进行合适的测试。这里为开发者提供几个常见问题的解决方法：\",\"在测试中无法导入 editable 模式安装的适配器代码。在 pytest 的 conftest.py 内添加如下代码：\",\"from pathlib import Path import nonebot.adapters nonebot.adapters.__path__.append( # type: ignore str((Path(__file__).parent.parent / \\\"nonebot\\\" / \\\"adapters\\\").resolve()) )\",\"需要计算适配器测试覆盖率，请在 pyproject.toml 中添加 pytest 配置：\",\"[tool.pytest.ini_options] addopts = \\\"--cov nonebot/adapters/{adapter-name} --cov-report term-missing\\\"\"]},\"989\":{\"h\":\"后续工作\",\"t\":[\"在完成适配器代码的编写后，如果想要将适配器发布到 NoneBot 商店，我们需要将适配器发布到 PyPI 中，然后前往商店页面，切换到适配器页签，点击发布适配器按钮，填写适配器相关信息并提交。\",\"另外建议编写适配器文档或者一些插件开发示例，以便其他开发者使用我们的适配器。\"]},\"990\":{\"h\":\"暑期 2021\",\"t\":[\"开源软件供应链点亮计划 - 暑期 2021 是中国科学院软件研究所与 openEuler 社区共同举办的一项面向高校学生的暑期活动，旨在鼓励在校学生积极参与开源软件的开发维护，促进优秀开源软件社区的蓬勃发展。关于具体的活动规划、报名方式，请查看该活动的 官网 和 帮助文档。\",\"NoneBot 社区有幸作为开源社区参与了本次活动，下面列出了目前我们已经发布的项目，欢迎感兴趣的同学在上面给出的活动官网报名，或通过 contact@nonebot.dev 联系我们。\"]},\"991\":{\"h\":\"NoneBot v1\"},\"992\":{\"h\":\"更新 NoneBot v1 文档中的“指南”部分\",\"t\":[\"由于 NoneBot v1 和 aiocqhttp 最初基于的 QQ 机器人平台不再提供服务，CQHTTP 接口也转型且改名为 OneBot 标准，目前 NoneBot v1 文档的“指南”部分和 aiocqhttp 文档有部分过时内容需要更新。我们希望将其中与旧的机器人平台相关的内容改为基于 go-cqhttp 或通用的 OneBot 表述，同时对 NoneBot v1 的 awesome-bot 示例做一次全面检查，修改其中可能已经不可用的部分。\",\"难度：低\",\"导师：@cleoold\",\"产出要求\",\"修改“指南”文档和 aiocqhttp 文档中与旧的 QQ 机器人平台相关的部分\",\"检查 awesome-bot 示例是否有已经过时/不可用的地方，并更新/修复\",\"修改“图灵机器人”案例，使用其它 AI 聊天 API 提供商（需先做简单调研）\",\"技术要求\",\"熟悉 Python 编程语言及 asyncio 机制\",\"了解 Git 基本用法\",\"了解聊天机器人基本开发过程\",\"了解 VuePress 更佳\"]},\"993\":{\"h\":\"NoneBot v1 API 文档自动生成\",\"t\":[\"目前 NoneBot v1 的文档中“API”部分是手动编写的，在更新代码接口的同时需要手动更新文档，可能造成文档与代码不匹配，形成额外的维护成本。我们希望将 API 文档改为直接编写在 Python docstring 中，通过工具自动生成 API 文档。\",\"难度：中\",\"导师：@cleoold\",\"产出要求\",\"调研市面上常见的 Python API 文档生成工具\",\"在代码中补充 API 文档\",\"编写或应用开源工具自动生成 API 文档\",\"配置 GitHub Actions 或其它 CI 自动化构建和部署 API 文档\",\"技术要求\",\"熟悉 Python 编程语言及 asyncio 和 Type Hints\",\"了解 Git 基本用法\",\"了解 Sphinx 等文档生成工具更佳\",\"了解 GitHub Actions 等 CI 工具更佳\"]},\"994\":{\"h\":\"NoneBot v2\"},\"995\":{\"h\":\"NoneBot v2 自动化测试框架“NoneBug”\",\"t\":[\"在聊天机器人的开发过程中，一套自动化的测试机制是非常重要的，特别是对于 NoneBot 2 这类为大型机器人开发而设计的项目来说，需要手动测试每一个边际条件是非常痛苦的。我们希望能够开发一款基于 NoneBot 2 插件机制的自动化测试框架，为 NoneBot 2 用户提供一套易用便捷、高度灵活的自动化测试框架。\",\"难度：高\",\"导师：@yanyongyu\",\"产出要求\",\"调研现有的 Python 和其它语言集成测试框架\",\"设计 NoneBug 的用户 API 和实现方式\",\"实现 NoneBug 自动化测试框架\",\"编写详细的使用文档\",\"技术要求\",\"熟悉 Python 编程语言及 asyncio 和 Type Hints\",\"了解 Git 基本用法\",\"了解 NoneBot v2 的基本原理和使用方式\",\"了解主流的 Python 自动化测试框架\"]},\"996\":{\"h\":\"NoneBot v2 Telegram 适配器\",\"t\":[\"目前 NoneBot v2 已支持 OneBot、Mirai HTTP API、钉钉协议，社区反馈有更多的平台需求，希望能在 NoneBot v2 获得更多的跨平台支持，提高机器人的便携性。同时，我们也希望随着新平台加入，提升现有 NoneBot v2 核心代码的平台通用性。Telegram 是一款较为广泛使用的安全即时聊天软件，同时其官方提供了丰富的聊天机器人 API，因此我们希望为 NoneBot v2 编写一个 Telegram 适配器来支持 Telegram 机器人的开发。\",\"难度：中\",\"导师：@yanyongyu\",\"产出要求\",\"调研 Telegram Bot API 以及 WebHook 等官方接口\",\"编写 Telegram 适配器并能够使用\",\"代码遵守项目 Contributing 规范\",\"技术要求\",\"熟悉 Python 编程语言及 asyncio 和 Type Hints\",\"了解 Git 基本用法\",\"了解 Web 开发相关知识\",\"了解 Sphinx 等文档生成工具更佳\"]},\"997\":{\"h\":\"NoneBot v2 飞书适配器\",\"t\":[\"目前 NoneBot v2 已支持 OneBot、Mirai HTTP API、钉钉协议，社区反馈有更多的平台需求，希望能在 NoneBot v2 获得更多的跨平台支持，提高机器人的便携性。同时，我们也希望随着新平台加入，提升现有 NoneBot v2 核心代码的平台通用性。飞书是目前企业用户广泛使用的即时聊天和协作软件，其官方提供了丰富的聊天机器人 API，因此我们希望为 NoneBot v2 编写一个飞书适配器来支持飞书机器人的开发。\",\"难度：中\",\"导师：@yanyongyu\",\"产出要求\",\"调研飞书机器人 API 以及 WebHook 等官方接口\",\"编写飞书适配器并能够使用\",\"代码遵守项目 Contributing 规范\",\"技术要求\",\"熟悉 Python 编程语言及 asyncio 和 Type Hints\",\"了解 Git 基本用法\",\"了解 Web 开发相关知识\",\"了解 Sphinx 等文档生成工具更佳\"]},\"998\":{\"h\":\"OneBot\"},\"999\":{\"h\":\"设计 OneBot v12 接口标准\",\"t\":[\"目前的 OneBot 标准的 v11 版本仍然与 QQ 平台有较多耦合，我们希望在 v12 去掉与 QQ 耦合的历史包袱，形成一个通用的、可扩展的、易于使用的同时易于实现的聊天机器人接口标准。\",\"难度：中\",\"导师：@richardchien\",\"产出要求\",\"调研各聊天机器人平台的官方/非官方接口特点\",\"通用化 OneBot 核心 API，分离 QQ 特定的 API，去掉无用 API\",\"优化现有的通信、消息表示机制\",\"补充 QQ 特定的缺失 API\",\"文档需符合风格指南\",\"技术要求\",\"熟悉至少两个聊天平台的聊天机器人开发\",\"了解 Git 基本用法\",\"了解使用不同语言编写聊天机器人时的常用实践\",\"对文档的优雅性与美观性有追求更佳\"]},\"1000\":{\"h\":\"实现 Rust 版 libonebot\",\"t\":[\"目前最常用的 OneBot 实现包括 go-cqhttp、onebot-kotlin、node-onebot 等，这些实现都各自重复实现了 Web 通信、消息解析、配置读写等功能，当社区中的开发者想针对一个新的聊天平台实现 OneBot 时，他们往往同样需要再次实现类似逻辑。我们希望使用 Rust 编写一个 libonebot 模块，该模块实现所有 OneBot 实现所共享的功能，从而方便其他开发者们使用 Rust 快速编写具体的 OneBot 实现。同时，我们希望借此项目在聊天机器人社区中推广 Rust 编程语言。\",\"注：这里的逻辑是 libonebot + 针对某聊天平台的对接代码 = 某聊天平台的 OneBot 实现，libonebot 要做的是让 OneBot 实现的开发者只需编写针对特定聊天平台的对接代码，而无需关心 OneBot 标准定义的通信方式、消息格式等。\",\"难度：高\",\"导师：@richardchien\",\"产出要求\",\"实现所有 OneBot 实现所共享的功能，包括 Web 通信、消息解析、配置读写等\",\"充分考虑同时兼容 OneBot v11 和 v12 接口\",\"能够根据用户（OneBot 实现的开发者）所实现的接口自动实现类似 get_available_apis 等接口\",\"编写详细的使用文档\",\"如果可能，与 v12 设计项目联动，实现第一手 v12 支持\",\"技术要求\",\"熟悉聊天机器人开发\",\"熟悉 Rust Web 开发\"]},\"1001\":{\"h\":\"实现自选语言版 libonebot\",\"t\":[\"目前最常用的 OneBot 实现包括 go-cqhttp、onebot-kotlin、node-onebot 等，这些实现都各自重复实现了 Web 通信、消息解析、配置读写等功能，当社区中的开发者想针对一个新的聊天平台实现 OneBot 时，他们往往同样需要再次实现类似逻辑。我们希望使用 Python、Go、Kotlin、Node、PHP、C#.NET 等主流语言（任选一个）编写 libonebot 模块，该模块实现所有 OneBot 实现所共享的功能，从而方便其他开发者们使用对应语言快速编写具体的 OneBot 实现。\",\"注：这里的逻辑是 libonebot + 针对某聊天平台的对接代码 = 某聊天平台的 OneBot 实现，libonebot 要做的是让 OneBot 实现的开发者只需编写针对特定聊天平台的对接代码，而无需关心 OneBot 标准定义的通信方式、消息格式等。\",\"难度：中\",\"导师：@richardchien\",\"产出要求\",\"实现所有 OneBot 实现所共享的功能，包括 Web 通信、消息解析、配置读写等\",\"充分考虑同时兼容 OneBot v11 和 v12 接口\",\"编写详细的使用文档\",\"如果可能，实现更多附加特性，如根据用户（OneBot 实现的开发者）所实现的接口自动实现类似 get_available_apis 等接口、实现第一手 v12 支持等\",\"技术要求\",\"熟悉聊天机器人开发\",\"熟悉所选语言的 Web 开发\"]},\"1002\":{\"h\":\"暑期 2022\",\"t\":[\"开源之夏 - 暑期 2022 是由开源软件供应链点亮计划发起、由中国科学院软件研究所与 openEuler 社区主办的一项面向高校学生的暑期活动，类似 Google Summer of Code（GSoC），旨在鼓励在校学生积极参与开源软件的开发维护，促进优秀开源软件社区的蓬勃发展。关于具体的活动规划、报名方式，请查看该活动的 官网 和 帮助文档。\",\"NoneBot 社区有幸作为开源社区 参与 了本次活动，下面列出了目前我们已经发布的项目，欢迎感兴趣的同学加入 QQ 群 737131827 或通过 contact@nonebot.dev 联系我们。\"]},\"1003\":{\"h\":\"NoneBot2 命令行 CLI 交互体验升级\",\"t\":[\"NoneBot2 为用户提供了命令行脚手架 ──nb-cli，辅助用户更好地上手项目以及进行开发。nb-cli 主要包括：创建项目、运行项目、安装与卸载插件、部署项目等功能。随着 NoneBot2 Beta 版本的发布，脚手架功能存在一定的定位不明确、功能体验不佳。本项目旨在重新设计 nb-cli 功能框架，完善功能，优化用户体验。\",\"难度：进阶\",\"导师：@yanyongyu\",\"产出要求\",\"设计 nb-cli 功能框架 \",\"明确各功能模块\",\"设计用户交互模式\",\"完成 nb-cli 主要功能代码 \",\"项目管理\",\"插件管理\",\"其它\",\"同步更新使用文档\",\"技术要求\",\"熟悉 Python 命令行交互代码编写\",\"熟悉 NoneBot2 框架功能\",\"熟悉 NoneBot2 项目组织方式\",\"成果仓库\",\"https://github.com/nonebot/nb-cli\",\"https://github.com/nonebot/nonebot2\"]},\"1004\":{\"h\":\"NoneBot2 命令行即时交互通信设计与实现\",\"t\":[\"NoneBot2 在早期提供了基于网页的 nonebot-plugin-test 插件，无需平台适配接入即可对机器人进行测试，方便了开发者直观的感受机器人文本交互功能。我们希望提供一款基于命令行的适配器/驱动器，用于无平台适配接入、可以运行机器人的场景进行功能体验或测试。\",\"难度：进阶\",\"导师：@mnixry\",\"产出要求\",\"设计命令行与 NoneBot2 通信模式 \",\"直接调用/HTTP/WebSocket\",\"设计命令行交互界面\",\"实现相应适配器/驱动器\",\"同步更新使用说明文档\",\"技术要求\",\"熟悉 Python 命令行交互代码编写\",\"熟悉 NoneBot2 框架功能\",\"熟悉 NoneBot2 项目组织方式\",\"成果仓库\",\"https://github.com/nonebot/adapter-console\"]},\"1005\":{\"h\":\"NoneBot2 用户上手与深入教程设计\",\"t\":[\"NoneBot2 为用户提供了详细的文档介绍，辅助用户更好的上手项目以及进行开发。文档分为基础与进阶两个部分。基础部分帮助新用户快速上手开发，主要包括：安装 NoneBot2、使用脚手架、创建配置项目、使用适配器、加载插件、定义消息事件、处理消息事件、调用平台 API 等。进阶部分向已经熟悉开发流程的用户介绍更多高级技巧，主要包括：NoneBot2 工作原理、定时任务、权限控制、钩子函数、跨插件访问、单元测试、发布插件等。目前文档对于用户而言过于费解，导致用户难以理解 NoneBot2 开发。本项目旨在优化文档内容，使其更加通俗易懂，不让文档成为用户上手的阻碍，同时完善进阶内容，让有更复杂需求的用户，同样能从文档中受益。\",\"相关 issue：\",\"https://github.com/nonebot/nonebot2/issues/793\",\"https://github.com/nonebot/nonebot2/issues/295\",\"难度：进阶\",\"导师：@SK-415\",\"产出要求\",\"文档通俗易懂 \",\"附有适当的图片指引（如 asciinema）\",\"内容完整，由浅入深\",\"适当的界面美化，合理分配布局\",\"技术要求\",\"熟悉文档结构组织与语言表达\",\"熟悉 NoneBot2 框架功能\",\"熟悉 NoneBot2 项目组织方式\",\"成果仓库\",\"https://github.com/nonebot/nonebot2\"]},\"1006\":{\"h\":\"暑期 2023\",\"t\":[\"开源之夏 - 暑期 2023 是由开源软件供应链点亮计划发起、由中国科学院软件研究所与 openEuler 社区主办的一项面向高校学生的暑期活动，类似 Google Summer of Code（GSoC），旨在鼓励在校学生积极参与开源软件的开发维护，促进优秀开源软件社区的蓬勃发展。关于具体的活动规划、报名方式，请查看该活动的 官网 和 帮助文档。\",\"NoneBot 社区有幸作为开源社区 参与 了本次活动，下面列出了目前我们已经发布的项目，欢迎感兴趣的同学通过 contact@nonebot.dev 联系我们。\"]},\"1007\":{\"h\":\"NoneBot 项目管理图形化面板\",\"t\":[\"NoneBot 目前提供了开箱即用的命令行脚手架来帮助初次使用的用户更快的上手编写应用。但是，对于未有一定开发经验的用户，命令行的使用仍具有一定的困难。此外，其他项目如 koishi、vue 等，均可通过图形化界面的形式为用户提供更便捷的项目开发。因此，我们希望借助现有命令行脚手架的可扩展特性，提供一个项目管理面板服务，以网页的形式帮助用户开发 NoneBot 应用。\",\"难度：进阶\",\"导师：@mnixry\",\"产出要求\",\"设计并实现项目管理面板相关功能 \",\"创建与管理项目\",\"配置与运行项目\",\"NoneBot 插件管理\",\"实现相应 nb-cli 插件提供面板服务\",\"代码符合 NoneBot Contributing 规范\",\"技术要求\",\"熟悉 nb-cli 相关功能\",\"熟悉 NoneBot 框架功能\",\"熟悉前后端相关实现方式\",\"成果仓库\",\"https://github.com/nonebot/cli-plugin-webui\"]},\"1008\":{\"h\":\"NoneBot Discord 适配器\",\"t\":[\"NoneBot 作为一个跨平台聊天机器人框架，目前已有 OneBot、飞书、Telegram、QQ 频道等诸多平台的适配支持。作为众多用户期待的平台适配之一，我们希望借此机会接入 Discord 聊天机器人。\",\"难度：进阶\",\"导师：@iyume\",\"产出要求\",\"调研 Discord Bot 相关功能与接口\",\"设计与编写 NoneBot Discord 适配器\",\"代码符合 NoneBot Contributing 规范\",\"技术要求\",\"熟悉 NoneBot 框架功能\",\"熟悉 NoneBot 各模块职责与适配器编写\",\"成果仓库\",\"https://github.com/nonebot/adapter-discord\"]},\"1009\":{\"h\":\"NoneBot 数据库支持插件\",\"t\":[\"NoneBot 的插件系统为用户实现应用提供了极高的便捷性，但因此也增加了插件统一管理的难度。目前，我们发现许多用户发布的插件中存在文件存储结构化数据、数据存放散乱等现象，同时插件间也可能产生冲突。因此，我们希望提供一个统一的数据存储与管理方式，便于用户读写应用数据。\",\"难度：进阶\",\"导师：@yanyongyu\",\"产出要求\",\"设计并实现 ORM 插件 \",\"提供关系模型定义功能\",\"提供模型迁移与管理功能\",\"能较好的支持 Python 类型检查与推导\",\"编写相应的用户使用文档\",\"代码符合 NoneBot Contributing 规范\",\"技术要求\",\"熟悉 NoneBot 框架功能与插件编写\",\"熟悉 SQLAlchemy 等 ORM 框架 \",\"熟悉 SQLAlchemy ORM\",\"熟悉 alembic 等迁移工具\",\"熟悉 nb-cli 插件编写\",\"成果仓库\",\"https://github.com/nonebot/plugin-orm\"]},\"1010\":{\"h\":\"暑期 2024\",\"t\":[\"开源之夏 - 暑期 2024 是中国科学院软件研究所发起的开源软件供应链点亮计划系列暑期活动，旨在鼓励高校学生积极参与开源软件的开发维护，促进优秀开源软件社区的蓬勃发展。活动联合各大开源社区，针对重要开源软件的开发与维护提供项目开发任务，并向全球高校学生开放报名。关于具体的活动规划、报名方式，请查看该活动的 官网 和 帮助文档。\",\"NoneBot 社区有幸作为开源社区 参与 了本次活动，下面列出了目前我们已经发布的项目，欢迎感兴趣的同学通过 contact@nonebot.dev 联系我们。\"]},\"1011\":{\"h\":\"NonePress 官网组件库更新与优化\",\"t\":[\"NoneBot 官网目前采用基于 TailwindCSS 自研的 NonePress 组件库及 Docusaurus 框架进行构建。由于相关依赖版本迭代迅速，目前官网组件库已产生了较大的版本落后。本项目希望在跟进框架新版本的基础上，对文档整体视觉体验进行重新设计，提升页面的无障碍访问性，基于 React Hydrate 特性实现完整的静态网站生成（SSG）以提升搜索引擎优化（SEO）水平。在解决以上问题的基础上，可对网页的开发以及生产构建性能做相应的优化提升，例如在生产构建使用自有的 webpack loader、替换现有的热重载逻辑以减少开发环境启动耗时等。\",\"难度：进阶\",\"导师：@yanyongyu\",\"产出要求\",\"基于 Docusaurus v3 重构 NonePress 组件库及相关插件 \",\"升级相关依赖并重新打造 Docusaurus theme（布局与组件）\",\"根据需求实现/修改 Docusaurus 插件使得官网内容构建正常\",\"能够提升页面渲染性能与 MDX 相关能力\",\"升级官网采用新版组件库 \",\"Algolia 索引与 SEO 正常\",\"桌面端与移动端显示正常\",\"优化官网开发与生产构建体验\",\"（可选）优化官网部分页面 \",\"优化官网过长的 changelog\",\"优化官网插件商店的展示细节\",\"技术要求\",\"熟练掌握 TS、PostCSS、TSX、MDX等相关技术\",\"掌握 React、Docusaurus、tailwind css 等框架\",\"熟悉静态网站生成 SSG、SEO 优化与 Algolia 索引原理等\",\"成果仓库\",\"https://github.com/nonebot/docusaurus-theme-nonepress\"]},\"1012\":{\"h\":\"NoneFlow 社区自动化工作流管理优化\",\"t\":[\"NoneFlow 在 NoneBot 社区中承担着重要的角色，它由 NoneBot 框架基于 GitHub APP 编写而成，能够自动化的完成许多复杂流程的处理，如：用户请求提交插件到商店时进行自动化检测，并在人工审核通过后自动存储至 registry；定时自动更新 registry 内插件信息，跟进插件新版本情况等。但是，在长期的使用中发现了一些问题和不足的地方，例如：项目本身结构复杂耦合，添加新自动化流程与维护现有流程困难；目前采用了 GitHub 用户名作为插件作者名，但已有不少插件作者改名；插件存储至 registry 并定时更新，缺少统计相关信息以帮助商店更好的展示当前插件状态；插件作者想要修改插件信息时无法便捷的找到操作方式等。本项目希望针对以上问题与不足的地方进行修复与优化，提升用户体验。\",\"难度：进阶\",\"导师：@uy/sun\",\"产出要求\",\"重构现有工作流处理结构 \",\"整合现有 Issue、Pull Request、Git 相关操作\",\"提供用户修改信息的处理方式\",\"正确处理 PR 的 Open、Close、Draft 状态\",\"修复流程中存在的问题 \",\"插件作者名正确展示\",\"registry 定时更新中需要插件测试环境隔离\",\"在 registry 定时更新的同时提供统计数据\",\"技术要求\",\"掌握 GitHub APP 开发 \",\"熟悉 GitHub REST API、GraphQL 等\",\"熟悉 GitHub APP 权限限制\",\"熟悉 NoneBot 框架与 Python 相关技术\",\"熟悉 Git、GitHub Action、GitHub 工作流\",\"成果仓库\",\"https://github.com/nonebot/noneflow\"]},\"1013\":{\"h\":\"NoneBlockly 低代码框架开发\",\"t\":[\"经过深入分析社区反馈，我们发现部分新手因不熟悉编程概念或框架本身而遇到问题。为了解决初学者在使用面向开发者的聊天机器人框架 NoneBot 时遇到的挑战，我们计划引入 Blockly 提供低代码编程支持。通过减少常见的编码错误和降低入门门槛，使框架对初学者更加友好，从而提升用户体验并有助于 NoneBot 生态的成长。本项目将基于 Blockly 实现 NoneBot 插件的低代码编写，使得用户能够快速搭建聊天机器人。\",\"难度：进阶\",\"导师：@mnixry\",\"产出要求\",\"实现 NoneBlockly 低代码开发框架 \",\"能够基于 Alconna 编写跨平台插件\",\"确保插件对 Python 和 NoneBot 版本的兼容性\",\"支持对多种类型 NoneBot 事件的响应\",\"支持对 NoneBot 消息对象的便捷操作\",\"集成 localstore 文件存储、apscheduler 定时任务、网络请求等常用功能\",\"对接 NB-CLI 脚手架，通过脚手架扩展使用低代码框架\",\"技术要求\",\"掌握 Python 与 NoneBot 框架的使用 \",\"熟悉 NoneBot 插件的开发，包括事件响应与消息处理等\",\"熟悉 NoneBot 生态组件（Alconna、localstore、apscheduler等）的使用\",\"了解 NB-CLI 脚手架的扩展开发\",\"熟悉 Blockly 低代码框架的使用和开发\",\"成果仓库\",\"https://github.com/nonebot/noneblockly\"]},\"1014\":{\"h\":\"手动创建项目\",\"t\":[\"在快速上手中，我们已经介绍了如何安装和使用 nb-cli 创建一个项目。在本章节中，我们将简要介绍如何在不使用 nb-cli 的方式创建一个机器人项目的最小实例并启动。如果你想要了解 NoneBot 的启动流程，也可以阅读本章节。\",\"警告\",\"我们十分不推荐直接创建机器人项目，请优先考虑使用 nb-cli 进行项目创建。\",\"一个机器人项目的最小实例中至少需要包含以下内容:\",\"入口文件：初始化并运行机器人的 Python 文件\",\"配置文件：存储机器人启动所需的配置\",\"插件：为机器人提供具体的功能\",\"下面我们创建一个项目文件夹，来存放项目所需文件，以下步骤均在该文件夹中进行。\"]},\"1015\":{\"h\":\"安装依赖\",\"t\":[\"在创建项目前，我们首先需要将项目所需依赖安装至环境中。\",\"（可选）创建虚拟环境，以 venv 为例\",\"python -m venv .venv --prompt nonebot2 # windows .venv\\\\Scripts\\\\activate # linux/macOS source .venv/bin/activate\",\"安装 nonebot2 以及驱动器\",\"pip install 'nonebot2[fastapi]'\",\"驱动器包名可以在 驱动器商店 中找到。\",\"安装适配器\",\"pip install nonebot-adapter-console\",\"适配器包名可以在 适配器商店 中找到。\"]},\"1016\":{\"h\":\"创建配置文件\",\"t\":[\"配置文件用于存放 NoneBot 运行所需要的配置项，使用 pydantic 以及 python-dotenv 来读取配置。配置项需符合 dotenv 格式，复杂类型数据需使用 JSON 格式填写。具体可选配置方式以及配置项详情参考配置。\",\"在项目文件夹中创建一个 .env 文本文件，并写入以下内容:\",\"HOST=0.0.0.0 # 配置 NoneBot 监听的 IP / 主机名 PORT=8080 # 配置 NoneBot 监听的端口 COMMAND_START=[\\\"/\\\"] # 配置命令起始字符 COMMAND_SEP=[\\\".\\\"] # 配置命令分割字符\"]},\"1017\":{\"h\":\"创建入口文件\",\"t\":[\"入口文件（ Entrypoint ）顾名思义，是用来初始化并运行机器人的 Python 文件。入口文件需要完成框架的初始化、注册适配器、加载插件等工作。\",\"提示\",\"如果你使用 nb-cli 创建项目，入口文件不会被创建，该文件功能会被 nb run 命令代替。\",\"在项目文件夹中创建一个 bot.py 文件，并写入以下内容:\",\"import nonebot from nonebot.adapters.console import Adapter as ConsoleAdapter # 避免重复命名 # 初始化 NoneBot nonebot.init() # 注册适配器 driver = nonebot.get_driver() driver.register_adapter(ConsoleAdapter) # 在这里加载插件 nonebot.load_builtin_plugins(\\\"echo\\\") # 内置插件 # nonebot.load_plugin(\\\"thirdparty_plugin\\\") # 第三方插件 # nonebot.load_plugins(\\\"awesome_bot/plugins\\\") # 本地插件 if __name__ == \\\"__main__\\\": nonebot.run()\",\"我们暂时不需要了解其中内容的含义，这些将会在稍后的章节中逐一介绍。在创建完成以上文件并确认已安装所需适配器和插件后，即可运行机器人。\"]},\"1018\":{\"h\":\"运行机器人\",\"t\":[\"在项目文件夹中，使用配置好环境的 Python 解释器运行入口文件（如果使用虚拟环境，请先激活虚拟环境）:\",\"python bot.py\",\"如果你后续使用了 nb-cli ，你仍可以使用 nb run 命令来运行机器人，nb-cli 会自动检测入口文件 bot.py 是否存在并运行。同时，你也可以使用 nb run --reload 来自动检测代码的更改并自动重新运行入口文件。\"]},\"1019\":{\"h\":\"插件编写准备\",\"t\":[\"在正式编写插件之前，我们需要先了解一下插件的概念。\"]},\"1020\":{\"h\":\"插件结构\",\"t\":[\"在 NoneBot 中，插件即是 Python 的一个模块（module）。NoneBot 会在导入时对这些模块做一些特殊的处理使得他们成为一个插件。插件间应尽量减少耦合，可以进行有限制的相互调用，NoneBot 能够正确解析插件间的依赖关系。\"]},\"1021\":{\"h\":\"单文件插件\",\"t\":[\"一个普通的 .py 文件即可以作为一个插件，例如创建一个 foo.py 文件：\",\"📂 plugins └── 📜 foo.py\",\"这个时候模块 foo 已经可以被称为一个插件了，尽管它还什么都没做。\"]},\"1022\":{\"h\":\"包插件\",\"t\":[\"一个包含 __init__.py 的文件夹即是一个常规 Python 包 package，例如创建一个 foo 文件夹：\",\"📂 plugins └── 📂 foo └── 📜 __init__.py\",\"这个时候包 foo 同样是一个合法的插件，插件内容可以在 __init__.py 文件中编写。\"]},\"1023\":{\"h\":\"创建插件\",\"t\":[\"注意\",\"如果在之前的快速上手章节中已经使用 bootstrap 模板创建了项目，那么你需要做出如下修改：\",\"在项目目录中创建一个两层文件夹 awesome_bot/plugins\",\"📦 awesome-bot ├── 📂 awesome_bot │ └── 📂 plugins ├── 📜 pyproject.toml └── 📜 README.md\",\"修改 pyproject.toml 文件中的 nonebot 配置项，在 plugin_dirs 中添加 awesome_bot/plugins\",\"[tool.nonebot] plugin_dirs = [\\\"awesome_bot/plugins\\\"]\",\"注意\",\"如果在之前的创建项目章节中手动创建了相关文件，那么你需要做出如下修改：\",\"在项目目录中创建一个两层文件夹 awesome_bot/plugins\",\"📦 awesome-bot ├── 📂 awesome_bot │ └── 📂 plugins └── 📜 bot.py\",\"修改 bot.py 文件中的加载插件部分，取消注释或者添加如下代码\",\"# 在这里加载插件 nonebot.load_builtin_plugins(\\\"echo\\\") # 内置插件 nonebot.load_plugins(\\\"awesome_bot/plugins\\\") # 本地插件\",\"创建插件可以通过 nb-cli 命令从完整模板创建，也可以手动新建空白文件。通过以下命令创建一个名为 weather 的插件：\",\"$ nb plugin create [?] 插件名称: weather [?] 使用嵌套插件? (y/N) N [?] 输出目录: awesome_bot/plugins\",\"nb-cli 会在 awesome_bot/plugins 目录下创建一个名为 weather 的文件夹，其中包含的文件将在稍后章节中用到。\",\"📦 awesome-bot ├── 📂 awesome_bot │ └── 📂 plugins | └── 📂 foo | ├── 📜 __init__.py | └── 📜 config.py ├── 📜 pyproject.toml └── 📜 README.md\"]},\"1024\":{\"h\":\"加载插件\",\"t\":[\"警告\",\"请勿在插件被加载前 import 插件模块，这会导致 NoneBot 无法将其转换为插件而出现意料之外的情况。\",\"加载插件是在机器人入口文件中完成的，需要在框架初始化之后，运行之前进行。\",\"请注意，加载的插件模块名称（插件文件名或文件夹名）不能相同，且每一个插件只能被加载一次，重复加载将会导致异常。\",\"如果你使用 nb-cli 管理插件，那么你可以跳过这一节，nb-cli 将会自动处理加载。\",\"如果你使用自定义的入口文件bot.py，那么你需要在 bot.py 中加载插件。\",\"import nonebot nonebot.init() # 加载插件 nonebot.run()\",\"加载插件的方式有多种，但在底层的加载逻辑是一致的。以下是为加载插件提供的几种方式：\"]},\"1025\":{\"h\":\"\",\"t\":[\"通过点分割模块名称或使用 pathlib 的 Path 对象来加载插件。通常用于加载第三方插件或者项目插件。例如：\",\"from pathlib import Path nonebot.load_plugin(\\\"path.to.your.plugin\\\") # 加载第三方插件 nonebot.load_plugin(Path(\\\"./path/to/your/plugin.py\\\")) # 加载项目插件\",\"注意\",\"请注意，本地插件的路径应该为相对机器人 入口文件（通常为 bot.py） 可导入的，例如在项目 plugins 目录下。\"]},\"1026\":{\"h\":\"\",\"t\":[\"加载传入插件目录中的所有插件，通常用于加载一系列本地编写的项目插件。例如：\",\"nonebot.load_plugins(\\\"src/plugins\\\", \\\"path/to/your/plugins\\\")\",\"注意\",\"请注意，插件目录应该为相对机器人 入口文件（通常为 bot.py） 可导入的，例如在项目 plugins 目录下。\"]},\"1027\":{\"h\":\"\",\"t\":[\"这种加载方式是以上两种方式的混合，加载所有传入的插件模块名称，以及所有给定目录下的插件。例如：\",\"nonebot.load_all_plugins([\\\"path.to.your.plugin\\\"], [\\\"path/to/your/plugins\\\"])\"]},\"1028\":{\"h\":\"\",\"t\":[\"通过 JSON 文件加载插件，是 load_all_plugins 的 JSON 变种。通过读取 JSON 文件中的 plugins 字段和 plugin_dirs 字段进行加载。例如：\",\"{ \\\"plugins\\\": [\\\"path.to.your.plugin\\\"], \\\"plugin_dirs\\\": [\\\"path/to/your/plugins\\\"] }\",\"nonebot.load_from_json(\\\"plugin_config.json\\\", encoding=\\\"utf-8\\\")\",\"提示\",\"如果 JSON 配置文件中的字段无法满足你的需求，可以使用 load_all_plugins 方法自行读取配置来加载插件。\"]},\"1029\":{\"h\":\"\",\"t\":[\"通过 TOML 文件加载插件，是 load_all_plugins 的 TOML 变种。通过读取 TOML 文件中的 [tool.nonebot] Table 中的 plugins 和 plugin_dirs Array 进行加载。例如：\",\"[tool.nonebot] plugins = [\\\"path.to.your.plugin\\\"] plugin_dirs = [\\\"path/to/your/plugins\\\"]\",\"nonebot.load_from_toml(\\\"plugin_config.toml\\\", encoding=\\\"utf-8\\\")\",\"提示\",\"如果 TOML 配置文件中的字段无法满足你的需求，可以使用 load_all_plugins 方法自行读取配置来加载插件。\"]},\"1030\":{\"h\":\"\",\"t\":[\"加载一个内置插件，传入的插件名必须为 NoneBot 内置插件。该方法是 load_plugin 的封装。例如：\",\"nonebot.load_builtin_plugin(\\\"echo\\\")\"]},\"1031\":{\"h\":\"\",\"t\":[\"加载传入插件列表中的所有内置插件。例如：\",\"nonebot.load_builtin_plugins(\\\"echo\\\", \\\"single_session\\\")\"]},\"1032\":{\"h\":\"其他加载方式\",\"t\":[\"有关其他插件加载的方式，可参考跨插件访问和嵌套插件。\"]},\"1033\":{\"h\":\"机器人的构成\",\"t\":[\"了解机器人的基本构成有助于你更好地使用 NoneBot，本章节将介绍 NoneBot 中的基本组成部分，稍后的文档中将会使用到这些概念。\",\"使用 NoneBot 框架搭建的机器人具有以下几个基本组成部分：\",\"NoneBot 机器人框架主体：负责连接各个组成部分，提供基本的机器人功能\",\"驱动器 Driver：客户端/服务端的功能实现，负责接收和发送消息（通常为 HTTP 通信）\",\"适配器 Adapter：驱动器的上层，负责将平台消息与 NoneBot 事件/操作系统的消息格式相互转换\",\"插件 Plugin：机器人的功能实现，通常为负责处理事件并进行一系列的操作\",\"除 NoneBot 机器人框架主体外，其他部分均可按需选择、互相搭配，但由于平台的兼容性问题，部分插件可能仅在某些特定平台上可用（这由插件编写者决定）。\",\"在接下来的章节中，我们将重点介绍机器人功能实现，即插件 Plugin 部分。\"]},\"1034\":{\"h\":\"事件响应器\",\"t\":[\"事件响应器（Matcher）是对接收到的事件进行响应的基本单元，所有的事件响应器都继承自 Matcher 基类。\",\"在 NoneBot 中，事件响应器可以通过一系列特定的规则筛选出具有某种特征的事件，并按照特定的流程交由预定义的事件处理依赖进行处理。例如，在快速上手中，我们使用了内置插件 echo ，它定义的事件响应器能响应机器人用户发送的“/echo hello world”消息，提取“hello world”信息并作为回复消息发送。\"]},\"1035\":{\"h\":\"事件响应器辅助函数\",\"t\":[\"NoneBot 中所有事件响应器均继承自 Matcher 基类，但直接使用 Matcher.new() 方法创建事件响应器过于繁琐且不能记录插件信息。因此，NoneBot 中提供了一系列“事件响应器辅助函数”（下称“辅助函数”）来辅助我们用最简的方式创建带有不同规则预设的事件响应器，提高代码可读性和书写效率。通常情况下，我们只需要使用辅助函数即可完成事件响应器的创建。\",\"在 NoneBot 中，辅助函数以 on() 或 on_<type/rule>() 形式出现（例如 on_command()），调用后根据不同的参数返回一个 Type[Matcher] 类型的新事件响应器。\",\"目前 NoneBot 提供了多种功能各异的辅助函数、具有共同命令名称前缀的命令组以及具有共同参数的响应器组，均可以从 nonebot 模块直接导入使用，具体内容参考事件响应器进阶。\"]},\"1036\":{\"h\":\"创建事件响应器\",\"t\":[\"在上一节创建插件中，我们创建了一个 weather 插件，现在我们来实现他的功能。\",\"我们直接使用 on_command() 辅助函数来创建一个事件响应器：\",\"from nonebot import on_command weather = on_command(\\\"天气\\\")\",\"这样，我们就获得一个名为 weather 的事件响应器了，这个事件响应器会对 /天气 开头的消息进行响应。\",\"提示\",\"如果一条消息中包含“@机器人”或以“机器人的昵称”开始，例如 @bot /天气 时，协议适配器会将 event.is_tome() 判断为 True ，同时也会自动去除 @bot，即事件响应器收到的信息内容为 /天气，方便进行命令匹配。\"]},\"1037\":{\"h\":\"为事件响应器添加参数\",\"t\":[\"在辅助函数中，我们可以添加一些参数来对事件响应器进行更加精细的调整，例如事件响应器的优先级、匹配规则等。例如：\",\"from nonebot import on_command from nonebot.rule import to_me weather = on_command(\\\"天气\\\", rule=to_me(), aliases={\\\"weather\\\", \\\"查天气\\\"}, priority=10, block=True)\",\"这样，我们就获得了一个可以响应 天气、weather、查天气 三个命令的响应规则，需要私聊或 @bot 时才会响应，优先级为 10（越小越优先），阻断事件向后续优先级传播的事件响应器了。这些内容的意义和使用方法将会在后续的章节中一一介绍。\",\"提示\",\"需要注意的是，不同的辅助函数有不同的可选参数，在使用之前可以参考事件响应器进阶 - 基本辅助函数或 API 文档。\"]},\"1038\":{\"h\":\"处理消息\",\"t\":[\"在不同平台中，一条消息可能会有承载有各种不同的表现形式，它可能是一段纯文本、一张图片、一段语音、一篇富文本文章，也有可能是多种类型的组合等等。\",\"在 NoneBot 中，为确保消息的正常处理与跨平台兼容性，采用了扁平化的消息序列形式，即 Message 对象。消息序列是 NoneBot 中的消息载体，无论是接收还是发送的消息，都采用消息序列的形式进行处理。\"]},\"1039\":{\"h\":\"认识消息类型\"},\"1040\":{\"h\":\"消息序列\",\"t\":[\"在 NoneBot 中，消息序列 Message 的主要作用是用于表达“一串消息”。由于消息序列继承自 List[MessageSegment]，所以 Message 的本质是由若干消息段所组成的序列。因此，消息序列的使用方法与 List 有很多相似之处，例如切片、索引、拼接等。\",\"在上一节的使用依赖注入中，我们已经通过依赖注入 CommandArg() 获取了命令的参数，它的类型即是消息序列。我们使用了消息序列的 extract_plain_text() 方法来获取消息序列中的纯文本内容。\"]},\"1041\":{\"h\":\"消息段\",\"t\":[\"顾名思义，消息段 MessageSegment 是一段消息。由于消息序列的本质是由若干消息段所组成的序列，消息段可以被认为是构成消息序列的最小单位。简单来说，消息序列类似于一个自然段，而消息段则是组成自然段的一句话。同时，作为特殊消息载体的存在，绝大多数的平台都有着独特的消息类型，这些独特的内容均需要由对应的协议适配器所提供，以适应不同平台中的消息模式。这也意味着，你需要导入对应的协议适配器中的消息序列和消息段后才能使用其特殊的工厂方法。\",\"注意\",\"消息段的类型是由协议适配器提供的，因此你需要参考协议适配器的文档并导入对应的消息段后才能使用其特殊的消息类型。\",\"在上一节的使用依赖注入中，我们导入的为 nonebot.adapters.Message 抽象基类，因此我们无法使用平台特有的消息类型。仅能使用 str 作为纯文本消息回复。\"]},\"1042\":{\"h\":\"使用消息序列\",\"t\":[\"注意\",\"在以下的示例中，为了更好的理解多种类型的消息组成方式，我们将使用 Console 协议适配器来演示消息序列的使用方法。在实际使用中，你需要确保你使用的消息序列类型与你所要发送的平台类型一致。\",\"通常情况下，适配器在接收到消息时，会将消息转换为消息序列，可以通过依赖注入 EventMessage，或者使用 event.get_message() 获取。\",\"由于消息序列是 List[MessageSegment] 的子类，所以你总是可以用和操作 List 类似的方式来处理消息序列。例如：\",\">>> from nonebot.adapters.console import Message, MessageSegment >>> message = Message([ MessageSegment(type=\\\"text\\\", data={\\\"text\\\":\\\"hello\\\"}), MessageSegment(type=\\\"markdown\\\", data={\\\"markup\\\":\\\"**world**\\\"}), ]) >>> for segment in message: ... print(segment.type, segment.data) ... text {'text': 'hello'} markdown {'markup': '**world**'} >>> len(message) 2\"]},\"1043\":{\"h\":\"构造消息序列\",\"t\":[\"在使用事件响应器操作发送消息时，既可以使用 str 作为消息，也可以使用 Message、MessageSegment 或者 MessageTemplate。那么，我们就需要先构造一个消息序列。消息序列可以通过多种方式构造：\"]},\"1044\":{\"h\":\"直接构造\",\"t\":[\"Message 类可以直接实例化，支持 str、MessageSegment、Iterable[MessageSegment] 或适配器自定义类型的参数。\",\"from nonebot.adapters.console import Message, MessageSegment # str Message(\\\"Hello, world!\\\") # MessageSegment Message(MessageSegment.text(\\\"Hello, world!\\\")) # List[MessageSegment] Message([MessageSegment.text(\\\"Hello, world!\\\")])\"]},\"1045\":{\"h\":\"运算构造\",\"t\":[\"Message 对象可以通过 str、MessageSegment 相加构造，详情请参考拼接消息。\"]},\"1046\":{\"h\":\"从字典数组构造\",\"t\":[\"Message 对象支持 Pydantic 自定义类型构造，可以使用 Pydantic 的 TypeAdapter 方法进行构造。\",\"from pydantic import TypeAdapter from nonebot.adapters.console import Message, MessageSegment # 由字典构造消息段 TypeAdapter(MessageSegment).validate_python( {\\\"type\\\": \\\"text\\\", \\\"data\\\": {\\\"text\\\": \\\"text\\\"}} ) == MessageSegment.text(\\\"text\\\") # 由字典数组构造消息序列 TypeAdapter(Message).validate_python( [MessageSegment.text(\\\"text\\\"), {\\\"type\\\": \\\"text\\\", \\\"data\\\": {\\\"text\\\": \\\"text\\\"}}], ) == Message([MessageSegment.text(\\\"text\\\"), MessageSegment.text(\\\"text\\\")])\"]},\"1047\":{\"h\":\"获取消息纯文本\",\"t\":[\"由于消息中存在各种类型的消息段，因此 str(message) 通常不能得到消息的纯文本，而是一个消息序列的字符串表示。\",\"NoneBot 为消息段定义了一个方法 is_text() ，可以用于判断消息段是否为纯文本；也可以使用 message.extract_plain_text() 方法获取消息纯文本。\",\"from nonebot.adapters.console import Message, MessageSegment # 判断消息段是否为纯文本 MessageSegment.text(\\\"text\\\").is_text() == True # 提取消息纯文本字符串 Message( [MessageSegment.text(\\\"text\\\"), MessageSegment.markdown(\\\"**markup**\\\")] ).extract_plain_text() == \\\"text\\\"\"]},\"1048\":{\"h\":\"遍历\",\"t\":[\"消息序列继承自 List[MessageSegment] ，因此可以使用 for 循环遍历消息段。\",\"for segment in message: ...\"]},\"1049\":{\"h\":\"比较\",\"t\":[\"消息和消息段都可以使用 == 或 != 运算符比较是否相同。\",\"MessageSegment.text(\\\"text\\\") != MessageSegment.text(\\\"foo\\\") some_message == Message([MessageSegment.text(\\\"text\\\")])\"]},\"1050\":{\"h\":\"检查消息段\",\"t\":[\"我们可以通过 in 运算符或消息序列的 has 方法来：\",\"# 是否存在消息段 MessageSegment.text(\\\"text\\\") in message # 是否存在指定类型的消息段 \\\"text\\\" in message\",\"我们还可以使用消息序列的 only 方法来检查消息中是否仅包含指定的消息段。\",\"# 是否都为指定消息段 message.only(MessageSegment.text(\\\"test\\\")) # 是否仅包含指定类型的消息段 message.only(\\\"text\\\")\"]},\"1051\":{\"h\":\"过滤、索引与切片\",\"t\":[\"消息序列对列表的索引与切片进行了增强，在原有列表 int 索引与 slice 切片的基础上，支持 type 过滤索引与切片。\",\"from nonebot.adapters.console import Message, MessageSegment message = Message( [ MessageSegment.text(\\\"test\\\"), MessageSegment.markdown(\\\"test2\\\"), MessageSegment.markdown(\\\"test3\\\"), MessageSegment.text(\\\"test4\\\"), ] ) # 索引 message[0] == MessageSegment.text(\\\"test\\\") # 切片 message[0:2] == Message( [MessageSegment.text(\\\"test\\\"), MessageSegment.markdown(\\\"test2\\\")] ) # 类型过滤 message[\\\"markdown\\\"] == Message( [MessageSegment.markdown(\\\"test2\\\"), MessageSegment.markdown(\\\"test3\\\")] ) # 类型索引 message[\\\"markdown\\\", 0] == MessageSegment.markdown(\\\"test2\\\") # 类型切片 message[\\\"markdown\\\", 0:2] == Message( [MessageSegment.markdown(\\\"test2\\\"), MessageSegment.markdown(\\\"test3\\\")] )\",\"我们也可以通过消息序列的 include、exclude 方法进行类型过滤。\",\"message.include(\\\"text\\\", \\\"markdown\\\") message.exclude(\\\"text\\\")\",\"同样的，消息序列对列表的 index、count 方法也进行了增强，可以用于索引指定类型的消息段。\",\"# 指定类型首个消息段索引 message.index(\\\"markdown\\\") == 1 # 指定类型消息段数量 message.count(\\\"markdown\\\") == 2\",\"此外，消息序列添加了一个 get 方法，可以用于获取指定类型指定个数的消息段。\",\"# 获取指定类型指定个数的消息段 message.get(\\\"markdown\\\", 1) == Message([MessageSegment.markdown(\\\"test2\\\")])\"]},\"1052\":{\"h\":\"拼接消息\",\"t\":[\"str、Message、MessageSegment 对象之间可以直接相加，相加均会返回一个新的 Message 对象。\",\"# 消息序列与消息段相加 Message([MessageSegment.text(\\\"text\\\")]) + MessageSegment.text(\\\"text\\\") # 消息序列与字符串相加 Message([MessageSegment.text(\\\"text\\\")]) + \\\"text\\\" # 消息序列与消息序列相加 Message([MessageSegment.text(\\\"text\\\")]) + Message([MessageSegment.text(\\\"text\\\")]) # 字符串与消息序列相加 \\\"text\\\" + Message([MessageSegment.text(\\\"text\\\")]) # 消息段与消息段相加 MessageSegment.text(\\\"text\\\") + MessageSegment.text(\\\"text\\\") # 消息段与字符串相加 MessageSegment.text(\\\"text\\\") + \\\"text\\\" # 消息段与消息序列相加 MessageSegment.text(\\\"text\\\") + Message([MessageSegment.text(\\\"text\\\")]) # 字符串与消息段相加 \\\"text\\\" + MessageSegment.text(\\\"text\\\")\",\"如果需要在当前消息序列后直接拼接新的消息段，可以使用 Message.append、Message.extend 方法，或者使用自加。\",\"msg = Message([MessageSegment.text(\\\"text\\\")]) # 自加 msg += \\\"text\\\" msg += MessageSegment.text(\\\"text\\\") msg += Message([MessageSegment.text(\\\"text\\\")]) # 附加 msg.append(\\\"text\\\") msg.append(MessageSegment.text(\\\"text\\\")) # 扩展 msg.extend([MessageSegment.text(\\\"text\\\")])\",\"我们也可以通过消息段或消息序列的 join 方法来拼接一串消息：\",\"seg = MessageSegment.text(\\\"text\\\") msg = seg.join( [ MessageSegment.text(\\\"first\\\"), Message( [ MessageSegment.text(\\\"second\\\"), MessageSegment.text(\\\"third\\\"), ] ) ] ) msg == Message( [ MessageSegment.text(\\\"first\\\"), MessageSegment.text(\\\"text\\\"), MessageSegment.text(\\\"second\\\"), MessageSegment.text(\\\"third\\\"), ] )\"]},\"1053\":{\"h\":\"使用消息模板\",\"t\":[\"为了提供安全可靠的跨平台模板字符，我们提供了一个消息模板功能来构建消息序列\",\"它在以下常见场景中尤其有用：\",\"多行富文本编排（包含图片，文字以及表情等）\",\"客制化（由 Bot 最终用户提供消息模板时）\",\"在事实上，它的用法和 str.format 极为相近，所以你在使用的时候，总是可以参考Python 文档来达到你想要的效果，这里给出几个简单的例子。\",\"默认情况下，消息模板采用 str 纯文本形式的格式化：\",\">>> from nonebot.adapters import MessageTemplate >>> MessageTemplate(\\\"{} {}\\\").format(\\\"hello\\\", \\\"world\\\") 'hello world'\",\"如果 Message.template 构建消息模板，那么消息模板将采用消息序列形式的格式化，此时的消息将会是平台特定的：\",\"注意\",\"使用 Message.template 构建消息模板时，应注意消息序列为平台适配器提供的类型，不能使用 nonebot.adapters.Message 基类作为模板构建。使用基类构建模板与使用 str 构建模板的效果是一样的，因此请使用上述的 MessageTemplate 类直接构建模板。：\",\">>> from nonebot.adapters.console import Message, MessageSegment >>> Message.template(\\\"{} {}\\\").format(\\\"hello\\\", \\\"world\\\") Message( MessageSegment.text(\\\"hello\\\"), MessageSegment.text(\\\" \\\"), MessageSegment.text(\\\"world\\\") )\",\"消息模板支持使用消息段进行格式化：\",\">>> from nonebot.adapters.console import Message, MessageSegment >>> Message.template(\\\"{}{}\\\").format(MessageSegment.markdown(\\\"**markup**\\\"), \\\"world\\\") Message( MessageSegment(type='markdown', data={'markup': '**markup**'}), MessageSegment(type='text', data={'text': 'world'}) )\",\"消息模板同样支持使用消息序列作为模板：\",\">>> from nonebot.adapters.console import Message, MessageSegment >>> Message.template( ... MessageSegment.text(\\\"{user_id}\\\") + MessageSegment.emoji(\\\"tada\\\") + ... MessageSegment.text(\\\"{message}\\\") ... ).format_map({\\\"user_id\\\": 123456, \\\"message\\\": \\\"hello world\\\"}) Message( MessageSegment(type='text', data={'text': '123456'}), MessageSegment(type='emoji', data={'emoji': 'tada'}), MessageSegment(type='text', data={'text': 'hello world'}) )\",\"注意\",\"只有消息序列中的文本类型消息段才能被格式化，其他类型的消息段将会原样添加。\",\"消息模板支持使用拓展控制符来控制消息段类型：\",\">>> from nonebot.adapters.console import Message, MessageSegment >>> Message.template(\\\"{name:emoji}\\\").format(name='tada') Message(MessageSegment(type='emoji', data={'name': 'tada'}))\"]},\"1054\":{\"h\":\"使用适配器\",\"t\":[\"适配器 (Adapter) 是机器人与平台交互的核心桥梁，它负责在驱动器和机器人插件之间转换与传递消息。\"]},\"1055\":{\"h\":\"适配器功能与组成\",\"t\":[\"适配器通常有两种功能，分别是接收事件和调用平台接口。其中，接收事件是指将驱动器收到的事件消息转换为 NoneBot 定义的事件模型，然后交由机器人插件处理；调用平台接口是指将机器人插件调用平台接口的数据转换为平台指定的格式，然后交由驱动器发送，并接收接口返回数据。\",\"为了实现这两种功能，适配器通常由四个部分组成：\",\"Adapter：负责转换事件和调用接口，正确创建 Bot 对象并注册到 NoneBot 中。\",\"Bot：负责存储平台机器人相关信息，并提供回复事件的方法。\",\"Event：负责定义事件内容，以及事件主体对象。\",\"Message：负责正确序列化消息，以便机器人插件处理。\"]},\"1056\":{\"h\":\"注册适配器\",\"t\":[\"在使用适配器之前，我们需要先将适配器注册到驱动器中，这样适配器就可以通过驱动器接收事件和调用接口了。我们以 Console 适配器为例，来看看如何注册适配器：\",\"import nonebot from nonebot.adapters.console import Adapter driver = nonebot.get_driver() driver.register_adapter(Adapter)\",\"我们首先需要从适配器模块中导入所需要的适配器类，然后通过驱动器的 register_adapter 方法将适配器注册到驱动器中即可。如果我们需要多平台支持，可以多次调用 register_adapter 方法来注册多个适配器。\"]},\"1057\":{\"h\":\"获取已注册的适配器\",\"t\":[\"NoneBot 提供了 get_adapter 方法来获取已注册的适配器，我们可以通过适配器的名称或类型来获取指定的适配器实例：\",\"import nonebot from nonebot.adapters.console import Adapter adapters = nonebot.get_adapters() console_adapter = nonebot.get_adapter(Adapter) console_adapter = nonebot.get_adapter(Adapter.get_name())\"]},\"1058\":{\"h\":\"获取 Bot 对象\",\"t\":[\"当前所有适配器已连接的 Bot 对象可以通过 get_bots 方法获取，这是一个以机器人 ID 为键的字典：\",\"import nonebot bots = nonebot.get_bots()\",\"我们也可以通过 get_bot 方法获取指定 ID 的 Bot 对象。如果省略 ID 参数，将会返回所有 Bot 中的第一个：\",\"import nonebot bot = nonebot.get_bot(\\\"bot_id\\\")\",\"如果需要获取指定适配器连接的 Bot 对象，我们可以通过适配器的 bots 属性获取，这也是一个以机器人 ID 为键的字典：\",\"import nonebot from nonebot.adapters.console import Adapter console_adapter = nonebot.get_adapter(Adapter) bots = console_adapter.bots\",\"Bot 对象都具有一个 self_id 属性，它是机器人的唯一 ID，由适配器填写，通常为机器人的帐号 ID 或者 APP ID。\"]},\"1059\":{\"h\":\"获取事件通用信息\",\"t\":[\"适配器的所有事件模型均继承自 Event 基类，在事件类型与重载一节中，我们也提到了如何使用基类抽象方法来获取事件通用信息。基类能提供如下信息：\"]},\"1060\":{\"h\":\"事件类型\",\"t\":[\"事件类型通常为 meta_event、message、notice、request。\",\"type: str = event.get_type()\"]},\"1061\":{\"h\":\"事件名称\",\"t\":[\"事件名称由适配器定义，通常用于日志记录。\",\"name: str = event.get_event_name()\"]},\"1062\":{\"h\":\"事件描述\",\"t\":[\"事件描述由适配器定义，通常用于日志记录。\",\"description: str = event.get_event_description()\"]},\"1063\":{\"h\":\"事件日志字符串\",\"t\":[\"事件日志字符串由事件名称和事件描述组成，用于日志记录。\",\"log: str = event.get_log_string()\"]},\"1064\":{\"h\":\"事件主体 ID\",\"t\":[\"事件主体 ID 通常为机器人用户 ID。\",\"user_id: str = event.get_user_id()\"]},\"1065\":{\"h\":\"事件会话 ID\",\"t\":[\"事件会话 ID 通常为机器人用户 ID 与群聊/频道 ID 组合而成。\",\"session_id: str = event.get_session_id()\"]},\"1066\":{\"h\":\"事件消息\",\"t\":[\"如果事件包含消息，则可以通过该方法获取，否则会产生异常。\",\"message: Message = event.get_message()\"]},\"1067\":{\"h\":\"事件纯文本消息\",\"t\":[\"通常为事件消息的纯文本内容，如果事件不包含消息，则会产生异常。\",\"text: str = event.get_plaintext()\"]},\"1068\":{\"h\":\"事件是否与机器人有关\",\"t\":[\"由适配器实现的判断，通常将事件目标主体为机器人、消息中包含“@机器人”或以“机器人的昵称”开始视为与机器人有关。\",\"is_tome: bool = event.is_tome()\"]},\"1069\":{\"h\":\"更多\",\"t\":[\"官方支持的适配器和社区贡献的适配器均可在商店中查看。如果你想要开发自己的适配器，可以参考开发文档。欢迎通过商店发布你的适配器。\"]},\"1070\":{\"h\":\"选择驱动器\",\"t\":[\"驱动器 (Driver) 是机器人运行的基石，它是机器人初始化的第一步，主要负责数据收发。\",\"提示\",\"驱动器的选择通常与机器人所使用的协议适配器相关，如果不知道该选择哪个驱动器，可以先阅读相关协议适配器文档说明。\",\"提示\",\"如何安装驱动器请参考安装驱动器。\"]},\"1071\":{\"h\":\"驱动器类型\",\"t\":[\"驱动器类型大体上可以分为两种：\",\"Forward：即客户端型驱动器，多用于使用 HTTP 轮询，连接 WebSocket 服务器等情形。\",\"Reverse：即服务端型驱动器，多用于使用 WebHook，接收 WebSocket 客户端连接等情形。\",\"客户端型驱动器可以分为以下两种：\",\"异步发送 HTTP 请求，自定义 HTTP Method、URL、Header、Body、Cookie、Proxy、Timeout 等。\",\"异步建立 WebSocket 连接上下文，自定义 WebSocket URL、Header、Cookie、Proxy、Timeout 等。\",\"服务端型驱动器目前有：\",\"ASGI 应用框架，具有以下功能： \",\"协议适配器自定义 HTTP 上报地址以及对上报数据处理的回调函数。\",\"协议适配器自定义 WebSocket 连接请求地址以及对 WebSocket 请求处理的回调函数。\",\"用户可以向 ASGI 应用添加任何服务端相关功能，如：添加自定义路由。\"]},\"1072\":{\"h\":\"配置驱动器\",\"t\":[\"驱动器的配置方法已经在配置章节中简单进行了介绍，这里将详细介绍驱动器配置的格式。\",\"NoneBot 中的客户端和服务端型驱动器可以相互配合使用，但服务端型驱动器仅能选择一个。所有驱动器模块都会包含一个 Driver 子类，即驱动器类，他可以作为驱动器单独运行。同时，客户端驱动器模块中还会提供一个 Mixin 子类，用于在与其他驱动器配合使用时加载。因此，驱动器配置格式采用特殊语法：<module>[:<Driver>][+<module>[:<Mixin>]]*。\",\"其中，<module> 代表驱动器模块路径；<Driver> 代表驱动器类名，默认为 Driver；<Mixin> 代表驱动器混入类名，默认为 Mixin。即，我们需要选择一个主要驱动器，然后在其基础上配合使用其他驱动器的功能。主要驱动器可以为客户端或服务端类型，但混入类驱动器只能为客户端类型。\",\"特别的，为了简化内置驱动器模块路径，我们可以使用 ~ 符号作为内置驱动器模块路径的前缀，如 ~fastapi 代表使用内置驱动器 fastapi。NoneBot 内置了多个驱动器适配，但需要安装额外依赖才能使用，具体请参考安装驱动器。常见的驱动器配置如下：\",\"DRIVER=~fastapi DRIVER=~aiohttp DRIVER=~httpx+~websockets DRIVER=~fastapi+~httpx+~websockets\"]},\"1073\":{\"h\":\"获取驱动器\",\"t\":[\"在 NoneBot 框架初始化完成后，我们就可以通过 get_driver() 方法获取全局驱动器实例：\",\"from nonebot import get_driver driver = get_driver()\"]},\"1074\":{\"h\":\"内置驱动器\"},\"1075\":{\"h\":\"None\",\"t\":[\"**类型：**服务端驱动器\",\"NoneBot 内置的空驱动器，不提供任何收发数据功能，可以在不需要外部网络连接时使用。\",\"DRIVER=~none\"]},\"1076\":{\"h\":\"FastAPI（默认）\",\"t\":[\"**类型：**ASGI 服务端驱动器\",\"FastAPI is a modern, fast (high-performance), web framework for building APIs with Python 3.6+ based on standard Python type hints.\",\"FastAPI 是一个易上手、高性能的异步 Web 框架，具有极佳的编写体验。 FastAPI 可以通过类型注解、依赖注入等方式实现输入参数校验、自动生成 API 文档等功能，也可以挂载其他 ASGI、WSGI 应用。\",\"DRIVER=~fastapi\"]},\"1077\":{\"h\":\"FastAPI 配置项\"},\"1078\":{\"h\":\"\",\"t\":[\"类型：str | None 默认值：None 说明：FastAPI 提供的 OpenAPI JSON 定义地址，如果为 None，则不提供 OpenAPI JSON 定义。\"]},\"1079\":{\"h\":\"\",\"t\":[\"类型：str | None 默认值：None 说明：FastAPI 提供的 Swagger 文档地址，如果为 None，则不提供 Swagger 文档。\"]},\"1080\":{\"h\":\"\",\"t\":[\"类型：str | None 默认值：None 说明：FastAPI 提供的 ReDoc 文档地址，如果为 None，则不提供 ReDoc 文档。\"]},\"1081\":{\"h\":\"\",\"t\":[\"类型：bool 默认值：True 说明：FastAPI 提供的 OpenAPI JSON 定义中是否包含适配器路由的 Schema。\"]},\"1082\":{\"h\":\"\",\"t\":[\"警告\",\"不推荐开启该配置项，在 Windows 平台上开启该功能有可能会造成预料之外的影响！替代方案：使用 nb-cli 命令行工具以及参数 --reload 启动 NoneBot。\",\"nb run --reload\",\"开启该功能后，在 uvicorn 运行时（FastAPI 提供的 ASGI 底层，即 reload 功能的实际来源），asyncio 使用的事件循环会被 uvicorn 从默认的 ProactorEventLoop 强制切换到 SelectorEventLoop。\",\"相关信息参考 uvicorn#529，uvicorn#1070，uvicorn#1257\",\"后者（SelectorEventLoop）在 Windows 平台的可使用性不如前者（ProactorEventLoop），包括但不限于\",\"不支持创建子进程\",\"最多只支持 512 个套接字\",\"...\",\"具体信息参考 Python 文档\",\"所以，一些使用了 asyncio 的库因此可能无法正常工作，如：\",\"playwright\",\"如果在开启该功能后，原本正常运行的代码报错，且打印的异常堆栈信息和 asyncio 有关（异常一般为 NotImplementedError）， 你可能就需要考虑相关库对事件循环的支持，以及是否启用该功能。\",\"类型：bool 默认值：False 说明：是否开启 uvicorn 的 reload 功能，需要在机器人入口文件提供 ASGI 应用路径。\",\"app = nonebot.get_asgi() nonebot.run(app=\\\"bot:app\\\")\"]},\"1083\":{\"h\":\"\",\"t\":[\"类型：List[str] | None 默认值：None 说明：重载监控文件夹列表，默认为 uvicorn 默认值\"]},\"1084\":{\"h\":\"\",\"t\":[\"类型：float | None 默认值：None 说明：重载延迟，默认为 uvicorn 默认值\"]},\"1085\":{\"h\":\"\",\"t\":[\"类型：List[str] | None 默认值：None 说明：要监听的文件列表，支持 glob pattern，默认为 uvicorn 默认值\"]},\"1086\":{\"h\":\"\",\"t\":[\"类型：List[str] | None 默认值：None 说明：不要监听的文件列表，支持 glob pattern，默认为 uvicorn 默认值\"]},\"1087\":{\"h\":\"\",\"t\":[\"类型：Dist[str, Any] 默认值：{} 说明：传递给 FastAPI 的其他参数\"]},\"1088\":{\"h\":\"Quart\",\"t\":[\"**类型：**ASGI 服务端驱动器\",\"Quart is an asyncio reimplementation of the popular Flask microframework API.\",\"Quart 是一个类 Flask 的异步版本，拥有与 Flask 非常相似的接口和使用方法。\",\"DRIVER=~quart\"]},\"1089\":{\"h\":\"Quart 配置项\"},\"1090\":{\"h\":\"\",\"t\":[\"警告\",\"不推荐开启该配置项，在 Windows 平台上开启该功能有可能会造成预料之外的影响！替代方案：使用 nb-cli 命令行工具以及参数 --reload 启动 NoneBot。\",\"nb run --reload\",\"类型：bool 默认值：False 说明：是否开启 uvicorn 的 reload 功能，需要在机器人入口文件提供 ASGI 应用路径。\",\"app = nonebot.get_asgi() nonebot.run(app=\\\"bot:app\\\")\"]},\"1091\":{\"h\":\"\",\"t\":[\"类型：List[str] | None 默认值：None 说明：重载监控文件夹列表，默认为 uvicorn 默认值\"]},\"1092\":{\"h\":\"\",\"t\":[\"类型：float | None 默认值：None 说明：重载延迟，默认为 uvicorn 默认值\"]},\"1093\":{\"h\":\"\",\"t\":[\"类型：List[str] | None 默认值：None 说明：要监听的文件列表，支持 glob pattern，默认为 uvicorn 默认值\"]},\"1094\":{\"h\":\"\",\"t\":[\"类型：List[str] | None 默认值：None 说明：不要监听的文件列表，支持 glob pattern，默认为 uvicorn 默认值\"]},\"1095\":{\"h\":\"\",\"t\":[\"类型：Dist[str, Any] 默认值：{} 说明：传递给 Quart 的其他参数\"]},\"1096\":{\"h\":\"HTTPX\",\"t\":[\"**类型：**HTTP 客户端驱动器\",\"注意\",\"本驱动器仅支持 HTTP 请求，不支持 WebSocket 连接请求。\",\"HTTPX is a fully featured HTTP client for Python 3, which provides sync and async APIs, and support for both HTTP/1.1 and HTTP/2.\",\"DRIVER=~httpx\"]},\"1097\":{\"h\":\"websockets\",\"t\":[\"**类型：**WebSocket 客户端驱动器\",\"注意\",\"本驱动器仅支持 WebSocket 连接请求，不支持 HTTP 请求。\",\"websockets is a library for building WebSocket servers and clients in Python with a focus on correctness, simplicity, robustness, and performance.\",\"DRIVER=~websockets\"]},\"1098\":{\"h\":\"AIOHTTP\",\"t\":[\"**类型：**HTTP/WebSocket 客户端驱动器\",\"AIOHTTP: Asynchronous HTTP Client/Server for asyncio and Python.\",\"DRIVER=~aiohttp\"]},\"1099\":{\"h\":\"事件响应器存储\",\"t\":[\"事件响应器是 NoneBot 处理事件的核心，它们默认存储在一个字典中。在进入会话状态后，事件响应器将会转为临时响应器，作为最高优先级同样存储于该字典中。因此，事件响应器的存储类似于会话存储，它决定了整个 NoneBot 对事件的处理行为。\",\"NoneBot 默认使用 Python 的字典将事件响应器存储于内存中，但是我们也可以自定义事件响应器存储，将事件响应器存储于其他地方，例如 Redis 等。这样我们就可以实现持久化、在多实例间共享会话状态等功能。\"]},\"1100\":{\"h\":\"编写存储提供者\",\"t\":[\"事件响应器的存储提供者 MatcherProvider 抽象类继承自 MutableMapping[int, list[type[Matcher]]]，即以优先级为键，以事件响应器列表为值的映射。我们可以方便地进行逐优先级事件传播。\",\"编写一个自定义的存储提供者，只需要继承并实现 MatcherProvider 抽象类：\",\"from nonebot.matcher import MatcherProvider class CustomProvider(MatcherProvider): ...\"]},\"1101\":{\"h\":\"设置存储提供者\",\"t\":[\"我们可以通过 matchers.set_provider 方法设置存储提供者：\",\"from nonebot.matcher import matchers matchers.set_provider(CustomProvider) assert isinstance(matchers.provider, CustomProvider)\"]},\"1102\":{\"h\":\"事件响应器进阶\",\"t\":[\"在指南与深入中，我们已经介绍了事件响应器的基本用法以及响应规则、权限控制等功能。在这一节中，我们将介绍事件响应器的组成，内置的响应规则，与第三方响应规则拓展。\",\"提示\",\"事件响应器允许继承，你可以通过直接继承 Matcher 类来创建一个新的事件响应器。\"]},\"1103\":{\"h\":\"事件响应器组成\"},\"1104\":{\"h\":\"事件响应器类型\",\"t\":[\"事件响应器类型 type 即是该响应器所要响应的事件类型，只有在接收到的事件类型与该响应器的类型相同时，才会触发该响应器。如果类型为空字符串 \\\"\\\"，则响应器将会响应所有类型的事件。事件响应器类型的检查在所有其他检查（权限控制、响应规则）之前进行。\",\"NoneBot 内置了四种常用事件类型：meta_event、message、notice、request，分别对应元事件、消息、通知、请求。通常情况下，协议适配器会将事件合理地分类至这四种类型中。如果有其他类型的事件需要响应，可以自行定义新的类型。\"]},\"1105\":{\"h\":\"事件触发权限\",\"t\":[\"事件触发权限 permission 是一个 Permission 对象，这在权限控制一节中已经介绍过。事件触发权限会在事件响应器的类型检查通过后进行检查，如果权限检查通过，则执行响应规则检查。\"]},\"1106\":{\"h\":\"事件响应规则\",\"t\":[\"事件响应规则 rule 是一个 Rule 对象，这在响应规则一节中已经介绍过。事件响应器的响应规则会在事件响应器的权限检查通过后进行匹配，如果响应规则检查通过，则触发该响应器。\"]},\"1107\":{\"h\":\"响应优先级\",\"t\":[\"响应优先级 priority 是一个正整数，用于指定响应器的优先级。响应器的优先级越小，越先被触发。如果响应器的优先级相同，则按照响应器的注册顺序进行触发。\"]},\"1108\":{\"h\":\"阻断\",\"t\":[\"阻断 block 是一个布尔值，用于指定响应器是否阻断事件的传播。如果阻断为 True，则在该响应器被触发后，事件将不会再传播给其他下一优先级的响应器。\",\"NoneBot 内置的事件响应器中，所有非 command 规则的 message 类型的事件响应器都会阻断事件传递，其他则不会。\",\"在部分情况中，可以使用 stop_propagation 方法动态阻止事件传播，该方法需要 handler 在参数中获取 matcher 实例后调用方法。\"]},\"1109\":{\"h\":\"有效期\",\"t\":[\"事件响应器的有效期分为 temp 和 expire_time 。temp 是一个布尔值，用于指定响应器是否为临时响应器。如果为 True，则该响应器在被触发后会被自动销毁。expire_time 是一个 datetime 对象，用于指定响应器的过期时间。如果 expire_time 不为 None，则在该时间点后，该响应器会被自动销毁。\"]},\"1110\":{\"h\":\"默认状态\",\"t\":[\"事件响应器的默认状态 default_state 是一个 dict 对象，用于指定响应器的默认状态。在响应器被触发时，响应器将会初始化默认状态然后开始执行事件处理流程。\"]},\"1111\":{\"h\":\"基本辅助函数\",\"t\":[\"NoneBot 为四种类型的事件响应器提供了五个基本的辅助函数：\",\"on：创建任何类型的事件响应器。\",\"on_metaevent：创建元事件响应器。\",\"on_message：创建消息事件响应器。\",\"on_request：创建请求事件响应器。\",\"on_notice：创建通知事件响应器。\",\"除了 on 函数具有一个 type 参数外，其余参数均相同：\",\"rule：响应规则，可以是 Rule 对象或者 RuleChecker 函数。\",\"permission：事件触发权限，可以是 Permission 对象或者 PermissionChecker 函数。\",\"handlers：事件处理函数列表。\",\"temp：是否为临时响应器。\",\"expire_time：响应器的过期时间。\",\"priority：响应器的优先级。\",\"block：是否阻断事件传播。\",\"state：响应器的默认状态。\",\"在消息类型的事件响应器的基础上，NoneBot 还内置了一些常用的响应规则，并结合为辅助函数来方便我们快速创建指定功能的响应器。下面我们逐个介绍。\"]},\"1112\":{\"h\":\"内置响应规则\",\"t\":[\"提示\",\"响应规则的使用方法可以参考 深入 - 响应规则。\"]},\"1113\":{\"h\":\"\",\"t\":[\"startswith 响应规则用于匹配消息纯文本部分的开头是否与指定字符串（或一系列字符串）相同。可选参数 ignorecase 用于指定是否忽略大小写，默认为 False。\",\"例如，我们可以创建一个匹配消息开头为 ! 或者 / 的规则：\",\"from nonebot.rule import startswith rule = startswith((\\\"!\\\", \\\"/\\\"), ignorecase=False)\",\"也可以直接使用辅助函数新建一个响应器：\",\"from nonebot import on_startswith matcher = on_startswith((\\\"!\\\", \\\"/\\\"), ignorecase=False)\"]},\"1114\":{\"h\":\"\",\"t\":[\"endswith 响应规则用于匹配消息纯文本部分的结尾是否与指定字符串（或一系列字符串）相同。可选参数 ignorecase 用于指定是否忽略大小写，默认为 False。\",\"例如，我们可以创建一个匹配消息结尾为 . 或者 。 的规则：\",\"from nonebot.rule import endswith rule = endswith((\\\".\\\", \\\"。\\\"), ignorecase=False)\",\"也可以直接使用辅助函数新建一个响应器：\",\"from nonebot import on_endswith matcher = on_endswith((\\\".\\\", \\\"。\\\"), ignorecase=False)\"]},\"1115\":{\"h\":\"\",\"t\":[\"fullmatch 响应规则用于匹配消息纯文本部分是否与指定字符串（或一系列字符串）完全相同。可选参数 ignorecase 用于指定是否忽略大小写，默认为 False。\",\"例如，我们可以创建一个匹配消息为 ping 或者 pong 的规则：\",\"from nonebot.rule import fullmatch rule = fullmatch((\\\"ping\\\", \\\"pong\\\"), ignorecase=False)\",\"也可以直接使用辅助函数新建一个响应器：\",\"from nonebot import on_fullmatch matcher = on_fullmatch((\\\"ping\\\", \\\"pong\\\"), ignorecase=False)\"]},\"1116\":{\"h\":\"\",\"t\":[\"keyword 响应规则用于匹配消息纯文本部分是否包含指定字符串（或一系列字符串）。\",\"例如，我们可以创建一个匹配消息中包含 hello 或者 hi 的规则：\",\"from nonebot.rule import keyword rule = keyword(\\\"hello\\\", \\\"hi\\\")\",\"也可以直接使用辅助函数新建一个响应器：\",\"from nonebot import on_keyword matcher = on_keyword({\\\"hello\\\", \\\"hi\\\"})\"]},\"1117\":{\"h\":\"\",\"t\":[\"command 是最常用的响应规则，它用于匹配消息是否为命令。它会根据配置中的 Command Start 和 Command Separator 来判断消息是否为命令。\",\"例如，当我们配置了 Command Start 为 /，Command Separator 为 . 时：\",\"from nonebot.rule import command # 匹配 \\\"/help\\\" 或者 \\\"/帮助\\\" 开头的消息 rule = command(\\\"help\\\", \\\"帮助\\\") # 匹配 \\\"/help.cmd\\\" 开头的消息 rule = command((\\\"help\\\", \\\"cmd\\\"))\",\"也可以直接使用辅助函数新建一个响应器：\",\"from nonebot import on_command matcher = on_command(\\\"help\\\", aliases={\\\"帮助\\\"})\",\"此外，command 响应规则默认允许消息命令与参数间不加空格，如果需要严格匹配命令与参数间的空白符，可以使用 command 函数的 force_whitespace 参数。force_whitespace 参数可以是 bool 类型或者具体的字符串，默认为 False。如果为 True，则命令与参数间必须有任意个数的空白符；如果为字符串，则命令与参数间必须有且与给定字符串一致的空白符。\",\"rule = command(\\\"help\\\", force_whitespace=True) rule = command(\\\"help\\\", force_whitespace=\\\" \\\")\",\"命令解析后的结果可以通过 Command、RawCommand、CommandArg、CommandStart、CommandWhitespace 依赖注入获取。\"]},\"1118\":{\"h\":\"\",\"t\":[\"shell_command 响应规则用于匹配类 shell 命令形式的消息。它首先与 command 响应规则一样进行命令匹配，如果匹配成功，则会进行进一步的参数解析。参数解析采用 argparse 标准库进行，在此基础上添加了消息序列 Message 支持。\",\"例如，我们可以创建一个匹配 /cmd 命令并且带有 -v 选项与默认 -h 帮助选项的规则：\",\"from nonebot.rule import shell_command, ArgumentParser parser = ArgumentParser() parser.add_argument(\\\"-v\\\", \\\"--verbose\\\", action=\\\"store_true\\\") rule = shell_command(\\\"cmd\\\", parser=parser)\",\"更多关于 argparse 的使用方法请参考 argparse 文档。我们也可以选择不提供 parser 参数，这样 shell_command 将不会解析参数，但会提供参数列表 argv。\",\"直接使用辅助函数新建一个响应器：\",\"from nonebot import on_shell_command from nonebot.rule import ArgumentParser parser = ArgumentParser() parser.add_argument(\\\"-v\\\", \\\"--verbose\\\", action=\\\"store_true\\\") matcher = on_shell_command(\\\"cmd\\\", parser=parser)\",\"参数解析后的结果可以通过 ShellCommandArgv、ShellCommandArgs 依赖注入获取。\"]},\"1119\":{\"h\":\"\",\"t\":[\"regex 响应规则用于匹配消息是否与指定正则表达式匹配。\",\"提示\",\"正则表达式匹配使用 search 而非 match，如需从头匹配请使用 r\\\"^xxx\\\" 模式来确保匹配开头。\",\"例如，我们可以创建一个匹配消息中包含字母并且忽略大小写的规则：\",\"from nonebot.rule import regex rule = regex(r\\\"[a-z]+\\\", flags=re.IGNORECASE)\",\"也可以直接使用辅助函数新建一个响应器：\",\"from nonebot import on_regex matcher = on_regex(r\\\"[a-z]+\\\", flags=re.IGNORECASE)\",\"正则匹配后的结果可以通过 RegexStr、RegexGroup、RegexDict 依赖注入获取。\"]},\"1120\":{\"h\":\"\",\"t\":[\"to_me 响应规则用于匹配事件是否与机器人相关。\",\"例如：\",\"from nonebot.rule import to_me rule = to_me()\"]},\"1121\":{\"h\":\"\",\"t\":[\"is_type 响应规则用于匹配事件类型是否为指定类型（或者一系列类型）。\",\"例如，我们可以创建一个匹配 OneBot v11 私聊和群聊消息事件的规则：\",\"from nonebot.rule import is_type from nonebot.adapters.onebot.v11 import PrivateMessageEvent, GroupMessageEvent rule = is_type(PrivateMessageEvent, GroupMessageEvent)\"]},\"1122\":{\"h\":\"响应器组\",\"t\":[\"为了更方便的管理一系列功能相近的响应器，NoneBot 提供了两种响应器组，它们可以帮助我们进行响应器的统一管理。\"]},\"1123\":{\"h\":\"\",\"t\":[\"CommandGroup 可以用于管理一系列具有相同前置命令的子命令响应器。\",\"例如，我们创建 /cmd、/cmd.sub、/cmd.help 三个命令，他们具有相同的优先级：\",\"from nonebot import CommandGroup group = CommandGroup(\\\"cmd\\\", priority=10) cmd = group.command(tuple()) sub_cmd = group.command(\\\"sub\\\") help_cmd = group.command(\\\"help\\\")\",\"命令别名 aliases 默认不会添加 CommandGroup 设定的前缀，如果需要为 aliases 添加前缀，可以添加 prefix_aliases=True 参数:\",\"from nonebot import CommandGroup group = CommandGroup(\\\"cmd\\\", prefix_aliases=True) cmd = group.command(tuple()) help_cmd = group.command(\\\"help\\\", aliases={\\\"帮助\\\"})\",\"这样就能成功匹配 /cmd、/cmd.help、/cmd.帮助 命令。如果未设置，将默认匹配 /cmd、/cmd.help、/帮助 命令。\"]},\"1124\":{\"h\":\"\",\"t\":[\"MatcherGroup 可以用于管理一系列具有相同属性的响应器。\",\"例如，我们创建一个具有相同响应规则的响应器组：\",\"from nonebot.rule import to_me from nonebot import MatcherGroup group = MatcherGroup(rule=to_me()) matcher1 = group.on_message() matcher2 = group.on_message()\"]},\"1125\":{\"h\":\"第三方响应规则\"},\"1126\":{\"h\":\"Alconna\",\"t\":[\"nonebot-plugin-alconna 是一类提供了拓展响应规则的插件。 该插件使用 Alconna 作为命令解析器， 是一个简单、灵活、高效的命令参数解析器, 并且不局限于解析命令式字符串。\",\"该插件提供了一类新的事件响应器辅助函数 on_alconna，以及 AlconnaResult 等依赖注入函数。\",\"基于 Alconna 的特性，该插件同时提供了一系列便捷的消息段标注。 标注可用于在 Alconna 中匹配消息中除 text 外的其他消息段，也可用于快速创建各适配器下的消息段。所有标注位于 nonebot_plugin_alconna.adapters 中。\",\"该插件同时通过提供 UniMessage (通用消息模型) 实现了跨平台接收和发送消息的功能。\",\"详情请阅读最佳实践中的 命令解析拓展 章节。\"]},\"1127\":{\"h\":\"插件信息\",\"t\":[\"NoneBot 是一个插件化的框架，可以通过加载插件来扩展功能。同时，我们也可以通过 NoneBot 的插件系统来获取相关信息，例如插件的名称、使用方法，用于收集帮助信息等。下面我们将介绍如何为插件添加元数据，以及如何获取插件信息。\"]},\"1128\":{\"h\":\"插件元数据\",\"t\":[\"在 NoneBot 中，插件 Plugin 对象中存储了插件系统所需要的一系列信息。包括插件的索引名称、插件模块、插件中的事件响应器、插件父子关系等。通常，只有插件开发者才需要关心这些信息，而插件使用者或者机器人用户想要看到的是插件使用方法等帮助信息。因此，我们可以为插件添加插件元数据 PluginMetadata，它允许插件开发者为插件添加一些额外的信息。这些信息编写于插件模块的顶层，可以直接通过源码查看，或者通过 NoneBot 插件系统获取收集到的信息，通过其他方式发送给机器人用户等。\",\"现在，假设我们有一个插件 example, 它的模块结构如下：\",\"📦 awesome-bot ├── 📂 awesome_bot │ └── 📂 plugins | └── 📂 example | ├── 📜 __init__.py | └── 📜 config.py ├── 📜 pyproject.toml └── 📜 README.md\",\"我们需要在插件顶层模块 example/__init__.py 中添加插件元数据，如下所示：\",\"from nonebot.plugin import PluginMetadata from .config import Config __plugin_meta__ = PluginMetadata( name=\\\"示例插件\\\", description=\\\"这是一个示例插件\\\", usage=\\\"没什么用\\\", type=\\\"application\\\", config=Config, extra={}, )\",\"我们可以看到，插件元数据 PluginMetadata 有三个基本属性：插件名称、插件描述、插件使用方法。除此之外，还有几个可选的属性（具体填写见发布插件章节）：\",\"type：插件类别，发布插件必填。当前有效类别有：library（为其他插件编写提供功能），application（向机器人用户提供功能）；\",\"homepage：插件项目主页，发布插件必填；\",\"config：插件的配置类，如无配置类可不填；\",\"supported_adapters：支持的适配器模块名集合，若插件可以保证兼容所有适配器（即仅使用基本适配器功能）可不填写；\",\"extra：一个字典，可以用于存储任意信息。其他插件可以通过约定 extra 字典的键名来达成收集某些特殊信息的目的。\",\"请注意，这里的插件名称是供使用者或机器人用户查看的，与插件索引名称无关。插件索引名称（插件模块名称）仅用于 NoneBot 插件系统内部索引。\"]},\"1129\":{\"h\":\"获取插件信息\",\"t\":[\"NoneBot 提供了多种获取插件对象的方法，例如获取当前所有已导入的插件：\",\"import nonebot plugins: set[Plugin] = nonebot.get_loaded_plugins()\",\"也可以通过插件索引名称获取插件对象：\",\"import nonebot plugin: Plugin | None = nonebot.get_plugin(\\\"example\\\")\",\"或者通过模块路径获取插件对象：\",\"import nonebot plugin: Plugin | None = nonebot.get_plugin_by_module_name(\\\"awesome_bot.plugins.example\\\")\",\"如果需要获取所有当前声明的插件名称（可能还未加载），可以使用 get_available_plugin_names 函数：\",\"import nonebot plugin_names: set[str] = nonebot.get_available_plugin_names()\",\"插件对象 Plugin 中包含了多个属性：\",\"name：插件索引名称\",\"module：插件模块\",\"module_name：插件模块路径\",\"manager：插件管理器\",\"matcher：插件中定义的事件响应器\",\"parent_plugin：插件的父插件\",\"sub_plugins：插件的子插件集合\",\"metadata：插件元数据\",\"通过这些属性以及插件元数据，我们就可以收集所需要的插件信息了。\"]},\"1130\":{\"h\":\"嵌套插件\",\"t\":[\"NoneBot 支持嵌套插件，即一个插件可以包含其他插件。通过这种方式，我们可以将一个大型插件拆分成多个功能子插件，使得插件更加清晰、易于维护。我们可以直接在插件中使用 NoneBot 加载插件的方法来加载子插件。\"]},\"1131\":{\"h\":\"创建嵌套插件\",\"t\":[\"我们可以在使用 nb-cli 命令创建插件时，选择直接通过模板创建一个嵌套插件：\",\"$ nb plugin create [?] 插件名称: parent [?] 使用嵌套插件? (y/N) Y [?] 输出目录: awesome_bot/plugins\",\"或者使用 nb plugin create --sub-plugin 选项直接创建一个嵌套插件。\"]},\"1132\":{\"h\":\"已有插件\",\"t\":[\"如果你已经有一个插件，想要在其中嵌套加载子插件，可以在插件的 __init__.py 中添加如下代码：\",\"import nonebot from pathlib import Path sub_plugins = nonebot.load_plugins( str(Path(__file__).parent.joinpath(\\\"plugins\\\").resolve()) )\",\"这样，parent 插件就会加载 parent/plugins 目录下的所有插件。NoneBot 会正确识别这些插件的父子关系，你可以在 parent 的插件信息中看到这些子插件的信息，也可以在子插件信息中看到它们的父插件信息。\"]},\"1133\":{\"h\":\"跨插件访问\",\"t\":[\"NoneBot 插件化系统的设计使得插件之间可以功能独立、各司其职，我们可以更好地维护和扩展插件。但是，有时候我们可能需要在不同插件之间调用功能。NoneBot 生态中就有一类插件，它们专为其他插件提供功能支持，如：定时任务插件、数据存储插件等。这时候我们就需要在插件之间进行跨插件访问。\"]},\"1134\":{\"h\":\"插件跟踪\",\"t\":[\"由于 NoneBot 插件系统通过 Import Hooks 的方式实现插件加载与跟踪管理，因此我们不能在 NoneBot 跟踪插件前进行模块 import，这会导致插件加载失败。即，我们不能在使用 NoneBot 提供的加载插件方法前，直接使用 import 语句导入插件。\",\"对于在项目目录下的插件，我们通常直接使用 load_from_toml 等方法一次性加载所有插件。由于这些插件已经被声明，即便插件导入顺序不同，NoneBot 也能正确跟踪插件。此时，我们不需要对跨插件访问进行特殊处理。但当我们使用了外部插件，如果没有事先声明或加载插件，NoneBot 并不会将其当作插件进行跟踪，可能会出现意料之外的错误出现。\",\"简单来说，我们必须在 import 外部插件之前，确保依赖的外部插件已经被声明或加载。\"]},\"1135\":{\"h\":\"插件依赖声明\",\"t\":[\"NoneBot 提供了一种方法来确保我们依赖的插件已经被正确加载，即使用 require 函数。通过 require 函数，我们可以在当前插件中声明依赖的插件，NoneBot 会在加载当前插件时，检查依赖的插件是否已经被加载，如果没有，会尝试优先加载依赖的插件。\",\"假设我们有一个插件 a 依赖于插件 b，我们可以在插件 a 中使用 require 函数声明其依赖于插件 b：\",\"from nonebot import require require(\\\"b\\\") from b import some_function\",\"其中，require 函数的参数为插件索引名称或者外部插件的模块名称。在完成依赖声明后，我们可以在插件 a 中直接导入插件 b 所提供的功能。\"]},\"1136\":{\"h\":\"添加路由\",\"t\":[\"在驱动器一节中，我们了解了驱动器的两种类型。既然驱动器可以作为服务端运行，那么我们就可以向驱动器添加路由规则，从而实现自定义的 API 接口等功能。在添加路由规则时，我们需要注意驱动器的类型，详情可以参考选择驱动器。\",\"NoneBot 中，我们可以通过两种途径向 ASGI 驱动器添加路由规则：\",\"通过 NoneBot 的兼容层建立路由规则。\",\"直接向 ASGI 应用添加路由规则。\",\"这两种途径各有优劣，前者可以在各种服务端型驱动器下运行，但并不能直接使用 ASGI 应用框架提供的特性与功能；后者直接使用 ASGI 应用，更自由、功能完整，但只能在特定类型驱动器下运行。\",\"在向驱动器添加路由规则时，我们需要注意驱动器是否为服务端类型，我们可以通过以下方式判断：\",\"from nonebot import get_driver from nonebot.drivers import ASGIMixin # highlight-next-line can_use = isinstance(get_driver(), ASGIMixin)\"]},\"1137\":{\"h\":\"通过兼容层添加路由\",\"t\":[\"NoneBot 兼容层定义了两个数据类 HTTPServerSetup 和 WebSocketServerSetup，分别用于定义 HTTP 服务端和 WebSocket 服务端的路由规则。\"]},\"1138\":{\"h\":\"HTTP 路由\",\"t\":[\"HTTPServerSetup 具有四个属性：\",\"path：路由路径，不支持特殊占位表达式。类型为 URL。\",\"method：请求方法。类型为 str。\",\"name：路由名称，不可重复。类型为 str。\",\"handle_func：路由处理函数。类型为 Callable[[Request], Awaitable[Response]]。\",\"例如，我们添加一个 /hello 的路由，当请求方法为 GET 时，返回 200 OK 以及返回体信息：\",\"from nonebot import get_driver from nonebot.drivers import URL, Request, Response, ASGIMixin, HTTPServerSetup async def hello(request: Request) -> Response: return Response(200, content=\\\"Hello, world!\\\") if isinstance((driver := get_driver()), ASGIMixin): driver.setup_http_server( HTTPServerSetup( path=URL(\\\"/hello\\\"), method=\\\"GET\\\", name=\\\"hello\\\", handle_func=hello, ) )\",\"对于 Request 和 Response 的详细信息，可以参考 API 文档。\"]},\"1139\":{\"h\":\"WebSocket 路由\",\"t\":[\"WebSocketServerSetup 具有三个属性：\",\"path：路由路径，不支持特殊占位表达式。类型为 URL。\",\"name：路由名称，不可重复。类型为 str。\",\"handle_func：路由处理函数。类型为 Callable[[WebSocket], Awaitable[Any]]。\",\"例如，我们添加一个 /ws 的路由，发送所有接收到的数据：\",\"from nonebot import get_driver from nonebot.drivers import URL, ASGIMixin, WebSocket, WebSocketServerSetup async def ws_handler(ws: WebSocket): await ws.accept() try: while True: data = await ws.receive() await ws.send(data) except WebSocketClosed as e: # handle closed ... finally: with contextlib.suppress(Exception): await websocket.close() # do some cleanup if isinstance((driver := get_driver()), ASGIMixin): driver.setup_websocket_server( WebSocketServerSetup( path=URL(\\\"/ws\\\"), name=\\\"ws\\\", handle_func=ws_handler, ) )\",\"对于 WebSocket 的详细信息，可以参考 API 文档。\"]},\"1140\":{\"h\":\"使用 ASGI 应用添加路由\"},\"1141\":{\"h\":\"获取 ASGI 应用\",\"t\":[\"NoneBot 服务端类型的驱动器具有两个属性 server_app 和 asgi，分别对应驱动框架应用和 ASGI 应用。通常情况下，这两个应用是同一个对象。我们可以通过 get_app() 方法快速获取：\",\"import nonebot app = nonebot.get_app() asgi = nonebot.get_asgi()\"]},\"1142\":{\"h\":\"添加路由规则\",\"t\":[\"在获取到了 ASGI 应用后，我们就可以直接使用 ASGI 应用框架提供的功能来添加路由规则了。这里我们以 FastAPI 为例，演示如何添加路由规则。\",\"在下面的代码中，我们添加了一个 GET 类型的 /api 路由，具体方法参考 FastAPI 文档。\",\"import nonebot from fastapi import FastAPI app: FastAPI = nonebot.get_app() @app.get(\\\"/api\\\") async def custom_api(): return {\\\"message\\\": \\\"Hello, world!\\\"}\"]},\"1143\":{\"h\":\"钩子函数\",\"t\":[\"钩子编程（hooking），也称作“挂钩”，是计算机程序设计术语，指通过拦截软件模块间的函数调用、消息传递、事件传递来修改或扩展操作系统、应用程序或其他软件组件的行为的各种技术。处理被拦截的函数调用、事件、消息的代码，被称为钩子（hook）。\",\"在 NoneBot 中有一系列预定义的钩子函数，可以分为两类：全局钩子函数和事件处理钩子函数，这些钩子函数可以用装饰器的形式来使用。\"]},\"1144\":{\"h\":\"全局钩子函数\",\"t\":[\"全局钩子函数是指 NoneBot 针对其本身运行过程的钩子函数。\",\"这些钩子函数是由驱动器来运行的，故需要先获得全局驱动器。\"]},\"1145\":{\"h\":\"启动准备\",\"t\":[\"这个钩子函数会在 NoneBot 启动时运行。很多时候，我们并不希望在模块被导入时就执行一些耗时操作，如：连接数据库，这时候我们可以在这个钩子函数中进行这些操作。\",\"from nonebot import get_driver driver = get_driver() @driver.on_startup async def do_something(): pass\"]},\"1146\":{\"h\":\"终止处理\",\"t\":[\"这个钩子函数会在 NoneBot 终止时运行。我们可以在这个钩子函数中进行一些清理工作，如：关闭数据库连接。\",\"from nonebot import get_driver driver = get_driver() @driver.on_shutdown async def do_something(): pass\"]},\"1147\":{\"h\":\"Bot 连接处理\",\"t\":[\"这个钩子函数会在任何协议适配器连接 Bot 对象至 NoneBot 时运行。支持依赖注入，可以直接注入 Bot 对象。\",\"from nonebot import get_driver driver = get_driver() @driver.on_bot_connect async def do_something(bot: Bot): pass\"]},\"1148\":{\"h\":\"Bot 断开处理\",\"t\":[\"这个钩子函数会在 Bot 断开与 NoneBot 的连接时运行。支持依赖注入，可以直接注入 Bot 对象。\",\"from nonebot import get_driver driver = get_driver() @driver.on_bot_disconnect async def do_something(bot: Bot): pass\"]},\"1149\":{\"h\":\"事件处理钩子函数\",\"t\":[\"这些钩子函数指的是影响 NoneBot 进行事件处理的函数, 这些函数可以跟普通的事件处理函数一样接受相应的参数。\"]},\"1150\":{\"h\":\"事件预处理\",\"t\":[\"这个钩子函数会在 NoneBot 接收到新的事件时运行。支持依赖注入，可以注入 Bot 对象、事件、会话状态。在这个钩子函数内抛出 nonebot.exception.IgnoredException 会使 NoneBot 忽略该事件。\",\"from nonebot.exception import IgnoredException from nonebot.message import event_preprocessor @event_preprocessor async def do_something(event: Event): if not event.is_tome(): raise IgnoredException(\\\"some reason\\\")\"]},\"1151\":{\"h\":\"事件后处理\",\"t\":[\"这个钩子函数会在 NoneBot 处理事件完成后运行。支持依赖注入，可以注入 Bot 对象、事件、会话状态。\",\"from nonebot.message import event_postprocessor @event_postprocessor async def do_something(event: Event): pass\"]},\"1152\":{\"h\":\"运行预处理\",\"t\":[\"这个钩子函数会在 NoneBot 运行事件响应器前运行。支持依赖注入，可以注入 Bot 对象、事件、事件响应器、会话状态。在这个钩子函数内抛出 nonebot.exception.IgnoredException 也会使 NoneBot 忽略本次运行。\",\"from nonebot.message import run_preprocessor from nonebot.exception import IgnoredException @run_preprocessor async def do_something(event: Event, matcher: Matcher): if not event.is_tome(): raise IgnoredException(\\\"some reason\\\")\"]},\"1153\":{\"h\":\"运行后处理\",\"t\":[\"这个钩子函数会在 NoneBot 运行事件响应器后运行。支持依赖注入，可以注入 Bot 对象、事件、事件响应器、会话状态、运行中产生的异常。\",\"from nonebot.message import run_postprocessor @run_postprocessor async def do_something(event: Event, matcher: Matcher, exception: Optional[Exception]): pass\"]},\"1154\":{\"h\":\"平台接口调用钩子\",\"t\":[\"这个钩子函数会在 Bot 对象调用平台接口时运行。在这个钩子函数中，我们可以通过引起 MockApiException 异常来阻止 Bot 对象调用平台接口并返回指定的结果。\",\"from nonebot.adapters import Bot from nonebot.exception import MockApiException @Bot.on_calling_api async def handle_api_call(bot: Bot, api: str, data: Dict[str, Any]): if api == \\\"send_msg\\\": raise MockApiException(result={\\\"message_id\\\": 123})\"]},\"1155\":{\"h\":\"平台接口调用后钩子\",\"t\":[\"这个钩子函数会在 Bot 对象调用平台接口后运行。在这个钩子函数中，我们可以通过引起 MockApiException 异常来忽略平台接口返回的结果并返回指定的结果。\",\"from nonebot.adapters import Bot from nonebot.exception import MockApiException @Bot.on_called_api async def handle_api_result( bot: Bot, exception: Optional[Exception], api: str, data: Dict[str, Any], result: Any ): if not exception and api == \\\"send_msg\\\": raise MockApiException(result={**result, \\\"message_id\\\": 123})\"]},\"1156\":{\"h\":\"会话更新\",\"t\":[\"在 NoneBot 中，在某个事件响应器对事件响应后，即是进入了会话状态，会话状态会持续到整个事件响应流程结束。会话过程中，机器人可以与用户进行多次交互。每次需要等待用户事件时，NoneBot 将会复制一个新的临时事件响应器，并更新该事件响应器使其响应当前会话主体的消息，这个过程称为会话更新。\",\"会话更新分为两部分：更新事件响应器类型和更新事件触发权限。\"]},\"1157\":{\"h\":\"更新事件响应器类型\",\"t\":[\"通常情况下，与机器人用户进行的会话都是通过消息事件进行的，因此会话更新后的默认响应事件类型为 message。如果希望接收一个特定类型的消息，比如 notice 等，我们需要自定义响应事件类型更新函数。响应事件类型更新函数是一个 Dependent，可以使用依赖注入。\",\"foo = on_message() @foo.type_updater async def _() -> str: return \\\"notice\\\"\",\"在注册了上述响应事件类型更新函数后，当我们需要等待用户事件时，将只会响应 notice 类型的事件。如果希望在会话过程中的不同阶段响应不同类型的事件，我们就需要使用更复杂的逻辑来更新响应事件类型（如：根据会话状态），这里将不再展示。\"]},\"1158\":{\"h\":\"更新事件触发权限\",\"t\":[\"会话通常是由机器人与用户进行的一对一交互，因此会话更新后的默认触发权限为当前事件的会话 ID。这个会话 ID 由协议适配器生成，通常由用户 ID 和群 ID 等组成。如果希望实现更复杂的会话功能（如：多用户同时参与的会话），我们需要自定义触发权限更新函数。触发权限更新函数是一个 Dependent，可以使用依赖注入。\",\"from nonebot.permission import User foo = on_message() @foo.permission_updater async def _(event: Event, matcher: Matcher) -> Permission: return Permission(User.from_event(event, perm=matcher.permission))\",\"上述权限更新函数是默认的权限更新函数，它将会话的触发权限更新为当前事件的会话 ID。如果我们希望响应多个用户的消息，我们可以如下修改：\",\"from nonebot.permission import USER foo = on_message() @foo.permission_updater async def _(matcher: Matcher) -> Permission: return USER(\\\"session1\\\", \\\"session2\\\", perm=matcher.permission)\",\"请注意，此处为全大写字母的 USER 权限，它可以匹配多个会话 ID。通过这种方式，我们可以实现多用户同时参与的会话。\",\"我们已经了解了如何控制会话的更新，相信你已经能够实现更复杂的会话功能了，例如多人小游戏等等。欢迎将你的作品分享到插件商店。\"]},\"1159\":{\"h\":\"nonebot.compat\",\"t\":[\"本模块为 Pydantic 版本兼容层模块\",\"为兼容 Pydantic V1 与 V2 版本，定义了一系列兼容函数与类供使用。\"]},\"1160\":{\"h\":\"\",\"t\":[\"类型: untyped\",\"说明: Alias of Ellipsis for compatibility with pydantic v1\"]},\"1161\":{\"h\":\"\",\"t\":[\"说明: Pydantic Undefined object\"]},\"1162\":{\"h\":\"\",\"t\":[\"说明: Pydantic Undefined type\"]},\"1163\":{\"h\":\"\",\"t\":[\"类型: untyped\",\"说明: Default config for validations\"]},\"1164\":{\"h\":\"\",\"t\":[\"说明: FieldInfo class with extra property for compatibility with pydantic v1\",\"参数\",\"default (Any)\",\"**kwargs (Any)\"]},\"1165\":{\"h\":\"\",\"t\":[\"类型: dict[str, Any]\",\"说明\",\"Extra data that is not part of the standard pydantic fields.\",\"For compatibility with pydantic v1.\"]},\"1166\":{\"h\":\"\",\"t\":[\"说明: ModelField class for compatibility with pydantic v1\",\"参数\",\"auto\"]},\"1167\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明: The name of the field.\"]},\"1168\":{\"h\":\"\",\"t\":[\"类型: Any\",\"说明: The annotation of the field.\"]},\"1169\":{\"h\":\"\",\"t\":[\"类型: FieldInfo\",\"说明: The FieldInfo of the field.\"]},\"1170\":{\"h\":\"\",\"t\":[\"说明: Construct a ModelField from given infos.\",\"参数\",\"name (str)\",\"annotation (Any)\",\"field_info (FieldInfo | None)\",\"返回\",\"Self\"]},\"1171\":{\"h\":\"\",\"t\":[\"说明: Get the default value of the field.\",\"参数\",\"empty\",\"返回\",\"Any\"]},\"1172\":{\"h\":\"\",\"t\":[\"说明: Validate the value pass to the field.\",\"参数\",\"value (Any)\",\"返回\",\"Any\"]},\"1173\":{\"h\":\"\",\"t\":[\"说明: Get FieldInfo init kwargs from a FieldInfo instance.\",\"参数\",\"field_info (BaseFieldInfo)\",\"返回\",\"dict[str, Any]\"]},\"1174\":{\"h\":\"\",\"t\":[\"说明: Get field list of a model.\",\"参数\",\"model (type[BaseModel])\",\"返回\",\"list[ModelField]\"]},\"1175\":{\"h\":\"\",\"t\":[\"说明: Get config of a model.\",\"参数\",\"model (type[BaseModel])\",\"返回\",\"Any\"]},\"1176\":{\"h\":\"\",\"t\":[\"参数\",\"model (BaseModel)\",\"include (set[str] | None)\",\"exclude (set[str] | None)\",\"by_alias (bool)\",\"exclude_unset (bool)\",\"exclude_defaults (bool)\",\"exclude_none (bool)\",\"返回\",\"dict[str, Any]\"]},\"1177\":{\"h\":\"\",\"t\":[\"说明: Validate data with given type.\",\"参数\",\"type_ (type[T])\",\"data (Any)\",\"返回\",\"T\"]},\"1178\":{\"h\":\"\",\"t\":[\"说明: Validate JSON with given type.\",\"参数\",\"type_ (type[T])\",\"data (str | bytes)\",\"返回\",\"T\"]},\"1179\":{\"h\":\"\",\"t\":[\"说明: Use pydantic v1 like validator generator in pydantic v2\",\"参数\",\"class_ (type[CVC])\",\"返回\",\"type[CVC]\"]},\"1180\":{\"h\":\"nonebot.config\",\"t\":[\"本模块定义了 NoneBot 本身运行所需的配置项。\",\"NoneBot 使用 pydantic 以及python-dotenv 来读取配置。\",\"配置项需符合特殊格式或 json 序列化格式 详情见 pydantic Field Type 文档。\"]},\"1181\":{\"h\":\"\",\"t\":[\"说明\",\"运行环境配置。大小写不敏感。\",\"将会从 环境变量 > dotenv 配置文件 的优先级读取环境信息。\",\"参数\",\"_env_file (DOTENV_TYPE | None)\",\"_env_file_encoding (str | None)\",\"_env_nested_delimiter (str | None)\",\"**values (Any)\"]},\"1182\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明\",\"当前环境名。\",\"NoneBot 将从 .env.{environment} 文件中加载配置。\"]},\"1183\":{\"h\":\"\",\"t\":[\"说明\",\"NoneBot 主要配置。大小写不敏感。\",\"除了 NoneBot 的配置项外，还可以自行添加配置项到 .env.{environment} 文件中。 这些配置将会在 json 反序列化后一起带入 Config 类中。\",\"配置方法参考: 配置\",\"参数\",\"_env_file (DOTENV_TYPE | None)\",\"_env_file_encoding (str | None)\",\"_env_nested_delimiter (str | None)\",\"**values (Any)\"]},\"1184\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明\",\"NoneBot 运行所使用的 Driver 。继承自 Driver 。\",\"配置格式为 <module>[:<Driver>][+<module>[:<Mixin>]]*。\",\"~ 为 nonebot.drivers. 的缩写。\",\"配置方法参考: 配置驱动器\"]},\"1185\":{\"h\":\"\",\"t\":[\"类型: IPvAnyAddress\",\"说明: NoneBot ReverseDriver 服务端监听的 IP/主机名。\"]},\"1186\":{\"h\":\"\",\"t\":[\"类型: int\",\"说明: NoneBot ReverseDriver 服务端监听的端口。\"]},\"1187\":{\"h\":\"\",\"t\":[\"类型: int | str\",\"说明\",\"NoneBot 日志输出等级，可以为 int 类型等级或等级名称。\",\"参考 记录日志，loguru 日志等级。\",\"提示\",\"日志等级名称应为大写，如 INFO。\",\"用法\",\"LOG_LEVEL=25 LOG_LEVEL=INFO\"]},\"1188\":{\"h\":\"\",\"t\":[\"类型: float | None\",\"说明: API 请求超时时间，单位: 秒。\"]},\"1189\":{\"h\":\"\",\"t\":[\"类型: set[str]\",\"说明: 机器人超级用户。\",\"用法\",\"SUPERUSERS=[\\\"12345789\\\"]\"]},\"1190\":{\"h\":\"\",\"t\":[\"类型: set[str]\",\"说明: 机器人昵称。\"]},\"1191\":{\"h\":\"\",\"t\":[\"类型: set[str]\",\"说明\",\"命令的起始标记，用于判断一条消息是不是命令。\",\"参考命令响应规则。\",\"用法\",\"COMMAND_START=[\\\"/\\\", \\\"\\\"]\"]},\"1192\":{\"h\":\"\",\"t\":[\"类型: set[str]\",\"说明\",\"命令的分隔标记，用于将文本形式的命令切分为元组（实际的命令名）。\",\"参考命令响应规则。\",\"用法\",\"COMMAND_SEP=[\\\".\\\"]\"]},\"1193\":{\"h\":\"\",\"t\":[\"类型: timedelta\",\"说明: 等待用户回复的超时时间。\",\"用法\",\"SESSION_EXPIRE_TIMEOUT=[-][DD]D[,][HH:MM:]SS[.ffffff] SESSION_EXPIRE_TIMEOUT=[±]P[DD]DT[HH]H[MM]M[SS]S # ISO 8601\"]},\"1194\":{\"h\":\"nonebot.consts\",\"t\":[\"本模块包含了 NoneBot 事件处理过程中使用到的常量。\"]},\"1195\":{\"h\":\"\",\"t\":[\"类型: Literal['_receive_{id}']\",\"说明:receive 存储 key\"]},\"1196\":{\"h\":\"\",\"t\":[\"类型: Literal['_last_receive']\",\"说明:last_receive 存储 key\"]},\"1197\":{\"h\":\"\",\"t\":[\"类型: Literal['{key}']\",\"说明:arg 存储 key\"]},\"1198\":{\"h\":\"\",\"t\":[\"类型: Literal['_current_target']\",\"说明: 当前 reject 目标存储 key\"]},\"1199\":{\"h\":\"\",\"t\":[\"类型: Literal['_next_target']\",\"说明: 下一个 reject 目标存储 key\"]},\"1200\":{\"h\":\"\",\"t\":[\"类型: Literal['_pause_result']\",\"说明:pause prompt 发送结果存储 key\"]},\"1201\":{\"h\":\"\",\"t\":[\"类型: Literal['_reject_{key}_result']\",\"说明:reject prompt 发送结果存储 key\"]},\"1202\":{\"h\":\"\",\"t\":[\"类型: Literal['_prefix']\",\"说明: 命令前缀存储 key\"]},\"1203\":{\"h\":\"\",\"t\":[\"类型: Literal['command']\",\"说明: 命令元组存储 key\"]},\"1204\":{\"h\":\"\",\"t\":[\"类型: Literal['raw_command']\",\"说明: 命令文本存储 key\"]},\"1205\":{\"h\":\"\",\"t\":[\"类型: Literal['command_arg']\",\"说明: 命令参数存储 key\"]},\"1206\":{\"h\":\"\",\"t\":[\"类型: Literal['command_start']\",\"说明: 命令开头存储 key\"]},\"1207\":{\"h\":\"\",\"t\":[\"类型: Literal['command_whitespace']\",\"说明: 命令与参数间空白符存储 key\"]},\"1208\":{\"h\":\"\",\"t\":[\"类型: Literal['_args']\",\"说明: shell 命令 parse 后参数字典存储 key\"]},\"1209\":{\"h\":\"\",\"t\":[\"类型: Literal['_argv']\",\"说明: shell 命令原始参数列表存储 key\"]},\"1210\":{\"h\":\"\",\"t\":[\"类型: Literal['_matched']\",\"说明: 正则匹配结果存储 key\"]},\"1211\":{\"h\":\"\",\"t\":[\"类型: Literal['_startswith']\",\"说明: 响应触发前缀 key\"]},\"1212\":{\"h\":\"\",\"t\":[\"类型: Literal['_endswith']\",\"说明: 响应触发后缀 key\"]},\"1213\":{\"h\":\"\",\"t\":[\"类型: Literal['_fullmatch']\",\"说明: 响应触发完整消息 key\"]},\"1214\":{\"h\":\"\",\"t\":[\"类型: Literal['_keyword']\",\"说明: 响应触发关键字 key\"]},\"1215\":{\"h\":\"nonebot.exception\",\"t\":[\"本模块包含了所有 NoneBot 运行时可能会抛出的异常。\",\"这些异常并非所有需要用户处理，在 NoneBot 内部运行时被捕获，并进行对应操作。\",\"NoneBotException ├── ParserExit ├── ProcessException | ├── IgnoredException | ├── SkippedException | | └── TypeMisMatch | ├── MockApiException | └── StopPropagation ├── MatcherException | ├── PausedException | ├── RejectedException | └── FinishedException ├── AdapterException | ├── NoLogException | ├── ApiNotAvailable | ├── NetworkError | └── ActionFailed └── DriverException └── WebSocketClosed\"]},\"1216\":{\"h\":\"\",\"t\":[\"说明: 所有 NoneBot 发生的异常基类。\",\"参数\",\"auto\"]},\"1217\":{\"h\":\"\",\"t\":[\"说明: 处理消息失败时返回的异常。\",\"参数\",\"auto\"]},\"1218\":{\"h\":\"\",\"t\":[\"说明: 事件处理过程中发生的异常基类。\",\"参数\",\"auto\"]},\"1219\":{\"h\":\"\",\"t\":[\"说明: 指示 NoneBot 应该忽略该事件。可由 PreProcessor 抛出。\",\"参数\",\"reason: 忽略事件的原因\"]},\"1220\":{\"h\":\"\",\"t\":[\"说明\",\"指示 NoneBot 立即结束当前 Dependent 的运行。\",\"例如，可以在 Handler 中通过 Matcher.skip 抛出。\",\"参数\",\"auto\",\"用法\",\"def always_skip(): Matcher.skip() @matcher.handle() async def handler(dependency = Depends(always_skip)): # never run\"]},\"1221\":{\"h\":\"\",\"t\":[\"说明: 当前 Handler 的参数类型不匹配。\",\"参数\",\"auto\"]},\"1222\":{\"h\":\"\",\"t\":[\"说明: 指示 NoneBot 阻止本次 API 调用或修改本次调用返回值，并返回自定义内容。 可由 api hook 抛出。\",\"参数\",\"result: 返回的内容\"]},\"1223\":{\"h\":\"\",\"t\":[\"说明\",\"指示 NoneBot 终止事件向下层传播。\",\"在 Matcher.block 为 True 或使用 Matcher.stop_propagation 方法时抛出。\",\"参数\",\"auto\",\"用法\",\"matcher = on_notice(block=True) # 或者 @matcher.handle() async def handler(matcher: Matcher): matcher.stop_propagation()\"]},\"1224\":{\"h\":\"\",\"t\":[\"说明: 所有 Matcher 发生的异常基类。\",\"参数\",\"auto\"]},\"1225\":{\"h\":\"\",\"t\":[\"说明\",\"指示 NoneBot 结束当前 Handler 并等待下一条消息后继续下一个 Handler。 可用于用户输入新信息。\",\"可以在 Handler 中通过 Matcher.pause 抛出。\",\"参数\",\"auto\",\"用法\",\"@matcher.handle() async def handler(): await matcher.pause(\\\"some message\\\")\"]},\"1226\":{\"h\":\"\",\"t\":[\"说明\",\"指示 NoneBot 结束当前 Handler 并等待下一条消息后重新运行当前 Handler。 可用于用户重新输入。\",\"可以在 Handler 中通过 Matcher.reject 抛出。\",\"参数\",\"auto\",\"用法\",\"@matcher.handle() async def handler(): await matcher.reject(\\\"some message\\\")\"]},\"1227\":{\"h\":\"\",\"t\":[\"说明\",\"指示 NoneBot 结束当前 Handler 且后续 Handler 不再被运行。可用于结束用户会话。\",\"可以在 Handler 中通过 Matcher.finish 抛出。\",\"参数\",\"auto\",\"用法\",\"@matcher.handle() async def handler(): await matcher.finish(\\\"some message\\\")\"]},\"1228\":{\"h\":\"\",\"t\":[\"说明: 代表 Adapter 抛出的异常，所有的 Adapter 都要在内部继承自这个 Exception。\",\"参数\",\"adapter_name: 标识 adapter\"]},\"1229\":{\"h\":\"\",\"t\":[\"说明\",\"指示 NoneBot 对当前 Event 进行处理但不显示 Log 信息。\",\"可在 Event.get_log_string 时抛出\",\"参数\",\"auto\"]},\"1230\":{\"h\":\"\",\"t\":[\"说明: 在 API 连接不可用时抛出。\",\"参数\",\"auto\"]},\"1231\":{\"h\":\"\",\"t\":[\"说明: 在网络出现问题时抛出， 如: API 请求地址不正确, API 请求无返回或返回状态非正常等。\",\"参数\",\"auto\"]},\"1232\":{\"h\":\"\",\"t\":[\"说明: API 请求成功返回数据，但 API 操作失败。\",\"参数\",\"auto\"]},\"1233\":{\"h\":\"\",\"t\":[\"说明:Driver 抛出的异常基类。\",\"参数\",\"auto\"]},\"1234\":{\"h\":\"\",\"t\":[\"说明: WebSocket 连接已关闭。\",\"参数\",\"auto\"]},\"1235\":{\"h\":\"nonebot\",\"t\":[\"本模块主要定义了 NoneBot 启动所需函数，供 bot 入口文件调用。\"]},\"1236\":{\"h\":\"快捷导入\",\"t\":[\"为方便使用，本模块从子模块导入了部分内容，以下内容可以直接通过本模块导入:\",\"on => on\",\"on_metaevent => on_metaevent\",\"on_message => on_message\",\"on_notice => on_notice\",\"on_request => on_request\",\"on_startswith => on_startswith\",\"on_endswith => on_endswith\",\"on_fullmatch => on_fullmatch\",\"on_keyword => on_keyword\",\"on_command => on_command\",\"on_shell_command => on_shell_command\",\"on_regex => on_regex\",\"on_type => on_type\",\"CommandGroup => CommandGroup\",\"Matchergroup => MatcherGroup\",\"load_plugin => load_plugin\",\"load_plugins => load_plugins\",\"load_all_plugins => load_all_plugins\",\"load_from_json => load_from_json\",\"load_from_toml => load_from_toml\",\"load_builtin_plugin =>load_builtin_plugin\",\"load_builtin_plugins =>load_builtin_plugins\",\"get_plugin => get_plugin\",\"get_plugin_by_module_name =>get_plugin_by_module_name\",\"get_loaded_plugins =>get_loaded_plugins\",\"get_available_plugin_names =>get_available_plugin_names\",\"get_plugin_config => get_plugin_config\",\"require => require\"]},\"1237\":{\"h\":\"\",\"t\":[\"说明\",\"获取全局 Driver 实例。\",\"可用于在计划任务的回调等情形中获取当前 Driver 实例。\",\"参数\",\"empty\",\"返回\",\"Driver: 全局 Driver 对象\",\"异常\",\"ValueError: 全局 Driver 对象尚未初始化 (nonebot.init 尚未调用)\",\"用法\",\"driver = nonebot.get_driver()\"]},\"1238\":{\"h\":\"\",\"t\":[\"说明: 获取已注册的 Adapter 实例。\",\"重载\",\"1.(name) -> Adapter\",\"参数\",\"name (str): 适配器名称\",\"返回\",\"Adapter: 指定名称的 Adapter 对象\",\"2.(name) -> A\",\"参数\",\"name (type[A]): 适配器类型\",\"返回\",\"A: 指定类型的 Adapter 对象\",\"异常\",\"ValueError: 指定的 Adapter 未注册\",\"ValueError: 全局 Driver 对象尚未初始化 (nonebot.init 尚未调用)\",\"用法\",\"from nonebot.adapters.console import Adapter adapter = nonebot.get_adapter(Adapter)\"]},\"1239\":{\"h\":\"\",\"t\":[\"说明: 获取所有已注册的 Adapter 实例。\",\"参数\",\"empty\",\"返回\",\"dict[str, Adapter]: 所有 Adapter 实例字典\",\"异常\",\"ValueError: 全局 Driver 对象尚未初始化 (nonebot.init 尚未调用)\",\"用法\",\"adapters = nonebot.get_adapters()\"]},\"1240\":{\"h\":\"\",\"t\":[\"说明: 获取全局 ASGIMixin 对应的 Server App 对象。\",\"参数\",\"empty\",\"返回\",\"Any: Server App 对象\",\"异常\",\"AssertionError: 全局 Driver 对象不是 ASGIMixin 类型\",\"ValueError: 全局 Driver 对象尚未初始化 (nonebot.init 尚未调用)\",\"用法\",\"app = nonebot.get_app()\"]},\"1241\":{\"h\":\"\",\"t\":[\"说明: 获取全局 ASGIMixin 对应的 ASGI 对象。\",\"参数\",\"empty\",\"返回\",\"Any: ASGI 对象\",\"异常\",\"AssertionError: 全局 Driver 对象不是 ASGIMixin 类型\",\"ValueError: 全局 Driver 对象尚未初始化 (nonebot.init 尚未调用)\",\"用法\",\"asgi = nonebot.get_asgi()\"]},\"1242\":{\"h\":\"\",\"t\":[\"说明\",\"获取一个连接到 NoneBot 的 Bot 对象。\",\"当提供 self_id 时，此函数是 get_bots()[self_id] 的简写； 当不提供时，返回一个 Bot。\",\"参数\",\"self_id (str | None): 用来识别 Bot 的 Bot.self_id 属性\",\"返回\",\"Bot: Bot 对象\",\"异常\",\"KeyError: 对应 self_id 的 Bot 不存在\",\"ValueError: 没有传入 self_id 且没有 Bot 可用\",\"ValueError: 全局 Driver 对象尚未初始化 (nonebot.init 尚未调用)\",\"用法\",\"assert nonebot.get_bot(\\\"12345\\\") == nonebot.get_bots()[\\\"12345\\\"] another_unspecified_bot = nonebot.get_bot()\"]},\"1243\":{\"h\":\"\",\"t\":[\"说明: 获取所有连接到 NoneBot 的 Bot 对象。\",\"参数\",\"empty\",\"返回\",\"dict[str, Bot]: 一个以 Bot.self_id 为键\",\"Bot 对象为值的字典\",\"异常\",\"ValueError: 全局 Driver 对象尚未初始化 (nonebot.init 尚未调用)\",\"用法\",\"bots = nonebot.get_bots()\"]},\"1244\":{\"h\":\"\",\"t\":[\"说明\",\"初始化 NoneBot 以及 全局 Driver 对象。\",\"NoneBot 将会从 .env 文件中读取环境信息，并使用相应的 env 文件配置。\",\"也可以传入自定义的 _env_file 来指定 NoneBot 从该文件读取配置。\",\"参数\",\"_env_file (DOTENV_TYPE | None): 配置文件名，默认从 .env.{env_name} 中读取配置\",\"**kwargs (Any): 任意变量，将会存储到 Driver.config 对象里\",\"返回\",\"None\",\"用法\",\"nonebot.init(database=Database(...))\"]},\"1245\":{\"h\":\"\",\"t\":[\"说明: 启动 NoneBot，即运行全局 Driver 对象。\",\"参数\",\"*args (Any): 传入 Driver.run 的位置参数\",\"**kwargs (Any): 传入 Driver.run 的命名参数\",\"返回\",\"None\",\"用法\",\"nonebot.run(host=\\\"127.0.0.1\\\", port=8080)\"]},\"1246\":{\"h\":\"nonebot.log\",\"t\":[\"本模块定义了 NoneBot 的日志记录 Logger。\",\"NoneBot 使用 loguru 来记录日志信息。\",\"自定义 logger 请参考 自定义日志 以及 loguru 文档。\"]},\"1247\":{\"h\":\"\",\"t\":[\"类型: Logger\",\"说明\",\"NoneBot 日志记录器对象。\",\"默认信息:\",\"格式: [%(asctime)s %(name)s] %(levelname)s: %(message)s\",\"等级: INFO ，根据 config.log_level 配置改变\",\"输出: 输出至 stdout\",\"用法\",\"from nonebot.log import logger\"]},\"1248\":{\"h\":\"\",\"t\":[\"说明: logging 与 loguru 之间的桥梁，将 logging 的日志转发到 loguru。\",\"参数\",\"auto\"]},\"1249\":{\"h\":\"\",\"t\":[\"参数\",\"record (logging.LogRecord)\",\"返回\",\"untyped\"]},\"1250\":{\"h\":\"\",\"t\":[\"说明: 默认的日志过滤器，根据 config.log_level 配置改变日志等级。\",\"参数\",\"record (Record)\",\"返回\",\"untyped\"]},\"1251\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明: 默认日志格式\"]},\"1252\":{\"h\":\"nonebot.matcher\",\"t\":[\"本模块实现事件响应器的创建与运行，并提供一些快捷方法来帮助用户更好的与机器人进行对话。\"]},\"1253\":{\"h\":\"\",\"t\":[\"类型: untyped\",\"说明: 默认存储器类型\"]},\"1254\":{\"h\":\"\",\"t\":[\"说明: 事件响应器类\",\"参数\",\"empty\"]},\"1255\":{\"h\":\"\",\"t\":[\"类型: ClassVar[str]\",\"说明: 事件响应器类型\"]},\"1256\":{\"h\":\"\",\"t\":[\"类型: ClassVar[Rule]\",\"说明: 事件响应器匹配规则\"]},\"1257\":{\"h\":\"\",\"t\":[\"类型: ClassVar[Permission]\",\"说明: 事件响应器触发权限\"]},\"1258\":{\"h\":\"\",\"t\":[\"类型: ClassVar[list[Dependent[Any]]]\",\"说明: 事件响应器拥有的事件处理函数列表\"]},\"1259\":{\"h\":\"\",\"t\":[\"类型: ClassVar[int]\",\"说明: 事件响应器优先级\"]},\"1260\":{\"h\":\"\",\"t\":[\"类型: bool\",\"说明: 事件响应器是否阻止事件传播\"]},\"1261\":{\"h\":\"\",\"t\":[\"类型: ClassVar[bool]\",\"说明: 事件响应器是否为临时\"]},\"1262\":{\"h\":\"\",\"t\":[\"类型: ClassVar[datetime | None]\",\"说明: 事件响应器过期时间点\"]},\"1263\":{\"h\":\"\",\"t\":[\"说明: 创建一个新的事件响应器，并存储至 matchers <#matchers>_\",\"参数\",\"type_ (str): 事件响应器类型，与 event.get_type() 一致时触发，空字符串表示任意\",\"rule (Rule | None): 匹配规则\",\"permission (Permission | None): 权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器，即触发一次后删除\",\"priority (int): 响应优先级\",\"block (bool): 是否阻止事件向更低优先级的响应器传播\",\"plugin (Plugin | None): Deprecated. 事件响应器所在插件\",\"module (ModuleType | None): Deprecated. 事件响应器所在模块\",\"source (MatcherSource | None): 事件响应器源代码上下文信息\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"default_state (T_State | None): 默认状态 state\",\"default_type_updater (T_TypeUpdater | Dependent[str] | None): 默认事件类型更新函数\",\"default_permission_updater (T_PermissionUpdater | Dependent[Permission] | None): 默认会话权限更新函数\",\"返回\",\"type[Matcher]: 新的事件响应器类\"]},\"1264\":{\"h\":\"\",\"t\":[\"说明: 销毁当前的事件响应器\",\"参数\",\"empty\",\"返回\",\"None\"]},\"1265\":{\"h\":\"\",\"t\":[\"说明: 检查是否满足触发权限\",\"参数\",\"bot (Bot): Bot 对象\",\"event (Event): 上报事件\",\"stack (AsyncExitStack | None): 异步上下文栈\",\"dependency_cache (T_DependencyCache | None): 依赖缓存\",\"返回\",\"bool: 是否满足权限\"]},\"1266\":{\"h\":\"\",\"t\":[\"说明: 检查是否满足匹配规则\",\"参数\",\"bot (Bot): Bot 对象\",\"event (Event): 上报事件\",\"state (T_State): 当前状态\",\"stack (AsyncExitStack | None): 异步上下文栈\",\"dependency_cache (T_DependencyCache | None): 依赖缓存\",\"返回\",\"bool: 是否满足匹配规则\"]},\"1267\":{\"h\":\"\",\"t\":[\"说明: 装饰一个函数来更改当前事件响应器的默认响应事件类型更新函数\",\"参数\",\"func (T_TypeUpdater): 响应事件类型更新函数\",\"返回\",\"T_TypeUpdater\"]},\"1268\":{\"h\":\"\",\"t\":[\"说明: 装饰一个函数来更改当前事件响应器的默认会话权限更新函数\",\"参数\",\"func (T_PermissionUpdater): 会话权限更新函数\",\"返回\",\"T_PermissionUpdater\"]},\"1269\":{\"h\":\"\",\"t\":[\"参数\",\"handler (T_Handler)\",\"parameterless (Iterable[Any] | None)\",\"返回\"]},\"1270\":{\"h\":\"\",\"t\":[\"说明: 装饰一个函数来向事件响应器直接添加一个处理函数\",\"参数\",\"parameterless (Iterable[Any] | None): 非参数类型依赖列表\",\"返回\",\"(T_Handler) -> T_Handler\"]},\"1271\":{\"h\":\"\",\"t\":[\"说明: 装饰一个函数来指示 NoneBot 在接收用户新的一条消息后继续运行该函数\",\"参数\",\"id (str): 消息 ID\",\"parameterless (Iterable[Any] | None): 非参数类型依赖列表\",\"返回\",\"(T_Handler) -> T_Handler\"]},\"1272\":{\"h\":\"\",\"t\":[\"说明\",\"装饰一个函数来指示 NoneBot 获取一个参数 key\",\"当要获取的 key 不存在时接收用户新的一条消息再运行该函数， 如果 key 已存在则直接继续运行\",\"参数\",\"key (str): 参数名\",\"prompt (str | Message | MessageSegment | MessageTemplate | None): 在参数不存在时向用户发送的消息\",\"parameterless (Iterable[Any] | None): 非参数类型依赖列表\",\"返回\",\"(T_Handler) -> T_Handler\"]},\"1273\":{\"h\":\"\",\"t\":[\"说明: 发送一条消息给当前交互用户\",\"参数\",\"message (str | Message | MessageSegment | MessageTemplate): 消息内容\",\"**kwargs (Any): Bot.send 的参数， 请参考对应 adapter 的 bot 对象 api\",\"返回\",\"Any\"]},\"1274\":{\"h\":\"\",\"t\":[\"说明: 发送一条消息给当前交互用户并结束当前事件响应器\",\"参数\",\"message (str | Message | MessageSegment | MessageTemplate | None): 消息内容\",\"**kwargs: Bot.send 的参数， 请参考对应 adapter 的 bot 对象 api\",\"返回\",\"NoReturn\"]},\"1275\":{\"h\":\"\",\"t\":[\"说明: 发送一条消息给当前交互用户并暂停事件响应器，在接收用户新的一条消息后继续下一个处理函数\",\"参数\",\"prompt (str | Message | MessageSegment | MessageTemplate | None): 消息内容\",\"**kwargs: Bot.send 的参数， 请参考对应 adapter 的 bot 对象 api\",\"返回\",\"NoReturn\"]},\"1276\":{\"h\":\"\",\"t\":[\"说明: 最近使用 got / receive 接收的消息不符合预期， 发送一条消息给当前交互用户并将当前事件处理流程中断在当前位置，在接收用户新的一个事件后从头开始执行当前处理函数\",\"参数\",\"prompt (str | Message | MessageSegment | MessageTemplate | None): 消息内容\",\"**kwargs: Bot.send 的参数， 请参考对应 adapter 的 bot 对象 api\",\"返回\",\"NoReturn\"]},\"1277\":{\"h\":\"\",\"t\":[\"说明: 最近使用 got 接收的消息不符合预期， 发送一条消息给当前交互用户并将当前事件处理流程中断在当前位置，在接收用户新的一条消息后从头开始执行当前处理函数\",\"参数\",\"key (str): 参数名\",\"prompt (str | Message | MessageSegment | MessageTemplate | None): 消息内容\",\"**kwargs: Bot.send 的参数， 请参考对应 adapter 的 bot 对象 api\",\"返回\",\"NoReturn\"]},\"1278\":{\"h\":\"\",\"t\":[\"说明: 最近使用 receive 接收的消息不符合预期， 发送一条消息给当前交互用户并将当前事件处理流程中断在当前位置，在接收用户新的一个事件后从头开始执行当前处理函数\",\"参数\",\"id (str): 消息 id\",\"prompt (str | Message | MessageSegment | MessageTemplate | None): 消息内容\",\"**kwargs: Bot.send 的参数， 请参考对应 adapter 的 bot 对象 api\",\"返回\",\"NoReturn\"]},\"1279\":{\"h\":\"\",\"t\":[\"说明\",\"跳过当前事件处理函数，继续下一个处理函数\",\"通常在事件处理函数的依赖中使用。\",\"参数\",\"empty\",\"返回\",\"NoReturn\"]},\"1280\":{\"h\":\"\",\"t\":[\"说明\",\"获取一个 receive 事件\",\"如果没有找到对应的事件，返回 default 值\",\"重载\",\"1.(id) -> Event | None\",\"参数\",\"id (str)\",\"返回\",\"Event | None\",\"2.(id, default) -> Event | T\",\"参数\",\"id (str)\",\"default (T)\",\"返回\",\"Event | T\"]},\"1281\":{\"h\":\"\",\"t\":[\"说明: 设置一个 receive 事件\",\"参数\",\"id (str)\",\"event (Event)\",\"返回\",\"None\"]},\"1282\":{\"h\":\"\",\"t\":[\"说明\",\"获取最近一次 receive 事件\",\"如果没有事件，返回 default 值\",\"重载\",\"1.() -> Event | None\",\"参数\",\"empty\",\"返回\",\"Event | None\",\"2.(default) -> Event | T\",\"参数\",\"default (T)\",\"返回\",\"Event | T\"]},\"1283\":{\"h\":\"\",\"t\":[\"说明\",\"获取一个 got 消息\",\"如果没有找到对应的消息，返回 default 值\",\"重载\",\"1.(key) -> Message | None\",\"参数\",\"key (str)\",\"返回\",\"Message | None\",\"2.(key, default) -> Message | T\",\"参数\",\"key (str)\",\"default (T)\",\"返回\",\"Message | T\"]},\"1284\":{\"h\":\"\",\"t\":[\"说明: 设置一个 got 消息\",\"参数\",\"key (str)\",\"message (Message)\",\"返回\",\"None\"]},\"1285\":{\"h\":\"\",\"t\":[\"参数\",\"target (str)\",\"cache (bool)\",\"返回\",\"None\"]},\"1286\":{\"h\":\"\",\"t\":[\"重载\",\"1.() -> str | None\",\"参数\",\"empty\",\"返回\",\"str | None\",\"2.(default) -> str | T\",\"参数\",\"default (T)\",\"返回\",\"str | T\"]},\"1287\":{\"h\":\"\",\"t\":[\"说明: 阻止事件传播\",\"参数\",\"empty\",\"返回\",\"untyped\"]},\"1288\":{\"h\":\"\",\"t\":[\"参数\",\"bot (Bot)\",\"event (Event)\",\"stack (AsyncExitStack | None)\",\"dependency_cache (T_DependencyCache | None)\",\"返回\",\"str\"]},\"1289\":{\"h\":\"\",\"t\":[\"参数\",\"bot (Bot)\",\"event (Event)\",\"stack (AsyncExitStack | None)\",\"dependency_cache (T_DependencyCache | None)\",\"返回\",\"Permission\"]},\"1290\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"untyped\"]},\"1291\":{\"h\":\"\",\"t\":[\"参数\",\"bot (Bot)\",\"event (Event)\",\"返回\",\"untyped\"]},\"1292\":{\"h\":\"\",\"t\":[\"参数\",\"bot (Bot)\",\"event (Event)\",\"state (T_State)\",\"stack (AsyncExitStack | None)\",\"dependency_cache (T_DependencyCache | None)\",\"返回\",\"untyped\"]},\"1293\":{\"h\":\"\",\"t\":[\"参数\",\"bot (Bot)\",\"event (Event)\",\"state (T_State)\",\"stack (AsyncExitStack | None)\",\"dependency_cache (T_DependencyCache | None)\",\"返回\",\"untyped\"]},\"1294\":{\"h\":\"\",\"t\":[\"说明\",\"事件响应器管理器\",\"实现了常用字典操作，用于管理事件响应器。\",\"参数\",\"empty\"]},\"1295\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"KeysView[int]\"]},\"1296\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"ValuesView[list[type[Matcher]]]\"]},\"1297\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"ItemsView[int, list[type[Matcher]]]\"]},\"1298\":{\"h\":\"\",\"t\":[\"重载\",\"1.(key) -> list[type[Matcher]] | None\",\"参数\",\"key (int)\",\"返回\",\"list[type[Matcher]] | None\",\"2.(key, default) -> list[type[Matcher]] | T\",\"参数\",\"key (int)\",\"default (T)\",\"返回\",\"list[type[Matcher]] | T\"]},\"1299\":{\"h\":\"\",\"t\":[\"参数\",\"key (int)\",\"返回\",\"list[type[Matcher]]\"]},\"1300\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"tuple[int, list[type[Matcher]]]\"]},\"1301\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"None\"]},\"1302\":{\"h\":\"\",\"t\":[\"参数\",\"m (MutableMapping[int, list[type[Matcher]]])\",\"返回\",\"None\"]},\"1303\":{\"h\":\"\",\"t\":[\"参数\",\"key (int)\",\"default (list[type[Matcher]])\",\"返回\",\"list[type[Matcher]]\"]},\"1304\":{\"h\":\"\",\"t\":[\"说明: 设置事件响应器存储器\",\"参数\",\"provider_class (type[MatcherProvider]): 事件响应器存储器类\",\"返回\",\"None\"]},\"1305\":{\"h\":\"\",\"t\":[\"说明: 事件响应器存储器基类\",\"参数\",\"matchers (Mapping[int, list[type[Matcher]]]): 当前存储器中已有的事件响应器\"]},\"1306\":{\"h\":\"\",\"t\":[\"类型: untyped\"]},\"1307\":{\"h\":\"nonebot.message\",\"t\":[\"本模块定义了事件处理主要流程。\",\"NoneBot 内部处理并按优先级分发事件给所有事件响应器，提供了多个插槽以进行事件的预处理等。\"]},\"1308\":{\"h\":\"\",\"t\":[\"说明\",\"事件预处理。\",\"装饰一个函数，使它在每次接收到事件并分发给各响应器之前执行。\",\"参数\",\"func (T_EventPreProcessor)\",\"返回\",\"T_EventPreProcessor\"]},\"1309\":{\"h\":\"\",\"t\":[\"说明\",\"事件后处理。\",\"装饰一个函数，使它在每次接收到事件并分发给各响应器之后执行。\",\"参数\",\"func (T_EventPostProcessor)\",\"返回\",\"T_EventPostProcessor\"]},\"1310\":{\"h\":\"\",\"t\":[\"说明\",\"运行预处理。\",\"装饰一个函数，使它在每次事件响应器运行前执行。\",\"参数\",\"func (T_RunPreProcessor)\",\"返回\",\"T_RunPreProcessor\"]},\"1311\":{\"h\":\"\",\"t\":[\"说明\",\"运行后处理。\",\"装饰一个函数，使它在每次事件响应器运行后执行。\",\"参数\",\"func (T_RunPostProcessor)\",\"返回\",\"T_RunPostProcessor\"]},\"1312\":{\"h\":\"\",\"t\":[\"说明: 检查并运行事件响应器。\",\"参数\",\"Matcher (type[Matcher]): 事件响应器\",\"bot (Bot): Bot 对象\",\"event (Event): Event 对象\",\"state (T_State): 会话状态\",\"stack (AsyncExitStack | None): 异步上下文栈\",\"dependency_cache (T_DependencyCache | None): 依赖缓存\",\"返回\",\"None\"]},\"1313\":{\"h\":\"\",\"t\":[\"说明: 处理一个事件。调用该函数以实现分发事件。\",\"参数\",\"bot (Bot): Bot 对象\",\"event (Event): Event 对象\",\"返回\",\"None\",\"用法\",\"driver.task_group.start_soon(handle_event, bot, event)\"]},\"1314\":{\"h\":\"nonebot.params\",\"t\":[\"本模块定义了依赖注入的各类参数。\"]},\"1315\":{\"h\":\"\",\"t\":[\"说明: Arg 参数消息\",\"参数\",\"key (str | None)\",\"返回\",\"Any\"]},\"1316\":{\"h\":\"\",\"t\":[\"说明\",\"Arg 注入参数\",\"本注入解析事件响应器操作 got 所获取的参数。\",\"可以通过 Arg、ArgStr、ArgPlainText 等函数参数 key 指定获取的参数， 留空则会根据参数名称获取。\",\"参数\",\"*args\",\"key (str)\",\"type (Literal['message', 'str', 'plaintext', 'prompt'])\",\"**kwargs (Any)\"]},\"1317\":{\"h\":\"\",\"t\":[\"说明: Arg 参数消息纯文本\",\"参数\",\"key (str | None)\",\"返回\",\"str\"]},\"1318\":{\"h\":\"\",\"t\":[\"说明:arg prompt 发送结果\",\"参数\",\"key (str | None)\",\"返回\",\"Any\"]},\"1319\":{\"h\":\"\",\"t\":[\"说明: Arg 参数消息文本\",\"参数\",\"key (str | None)\",\"返回\",\"str\"]},\"1320\":{\"h\":\"\",\"t\":[\"说明\",\"注入参数。\",\"本注入解析所有类型为且仅为 Bot 及其子类或 None 的参数。\",\"为保证兼容性，本注入还会解析名为 bot 且没有类型注解的参数。\",\"参数\",\"*args\",\"checker (ModelField | None)\",\"**kwargs (Any)\"]},\"1321\":{\"h\":\"\",\"t\":[\"说明\",\"默认值注入参数\",\"本注入解析所有剩余未能解析且具有默认值的参数。\",\"本注入参数应该具有最低优先级，因此应该在所有其他注入参数之后使用。\",\"参数\",\"*args\",\"validate (bool)\",\"**kwargs (Any)\"]},\"1322\":{\"h\":\"\",\"t\":[\"说明\",\"子依赖注入参数。\",\"本注入解析所有子依赖注入，然后将它们的返回值作为参数值传递给父依赖。\",\"本注入应该具有最高优先级，因此应该在其他参数之前检查。\",\"参数\",\"*args\",\"dependent (Dependent[Any])\",\"use_cache (bool)\",\"**kwargs (Any)\"]},\"1323\":{\"h\":\"\",\"t\":[\"说明: 子依赖装饰器\",\"参数\",\"dependency (T_Handler | None): 依赖函数。默认为参数的类型注释。\",\"use_cache (bool): 是否使用缓存。默认为 True。\",\"validate (bool | PydanticFieldInfo): 是否使用 Pydantic 类型校验。默认为 False。\",\"返回\",\"Any\",\"用法\",\"def depend_func() -> Any: return ... def depend_gen_func(): try: yield ... finally: ... async def handler( param_name: Any = Depends(depend_func), gen: Any = Depends(depend_gen_func), ): ...\"]},\"1324\":{\"h\":\"\",\"t\":[\"说明\",\"注入参数\",\"本注入解析所有类型为且仅为 Event 及其子类或 None 的参数。\",\"为保证兼容性，本注入还会解析名为 event 且没有类型注解的参数。\",\"参数\",\"*args\",\"checker (ModelField | None)\",\"**kwargs (Any)\"]},\"1325\":{\"h\":\"\",\"t\":[\"说明\",\"的异常注入参数\",\"本注入解析所有类型为 Exception 或 None 的参数。\",\"为保证兼容性，本注入还会解析名为 exception 且没有类型注解的参数。\",\"参数\",\"*args\",\"validate (bool)\",\"**kwargs (Any)\"]},\"1326\":{\"h\":\"\",\"t\":[\"说明\",\"事件响应器实例注入参数\",\"本注入解析所有类型为且仅为 Matcher 及其子类或 None 的参数。\",\"为保证兼容性，本注入还会解析名为 matcher 且没有类型注解的参数。\",\"参数\",\"*args\",\"checker (ModelField | None)\",\"**kwargs (Any)\"]},\"1327\":{\"h\":\"\",\"t\":[\"说明\",\"事件处理状态注入参数\",\"本注入解析所有类型为 T_State 的参数。\",\"为保证兼容性，本注入还会解析名为 state 且没有类型注解的参数。\",\"参数\",\"*args\",\"validate (bool)\",\"**kwargs (Any)\"]},\"1328\":{\"h\":\"\",\"t\":[\"说明: 类型参数\",\"参数\",\"empty\",\"返回\",\"str\"]},\"1329\":{\"h\":\"\",\"t\":[\"说明: 消息参数\",\"参数\",\"empty\",\"返回\",\"Any\"]},\"1330\":{\"h\":\"\",\"t\":[\"说明: 纯文本消息参数\",\"参数\",\"empty\",\"返回\",\"str\"]},\"1331\":{\"h\":\"\",\"t\":[\"说明:to_me 参数\",\"参数\",\"empty\",\"返回\",\"bool\"]},\"1332\":{\"h\":\"\",\"t\":[\"说明: 消息命令元组\",\"参数\",\"empty\",\"返回\",\"tuple[str, ...]\"]},\"1333\":{\"h\":\"\",\"t\":[\"说明: 消息命令文本\",\"参数\",\"empty\",\"返回\",\"str\"]},\"1334\":{\"h\":\"\",\"t\":[\"说明: 消息命令参数\",\"参数\",\"empty\",\"返回\",\"Any\"]},\"1335\":{\"h\":\"\",\"t\":[\"说明: 消息命令开头\",\"参数\",\"empty\",\"返回\",\"str\"]},\"1336\":{\"h\":\"\",\"t\":[\"说明: 消息命令与参数之间的空白\",\"参数\",\"empty\",\"返回\",\"str\"]},\"1337\":{\"h\":\"\",\"t\":[\"说明: shell 命令解析后的参数字典\",\"参数\",\"empty\",\"返回\",\"Any\"]},\"1338\":{\"h\":\"\",\"t\":[\"说明: shell 命令原始参数列表\",\"参数\",\"empty\",\"返回\",\"Any\"]},\"1339\":{\"h\":\"\",\"t\":[\"说明: 正则匹配结果\",\"参数\",\"empty\",\"返回\",\"Match[str]\"]},\"1340\":{\"h\":\"\",\"t\":[\"说明: 正则匹配结果文本\",\"重载\",\"1.(group, /) -> str\",\"参数\",\"group (Literal[0])\",\"返回\",\"str\",\"2.(group, /) -> str | Any\",\"参数\",\"group (str | int)\",\"返回\",\"str | Any\",\"3.(group1, group2, /, *groups) -> tuple[str | Any, ...]\",\"参数\",\"group1 (str | int)\",\"group2 (str | int)\",\"*groups (str | int)\",\"返回\",\"tuple[str | Any, ...]\"]},\"1341\":{\"h\":\"\",\"t\":[\"说明: 正则匹配结果 group 元组\",\"参数\",\"empty\",\"返回\",\"tuple[Any, ...]\"]},\"1342\":{\"h\":\"\",\"t\":[\"说明: 正则匹配结果 group 字典\",\"参数\",\"empty\",\"返回\",\"dict[str, Any]\"]},\"1343\":{\"h\":\"\",\"t\":[\"说明: 响应触发前缀\",\"参数\",\"empty\",\"返回\",\"str\"]},\"1344\":{\"h\":\"\",\"t\":[\"说明: 响应触发后缀\",\"参数\",\"empty\",\"返回\",\"str\"]},\"1345\":{\"h\":\"\",\"t\":[\"说明: 响应触发完整消息\",\"参数\",\"empty\",\"返回\",\"str\"]},\"1346\":{\"h\":\"\",\"t\":[\"说明: 响应触发关键字\",\"参数\",\"empty\",\"返回\",\"str\"]},\"1347\":{\"h\":\"\",\"t\":[\"说明:receive 事件参数\",\"参数\",\"id (str | None)\",\"default (Any)\",\"返回\",\"Any\"]},\"1348\":{\"h\":\"\",\"t\":[\"说明:last_receive 事件参数\",\"参数\",\"default (Any)\",\"返回\",\"Any\"]},\"1349\":{\"h\":\"\",\"t\":[\"说明:receive prompt 发送结果\",\"参数\",\"id (str | None)\",\"返回\",\"Any\"]},\"1350\":{\"h\":\"\",\"t\":[\"说明:pause prompt 发送结果\",\"参数\",\"empty\",\"返回\",\"Any\"]},\"1351\":{\"h\":\"nonebot.permission\",\"t\":[\"本模块是 Matcher.permission 的类型定义。\",\"每个事件响应器 拥有一个 Permission，其中是 PermissionChecker 的集合。 只要有一个 PermissionChecker 检查结果为 True 时就会继续运行。\"]},\"1352\":{\"h\":\"\",\"t\":[\"说明\",\"匹配当前事件属于指定会话。\",\"如果 perm 中仅有 User 类型的权限检查函数，则会去除原有检查函数的会话 ID 限制。\",\"参数\",\"*users (str)\",\"perm (Permission | None): 需要同时满足的权限\",\"user: 会话白名单\",\"返回\",\"untyped\"]},\"1353\":{\"h\":\"\",\"t\":[\"说明\",\"权限类。\",\"当事件传递时，在 Matcher 运行前进行检查。\",\"参数\",\"*checkers (T_PermissionChecker | Dependent[bool]): PermissionChecker\",\"用法\",\"Permission(async_function) | sync_function # 等价于 Permission(async_function, sync_function)\"]},\"1354\":{\"h\":\"\",\"t\":[\"类型: set[Dependent[bool]]\",\"说明: 存储 PermissionChecker\"]},\"1355\":{\"h\":\"\",\"t\":[\"说明: 检查是否满足某个权限。\",\"参数\",\"bot (Bot): Bot 对象\",\"event (Event): Event 对象\",\"stack (AsyncExitStack | None): 异步上下文栈\",\"dependency_cache (T_DependencyCache | None): 依赖缓存\",\"返回\",\"bool\"]},\"1356\":{\"h\":\"\",\"t\":[\"说明: 检查当前事件是否属于指定会话。\",\"参数\",\"users (tuple[str, ...]): 会话 ID 元组\",\"perm (Permission | None): 需同时满足的权限\"]},\"1357\":{\"h\":\"\",\"t\":[\"说明\",\"从事件中获取会话 ID。\",\"如果 perm 中仅有 User 类型的权限检查函数，则会去除原有的会话 ID 限制。\",\"参数\",\"event (Event): Event 对象\",\"perm (Permission | None): 需同时满足的权限\",\"返回\",\"Self\"]},\"1358\":{\"h\":\"\",\"t\":[\"说明\",\"指定会话与权限。\",\"如果 perm 中仅有 User 类型的权限检查函数，则会去除原有的会话 ID 限制。\",\"参数\",\"*users (str): 会话白名单\",\"perm (Permission | None): 需同时满足的权限\",\"返回\",\"Self\"]},\"1359\":{\"h\":\"\",\"t\":[\"说明: 检查是否为消息事件\",\"参数\",\"auto\"]},\"1360\":{\"h\":\"\",\"t\":[\"说明: 检查是否为通知事件\",\"参数\",\"auto\"]},\"1361\":{\"h\":\"\",\"t\":[\"说明: 检查是否为请求事件\",\"参数\",\"auto\"]},\"1362\":{\"h\":\"\",\"t\":[\"说明: 检查是否为元事件\",\"参数\",\"auto\"]},\"1363\":{\"h\":\"\",\"t\":[\"类型:Permission\",\"说明\",\"匹配任意 message 类型事件\",\"仅在需要同时捕获不同类型事件时使用，优先使用 message type 的 Matcher。\"]},\"1364\":{\"h\":\"\",\"t\":[\"类型:Permission\",\"说明\",\"匹配任意 notice 类型事件\",\"仅在需要同时捕获不同类型事件时使用，优先使用 notice type 的 Matcher。\"]},\"1365\":{\"h\":\"\",\"t\":[\"类型:Permission\",\"说明\",\"匹配任意 request 类型事件\",\"仅在需要同时捕获不同类型事件时使用，优先使用 request type 的 Matcher。\"]},\"1366\":{\"h\":\"\",\"t\":[\"类型:Permission\",\"说明\",\"匹配任意 meta_event 类型事件\",\"仅在需要同时捕获不同类型事件时使用，优先使用 meta_event type 的 Matcher。\"]},\"1367\":{\"h\":\"\",\"t\":[\"说明: 检查当前事件是否是消息事件且属于超级管理员\",\"参数\",\"auto\"]},\"1368\":{\"h\":\"\",\"t\":[\"类型:Permission\",\"说明: 匹配任意超级用户事件\"]},\"1369\":{\"h\":\"nonebot.rule\",\"t\":[\"本模块是 Matcher.rule 的类型定义。\",\"每个事件响应器拥有一个Rule，其中是 RuleChecker 的集合。 只有当所有 RuleChecker 检查结果为 True 时继续运行。\"]},\"1370\":{\"h\":\"\",\"t\":[\"说明\",\"规则类。\",\"当事件传递时，在 Matcher 运行前进行检查。\",\"参数\",\"*checkers (T_RuleChecker | Dependent[bool]): RuleChecker\",\"用法\",\"Rule(async_function) & sync_function # 等价于 Rule(async_function, sync_function)\"]},\"1371\":{\"h\":\"\",\"t\":[\"类型: set[Dependent[bool]]\",\"说明: 存储 RuleChecker\"]},\"1372\":{\"h\":\"\",\"t\":[\"说明: 检查是否符合所有规则\",\"参数\",\"bot (Bot): Bot 对象\",\"event (Event): Event 对象\",\"state (T_State): 当前 State\",\"stack (AsyncExitStack | None): 异步上下文栈\",\"dependency_cache (T_DependencyCache | None): 依赖缓存\",\"返回\",\"bool\"]},\"1373\":{\"h\":\"\",\"t\":[\"参数\",\"auto\"]},\"1374\":{\"h\":\"\",\"t\":[\"说明: TRIE_VALUE(command_start, command)\",\"参数\",\"auto\"]},\"1375\":{\"h\":\"\",\"t\":[\"说明: 检查消息纯文本是否以指定字符串开头。\",\"参数\",\"msg (tuple[str, ...]): 指定消息开头字符串元组\",\"ignorecase (bool): 是否忽略大小写\"]},\"1376\":{\"h\":\"\",\"t\":[\"说明: 匹配消息纯文本开头。\",\"参数\",\"msg (str | tuple[str, ...]): 指定消息开头字符串元组\",\"ignorecase (bool): 是否忽略大小写\",\"返回\",\"Rule\"]},\"1377\":{\"h\":\"\",\"t\":[\"说明: 检查消息纯文本是否以指定字符串结尾。\",\"参数\",\"msg (tuple[str, ...]): 指定消息结尾字符串元组\",\"ignorecase (bool): 是否忽略大小写\"]},\"1378\":{\"h\":\"\",\"t\":[\"说明: 匹配消息纯文本结尾。\",\"参数\",\"msg (str | tuple[str, ...]): 指定消息开头字符串元组\",\"ignorecase (bool): 是否忽略大小写\",\"返回\",\"Rule\"]},\"1379\":{\"h\":\"\",\"t\":[\"说明: 检查消息纯文本是否与指定字符串全匹配。\",\"参数\",\"msg (tuple[str, ...]): 指定消息全匹配字符串元组\",\"ignorecase (bool): 是否忽略大小写\"]},\"1380\":{\"h\":\"\",\"t\":[\"说明: 完全匹配消息。\",\"参数\",\"msg (str | tuple[str, ...]): 指定消息全匹配字符串元组\",\"ignorecase (bool): 是否忽略大小写\",\"返回\",\"Rule\"]},\"1381\":{\"h\":\"\",\"t\":[\"说明: 检查消息纯文本是否包含指定关键字。\",\"参数\",\"*keywords (str): 指定关键字元组\"]},\"1382\":{\"h\":\"\",\"t\":[\"说明: 匹配消息纯文本关键词。\",\"参数\",\"*keywords (str): 指定关键字元组\",\"返回\",\"Rule\"]},\"1383\":{\"h\":\"\",\"t\":[\"说明: 检查消息是否为指定命令。\",\"参数\",\"cmds (list[tuple[str, ...]]): 指定命令元组列表\",\"force_whitespace (str | bool | None): 是否强制命令后必须有指定空白符\"]},\"1384\":{\"h\":\"\",\"t\":[\"说明\",\"匹配消息命令。\",\"根据配置里提供的 command_start,command_sep 判断消息是否为命令。\",\"可以通过 Command 获取匹配成功的命令（例: (\\\"test\\\",)）， 通过 RawCommand 获取匹配成功的原始命令文本（例: \\\"/test\\\"）， 通过 CommandArg 获取匹配成功的命令参数。\",\"参数\",\"*cmds (str | tuple[str, ...]): 命令文本或命令元组\",\"force_whitespace (str | bool | None): 是否强制命令后必须有指定空白符\",\"返回\",\"Rule\",\"用法\",\"使用默认 command_start, command_sep 配置情况下：\",\"命令 (\\\"test\\\",) 可以匹配: /test 开头的消息 命令 (\\\"test\\\", \\\"sub\\\") 可以匹配: /test.sub 开头的消息\",\"提示\",\"命令内容与后续消息间无需空格!\"]},\"1385\":{\"h\":\"\",\"t\":[\"说明\",\"shell_like 命令参数解析器，解析出错时不会退出程序。\",\"支持 Message 富文本解析。\",\"参数\",\"auto\",\"用法\",\"用法与 argparse.ArgumentParser 相同， 参考文档: argparse\"]},\"1386\":{\"h\":\"\",\"t\":[\"重载\",\"1.(args=None, namespace=None) -> tuple[Namespace, list[str | MessageSegment]]\",\"参数\",\"args (Sequence[str | MessageSegment] | None)\",\"namespace (None)\",\"返回\",\"tuple[Namespace, list[str | MessageSegment]]\",\"2.(args, namespace) -> tuple[T, list[str | MessageSegment]]\",\"参数\",\"args (Sequence[str | MessageSegment] | None)\",\"namespace (T)\",\"返回\",\"tuple[T, list[str | MessageSegment]]\",\"3.(*, namespace) -> tuple[T, list[str | MessageSegment]]\",\"参数\",\"namespace (T)\",\"返回\",\"tuple[T, list[str | MessageSegment]]\"]},\"1387\":{\"h\":\"\",\"t\":[\"说明: 检查消息是否为指定 shell 命令。\",\"参数\",\"cmds (list[tuple[str, ...]]): 指定命令元组列表\",\"parser (ArgumentParser | None): 可选参数解析器\"]},\"1388\":{\"h\":\"\",\"t\":[\"说明\",\"匹配 shell_like 形式的消息命令。\",\"根据配置里提供的 command_start,command_sep 判断消息是否为命令。\",\"可以通过 Command 获取匹配成功的命令 （例: (\\\"test\\\",)）， 通过 RawCommand 获取匹配成功的原始命令文本 （例: \\\"/test\\\"）， 通过 ShellCommandArgv 获取解析前的参数列表 （例: [\\\"arg\\\", \\\"-h\\\"]）， 通过 ShellCommandArgs 获取解析后的参数字典 （例: {\\\"arg\\\": \\\"arg\\\", \\\"h\\\": True}）。\",\"警告\",\"如果参数解析失败，则通过 ShellCommandArgs 获取的将是 ParserExit 异常。\",\"参数\",\"*cmds (str | tuple[str, ...]): 命令文本或命令元组\",\"parser (ArgumentParser | None): ArgumentParser 对象\",\"返回\",\"Rule\",\"用法\",\"使用默认 command_start, command_sep 配置，更多示例参考argparse 标准库文档。\",\"from nonebot.rule import ArgumentParser parser = ArgumentParser() parser.add_argument(\\\"-a\\\", action=\\\"store_true\\\") rule = shell_command(\\\"ls\\\", parser=parser)\",\"提示\",\"命令内容与后续消息间无需空格!\"]},\"1389\":{\"h\":\"\",\"t\":[\"说明: 检查消息字符串是否符合指定正则表达式。\",\"参数\",\"regex (str): 正则表达式\",\"flags (int): 正则表达式标记\"]},\"1390\":{\"h\":\"\",\"t\":[\"说明\",\"匹配符合正则表达式的消息字符串。\",\"可以通过 RegexStr 获取匹配成功的字符串， 通过 RegexGroup 获取匹配成功的 group 元组， 通过 RegexDict 获取匹配成功的 group 字典。\",\"参数\",\"regex (str): 正则表达式\",\"flags (int | re.RegexFlag): 正则表达式标记\",\"返回\",\"Rule\",\"提示\",\"正则表达式匹配使用 search 而非 match，如需从头匹配请使用 r\\\"^xxx\\\" 来确保匹配开头\",\"提示\",\"正则表达式匹配使用 EventMessage 的 str 字符串， 而非 EventMessage 的 PlainText 纯文本字符串\"]},\"1391\":{\"h\":\"\",\"t\":[\"说明: 检查事件是否与机器人有关。\",\"参数\",\"auto\"]},\"1392\":{\"h\":\"\",\"t\":[\"说明: 匹配与机器人有关的事件。\",\"参数\",\"empty\",\"返回\",\"Rule\"]},\"1393\":{\"h\":\"\",\"t\":[\"说明: 检查事件类型是否为指定类型。\",\"参数\",\"*types (type[Event])\"]},\"1394\":{\"h\":\"\",\"t\":[\"说明: 匹配事件类型。\",\"参数\",\"*types (type[Event]): 事件类型\",\"返回\",\"Rule\"]},\"1395\":{\"h\":\"nonebot.typing\",\"t\":[\"本模块定义了 NoneBot 模块中共享的一些类型。\",\"使用 Python 的 Type Hint 语法， 参考 PEP 484,PEP 526 和typing。\"]},\"1396\":{\"h\":\"\",\"t\":[\"说明: 标记一个方法为父类 interface 的 implement\",\"参数\",\"InterfaceClass (object)\",\"返回\",\"untyped\"]},\"1397\":{\"h\":\"\",\"t\":[\"参数\",\"type_ (type[Any])\",\"返回\",\"bool\"]},\"1398\":{\"h\":\"\",\"t\":[\"参数\",\"origin (type[Any] | None)\",\"返回\",\"bool\"]},\"1399\":{\"h\":\"\",\"t\":[\"说明: 判断是否是 Literal 类型\",\"参数\",\"origin (type[Any] | None)\",\"返回\",\"bool\"]},\"1400\":{\"h\":\"\",\"t\":[\"说明: 获取 Literal 类型包含的所有值\",\"参数\",\"type_ (type[Any])\",\"返回\",\"list[Any]\"]},\"1401\":{\"h\":\"\",\"t\":[\"说明: 判断是否是 Annotated 类型\",\"参数\",\"origin (type[Any] | None)\",\"返回\",\"bool\"]},\"1402\":{\"h\":\"\",\"t\":[\"说明: 判断是否是 None 类型\",\"参数\",\"type_ (type[Any])\",\"返回\",\"bool\"]},\"1403\":{\"h\":\"\",\"t\":[\"参数\",\"ref (ForwardRef)\",\"globalns (dict[str, Any])\",\"localns (dict[str, Any])\",\"返回\",\"Any\"]},\"1404\":{\"h\":\"\",\"t\":[\"参数\",\"auto\"]},\"1405\":{\"h\":\"\",\"t\":[\"类型: dict[Any, Any]\",\"说明: 事件处理状态 State 类型\"]},\"1406\":{\"h\":\"\",\"t\":[\"类型: _DependentCallable[Any]\",\"说明\",\"Bot 连接建立时钩子函数\",\"依赖参数:\",\"DependParam: 子依赖参数\",\"BotParam: Bot 对象\",\"DefaultParam: 带有默认值的参数\"]},\"1407\":{\"h\":\"\",\"t\":[\"类型: _DependentCallable[Any]\",\"说明\",\"Bot 连接断开时钩子函数\",\"依赖参数:\",\"DependParam: 子依赖参数\",\"BotParam: Bot 对象\",\"DefaultParam: 带有默认值的参数\"]},\"1408\":{\"h\":\"\",\"t\":[\"类型: (Bot, str, dict[str, Any]) -> Awaitable[Any]\",\"说明:bot.call_api 钩子函数\"]},\"1409\":{\"h\":\"\",\"t\":[\"类型: (Bot, Exception | None, str, dict[str, Any], Any) -> Awaitable[Any]\",\"说明:bot.call_api 后执行的函数，参数分别为 bot, exception, api, data, result\"]},\"1410\":{\"h\":\"\",\"t\":[\"类型: _DependentCallable[Any]\",\"说明\",\"事件预处理函数 EventPreProcessor 类型\",\"依赖参数:\",\"DependParam: 子依赖参数\",\"BotParam: Bot 对象\",\"EventParam: Event 对象\",\"StateParam: State 对象\",\"DefaultParam: 带有默认值的参数\"]},\"1411\":{\"h\":\"\",\"t\":[\"类型: _DependentCallable[Any]\",\"说明\",\"事件后处理函数 EventPostProcessor 类型\",\"依赖参数:\",\"DependParam: 子依赖参数\",\"BotParam: Bot 对象\",\"EventParam: Event 对象\",\"StateParam: State 对象\",\"DefaultParam: 带有默认值的参数\"]},\"1412\":{\"h\":\"\",\"t\":[\"类型: _DependentCallable[Any]\",\"说明\",\"事件响应器运行前预处理函数 RunPreProcessor 类型\",\"依赖参数:\",\"DependParam: 子依赖参数\",\"BotParam: Bot 对象\",\"EventParam: Event 对象\",\"StateParam: State 对象\",\"MatcherParam: Matcher 对象\",\"DefaultParam: 带有默认值的参数\"]},\"1413\":{\"h\":\"\",\"t\":[\"类型: _DependentCallable[Any]\",\"说明\",\"事件响应器运行后后处理函数 RunPostProcessor 类型\",\"依赖参数:\",\"DependParam: 子依赖参数\",\"BotParam: Bot 对象\",\"EventParam: Event 对象\",\"StateParam: State 对象\",\"MatcherParam: Matcher 对象\",\"ExceptionParam: 异常对象（可能为 None）\",\"DefaultParam: 带有默认值的参数\"]},\"1414\":{\"h\":\"\",\"t\":[\"类型: _DependentCallable[bool]\",\"说明\",\"RuleChecker 即判断是否响应事件的处理函数。\",\"依赖参数:\",\"DependParam: 子依赖参数\",\"BotParam: Bot 对象\",\"EventParam: Event 对象\",\"StateParam: State 对象\",\"DefaultParam: 带有默认值的参数\"]},\"1415\":{\"h\":\"\",\"t\":[\"类型: _DependentCallable[bool]\",\"说明\",\"PermissionChecker 即判断事件是否满足权限的处理函数。\",\"依赖参数:\",\"DependParam: 子依赖参数\",\"BotParam: Bot 对象\",\"EventParam: Event 对象\",\"DefaultParam: 带有默认值的参数\"]},\"1416\":{\"h\":\"\",\"t\":[\"类型: _DependentCallable[Any]\",\"说明: Handler 处理函数。\"]},\"1417\":{\"h\":\"\",\"t\":[\"类型: _DependentCallable[str]\",\"说明\",\"TypeUpdater 在 Matcher.pause, Matcher.reject 时被运行，用于更新响应的事件类型。 默认会更新为 message。\",\"依赖参数:\",\"DependParam: 子依赖参数\",\"BotParam: Bot 对象\",\"EventParam: Event 对象\",\"StateParam: State 对象\",\"MatcherParam: Matcher 对象\",\"DefaultParam: 带有默认值的参数\"]},\"1418\":{\"h\":\"\",\"t\":[\"类型: _DependentCallable[Permission]\",\"说明\",\"PermissionUpdater 在 Matcher.pause, Matcher.reject 时被运行，用于更新会话对象权限。 默认会更新为当前事件的触发对象。\",\"依赖参数:\",\"DependParam: 子依赖参数\",\"BotParam: Bot 对象\",\"EventParam: Event 对象\",\"StateParam: State 对象\",\"MatcherParam: Matcher 对象\",\"DefaultParam: 带有默认值的参数\"]},\"1419\":{\"h\":\"\",\"t\":[\"类型: dict[_DependentCallable[Any], DependencyCache]\",\"说明: 依赖缓存, 用于存储依赖函数的返回值\"]},\"1420\":{\"h\":\"nonebot.utils\",\"t\":[\"本模块包含了 NoneBot 的一些工具函数\"]},\"1421\":{\"h\":\"\",\"t\":[\"说明\",\"用于记录带颜色日志时转义 <tag> 类型特殊标签\",\"参考: loguru color 标签\",\"参数\",\"s (str): 需要转义的字符串\",\"返回\",\"str\"]},\"1422\":{\"h\":\"\",\"t\":[\"说明: 深度更新合并字典\",\"参数\",\"mapping (dict[K, Any])\",\"*updating_mappings (dict[K, Any])\",\"返回\",\"dict[K, Any]\"]},\"1423\":{\"h\":\"\",\"t\":[\"说明: 检查 cls 是否是 class_or_tuple 中的一个类型子类并忽略类型错误。\",\"参数\",\"cls (Any)\",\"class_or_tuple (type[Any] | tuple[type[Any], ...])\",\"返回\",\"bool\"]},\"1424\":{\"h\":\"\",\"t\":[\"说明\",\"检查 cls 是否是 class_or_tuple 中的一个类型子类。\",\"特别的：\",\"如果 cls 是 typing.Union 或 types.UnionType 类型， 则会检查其中的所有类型是否是 class_or_tuple 中一个类型的子类或 None。\",\"如果 cls 是 typing.Literal 类型， 则会检查其中的所有值是否是 class_or_tuple 中一个类型的实例。\",\"如果 cls 是 typing.TypeVar 类型， 则会检查其 __bound__ 或 __constraints__ 是否是 class_or_tuple 中一个类型的子类或 None。\",\"参数\",\"cls (Any)\",\"class_or_tuple (type[Any] | tuple[type[Any], ...])\",\"返回\",\"bool\"]},\"1425\":{\"h\":\"\",\"t\":[\"说明: 检查 type_ 是否是复杂类型\",\"参数\",\"type_ (type[Any])\",\"返回\",\"bool\"]},\"1426\":{\"h\":\"\",\"t\":[\"说明: 检查 call 是否是一个 callable 协程函数\",\"参数\",\"call ((...) -> Any)\",\"返回\",\"bool\"]},\"1427\":{\"h\":\"\",\"t\":[\"说明: 检查 call 是否是一个生成器函数\",\"参数\",\"call ((...) -> Any)\",\"返回\",\"bool\"]},\"1428\":{\"h\":\"\",\"t\":[\"说明: 检查 call 是否是一个异步生成器函数\",\"参数\",\"call ((...) -> Any)\",\"返回\",\"bool\"]},\"1429\":{\"h\":\"\",\"t\":[\"说明: 一个用于包装 sync function 为 async function 的装饰器\",\"参数\",\"call ((P) -> R): 被装饰的同步函数\",\"返回\",\"(P) -> Coroutine[None, None, R]\"]},\"1430\":{\"h\":\"\",\"t\":[\"说明: 一个用于包装 sync context manager 为 async context manager 的执行函数\",\"参数\",\"cm (AbstractContextManager[T])\",\"返回\",\"AsyncGenerator[T, None]\"]},\"1431\":{\"h\":\"\",\"t\":[\"说明: 运行协程并当遇到指定异常时返回指定值。\",\"重载\",\"1.(coro, exc, return_on_err=None) -> T | None\",\"参数\",\"coro (Coroutine[Any, Any, T])\",\"exc (tuple[type[Exception], ...])\",\"return_on_err (None)\",\"返回\",\"T | None\",\"2.(coro, exc, return_on_err) -> T | R\",\"参数\",\"coro (Coroutine[Any, Any, T])\",\"exc (tuple[type[Exception], ...])\",\"return_on_err (R)\",\"返回\",\"T | R\",\"参数\",\"coro: 要运行的协程\",\"exc: 要捕获的异常\",\"return_on_err: 当发生异常时返回的值\",\"返回\",\"协程的返回值或发生异常时的指定值\"]},\"1432\":{\"h\":\"\",\"t\":[\"说明: 运行协程并在取消时屏蔽取消异常。\",\"参数\",\"coro (Coroutine[Any, Any, T]): 要运行的协程\",\"返回\",\"T: 协程的返回值\"]},\"1433\":{\"h\":\"\",\"t\":[\"参数\",\"exc_group (BaseExceptionGroup[E])\",\"返回\",\"Generator[E, None, None]\"]},\"1434\":{\"h\":\"\",\"t\":[\"说明: 获取对象的名称\",\"参数\",\"obj (Any)\",\"返回\",\"str\"]},\"1435\":{\"h\":\"\",\"t\":[\"说明: 转换路径为模块名\",\"参数\",\"path (Path)\",\"返回\",\"str\"]},\"1436\":{\"h\":\"\",\"t\":[\"说明: 解析并导入点分表示法的对象\",\"参数\",\"obj_str (str)\",\"default_attr (str)\",\"default_prefix (str | None)\",\"返回\",\"Any\"]},\"1437\":{\"h\":\"\",\"t\":[\"说明: 类属性装饰器\",\"参数\",\"func ((Any) -> T)\"]},\"1438\":{\"h\":\"\",\"t\":[\"说明: 可以序列化 Message(List[Dataclass]) 的 JSONEncoder\",\"参数\",\"auto\"]},\"1439\":{\"h\":\"\",\"t\":[\"参数\",\"o\",\"返回\",\"untyped\"]},\"1440\":{\"h\":\"\",\"t\":[\"说明: 用于打印 adapter 的日志。\",\"参数\",\"logger_name (str): adapter 的名称\",\"返回\",\"untyped: 日志记录函数\",\"日志记录函数的参数:\",\"level: 日志等级\",\"message: 日志信息\",\"exception: 异常信息\"]},\"1441\":{\"h\":\"日志\",\"t\":[\"无论是在开发还是在生产环境中，日志都是一个重要的功能，可以帮助我们了解运行状况、排查问题等。虽然我们可以使用 print 来将需要的信息输出到控制台，但是这种方式难以控制，而且不利于日志的归档、分析等。NoneBot 使用优秀的 Loguru 库来进行日志记录。\"]},\"1442\":{\"h\":\"记录日志\",\"t\":[\"我们可以从 NoneBot 中导入 logger 对象，然后使用 logger 对象的方法来记录日志。\",\"from nonebot import logger logger.trace(\\\"This is a trace message\\\") logger.debug(\\\"This is a debug message\\\") logger.info(\\\"This is an info message\\\") logger.success(\\\"This is a success message\\\") logger.warning(\\\"This is a warning message\\\") logger.error(\\\"This is an error message\\\") logger.critical(\\\"This is a critical message\\\")\",\"我们仅需一行代码即可记录对应级别的日志。日志可以通过配置 LOG_LEVEL 配置项来过滤输出等级，控制台中仅会输出大于等于 LOG_LEVEL 的日志。默认的 LOG_LEVEL 为 INFO，即只会输出 INFO、SUCCESS、WARNING、ERROR、CRITICAL 级别的日志。\",\"如果需要记录 Exception traceback 日志，可以向 logger 添加 exception 选项：\",\"try: 1 / 0 except ZeroDivisionError: logger.opt(exception=True).error(\\\"ZeroDivisionError\\\")\",\"如果需要输出彩色日志，可以向 logger 添加 colors 选项：\",\"logger.opt(colors=True).warning(\\\"We got a <red>BIG</red> problem\\\")\",\"更多日志记录方法请参考 Loguru 文档。\"]},\"1443\":{\"h\":\"自定义日志输出\",\"t\":[\"NoneBot 在启动时会添加一个默认的日志处理器，该处理器会将日志输出到stdout，并且根据 LOG_LEVEL 配置项过滤日志等级。\",\"默认的日志格式为：\",\"<g>{time:MM-DD HH:mm:ss}</g> [<lvl>{level}</lvl>] <c><u>{name}</u></c> | {message}\",\"我们可以从 nonebot.log 模块导入以使用 NoneBot 的默认格式和过滤器：\",\"from nonebot.log import default_format, default_filter\",\"如果需要自定义日志格式，我们需要移除 NoneBot 默认的日志处理器并添加新的日志处理器。例如，在机器人入口文件中 nonebot.init 之前添加以下内容：\",\"from nonebot.log import logger_id # 移除 NoneBot 默认的日志处理器 logger.remove(logger_id) # 添加新的日志处理器 logger.add( sys.stdout, level=0, diagnose=True, format=\\\"<g>{time:MM-DD HH:mm:ss}</g> [<lvl>{level}</lvl>] <c><u>{name}</u></c> | {message}\\\", filter=default_filter )\",\"如果想要输出日志到文件，我们可以使用 logger.add 方法添加文件处理器：\",\"logger.add(\\\"error.log\\\", level=\\\"ERROR\\\", format=default_format, rotation=\\\"1 week\\\")\",\"更多日志处理器的使用方法请参考 Loguru 文档。\"]},\"1444\":{\"h\":\"重定向 logging 日志\",\"t\":[\"logging 是 Python 标准库中的日志模块，NoneBot 提供了一个 logging handler 用于将 logging 日志重定向到 loguru 处理。\",\"from nonebot.log import LoguruHandler # root logger 添加 LoguruHandler logging.basicConfig(handlers=[LoguruHandler()]) # 或者为其他 logging.Logger 添加 LoguruHandler logger.addHandler(LoguruHandler())\"]},\"1445\":{\"h\":\"事件类型与重载\",\"t\":[\"在之前的示例中，我们已经了解了如何获取事件信息以及使用平台接口。但是，事件信息通常不仅仅包含消息这一个内容，还有其他平台提供的信息，例如消息发送时间、消息发送者等等。同时，在使用平台接口时，我们需要确保使用的平台接口与所要发送的平台类型一致，对不同类型的事件需要做出不同的处理。在本章节中，我们将介绍如何获取事件更多的信息以及根据事件类型进行不同的处理。\"]},\"1446\":{\"h\":\"事件类型\",\"t\":[\"在 NoneBot 中，事件均是 nonebot.adapters.Event 基类的子类型，基类对一些必要的属性进行了抽象，子类型则根据不同的平台进行了实现。在自定义权限一节中，我们就使用了 Event 的抽象方法 get_user_id 来获取事件发送者 ID，这个方法由协议适配器进行了实现，返回机器人用户对应的平台 ID。更多的基类抽象方法可以在使用适配器中查看。\",\"既然事件是基类的子类型，我们实际可以获得的信息通常多于基类抽象方法所提供的。如果我们不满足于基类能获得的信息，我们可以小小的修改一下事件处理函数的事件参数类型注解，使其变为子类型，这样我们就可以通过协议适配器定义的子类型来获取更多的信息。我们以 Console 协议适配器为例：\",\"from nonebot.adapters.console import MessageEvent @weather.got(\\\"location\\\", prompt=\\\"请输入地名\\\") async def got_location(event: MessageEvent, location: str = ArgPlainText()): await weather.finish(f\\\"{event.time.strftime('%Y-%m-%d')} {location} 的天气是...\\\")\",\"在上面的代码中，我们获取了 Console 协议适配器的消息事件提供的发送时间 time 属性。\",\"注意\",\"如果基类就能满足你的需求，那么就不要修改事件参数类型注解，这样可以使你的代码更加通用，可以在更多平台上运行。如何根据不同平台事件类型进行不同的处理，我们将在重载一节中介绍。\"]},\"1447\":{\"h\":\"重载\",\"t\":[\"我们在编写机器人时，常常会遇到这样一个问题：如何对私聊和群聊消息进行不同的处理？如何对不同平台的事件进行不同的处理？针对这些问题，NoneBot 提供了一个便捷而高效的解决方案 ── 重载。简单来说，依赖函数会根据其参数的类型注解来决定是否执行，忽略不符合其参数类型注解的情况。这样，我们就可以通过修改事件参数类型注解来实现对不同事件的处理，或者修改 Bot 参数类型注解来实现使用不同平台的接口。我们以 OneBot 协议适配器为例：\",\"from nonebot.adapters.onebot.v11 import PrivateMessageEvent, GroupMessageEvent @matcher.handle() async def handle_private(event: PrivateMessageEvent): await matcher.finish(\\\"私聊消息\\\") @matcher.handle() async def handle_group(event: GroupMessageEvent): await matcher.finish(\\\"群聊消息\\\")\",\"这样，机器人用户就会在私聊和群聊中分别收到不同的回复。同样的，我们也可以通过修改 Bot 参数类型注解来实现使用不同平台的接口：\",\"from nonebot.adapters.console import Bot as ConsoleBot from nonebot.adapters.onebot.v11 import Bot as OneBot @matcher.handle() async def handle_console(bot: ConsoleBot): await bot.bell() @matcher.handle() async def handle_onebot(bot: OneBot): await bot.send_group_message(group_id=123123, message=\\\"OneBot\\\")\",\"注意\",\"重载机制对所有的参数类型注解都有效，因此，依赖注入也可以使用这个特性来对不同的返回值进行处理。\",\"但 Bot、Event 和 Matcher 三者的参数类型注解具有最高检查优先级，如果三者任一类型注解不匹配，那么其他依赖注入将不会执行（如：Depends）。\",\"提示\",\"如何更好地编写一个跨平台的插件，我们将在最佳实践中介绍。\"]},\"1448\":{\"h\":\"响应规则\",\"t\":[\"机器人在实际应用中，往往会接收到多种多样的事件类型，NoneBot 通过响应规则来控制事件的处理。\",\"在指南中，我们为 weather 命令添加了一个 rule=to_me() 参数，这个参数就是一个响应规则，确保只有在私聊或者 @bot 时才会响应。\",\"响应规则是一个 Rule 对象，它由一系列的 RuleChecker 函数组成，每个 RuleChecker 函数都会检查事件是否符合条件，如果所有的检查都通过，则事件会被处理。\"]},\"1449\":{\"h\":\"RuleChecker\",\"t\":[\"RuleChecker 是一个返回值为 bool 类型的依赖函数，即 RuleChecker 支持依赖注入。我们可以根据上一节中添加的配置项，在 weather 插件目录中编写一个响应规则：\",\"from nonebot import get_plugin_config from .config import Config plugin_config = get_plugin_config(Config) async def is_enable() -> bool: return plugin_config.weather_plugin_enabled weather = on_command(\\\"天气\\\", rule=is_enable)\",\"在上面的代码中，我们定义了一个函数 is_enable，它会检查配置项 weather_plugin_enabled 是否为 True。这个函数 is_enable 即为一个 RuleChecker。\"]},\"1450\":{\"h\":\"Rule\",\"t\":[\"Rule 是若干个 RuleChecker 的集合，它会并发调用每个 RuleChecker，只有当所有 RuleChecker 检查通过时匹配成功。例如：我们可以组合两个 RuleChecker，一个用于检查插件是否启用，一个用于检查用户是否在黑名单中：\",\"from nonebot.rule import Rule from nonebot.adapters import Event async def is_enable() -> bool: return plugin_config.weather_plugin_enabled async def is_blacklisted(event: Event) -> bool: return event.get_user_id() not in BLACKLIST rule = Rule(is_enable, is_blacklisted) weather = on_command(\\\"天气\\\", rule=rule)\"]},\"1451\":{\"h\":\"合并响应规则\",\"t\":[\"在定义响应规则时，我们可以将规则进行细分，来更好地复用规则。而在使用时，我们需要合并多个规则。除了使用 Rule 对象来组合多个 RuleChecker 外，我们还可以对 Rule 对象进行合并。在原 weather 插件中，我们可以将 rule=to_me() 与 rule=is_enable 使用 & 运算符合并：\",\"from nonebot.rule import to_me from nonebot import get_plugin_config from .config import Config plugin_config = get_plugin_config(Config) async def is_enable() -> bool: return plugin_config.weather_plugin_enabled weather = on_command( \\\"天气\\\", rule=to_me() & is_enable, aliases={\\\"weather\\\", \\\"查天气\\\"}, priority=plugin_config.weather_command_priority, block=True, )\",\"这样，weather 命令就只会在插件启用且在私聊或者 @bot 时才会响应。\",\"合并响应规则可以有多种形式，例如：\",\"rule1 = Rule(foo_checker) rule2 = Rule(bar_checker) rule = rule1 & rule2 rule = rule1 & bar_checker rule = foo_checker & rule2\",\"同时，我们也无需担心合并了一个 None 值，Rule 会忽略 None 值。\",\"assert (rule & None) is rule\"]},\"1452\":{\"h\":\"主动使用响应规则\",\"t\":[\"除了在事件响应器中使用响应规则外，我们也可以主动使用响应规则来判断事件是否符合条件。例如：\",\"rule = Rule(some_checker) result: bool = await rule(bot, event, state)\",\"我们只需要传入 Bot 对象、事件和会话状态，Rule 会并发调用所有 RuleChecker 进行检查，并返回结果。\"]},\"1453\":{\"h\":\"内置响应规则\",\"t\":[\"NoneBot 内置了一些常用的响应规则，可以直接通过事件响应器辅助函数或者自行合并其他规则使用。内置响应规则列表可以参考事件响应器进阶\"]},\"1454\":{\"h\":\"会话状态\",\"t\":[\"在事件处理流程中，和用户交互的过程即是会话。在会话中，我们可能需要记录一些信息，例如用户的重试次数等等，以便在会话中的不同阶段进行判断和处理。这些信息都可以存储于会话状态中。\",\"NoneBot 中的会话状态是一个字典，可以通过类型 T_State 来获取。字典内可以存储任意类型的数据，但是要注意的是，NoneBot 本身会在会话状态中存储一些信息，因此不要使用 NoneBot 使用的键名。\",\"from nonebot.typing import T_State @matcher.got(\\\"key\\\", prompt=\\\"请输入密码\\\") async def _(state: T_State, key: str = ArgPlainText()): if key != \\\"some password\\\": try_count = state.get(\\\"try_count\\\", 1) if try_count >= 3: await matcher.finish(\\\"密码错误次数过多\\\") else: state[\\\"try_count\\\"] = try_count + 1 await matcher.reject(\\\"密码错误，请重新输入\\\") await matcher.finish(\\\"密码正确\\\")\",\"会话状态的生命周期与事件处理流程相同，在期间的任何一个事件处理函数都可以进行读写。\",\"from nonebot.typing import T_State @matcher.handle() async def _(state: T_State): state[\\\"key\\\"] = \\\"value\\\" @matcher.handle() async def _(state: T_State): await matcher.finish(state[\\\"key\\\"])\",\"会话状态还可以用于发送动态消息，消息模板在发送时会使用会话状态字典进行渲染。消息模板的使用方法已经在消息处理中介绍过，这里不再赘述。\",\"from nonebot.typing import T_State from nonebot.adapters import MessageTemplate @matcher.handle() async def _(state: T_State): state[\\\"username\\\"] = \\\"user\\\" @matcher.got(\\\"password\\\", prompt=MessageTemplate(\\\"请输入 {username} 的密码\\\")) async def _(): await matcher.finish(MessageTemplate(\\\"密码为 {password}\\\"))\"]},\"1455\":{\"h\":\"下一步\",\"t\":[\"至此，我们已经了解了 NoneBot 的大多数功能用法，相信你已经可以独自写出一个插件了。现在你可以选择：\",\"即刻开始插件编写！\",\"更深入地了解 NoneBot 的更多功能和原理！\"]},\"1456\":{\"h\":\"数据存储\",\"t\":[\"在使用插件的过程中，难免会需要存储一些持久化数据，例如用户的个人信息、群组的信息等。除了使用数据库等第三方存储之外，还可以使用本地文件来自行管理数据。NoneBot 提供了 nonebot-plugin-localstore 插件，可用于获取正确的数据存储路径并写入数据。\"]},\"1457\":{\"h\":\"安装插件\",\"t\":[\"在使用前请先安装 nonebot-plugin-localstore 插件至项目环境中，可参考获取商店插件来了解并选择安装插件的方式。如：\",\"在项目目录下执行以下命令：\",\"nb plugin install nonebot-plugin-localstore\"]},\"1458\":{\"h\":\"使用插件\",\"t\":[\"nonebot-plugin-localstore 插件兼容 Windows、Linux 和 macOS 等操作系统，使用时无需关心操作系统的差异。同时插件提供 nb-cli 脚本，可以使用 nb localstore 命令来检查数据存储路径。\",\"在使用本插件前同样需要使用 require 方法进行加载并导入需要使用的方法，可参考 跨插件访问 一节进行了解，如：\",\"from nonebot import require require(\\\"nonebot_plugin_localstore\\\") import nonebot_plugin_localstore as store # 获取插件缓存目录 cache_dir = store.get_plugin_cache_dir() # 获取插件缓存文件 cache_file = store.get_plugin_cache_file(\\\"file_name\\\") # 获取插件数据目录 data_dir = store.get_plugin_data_dir() # 获取插件数据文件 data_file = store.get_plugin_data_file(\\\"file_name\\\") # 获取插件配置目录 config_dir = store.get_plugin_config_dir() # 获取插件配置文件 config_file = store.get_plugin_config_file(\\\"file_name\\\")\",\"警告\",\"在 Windows 和 macOS 系统下，插件的数据目录和配置目录是同一个目录，因此在使用时需要注意避免文件名冲突。\",\"插件提供的方法均返回一个 pathlib.Path 路径，可以参考 pathlib 文档来了解如何使用。常用的方法有：\",\"from pathlib import Path data_file = store.get_plugin_data_file(\\\"file_name\\\") # 写入文件内容 data_file.write_text(\\\"Hello World!\\\") # 读取文件内容 data = data_file.read_text()\",\"提示\",\"对于嵌套插件，子插件的存储目录将位于父插件存储目录下。\"]},\"1459\":{\"h\":\"配置项\"},\"1460\":{\"h\":\"localstore_use_cwd\",\"t\":[\"使用当前工作目录作为数据存储目录，以下数据目录配置项默认值将会对应变更\",\"默认值：False\",\"LOCALSTORE_USE_CWD=true\"]},\"1461\":{\"h\":\"localstore_cache_dir\",\"t\":[\"自定义缓存目录\",\"默认值：\",\"当 localstore_use_cwd 为 True 时，缓存目录为 <current_working_directory>/cache，否则：\",\"macOS: ~/Library/Caches/nonebot2\",\"Unix: ~/.cache/nonebot2 (XDG default)\",\"Windows: C:\\\\Users\\\\<username>\\\\AppData\\\\Local\\\\nonebot2\\\\Cache\",\"LOCALSTORE_CACHE_DIR=/tmp/cache\"]},\"1462\":{\"h\":\"localstore_data_dir\",\"t\":[\"自定义数据目录\",\"默认值：\",\"当 localstore_use_cwd 为 True 时，数据目录为 <current_working_directory>/data，否则：\",\"macOS: ~/Library/Application Support/nonebot2\",\"Unix: ~/.local/share/nonebot2 or in $XDG_DATA_HOME, if defined\",\"Win XP (not roaming): C:\\\\Documents and Settings\\\\<username>\\\\Application Data\\\\nonebot2\",\"Win 7 (not roaming): C:\\\\Users\\\\<username>\\\\AppData\\\\Local\\\\nonebot2\",\"LOCALSTORE_DATA_DIR=/tmp/data\"]},\"1463\":{\"h\":\"localstore_config_dir\",\"t\":[\"自定义配置目录\",\"默认值：\",\"当 localstore_use_cwd 为 True 时，配置目录为 <current_working_directory>/config，否则：\",\"macOS: same as user_data_dir\",\"Unix: ~/.config/nonebot2\",\"Win XP (roaming): C:\\\\Documents and Settings\\\\<username>\\\\Local Settings\\\\Application Data\\\\nonebot2\",\"Win 7 (roaming): C:\\\\Users\\\\<username>\\\\AppData\\\\Roaming\\\\nonebot2\",\"LOCALSTORE_CONFIG_DIR=/tmp/config\"]},\"1464\":{\"h\":\"localstore_plugin_cache_dir\",\"t\":[\"自定义插件缓存目录\",\"默认值：{}\",\"LOCALSTORE_PLUGIN_CACHE_DIR=' { \\\"plugin_id\\\": \\\"/tmp/plugin_cache\\\" } '\"]},\"1465\":{\"h\":\"localstore_plugin_data_dir\",\"t\":[\"自定义插件数据目录\",\"默认值：{}\",\"LOCALSTORE_PLUGIN_DATA_DIR=' { \\\"plugin_id\\\": \\\"/tmp/plugin_data\\\" } '\"]},\"1466\":{\"h\":\"localstore_plugin_config_dir\",\"t\":[\"自定义插件配置目录\",\"默认值：{}\",\"LOCALSTORE_PLUGIN_CONFIG_DIR=' { \\\"plugin_id\\\": \\\"/tmp/plugin_config\\\" } '\"]},\"1467\":{\"h\":\"错误跟踪\",\"t\":[\"在应用实际运行过程中，可能会出现各种各样的错误。可能是由于代码逻辑错误，也可能是由于用户输入错误，甚至是由于第三方服务的错误。这些错误都会导致应用的运行出现问题，这时候就需要对错误进行跟踪，以便及时发现问题并进行修复。NoneBot 提供了 nonebot-plugin-sentry 插件，支持 sentry 平台，可以方便地进行错误跟踪。\"]},\"1468\":{\"h\":\"安装插件\",\"t\":[\"在使用前请先安装 nonebot-plugin-sentry 插件至项目环境中，可参考获取商店插件来了解并选择安装插件的方式。如：\",\"在项目目录下执行以下命令：\",\"nb plugin install nonebot-plugin-sentry\"]},\"1469\":{\"h\":\"使用插件\",\"t\":[\"在安装完成之后，仅需要对插件进行简单的配置即可使用。\"]},\"1470\":{\"h\":\"获取 sentry DSN\",\"t\":[\"前往 sentry 平台，注册并创建一个新的项目，然后在项目设置中找到 Client Keys (DSN)，复制其中的 DSN 值。\"]},\"1471\":{\"h\":\"配置插件\",\"t\":[\"注意\",\"错误跟踪通常在生产环境中使用，因此开发环境中 sentry_dsn 留空即会停用插件。\",\"在项目 dotenv 配置文件中添加以下配置即可使用：\",\"SENTRY_DSN=<your_sentry_dsn>\"]},\"1472\":{\"h\":\"配置项\",\"t\":[\"配置项具体含义参考 Sentry Docs。\",\"sentry_dsn: str\",\"sentry_debug: bool = False\",\"sentry_release: str | None = None\",\"sentry_release: str | None = None\",\"sentry_environment: str | None = nonebot env\",\"sentry_server_name: str | None = None\",\"sentry_sample_rate: float = 1.\",\"sentry_max_breadcrumbs: int = 100\",\"sentry_attach_stacktrace: bool = False\",\"sentry_send_default_pii: bool = False\",\"sentry_in_app_include: List[str] = Field(default_factory=list)\",\"sentry_in_app_exclude: List[str] = Field(default_factory=list)\",\"sentry_request_bodies: str = \\\"medium\\\"\",\"sentry_with_locals: bool = True\",\"sentry_ca_certs: str | None = None\",\"sentry_before_send: Callable[[Any, Any], Any | None] | None = None\",\"sentry_before_breadcrumb: Callable[[Any, Any], Any | None] | None = None\",\"sentry_transport: Any | None = None\",\"sentry_http_proxy: str | None = None\",\"sentry_https_proxy: str | None = None\",\"sentry_shutdown_timeout: int = 2\"]},\"1473\":{\"h\":\"定时任务\",\"t\":[\"APScheduler (Advanced Python Scheduler) 是一个 Python 第三方库，其强大的定时任务功能被广泛应用于各个场景。在 NoneBot 中，定时任务作为一个额外功能，依赖于基于 APScheduler 开发的 nonebot-plugin-apscheduler 插件进行支持。\"]},\"1474\":{\"h\":\"安装插件\",\"t\":[\"在使用前请先安装 nonebot-plugin-apscheduler 插件至项目环境中，可参考获取商店插件来了解并选择安装插件的方式。如：\",\"在项目目录下执行以下命令：\",\"nb plugin install nonebot-plugin-apscheduler\"]},\"1475\":{\"h\":\"使用插件\",\"t\":[\"nonebot-plugin-apscheduler 本质上是对 APScheduler 进行了封装以适用于 NoneBot 开发，因此其使用方式与 APScheduler 本身并无显著区别。在此我们会简要介绍其调用方法，更多的使用方面的功能请参考APScheduler 官方文档。\"]},\"1476\":{\"h\":\"导入调度器\",\"t\":[\"由于 nonebot_plugin_apscheduler 作为插件，因此需要在使用前对其进行加载并导入其中的 scheduler 调度器来创建定时任务。使用 require 方法可轻松完成这一过程，可参考 跨插件访问 一节进行了解。\",\"from nonebot import require require(\\\"nonebot_plugin_apscheduler\\\") from nonebot_plugin_apscheduler import scheduler\"]},\"1477\":{\"h\":\"添加定时任务\",\"t\":[\"在 APScheduler 官方文档 中提供了以下两种直接添加任务的方式：\",\"from nonebot import require require(\\\"nonebot_plugin_apscheduler\\\") from nonebot_plugin_apscheduler import scheduler # 基于装饰器的方式 @scheduler.scheduled_job(\\\"cron\\\", hour=\\\"*/2\\\", id=\\\"job_0\\\", args=[1], kwargs={arg2: 2}) async def run_every_2_hour(arg1: int, arg2: int): pass # 基于 add_job 方法的方式 def run_every_day(arg1: int, arg2: int): pass scheduler.add_job( run_every_day, \\\"interval\\\", days=1, id=\\\"job_1\\\", args=[1], kwargs={arg2: 2} )\",\"注意\",\"由于 APScheduler 的定时任务并不是由事件响应器所触发的事件，因此其任务函数无法同事件处理函数一样通过依赖注入获取上下文信息，也无法通过事件响应器对象的方法进行任何操作，因此我们需要使用调用平台 API的方式来获取信息或收发消息。\",\"相对于事件处理依赖而言，编写定时任务更像是编写普通的函数，需要我们自行获取信息以及发送信息，请不要将事件处理依赖的特殊语法用于定时任务！\",\"关于 APScheduler 的更多使用方法，可以参考 APScheduler 官方文档 进行了解。\"]},\"1478\":{\"h\":\"配置项\"},\"1479\":{\"h\":\"apscheduler_autostart\",\"t\":[\"类型: bool\",\"默认值: True\",\"是否自动启动 scheduler ，若不启动需要自行调用 scheduler.start()。\"]},\"1480\":{\"h\":\"apscheduler_log_level\",\"t\":[\"类型: int\",\"默认值: 30\",\"apscheduler 输出的日志等级\",\"WARNING = 30 (默认)\",\"INFO = 20\",\"DEBUG = 10 (只有在开启 nonebot 的 debug 模式才会显示 debug 日志)\"]},\"1481\":{\"h\":\"apscheduler_config\",\"t\":[\"类型: dict\",\"默认值: { \\\"apscheduler.timezone\\\": \\\"Asia/Shanghai\\\" }\",\"apscheduler 的相关配置。参考配置调度器, 配置参数\",\"配置需要包含 apscheduler. 作为前缀，例如 apscheduler.timezone。\"]},\"1482\":{\"h\":\"参与讨论\",\"t\":[\"如果在安装或者开发 NoneBot 过程中遇到了任何问题，或者有新奇的点子，欢迎参与我们的社区讨论：\",\"点击下方链接前往 GitHub，前往 Issues 页面，在 New Issue Template 中选择 Question\",\"NoneBot：\",\"通过 QQ 群（点击下方链接直达）\",\"通过 QQ 频道\",\"通过 Discord 服务器（点击下方链接直达）\"]},\"1483\":{\"h\":\"贡献指南\"},\"1484\":{\"h\":\"Code of Conduct\",\"t\":[\"请参阅 Code of Conduct。\"]},\"1485\":{\"h\":\"参与开发\",\"t\":[\"请参阅 Contributing。\"]},\"1486\":{\"h\":\"鸣谢\",\"t\":[\"感谢以下开发者对 NoneBot2 作出的贡献：\"]},\"1487\":{\"h\":\"编写适配器\",\"t\":[\"在编写适配器之前，我们需要先了解适配器的功能与组成，适配器通常由 Adapter、Bot、Event 和 Message 四个部分组成，在编写适配器时，我们需要继承 NoneBot 中的基类，并根据实际平台来编写每个部分功能。\"]},\"1488\":{\"h\":\"组织结构\",\"t\":[\"NoneBot 适配器项目通常以 nonebot-adapter-{adapter-name} 作为项目名，并以命名空间包的形式编写，即在 nonebot/adapters/{adapter-name} 目录中编写实际代码，例如：\",\"📦 nonebot-adapter-{adapter-name} ├── 📂 nonebot │ ├── 📂 adapters │ │ ├── 📂 {adapter-name} │ │ │ ├── 📜 __init__.py │ │ │ ├── 📜 adapter.py │ │ │ ├── 📜 bot.py │ │ │ ├── 📜 config.py │ │ │ ├── 📜 event.py │ │ │ └── 📜 message.py ├── 📜 pyproject.toml └── 📜 README.md\",\"提示\",\"上述的项目结构仅作推荐，不做强制要求，保证实际可用性即可。\"]},\"1489\":{\"h\":\"使用 NB-CLI 创建项目\",\"t\":[\"我们可以使用脚手架快速创建项目：\",\"nb adapter create\",\"按照指引，输入适配器名称以及存储位置，即可创建一个带有基本结构的适配器项目。\"]},\"1490\":{\"h\":\"组成部分\",\"t\":[\"提示\",\"本章节的代码中提到的 Adapter、Bot、Event 和 Message 等，均为下文中适配器所编写的类，而非 NoneBot 中的基类。\"]},\"1491\":{\"h\":\"Log\",\"t\":[\"适配器在处理时通常需要打印日志，但直接使用 NoneBot 的默认 logger 不方便区分适配器输出和其它日志。因此我们可以使用 NoneBot 提供的 logger_wrapper 方法，自定义一个 log 函数用于快捷打印适配器日志：\",\"from nonebot.utils import logger_wrapper log = logger_wrapper(\\\"your_adapter_name\\\")\",\"这个 log 函数会在默认 logger 中添加适配器名称前缀，它接收三个参数：日志等级、日志内容以及可选的异常，具体用法如下：\",\"from .log import log log(\\\"DEBUG\\\", \\\"A DEBUG log.\\\") log(\\\"INFO\\\", \\\"A INFO log.\\\") try: ... except Exception as e: log(\\\"ERROR\\\", \\\"something error.\\\", e)\"]},\"1492\":{\"h\":\"Config\",\"t\":[\"通常适配器需要一些配置项，例如平台连接密钥等。适配器的配置方法与插件配置类似，例如：\",\"from pydantic import BaseModel class Config(BaseModel): xxx_id: str xxx_token: str\",\"配置项的读取将在下方 Adapter 中介绍。\"]},\"1493\":{\"h\":\"Adapter\",\"t\":[\"Adapter 负责转换事件、调用接口，以及正确创建 Bot 对象并注册到 NoneBot 中。在编写平台相关内容之前，我们需要继承基类，并实现适配器的基本信息：\",\"from typing import Any from typing_extensions import override from nonebot.drivers import Driver from nonebot import get_plugin_config from nonebot.adapters import Adapter as BaseAdapter from .config import Config class Adapter(BaseAdapter): @override def __init__(self, driver: Driver, **kwargs: Any): super().__init__(driver, **kwargs) # 读取适配器所需的配置项 self.adapter_config: Config = get_plugin_config(Config) @classmethod @override def get_name(cls) -> str: \\\"\\\"\\\"适配器名称\\\"\\\"\\\" return \\\"your_adapter_name\\\"\"]},\"1494\":{\"h\":\"与平台交互\",\"t\":[\"NoneBot 提供了多种 Driver 来帮助适配器进行网络通信，主要分为客户端和服务端两种类型。我们需要根据平台文档和特性选择合适的通信方式，并编写相关方法用于初始化适配器，与平台建立连接和进行交互：\"]},\"1495\":{\"h\":\"客户端通信方式\",\"t\":[\"import asyncio from typing_extensions import override from nonebot import get_plugin_config from nonebot.exception import WebSocketClosed from nonebot.drivers import Request, WebSocketClientMixin class Adapter(BaseAdapter): @override def __init__(self, driver: Driver, **kwargs: Any): super().__init__(driver, **kwargs) self.adapter_config: Config = get_plugin_config(Config) self.task: Optional[asyncio.Task] = None # 存储 ws 任务 self.setup() def setup(self) -> None: if not isinstance(self.driver, WebSocketClientMixin): # 判断用户配置的Driver类型是否符合适配器要求，不符合时应抛出异常 raise RuntimeError( f\\\"Current driver {self.config.driver} doesn't support websocket client connections!\\\" f\\\"{self.get_name()} Adapter need a WebSocket Client Driver to work.\\\" ) # 在 NoneBot 启动和关闭时进行相关操作 self.driver.on_startup(self.startup) self.driver.on_shutdown(self.shutdown) async def startup(self) -> None: \\\"\\\"\\\"定义启动时的操作，例如和平台建立连接\\\"\\\"\\\" self.task = asyncio.create_task(self._forward_ws()) # 建立 ws 连接 async def _forward_ws(self): request = Request( method=\\\"GET\\\", url=\\\"your_platform_websocket_url\\\", headers={\\\"token\\\": \\\"...\\\"}, # 鉴权请求头 ) while True: try: async with self.websocket(request) as ws: try: # 处理 websocket ... except WebSocketClosed as e: log( \\\"ERROR\\\", \\\"<r><bg #f8bbd0>WebSocket Closed</bg #f8bbd0></r>\\\", e, ) except Exception as e: log( \\\"ERROR\\\", \\\"<r><bg #f8bbd0>Error while process data from \\\" \\\"websocket platform_websocket_url. \\\" \\\"Trying to reconnect...</bg #f8bbd0></r>\\\", e, ) finally: # 这里要断开 Bot 连接 except Exception as e: # 尝试重连 log( \\\"ERROR\\\", \\\"<r><bg #f8bbd0>Error while setup websocket to \\\" \\\"platform_websocket_url. Trying to reconnect...</bg #f8bbd0></r>\\\", e, ) await asyncio.sleep(3) # 重连间隔 async def shutdown(self) -> None: \\\"\\\"\\\"定义关闭时的操作，例如停止任务、断开连接\\\"\\\"\\\" # 断开 ws 连接 if self.task is not None and not self.task.done(): self.task.cancel()\"]},\"1496\":{\"h\":\"服务端通信方式\",\"t\":[\"from nonebot import get_plugin_config from nonebot.drivers import ( Request, ASGIMixin, WebSocket, HTTPServerSetup, WebSocketServerSetup ) class Adapter(BaseAdapter): @override def __init__(self, driver: Driver, **kwargs: Any): super().__init__(driver, **kwargs) self.adapter_config: Config = get_plugin_config(Config) self.setup() def setup(self) -> None: if not isinstance(self.driver, ASGIMixin): raise RuntimeError( f\\\"Current driver {self.config.driver} doesn't support asgi server!\\\" f\\\"{self.get_name()} Adapter need a asgi server driver to work.\\\" ) # 建立服务端路由 # HTTP Webhook 路由 http_setup = HTTPServerSetup( URL(\\\"your_webhook_url\\\"), # 路由地址 \\\"POST\\\", # 接收的方法 \\\"WEBHOOK name\\\", # 路由名称 self._handle_http, # 处理函数 ) self.setup_http_server(http_setup) # 反向 Websocket 路由 ws_setup = WebSocketServerSetup( URL(\\\"your_websocket_url\\\"), # 路由地址 \\\"WebSocket name\\\", # 路由名称 self._handle_ws, # 处理函数 ) self.setup_websocket_server(ws_setup) async def _handle_http(self, request: Request) -> Response: \\\"\\\"\\\"HTTP 路由处理函数，只有一个类型为 Request 的参数，且返回值类型为 Response\\\"\\\"\\\" ... return Response( status_code=200, # 状态码 headers={\\\"something\\\": \\\"something\\\"}, # 响应头 content=\\\"xxx\\\", # 响应内容 ) async def _handle_ws(self, websocket: WebSocket) -> Any: \\\"\\\"\\\"WebSocket 路由处理函数，只有一个类型为 WebSocket 的参数\\\"\\\"\\\" ...\",\"更多通信交互方式可以参考以下适配器：\",\"OneBot - WebSocket 客户端、WebSocket 服务端、HTTP WEBHOOK、HTTP POST\",\"QQGuild - WebSocket 服务端\",\"Telegram - HTTP WEBHOOK\"]},\"1497\":{\"h\":\"建立 Bot 连接\",\"t\":[\"在与平台建立连接后，我们需要将 Bot 实例化，并调用适配器提供的的 bot_connect 方法告知 NoneBot 建立了 Bot 连接。在与平台断开连接或出现某些异常进行重连时，我们需要调用 bot_disconnect 方法告知 NoneBot 断开了 Bot 连接。\",\"from .bot import Bot class Adapter(BaseAdapter): def _handle_connect(self): bot_id = ... # 通过配置或者平台 API 等方式，获取到 Bot 的 ID bot = Bot(self, self_id=bot_id) # 实例化 Bot self.bot_connect(bot) # 建立 Bot 连接 def _handle_disconnect(self): self.bot_disconnect(bot) # 断开 Bot 连接\"]},\"1498\":{\"h\":\"转换 Event 事件\",\"t\":[\"在接收到来自平台的事件数据后，我们需要将其转为适配器的 Event，并调用 Bot 的 handle_event 方法来让 Bot 对事件进行处理：\",\"import asyncio from typing import Any, Dict from nonebot.compat import type_validate_python from .bot import Bot from .event import Event from .log import log class Adapter(BaseAdapter): @classmethod def payload_to_event(cls, payload: Dict[str, Any]) -> Event: \\\"\\\"\\\"根据平台事件的特性，转换平台 payload 为具体 Event Event 模型继承自 pydantic.BaseModel，具体请参考 pydantic 文档 \\\"\\\"\\\" # 做一层异常处理，以应对平台事件数据的变更 try: return type_validate_python(your_event_class, payload) except Exception as e: # 无法正常解析为具体 Event 时，给出日志提示 log( \\\"WARNING\\\", f\\\"Parse event error: {str(payload)}\\\", ) # 也可以尝试转为基础 Event 进行处理 return type_validate_python(Event, payload) async def _forward(self, bot: Bot): payload: Dict[str, Any] # 接收到的事件数据 event = self.payload_to_event(payload) # 让 bot 对事件进行处理 asyncio.create_task(bot.handle_event(event))\"]},\"1499\":{\"h\":\"调用平台 API\",\"t\":[\"我们需要实现 Adapter 的 _call_api 方法，使开发者能够调用平台提供的 API。如果通过 WebSocket 通信可以通过 send 方法来发送数据，如果采用 HTTP 请求，则需要通过 NoneBot 提供的 Request 对象，调用 driver 的 request 方法来发送请求。\",\"from typing import Any from typing_extensions import override from nonebot.drivers import Request, WebSocket from .bot import Bot class Adapter(BaseAdapter): @override async def _call_api(self, bot: Bot, api: str, **data: Any) -> Any: log(\\\"DEBUG\\\", f\\\"Calling API <y>{api}</y>\\\") # 给予日志提示 platform_data = your_handle_data_method(data) # 自行将数据转为平台所需要的格式 # 采用 HTTP 请求的方式，需要构造一个 Request 对象 request = Request( method=\\\"GET\\\", # 请求方法 url=api, # 接口地址 headers=..., # 请求头，通常需要包含鉴权信息 params=platform_data, # 自行处理数据的传输形式 # json=platform_data, # data=platform_data, ) # 发送请求，返回结果 return await self.driver.request(request) # 采用 WebSocket 通信的方式，可以直接调用 send 方法发送数据 # 通过某种方式获取到 bot 对应的 websocket 对象 ws: WebSocket = your_get_websocket_method(bot.self_id) await ws.send_text(platform_data) # 发送 str 类型的数据 await ws.send_bytes(platform_data) # 发送 bytes 类型的数据 await ws.send(platform_data) # 是以上两种方式的合体 # 接收并返回结果，同样的，也有 str 和 bytes 的区别 return await ws.receive_text() return await ws.receive_bytes() return await ws.receive()\",\"调用平台 API 实现方式具体可以参考以下适配器：\",\"Websocket:\",\"OneBot V11\",\"OneBot V12\",\"HTTP:\",\"QQ 频道\",\"Telegram\",\"飞书\"]},\"1500\":{\"h\":\"Bot\",\"t\":[\"Bot 是机器人开发者能够直接获取并使用的核心对象，负责存储平台机器人相关信息，并提供回复事件、调用 API 的上层方法。我们需要继承基类 Bot，并实现相关方法：\",\"from typing import TYPE_CHECKING, Any, Union from typing_extensions import override from nonebot.message import handle_event from nonebot.adapters import Bot as BaseBot from .event import Event from .message import Message, MessageSegment if TYPE_CHECKING: from .adapter import Adapter class Bot(BaseBot): \\\"\\\"\\\" your_adapter_name 协议 Bot 适配。 \\\"\\\"\\\" @override def __init__(self, adapter: Adapter, self_id: str, **kwargs: Any): super().__init__(adapter, self_id) self.adapter: Adapter = adapter # 一些有关 Bot 的信息也可以在此定义和存储 async def handle_event(self, event: Event): # 根据需要，对事件进行某些预处理，例如： # 检查事件是否和机器人有关操作，去除事件消息首尾的 @bot # 检查事件是否有回复消息，调用平台 API 获取原始消息的消息内容 ... # 调用 handle_event 让 NoneBot 对事件进行处理 await handle_event(self, event) @override async def send( self, event: Event, message: Union[str, Message, MessageSegment], **kwargs: Any, ) -> Any: # 根据平台实现 Bot 回复事件的方法 # 将消息处理为平台所需的格式后，调用发送消息接口进行发送，例如： data = message_to_platform_data(message) await self.send_message( data=data, ... )\"]},\"1501\":{\"h\":\"Event\",\"t\":[\"Event 是 NoneBot 中的事件主体对象，所有平台消息在进入处理流程前需要转换为 NoneBot 事件。我们需要继承基类 Event，并实现相关方法：\",\"from typing_extensions import override from nonebot.compat import model_dump from nonebot.adapters import Event as BaseEvent class Event(BaseEvent): @override def get_event_name(self) -> str: # 返回事件的名称，用于日志打印 return \\\"event name\\\" @override def get_event_description(self) -> str: # 返回事件的描述，用于日志打印，请注意转义 loguru tag return escape_tag(repr(model_dump(self))) @override def get_message(self): # 获取事件消息的方法，根据事件具体实现，如果事件非消息类型事件，则抛出异常 raise ValueError(\\\"Event has no message!\\\") @override def get_user_id(self) -> str: # 获取用户 ID 的方法，根据事件具体实现，如果事件没有用户 ID，则抛出异常 raise ValueError(\\\"Event has no context!\\\") @override def get_session_id(self) -> str: # 获取事件会话 ID 的方法，根据事件具体实现，如果事件没有相关 ID，则抛出异常 raise ValueError(\\\"Event has no context!\\\") @override def is_tome(self) -> bool: # 判断事件是否和机器人有关 return False\",\"然后根据平台消息的类型，编写各种不同的事件，并且注意要根据事件类型实现 get_type 方法，具体请参考事件类型。消息类型事件还应重写 get_message 和 get_user_id 等方法，例如：\",\"from .message import Message class HeartbeatEvent(Event): \\\"\\\"\\\"心跳时间，通常为元事件\\\"\\\"\\\" @override def get_type(self) -> str: return \\\"meta_event\\\" class MessageEvent(Event): \\\"\\\"\\\"消息事件\\\"\\\"\\\" message_id: str user_id: str @override def get_type(self) -> str: return \\\"message\\\" @override def get_message(self) -> Message: # 返回事件消息对应的 NoneBot Message 对象 return self.message @override def get_user_id(self) -> str: return self.user_id class JoinRoomEvent(Event): \\\"\\\"\\\"加入房间事件，通常为通知事件\\\"\\\"\\\" user_id: str room_id: str @override def get_type(self) -> str: return \\\"notice\\\" class ApplyAddFriendEvent(Event): \\\"\\\"\\\"申请添加好友事件，通常为请求事件\\\"\\\"\\\" user_id: str @override def get_type(self) -> str: return \\\"request\\\"\"]},\"1502\":{\"h\":\"Message\",\"t\":[\"Message 负责正确序列化消息，以便机器人插件处理。我们需要继承 MessageSegment 和 Message 两个类，并实现相关方法：\",\"from typing import Type, Iterable from typing_extensions import override from nonebot.utils import escape_tag from nonebot.adapters import Message as BaseMessage from nonebot.adapters import MessageSegment as BaseMessageSegment class MessageSegment(BaseMessageSegment[\\\"Message\\\"]): @classmethod @override def get_message_class(cls) -> Type[\\\"Message\\\"]: # 返回适配器的 Message 类型本身 return Message @override def __str__(self) -> str: # 返回该消息段的纯文本表现形式，通常在日志中展示 return \\\"text of MessageSegment\\\" @override def is_text(self) -> bool: # 判断该消息段是否为纯文本 return self.type == \\\"text\\\" class Message(BaseMessage[MessageSegment]): @classmethod @override def get_segment_class(cls) -> Type[MessageSegment]: # 返回适配器的 MessageSegment 类型本身 return MessageSegment @staticmethod @override def _construct(msg: str) -> Iterable[MessageSegment]: # 实现从字符串中构造消息数组，如无字符串嵌入格式可直接返回文本类型 MessageSegment ...\",\"然后根据平台具体的消息类型，来实现各种 MessageSegment 消息段，具体可以参考以下适配器：\",\"OneBot\",\"QQGuild\",\"Telegram\"]},\"1503\":{\"h\":\"适配器测试\",\"t\":[\"关于适配器测试相关内容在这里不再展开，开发者可以根据需要进行合适的测试。这里为开发者提供几个常见问题的解决方法：\",\"在测试中无法导入 editable 模式安装的适配器代码。在 pytest 的 conftest.py 内添加如下代码：\",\"from pathlib import Path import nonebot.adapters nonebot.adapters.__path__.append( # type: ignore str((Path(__file__).parent.parent / \\\"nonebot\\\" / \\\"adapters\\\").resolve()) )\",\"需要计算适配器测试覆盖率，请在 pyproject.toml 中添加 pytest 配置：\",\"[tool.pytest.ini_options] addopts = \\\"--cov nonebot/adapters/{adapter-name} --cov-report term-missing\\\"\"]},\"1504\":{\"h\":\"后续工作\",\"t\":[\"在完成适配器代码的编写后，如果想要将适配器发布到 NoneBot 商店，我们需要将适配器发布到 PyPI 中，然后前往商店页面，切换到适配器页签，点击发布适配器按钮，填写适配器相关信息并提交。\",\"另外建议编写适配器文档或者一些插件开发示例，以便其他开发者使用我们的适配器。\"]},\"1505\":{\"h\":\"暑期 2021\",\"t\":[\"开源软件供应链点亮计划 - 暑期 2021 是中国科学院软件研究所与 openEuler 社区共同举办的一项面向高校学生的暑期活动，旨在鼓励在校学生积极参与开源软件的开发维护，促进优秀开源软件社区的蓬勃发展。关于具体的活动规划、报名方式，请查看该活动的 官网 和 帮助文档。\",\"NoneBot 社区有幸作为开源社区参与了本次活动，下面列出了目前我们已经发布的项目，欢迎感兴趣的同学在上面给出的活动官网报名，或通过 contact@nonebot.dev 联系我们。\"]},\"1506\":{\"h\":\"NoneBot v1\"},\"1507\":{\"h\":\"更新 NoneBot v1 文档中的“指南”部分\",\"t\":[\"由于 NoneBot v1 和 aiocqhttp 最初基于的 QQ 机器人平台不再提供服务，CQHTTP 接口也转型且改名为 OneBot 标准，目前 NoneBot v1 文档的“指南”部分和 aiocqhttp 文档有部分过时内容需要更新。我们希望将其中与旧的机器人平台相关的内容改为基于 go-cqhttp 或通用的 OneBot 表述，同时对 NoneBot v1 的 awesome-bot 示例做一次全面检查，修改其中可能已经不可用的部分。\",\"难度：低\",\"导师：@cleoold\",\"产出要求\",\"修改“指南”文档和 aiocqhttp 文档中与旧的 QQ 机器人平台相关的部分\",\"检查 awesome-bot 示例是否有已经过时/不可用的地方，并更新/修复\",\"修改“图灵机器人”案例，使用其它 AI 聊天 API 提供商（需先做简单调研）\",\"技术要求\",\"熟悉 Python 编程语言及 asyncio 机制\",\"了解 Git 基本用法\",\"了解聊天机器人基本开发过程\",\"了解 VuePress 更佳\"]},\"1508\":{\"h\":\"NoneBot v1 API 文档自动生成\",\"t\":[\"目前 NoneBot v1 的文档中“API”部分是手动编写的，在更新代码接口的同时需要手动更新文档，可能造成文档与代码不匹配，形成额外的维护成本。我们希望将 API 文档改为直接编写在 Python docstring 中，通过工具自动生成 API 文档。\",\"难度：中\",\"导师：@cleoold\",\"产出要求\",\"调研市面上常见的 Python API 文档生成工具\",\"在代码中补充 API 文档\",\"编写或应用开源工具自动生成 API 文档\",\"配置 GitHub Actions 或其它 CI 自动化构建和部署 API 文档\",\"技术要求\",\"熟悉 Python 编程语言及 asyncio 和 Type Hints\",\"了解 Git 基本用法\",\"了解 Sphinx 等文档生成工具更佳\",\"了解 GitHub Actions 等 CI 工具更佳\"]},\"1509\":{\"h\":\"NoneBot v2\"},\"1510\":{\"h\":\"NoneBot v2 自动化测试框架“NoneBug”\",\"t\":[\"在聊天机器人的开发过程中，一套自动化的测试机制是非常重要的，特别是对于 NoneBot 2 这类为大型机器人开发而设计的项目来说，需要手动测试每一个边际条件是非常痛苦的。我们希望能够开发一款基于 NoneBot 2 插件机制的自动化测试框架，为 NoneBot 2 用户提供一套易用便捷、高度灵活的自动化测试框架。\",\"难度：高\",\"导师：@yanyongyu\",\"产出要求\",\"调研现有的 Python 和其它语言集成测试框架\",\"设计 NoneBug 的用户 API 和实现方式\",\"实现 NoneBug 自动化测试框架\",\"编写详细的使用文档\",\"技术要求\",\"熟悉 Python 编程语言及 asyncio 和 Type Hints\",\"了解 Git 基本用法\",\"了解 NoneBot v2 的基本原理和使用方式\",\"了解主流的 Python 自动化测试框架\"]},\"1511\":{\"h\":\"NoneBot v2 Telegram 适配器\",\"t\":[\"目前 NoneBot v2 已支持 OneBot、Mirai HTTP API、钉钉协议，社区反馈有更多的平台需求，希望能在 NoneBot v2 获得更多的跨平台支持，提高机器人的便携性。同时，我们也希望随着新平台加入，提升现有 NoneBot v2 核心代码的平台通用性。Telegram 是一款较为广泛使用的安全即时聊天软件，同时其官方提供了丰富的聊天机器人 API，因此我们希望为 NoneBot v2 编写一个 Telegram 适配器来支持 Telegram 机器人的开发。\",\"难度：中\",\"导师：@yanyongyu\",\"产出要求\",\"调研 Telegram Bot API 以及 WebHook 等官方接口\",\"编写 Telegram 适配器并能够使用\",\"代码遵守项目 Contributing 规范\",\"技术要求\",\"熟悉 Python 编程语言及 asyncio 和 Type Hints\",\"了解 Git 基本用法\",\"了解 Web 开发相关知识\",\"了解 Sphinx 等文档生成工具更佳\"]},\"1512\":{\"h\":\"NoneBot v2 飞书适配器\",\"t\":[\"目前 NoneBot v2 已支持 OneBot、Mirai HTTP API、钉钉协议，社区反馈有更多的平台需求，希望能在 NoneBot v2 获得更多的跨平台支持，提高机器人的便携性。同时，我们也希望随着新平台加入，提升现有 NoneBot v2 核心代码的平台通用性。飞书是目前企业用户广泛使用的即时聊天和协作软件，其官方提供了丰富的聊天机器人 API，因此我们希望为 NoneBot v2 编写一个飞书适配器来支持飞书机器人的开发。\",\"难度：中\",\"导师：@yanyongyu\",\"产出要求\",\"调研飞书机器人 API 以及 WebHook 等官方接口\",\"编写飞书适配器并能够使用\",\"代码遵守项目 Contributing 规范\",\"技术要求\",\"熟悉 Python 编程语言及 asyncio 和 Type Hints\",\"了解 Git 基本用法\",\"了解 Web 开发相关知识\",\"了解 Sphinx 等文档生成工具更佳\"]},\"1513\":{\"h\":\"OneBot\"},\"1514\":{\"h\":\"设计 OneBot v12 接口标准\",\"t\":[\"目前的 OneBot 标准的 v11 版本仍然与 QQ 平台有较多耦合，我们希望在 v12 去掉与 QQ 耦合的历史包袱，形成一个通用的、可扩展的、易于使用的同时易于实现的聊天机器人接口标准。\",\"难度：中\",\"导师：@richardchien\",\"产出要求\",\"调研各聊天机器人平台的官方/非官方接口特点\",\"通用化 OneBot 核心 API，分离 QQ 特定的 API，去掉无用 API\",\"优化现有的通信、消息表示机制\",\"补充 QQ 特定的缺失 API\",\"文档需符合风格指南\",\"技术要求\",\"熟悉至少两个聊天平台的聊天机器人开发\",\"了解 Git 基本用法\",\"了解使用不同语言编写聊天机器人时的常用实践\",\"对文档的优雅性与美观性有追求更佳\"]},\"1515\":{\"h\":\"实现 Rust 版 libonebot\",\"t\":[\"目前最常用的 OneBot 实现包括 go-cqhttp、onebot-kotlin、node-onebot 等，这些实现都各自重复实现了 Web 通信、消息解析、配置读写等功能，当社区中的开发者想针对一个新的聊天平台实现 OneBot 时，他们往往同样需要再次实现类似逻辑。我们希望使用 Rust 编写一个 libonebot 模块，该模块实现所有 OneBot 实现所共享的功能，从而方便其他开发者们使用 Rust 快速编写具体的 OneBot 实现。同时，我们希望借此项目在聊天机器人社区中推广 Rust 编程语言。\",\"注：这里的逻辑是 libonebot + 针对某聊天平台的对接代码 = 某聊天平台的 OneBot 实现，libonebot 要做的是让 OneBot 实现的开发者只需编写针对特定聊天平台的对接代码，而无需关心 OneBot 标准定义的通信方式、消息格式等。\",\"难度：高\",\"导师：@richardchien\",\"产出要求\",\"实现所有 OneBot 实现所共享的功能，包括 Web 通信、消息解析、配置读写等\",\"充分考虑同时兼容 OneBot v11 和 v12 接口\",\"能够根据用户（OneBot 实现的开发者）所实现的接口自动实现类似 get_available_apis 等接口\",\"编写详细的使用文档\",\"如果可能，与 v12 设计项目联动，实现第一手 v12 支持\",\"技术要求\",\"熟悉聊天机器人开发\",\"熟悉 Rust Web 开发\"]},\"1516\":{\"h\":\"实现自选语言版 libonebot\",\"t\":[\"目前最常用的 OneBot 实现包括 go-cqhttp、onebot-kotlin、node-onebot 等，这些实现都各自重复实现了 Web 通信、消息解析、配置读写等功能，当社区中的开发者想针对一个新的聊天平台实现 OneBot 时，他们往往同样需要再次实现类似逻辑。我们希望使用 Python、Go、Kotlin、Node、PHP、C#.NET 等主流语言（任选一个）编写 libonebot 模块，该模块实现所有 OneBot 实现所共享的功能，从而方便其他开发者们使用对应语言快速编写具体的 OneBot 实现。\",\"注：这里的逻辑是 libonebot + 针对某聊天平台的对接代码 = 某聊天平台的 OneBot 实现，libonebot 要做的是让 OneBot 实现的开发者只需编写针对特定聊天平台的对接代码，而无需关心 OneBot 标准定义的通信方式、消息格式等。\",\"难度：中\",\"导师：@richardchien\",\"产出要求\",\"实现所有 OneBot 实现所共享的功能，包括 Web 通信、消息解析、配置读写等\",\"充分考虑同时兼容 OneBot v11 和 v12 接口\",\"编写详细的使用文档\",\"如果可能，实现更多附加特性，如根据用户（OneBot 实现的开发者）所实现的接口自动实现类似 get_available_apis 等接口、实现第一手 v12 支持等\",\"技术要求\",\"熟悉聊天机器人开发\",\"熟悉所选语言的 Web 开发\"]},\"1517\":{\"h\":\"暑期 2022\",\"t\":[\"开源之夏 - 暑期 2022 是由开源软件供应链点亮计划发起、由中国科学院软件研究所与 openEuler 社区主办的一项面向高校学生的暑期活动，类似 Google Summer of Code（GSoC），旨在鼓励在校学生积极参与开源软件的开发维护，促进优秀开源软件社区的蓬勃发展。关于具体的活动规划、报名方式，请查看该活动的 官网 和 帮助文档。\",\"NoneBot 社区有幸作为开源社区 参与 了本次活动，下面列出了目前我们已经发布的项目，欢迎感兴趣的同学加入 QQ 群 737131827 或通过 contact@nonebot.dev 联系我们。\"]},\"1518\":{\"h\":\"NoneBot2 命令行 CLI 交互体验升级\",\"t\":[\"NoneBot2 为用户提供了命令行脚手架 ──nb-cli，辅助用户更好地上手项目以及进行开发。nb-cli 主要包括：创建项目、运行项目、安装与卸载插件、部署项目等功能。随着 NoneBot2 Beta 版本的发布，脚手架功能存在一定的定位不明确、功能体验不佳。本项目旨在重新设计 nb-cli 功能框架，完善功能，优化用户体验。\",\"难度：进阶\",\"导师：@yanyongyu\",\"产出要求\",\"设计 nb-cli 功能框架 \",\"明确各功能模块\",\"设计用户交互模式\",\"完成 nb-cli 主要功能代码 \",\"项目管理\",\"插件管理\",\"其它\",\"同步更新使用文档\",\"技术要求\",\"熟悉 Python 命令行交互代码编写\",\"熟悉 NoneBot2 框架功能\",\"熟悉 NoneBot2 项目组织方式\",\"成果仓库\",\"https://github.com/nonebot/nb-cli\",\"https://github.com/nonebot/nonebot2\"]},\"1519\":{\"h\":\"NoneBot2 命令行即时交互通信设计与实现\",\"t\":[\"NoneBot2 在早期提供了基于网页的 nonebot-plugin-test 插件，无需平台适配接入即可对机器人进行测试，方便了开发者直观的感受机器人文本交互功能。我们希望提供一款基于命令行的适配器/驱动器，用于无平台适配接入、可以运行机器人的场景进行功能体验或测试。\",\"难度：进阶\",\"导师：@mnixry\",\"产出要求\",\"设计命令行与 NoneBot2 通信模式 \",\"直接调用/HTTP/WebSocket\",\"设计命令行交互界面\",\"实现相应适配器/驱动器\",\"同步更新使用说明文档\",\"技术要求\",\"熟悉 Python 命令行交互代码编写\",\"熟悉 NoneBot2 框架功能\",\"熟悉 NoneBot2 项目组织方式\",\"成果仓库\",\"https://github.com/nonebot/adapter-console\"]},\"1520\":{\"h\":\"NoneBot2 用户上手与深入教程设计\",\"t\":[\"NoneBot2 为用户提供了详细的文档介绍，辅助用户更好的上手项目以及进行开发。文档分为基础与进阶两个部分。基础部分帮助新用户快速上手开发，主要包括：安装 NoneBot2、使用脚手架、创建配置项目、使用适配器、加载插件、定义消息事件、处理消息事件、调用平台 API 等。进阶部分向已经熟悉开发流程的用户介绍更多高级技巧，主要包括：NoneBot2 工作原理、定时任务、权限控制、钩子函数、跨插件访问、单元测试、发布插件等。目前文档对于用户而言过于费解，导致用户难以理解 NoneBot2 开发。本项目旨在优化文档内容，使其更加通俗易懂，不让文档成为用户上手的阻碍，同时完善进阶内容，让有更复杂需求的用户，同样能从文档中受益。\",\"相关 issue：\",\"https://github.com/nonebot/nonebot2/issues/793\",\"https://github.com/nonebot/nonebot2/issues/295\",\"难度：进阶\",\"导师：@SK-415\",\"产出要求\",\"文档通俗易懂 \",\"附有适当的图片指引（如 asciinema）\",\"内容完整，由浅入深\",\"适当的界面美化，合理分配布局\",\"技术要求\",\"熟悉文档结构组织与语言表达\",\"熟悉 NoneBot2 框架功能\",\"熟悉 NoneBot2 项目组织方式\",\"成果仓库\",\"https://github.com/nonebot/nonebot2\"]},\"1521\":{\"h\":\"暑期 2023\",\"t\":[\"开源之夏 - 暑期 2023 是由开源软件供应链点亮计划发起、由中国科学院软件研究所与 openEuler 社区主办的一项面向高校学生的暑期活动，类似 Google Summer of Code（GSoC），旨在鼓励在校学生积极参与开源软件的开发维护，促进优秀开源软件社区的蓬勃发展。关于具体的活动规划、报名方式，请查看该活动的 官网 和 帮助文档。\",\"NoneBot 社区有幸作为开源社区 参与 了本次活动，下面列出了目前我们已经发布的项目，欢迎感兴趣的同学通过 contact@nonebot.dev 联系我们。\"]},\"1522\":{\"h\":\"NoneBot 项目管理图形化面板\",\"t\":[\"NoneBot 目前提供了开箱即用的命令行脚手架来帮助初次使用的用户更快的上手编写应用。但是，对于未有一定开发经验的用户，命令行的使用仍具有一定的困难。此外，其他项目如 koishi、vue 等，均可通过图形化界面的形式为用户提供更便捷的项目开发。因此，我们希望借助现有命令行脚手架的可扩展特性，提供一个项目管理面板服务，以网页的形式帮助用户开发 NoneBot 应用。\",\"难度：进阶\",\"导师：@mnixry\",\"产出要求\",\"设计并实现项目管理面板相关功能 \",\"创建与管理项目\",\"配置与运行项目\",\"NoneBot 插件管理\",\"实现相应 nb-cli 插件提供面板服务\",\"代码符合 NoneBot Contributing 规范\",\"技术要求\",\"熟悉 nb-cli 相关功能\",\"熟悉 NoneBot 框架功能\",\"熟悉前后端相关实现方式\",\"成果仓库\",\"https://github.com/nonebot/cli-plugin-webui\"]},\"1523\":{\"h\":\"NoneBot Discord 适配器\",\"t\":[\"NoneBot 作为一个跨平台聊天机器人框架，目前已有 OneBot、飞书、Telegram、QQ 频道等诸多平台的适配支持。作为众多用户期待的平台适配之一，我们希望借此机会接入 Discord 聊天机器人。\",\"难度：进阶\",\"导师：@iyume\",\"产出要求\",\"调研 Discord Bot 相关功能与接口\",\"设计与编写 NoneBot Discord 适配器\",\"代码符合 NoneBot Contributing 规范\",\"技术要求\",\"熟悉 NoneBot 框架功能\",\"熟悉 NoneBot 各模块职责与适配器编写\",\"成果仓库\",\"https://github.com/nonebot/adapter-discord\"]},\"1524\":{\"h\":\"NoneBot 数据库支持插件\",\"t\":[\"NoneBot 的插件系统为用户实现应用提供了极高的便捷性，但因此也增加了插件统一管理的难度。目前，我们发现许多用户发布的插件中存在文件存储结构化数据、数据存放散乱等现象，同时插件间也可能产生冲突。因此，我们希望提供一个统一的数据存储与管理方式，便于用户读写应用数据。\",\"难度：进阶\",\"导师：@yanyongyu\",\"产出要求\",\"设计并实现 ORM 插件 \",\"提供关系模型定义功能\",\"提供模型迁移与管理功能\",\"能较好的支持 Python 类型检查与推导\",\"编写相应的用户使用文档\",\"代码符合 NoneBot Contributing 规范\",\"技术要求\",\"熟悉 NoneBot 框架功能与插件编写\",\"熟悉 SQLAlchemy 等 ORM 框架 \",\"熟悉 SQLAlchemy ORM\",\"熟悉 alembic 等迁移工具\",\"熟悉 nb-cli 插件编写\",\"成果仓库\",\"https://github.com/nonebot/plugin-orm\"]},\"1525\":{\"h\":\"暑期 2024\",\"t\":[\"开源之夏 - 暑期 2024 是中国科学院软件研究所发起的开源软件供应链点亮计划系列暑期活动，旨在鼓励高校学生积极参与开源软件的开发维护，促进优秀开源软件社区的蓬勃发展。活动联合各大开源社区，针对重要开源软件的开发与维护提供项目开发任务，并向全球高校学生开放报名。关于具体的活动规划、报名方式，请查看该活动的 官网 和 帮助文档。\",\"NoneBot 社区有幸作为开源社区 参与 了本次活动，下面列出了目前我们已经发布的项目，欢迎感兴趣的同学通过 contact@nonebot.dev 联系我们。\"]},\"1526\":{\"h\":\"NonePress 官网组件库更新与优化\",\"t\":[\"NoneBot 官网目前采用基于 TailwindCSS 自研的 NonePress 组件库及 Docusaurus 框架进行构建。由于相关依赖版本迭代迅速，目前官网组件库已产生了较大的版本落后。本项目希望在跟进框架新版本的基础上，对文档整体视觉体验进行重新设计，提升页面的无障碍访问性，基于 React Hydrate 特性实现完整的静态网站生成（SSG）以提升搜索引擎优化（SEO）水平。在解决以上问题的基础上，可对网页的开发以及生产构建性能做相应的优化提升，例如在生产构建使用自有的 webpack loader、替换现有的热重载逻辑以减少开发环境启动耗时等。\",\"难度：进阶\",\"导师：@yanyongyu\",\"产出要求\",\"基于 Docusaurus v3 重构 NonePress 组件库及相关插件 \",\"升级相关依赖并重新打造 Docusaurus theme（布局与组件）\",\"根据需求实现/修改 Docusaurus 插件使得官网内容构建正常\",\"能够提升页面渲染性能与 MDX 相关能力\",\"升级官网采用新版组件库 \",\"Algolia 索引与 SEO 正常\",\"桌面端与移动端显示正常\",\"优化官网开发与生产构建体验\",\"（可选）优化官网部分页面 \",\"优化官网过长的 changelog\",\"优化官网插件商店的展示细节\",\"技术要求\",\"熟练掌握 TS、PostCSS、TSX、MDX等相关技术\",\"掌握 React、Docusaurus、tailwind css 等框架\",\"熟悉静态网站生成 SSG、SEO 优化与 Algolia 索引原理等\",\"成果仓库\",\"https://github.com/nonebot/docusaurus-theme-nonepress\"]},\"1527\":{\"h\":\"NoneFlow 社区自动化工作流管理优化\",\"t\":[\"NoneFlow 在 NoneBot 社区中承担着重要的角色，它由 NoneBot 框架基于 GitHub APP 编写而成，能够自动化的完成许多复杂流程的处理，如：用户请求提交插件到商店时进行自动化检测，并在人工审核通过后自动存储至 registry；定时自动更新 registry 内插件信息，跟进插件新版本情况等。但是，在长期的使用中发现了一些问题和不足的地方，例如：项目本身结构复杂耦合，添加新自动化流程与维护现有流程困难；目前采用了 GitHub 用户名作为插件作者名，但已有不少插件作者改名；插件存储至 registry 并定时更新，缺少统计相关信息以帮助商店更好的展示当前插件状态；插件作者想要修改插件信息时无法便捷的找到操作方式等。本项目希望针对以上问题与不足的地方进行修复与优化，提升用户体验。\",\"难度：进阶\",\"导师：@uy/sun\",\"产出要求\",\"重构现有工作流处理结构 \",\"整合现有 Issue、Pull Request、Git 相关操作\",\"提供用户修改信息的处理方式\",\"正确处理 PR 的 Open、Close、Draft 状态\",\"修复流程中存在的问题 \",\"插件作者名正确展示\",\"registry 定时更新中需要插件测试环境隔离\",\"在 registry 定时更新的同时提供统计数据\",\"技术要求\",\"掌握 GitHub APP 开发 \",\"熟悉 GitHub REST API、GraphQL 等\",\"熟悉 GitHub APP 权限限制\",\"熟悉 NoneBot 框架与 Python 相关技术\",\"熟悉 Git、GitHub Action、GitHub 工作流\",\"成果仓库\",\"https://github.com/nonebot/noneflow\"]},\"1528\":{\"h\":\"NoneBlockly 低代码框架开发\",\"t\":[\"经过深入分析社区反馈，我们发现部分新手因不熟悉编程概念或框架本身而遇到问题。为了解决初学者在使用面向开发者的聊天机器人框架 NoneBot 时遇到的挑战，我们计划引入 Blockly 提供低代码编程支持。通过减少常见的编码错误和降低入门门槛，使框架对初学者更加友好，从而提升用户体验并有助于 NoneBot 生态的成长。本项目将基于 Blockly 实现 NoneBot 插件的低代码编写，使得用户能够快速搭建聊天机器人。\",\"难度：进阶\",\"导师：@mnixry\",\"产出要求\",\"实现 NoneBlockly 低代码开发框架 \",\"能够基于 Alconna 编写跨平台插件\",\"确保插件对 Python 和 NoneBot 版本的兼容性\",\"支持对多种类型 NoneBot 事件的响应\",\"支持对 NoneBot 消息对象的便捷操作\",\"集成 localstore 文件存储、apscheduler 定时任务、网络请求等常用功能\",\"对接 NB-CLI 脚手架，通过脚手架扩展使用低代码框架\",\"技术要求\",\"掌握 Python 与 NoneBot 框架的使用 \",\"熟悉 NoneBot 插件的开发，包括事件响应与消息处理等\",\"熟悉 NoneBot 生态组件（Alconna、localstore、apscheduler等）的使用\",\"了解 NB-CLI 脚手架的扩展开发\",\"熟悉 Blockly 低代码框架的使用和开发\",\"成果仓库\",\"https://github.com/nonebot/noneblockly\"]},\"1529\":{\"h\":\"手动创建项目\",\"t\":[\"在快速上手中，我们已经介绍了如何安装和使用 nb-cli 创建一个项目。在本章节中，我们将简要介绍如何在不使用 nb-cli 的方式创建一个机器人项目的最小实例并启动。如果你想要了解 NoneBot 的启动流程，也可以阅读本章节。\",\"警告\",\"我们十分不推荐直接创建机器人项目，请优先考虑使用 nb-cli 进行项目创建。\",\"一个机器人项目的最小实例中至少需要包含以下内容:\",\"入口文件：初始化并运行机器人的 Python 文件\",\"配置文件：存储机器人启动所需的配置\",\"插件：为机器人提供具体的功能\",\"下面我们创建一个项目文件夹，来存放项目所需文件，以下步骤均在该文件夹中进行。\"]},\"1530\":{\"h\":\"安装依赖\",\"t\":[\"在创建项目前，我们首先需要将项目所需依赖安装至环境中。\",\"（可选）创建虚拟环境，以 venv 为例\",\"python -m venv .venv --prompt nonebot2 # windows .venv\\\\Scripts\\\\activate # linux/macOS source .venv/bin/activate\",\"安装 nonebot2 以及驱动器\",\"pip install 'nonebot2[fastapi]'\",\"驱动器包名可以在 驱动器商店 中找到。\",\"安装适配器\",\"pip install nonebot-adapter-console\",\"适配器包名可以在 适配器商店 中找到。\"]},\"1531\":{\"h\":\"创建配置文件\",\"t\":[\"配置文件用于存放 NoneBot 运行所需要的配置项，使用 pydantic 以及 python-dotenv 来读取配置。配置项需符合 dotenv 格式，复杂类型数据需使用 JSON 格式填写。具体可选配置方式以及配置项详情参考配置。\",\"在项目文件夹中创建一个 .env 文本文件，并写入以下内容:\",\"HOST=0.0.0.0 # 配置 NoneBot 监听的 IP / 主机名 PORT=8080 # 配置 NoneBot 监听的端口 COMMAND_START=[\\\"/\\\"] # 配置命令起始字符 COMMAND_SEP=[\\\".\\\"] # 配置命令分割字符\"]},\"1532\":{\"h\":\"创建入口文件\",\"t\":[\"入口文件（ Entrypoint ）顾名思义，是用来初始化并运行机器人的 Python 文件。入口文件需要完成框架的初始化、注册适配器、加载插件等工作。\",\"提示\",\"如果你使用 nb-cli 创建项目，入口文件不会被创建，该文件功能会被 nb run 命令代替。\",\"在项目文件夹中创建一个 bot.py 文件，并写入以下内容:\",\"import nonebot from nonebot.adapters.console import Adapter as ConsoleAdapter # 避免重复命名 # 初始化 NoneBot nonebot.init() # 注册适配器 driver = nonebot.get_driver() driver.register_adapter(ConsoleAdapter) # 在这里加载插件 nonebot.load_builtin_plugins(\\\"echo\\\") # 内置插件 # nonebot.load_plugin(\\\"thirdparty_plugin\\\") # 第三方插件 # nonebot.load_plugins(\\\"awesome_bot/plugins\\\") # 本地插件 if __name__ == \\\"__main__\\\": nonebot.run()\",\"我们暂时不需要了解其中内容的含义，这些将会在稍后的章节中逐一介绍。在创建完成以上文件并确认已安装所需适配器和插件后，即可运行机器人。\"]},\"1533\":{\"h\":\"运行机器人\",\"t\":[\"在项目文件夹中，使用配置好环境的 Python 解释器运行入口文件（如果使用虚拟环境，请先激活虚拟环境）:\",\"python bot.py\",\"如果你后续使用了 nb-cli ，你仍可以使用 nb run 命令来运行机器人，nb-cli 会自动检测入口文件 bot.py 是否存在并运行。同时，你也可以使用 nb run --reload 来自动检测代码的更改并自动重新运行入口文件。\"]},\"1534\":{\"h\":\"插件编写准备\",\"t\":[\"在正式编写插件之前，我们需要先了解一下插件的概念。\"]},\"1535\":{\"h\":\"插件结构\",\"t\":[\"在 NoneBot 中，插件即是 Python 的一个模块（module）。NoneBot 会在导入时对这些模块做一些特殊的处理使得他们成为一个插件。插件间应尽量减少耦合，可以进行有限制的相互调用，NoneBot 能够正确解析插件间的依赖关系。\"]},\"1536\":{\"h\":\"单文件插件\",\"t\":[\"一个普通的 .py 文件即可以作为一个插件，例如创建一个 foo.py 文件：\",\"📂 plugins └── 📜 foo.py\",\"这个时候模块 foo 已经可以被称为一个插件了，尽管它还什么都没做。\"]},\"1537\":{\"h\":\"包插件\",\"t\":[\"一个包含 __init__.py 的文件夹即是一个常规 Python 包 package，例如创建一个 foo 文件夹：\",\"📂 plugins └── 📂 foo └── 📜 __init__.py\",\"这个时候包 foo 同样是一个合法的插件，插件内容可以在 __init__.py 文件中编写。\"]},\"1538\":{\"h\":\"创建插件\",\"t\":[\"注意\",\"如果在之前的快速上手章节中已经使用 bootstrap 模板创建了项目，那么你需要做出如下修改：\",\"在项目目录中创建一个两层文件夹 awesome_bot/plugins\",\"📦 awesome-bot ├── 📂 awesome_bot │ └── 📂 plugins ├── 📜 pyproject.toml └── 📜 README.md\",\"修改 pyproject.toml 文件中的 nonebot 配置项，在 plugin_dirs 中添加 awesome_bot/plugins\",\"[tool.nonebot] plugin_dirs = [\\\"awesome_bot/plugins\\\"]\",\"注意\",\"如果在之前的创建项目章节中手动创建了相关文件，那么你需要做出如下修改：\",\"在项目目录中创建一个两层文件夹 awesome_bot/plugins\",\"📦 awesome-bot ├── 📂 awesome_bot │ └── 📂 plugins └── 📜 bot.py\",\"修改 bot.py 文件中的加载插件部分，取消注释或者添加如下代码\",\"# 在这里加载插件 nonebot.load_builtin_plugins(\\\"echo\\\") # 内置插件 nonebot.load_plugins(\\\"awesome_bot/plugins\\\") # 本地插件\",\"创建插件可以通过 nb-cli 命令从完整模板创建，也可以手动新建空白文件。通过以下命令创建一个名为 weather 的插件：\",\"$ nb plugin create [?] 插件名称: weather [?] 使用嵌套插件? (y/N) N [?] 输出目录: awesome_bot/plugins\",\"nb-cli 会在 awesome_bot/plugins 目录下创建一个名为 weather 的文件夹，其中包含的文件将在稍后章节中用到。\",\"📦 awesome-bot ├── 📂 awesome_bot │ └── 📂 plugins | └── 📂 foo | ├── 📜 __init__.py | └── 📜 config.py ├── 📜 pyproject.toml └── 📜 README.md\"]},\"1539\":{\"h\":\"加载插件\",\"t\":[\"警告\",\"请勿在插件被加载前 import 插件模块，这会导致 NoneBot 无法将其转换为插件而出现意料之外的情况。\",\"加载插件是在机器人入口文件中完成的，需要在框架初始化之后，运行之前进行。\",\"请注意，加载的插件模块名称（插件文件名或文件夹名）不能相同，且每一个插件只能被加载一次，重复加载将会导致异常。\",\"如果你使用 nb-cli 管理插件，那么你可以跳过这一节，nb-cli 将会自动处理加载。\",\"如果你使用自定义的入口文件bot.py，那么你需要在 bot.py 中加载插件。\",\"import nonebot nonebot.init() # 加载插件 nonebot.run()\",\"加载插件的方式有多种，但在底层的加载逻辑是一致的。以下是为加载插件提供的几种方式：\"]},\"1540\":{\"h\":\"\",\"t\":[\"通过点分割模块名称或使用 pathlib 的 Path 对象来加载插件。通常用于加载第三方插件或者项目插件。例如：\",\"from pathlib import Path nonebot.load_plugin(\\\"path.to.your.plugin\\\") # 加载第三方插件 nonebot.load_plugin(Path(\\\"./path/to/your/plugin.py\\\")) # 加载项目插件\",\"注意\",\"请注意，本地插件的路径应该为相对机器人 入口文件（通常为 bot.py） 可导入的，例如在项目 plugins 目录下。\"]},\"1541\":{\"h\":\"\",\"t\":[\"加载传入插件目录中的所有插件，通常用于加载一系列本地编写的项目插件。例如：\",\"nonebot.load_plugins(\\\"src/plugins\\\", \\\"path/to/your/plugins\\\")\",\"注意\",\"请注意，插件目录应该为相对机器人 入口文件（通常为 bot.py） 可导入的，例如在项目 plugins 目录下。\"]},\"1542\":{\"h\":\"\",\"t\":[\"这种加载方式是以上两种方式的混合，加载所有传入的插件模块名称，以及所有给定目录下的插件。例如：\",\"nonebot.load_all_plugins([\\\"path.to.your.plugin\\\"], [\\\"path/to/your/plugins\\\"])\"]},\"1543\":{\"h\":\"\",\"t\":[\"通过 JSON 文件加载插件，是 load_all_plugins 的 JSON 变种。通过读取 JSON 文件中的 plugins 字段和 plugin_dirs 字段进行加载。例如：\",\"{ \\\"plugins\\\": [\\\"path.to.your.plugin\\\"], \\\"plugin_dirs\\\": [\\\"path/to/your/plugins\\\"] }\",\"nonebot.load_from_json(\\\"plugin_config.json\\\", encoding=\\\"utf-8\\\")\",\"提示\",\"如果 JSON 配置文件中的字段无法满足你的需求，可以使用 load_all_plugins 方法自行读取配置来加载插件。\"]},\"1544\":{\"h\":\"\",\"t\":[\"通过 TOML 文件加载插件，是 load_all_plugins 的 TOML 变种。通过读取 TOML 文件中的 [tool.nonebot] Table 中的 plugins 和 plugin_dirs Array 进行加载。例如：\",\"[tool.nonebot] plugins = [\\\"path.to.your.plugin\\\"] plugin_dirs = [\\\"path/to/your/plugins\\\"]\",\"nonebot.load_from_toml(\\\"plugin_config.toml\\\", encoding=\\\"utf-8\\\")\",\"提示\",\"如果 TOML 配置文件中的字段无法满足你的需求，可以使用 load_all_plugins 方法自行读取配置来加载插件。\"]},\"1545\":{\"h\":\"\",\"t\":[\"加载一个内置插件，传入的插件名必须为 NoneBot 内置插件。该方法是 load_plugin 的封装。例如：\",\"nonebot.load_builtin_plugin(\\\"echo\\\")\"]},\"1546\":{\"h\":\"\",\"t\":[\"加载传入插件列表中的所有内置插件。例如：\",\"nonebot.load_builtin_plugins(\\\"echo\\\", \\\"single_session\\\")\"]},\"1547\":{\"h\":\"其他加载方式\",\"t\":[\"有关其他插件加载的方式，可参考跨插件访问和嵌套插件。\"]},\"1548\":{\"h\":\"机器人的构成\",\"t\":[\"了解机器人的基本构成有助于你更好地使用 NoneBot，本章节将介绍 NoneBot 中的基本组成部分，稍后的文档中将会使用到这些概念。\",\"使用 NoneBot 框架搭建的机器人具有以下几个基本组成部分：\",\"NoneBot 机器人框架主体：负责连接各个组成部分，提供基本的机器人功能\",\"驱动器 Driver：客户端/服务端的功能实现，负责接收和发送消息（通常为 HTTP 通信）\",\"适配器 Adapter：驱动器的上层，负责将平台消息与 NoneBot 事件/操作系统的消息格式相互转换\",\"插件 Plugin：机器人的功能实现，通常为负责处理事件并进行一系列的操作\",\"除 NoneBot 机器人框架主体外，其他部分均可按需选择、互相搭配，但由于平台的兼容性问题，部分插件可能仅在某些特定平台上可用（这由插件编写者决定）。\",\"在接下来的章节中，我们将重点介绍机器人功能实现，即插件 Plugin 部分。\"]},\"1549\":{\"h\":\"事件响应器\",\"t\":[\"事件响应器（Matcher）是对接收到的事件进行响应的基本单元，所有的事件响应器都继承自 Matcher 基类。\",\"在 NoneBot 中，事件响应器可以通过一系列特定的规则筛选出具有某种特征的事件，并按照特定的流程交由预定义的事件处理依赖进行处理。例如，在快速上手中，我们使用了内置插件 echo ，它定义的事件响应器能响应机器人用户发送的“/echo hello world”消息，提取“hello world”信息并作为回复消息发送。\"]},\"1550\":{\"h\":\"事件响应器辅助函数\",\"t\":[\"NoneBot 中所有事件响应器均继承自 Matcher 基类，但直接使用 Matcher.new() 方法创建事件响应器过于繁琐且不能记录插件信息。因此，NoneBot 中提供了一系列“事件响应器辅助函数”（下称“辅助函数”）来辅助我们用最简的方式创建带有不同规则预设的事件响应器，提高代码可读性和书写效率。通常情况下，我们只需要使用辅助函数即可完成事件响应器的创建。\",\"在 NoneBot 中，辅助函数以 on() 或 on_<type/rule>() 形式出现（例如 on_command()），调用后根据不同的参数返回一个 Type[Matcher] 类型的新事件响应器。\",\"目前 NoneBot 提供了多种功能各异的辅助函数、具有共同命令名称前缀的命令组以及具有共同参数的响应器组，均可以从 nonebot 模块直接导入使用，具体内容参考事件响应器进阶。\"]},\"1551\":{\"h\":\"创建事件响应器\",\"t\":[\"在上一节创建插件中，我们创建了一个 weather 插件，现在我们来实现他的功能。\",\"我们直接使用 on_command() 辅助函数来创建一个事件响应器：\",\"from nonebot import on_command weather = on_command(\\\"天气\\\")\",\"这样，我们就获得一个名为 weather 的事件响应器了，这个事件响应器会对 /天气 开头的消息进行响应。\",\"提示\",\"如果一条消息中包含“@机器人”或以“机器人的昵称”开始，例如 @bot /天气 时，协议适配器会将 event.is_tome() 判断为 True ，同时也会自动去除 @bot，即事件响应器收到的信息内容为 /天气，方便进行命令匹配。\"]},\"1552\":{\"h\":\"为事件响应器添加参数\",\"t\":[\"在辅助函数中，我们可以添加一些参数来对事件响应器进行更加精细的调整，例如事件响应器的优先级、匹配规则等。例如：\",\"from nonebot import on_command from nonebot.rule import to_me weather = on_command(\\\"天气\\\", rule=to_me(), aliases={\\\"weather\\\", \\\"查天气\\\"}, priority=10, block=True)\",\"这样，我们就获得了一个可以响应 天气、weather、查天气 三个命令的响应规则，需要私聊或 @bot 时才会响应，优先级为 10（越小越优先），阻断事件向后续优先级传播的事件响应器了。这些内容的意义和使用方法将会在后续的章节中一一介绍。\",\"提示\",\"需要注意的是，不同的辅助函数有不同的可选参数，在使用之前可以参考事件响应器进阶 - 基本辅助函数或 API 文档。\"]},\"1553\":{\"h\":\"处理消息\",\"t\":[\"在不同平台中，一条消息可能会有承载有各种不同的表现形式，它可能是一段纯文本、一张图片、一段语音、一篇富文本文章，也有可能是多种类型的组合等等。\",\"在 NoneBot 中，为确保消息的正常处理与跨平台兼容性，采用了扁平化的消息序列形式，即 Message 对象。消息序列是 NoneBot 中的消息载体，无论是接收还是发送的消息，都采用消息序列的形式进行处理。\"]},\"1554\":{\"h\":\"认识消息类型\"},\"1555\":{\"h\":\"消息序列\",\"t\":[\"在 NoneBot 中，消息序列 Message 的主要作用是用于表达“一串消息”。由于消息序列继承自 List[MessageSegment]，所以 Message 的本质是由若干消息段所组成的序列。因此，消息序列的使用方法与 List 有很多相似之处，例如切片、索引、拼接等。\",\"在上一节的使用依赖注入中，我们已经通过依赖注入 CommandArg() 获取了命令的参数，它的类型即是消息序列。我们使用了消息序列的 extract_plain_text() 方法来获取消息序列中的纯文本内容。\"]},\"1556\":{\"h\":\"消息段\",\"t\":[\"顾名思义，消息段 MessageSegment 是一段消息。由于消息序列的本质是由若干消息段所组成的序列，消息段可以被认为是构成消息序列的最小单位。简单来说，消息序列类似于一个自然段，而消息段则是组成自然段的一句话。同时，作为特殊消息载体的存在，绝大多数的平台都有着独特的消息类型，这些独特的内容均需要由对应的协议适配器所提供，以适应不同平台中的消息模式。这也意味着，你需要导入对应的协议适配器中的消息序列和消息段后才能使用其特殊的工厂方法。\",\"注意\",\"消息段的类型是由协议适配器提供的，因此你需要参考协议适配器的文档并导入对应的消息段后才能使用其特殊的消息类型。\",\"在上一节的使用依赖注入中，我们导入的为 nonebot.adapters.Message 抽象基类，因此我们无法使用平台特有的消息类型。仅能使用 str 作为纯文本消息回复。\"]},\"1557\":{\"h\":\"使用消息序列\",\"t\":[\"注意\",\"在以下的示例中，为了更好的理解多种类型的消息组成方式，我们将使用 Console 协议适配器来演示消息序列的使用方法。在实际使用中，你需要确保你使用的消息序列类型与你所要发送的平台类型一致。\",\"通常情况下，适配器在接收到消息时，会将消息转换为消息序列，可以通过依赖注入 EventMessage，或者使用 event.get_message() 获取。\",\"由于消息序列是 List[MessageSegment] 的子类，所以你总是可以用和操作 List 类似的方式来处理消息序列。例如：\",\">>> from nonebot.adapters.console import Message, MessageSegment >>> message = Message([ MessageSegment(type=\\\"text\\\", data={\\\"text\\\":\\\"hello\\\"}), MessageSegment(type=\\\"markdown\\\", data={\\\"markup\\\":\\\"**world**\\\"}), ]) >>> for segment in message: ... print(segment.type, segment.data) ... text {'text': 'hello'} markdown {'markup': '**world**'} >>> len(message) 2\"]},\"1558\":{\"h\":\"构造消息序列\",\"t\":[\"在使用事件响应器操作发送消息时，既可以使用 str 作为消息，也可以使用 Message、MessageSegment 或者 MessageTemplate。那么，我们就需要先构造一个消息序列。消息序列可以通过多种方式构造：\"]},\"1559\":{\"h\":\"直接构造\",\"t\":[\"Message 类可以直接实例化，支持 str、MessageSegment、Iterable[MessageSegment] 或适配器自定义类型的参数。\",\"from nonebot.adapters.console import Message, MessageSegment # str Message(\\\"Hello, world!\\\") # MessageSegment Message(MessageSegment.text(\\\"Hello, world!\\\")) # List[MessageSegment] Message([MessageSegment.text(\\\"Hello, world!\\\")])\"]},\"1560\":{\"h\":\"运算构造\",\"t\":[\"Message 对象可以通过 str、MessageSegment 相加构造，详情请参考拼接消息。\"]},\"1561\":{\"h\":\"从字典数组构造\",\"t\":[\"Message 对象支持 Pydantic 自定义类型构造，可以使用 Pydantic 的 TypeAdapter 方法进行构造。\",\"from pydantic import TypeAdapter from nonebot.adapters.console import Message, MessageSegment # 由字典构造消息段 TypeAdapter(MessageSegment).validate_python( {\\\"type\\\": \\\"text\\\", \\\"data\\\": {\\\"text\\\": \\\"text\\\"}} ) == MessageSegment.text(\\\"text\\\") # 由字典数组构造消息序列 TypeAdapter(Message).validate_python( [MessageSegment.text(\\\"text\\\"), {\\\"type\\\": \\\"text\\\", \\\"data\\\": {\\\"text\\\": \\\"text\\\"}}], ) == Message([MessageSegment.text(\\\"text\\\"), MessageSegment.text(\\\"text\\\")])\"]},\"1562\":{\"h\":\"获取消息纯文本\",\"t\":[\"由于消息中存在各种类型的消息段，因此 str(message) 通常不能得到消息的纯文本，而是一个消息序列的字符串表示。\",\"NoneBot 为消息段定义了一个方法 is_text() ，可以用于判断消息段是否为纯文本；也可以使用 message.extract_plain_text() 方法获取消息纯文本。\",\"from nonebot.adapters.console import Message, MessageSegment # 判断消息段是否为纯文本 MessageSegment.text(\\\"text\\\").is_text() == True # 提取消息纯文本字符串 Message( [MessageSegment.text(\\\"text\\\"), MessageSegment.markdown(\\\"**markup**\\\")] ).extract_plain_text() == \\\"text\\\"\"]},\"1563\":{\"h\":\"遍历\",\"t\":[\"消息序列继承自 List[MessageSegment] ，因此可以使用 for 循环遍历消息段。\",\"for segment in message: ...\"]},\"1564\":{\"h\":\"比较\",\"t\":[\"消息和消息段都可以使用 == 或 != 运算符比较是否相同。\",\"MessageSegment.text(\\\"text\\\") != MessageSegment.text(\\\"foo\\\") some_message == Message([MessageSegment.text(\\\"text\\\")])\"]},\"1565\":{\"h\":\"检查消息段\",\"t\":[\"我们可以通过 in 运算符或消息序列的 has 方法来：\",\"# 是否存在消息段 MessageSegment.text(\\\"text\\\") in message # 是否存在指定类型的消息段 \\\"text\\\" in message\",\"我们还可以使用消息序列的 only 方法来检查消息中是否仅包含指定的消息段。\",\"# 是否都为指定消息段 message.only(MessageSegment.text(\\\"test\\\")) # 是否仅包含指定类型的消息段 message.only(\\\"text\\\")\"]},\"1566\":{\"h\":\"过滤、索引与切片\",\"t\":[\"消息序列对列表的索引与切片进行了增强，在原有列表 int 索引与 slice 切片的基础上，支持 type 过滤索引与切片。\",\"from nonebot.adapters.console import Message, MessageSegment message = Message( [ MessageSegment.text(\\\"test\\\"), MessageSegment.markdown(\\\"test2\\\"), MessageSegment.markdown(\\\"test3\\\"), MessageSegment.text(\\\"test4\\\"), ] ) # 索引 message[0] == MessageSegment.text(\\\"test\\\") # 切片 message[0:2] == Message( [MessageSegment.text(\\\"test\\\"), MessageSegment.markdown(\\\"test2\\\")] ) # 类型过滤 message[\\\"markdown\\\"] == Message( [MessageSegment.markdown(\\\"test2\\\"), MessageSegment.markdown(\\\"test3\\\")] ) # 类型索引 message[\\\"markdown\\\", 0] == MessageSegment.markdown(\\\"test2\\\") # 类型切片 message[\\\"markdown\\\", 0:2] == Message( [MessageSegment.markdown(\\\"test2\\\"), MessageSegment.markdown(\\\"test3\\\")] )\",\"我们也可以通过消息序列的 include、exclude 方法进行类型过滤。\",\"message.include(\\\"text\\\", \\\"markdown\\\") message.exclude(\\\"text\\\")\",\"同样的，消息序列对列表的 index、count 方法也进行了增强，可以用于索引指定类型的消息段。\",\"# 指定类型首个消息段索引 message.index(\\\"markdown\\\") == 1 # 指定类型消息段数量 message.count(\\\"markdown\\\") == 2\",\"此外，消息序列添加了一个 get 方法，可以用于获取指定类型指定个数的消息段。\",\"# 获取指定类型指定个数的消息段 message.get(\\\"markdown\\\", 1) == Message([MessageSegment.markdown(\\\"test2\\\")])\"]},\"1567\":{\"h\":\"拼接消息\",\"t\":[\"str、Message、MessageSegment 对象之间可以直接相加，相加均会返回一个新的 Message 对象。\",\"# 消息序列与消息段相加 Message([MessageSegment.text(\\\"text\\\")]) + MessageSegment.text(\\\"text\\\") # 消息序列与字符串相加 Message([MessageSegment.text(\\\"text\\\")]) + \\\"text\\\" # 消息序列与消息序列相加 Message([MessageSegment.text(\\\"text\\\")]) + Message([MessageSegment.text(\\\"text\\\")]) # 字符串与消息序列相加 \\\"text\\\" + Message([MessageSegment.text(\\\"text\\\")]) # 消息段与消息段相加 MessageSegment.text(\\\"text\\\") + MessageSegment.text(\\\"text\\\") # 消息段与字符串相加 MessageSegment.text(\\\"text\\\") + \\\"text\\\" # 消息段与消息序列相加 MessageSegment.text(\\\"text\\\") + Message([MessageSegment.text(\\\"text\\\")]) # 字符串与消息段相加 \\\"text\\\" + MessageSegment.text(\\\"text\\\")\",\"如果需要在当前消息序列后直接拼接新的消息段，可以使用 Message.append、Message.extend 方法，或者使用自加。\",\"msg = Message([MessageSegment.text(\\\"text\\\")]) # 自加 msg += \\\"text\\\" msg += MessageSegment.text(\\\"text\\\") msg += Message([MessageSegment.text(\\\"text\\\")]) # 附加 msg.append(\\\"text\\\") msg.append(MessageSegment.text(\\\"text\\\")) # 扩展 msg.extend([MessageSegment.text(\\\"text\\\")])\",\"我们也可以通过消息段或消息序列的 join 方法来拼接一串消息：\",\"seg = MessageSegment.text(\\\"text\\\") msg = seg.join( [ MessageSegment.text(\\\"first\\\"), Message( [ MessageSegment.text(\\\"second\\\"), MessageSegment.text(\\\"third\\\"), ] ) ] ) msg == Message( [ MessageSegment.text(\\\"first\\\"), MessageSegment.text(\\\"text\\\"), MessageSegment.text(\\\"second\\\"), MessageSegment.text(\\\"third\\\"), ] )\"]},\"1568\":{\"h\":\"使用消息模板\",\"t\":[\"为了提供安全可靠的跨平台模板字符，我们提供了一个消息模板功能来构建消息序列\",\"它在以下常见场景中尤其有用：\",\"多行富文本编排（包含图片，文字以及表情等）\",\"客制化（由 Bot 最终用户提供消息模板时）\",\"在事实上，它的用法和 str.format 极为相近，所以你在使用的时候，总是可以参考Python 文档来达到你想要的效果，这里给出几个简单的例子。\",\"默认情况下，消息模板采用 str 纯文本形式的格式化：\",\">>> from nonebot.adapters import MessageTemplate >>> MessageTemplate(\\\"{} {}\\\").format(\\\"hello\\\", \\\"world\\\") 'hello world'\",\"如果 Message.template 构建消息模板，那么消息模板将采用消息序列形式的格式化，此时的消息将会是平台特定的：\",\"注意\",\"使用 Message.template 构建消息模板时，应注意消息序列为平台适配器提供的类型，不能使用 nonebot.adapters.Message 基类作为模板构建。使用基类构建模板与使用 str 构建模板的效果是一样的，因此请使用上述的 MessageTemplate 类直接构建模板。：\",\">>> from nonebot.adapters.console import Message, MessageSegment >>> Message.template(\\\"{} {}\\\").format(\\\"hello\\\", \\\"world\\\") Message( MessageSegment.text(\\\"hello\\\"), MessageSegment.text(\\\" \\\"), MessageSegment.text(\\\"world\\\") )\",\"消息模板支持使用消息段进行格式化：\",\">>> from nonebot.adapters.console import Message, MessageSegment >>> Message.template(\\\"{}{}\\\").format(MessageSegment.markdown(\\\"**markup**\\\"), \\\"world\\\") Message( MessageSegment(type='markdown', data={'markup': '**markup**'}), MessageSegment(type='text', data={'text': 'world'}) )\",\"消息模板同样支持使用消息序列作为模板：\",\">>> from nonebot.adapters.console import Message, MessageSegment >>> Message.template( ... MessageSegment.text(\\\"{user_id}\\\") + MessageSegment.emoji(\\\"tada\\\") + ... MessageSegment.text(\\\"{message}\\\") ... ).format_map({\\\"user_id\\\": 123456, \\\"message\\\": \\\"hello world\\\"}) Message( MessageSegment(type='text', data={'text': '123456'}), MessageSegment(type='emoji', data={'emoji': 'tada'}), MessageSegment(type='text', data={'text': 'hello world'}) )\",\"注意\",\"只有消息序列中的文本类型消息段才能被格式化，其他类型的消息段将会原样添加。\",\"消息模板支持使用拓展控制符来控制消息段类型：\",\">>> from nonebot.adapters.console import Message, MessageSegment >>> Message.template(\\\"{name:emoji}\\\").format(name='tada') Message(MessageSegment(type='emoji', data={'name': 'tada'}))\"]},\"1569\":{\"h\":\"nonebot.adapters\",\"t\":[\"本模块定义了协议适配基类，各协议请继承以下基类。\",\"使用 Driver.register_adapter 注册适配器。\"]},\"1570\":{\"h\":\"\",\"t\":[\"说明\",\"Bot 基类。\",\"用于处理上报消息，并提供 API 调用接口。\",\"参数\",\"adapter (Adapter): 协议适配器实例\",\"self_id (str): 机器人 ID\"]},\"1571\":{\"h\":\"\",\"t\":[\"类型:Adapter\",\"说明: 协议适配器实例\"]},\"1572\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明: 机器人 ID\"]},\"1573\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明: 协议适配器名称\"]},\"1574\":{\"h\":\"\",\"t\":[\"类型:Config\",\"说明: 全局 NoneBot 配置\"]},\"1575\":{\"h\":\"\",\"t\":[\"说明: 调用机器人 API 接口，可以通过该函数或直接通过 bot 属性进行调用\",\"参数\",\"api (str): API 名称\",\"**data (Any): API 数据\",\"返回\",\"Any\",\"用法\",\"await bot.call_api(\\\"send_msg\\\", message=\\\"hello world\\\") await bot.send_msg(message=\\\"hello world\\\")\"]},\"1576\":{\"h\":\"\",\"t\":[\"说明: 调用机器人基础发送消息接口\",\"参数\",\"event (Event): 上报事件\",\"message (str | Message | MessageSegment): 要发送的消息\",\"**kwargs (Any): 任意额外参数\",\"返回\",\"Any\"]},\"1577\":{\"h\":\"\",\"t\":[\"说明\",\"调用 api 预处理。\",\"钩子函数参数:\",\"bot: 当前 bot 对象\",\"api: 调用的 api 名称\",\"data: api 调用的参数字典\",\"参数\",\"func (T_CallingAPIHook)\",\"返回\",\"T_CallingAPIHook\"]},\"1578\":{\"h\":\"\",\"t\":[\"说明\",\"调用 api 后处理。\",\"钩子函数参数:\",\"bot: 当前 bot 对象\",\"exception: 调用 api 时发生的错误\",\"api: 调用的 api 名称\",\"data: api 调用的参数字典\",\"result: api 调用的返回\",\"参数\",\"func (T_CalledAPIHook)\",\"返回\",\"T_CalledAPIHook\"]},\"1579\":{\"h\":\"\",\"t\":[\"说明: Event 基类。提供获取关键信息的方法，其余信息可直接获取。\",\"参数\",\"auto\"]},\"1580\":{\"h\":\"\",\"t\":[\"说明: 获取事件类型的方法，类型通常为 NoneBot 内置的四种类型。\",\"参数\",\"empty\",\"返回\",\"str\"]},\"1581\":{\"h\":\"\",\"t\":[\"说明: 获取事件名称的方法。\",\"参数\",\"empty\",\"返回\",\"str\"]},\"1582\":{\"h\":\"\",\"t\":[\"说明: 获取事件描述的方法，通常为事件具体内容。\",\"参数\",\"empty\",\"返回\",\"str\"]},\"1583\":{\"h\":\"\",\"t\":[\"说明\",\"获取事件日志信息的方法。\",\"通常你不需要修改这个方法，只有当希望 NoneBot 隐藏该事件日志时， 可以抛出 NoLogException 异常。\",\"参数\",\"empty\",\"返回\",\"str\",\"异常\",\"NoLogException: 希望 NoneBot 隐藏该事件日志\"]},\"1584\":{\"h\":\"\",\"t\":[\"说明: 获取事件主体 id 的方法，通常是用户 id 。\",\"参数\",\"empty\",\"返回\",\"str\"]},\"1585\":{\"h\":\"\",\"t\":[\"说明: 获取会话 id 的方法，用于判断当前事件属于哪一个会话， 通常是用户 id、群组 id 组合。\",\"参数\",\"empty\",\"返回\",\"str\"]},\"1586\":{\"h\":\"\",\"t\":[\"说明: 获取事件消息内容的方法。\",\"参数\",\"empty\",\"返回\",\"Message\"]},\"1587\":{\"h\":\"\",\"t\":[\"说明\",\"获取消息纯文本的方法。\",\"通常不需要修改，默认通过 get_message().extract_plain_text 获取。\",\"参数\",\"empty\",\"返回\",\"str\"]},\"1588\":{\"h\":\"\",\"t\":[\"说明: 获取事件是否与机器人有关的方法。\",\"参数\",\"empty\",\"返回\",\"bool\"]},\"1589\":{\"h\":\"\",\"t\":[\"说明\",\"协议适配器基类。\",\"通常，在 Adapter 中编写协议通信相关代码，如: 建立通信连接、处理接收与发送 data 等。\",\"参数\",\"driver (Driver): Driver 实例\",\"**kwargs (Any): 其他由 Driver.register_adapter 传入的额外参数\"]},\"1590\":{\"h\":\"\",\"t\":[\"类型:Driver\",\"说明: 实例\"]},\"1591\":{\"h\":\"\",\"t\":[\"类型: dict[str, Bot]\",\"说明: 本协议适配器已建立连接的 Bot 实例\"]},\"1592\":{\"h\":\"\",\"t\":[\"说明: 当前协议适配器的名称\",\"参数\",\"empty\",\"返回\",\"str\"]},\"1593\":{\"h\":\"\",\"t\":[\"类型:Config\",\"说明: 全局 NoneBot 配置\"]},\"1594\":{\"h\":\"\",\"t\":[\"说明\",\"告知 NoneBot 建立了一个新的 Bot 连接。\",\"当有新的 Bot 实例连接建立成功时调用。\",\"参数\",\"bot (Bot): Bot 实例\",\"返回\",\"None\"]},\"1595\":{\"h\":\"\",\"t\":[\"说明\",\"告知 NoneBot Bot 连接已断开。\",\"当有 Bot 实例连接断开时调用。\",\"参数\",\"bot (Bot): Bot 实例\",\"返回\",\"None\"]},\"1596\":{\"h\":\"\",\"t\":[\"说明: 设置一个 HTTP 服务器路由配置\",\"参数\",\"setup (HTTPServerSetup)\",\"返回\",\"untyped\"]},\"1597\":{\"h\":\"\",\"t\":[\"说明: 设置一个 WebSocket 服务器路由配置\",\"参数\",\"setup (WebSocketServerSetup)\",\"返回\",\"untyped\"]},\"1598\":{\"h\":\"\",\"t\":[\"说明: 进行一个 HTTP 客户端请求\",\"参数\",\"setup (Request)\",\"返回\",\"Response\"]},\"1599\":{\"h\":\"\",\"t\":[\"说明: 建立一个 WebSocket 客户端连接请求\",\"参数\",\"setup (Request)\",\"返回\",\"AsyncGenerator[WebSocket, None]\"]},\"1600\":{\"h\":\"\",\"t\":[\"参数\",\"func (LIFESPAN_FUNC)\",\"返回\",\"LIFESPAN_FUNC\"]},\"1601\":{\"h\":\"\",\"t\":[\"说明: 消息序列\",\"参数\",\"message: 消息内容\"]},\"1602\":{\"h\":\"\",\"t\":[\"说明\",\"创建消息模板。\",\"用法和 str.format 大致相同，支持以 Message 对象作为消息模板并输出消息对象。 并且提供了拓展的格式化控制符， 可以通过该消息类型的 MessageSegment 工厂方法创建消息。\",\"参数\",\"format_string (str | TM): 格式化模板\",\"返回\",\"MessageTemplate[Self]: 消息格式化器\"]},\"1603\":{\"h\":\"\",\"t\":[\"说明: 获取消息段类型\",\"参数\",\"empty\",\"返回\",\"type[TMS]\"]},\"1604\":{\"h\":\"\",\"t\":[\"说明: 构造消息数组\",\"参数\",\"msg (str)\",\"返回\",\"Iterable[TMS]\"]},\"1605\":{\"h\":\"\",\"t\":[\"重载\",\"1.(args) -> Self\",\"参数\",\"args (str): 消息段类型\",\"返回\",\"Self: 所有类型为 args 的消息段\",\"2.(args) -> TMS\",\"参数\",\"args (tuple[str, int]): 消息段类型和索引\",\"返回\",\"TMS: 类型为 args[0] 的消息段第 args[1] 个\",\"3.(args) -> Self\",\"参数\",\"args (tuple[str, slice]): 消息段类型和切片\",\"返回\",\"Self: 类型为 args[0] 的消息段切片 args[1]\",\"4.(args) -> TMS\",\"参数\",\"args (int): 索引\",\"返回\",\"TMS: 第 args 个消息段\",\"5.(args) -> Self\",\"参数\",\"args (slice): 切片\",\"返回\",\"Self: 消息切片 args\"]},\"1606\":{\"h\":\"\",\"t\":[\"说明: 检查消息段是否存在\",\"参数\",\"value (TMS | str): 消息段或消息段类型\",\"返回\",\"bool: 消息内是否存在给定消息段或给定类型的消息段\"]},\"1607\":{\"h\":\"\",\"t\":[\"说明: 与 __contains__ 相同\",\"参数\",\"value (TMS | str)\",\"返回\",\"bool\"]},\"1608\":{\"h\":\"\",\"t\":[\"说明: 索引消息段\",\"参数\",\"value (TMS | str): 消息段或者消息段类型\",\"*args (SupportsIndex)\",\"arg: start 与 end\",\"返回\",\"int: 索引 index\",\"异常\",\"ValueError: 消息段不存在\"]},\"1609\":{\"h\":\"\",\"t\":[\"说明: 获取指定类型的消息段\",\"参数\",\"type_ (str): 消息段类型\",\"count (int | None): 获取个数\",\"返回\",\"Self: 构建的新消息\"]},\"1610\":{\"h\":\"\",\"t\":[\"说明: 计算指定消息段的个数\",\"参数\",\"value (TMS | str): 消息段或消息段类型\",\"返回\",\"int: 个数\"]},\"1611\":{\"h\":\"\",\"t\":[\"说明: 检查消息中是否仅包含指定消息段\",\"参数\",\"value (TMS | str): 指定消息段或消息段类型\",\"返回\",\"bool: 是否仅包含指定消息段\"]},\"1612\":{\"h\":\"\",\"t\":[\"说明: 添加一个消息段到消息数组末尾。\",\"参数\",\"obj (str | TMS): 要添加的消息段\",\"返回\",\"Self\"]},\"1613\":{\"h\":\"\",\"t\":[\"说明: 拼接一个消息数组或多个消息段到消息数组末尾。\",\"参数\",\"obj (Self | Iterable[TMS]): 要添加的消息数组\",\"返回\",\"Self\"]},\"1614\":{\"h\":\"\",\"t\":[\"说明: 将多个消息连接并将自身作为分割\",\"参数\",\"iterable (Iterable[TMS | Self]): 要连接的消息\",\"返回\",\"Self: 连接后的消息\"]},\"1615\":{\"h\":\"\",\"t\":[\"说明: 深拷贝消息\",\"参数\",\"empty\",\"返回\",\"Self\"]},\"1616\":{\"h\":\"\",\"t\":[\"说明: 过滤消息\",\"参数\",\"*types (str): 包含的消息段类型\",\"返回\",\"Self: 新构造的消息\"]},\"1617\":{\"h\":\"\",\"t\":[\"说明: 过滤消息\",\"参数\",\"*types (str): 不包含的消息段类型\",\"返回\",\"Self: 新构造的消息\"]},\"1618\":{\"h\":\"\",\"t\":[\"说明: 提取消息内纯文本消息\",\"参数\",\"empty\",\"返回\",\"str\"]},\"1619\":{\"h\":\"\",\"t\":[\"说明: 消息段基类\",\"参数\",\"auto\"]},\"1620\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明: 消息段类型\"]},\"1621\":{\"h\":\"\",\"t\":[\"类型: dict[str, Any]\",\"说明: 消息段数据\"]},\"1622\":{\"h\":\"\",\"t\":[\"说明: 获取消息数组类型\",\"参数\",\"empty\",\"返回\",\"type[TM]\"]},\"1623\":{\"h\":\"\",\"t\":[\"说明: 该消息段所代表的 str，在命令匹配部分使用\",\"参数\",\"empty\",\"返回\",\"str\"]},\"1624\":{\"h\":\"\",\"t\":[\"参数\",\"other (str | TMS | Iterable[TMS])\",\"返回\",\"TM\"]},\"1625\":{\"h\":\"\",\"t\":[\"参数\",\"key (str)\",\"default (Any)\",\"返回\",\"untyped\"]},\"1626\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"untyped\"]},\"1627\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"untyped\"]},\"1628\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"untyped\"]},\"1629\":{\"h\":\"\",\"t\":[\"参数\",\"iterable (Iterable[TMS | TM])\",\"返回\",\"TM\"]},\"1630\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"Self\"]},\"1631\":{\"h\":\"\",\"t\":[\"说明: 当前消息段是否为纯文本\",\"参数\",\"empty\",\"返回\",\"bool\"]},\"1632\":{\"h\":\"\",\"t\":[\"说明: 消息模板格式化实现类。\",\"参数\",\"template (str | TM): 模板\",\"factory (type[str] | type[TM]): 消息类型工厂，默认为 str\",\"private_getattr (bool): 是否允许在模板中访问私有属性，默认为 False\"]},\"1633\":{\"h\":\"\",\"t\":[\"参数\",\"spec (FormatSpecFunc_T)\",\"name (str | None)\",\"返回\",\"FormatSpecFunc_T\"]},\"1634\":{\"h\":\"\",\"t\":[\"说明: 根据传入参数和模板生成消息对象\",\"参数\",\"*args\",\"**kwargs\",\"返回\",\"TF\"]},\"1635\":{\"h\":\"\",\"t\":[\"说明: 根据传入字典和模板生成消息对象, 在传入字段名不是有效标识符时有用\",\"参数\",\"mapping (Mapping[str, Any])\",\"返回\",\"TF\"]},\"1636\":{\"h\":\"\",\"t\":[\"参数\",\"format_string (str)\",\"args (Sequence[Any])\",\"kwargs (Mapping[str, Any])\",\"返回\",\"TF\"]},\"1637\":{\"h\":\"\",\"t\":[\"参数\",\"field_name (str)\",\"args (Sequence[Any])\",\"kwargs (Mapping[str, Any])\",\"返回\",\"tuple[Any, int | str]\"]},\"1638\":{\"h\":\"\",\"t\":[\"参数\",\"value (Any)\",\"format_spec (str)\",\"返回\",\"Any\"]},\"1639\":{\"h\":\"nonebot.dependencies\",\"t\":[\"本模块模块实现了依赖注入的定义与处理。\"]},\"1640\":{\"h\":\"\",\"t\":[\"说明\",\"依赖注入的基本单元 —— 参数。\",\"继承自 pydantic.fields.FieldInfo，用于描述参数信息（不包括参数名）。\",\"参数\",\"*args\",\"validate (bool)\",\"**kwargs (Any)\"]},\"1641\":{\"h\":\"\",\"t\":[\"说明: 依赖注入容器\",\"参数\",\"call: 依赖注入的可调用对象，可以是任何 Callable 对象\",\"pre_checkers: 依赖注入解析前的参数检查\",\"params: 具名参数列表\",\"parameterless: 匿名参数列表\",\"allow_types: 允许的参数类型\"]},\"1642\":{\"h\":\"\",\"t\":[\"参数\",\"call (_DependentCallable[R])\",\"allow_types (tuple[type[Param], ...])\",\"返回\",\"tuple[ModelField, ...]\"]},\"1643\":{\"h\":\"\",\"t\":[\"参数\",\"parameterless (tuple[Any, ...])\",\"allow_types (tuple[type[Param], ...])\",\"返回\",\"tuple[Param, ...]\"]},\"1644\":{\"h\":\"\",\"t\":[\"参数\",\"call (_DependentCallable[R])\",\"parameterless (Iterable[Any] | None)\",\"allow_types (Iterable[type[Param]])\",\"返回\",\"Dependent[R]\"]},\"1645\":{\"h\":\"\",\"t\":[\"参数\",\"**params (Any)\",\"返回\",\"None\"]},\"1646\":{\"h\":\"\",\"t\":[\"参数\",\"**params (Any)\",\"返回\",\"dict[str, Any]\"]},\"1647\":{\"h\":\"nonebot.dependencies.utils\"},\"1648\":{\"h\":\"\",\"t\":[\"说明: 获取可调用对象签名\",\"参数\",\"call ((...) -> Any)\",\"返回\",\"inspect.Signature\"]},\"1649\":{\"h\":\"\",\"t\":[\"说明: 获取参数的类型注解\",\"参数\",\"param (inspect.Parameter)\",\"globalns (dict[str, Any])\",\"返回\",\"Any\"]},\"1650\":{\"h\":\"\",\"t\":[\"说明: 检查字段类型是否匹配\",\"参数\",\"field (ModelField)\",\"value (Any)\",\"返回\",\"Any\"]},\"1651\":{\"h\":\"nonebot.drivers.aiohttp\",\"t\":[\"AIOHTTP 驱动适配器。\",\"nb driver install aiohttp # 或者 pip install nonebot2[aiohttp]\",\"提示\",\"本驱动仅支持客户端连接\"]},\"1652\":{\"h\":\"\",\"t\":[\"参数\",\"params (QueryTypes)\",\"headers (HeaderTypes)\",\"cookies (CookieTypes)\",\"version (str | HTTPVersion)\",\"timeout (float | None)\",\"proxy (str | None)\"]},\"1653\":{\"h\":\"\",\"t\":[\"参数\",\"setup (Request)\",\"返回\",\"Response\"]},\"1654\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"None\"]},\"1655\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"None\"]},\"1656\":{\"h\":\"\",\"t\":[\"说明: AIOHTTP Mixin\",\"参数\",\"auto\"]},\"1657\":{\"h\":\"\",\"t\":[\"参数\",\"setup (Request)\",\"返回\",\"Response\"]},\"1658\":{\"h\":\"\",\"t\":[\"参数\",\"setup (Request)\",\"返回\",\"AsyncGenerator[WebSocket, None]\"]},\"1659\":{\"h\":\"\",\"t\":[\"参数\",\"params (QueryTypes)\",\"headers (HeaderTypes)\",\"cookies (CookieTypes)\",\"version (str | HTTPVersion)\",\"timeout (float | None)\",\"proxy (str | None)\",\"返回\",\"Session\"]},\"1660\":{\"h\":\"\",\"t\":[\"说明: AIOHTTP Websocket Wrapper\",\"参数\",\"request (Request)\",\"session (aiohttp.ClientSession)\",\"websocket (aiohttp.ClientWebSocketResponse)\"]},\"1661\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"untyped\"]},\"1662\":{\"h\":\"\",\"t\":[\"参数\",\"code (int)\",\"reason (str)\",\"返回\",\"untyped\"]},\"1663\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"str\"]},\"1664\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"str\"]},\"1665\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"bytes\"]},\"1666\":{\"h\":\"\",\"t\":[\"参数\",\"data (str)\",\"返回\",\"None\"]},\"1667\":{\"h\":\"\",\"t\":[\"参数\",\"data (bytes)\",\"返回\",\"None\"]},\"1668\":{\"h\":\"\",\"t\":[\"参数\",\"env (Env)\",\"config (Config)\"]},\"1669\":{\"h\":\"nonebot.drivers.fastapi\",\"t\":[\"FastAPI 驱动适配\",\"nb driver install fastapi # 或者 pip install nonebot2[fastapi]\",\"提示\",\"本驱动仅支持服务端连接\"]},\"1670\":{\"h\":\"\",\"t\":[\"说明: FastAPI 驱动框架设置，详情参考 FastAPI 文档\",\"参数\",\"auto\"]},\"1671\":{\"h\":\"\",\"t\":[\"类型: str | None\",\"说明:openapi.json 地址，默认为 None 即关闭\"]},\"1672\":{\"h\":\"\",\"t\":[\"类型: str | None\",\"说明:swagger 地址，默认为 None 即关闭\"]},\"1673\":{\"h\":\"\",\"t\":[\"类型: str | None\",\"说明:redoc 地址，默认为 None 即关闭\"]},\"1674\":{\"h\":\"\",\"t\":[\"类型: bool\",\"说明: 是否包含适配器路由的 schema，默认为 True\"]},\"1675\":{\"h\":\"\",\"t\":[\"类型: bool\",\"说明: 开启/关闭冷重载\"]},\"1676\":{\"h\":\"\",\"t\":[\"类型: list[str] | None\",\"说明: 重载监控文件夹列表，默认为 uvicorn 默认值\"]},\"1677\":{\"h\":\"\",\"t\":[\"类型: float\",\"说明: 重载延迟，默认为 uvicorn 默认值\"]},\"1678\":{\"h\":\"\",\"t\":[\"类型: list[str] | None\",\"说明: 要监听的文件列表，支持 glob pattern，默认为 uvicorn 默认值\"]},\"1679\":{\"h\":\"\",\"t\":[\"类型: list[str] | None\",\"说明: 不要监听的文件列表，支持 glob pattern，默认为 uvicorn 默认值\"]},\"1680\":{\"h\":\"\",\"t\":[\"类型: dict[str, Any]\",\"说明: 传递给 FastAPI 的其他参数。\"]},\"1681\":{\"h\":\"\",\"t\":[\"说明: FastAPI 驱动框架。\",\"参数\",\"env (Env)\",\"config (NoneBotConfig)\"]},\"1682\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明: 驱动名称: fastapi\"]},\"1683\":{\"h\":\"\",\"t\":[\"类型: FastAPI\",\"说明:FastAPI APP 对象\"]},\"1684\":{\"h\":\"\",\"t\":[\"类型: FastAPI\",\"说明:FastAPI APP 对象\"]},\"1685\":{\"h\":\"\",\"t\":[\"类型: logging.Logger\",\"说明: fastapi 使用的 logger\"]},\"1686\":{\"h\":\"\",\"t\":[\"参数\",\"setup (HTTPServerSetup)\",\"返回\",\"untyped\"]},\"1687\":{\"h\":\"\",\"t\":[\"参数\",\"setup (WebSocketServerSetup)\",\"返回\",\"None\"]},\"1688\":{\"h\":\"\",\"t\":[\"说明: 使用 uvicorn 启动 FastAPI\",\"参数\",\"host (str | None)\",\"port (int | None)\",\"*args\",\"app (str | None)\",\"**kwargs\",\"返回\",\"untyped\"]},\"1689\":{\"h\":\"\",\"t\":[\"说明: FastAPI WebSocket Wrapper\",\"参数\",\"request (BaseRequest)\",\"websocket (WebSocket)\"]},\"1690\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"None\"]},\"1691\":{\"h\":\"\",\"t\":[\"参数\",\"code (int)\",\"reason (str)\",\"返回\",\"None\"]},\"1692\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"str | bytes\"]},\"1693\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"str\"]},\"1694\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"bytes\"]},\"1695\":{\"h\":\"\",\"t\":[\"参数\",\"data (str)\",\"返回\",\"None\"]},\"1696\":{\"h\":\"\",\"t\":[\"参数\",\"data (bytes)\",\"返回\",\"None\"]},\"1697\":{\"h\":\"nonebot.drivers.httpx\",\"t\":[\"HTTPX 驱动适配\",\"nb driver install httpx # 或者 pip install nonebot2[httpx]\",\"提示\",\"本驱动仅支持客户端 HTTP 连接\"]},\"1698\":{\"h\":\"\",\"t\":[\"参数\",\"params (QueryTypes)\",\"headers (HeaderTypes)\",\"cookies (CookieTypes)\",\"version (str | HTTPVersion)\",\"timeout (float | None)\",\"proxy (str | None)\"]},\"1699\":{\"h\":\"\",\"t\":[\"参数\",\"setup (Request)\",\"返回\",\"Response\"]},\"1700\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"None\"]},\"1701\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"None\"]},\"1702\":{\"h\":\"\",\"t\":[\"说明: HTTPX Mixin\",\"参数\",\"auto\"]},\"1703\":{\"h\":\"\",\"t\":[\"参数\",\"setup (Request)\",\"返回\",\"Response\"]},\"1704\":{\"h\":\"\",\"t\":[\"参数\",\"params (QueryTypes)\",\"headers (HeaderTypes)\",\"cookies (CookieTypes)\",\"version (str | HTTPVersion)\",\"timeout (float | None)\",\"proxy (str | None)\",\"返回\",\"Session\"]},\"1705\":{\"h\":\"\",\"t\":[\"参数\",\"env (Env)\",\"config (Config)\"]},\"1706\":{\"h\":\"nonebot.drivers\",\"t\":[\"本模块定义了驱动适配器基类。\",\"各驱动请继承以下基类。\"]},\"1707\":{\"h\":\"\",\"t\":[\"说明: 可与其他驱动器共用的混入基类。\",\"参数\",\"auto\"]},\"1708\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明: 混入驱动类型名称\"]},\"1709\":{\"h\":\"\",\"t\":[\"说明\",\"驱动器基类。\",\"驱动器控制框架的启动和停止，适配器的注册，以及机器人生命周期管理。\",\"参数\",\"env (Env): 包含环境信息的 Env 对象\",\"config (Config): 包含配置信息的 Config 对象\"]},\"1710\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明: 环境名称\"]},\"1711\":{\"h\":\"\",\"t\":[\"类型:Config\",\"说明: 全局配置对象\"]},\"1712\":{\"h\":\"\",\"t\":[\"类型: dict[str, Bot]\",\"说明: 获取当前所有已连接的 Bot\"]},\"1713\":{\"h\":\"\",\"t\":[\"说明: 注册一个协议适配器\",\"参数\",\"adapter (type[Adapter]): 适配器类\",\"**kwargs: 其他传递给适配器的参数\",\"返回\",\"None\"]},\"1714\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明: 驱动类型名称\"]},\"1715\":{\"h\":\"\",\"t\":[\"类型: untyped\",\"说明: 驱动专属 logger 日志记录器\"]},\"1716\":{\"h\":\"\",\"t\":[\"说明: 启动驱动框架\",\"参数\",\"*args\",\"**kwargs\",\"返回\",\"untyped\"]},\"1717\":{\"h\":\"\",\"t\":[\"说明: 注册一个启动时执行的函数\",\"参数\",\"func (LIFESPAN_FUNC)\",\"返回\",\"LIFESPAN_FUNC\"]},\"1718\":{\"h\":\"\",\"t\":[\"说明: 注册一个停止时执行的函数\",\"参数\",\"func (LIFESPAN_FUNC)\",\"返回\",\"LIFESPAN_FUNC\"]},\"1719\":{\"h\":\"\",\"t\":[\"说明\",\"装饰一个函数使他在 bot 连接成功时执行。\",\"钩子函数参数:\",\"bot: 当前连接上的 Bot 对象\",\"参数\",\"func (T_BotConnectionHook)\",\"返回\",\"T_BotConnectionHook\"]},\"1720\":{\"h\":\"\",\"t\":[\"说明\",\"装饰一个函数使他在 bot 连接断开时执行。\",\"钩子函数参数:\",\"bot: 当前连接上的 Bot 对象\",\"参数\",\"func (T_BotDisconnectionHook)\",\"返回\",\"T_BotDisconnectionHook\"]},\"1721\":{\"h\":\"\",\"t\":[\"参数\",\"cookies (CookieTypes)\"]},\"1722\":{\"h\":\"\",\"t\":[\"参数\",\"name (str)\",\"value (str)\",\"domain (str)\",\"path (str)\",\"返回\",\"None\"]},\"1723\":{\"h\":\"\",\"t\":[\"参数\",\"name (str)\",\"default (str | None)\",\"domain (str | None)\",\"path (str | None)\",\"返回\",\"str | None\"]},\"1724\":{\"h\":\"\",\"t\":[\"参数\",\"name (str)\",\"domain (str | None)\",\"path (str | None)\",\"返回\",\"None\"]},\"1725\":{\"h\":\"\",\"t\":[\"参数\",\"domain (str | None)\",\"path (str | None)\",\"返回\",\"None\"]},\"1726\":{\"h\":\"\",\"t\":[\"参数\",\"cookies (CookieTypes)\",\"返回\",\"None\"]},\"1727\":{\"h\":\"\",\"t\":[\"参数\",\"request (Request)\",\"返回\",\"dict[str, str]\"]},\"1728\":{\"h\":\"\",\"t\":[\"参数\",\"method (str | bytes)\",\"url (URL | str | RawURL)\",\"params (QueryTypes)\",\"headers (HeaderTypes)\",\"cookies (CookieTypes)\",\"content (ContentTypes)\",\"data (DataTypes)\",\"json (Any)\",\"files (FilesTypes)\",\"version (str | HTTPVersion)\",\"timeout (float | None)\",\"proxy (str | None)\"]},\"1729\":{\"h\":\"\",\"t\":[\"参数\",\"status_code (int)\",\"headers (HeaderTypes)\",\"content (ContentTypes)\",\"request (Request | None)\"]},\"1730\":{\"h\":\"\",\"t\":[\"说明\",\"ASGI 服务端基类。\",\"将后端框架封装，以满足适配器使用。\",\"参数\",\"auto\"]},\"1731\":{\"h\":\"\",\"t\":[\"类型: Any\",\"说明: 驱动 APP 对象\"]},\"1732\":{\"h\":\"\",\"t\":[\"类型: Any\",\"说明: 驱动 ASGI 对象\"]},\"1733\":{\"h\":\"\",\"t\":[\"说明: 设置一个 HTTP 服务器路由配置\",\"参数\",\"setup (HTTPServerSetup)\",\"返回\",\"None\"]},\"1734\":{\"h\":\"\",\"t\":[\"说明: 设置一个 WebSocket 服务器路由配置\",\"参数\",\"setup (WebSocketServerSetup)\",\"返回\",\"None\"]},\"1735\":{\"h\":\"\",\"t\":[\"参数\",\"request (Request)\"]},\"1736\":{\"h\":\"\",\"t\":[\"类型: bool\",\"说明: 连接是否已经关闭\"]},\"1737\":{\"h\":\"\",\"t\":[\"说明: 接受 WebSocket 连接请求\",\"参数\",\"empty\",\"返回\",\"None\"]},\"1738\":{\"h\":\"\",\"t\":[\"说明: 关闭 WebSocket 连接请求\",\"参数\",\"code (int)\",\"reason (str)\",\"返回\",\"None\"]},\"1739\":{\"h\":\"\",\"t\":[\"说明: 接收一条 WebSocket text/bytes 信息\",\"参数\",\"empty\",\"返回\",\"str | bytes\"]},\"1740\":{\"h\":\"\",\"t\":[\"说明: 接收一条 WebSocket text 信息\",\"参数\",\"empty\",\"返回\",\"str\"]},\"1741\":{\"h\":\"\",\"t\":[\"说明: 接收一条 WebSocket binary 信息\",\"参数\",\"empty\",\"返回\",\"bytes\"]},\"1742\":{\"h\":\"\",\"t\":[\"说明: 发送一条 WebSocket text/bytes 信息\",\"参数\",\"data (str | bytes)\",\"返回\",\"None\"]},\"1743\":{\"h\":\"\",\"t\":[\"说明: 发送一条 WebSocket text 信息\",\"参数\",\"data (str)\",\"返回\",\"None\"]},\"1744\":{\"h\":\"\",\"t\":[\"说明: 发送一条 WebSocket binary 信息\",\"参数\",\"data (bytes)\",\"返回\",\"None\"]},\"1745\":{\"h\":\"\",\"t\":[\"说明: An enumeration.\",\"参数\",\"auto\",\"H10: '1.0'\",\"H11: '1.1'\",\"H2: '2'\"]},\"1746\":{\"h\":\"\",\"t\":[\"说明: 客户端混入基类。\",\"参数\",\"auto\"]},\"1747\":{\"h\":\"\",\"t\":[\"说明: 服务端混入基类。\",\"参数\",\"auto\"]},\"1748\":{\"h\":\"\",\"t\":[\"类型: ForwardMixin\",\"说明\",\"支持客户端请求的驱动器。\",\"Deprecated，请使用 ForwardMixin 或其子类代替。\"]},\"1749\":{\"h\":\"\",\"t\":[\"类型: ReverseMixin\",\"说明\",\"支持服务端请求的驱动器。\",\"Deprecated，请使用 ReverseMixin 或其子类代替。\"]},\"1750\":{\"h\":\"\",\"t\":[\"说明: 将一个驱动器和多个混入类合并。\",\"重载\",\"1.(driver) -> type[D]\",\"参数\",\"driver (type[D])\",\"返回\",\"type[D]\",\"2.(driver, __m, /, *mixins) -> type[CombinedDriver]\",\"参数\",\"driver (type[D])\",\"__m (type[Mixin])\",\"*mixins (type[Mixin])\",\"返回\",\"type[CombinedDriver]\"]},\"1751\":{\"h\":\"\",\"t\":[\"说明: HTTP 客户端混入基类。\",\"参数\",\"auto\"]},\"1752\":{\"h\":\"\",\"t\":[\"说明: 发送一个 HTTP 请求\",\"参数\",\"setup (Request)\",\"返回\",\"Response\"]},\"1753\":{\"h\":\"\",\"t\":[\"说明: 获取一个 HTTP 会话\",\"参数\",\"params (QueryTypes)\",\"headers (HeaderTypes)\",\"cookies (CookieTypes)\",\"version (str | HTTPVersion)\",\"timeout (float | None)\",\"proxy (str | None)\",\"返回\",\"HTTPClientSession\"]},\"1754\":{\"h\":\"\",\"t\":[\"说明: HTTP 服务器路由配置。\",\"参数\",\"auto\"]},\"1755\":{\"h\":\"\",\"t\":[\"说明: WebSocket 客户端混入基类。\",\"参数\",\"auto\"]},\"1756\":{\"h\":\"\",\"t\":[\"说明: 发起一个 WebSocket 连接\",\"参数\",\"setup (Request)\",\"返回\",\"AsyncGenerator[WebSocket, None]\"]},\"1757\":{\"h\":\"\",\"t\":[\"说明: WebSocket 服务器路由配置。\",\"参数\",\"auto\"]},\"1758\":{\"h\":\"nonebot.drivers.none\",\"t\":[\"None 驱动适配\",\"提示\",\"本驱动不支持任何服务器或客户端连接\"]},\"1759\":{\"h\":\"\",\"t\":[\"说明: None 驱动框架\",\"参数\",\"env (Env)\",\"config (Config)\"]},\"1760\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明: 驱动名称: none\"]},\"1761\":{\"h\":\"\",\"t\":[\"类型: untyped\",\"说明: none driver 使用的 logger\"]},\"1762\":{\"h\":\"\",\"t\":[\"说明: 启动 none driver\",\"参数\",\"*args\",\"**kwargs\",\"返回\",\"untyped\"]},\"1763\":{\"h\":\"\",\"t\":[\"说明: 退出 none driver\",\"参数\",\"force (bool): 强制退出\",\"返回\",\"untyped\"]},\"1764\":{\"h\":\"nonebot.drivers.quart\",\"t\":[\"Quart 驱动适配\",\"nb driver install quart # 或者 pip install nonebot2[quart]\",\"提示\",\"本驱动仅支持服务端连接\"]},\"1765\":{\"h\":\"\",\"t\":[\"说明: Quart 驱动框架设置\",\"参数\",\"auto\"]},\"1766\":{\"h\":\"\",\"t\":[\"类型: bool\",\"说明: 开启/关闭冷重载\"]},\"1767\":{\"h\":\"\",\"t\":[\"类型: list[str] | None\",\"说明: 重载监控文件夹列表，默认为 uvicorn 默认值\"]},\"1768\":{\"h\":\"\",\"t\":[\"类型: float\",\"说明: 重载延迟，默认为 uvicorn 默认值\"]},\"1769\":{\"h\":\"\",\"t\":[\"类型: list[str] | None\",\"说明: 要监听的文件列表，支持 glob pattern，默认为 uvicorn 默认值\"]},\"1770\":{\"h\":\"\",\"t\":[\"类型: list[str] | None\",\"说明: 不要监听的文件列表，支持 glob pattern，默认为 uvicorn 默认值\"]},\"1771\":{\"h\":\"\",\"t\":[\"类型: dict[str, Any]\",\"说明: 传递给 Quart 的其他参数。\"]},\"1772\":{\"h\":\"\",\"t\":[\"说明: Quart 驱动框架\",\"参数\",\"env (Env)\",\"config (NoneBotConfig)\"]},\"1773\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明: 驱动名称: quart\"]},\"1774\":{\"h\":\"\",\"t\":[\"类型: Quart\",\"说明:Quart 对象\"]},\"1775\":{\"h\":\"\",\"t\":[\"类型: untyped\",\"说明:Quart 对象\"]},\"1776\":{\"h\":\"\",\"t\":[\"类型: untyped\",\"说明: Quart 使用的 logger\"]},\"1777\":{\"h\":\"\",\"t\":[\"参数\",\"setup (HTTPServerSetup)\",\"返回\",\"untyped\"]},\"1778\":{\"h\":\"\",\"t\":[\"参数\",\"setup (WebSocketServerSetup)\",\"返回\",\"None\"]},\"1779\":{\"h\":\"\",\"t\":[\"说明: 使用 uvicorn 启动 Quart\",\"参数\",\"host (str | None)\",\"port (int | None)\",\"*args\",\"app (str | None)\",\"**kwargs\",\"返回\",\"untyped\"]},\"1780\":{\"h\":\"\",\"t\":[\"说明: Quart WebSocket Wrapper\",\"参数\",\"request (BaseRequest)\",\"websocket_ctx (WebsocketContext)\"]},\"1781\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"untyped\"]},\"1782\":{\"h\":\"\",\"t\":[\"参数\",\"code (int)\",\"reason (str)\",\"返回\",\"untyped\"]},\"1783\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"str | bytes\"]},\"1784\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"str\"]},\"1785\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"bytes\"]},\"1786\":{\"h\":\"\",\"t\":[\"参数\",\"data (str)\",\"返回\",\"untyped\"]},\"1787\":{\"h\":\"\",\"t\":[\"参数\",\"data (bytes)\",\"返回\",\"untyped\"]},\"1788\":{\"h\":\"nonebot.drivers.websockets\",\"t\":[\"websockets 驱动适配\",\"nb driver install websockets # 或者 pip install nonebot2[websockets]\",\"提示\",\"本驱动仅支持客户端 WebSocket 连接\"]},\"1789\":{\"h\":\"\",\"t\":[\"参数\",\"func ((P) -> Coroutine[Any, Any, T])\",\"返回\",\"(P) -> Coroutine[Any, Any, T]\"]},\"1790\":{\"h\":\"\",\"t\":[\"说明: Websockets Mixin\",\"参数\",\"auto\"]},\"1791\":{\"h\":\"\",\"t\":[\"参数\",\"setup (Request)\",\"返回\",\"AsyncGenerator[WebSocket, None]\"]},\"1792\":{\"h\":\"\",\"t\":[\"说明: Websockets WebSocket Wrapper\",\"参数\",\"request (Request)\",\"websocket (WebSocketClientProtocol)\"]},\"1793\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"untyped\"]},\"1794\":{\"h\":\"\",\"t\":[\"参数\",\"code (int)\",\"reason (str)\",\"返回\",\"untyped\"]},\"1795\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"str | bytes\"]},\"1796\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"str\"]},\"1797\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"bytes\"]},\"1798\":{\"h\":\"\",\"t\":[\"参数\",\"data (str)\",\"返回\",\"None\"]},\"1799\":{\"h\":\"\",\"t\":[\"参数\",\"data (bytes)\",\"返回\",\"None\"]},\"1800\":{\"h\":\"\",\"t\":[\"参数\",\"env (Env)\",\"config (Config)\"]},\"1801\":{\"h\":\"nonebot.plugin\",\"t\":[\"本模块为 NoneBot 插件开发提供便携的定义函数。\"]},\"1802\":{\"h\":\"快捷导入\",\"t\":[\"为方便使用，本模块从子模块导入了部分内容，以下内容可以直接通过本模块导入:\",\"on => on\",\"on_metaevent => on_metaevent\",\"on_message => on_message\",\"on_notice => on_notice\",\"on_request => on_request\",\"on_startswith => on_startswith\",\"on_endswith => on_endswith\",\"on_fullmatch => on_fullmatch\",\"on_keyword => on_keyword\",\"on_command => on_command\",\"on_shell_command => on_shell_command\",\"on_regex => on_regex\",\"on_type => on_type\",\"CommandGroup => CommandGroup\",\"Matchergroup => MatcherGroup\",\"load_plugin => load_plugin\",\"load_plugins => load_plugins\",\"load_all_plugins => load_all_plugins\",\"load_from_json => load_from_json\",\"load_from_toml => load_from_toml\",\"load_builtin_plugin =>load_builtin_plugin\",\"load_builtin_plugins =>load_builtin_plugins\",\"require => require\",\"PluginMetadata => PluginMetadata\"]},\"1803\":{\"h\":\"\",\"t\":[\"说明\",\"获取已经导入的某个插件。\",\"如果为 load_plugins 文件夹导入的插件，则为文件(夹)名。\",\"如果为嵌套的子插件，标识符为 父插件标识符:子插件文件(夹)名。\",\"参数\",\"plugin_id (str): 插件标识符，即 Plugin.id_。\",\"返回\",\"Plugin | None\"]},\"1804\":{\"h\":\"\",\"t\":[\"说明\",\"通过模块名获取已经导入的某个插件。\",\"如果提供的模块名为某个插件的子模块，同样会返回该插件。\",\"参数\",\"module_name (str): 模块名，即 Plugin.module_name。\",\"返回\",\"Plugin | None\"]},\"1805\":{\"h\":\"\",\"t\":[\"说明: 获取当前已导入的所有插件。\",\"参数\",\"empty\",\"返回\",\"set[Plugin]\"]},\"1806\":{\"h\":\"\",\"t\":[\"说明: 获取当前所有可用的插件标识符（包含尚未加载的插件）。\",\"参数\",\"empty\",\"返回\",\"set[str]\"]},\"1807\":{\"h\":\"\",\"t\":[\"说明: 从全局配置获取当前插件需要的配置项。\",\"参数\",\"config (type[C])\",\"返回\",\"C\"]},\"1808\":{\"h\":\"nonebot.plugin.load\",\"t\":[\"本模块定义插件加载接口。\"]},\"1809\":{\"h\":\"\",\"t\":[\"说明: 加载单个插件，可以是本地插件或是通过 pip 安装的插件。\",\"参数\",\"module_path (str | Path): 插件名称 path.to.your.plugin 或插件路径 pathlib.Path(path/to/your/plugin)\",\"返回\",\"Plugin | None\"]},\"1810\":{\"h\":\"\",\"t\":[\"说明: 导入文件夹下多个插件，以 _ 开头的插件不会被导入!\",\"参数\",\"*plugin_dir (str): 文件夹路径\",\"返回\",\"set[Plugin]\"]},\"1811\":{\"h\":\"\",\"t\":[\"说明: 导入指定列表中的插件以及指定目录下多个插件，以 _ 开头的插件不会被导入!\",\"参数\",\"module_path (Iterable[str]): 指定插件集合\",\"plugin_dir (Iterable[str]): 指定文件夹路径集合\",\"返回\",\"set[Plugin]\"]},\"1812\":{\"h\":\"\",\"t\":[\"说明: 导入指定 json 文件中的 plugins 以及 plugin_dirs 下多个插件。 以 _ 开头的插件不会被导入!\",\"参数\",\"file_path (str): 指定 json 文件路径\",\"encoding (str): 指定 json 文件编码\",\"返回\",\"set[Plugin]\",\"用法\",\"{ \\\"plugins\\\": [\\\"some_plugin\\\"], \\\"plugin_dirs\\\": [\\\"some_dir\\\"] }\",\"nonebot.load_from_json(\\\"plugins.json\\\")\"]},\"1813\":{\"h\":\"\",\"t\":[\"说明: 导入指定 toml 文件 [tool.nonebot] 中的 plugins 以及 plugin_dirs 下多个插件。 以 _ 开头的插件不会被导入!\",\"参数\",\"file_path (str): 指定 toml 文件路径\",\"encoding (str): 指定 toml 文件编码\",\"返回\",\"set[Plugin]\",\"用法\",\"[tool.nonebot] plugins = [\\\"some_plugin\\\"] plugin_dirs = [\\\"some_dir\\\"]\",\"nonebot.load_from_toml(\\\"pyproject.toml\\\")\"]},\"1814\":{\"h\":\"\",\"t\":[\"说明: 导入 NoneBot 内置插件。\",\"参数\",\"name (str): 插件名称\",\"返回\",\"Plugin | None\"]},\"1815\":{\"h\":\"\",\"t\":[\"说明: 导入多个 NoneBot 内置插件。\",\"参数\",\"*plugins (str): 插件名称列表\",\"返回\",\"set[Plugin]\"]},\"1816\":{\"h\":\"\",\"t\":[\"说明: 声明依赖插件。\",\"参数\",\"name (str): 插件模块名或插件标识符，仅在已声明插件的情况下可使用标识符。\",\"返回\",\"ModuleType\",\"异常\",\"RuntimeError: 插件无法加载\"]},\"1817\":{\"h\":\"\",\"t\":[\"说明\",\"获取已加载插件的适配器支持状态集合。\",\"如果传入了多个插件名称，返回值会自动取交集。\",\"参数\",\"*names (str): 插件名称列表。\",\"返回\",\"set[str] | None\",\"异常\",\"RuntimeError: 插件未加载\",\"ValueError: 插件缺少元数据\"]},\"1818\":{\"h\":\"nonebot.plugin.manager\",\"t\":[\"本模块实现插件加载流程。\",\"参考: import hooks, PEP302\"]},\"1819\":{\"h\":\"\",\"t\":[\"说明: 插件管理器。\",\"参数\",\"plugins (Iterable[str] | None): 独立插件模块名集合。\",\"search_path (Iterable[str] | None): 插件搜索路径（文件夹），相对于当前工作目录。\"]},\"1820\":{\"h\":\"\",\"t\":[\"类型: set[str]\",\"说明: 返回所有独立插件标识符。\"]},\"1821\":{\"h\":\"\",\"t\":[\"类型: set[str]\",\"说明: 返回已搜索到的插件标识符。\"]},\"1822\":{\"h\":\"\",\"t\":[\"类型: set[str]\",\"说明: 返回当前插件管理器中可用的插件标识符。\"]},\"1823\":{\"h\":\"\",\"t\":[\"类型: dict[str, str]\",\"说明: 返回当前插件管理器中控制的插件标识符与模块路径映射字典。\"]},\"1824\":{\"h\":\"\",\"t\":[\"说明\",\"加载指定插件。\",\"可以使用完整插件模块名或者插件标识符加载。\",\"参数\",\"name (str): 插件名称或插件标识符。\",\"返回\",\"Plugin | None\"]},\"1825\":{\"h\":\"\",\"t\":[\"说明: 加载所有可用插件。\",\"参数\",\"empty\",\"返回\",\"set[Plugin]\"]},\"1826\":{\"h\":\"\",\"t\":[\"参数\",\"auto\"]},\"1827\":{\"h\":\"\",\"t\":[\"参数\",\"fullname (str)\",\"path (Sequence[str] | None)\",\"target (ModuleType | None)\",\"返回\",\"untyped\"]},\"1828\":{\"h\":\"\",\"t\":[\"参数\",\"manager (PluginManager)\",\"fullname (str)\",\"path (str)\"]},\"1829\":{\"h\":\"\",\"t\":[\"参数\",\"spec\",\"返回\",\"ModuleType | None\"]},\"1830\":{\"h\":\"\",\"t\":[\"参数\",\"module (ModuleType)\",\"返回\",\"None\"]},\"1831\":{\"h\":\"nonebot.plugin.model\",\"t\":[\"本模块定义插件相关信息。\"]},\"1832\":{\"h\":\"\",\"t\":[\"说明: 插件元信息，由插件编写者提供\",\"参数\",\"auto\"]},\"1833\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明: 插件名称\"]},\"1834\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明: 插件功能介绍\"]},\"1835\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明: 插件使用方法\"]},\"1836\":{\"h\":\"\",\"t\":[\"类型: str | None\",\"说明: 插件类型，用于商店分类\"]},\"1837\":{\"h\":\"\",\"t\":[\"类型: str | None\",\"说明: 插件主页\"]},\"1838\":{\"h\":\"\",\"t\":[\"类型: type[BaseModel] | None\",\"说明: 插件配置项\"]},\"1839\":{\"h\":\"\",\"t\":[\"类型: set[str] | None\",\"说明\",\"插件支持的适配器模块路径\",\"格式为 <module>[:<Adapter>]，~ 为 nonebot.adapters. 的缩写。\",\"None 表示支持所有适配器。\"]},\"1840\":{\"h\":\"\",\"t\":[\"类型: dict[Any, Any]\",\"说明: 插件额外信息，可由插件编写者自由扩展定义\"]},\"1841\":{\"h\":\"\",\"t\":[\"说明: 获取当前已安装的插件支持适配器类列表\",\"参数\",\"empty\",\"返回\",\"set[type[Adapter]] | None\"]},\"1842\":{\"h\":\"\",\"t\":[\"说明: 存储插件信息\",\"参数\",\"auto\"]},\"1843\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明: 插件名称，NoneBot 使用 文件/文件夹 名称作为插件名称\"]},\"1844\":{\"h\":\"\",\"t\":[\"类型: ModuleType\",\"说明: 插件模块对象\"]},\"1845\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明: 点分割模块路径\"]},\"1846\":{\"h\":\"\",\"t\":[\"类型:PluginManager\",\"说明: 导入该插件的插件管理器\"]},\"1847\":{\"h\":\"\",\"t\":[\"类型: set[type[Matcher]]\",\"说明: 插件加载时定义的 Matcher\"]},\"1848\":{\"h\":\"\",\"t\":[\"类型: Plugin | None\",\"说明: 父插件\"]},\"1849\":{\"h\":\"\",\"t\":[\"类型: set[Plugin]\",\"说明: 子插件集合\"]},\"1850\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明: 插件索引标识\"]},\"1851\":{\"h\":\"nonebot.plugin.on\",\"t\":[\"本模块定义事件响应器便携定义函数。\"]},\"1852\":{\"h\":\"\",\"t\":[\"说明: 存储一个事件响应器到插件。\",\"参数\",\"matcher (type[Matcher]): 事件响应器\",\"返回\",\"None\"]},\"1853\":{\"h\":\"\",\"t\":[\"说明\",\"获取事件响应器定义所在插件。\",\"Deprecated, 请使用 get_matcher_source 获取信息。\",\"参数\",\"depth (int): 调用栈深度\",\"返回\",\"Plugin | None\"]},\"1854\":{\"h\":\"\",\"t\":[\"说明\",\"获取事件响应器定义所在模块。\",\"Deprecated, 请使用 get_matcher_source 获取信息。\",\"参数\",\"depth (int): 调用栈深度\",\"返回\",\"ModuleType | None\"]},\"1855\":{\"h\":\"\",\"t\":[\"说明: 获取事件响应器定义所在源码信息。\",\"参数\",\"depth (int): 调用栈深度\",\"返回\",\"MatcherSource | None\"]},\"1856\":{\"h\":\"\",\"t\":[\"说明: 注册一个基础事件响应器，可自定义类型。\",\"参数\",\"type (str): 事件响应器类型\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"1857\":{\"h\":\"\",\"t\":[\"说明: 注册一个元事件响应器。\",\"参数\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"1858\":{\"h\":\"\",\"t\":[\"说明: 注册一个消息事件响应器。\",\"参数\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"1859\":{\"h\":\"\",\"t\":[\"说明: 注册一个通知事件响应器。\",\"参数\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"1860\":{\"h\":\"\",\"t\":[\"说明: 注册一个请求事件响应器。\",\"参数\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"1861\":{\"h\":\"\",\"t\":[\"说明: 注册一个消息事件响应器，并且当消息的文本部分以指定内容开头时响应。\",\"参数\",\"msg (str | tuple[str, ...]): 指定消息开头内容\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"ignorecase (bool): 是否忽略大小写\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"1862\":{\"h\":\"\",\"t\":[\"说明: 注册一个消息事件响应器，并且当消息的文本部分以指定内容结尾时响应。\",\"参数\",\"msg (str | tuple[str, ...]): 指定消息结尾内容\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"ignorecase (bool): 是否忽略大小写\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"1863\":{\"h\":\"\",\"t\":[\"说明: 注册一个消息事件响应器，并且当消息的文本部分与指定内容完全一致时响应。\",\"参数\",\"msg (str | tuple[str, ...]): 指定消息全匹配内容\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"ignorecase (bool): 是否忽略大小写\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"1864\":{\"h\":\"\",\"t\":[\"说明: 注册一个消息事件响应器，并且当消息纯文本部分包含关键词时响应。\",\"参数\",\"keywords (set[str]): 关键词列表\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"1865\":{\"h\":\"\",\"t\":[\"说明\",\"注册一个消息事件响应器，并且当消息以指定命令开头时响应。\",\"命令匹配规则参考: 命令形式匹配 <rule.md#command-command>_\",\"参数\",\"cmd (str | tuple[str, ...]): 指定命令内容\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"aliases (set[str | tuple[str, ...]] | None): 命令别名\",\"force_whitespace (str | bool | None): 是否强制命令后必须有指定空白符\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"1866\":{\"h\":\"\",\"t\":[\"说明\",\"注册一个支持 shell_like 解析参数的命令消息事件响应器。\",\"与普通的 on_command 不同的是，在添加 parser 参数时, 响应器会自动处理消息。\",\"可以通过 ShellCommandArgv 获取原始参数列表， 通过 ShellCommandArgs 获取解析后的参数字典。\",\"参数\",\"cmd (str | tuple[str, ...]): 指定命令内容\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"aliases (set[str | tuple[str, ...]] | None): 命令别名\",\"parser (ArgumentParser | None): nonebot.rule.ArgumentParser 对象\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"1867\":{\"h\":\"\",\"t\":[\"说明\",\"注册一个消息事件响应器，并且当消息匹配正则表达式时响应。\",\"命令匹配规则参考: 正则匹配 <rule.md#regex-regex-flags-0>_\",\"参数\",\"pattern (str): 正则表达式\",\"flags (int | re.RegexFlag): 正则匹配标志\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"1868\":{\"h\":\"\",\"t\":[\"说明: 注册一个事件响应器，并且当事件为指定类型时响应。\",\"参数\",\"types (type[Event] | tuple[type[Event], ...]): 事件类型\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"1869\":{\"h\":\"\",\"t\":[\"参数\",\"cmd (str | tuple[str, ...])\",\"prefix_aliases (bool)\",\"rule (Rule | T_RuleChecker | None)\",\"permission (Permission | T_PermissionChecker | None)\",\"handlers (list[T_Handler | Dependent[Any]] | None)\",\"temp (bool)\",\"expire_time (datetime | timedelta | None)\",\"priority (int)\",\"block (bool)\",\"state (T_State | None)\"]},\"1870\":{\"h\":\"\",\"t\":[\"说明: 注册一个新的命令。新参数将会覆盖命令组默认值\",\"参数\",\"cmd (str | tuple[str, ...]): 指定命令内容\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"aliases (set[str | tuple[str, ...]] | None): 命令别名\",\"force_whitespace (str | bool | None): 是否强制命令后必须有指定空白符\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"1871\":{\"h\":\"\",\"t\":[\"说明: 注册一个新的 shell_like 命令。新参数将会覆盖命令组默认值\",\"参数\",\"cmd (str | tuple[str, ...]): 指定命令内容\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"aliases (set[str | tuple[str, ...]] | None): 命令别名\",\"parser (ArgumentParser | None): nonebot.rule.ArgumentParser 对象\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"1872\":{\"h\":\"\",\"t\":[\"参数\",\"type (str)\",\"rule (Rule | T_RuleChecker | None)\",\"permission (Permission | T_PermissionChecker | None)\",\"handlers (list[T_Handler | Dependent[Any]] | None)\",\"temp (bool)\",\"expire_time (datetime | timedelta | None)\",\"priority (int)\",\"block (bool)\",\"state (T_State | None)\"]},\"1873\":{\"h\":\"\",\"t\":[\"说明: 注册一个基础事件响应器，可自定义类型。\",\"参数\",\"type (str): 事件响应器类型\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"1874\":{\"h\":\"\",\"t\":[\"说明: 注册一个元事件响应器。\",\"参数\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"1875\":{\"h\":\"\",\"t\":[\"说明: 注册一个消息事件响应器。\",\"参数\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"1876\":{\"h\":\"\",\"t\":[\"说明: 注册一个通知事件响应器。\",\"参数\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"1877\":{\"h\":\"\",\"t\":[\"说明: 注册一个请求事件响应器。\",\"参数\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"1878\":{\"h\":\"\",\"t\":[\"说明: 注册一个消息事件响应器，并且当消息的文本部分以指定内容开头时响应。\",\"参数\",\"msg (str | tuple[str, ...]): 指定消息开头内容\",\"ignorecase (bool): 是否忽略大小写\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"1879\":{\"h\":\"\",\"t\":[\"说明: 注册一个消息事件响应器，并且当消息的文本部分以指定内容结尾时响应。\",\"参数\",\"msg (str | tuple[str, ...]): 指定消息结尾内容\",\"ignorecase (bool): 是否忽略大小写\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"1880\":{\"h\":\"\",\"t\":[\"说明: 注册一个消息事件响应器，并且当消息的文本部分与指定内容完全一致时响应。\",\"参数\",\"msg (str | tuple[str, ...]): 指定消息全匹配内容\",\"ignorecase (bool): 是否忽略大小写\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"1881\":{\"h\":\"\",\"t\":[\"说明: 注册一个消息事件响应器，并且当消息纯文本部分包含关键词时响应。\",\"参数\",\"keywords (set[str]): 关键词列表\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"1882\":{\"h\":\"\",\"t\":[\"说明\",\"注册一个消息事件响应器，并且当消息以指定命令开头时响应。\",\"命令匹配规则参考: 命令形式匹配 <rule.md#command-command>_\",\"参数\",\"cmd (str | tuple[str, ...]): 指定命令内容\",\"aliases (set[str | tuple[str, ...]] | None): 命令别名\",\"force_whitespace (str | bool | None): 是否强制命令后必须有指定空白符\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"1883\":{\"h\":\"\",\"t\":[\"说明\",\"注册一个支持 shell_like 解析参数的命令消息事件响应器。\",\"与普通的 on_command 不同的是，在添加 parser 参数时, 响应器会自动处理消息。\",\"可以通过 ShellCommandArgv 获取原始参数列表， 通过 ShellCommandArgs 获取解析后的参数字典。\",\"参数\",\"cmd (str | tuple[str, ...]): 指定命令内容\",\"aliases (set[str | tuple[str, ...]] | None): 命令别名\",\"parser (ArgumentParser | None): nonebot.rule.ArgumentParser 对象\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"1884\":{\"h\":\"\",\"t\":[\"说明\",\"注册一个消息事件响应器，并且当消息匹配正则表达式时响应。\",\"命令匹配规则参考: 正则匹配 <rule.md#regex-regex-flags-0>_\",\"参数\",\"pattern (str): 正则表达式\",\"flags (int | re.RegexFlag): 正则匹配标志\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"1885\":{\"h\":\"\",\"t\":[\"说明: 注册一个事件响应器，并且当事件为指定类型时响应。\",\"参数\",\"types (type[Event] | tuple[type[Event]]): 事件类型\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"1886\":{\"h\":\"Alconna 本体\",\"t\":[\"Alconna 隶属于 ArcletProject，是一个简单、灵活、高效的命令参数解析器, 并且不局限于解析命令式字符串。\",\"我们通过一个例子来讲解 Alconna 的核心 —— Args, Subcommand, Option：\",\"from arclet.alconna import Alconna, Args, Subcommand, Option alc = Alconna( \\\"pip\\\", Subcommand( \\\"install\\\", Args[\\\"package\\\", str], Option(\\\"-r|--requirement\\\", Args[\\\"file\\\", str]), Option(\\\"-i|--index-url\\\", Args[\\\"url\\\", str]), ) ) res = alc.parse(\\\"pip install nonebot2 -i URL\\\") print(res) # matched=True, header_match=(origin='pip' result='pip' matched=True groups={}), subcommands={'install': (value=Ellipsis args={'package': 'nonebot2'} options={'index-url': (value=None args={'url': 'URL'})} subcommands={})}, other_args={'package': 'nonebot2', 'url': 'URL'} print(res.all_matched_args) # {'package': 'nonebot2', 'url': 'URL'}\",\"这段代码通过Alconna创捷了一个接受主命令名为pip, 子命令为install且子命令接受一个 Args 参数package和二个 Option 参数-r和-i的命令参数解析器, 通过parse方法返回解析结果 Arparma 的实例。\"]},\"1887\":{\"h\":\"命令头\",\"t\":[\"命令头是指命令的前缀 (Prefix) 与命令名 (Command) 的组合，例如 !help 中的 ! 与 help。\",\"前缀\",\"命令名\",\"匹配内容\",\"说明\",\"-\",\"\\\"foo\\\"\",\"\\\"foo\\\"\",\"无前缀的纯文字头\",\"-\",\"123\",\"123\",\"无前缀的元素头\",\"-\",\"\\\"re:\\\\d{2}\\\"\",\"\\\"32\\\"\",\"无前缀的正则头\",\"-\",\"int\",\"123 或 \\\"456\\\"\",\"无前缀的类型头\",\"[int, bool]\",\"-\",\"True 或 123\",\"无名的元素类头\",\"[\\\"foo\\\", \\\"bar\\\"]\",\"-\",\"\\\"foo\\\" 或 \\\"bar\\\"\",\"无名的纯文字头\",\"[\\\"foo\\\", \\\"bar\\\"]\",\"\\\"baz\\\"\",\"\\\"foobaz\\\" 或 \\\"barbaz\\\"\",\"纯文字头\",\"[int, bool]\",\"\\\"foo\\\"\",\"[123, \\\"foo\\\"] 或 [False, \\\"foo\\\"]\",\"类型头\",\"[123, 4567]\",\"\\\"foo\\\"\",\"[123, \\\"foo\\\"] 或 [4567, \\\"foo\\\"]\",\"元素头\",\"[nepattern.NUMBER]\",\"\\\"bar\\\"\",\"[123, \\\"bar\\\"] 或 [123.456, \\\"bar\\\"]\",\"表达式头\",\"[123, \\\"foo\\\"]\",\"\\\"bar\\\"\",\"[123, \\\"bar\\\"] 或 \\\"foobar\\\" 或 [\\\"foo\\\", \\\"bar\\\"]\",\"混合头\",\"[(int, \\\"foo\\\"), (456, \\\"bar\\\")]\",\"\\\"baz\\\"\",\"[123, \\\"foobaz\\\"] 或 [456, \\\"foobaz\\\"] 或 [456, \\\"barbaz\\\"]\",\"对头\",\"对于无前缀的类型头，此时会将传入的值尝试转为 BasePattern，例如 int 会转为 nepattern.INTEGER。如此该命令头会匹配对应的类型， 例如 int 会匹配 123 或 \\\"456\\\"，但不会匹配 \\\"foo\\\"。解析后，Alconna 会将命令头匹配到的值转为对应的类型，例如 int 会将 \\\"123\\\" 转为 123。\",\"提示\",\"正则内容只在命令名上生效，前缀中的正则会被转义\",\"除了通过传入 re:xxx 来使用正则表达式外，Alconna 还提供了一种更加简洁的方式来使用正则表达式，称为 Bracket Header：\",\"from alconna import Alconna alc = Alconna(\\\".rd{roll:int}\\\") assert alc.parse(\\\".rd123\\\").header[\\\"roll\\\"] == 123\",\"Bracket Header 类似 python 里的 f-string 写法，通过 \\\"{}\\\" 声明匹配类型\",\"\\\"{}\\\" 中的内容为 \\\"name:type or pat\\\"：\",\"\\\"{}\\\", \\\"{:}\\\" ⇔ \\\"(.+)\\\", 占位符\",\"\\\"{foo}\\\" ⇔ \\\"(?P&lt;foo&gt;.+)\\\"\",\"\\\"{:\\\\d+}\\\" ⇔ \\\"(\\\\d+)\\\"\",\"\\\"{foo:int}\\\" ⇔ \\\"(?P&lt;foo&gt;\\\\d+)\\\"，其中 \\\"int\\\" 部分若能转为 BasePattern 则读取里面的表达式\"]},\"1888\":{\"h\":\"参数声明(Args)\",\"t\":[\"Args 是用于声明命令参数的组件， 可以通过以下几种方式构造 Args ：\",\"Args[key, var, default][key1, var1, default1][...]\",\"Args[(key, var, default)]\",\"Args.key[var, default]\",\"其中，key 一定是字符串，而 var 一般为参数的类型，default 为具体的值或者 arclet.alconna.args.Field\",\"其与函数签名类似，但是允许含有默认值的参数在前；同时支持 keyword-only 参数不依照构造顺序传入 （但是仍需要在非 keyword-only 参数之后）。\"]},\"1889\":{\"h\":\"key\",\"t\":[\"key 的作用是用以标记解析出来的参数并存放于 Arparma 中，以方便用户调用。\",\"其有三种为 Args 注解的标识符: ?、/、 !, 标识符与 key 之间建议以 ; 分隔：\",\"! 标识符表示该处传入的参数应不是规定的类型，或不在指定的值中。\",\"? 标识符表示该参数为可选参数，会在无参数匹配时跳过。\",\"/ 标识符表示该参数的类型注解需要隐藏。\",\"另外，对于参数的注释也可以标记在 key 中，其与 key 或者标识符 以 # 分割：foo#这是注释;? 或 foo?#这是注释\",\"提示\",\"Args 中的 key 在实际命令中并不需要传入（keyword 参数除外）：\",\"from arclet.alconna import Alconna, Args alc = Alconna(\\\"test\\\", Args[\\\"foo\\\", str]) alc.parse(\\\"test --foo abc\\\") # 错误 alc.parse(\\\"test abc\\\") # 正确\",\"若需要 test --foo abc，你应该使用 Option：\",\"from arclet.alconna import Alconna, Args, Option alc = Alconna(\\\"test\\\", Option(\\\"--foo\\\", Args[\\\"foo\\\", str]))\"]},\"1890\":{\"h\":\"var\",\"t\":[\"var 负责命令参数的类型检查与类型转化\",\"Args 的var表面上看需要传入一个 type，但实际上它需要的是一个 nepattern.BasePattern 的实例：\",\"from arclet.alconna import Args from nepattern import BasePattern # 表示 foo 参数需要匹配一个 @number 样式的字符串 args = Args[\\\"foo\\\", BasePattern(\\\"@\\\\d+\\\")]\",\"pip 示例中可以传入 str 是因为 str 已经注册在了 nepattern.global_patterns 中，因此会替换为 nepattern.global_patterns[str]\",\"nepattern.global_patterns默认支持的类型有：\",\"str: 匹配任意字符串\",\"int: 匹配整数\",\"float: 匹配浮点数\",\"bool: 匹配 True 与 False 以及他们小写形式\",\"hex: 匹配 0x 开头的十六进制字符串\",\"url: 匹配网址\",\"email: 匹配 xxxx@xxx 的字符串\",\"ipv4: 匹配 xxx.xxx.xxx.xxx 的字符串\",\"list: 匹配类似 [\\\"foo\\\",\\\"bar\\\",\\\"baz\\\"] 的字符串\",\"dict: 匹配类似 {\\\"foo\\\":\\\"bar\\\",\\\"baz\\\":\\\"qux\\\"} 的字符串\",\"datetime: 传入一个 datetime 支持的格式字符串，或时间戳\",\"Any: 匹配任意类型\",\"AnyString: 匹配任意类型，转为 str\",\"Number: 匹配 int 与 float，转为 int\",\"同时可以使用 typing 中的类型：\",\"Literal[X]: 匹配其中的任意一个值\",\"Union[X, Y]: 匹配其中的任意一个类型\",\"Optional[xxx]: 会自动将默认值设为 None，并在解析失败时使用默认值\",\"List[X]: 匹配一个列表，其中的元素为 X 类型\",\"Dict[X, Y]: 匹配一个字典，其中的 key 为 X 类型，value 为 Y 类型\",\"...\",\"提示\",\"几类特殊的传入标记：\",\"\\\"foo\\\": 匹配字符串 \\\"foo\\\" (若没有某个 BasePattern 与之关联)\",\"RawStr(\\\"foo\\\"): 匹配字符串 \\\"foo\\\" (即使有 BasePattern 与之关联也不会被替换)\",\"\\\"foo|bar|baz\\\": 匹配 \\\"foo\\\" 或 \\\"bar\\\" 或 \\\"baz\\\"\",\"[foo, bar, Baz, ...]: 匹配其中的任意一个值或类型\",\"Callable[[X], Y]: 匹配一个参数为 X 类型的值，并返回通过该函数调用得到的 Y 类型的值\",\"\\\"re:xxx\\\": 匹配一个正则表达式 xxx，会返回 Match[0]\",\"\\\"rep:xxx\\\": 匹配一个正则表达式 xxx，会返回 re.Match 对象\",\"{foo: bar, baz: qux}: 匹配字典中的任意一个键, 并返回对应的值 (特殊的键 ... 会匹配任意的值)\",\"...\",\"特别的，你可以不传入 var，此时会使用 key 作为 var, 匹配 key 字符串。\"]},\"1891\":{\"h\":\"MultiVar 与 KeyWordVar\",\"t\":[\"MultiVar 是一个特殊的标注，用于告知解析器该参数可以接受多个值，类似于函数中的 *args，其构造方法形如 MultiVar(str)。\",\"同样的还有 KeyWordVar，类似于函数中的 *, name: type，其构造方法形如 KeyWordVar(str)，用于告知解析器该参数为一个 keyword-only 参数。\",\"提示\",\"MultiVar 与 KeyWordVar 组合时，代表该参数为一个可接受多个 key-value 的参数，类似于函数中的 **kwargs，其构造方法形如 MultiVar(KeyWordVar(str))\",\"MultiVar 与 KeyWordVar 也可以传入 default 参数，用于指定默认值\",\"MultiVar 不能在 KeyWordVar 之后传入\"]},\"1892\":{\"h\":\"default\",\"t\":[\"default 传入的是该参数的默认值或者 Field，以携带对于该参数的更多信息。\",\"默认情况下 (即不声明) default 的值为特殊值 Empty。这也意味着你可以将默认值设置为 None 表示默认值为空值。\",\"Field 构造需要的参数说明如下：\",\"default: 参数单元的默认值\",\"alias: 参数单元默认值的别名\",\"completion: 参数单元的补全说明生成函数\",\"unmatch_tips: 参数单元的错误提示生成函数，其接收一个表示匹配失败的元素的参数\",\"missing_tips: 参数单元的缺失提示生成函数\"]},\"1893\":{\"h\":\"选项与子命令(Option & Subcommand)\",\"t\":[\"Option 和 Subcommand 可以传入一组 alias，如 Option(\\\"--foo|-F|--FOO|-f\\\")，Subcommand(\\\"foo\\\", alias=[\\\"F\\\"])\",\"传入别名后，选项与子命令会选择其中长度最长的作为其名称。若传入为 \\\"--foo|-f\\\"，则命令名称为 \\\"--foo\\\"\",\"特别提醒!!!\",\"Option 的名字或别名没有要求必须在前面写上 -\",\"Option 与 Subcommand 的唯一区别在于 Subcommand 可以传入自己的 Option 与 Subcommand\",\"他们拥有如下共同参数：\",\"help_text: 传入该组件的帮助信息\",\"dest: 被指定为解析完成时标注匹配结果的标识符，不传入时默认为选项或子命令的名称 (name)\",\"requires: 一段指定顺序的字符串列表，作为唯一的前置序列与命令嵌套替换 对于命令 test foo bar baz qux <a:int> 来讲，因为foo bar baz 仅需要判断是否相等, 所以可以这么编写：\",\"Alconna(\\\"test\\\", Option(\\\"qux\\\", Args.a[int], requires=[\\\"foo\\\", \\\"bar\\\", \\\"baz\\\"]))\",\"default: 默认值，在该组件未被解析时使用使用该值替换。 特别的，使用 OptionResult 或 SubcomanndResult 可以设置包括参数字典在内的默认值：\",\"from arclet.alconna import Option, OptionResult opt1 = Option(\\\"--foo\\\", default=False) opt2 = Option(\\\"--foo\\\", default=OptionResult(value=False, args={\\\"bar\\\": 1}))\"]},\"1894\":{\"h\":\"Action\",\"t\":[\"Option 可以特别设置传入一类 Action，作为解析操作\",\"Action 分为三类：\",\"store: 无 Args 时， 仅存储一个值， 默认为 Ellipsis； 有 Args 时， 后续的解析结果会覆盖之前的值\",\"append: 无 Args 时， 将多个值存为列表， 默认为 Ellipsis； 有 Args 时， 每个解析结果会追加到列表中, 当存在默认值并且不为列表时， 会自动将默认值变成列表， 以保证追加的正确性\",\"count: 无 Args 时， 计数器加一； 有 Args 时， 表现与 STORE 相同, 当存在默认值并且不为数字时， 会自动将默认值变成 1， 以保证计数器的正确性。\",\"Alconna 提供了预制的几类 Action：\",\"store(默认)，store_value，store_true，store_false\",\"append，append_value\",\"count\"]},\"1895\":{\"h\":\"解析结果(Arparma)\",\"t\":[\"Alconna.parse 会返回由 Arparma 承载的解析结果\",\"Arparma 有如下属性：\",\"调试类\",\"matched: 是否匹配成功\",\"error_data: 解析失败时剩余的数据\",\"error_info: 解析失败时的异常内容\",\"origin: 原始命令，可以类型标注\",\"分析类\",\"header_match: 命令头部的解析结果，包括原始头部、解析后头部、解析结果与可能的正则匹配组\",\"main_args: 命令的主参数的解析结果\",\"options: 命令所有选项的解析结果\",\"subcommands: 命令所有子命令的解析结果\",\"other_args: 除主参数外的其他解析结果\",\"all_matched_args: 所有 Args 的解析结果\",\"Arparma 同时提供了便捷的查询方法 query[type]()，会根据传入的 path 查找参数并返回\",\"path 支持如下:\",\"main_args, options, ...: 返回对应的属性\",\"args: 返回 all_matched_args\",\"main_args.xxx, options.xxx, ...: 返回字典中 xxx键对应的值\",\"args.xxx: 返回 all_matched_args 中 xxx键对应的值\",\"options.foo, foo: 返回选项 foo 的解析结果 (OptionResult)\",\"options.foo.value, foo.value: 返回选项 foo 的解析值\",\"options.foo.args, foo.args: 返回选项 foo 的解析参数字典\",\"options.foo.args.bar, foo.bar: 返回选项 foo 的参数字典中 bar 键对应的值 ...\"]},\"1896\":{\"h\":\"元数据(CommandMeta)\",\"t\":[\"Alconna 的元数据相当于其配置，拥有以下条目：\",\"description: 命令的描述\",\"usage: 命令的用法\",\"example: 命令的使用样例\",\"author: 命令的作者\",\"fuzzy_match: 命令是否开启模糊匹配\",\"fuzzy_threshold: 模糊匹配阈值\",\"raise_exception: 命令是否抛出异常\",\"hide: 命令是否对 manager 隐藏\",\"hide_shortcut: 命令的快捷指令是否在 help 信息中隐藏\",\"keep_crlf: 命令解析时是否保留换行字符\",\"compact: 命令是否允许第一个参数紧随头部\",\"strict: 命令是否严格匹配，若为 False 则未知参数将作为名为 $extra 的参数\",\"context_style: 命令上下文插值的风格，None 为关闭，bracket 为 {...}，parentheses 为 $(...)\",\"extra: 命令的自定义额外信息\",\"元数据一定使用 meta=... 形式传入：\",\"from arclet.alconna import Alconna, CommandMeta alc = Alconna(..., meta=CommandMeta(\\\"foo\\\", example=\\\"bar\\\"))\"]},\"1897\":{\"h\":\"命名空间配置\",\"t\":[\"命名空间配置 （以下简称命名空间） 相当于 Alconna 的默认配置，其优先度低于 CommandMeta。\",\"Alconna 默认使用 \\\"Alconna\\\" 命名空间。\",\"命名空间有以下几个属性：\",\"name: 命名空间名称\",\"prefixes: 默认前缀配置\",\"separators: 默认分隔符配置\",\"formatter_type: 默认格式化器类型\",\"fuzzy_match: 默认是否开启模糊匹配\",\"raise_exception: 默认是否抛出异常\",\"builtin_option_name: 默认的内置选项名称(--help, --shortcut, --comp)\",\"disable_builtin_options: 默认禁用的内置选项(--help, --shortcut, --comp)\",\"enable_message_cache: 默认是否启用消息缓存\",\"compact: 默认是否开启紧凑模式\",\"strict: 命令是否严格匹配\",\"context_style: 命令上下文插值的风格\",\"...\"]},\"1898\":{\"h\":\"新建命名空间并替换\",\"t\":[\"from arclet.alconna import Alconna, namespace, Namespace, Subcommand, Args, config ns = Namespace(\\\"foo\\\", prefixes=[\\\"/\\\"]) # 创建 \\\"foo\\\"命名空间配置, 它要求创建的Alconna的主命令前缀必须是/ alc = Alconna(\\\"pip\\\", Subcommand(\\\"install\\\", Args[\\\"package\\\", str]), namespace=ns) # 在创建Alconna时候传入命名空间以替换默认命名空间 # 可以通过with方式创建命名空间 with namespace(\\\"bar\\\") as np1: np1.prefixes = [\\\"!\\\"] # 以上下文管理器方式配置命名空间，此时配置会自动注入上下文内创建的命令 np1.formatter_type = ShellTextFormatter # 设置此命名空间下的命令的 formatter 默认为 ShellTextFormatter np1.builtin_option_name[\\\"help\\\"] = {\\\"帮助\\\", \\\"-h\\\"} # 设置此命名空间下的命令的帮助选项名称 # 你还可以使用config来管理所有命名空间并切换至任意命名空间 config.namespaces[\\\"foo\\\"] = ns # 将命名空间挂载到 config 上 alc = Alconna(\\\"pip\\\", Subcommand(\\\"install\\\", Args[\\\"package\\\", str]), namespace=config.namespaces[\\\"foo\\\"]) # 也是同样可以切换到\\\"foo\\\"命名空间\"]},\"1899\":{\"h\":\"修改默认的命名空间\",\"t\":[\"from arclet.alconna import config, namespace, Namespace config.default_namespace.prefixes = [...] # 直接修改默认配置 np = Namespace(\\\"xxx\\\", prefixes=[...]) config.default_namespace = np # 更换默认的命名空间 with namespace(config.default_namespace.name) as np: np.prefixes = [...]\"]},\"1900\":{\"h\":\"快捷指令\",\"t\":[\"快捷命令可以做到标识一段命令, 并且传递参数给原命令\",\"一般情况下你可以通过 Alconna.shortcut 进行快捷指令操作 (创建，删除)\",\"shortcut 的第一个参数为快捷指令名称，第二个参数为 ShortcutArgs，作为快捷指令的配置：\",\"class ShortcutArgs(TypedDict): \\\"\\\"\\\"快捷指令参数\\\"\\\"\\\" command: NotRequired[str] \\\"\\\"\\\"快捷指令的命令\\\"\\\"\\\" args: NotRequired[list[Any]] \\\"\\\"\\\"快捷指令的附带参数\\\"\\\"\\\" fuzzy: NotRequired[bool] \\\"\\\"\\\"是否允许命令后随参数\\\"\\\"\\\" prefix: NotRequired[bool] \\\"\\\"\\\"是否调用时保留指令前缀\\\"\\\"\\\" wrapper: NotRequired[ShortcutRegWrapper] \\\"\\\"\\\"快捷指令的正则匹配结果的额外处理函数\\\"\\\"\\\" humanized: NotRequired[str] \\\"\\\"\\\"快捷指令的人类可读描述\\\"\\\"\\\"\"]},\"1901\":{\"h\":\"args的使用\",\"t\":[\"from arclet.alconna import Alconna, Args alc = Alconna(\\\"setu\\\", Args[\\\"count\\\", int]) alc.shortcut(\\\"涩图(\\\\d+)张\\\", {\\\"args\\\": [\\\"{0}\\\"]}) # 'Alconna::setu 的快捷指令: \\\"涩图(\\\\\\\\d+)张\\\" 添加成功' alc.parse(\\\"涩图3张\\\").query(\\\"count\\\") # 3\"]},\"1902\":{\"h\":\"command的使用\",\"t\":[\"from arclet.alconna import Alconna, Args alc = Alconna(\\\"eval\\\", Args[\\\"content\\\", str]) alc.shortcut(\\\"echo\\\", {\\\"command\\\": \\\"eval print(\\\\\\\\'{*}\\\\\\\\')\\\"}) # 'Alconna::eval 的快捷指令: \\\"echo\\\" 添加成功' alc.shortcut(\\\"echo\\\", delete=True) # 删除快捷指令 # 'Alconna::eval 的快捷指令: \\\"echo\\\" 删除成功' @alc.bind() # 绑定一个命令执行器, 若匹配成功则会传入参数, 自动执行命令执行器 def cb(content: str): eval(content, {}, {}) alc.parse('eval print(\\\\\\\\\\\"hello world\\\\\\\\\\\")') # hello world alc.parse(\\\"echo hello world!\\\") # hello world!\",\"当 fuzzy 为 False 时，第一个例子中传入 \\\"涩图1张 abc\\\" 之类的快捷指令将视为解析失败\",\"快捷指令允许三类特殊的 placeholder：\",\"{%X}: 如 setu {%0}，表示此处填入快捷指令后随的第 X 个参数。\",\"例如，若快捷指令为 涩图, 配置为 {\\\"command\\\": \\\"setu {%0}\\\"}, 则指令 涩图 1 相当于 setu 1\",\"{*}: 表示此处填入所有后随参数，并且可以通过 {*X} 的方式指定组合参数之间的分隔符。\",\"{X}: 表示此处填入可能的正则匹配的组：\",\"若 command 中存在匹配组 (xxx)，则 {X} 表示第 X 个匹配组的内容\",\"若 command 中存储匹配组 (?P<xxx>...), 则 {X} 表示 名字 为 X 的匹配结果\",\"除此之外, 通过 Alconna 内置选项 --shortcut 可以动态操作快捷指令\",\"例如：\",\"cmd --shortcut <key> <cmd> 来增加一个快捷指令\",\"cmd --shortcut list 来列出当前指令的所有快捷指令\",\"cmd --shortcut delete key 来删除一个快捷指令\",\"from arclet.alconna import Alconna, Args alc = Alconna(\\\"eval\\\", Args[\\\"content\\\", str]) alc.shortcut(\\\"echo\\\", {\\\"command\\\": \\\"eval print(\\\\\\\\'{*}\\\\\\\\')\\\"}) alc.parse(\\\"eval --shortcut list\\\") # 'echo'\"]},\"1903\":{\"h\":\"紧凑命令\",\"t\":[\"Alconna, Option 与 Subcommand 可以设置 compact=True 使得解析命令时允许名称与后随参数之间没有分隔：\",\"from arclet.alconna import Alconna, Option, CommandMeta, Args alc = Alconna(\\\"test\\\", Args[\\\"foo\\\", int], Option(\\\"BAR\\\", Args[\\\"baz\\\", str], compact=True), meta=CommandMeta(compact=True)) assert alc.parse(\\\"test123 BARabc\\\").matched\",\"这使得我们可以实现如下命令：\",\"from arclet.alconna import Alconna, Option, Args, append alc = Alconna(\\\"gcc\\\", Option(\\\"--flag|-F\\\", Args[\\\"content\\\", str], action=append, compact=True)) print(alc.parse(\\\"gcc -Fabc -Fdef -Fxyz\\\").query[list](\\\"flag.content\\\")) # ['abc', 'def', 'xyz']\",\"当 Option 的 action 为 count 时，其自动支持 compact 特性：\",\"from arclet.alconna import Alconna, Option, count alc = Alconna(\\\"pp\\\", Option(\\\"--verbose|-v\\\", action=count, default=0)) print(alc.parse(\\\"pp -vvv\\\").query[int](\\\"verbose.value\\\")) # 3\"]},\"1904\":{\"h\":\"模糊匹配\",\"t\":[\"模糊匹配会应用在任意需要进行名称判断的地方，如 命令名称，选项名称 和 参数名称 (如指定需要传入参数名称)。\",\"from arclet.alconna import Alconna, CommandMeta alc = Alconna(\\\"test_fuzzy\\\", meta=CommandMeta(fuzzy_match=True)) alc.parse(\\\"test_fuzy\\\") # test_fuzy is not matched. Do you mean \\\"test_fuzzy\\\"?\"]},\"1905\":{\"h\":\"半自动补全\",\"t\":[\"半自动补全为用户提供了推荐后续输入的功能\",\"补全默认通过 --comp 或 -cp 或 ? 触发：（命名空间配置可修改名称）\",\"from arclet.alconna import Alconna, Args, Option alc = Alconna(\\\"test\\\", Args[\\\"abc\\\", int]) + Option(\\\"foo\\\") + Option(\\\"bar\\\") alc.parse(\\\"test --comp\\\") ''' output 以下是建议的输入： * <abc: int> * --help * -h * -sct * --shortcut * foo * bar '''\"]},\"1906\":{\"h\":\"Duplication\",\"t\":[\"Duplication 用来提供更好的自动补全，类似于 ArgParse 的 Namespace\",\"普通情况下使用，需要利用到 ArgsStub、OptionStub 和 SubcommandStub 三个部分\",\"以pip为例，其对应的 Duplication 应如下构造:\",\"from arclet.alconna import Alconna, Args, Option, OptionResult, Duplication, SubcommandStub, Subcommand, count class MyDup(Duplication): verbose: OptionResult install: SubcommandStub alc = Alconna( \\\"pip\\\", Subcommand( \\\"install\\\", Args[\\\"package\\\", str], Option(\\\"-r|--requirement\\\", Args[\\\"file\\\", str]), Option(\\\"-i|--index-url\\\", Args[\\\"url\\\", str]), ), Option(\\\"-v|--version\\\"), Option(\\\"-v|--verbose\\\", action=count), ) res = alc.parse(\\\"pip -v install ...\\\") # 不使用duplication获得的提示较少 print(res.query(\\\"install\\\")) # (value=Ellipsis args={'package': '...'} options={} subcommands={}) result = alc.parse(\\\"pip -v install ...\\\", duplication=MyDup) print(result.install) # SubcommandStub(_origin=Subcommand('install', args=Args('package': str)), _value=Ellipsis, available=True, args=ArgsStub(_origin=Args('package': str), _value={'package': '...'}, available=True), dest='install', options=[OptionStub(_origin=Option('requirement', args=Args('file': str)), _value=None, available=False, args=ArgsStub(_origin=Args('file': str), _value={}, available=False), dest='requirement', aliases=['r', 'requirement'], name='requirement'), OptionStub(_origin=Option('index-url', args=Args('url': str)), _value=None, available=False, args=ArgsStub(_origin=Args('url': str), _value={}, available=False), dest='index-url', aliases=['index-url', 'i'], name='index-url')], subcommands=[], name='install')\",\"Duplication 也可以如 Namespace 一样直接标明参数名称和类型：\",\"from typing import Optional from arclet.alconna import Duplication class MyDup(Duplication): package: str file: Optional[str] = None url: Optional[str] = None\"]},\"1907\":{\"h\":\"上下文插值\",\"t\":[\"当 context_style 条目被设置后，传入的命令中符合上下文插值的字段会被自动替换成当前上下文中的信息。\",\"上下文可以在 parse 中传入：\",\"from arclet.alconna import Alconna, Args, CommandMeta alc = Alconna(\\\"test\\\", Args[\\\"foo\\\", int], meta=CommandMeta(context_style=\\\"parentheses\\\")) alc.parse(\\\"test $(bar)\\\", {\\\"bar\\\": 123}) # {\\\"foo\\\": 123}\",\"context_style 的值分两种：\",\"\\\"bracket\\\": 插值格式为 {...}，例如 {foo}\",\"\\\"parentheses\\\": 插值格式为 $(...)，例如 $(bar)\"]},\"1908\":{\"h\":\"配置项\"},\"1909\":{\"h\":\"alconna_auto_send_output\",\"t\":[\"类型: bool\",\"默认值: False\",\"是否全局启用输出信息自动发送，不启用则会在触发特殊内置选项后仍然将解析结果传递至响应器。\"]},\"1910\":{\"h\":\"alconna_use_command_start\",\"t\":[\"类型: bool\",\"默认值: False\",\"是否读取 Nonebot 的配置项 COMMAND_START 来作为全局的 Alconna 命令前缀\"]},\"1911\":{\"h\":\"alconna_auto_completion\",\"t\":[\"类型: bool\",\"默认值: False\",\"是否全局启用命令自动补全，启用后会在参数缺失或触发 --comp 选项时自自动启用交互式补全。\"]},\"1912\":{\"h\":\"alconna_use_origin\",\"t\":[\"类型: bool\",\"默认值: False\",\"是否全局使用原始消息 (即未经过 to_me 等处理的)，该选项会影响到 Alconna 的匹配行为。\"]},\"1913\":{\"h\":\"alconna_use_command_sep\",\"t\":[\"类型: bool\",\"默认值: False\",\"是否读取 Nonebot 的配置项 COMMAND_SEP 来作为全局的 Alconna 命令分隔符。\"]},\"1914\":{\"h\":\"alconna_global_extensions\",\"t\":[\"类型: List[str]\",\"默认值: []\",\"全局加载的扩展，路径以 . 分隔，如 foo.bar.baz:DemoExtension。\"]},\"1915\":{\"h\":\"alconna_context_style\",\"t\":[\"类型: Optional[Literal[\\\"bracket\\\", \\\"parentheses\\\"]]\",\"默认值: None\",\"全局命令上下文插值的风格，None 为关闭，bracket 为 {...}，parentheses 为 $(...)。\"]},\"1916\":{\"h\":\"alconna_enable_saa_patch\",\"t\":[\"类型: bool\",\"默认值: False\",\"是否启用 SAA 补丁。\"]},\"1917\":{\"h\":\"alconna_apply_filehost\",\"t\":[\"类型: bool\",\"默认值: False\",\"是否启用文件托管。\"]},\"1918\":{\"h\":\"alconna_apply_fetch_targets\",\"t\":[\"类型: bool\",\"默认值: False\",\"是否启动时拉取一次发送对象列表。\"]},\"1919\":{\"h\":\"用户指南\",\"t\":[\"nonebot-plugin-orm 功能强大且复杂，使用上有一定难度。 不过，对于用户而言，只需要掌握部分功能即可。\",\"注意\",\"请注意区分插件的项目名（如：nonebot-plugin-wordcloud）和模块名（如：nonebot_plugin_wordcloud）。nonebot-plugin-orm 中统一使用插件模块名。参见 插件命名规范。\"]},\"1920\":{\"h\":\"示例\"},\"1921\":{\"h\":\"创建新机器人\",\"t\":[\"我们想要创建一个机器人，并安装 nonebot-plugin-wordcloud 插件，只需要执行以下命令：\",\"nb init # 初始化项目文件夹 pip install nonebot-plugin-orm[sqlite] # 安装 nonebot-plugin-orm，并附带 SQLite 支持 nb plugin install nonebot-plugin-wordcloud # 安装插件 # nb orm heads # 查看有什么插件使用到了数据库（可选） nb orm upgrade # 升级数据库 # nb orm check # 检查一下数据库模式是否与模型定义一致（可选） nb run # 启动机器人\"]},\"1922\":{\"h\":\"卸载插件\",\"t\":[\"我们已经安装了 nonebot-plugin-wordcloud 插件，但是现在想要卸载它，并且删除它的数据，只需要执行以下命令：\",\"nb plugin uninstall nonebot-plugin-wordcloud # 卸载插件 # nb orm heads # 查看有什么插件使用到了数据库。（可选） nb orm downgrade nonebot_plugin_wordcloud@base # 降级数据库，删除数据 # nb orm check # 检查一下数据库模式是否与模型定义一致（可选）\"]},\"1923\":{\"h\":\"CLI\",\"t\":[\"接下来，让我们了解下示例中出现的 CLI 命令的含义：\"]},\"1924\":{\"h\":\"heads\",\"t\":[\"显示所有的分支头。一般一个分支对应一个插件。\",\"nb orm heads\",\"输出格式为 <迁移 ID> (<插件模块名>) (<头部类型>)：\",\"46327b837dd8 (nonebot_plugin_chatrecorder) (head) 9492159f98f7 (nonebot_plugin_user) (head) 71a72119935f (nonebot_plugin_session_orm) (effective head) ade8cdca5470 (nonebot_plugin_wordcloud) (head)\"]},\"1925\":{\"h\":\"upgrade\",\"t\":[\"升级数据库。每次安装新的插件或更新插件版本后，都需要执行此命令。\",\"nb orm upgrade <插件模块名>@<迁移 ID>\",\"其中，<插件模块名>@<迁移 ID> 是可选参数。如果不指定，则会将所有分支升级到最新版本，这也是最常见的用法：\",\"nb orm upgrade\"]},\"1926\":{\"h\":\"downgrade\",\"t\":[\"降级数据库。当需要回滚插件版本或删除插件时，可以执行此命令。\",\"nb orm downgrade <插件模块名>@<迁移 ID>\",\"其中，<迁移 ID> 也可以是 base，即回滚到初始状态。常用于卸载插件后删除其数据：\",\"nb orm downgrade <插件模块名>@base\"]},\"1927\":{\"h\":\"check\",\"t\":[\"检查数据库模式是否与模型定义一致。机器人启动前会自动运行此命令（ALEMBIC_STARTUP_CHECK=true 时），并在检查失败时阻止启动。\",\"nb orm check\"]},\"1928\":{\"h\":\"配置\"},\"1929\":{\"h\":\"sqlalchemy_database_url\",\"t\":[\"默认数据库连接 URL。参见 数据库驱动和后端 和 引擎配置 — SQLAlchemy 2.0 文档。\",\"SQLALCHEMY_DATABASE_URL=dialect+driver://username:password@host:port/database\"]},\"1930\":{\"h\":\"sqlalchemy_bind\",\"t\":[\"bind keys（一般为插件模块名）到数据库连接 URL、create_async_engine() 参数字典或 AsyncEngine 实例的字典。 例如，我们想要让 nonebot-plugin-wordcloud 插件使用一个 SQLite 数据库，并开启 Echo 选项 便于 debug，而其他插件使用默认的 PostgreSQL 数据库，可以这样配置：\",\"SQLALCHEMY_BINDS='{ \\\"\\\": \\\"postgresql+psycopg://scott:tiger@localhost/mydatabase\\\", \\\"nonebot_plugin_wordcloud\\\": { \\\"url\\\": \\\"sqlite+aiosqlite://\\\", \\\"echo\\\": true } }'\"]},\"1931\":{\"h\":\"sqlalchemy_engine_options\",\"t\":[\"create_async_engine() 默认参数字典。\",\"SQLALCHEMY_ENGINE_OPTIONS='{ \\\"pool_size\\\": 5, \\\"max_overflow\\\": 10, \\\"pool_timeout\\\": 30, \\\"pool_recycle\\\": 3600, \\\"echo\\\": true }'\"]},\"1932\":{\"h\":\"sqlalchemy_echo\",\"t\":[\"开启 Echo 选项 和 Echo Pool 选项 便于 debug。\",\"SQLALCHEMY_ECHO=true\",\"注意\",\"以上配置之间有覆盖关系，遵循特殊优先于一般的原则，具体为 sqlalchemy_database_url > sqlalchemy_bind > sqlalchemy_echo > sqlalchemy_engine_options。 但覆盖顺序并非显而易见，出于清晰考虑，请只配置必要的选项。\"]},\"1933\":{\"h\":\"模拟网络通信\",\"t\":[\"NoneBot 驱动器提供了多种方法来帮助适配器进行网络通信，主要包括客户端和服务端两种类型。模拟网络通信可以帮助我们更加接近实际机器人应用场景，进行更加真实的集成测试。同时，通过这种途径，我们还可以完成对适配器的测试。\",\"NoneBot 中的网络通信主要包括以下几种：\",\"HTTP 服务端（WebHook）\",\"WebSocket 服务端\",\"HTTP 客户端\",\"WebSocket 客户端\",\"下面我们将分别介绍如何使用 NoneBug 来模拟这几种通信方式。\"]},\"1934\":{\"h\":\"测试 HTTP 服务端\",\"t\":[\"当 NoneBot 作为 ASGI 服务端应用时，我们可以定义一系列的路由来处理 HTTP 请求，适配器同样也可以通过定义路由来响应机器人相关的网络通信。下面假设我们使用了一个适配器 fake ，它定义了一个路由 /fake/http ，用于接收平台 WebHook 并处理。实际应用测试时，应将该路由地址替换为真实适配器注册的路由地址。\",\"我们首先需要获取测试用模拟客户端：\",\"from nonebug import App @pytest.mark.asyncio async def test_http_server(app: App): async with app.test_server() as ctx: client = ctx.get_client()\",\"默认情况下，app.test_server() 会通过 nonebot.get_asgi 获取测试对象，我们也可以通过参数指定 ASGI 应用：\",\"async with app.test_server(asgi=asgi_app) as ctx: ...\",\"获取到模拟客户端后，即可像 requests、httpx 等库类似的方法进行使用：\",\"import nonebot from nonebug import App from nonebot.adapters.fake import Adapter @pytest.mark.asyncio async def test_http_server(app: App): adapter = nonebot.get_adapter(Adapter) async with app.test_server() as ctx: client = ctx.get_client() response = await client.post(\\\"/fake/http\\\", json={\\\"bot_id\\\": \\\"fake\\\"}) assert response.status_code == 200 assert response.json() == {\\\"status\\\": \\\"success\\\"} assert \\\"fake\\\" in nonebot.get_bots() adapter.bot_disconnect(nonebot.get_bot(\\\"fake\\\"))\",\"在上面的测试中，我们向 /fake/http 发送了一个模拟 POST 请求，适配器将会对该请求进行处理，我们可以通过检查请求返回是否正确、Bot 对象是否创建等途径来验证机器人是否正确运行。在完成测试后，我们通常需要对 Bot 对象进行清理，以避免对其他测试产生影响。\"]},\"1935\":{\"h\":\"测试 WebSocket 服务端\",\"t\":[\"当 NoneBot 作为 ASGI 服务端应用时，我们还可以定义一系列的路由来处理 WebSocket 通信。下面假设我们使用了一个适配器 fake ，它定义了一个路由 /fake/ws ，用于处理平台 WebSocket 连接信息。实际应用测试时，应将该路由地址替换为真实适配器注册的路由地址。\",\"我们同样需要通过 app.test_server() 获取测试用模拟客户端，这里就不再赘述。在获取到模拟客户端后，我们可以通过 client.websocket_connect 方法来模拟 WebSocket 连接：\",\"import nonebot from nonebug import App from nonebot.adapters.fake import Adapter @pytest.mark.asyncio async def test_ws_server(app: App): adapter = nonebot.get_adapter(Adapter) async with app.test_server() as ctx: client = ctx.get_client() async with client.websocket_connect(\\\"/fake/ws\\\") as ws: await ws.send_json({\\\"bot_id\\\": \\\"fake\\\"}) response = await ws.receive_json() assert response == {\\\"status\\\": \\\"success\\\"} assert \\\"fake\\\" in nonebot.get_bots()\",\"在上面的测试中，我们向 /fake/ws 进行了 WebSocket 模拟通信，通过发送消息与机器人进行交互，然后检查机器人发送的信息是否正确。\"]},\"1936\":{\"h\":\"测试 HTTP 客户端\",\"t\":[\"暂不支持\"]},\"1937\":{\"h\":\"测试 WebSocket 客户端\",\"t\":[\"暂不支持\"]},\"1938\":{\"h\":\"nonebot.adapters\",\"t\":[\"本模块定义了协议适配基类，各协议请继承以下基类。\",\"使用 Driver.register_adapter 注册适配器。\"]},\"1939\":{\"h\":\"\",\"t\":[\"说明\",\"Bot 基类。\",\"用于处理上报消息，并提供 API 调用接口。\",\"参数\",\"adapter (Adapter): 协议适配器实例\",\"self_id (str): 机器人 ID\"]},\"1940\":{\"h\":\"\",\"t\":[\"类型:Adapter\",\"说明: 协议适配器实例\"]},\"1941\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明: 机器人 ID\"]},\"1942\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明: 协议适配器名称\"]},\"1943\":{\"h\":\"\",\"t\":[\"类型:Config\",\"说明: 全局 NoneBot 配置\"]},\"1944\":{\"h\":\"\",\"t\":[\"说明: 调用机器人 API 接口，可以通过该函数或直接通过 bot 属性进行调用\",\"参数\",\"api (str): API 名称\",\"**data (Any): API 数据\",\"返回\",\"Any\",\"用法\",\"await bot.call_api(\\\"send_msg\\\", message=\\\"hello world\\\") await bot.send_msg(message=\\\"hello world\\\")\"]},\"1945\":{\"h\":\"\",\"t\":[\"说明: 调用机器人基础发送消息接口\",\"参数\",\"event (Event): 上报事件\",\"message (str | Message | MessageSegment): 要发送的消息\",\"**kwargs (Any): 任意额外参数\",\"返回\",\"Any\"]},\"1946\":{\"h\":\"\",\"t\":[\"说明\",\"调用 api 预处理。\",\"钩子函数参数:\",\"bot: 当前 bot 对象\",\"api: 调用的 api 名称\",\"data: api 调用的参数字典\",\"参数\",\"func (T_CallingAPIHook)\",\"返回\",\"T_CallingAPIHook\"]},\"1947\":{\"h\":\"\",\"t\":[\"说明\",\"调用 api 后处理。\",\"钩子函数参数:\",\"bot: 当前 bot 对象\",\"exception: 调用 api 时发生的错误\",\"api: 调用的 api 名称\",\"data: api 调用的参数字典\",\"result: api 调用的返回\",\"参数\",\"func (T_CalledAPIHook)\",\"返回\",\"T_CalledAPIHook\"]},\"1948\":{\"h\":\"\",\"t\":[\"说明: Event 基类。提供获取关键信息的方法，其余信息可直接获取。\",\"参数\",\"auto\"]},\"1949\":{\"h\":\"\",\"t\":[\"说明: 获取事件类型的方法，类型通常为 NoneBot 内置的四种类型。\",\"参数\",\"empty\",\"返回\",\"str\"]},\"1950\":{\"h\":\"\",\"t\":[\"说明: 获取事件名称的方法。\",\"参数\",\"empty\",\"返回\",\"str\"]},\"1951\":{\"h\":\"\",\"t\":[\"说明: 获取事件描述的方法，通常为事件具体内容。\",\"参数\",\"empty\",\"返回\",\"str\"]},\"1952\":{\"h\":\"\",\"t\":[\"说明\",\"获取事件日志信息的方法。\",\"通常你不需要修改这个方法，只有当希望 NoneBot 隐藏该事件日志时， 可以抛出 NoLogException 异常。\",\"参数\",\"empty\",\"返回\",\"str\",\"异常\",\"NoLogException: 希望 NoneBot 隐藏该事件日志\"]},\"1953\":{\"h\":\"\",\"t\":[\"说明: 获取事件主体 id 的方法，通常是用户 id 。\",\"参数\",\"empty\",\"返回\",\"str\"]},\"1954\":{\"h\":\"\",\"t\":[\"说明: 获取会话 id 的方法，用于判断当前事件属于哪一个会话， 通常是用户 id、群组 id 组合。\",\"参数\",\"empty\",\"返回\",\"str\"]},\"1955\":{\"h\":\"\",\"t\":[\"说明: 获取事件消息内容的方法。\",\"参数\",\"empty\",\"返回\",\"Message\"]},\"1956\":{\"h\":\"\",\"t\":[\"说明\",\"获取消息纯文本的方法。\",\"通常不需要修改，默认通过 get_message().extract_plain_text 获取。\",\"参数\",\"empty\",\"返回\",\"str\"]},\"1957\":{\"h\":\"\",\"t\":[\"说明: 获取事件是否与机器人有关的方法。\",\"参数\",\"empty\",\"返回\",\"bool\"]},\"1958\":{\"h\":\"\",\"t\":[\"说明\",\"协议适配器基类。\",\"通常，在 Adapter 中编写协议通信相关代码，如: 建立通信连接、处理接收与发送 data 等。\",\"参数\",\"driver (Driver): Driver 实例\",\"**kwargs (Any): 其他由 Driver.register_adapter 传入的额外参数\"]},\"1959\":{\"h\":\"\",\"t\":[\"类型:Driver\",\"说明: 实例\"]},\"1960\":{\"h\":\"\",\"t\":[\"类型: dict[str, Bot]\",\"说明: 本协议适配器已建立连接的 Bot 实例\"]},\"1961\":{\"h\":\"\",\"t\":[\"说明: 当前协议适配器的名称\",\"参数\",\"empty\",\"返回\",\"str\"]},\"1962\":{\"h\":\"\",\"t\":[\"类型:Config\",\"说明: 全局 NoneBot 配置\"]},\"1963\":{\"h\":\"\",\"t\":[\"说明\",\"告知 NoneBot 建立了一个新的 Bot 连接。\",\"当有新的 Bot 实例连接建立成功时调用。\",\"参数\",\"bot (Bot): Bot 实例\",\"返回\",\"None\"]},\"1964\":{\"h\":\"\",\"t\":[\"说明\",\"告知 NoneBot Bot 连接已断开。\",\"当有 Bot 实例连接断开时调用。\",\"参数\",\"bot (Bot): Bot 实例\",\"返回\",\"None\"]},\"1965\":{\"h\":\"\",\"t\":[\"说明: 设置一个 HTTP 服务器路由配置\",\"参数\",\"setup (HTTPServerSetup)\",\"返回\",\"untyped\"]},\"1966\":{\"h\":\"\",\"t\":[\"说明: 设置一个 WebSocket 服务器路由配置\",\"参数\",\"setup (WebSocketServerSetup)\",\"返回\",\"untyped\"]},\"1967\":{\"h\":\"\",\"t\":[\"说明: 进行一个 HTTP 客户端请求\",\"参数\",\"setup (Request)\",\"返回\",\"Response\"]},\"1968\":{\"h\":\"\",\"t\":[\"说明: 建立一个 WebSocket 客户端连接请求\",\"参数\",\"setup (Request)\",\"返回\",\"AsyncGenerator[WebSocket, None]\"]},\"1969\":{\"h\":\"\",\"t\":[\"参数\",\"func (LIFESPAN_FUNC)\",\"返回\",\"LIFESPAN_FUNC\"]},\"1970\":{\"h\":\"\",\"t\":[\"说明: 消息序列\",\"参数\",\"message: 消息内容\"]},\"1971\":{\"h\":\"\",\"t\":[\"说明\",\"创建消息模板。\",\"用法和 str.format 大致相同，支持以 Message 对象作为消息模板并输出消息对象。 并且提供了拓展的格式化控制符， 可以通过该消息类型的 MessageSegment 工厂方法创建消息。\",\"参数\",\"format_string (str | TM): 格式化模板\",\"返回\",\"MessageTemplate[Self]: 消息格式化器\"]},\"1972\":{\"h\":\"\",\"t\":[\"说明: 获取消息段类型\",\"参数\",\"empty\",\"返回\",\"type[TMS]\"]},\"1973\":{\"h\":\"\",\"t\":[\"说明: 构造消息数组\",\"参数\",\"msg (str)\",\"返回\",\"Iterable[TMS]\"]},\"1974\":{\"h\":\"\",\"t\":[\"重载\",\"1.(args) -> Self\",\"参数\",\"args (str): 消息段类型\",\"返回\",\"Self: 所有类型为 args 的消息段\",\"2.(args) -> TMS\",\"参数\",\"args (tuple[str, int]): 消息段类型和索引\",\"返回\",\"TMS: 类型为 args[0] 的消息段第 args[1] 个\",\"3.(args) -> Self\",\"参数\",\"args (tuple[str, slice]): 消息段类型和切片\",\"返回\",\"Self: 类型为 args[0] 的消息段切片 args[1]\",\"4.(args) -> TMS\",\"参数\",\"args (int): 索引\",\"返回\",\"TMS: 第 args 个消息段\",\"5.(args) -> Self\",\"参数\",\"args (slice): 切片\",\"返回\",\"Self: 消息切片 args\"]},\"1975\":{\"h\":\"\",\"t\":[\"说明: 检查消息段是否存在\",\"参数\",\"value (TMS | str): 消息段或消息段类型\",\"返回\",\"bool: 消息内是否存在给定消息段或给定类型的消息段\"]},\"1976\":{\"h\":\"\",\"t\":[\"说明: 与 __contains__ 相同\",\"参数\",\"value (TMS | str)\",\"返回\",\"bool\"]},\"1977\":{\"h\":\"\",\"t\":[\"说明: 索引消息段\",\"参数\",\"value (TMS | str): 消息段或者消息段类型\",\"*args (SupportsIndex)\",\"arg: start 与 end\",\"返回\",\"int: 索引 index\",\"异常\",\"ValueError: 消息段不存在\"]},\"1978\":{\"h\":\"\",\"t\":[\"说明: 获取指定类型的消息段\",\"参数\",\"type_ (str): 消息段类型\",\"count (int | None): 获取个数\",\"返回\",\"Self: 构建的新消息\"]},\"1979\":{\"h\":\"\",\"t\":[\"说明: 计算指定消息段的个数\",\"参数\",\"value (TMS | str): 消息段或消息段类型\",\"返回\",\"int: 个数\"]},\"1980\":{\"h\":\"\",\"t\":[\"说明: 检查消息中是否仅包含指定消息段\",\"参数\",\"value (TMS | str): 指定消息段或消息段类型\",\"返回\",\"bool: 是否仅包含指定消息段\"]},\"1981\":{\"h\":\"\",\"t\":[\"说明: 添加一个消息段到消息数组末尾。\",\"参数\",\"obj (str | TMS): 要添加的消息段\",\"返回\",\"Self\"]},\"1982\":{\"h\":\"\",\"t\":[\"说明: 拼接一个消息数组或多个消息段到消息数组末尾。\",\"参数\",\"obj (Self | Iterable[TMS]): 要添加的消息数组\",\"返回\",\"Self\"]},\"1983\":{\"h\":\"\",\"t\":[\"说明: 将多个消息连接并将自身作为分割\",\"参数\",\"iterable (Iterable[TMS | Self]): 要连接的消息\",\"返回\",\"Self: 连接后的消息\"]},\"1984\":{\"h\":\"\",\"t\":[\"说明: 深拷贝消息\",\"参数\",\"empty\",\"返回\",\"Self\"]},\"1985\":{\"h\":\"\",\"t\":[\"说明: 过滤消息\",\"参数\",\"*types (str): 包含的消息段类型\",\"返回\",\"Self: 新构造的消息\"]},\"1986\":{\"h\":\"\",\"t\":[\"说明: 过滤消息\",\"参数\",\"*types (str): 不包含的消息段类型\",\"返回\",\"Self: 新构造的消息\"]},\"1987\":{\"h\":\"\",\"t\":[\"说明: 提取消息内纯文本消息\",\"参数\",\"empty\",\"返回\",\"str\"]},\"1988\":{\"h\":\"\",\"t\":[\"说明: 消息段基类\",\"参数\",\"auto\"]},\"1989\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明: 消息段类型\"]},\"1990\":{\"h\":\"\",\"t\":[\"类型: dict[str, Any]\",\"说明: 消息段数据\"]},\"1991\":{\"h\":\"\",\"t\":[\"说明: 获取消息数组类型\",\"参数\",\"empty\",\"返回\",\"type[TM]\"]},\"1992\":{\"h\":\"\",\"t\":[\"说明: 该消息段所代表的 str，在命令匹配部分使用\",\"参数\",\"empty\",\"返回\",\"str\"]},\"1993\":{\"h\":\"\",\"t\":[\"参数\",\"other (str | TMS | Iterable[TMS])\",\"返回\",\"TM\"]},\"1994\":{\"h\":\"\",\"t\":[\"参数\",\"key (str)\",\"default (Any)\",\"返回\",\"untyped\"]},\"1995\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"untyped\"]},\"1996\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"untyped\"]},\"1997\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"untyped\"]},\"1998\":{\"h\":\"\",\"t\":[\"参数\",\"iterable (Iterable[TMS | TM])\",\"返回\",\"TM\"]},\"1999\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"Self\"]},\"2000\":{\"h\":\"\",\"t\":[\"说明: 当前消息段是否为纯文本\",\"参数\",\"empty\",\"返回\",\"bool\"]},\"2001\":{\"h\":\"\",\"t\":[\"说明: 消息模板格式化实现类。\",\"参数\",\"template (str | TM): 模板\",\"factory (type[str] | type[TM]): 消息类型工厂，默认为 str\",\"private_getattr (bool): 是否允许在模板中访问私有属性，默认为 False\"]},\"2002\":{\"h\":\"\",\"t\":[\"参数\",\"spec (FormatSpecFunc_T)\",\"name (str | None)\",\"返回\",\"FormatSpecFunc_T\"]},\"2003\":{\"h\":\"\",\"t\":[\"说明: 根据传入参数和模板生成消息对象\",\"参数\",\"*args\",\"**kwargs\",\"返回\",\"TF\"]},\"2004\":{\"h\":\"\",\"t\":[\"说明: 根据传入字典和模板生成消息对象, 在传入字段名不是有效标识符时有用\",\"参数\",\"mapping (Mapping[str, Any])\",\"返回\",\"TF\"]},\"2005\":{\"h\":\"\",\"t\":[\"参数\",\"format_string (str)\",\"args (Sequence[Any])\",\"kwargs (Mapping[str, Any])\",\"返回\",\"TF\"]},\"2006\":{\"h\":\"\",\"t\":[\"参数\",\"field_name (str)\",\"args (Sequence[Any])\",\"kwargs (Mapping[str, Any])\",\"返回\",\"tuple[Any, int | str]\"]},\"2007\":{\"h\":\"\",\"t\":[\"参数\",\"value (Any)\",\"format_spec (str)\",\"返回\",\"Any\"]},\"2008\":{\"h\":\"nonebot.dependencies\",\"t\":[\"本模块模块实现了依赖注入的定义与处理。\"]},\"2009\":{\"h\":\"\",\"t\":[\"说明\",\"依赖注入的基本单元 —— 参数。\",\"继承自 pydantic.fields.FieldInfo，用于描述参数信息（不包括参数名）。\",\"参数\",\"*args\",\"validate (bool)\",\"**kwargs (Any)\"]},\"2010\":{\"h\":\"\",\"t\":[\"说明: 依赖注入容器\",\"参数\",\"call: 依赖注入的可调用对象，可以是任何 Callable 对象\",\"pre_checkers: 依赖注入解析前的参数检查\",\"params: 具名参数列表\",\"parameterless: 匿名参数列表\",\"allow_types: 允许的参数类型\"]},\"2011\":{\"h\":\"\",\"t\":[\"参数\",\"call (_DependentCallable[R])\",\"allow_types (tuple[type[Param], ...])\",\"返回\",\"tuple[ModelField, ...]\"]},\"2012\":{\"h\":\"\",\"t\":[\"参数\",\"parameterless (tuple[Any, ...])\",\"allow_types (tuple[type[Param], ...])\",\"返回\",\"tuple[Param, ...]\"]},\"2013\":{\"h\":\"\",\"t\":[\"参数\",\"call (_DependentCallable[R])\",\"parameterless (Iterable[Any] | None)\",\"allow_types (Iterable[type[Param]])\",\"返回\",\"Dependent[R]\"]},\"2014\":{\"h\":\"\",\"t\":[\"参数\",\"**params (Any)\",\"返回\",\"None\"]},\"2015\":{\"h\":\"\",\"t\":[\"参数\",\"**params (Any)\",\"返回\",\"dict[str, Any]\"]},\"2016\":{\"h\":\"nonebot.dependencies.utils\"},\"2017\":{\"h\":\"\",\"t\":[\"说明: 获取可调用对象签名\",\"参数\",\"call ((...) -> Any)\",\"返回\",\"inspect.Signature\"]},\"2018\":{\"h\":\"\",\"t\":[\"说明: 获取参数的类型注解\",\"参数\",\"param (inspect.Parameter)\",\"globalns (dict[str, Any])\",\"返回\",\"Any\"]},\"2019\":{\"h\":\"\",\"t\":[\"说明: 检查字段类型是否匹配\",\"参数\",\"field (ModelField)\",\"value (Any)\",\"返回\",\"Any\"]},\"2020\":{\"h\":\"nonebot.drivers.aiohttp\",\"t\":[\"AIOHTTP 驱动适配器。\",\"nb driver install aiohttp # 或者 pip install nonebot2[aiohttp]\",\"提示\",\"本驱动仅支持客户端连接\"]},\"2021\":{\"h\":\"\",\"t\":[\"参数\",\"params (QueryTypes)\",\"headers (HeaderTypes)\",\"cookies (CookieTypes)\",\"version (str | HTTPVersion)\",\"timeout (float | None)\",\"proxy (str | None)\"]},\"2022\":{\"h\":\"\",\"t\":[\"参数\",\"setup (Request)\",\"返回\",\"Response\"]},\"2023\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"None\"]},\"2024\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"None\"]},\"2025\":{\"h\":\"\",\"t\":[\"说明: AIOHTTP Mixin\",\"参数\",\"auto\"]},\"2026\":{\"h\":\"\",\"t\":[\"参数\",\"setup (Request)\",\"返回\",\"Response\"]},\"2027\":{\"h\":\"\",\"t\":[\"参数\",\"setup (Request)\",\"返回\",\"AsyncGenerator[WebSocket, None]\"]},\"2028\":{\"h\":\"\",\"t\":[\"参数\",\"params (QueryTypes)\",\"headers (HeaderTypes)\",\"cookies (CookieTypes)\",\"version (str | HTTPVersion)\",\"timeout (float | None)\",\"proxy (str | None)\",\"返回\",\"Session\"]},\"2029\":{\"h\":\"\",\"t\":[\"说明: AIOHTTP Websocket Wrapper\",\"参数\",\"request (Request)\",\"session (aiohttp.ClientSession)\",\"websocket (aiohttp.ClientWebSocketResponse)\"]},\"2030\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"untyped\"]},\"2031\":{\"h\":\"\",\"t\":[\"参数\",\"code (int)\",\"reason (str)\",\"返回\",\"untyped\"]},\"2032\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"str\"]},\"2033\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"str\"]},\"2034\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"bytes\"]},\"2035\":{\"h\":\"\",\"t\":[\"参数\",\"data (str)\",\"返回\",\"None\"]},\"2036\":{\"h\":\"\",\"t\":[\"参数\",\"data (bytes)\",\"返回\",\"None\"]},\"2037\":{\"h\":\"\",\"t\":[\"参数\",\"env (Env)\",\"config (Config)\"]},\"2038\":{\"h\":\"nonebot.drivers.fastapi\",\"t\":[\"FastAPI 驱动适配\",\"nb driver install fastapi # 或者 pip install nonebot2[fastapi]\",\"提示\",\"本驱动仅支持服务端连接\"]},\"2039\":{\"h\":\"\",\"t\":[\"说明: FastAPI 驱动框架设置，详情参考 FastAPI 文档\",\"参数\",\"auto\"]},\"2040\":{\"h\":\"\",\"t\":[\"类型: str | None\",\"说明:openapi.json 地址，默认为 None 即关闭\"]},\"2041\":{\"h\":\"\",\"t\":[\"类型: str | None\",\"说明:swagger 地址，默认为 None 即关闭\"]},\"2042\":{\"h\":\"\",\"t\":[\"类型: str | None\",\"说明:redoc 地址，默认为 None 即关闭\"]},\"2043\":{\"h\":\"\",\"t\":[\"类型: bool\",\"说明: 是否包含适配器路由的 schema，默认为 True\"]},\"2044\":{\"h\":\"\",\"t\":[\"类型: bool\",\"说明: 开启/关闭冷重载\"]},\"2045\":{\"h\":\"\",\"t\":[\"类型: list[str] | None\",\"说明: 重载监控文件夹列表，默认为 uvicorn 默认值\"]},\"2046\":{\"h\":\"\",\"t\":[\"类型: float\",\"说明: 重载延迟，默认为 uvicorn 默认值\"]},\"2047\":{\"h\":\"\",\"t\":[\"类型: list[str] | None\",\"说明: 要监听的文件列表，支持 glob pattern，默认为 uvicorn 默认值\"]},\"2048\":{\"h\":\"\",\"t\":[\"类型: list[str] | None\",\"说明: 不要监听的文件列表，支持 glob pattern，默认为 uvicorn 默认值\"]},\"2049\":{\"h\":\"\",\"t\":[\"类型: dict[str, Any]\",\"说明: 传递给 FastAPI 的其他参数。\"]},\"2050\":{\"h\":\"\",\"t\":[\"说明: FastAPI 驱动框架。\",\"参数\",\"env (Env)\",\"config (NoneBotConfig)\"]},\"2051\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明: 驱动名称: fastapi\"]},\"2052\":{\"h\":\"\",\"t\":[\"类型: FastAPI\",\"说明:FastAPI APP 对象\"]},\"2053\":{\"h\":\"\",\"t\":[\"类型: FastAPI\",\"说明:FastAPI APP 对象\"]},\"2054\":{\"h\":\"\",\"t\":[\"类型: logging.Logger\",\"说明: fastapi 使用的 logger\"]},\"2055\":{\"h\":\"\",\"t\":[\"参数\",\"setup (HTTPServerSetup)\",\"返回\",\"untyped\"]},\"2056\":{\"h\":\"\",\"t\":[\"参数\",\"setup (WebSocketServerSetup)\",\"返回\",\"None\"]},\"2057\":{\"h\":\"\",\"t\":[\"说明: 使用 uvicorn 启动 FastAPI\",\"参数\",\"host (str | None)\",\"port (int | None)\",\"*args\",\"app (str | None)\",\"**kwargs\",\"返回\",\"untyped\"]},\"2058\":{\"h\":\"\",\"t\":[\"说明: FastAPI WebSocket Wrapper\",\"参数\",\"request (BaseRequest)\",\"websocket (WebSocket)\"]},\"2059\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"None\"]},\"2060\":{\"h\":\"\",\"t\":[\"参数\",\"code (int)\",\"reason (str)\",\"返回\",\"None\"]},\"2061\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"str | bytes\"]},\"2062\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"str\"]},\"2063\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"bytes\"]},\"2064\":{\"h\":\"\",\"t\":[\"参数\",\"data (str)\",\"返回\",\"None\"]},\"2065\":{\"h\":\"\",\"t\":[\"参数\",\"data (bytes)\",\"返回\",\"None\"]},\"2066\":{\"h\":\"nonebot.drivers.httpx\",\"t\":[\"HTTPX 驱动适配\",\"nb driver install httpx # 或者 pip install nonebot2[httpx]\",\"提示\",\"本驱动仅支持客户端 HTTP 连接\"]},\"2067\":{\"h\":\"\",\"t\":[\"参数\",\"params (QueryTypes)\",\"headers (HeaderTypes)\",\"cookies (CookieTypes)\",\"version (str | HTTPVersion)\",\"timeout (float | None)\",\"proxy (str | None)\"]},\"2068\":{\"h\":\"\",\"t\":[\"参数\",\"setup (Request)\",\"返回\",\"Response\"]},\"2069\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"None\"]},\"2070\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"None\"]},\"2071\":{\"h\":\"\",\"t\":[\"说明: HTTPX Mixin\",\"参数\",\"auto\"]},\"2072\":{\"h\":\"\",\"t\":[\"参数\",\"setup (Request)\",\"返回\",\"Response\"]},\"2073\":{\"h\":\"\",\"t\":[\"参数\",\"params (QueryTypes)\",\"headers (HeaderTypes)\",\"cookies (CookieTypes)\",\"version (str | HTTPVersion)\",\"timeout (float | None)\",\"proxy (str | None)\",\"返回\",\"Session\"]},\"2074\":{\"h\":\"\",\"t\":[\"参数\",\"env (Env)\",\"config (Config)\"]},\"2075\":{\"h\":\"nonebot.drivers\",\"t\":[\"本模块定义了驱动适配器基类。\",\"各驱动请继承以下基类。\"]},\"2076\":{\"h\":\"\",\"t\":[\"说明: 可与其他驱动器共用的混入基类。\",\"参数\",\"auto\"]},\"2077\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明: 混入驱动类型名称\"]},\"2078\":{\"h\":\"\",\"t\":[\"说明\",\"驱动器基类。\",\"驱动器控制框架的启动和停止，适配器的注册，以及机器人生命周期管理。\",\"参数\",\"env (Env): 包含环境信息的 Env 对象\",\"config (Config): 包含配置信息的 Config 对象\"]},\"2079\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明: 环境名称\"]},\"2080\":{\"h\":\"\",\"t\":[\"类型:Config\",\"说明: 全局配置对象\"]},\"2081\":{\"h\":\"\",\"t\":[\"类型: dict[str, Bot]\",\"说明: 获取当前所有已连接的 Bot\"]},\"2082\":{\"h\":\"\",\"t\":[\"说明: 注册一个协议适配器\",\"参数\",\"adapter (type[Adapter]): 适配器类\",\"**kwargs: 其他传递给适配器的参数\",\"返回\",\"None\"]},\"2083\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明: 驱动类型名称\"]},\"2084\":{\"h\":\"\",\"t\":[\"类型: untyped\",\"说明: 驱动专属 logger 日志记录器\"]},\"2085\":{\"h\":\"\",\"t\":[\"说明: 启动驱动框架\",\"参数\",\"*args\",\"**kwargs\",\"返回\",\"untyped\"]},\"2086\":{\"h\":\"\",\"t\":[\"说明: 注册一个启动时执行的函数\",\"参数\",\"func (LIFESPAN_FUNC)\",\"返回\",\"LIFESPAN_FUNC\"]},\"2087\":{\"h\":\"\",\"t\":[\"说明: 注册一个停止时执行的函数\",\"参数\",\"func (LIFESPAN_FUNC)\",\"返回\",\"LIFESPAN_FUNC\"]},\"2088\":{\"h\":\"\",\"t\":[\"说明\",\"装饰一个函数使他在 bot 连接成功时执行。\",\"钩子函数参数:\",\"bot: 当前连接上的 Bot 对象\",\"参数\",\"func (T_BotConnectionHook)\",\"返回\",\"T_BotConnectionHook\"]},\"2089\":{\"h\":\"\",\"t\":[\"说明\",\"装饰一个函数使他在 bot 连接断开时执行。\",\"钩子函数参数:\",\"bot: 当前连接上的 Bot 对象\",\"参数\",\"func (T_BotDisconnectionHook)\",\"返回\",\"T_BotDisconnectionHook\"]},\"2090\":{\"h\":\"\",\"t\":[\"参数\",\"cookies (CookieTypes)\"]},\"2091\":{\"h\":\"\",\"t\":[\"参数\",\"name (str)\",\"value (str)\",\"domain (str)\",\"path (str)\",\"返回\",\"None\"]},\"2092\":{\"h\":\"\",\"t\":[\"参数\",\"name (str)\",\"default (str | None)\",\"domain (str | None)\",\"path (str | None)\",\"返回\",\"str | None\"]},\"2093\":{\"h\":\"\",\"t\":[\"参数\",\"name (str)\",\"domain (str | None)\",\"path (str | None)\",\"返回\",\"None\"]},\"2094\":{\"h\":\"\",\"t\":[\"参数\",\"domain (str | None)\",\"path (str | None)\",\"返回\",\"None\"]},\"2095\":{\"h\":\"\",\"t\":[\"参数\",\"cookies (CookieTypes)\",\"返回\",\"None\"]},\"2096\":{\"h\":\"\",\"t\":[\"参数\",\"request (Request)\",\"返回\",\"dict[str, str]\"]},\"2097\":{\"h\":\"\",\"t\":[\"参数\",\"method (str | bytes)\",\"url (URL | str | RawURL)\",\"params (QueryTypes)\",\"headers (HeaderTypes)\",\"cookies (CookieTypes)\",\"content (ContentTypes)\",\"data (DataTypes)\",\"json (Any)\",\"files (FilesTypes)\",\"version (str | HTTPVersion)\",\"timeout (float | None)\",\"proxy (str | None)\"]},\"2098\":{\"h\":\"\",\"t\":[\"参数\",\"status_code (int)\",\"headers (HeaderTypes)\",\"content (ContentTypes)\",\"request (Request | None)\"]},\"2099\":{\"h\":\"\",\"t\":[\"说明\",\"ASGI 服务端基类。\",\"将后端框架封装，以满足适配器使用。\",\"参数\",\"auto\"]},\"2100\":{\"h\":\"\",\"t\":[\"类型: Any\",\"说明: 驱动 APP 对象\"]},\"2101\":{\"h\":\"\",\"t\":[\"类型: Any\",\"说明: 驱动 ASGI 对象\"]},\"2102\":{\"h\":\"\",\"t\":[\"说明: 设置一个 HTTP 服务器路由配置\",\"参数\",\"setup (HTTPServerSetup)\",\"返回\",\"None\"]},\"2103\":{\"h\":\"\",\"t\":[\"说明: 设置一个 WebSocket 服务器路由配置\",\"参数\",\"setup (WebSocketServerSetup)\",\"返回\",\"None\"]},\"2104\":{\"h\":\"\",\"t\":[\"参数\",\"request (Request)\"]},\"2105\":{\"h\":\"\",\"t\":[\"类型: bool\",\"说明: 连接是否已经关闭\"]},\"2106\":{\"h\":\"\",\"t\":[\"说明: 接受 WebSocket 连接请求\",\"参数\",\"empty\",\"返回\",\"None\"]},\"2107\":{\"h\":\"\",\"t\":[\"说明: 关闭 WebSocket 连接请求\",\"参数\",\"code (int)\",\"reason (str)\",\"返回\",\"None\"]},\"2108\":{\"h\":\"\",\"t\":[\"说明: 接收一条 WebSocket text/bytes 信息\",\"参数\",\"empty\",\"返回\",\"str | bytes\"]},\"2109\":{\"h\":\"\",\"t\":[\"说明: 接收一条 WebSocket text 信息\",\"参数\",\"empty\",\"返回\",\"str\"]},\"2110\":{\"h\":\"\",\"t\":[\"说明: 接收一条 WebSocket binary 信息\",\"参数\",\"empty\",\"返回\",\"bytes\"]},\"2111\":{\"h\":\"\",\"t\":[\"说明: 发送一条 WebSocket text/bytes 信息\",\"参数\",\"data (str | bytes)\",\"返回\",\"None\"]},\"2112\":{\"h\":\"\",\"t\":[\"说明: 发送一条 WebSocket text 信息\",\"参数\",\"data (str)\",\"返回\",\"None\"]},\"2113\":{\"h\":\"\",\"t\":[\"说明: 发送一条 WebSocket binary 信息\",\"参数\",\"data (bytes)\",\"返回\",\"None\"]},\"2114\":{\"h\":\"\",\"t\":[\"说明: An enumeration.\",\"参数\",\"auto\",\"H10: '1.0'\",\"H11: '1.1'\",\"H2: '2'\"]},\"2115\":{\"h\":\"\",\"t\":[\"说明: 客户端混入基类。\",\"参数\",\"auto\"]},\"2116\":{\"h\":\"\",\"t\":[\"说明: 服务端混入基类。\",\"参数\",\"auto\"]},\"2117\":{\"h\":\"\",\"t\":[\"类型: ForwardMixin\",\"说明\",\"支持客户端请求的驱动器。\",\"Deprecated，请使用 ForwardMixin 或其子类代替。\"]},\"2118\":{\"h\":\"\",\"t\":[\"类型: ReverseMixin\",\"说明\",\"支持服务端请求的驱动器。\",\"Deprecated，请使用 ReverseMixin 或其子类代替。\"]},\"2119\":{\"h\":\"\",\"t\":[\"说明: 将一个驱动器和多个混入类合并。\",\"重载\",\"1.(driver) -> type[D]\",\"参数\",\"driver (type[D])\",\"返回\",\"type[D]\",\"2.(driver, __m, /, *mixins) -> type[CombinedDriver]\",\"参数\",\"driver (type[D])\",\"__m (type[Mixin])\",\"*mixins (type[Mixin])\",\"返回\",\"type[CombinedDriver]\"]},\"2120\":{\"h\":\"\",\"t\":[\"说明: HTTP 客户端混入基类。\",\"参数\",\"auto\"]},\"2121\":{\"h\":\"\",\"t\":[\"说明: 发送一个 HTTP 请求\",\"参数\",\"setup (Request)\",\"返回\",\"Response\"]},\"2122\":{\"h\":\"\",\"t\":[\"说明: 获取一个 HTTP 会话\",\"参数\",\"params (QueryTypes)\",\"headers (HeaderTypes)\",\"cookies (CookieTypes)\",\"version (str | HTTPVersion)\",\"timeout (float | None)\",\"proxy (str | None)\",\"返回\",\"HTTPClientSession\"]},\"2123\":{\"h\":\"\",\"t\":[\"说明: HTTP 服务器路由配置。\",\"参数\",\"auto\"]},\"2124\":{\"h\":\"\",\"t\":[\"说明: WebSocket 客户端混入基类。\",\"参数\",\"auto\"]},\"2125\":{\"h\":\"\",\"t\":[\"说明: 发起一个 WebSocket 连接\",\"参数\",\"setup (Request)\",\"返回\",\"AsyncGenerator[WebSocket, None]\"]},\"2126\":{\"h\":\"\",\"t\":[\"说明: WebSocket 服务器路由配置。\",\"参数\",\"auto\"]},\"2127\":{\"h\":\"nonebot.drivers.none\",\"t\":[\"None 驱动适配\",\"提示\",\"本驱动不支持任何服务器或客户端连接\"]},\"2128\":{\"h\":\"\",\"t\":[\"说明: None 驱动框架\",\"参数\",\"env (Env)\",\"config (Config)\"]},\"2129\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明: 驱动名称: none\"]},\"2130\":{\"h\":\"\",\"t\":[\"类型: untyped\",\"说明: none driver 使用的 logger\"]},\"2131\":{\"h\":\"\",\"t\":[\"说明: 启动 none driver\",\"参数\",\"*args\",\"**kwargs\",\"返回\",\"untyped\"]},\"2132\":{\"h\":\"\",\"t\":[\"说明: 退出 none driver\",\"参数\",\"force (bool): 强制退出\",\"返回\",\"untyped\"]},\"2133\":{\"h\":\"nonebot.drivers.quart\",\"t\":[\"Quart 驱动适配\",\"nb driver install quart # 或者 pip install nonebot2[quart]\",\"提示\",\"本驱动仅支持服务端连接\"]},\"2134\":{\"h\":\"\",\"t\":[\"说明: Quart 驱动框架设置\",\"参数\",\"auto\"]},\"2135\":{\"h\":\"\",\"t\":[\"类型: bool\",\"说明: 开启/关闭冷重载\"]},\"2136\":{\"h\":\"\",\"t\":[\"类型: list[str] | None\",\"说明: 重载监控文件夹列表，默认为 uvicorn 默认值\"]},\"2137\":{\"h\":\"\",\"t\":[\"类型: float\",\"说明: 重载延迟，默认为 uvicorn 默认值\"]},\"2138\":{\"h\":\"\",\"t\":[\"类型: list[str] | None\",\"说明: 要监听的文件列表，支持 glob pattern，默认为 uvicorn 默认值\"]},\"2139\":{\"h\":\"\",\"t\":[\"类型: list[str] | None\",\"说明: 不要监听的文件列表，支持 glob pattern，默认为 uvicorn 默认值\"]},\"2140\":{\"h\":\"\",\"t\":[\"类型: dict[str, Any]\",\"说明: 传递给 Quart 的其他参数。\"]},\"2141\":{\"h\":\"\",\"t\":[\"说明: Quart 驱动框架\",\"参数\",\"env (Env)\",\"config (NoneBotConfig)\"]},\"2142\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明: 驱动名称: quart\"]},\"2143\":{\"h\":\"\",\"t\":[\"类型: Quart\",\"说明:Quart 对象\"]},\"2144\":{\"h\":\"\",\"t\":[\"类型: untyped\",\"说明:Quart 对象\"]},\"2145\":{\"h\":\"\",\"t\":[\"类型: untyped\",\"说明: Quart 使用的 logger\"]},\"2146\":{\"h\":\"\",\"t\":[\"参数\",\"setup (HTTPServerSetup)\",\"返回\",\"untyped\"]},\"2147\":{\"h\":\"\",\"t\":[\"参数\",\"setup (WebSocketServerSetup)\",\"返回\",\"None\"]},\"2148\":{\"h\":\"\",\"t\":[\"说明: 使用 uvicorn 启动 Quart\",\"参数\",\"host (str | None)\",\"port (int | None)\",\"*args\",\"app (str | None)\",\"**kwargs\",\"返回\",\"untyped\"]},\"2149\":{\"h\":\"\",\"t\":[\"说明: Quart WebSocket Wrapper\",\"参数\",\"request (BaseRequest)\",\"websocket_ctx (WebsocketContext)\"]},\"2150\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"untyped\"]},\"2151\":{\"h\":\"\",\"t\":[\"参数\",\"code (int)\",\"reason (str)\",\"返回\",\"untyped\"]},\"2152\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"str | bytes\"]},\"2153\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"str\"]},\"2154\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"bytes\"]},\"2155\":{\"h\":\"\",\"t\":[\"参数\",\"data (str)\",\"返回\",\"untyped\"]},\"2156\":{\"h\":\"\",\"t\":[\"参数\",\"data (bytes)\",\"返回\",\"untyped\"]},\"2157\":{\"h\":\"nonebot.drivers.websockets\",\"t\":[\"websockets 驱动适配\",\"nb driver install websockets # 或者 pip install nonebot2[websockets]\",\"提示\",\"本驱动仅支持客户端 WebSocket 连接\"]},\"2158\":{\"h\":\"\",\"t\":[\"参数\",\"func ((P) -> Coroutine[Any, Any, T])\",\"返回\",\"(P) -> Coroutine[Any, Any, T]\"]},\"2159\":{\"h\":\"\",\"t\":[\"说明: Websockets Mixin\",\"参数\",\"auto\"]},\"2160\":{\"h\":\"\",\"t\":[\"参数\",\"setup (Request)\",\"返回\",\"AsyncGenerator[WebSocket, None]\"]},\"2161\":{\"h\":\"\",\"t\":[\"说明: Websockets WebSocket Wrapper\",\"参数\",\"request (Request)\",\"websocket (WebSocketClientProtocol)\"]},\"2162\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"untyped\"]},\"2163\":{\"h\":\"\",\"t\":[\"参数\",\"code (int)\",\"reason (str)\",\"返回\",\"untyped\"]},\"2164\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"str | bytes\"]},\"2165\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"str\"]},\"2166\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"bytes\"]},\"2167\":{\"h\":\"\",\"t\":[\"参数\",\"data (str)\",\"返回\",\"None\"]},\"2168\":{\"h\":\"\",\"t\":[\"参数\",\"data (bytes)\",\"返回\",\"None\"]},\"2169\":{\"h\":\"\",\"t\":[\"参数\",\"env (Env)\",\"config (Config)\"]},\"2170\":{\"h\":\"nonebot.plugin\",\"t\":[\"本模块为 NoneBot 插件开发提供便携的定义函数。\"]},\"2171\":{\"h\":\"快捷导入\",\"t\":[\"为方便使用，本模块从子模块导入了部分内容，以下内容可以直接通过本模块导入:\",\"on => on\",\"on_metaevent => on_metaevent\",\"on_message => on_message\",\"on_notice => on_notice\",\"on_request => on_request\",\"on_startswith => on_startswith\",\"on_endswith => on_endswith\",\"on_fullmatch => on_fullmatch\",\"on_keyword => on_keyword\",\"on_command => on_command\",\"on_shell_command => on_shell_command\",\"on_regex => on_regex\",\"on_type => on_type\",\"CommandGroup => CommandGroup\",\"Matchergroup => MatcherGroup\",\"load_plugin => load_plugin\",\"load_plugins => load_plugins\",\"load_all_plugins => load_all_plugins\",\"load_from_json => load_from_json\",\"load_from_toml => load_from_toml\",\"load_builtin_plugin =>load_builtin_plugin\",\"load_builtin_plugins =>load_builtin_plugins\",\"require => require\",\"PluginMetadata => PluginMetadata\"]},\"2172\":{\"h\":\"\",\"t\":[\"说明\",\"获取已经导入的某个插件。\",\"如果为 load_plugins 文件夹导入的插件，则为文件(夹)名。\",\"如果为嵌套的子插件，标识符为 父插件标识符:子插件文件(夹)名。\",\"参数\",\"plugin_id (str): 插件标识符，即 Plugin.id_。\",\"返回\",\"Plugin | None\"]},\"2173\":{\"h\":\"\",\"t\":[\"说明\",\"通过模块名获取已经导入的某个插件。\",\"如果提供的模块名为某个插件的子模块，同样会返回该插件。\",\"参数\",\"module_name (str): 模块名，即 Plugin.module_name。\",\"返回\",\"Plugin | None\"]},\"2174\":{\"h\":\"\",\"t\":[\"说明: 获取当前已导入的所有插件。\",\"参数\",\"empty\",\"返回\",\"set[Plugin]\"]},\"2175\":{\"h\":\"\",\"t\":[\"说明: 获取当前所有可用的插件标识符（包含尚未加载的插件）。\",\"参数\",\"empty\",\"返回\",\"set[str]\"]},\"2176\":{\"h\":\"\",\"t\":[\"说明: 从全局配置获取当前插件需要的配置项。\",\"参数\",\"config (type[C])\",\"返回\",\"C\"]},\"2177\":{\"h\":\"nonebot.plugin.load\",\"t\":[\"本模块定义插件加载接口。\"]},\"2178\":{\"h\":\"\",\"t\":[\"说明: 加载单个插件，可以是本地插件或是通过 pip 安装的插件。\",\"参数\",\"module_path (str | Path): 插件名称 path.to.your.plugin 或插件路径 pathlib.Path(path/to/your/plugin)\",\"返回\",\"Plugin | None\"]},\"2179\":{\"h\":\"\",\"t\":[\"说明: 导入文件夹下多个插件，以 _ 开头的插件不会被导入!\",\"参数\",\"*plugin_dir (str): 文件夹路径\",\"返回\",\"set[Plugin]\"]},\"2180\":{\"h\":\"\",\"t\":[\"说明: 导入指定列表中的插件以及指定目录下多个插件，以 _ 开头的插件不会被导入!\",\"参数\",\"module_path (Iterable[str]): 指定插件集合\",\"plugin_dir (Iterable[str]): 指定文件夹路径集合\",\"返回\",\"set[Plugin]\"]},\"2181\":{\"h\":\"\",\"t\":[\"说明: 导入指定 json 文件中的 plugins 以及 plugin_dirs 下多个插件。 以 _ 开头的插件不会被导入!\",\"参数\",\"file_path (str): 指定 json 文件路径\",\"encoding (str): 指定 json 文件编码\",\"返回\",\"set[Plugin]\",\"用法\",\"{ \\\"plugins\\\": [\\\"some_plugin\\\"], \\\"plugin_dirs\\\": [\\\"some_dir\\\"] }\",\"nonebot.load_from_json(\\\"plugins.json\\\")\"]},\"2182\":{\"h\":\"\",\"t\":[\"说明: 导入指定 toml 文件 [tool.nonebot] 中的 plugins 以及 plugin_dirs 下多个插件。 以 _ 开头的插件不会被导入!\",\"参数\",\"file_path (str): 指定 toml 文件路径\",\"encoding (str): 指定 toml 文件编码\",\"返回\",\"set[Plugin]\",\"用法\",\"[tool.nonebot] plugins = [\\\"some_plugin\\\"] plugin_dirs = [\\\"some_dir\\\"]\",\"nonebot.load_from_toml(\\\"pyproject.toml\\\")\"]},\"2183\":{\"h\":\"\",\"t\":[\"说明: 导入 NoneBot 内置插件。\",\"参数\",\"name (str): 插件名称\",\"返回\",\"Plugin | None\"]},\"2184\":{\"h\":\"\",\"t\":[\"说明: 导入多个 NoneBot 内置插件。\",\"参数\",\"*plugins (str): 插件名称列表\",\"返回\",\"set[Plugin]\"]},\"2185\":{\"h\":\"\",\"t\":[\"说明: 声明依赖插件。\",\"参数\",\"name (str): 插件模块名或插件标识符，仅在已声明插件的情况下可使用标识符。\",\"返回\",\"ModuleType\",\"异常\",\"RuntimeError: 插件无法加载\"]},\"2186\":{\"h\":\"\",\"t\":[\"说明\",\"获取已加载插件的适配器支持状态集合。\",\"如果传入了多个插件名称，返回值会自动取交集。\",\"参数\",\"*names (str): 插件名称列表。\",\"返回\",\"set[str] | None\",\"异常\",\"RuntimeError: 插件未加载\",\"ValueError: 插件缺少元数据\"]},\"2187\":{\"h\":\"nonebot.plugin.manager\",\"t\":[\"本模块实现插件加载流程。\",\"参考: import hooks, PEP302\"]},\"2188\":{\"h\":\"\",\"t\":[\"说明: 插件管理器。\",\"参数\",\"plugins (Iterable[str] | None): 独立插件模块名集合。\",\"search_path (Iterable[str] | None): 插件搜索路径（文件夹），相对于当前工作目录。\"]},\"2189\":{\"h\":\"\",\"t\":[\"类型: set[str]\",\"说明: 返回所有独立插件标识符。\"]},\"2190\":{\"h\":\"\",\"t\":[\"类型: set[str]\",\"说明: 返回已搜索到的插件标识符。\"]},\"2191\":{\"h\":\"\",\"t\":[\"类型: set[str]\",\"说明: 返回当前插件管理器中可用的插件标识符。\"]},\"2192\":{\"h\":\"\",\"t\":[\"类型: dict[str, str]\",\"说明: 返回当前插件管理器中控制的插件标识符与模块路径映射字典。\"]},\"2193\":{\"h\":\"\",\"t\":[\"说明\",\"加载指定插件。\",\"可以使用完整插件模块名或者插件标识符加载。\",\"参数\",\"name (str): 插件名称或插件标识符。\",\"返回\",\"Plugin | None\"]},\"2194\":{\"h\":\"\",\"t\":[\"说明: 加载所有可用插件。\",\"参数\",\"empty\",\"返回\",\"set[Plugin]\"]},\"2195\":{\"h\":\"\",\"t\":[\"参数\",\"auto\"]},\"2196\":{\"h\":\"\",\"t\":[\"参数\",\"fullname (str)\",\"path (Sequence[str] | None)\",\"target (ModuleType | None)\",\"返回\",\"untyped\"]},\"2197\":{\"h\":\"\",\"t\":[\"参数\",\"manager (PluginManager)\",\"fullname (str)\",\"path (str)\"]},\"2198\":{\"h\":\"\",\"t\":[\"参数\",\"spec\",\"返回\",\"ModuleType | None\"]},\"2199\":{\"h\":\"\",\"t\":[\"参数\",\"module (ModuleType)\",\"返回\",\"None\"]},\"2200\":{\"h\":\"nonebot.plugin.model\",\"t\":[\"本模块定义插件相关信息。\"]},\"2201\":{\"h\":\"\",\"t\":[\"说明: 插件元信息，由插件编写者提供\",\"参数\",\"auto\"]},\"2202\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明: 插件名称\"]},\"2203\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明: 插件功能介绍\"]},\"2204\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明: 插件使用方法\"]},\"2205\":{\"h\":\"\",\"t\":[\"类型: str | None\",\"说明: 插件类型，用于商店分类\"]},\"2206\":{\"h\":\"\",\"t\":[\"类型: str | None\",\"说明: 插件主页\"]},\"2207\":{\"h\":\"\",\"t\":[\"类型: type[BaseModel] | None\",\"说明: 插件配置项\"]},\"2208\":{\"h\":\"\",\"t\":[\"类型: set[str] | None\",\"说明\",\"插件支持的适配器模块路径\",\"格式为 <module>[:<Adapter>]，~ 为 nonebot.adapters. 的缩写。\",\"None 表示支持所有适配器。\"]},\"2209\":{\"h\":\"\",\"t\":[\"类型: dict[Any, Any]\",\"说明: 插件额外信息，可由插件编写者自由扩展定义\"]},\"2210\":{\"h\":\"\",\"t\":[\"说明: 获取当前已安装的插件支持适配器类列表\",\"参数\",\"empty\",\"返回\",\"set[type[Adapter]] | None\"]},\"2211\":{\"h\":\"\",\"t\":[\"说明: 存储插件信息\",\"参数\",\"auto\"]},\"2212\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明: 插件名称，NoneBot 使用 文件/文件夹 名称作为插件名称\"]},\"2213\":{\"h\":\"\",\"t\":[\"类型: ModuleType\",\"说明: 插件模块对象\"]},\"2214\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明: 点分割模块路径\"]},\"2215\":{\"h\":\"\",\"t\":[\"类型:PluginManager\",\"说明: 导入该插件的插件管理器\"]},\"2216\":{\"h\":\"\",\"t\":[\"类型: set[type[Matcher]]\",\"说明: 插件加载时定义的 Matcher\"]},\"2217\":{\"h\":\"\",\"t\":[\"类型: Plugin | None\",\"说明: 父插件\"]},\"2218\":{\"h\":\"\",\"t\":[\"类型: set[Plugin]\",\"说明: 子插件集合\"]},\"2219\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明: 插件索引标识\"]},\"2220\":{\"h\":\"nonebot.plugin.on\",\"t\":[\"本模块定义事件响应器便携定义函数。\"]},\"2221\":{\"h\":\"\",\"t\":[\"说明: 存储一个事件响应器到插件。\",\"参数\",\"matcher (type[Matcher]): 事件响应器\",\"返回\",\"None\"]},\"2222\":{\"h\":\"\",\"t\":[\"说明\",\"获取事件响应器定义所在插件。\",\"Deprecated, 请使用 get_matcher_source 获取信息。\",\"参数\",\"depth (int): 调用栈深度\",\"返回\",\"Plugin | None\"]},\"2223\":{\"h\":\"\",\"t\":[\"说明\",\"获取事件响应器定义所在模块。\",\"Deprecated, 请使用 get_matcher_source 获取信息。\",\"参数\",\"depth (int): 调用栈深度\",\"返回\",\"ModuleType | None\"]},\"2224\":{\"h\":\"\",\"t\":[\"说明: 获取事件响应器定义所在源码信息。\",\"参数\",\"depth (int): 调用栈深度\",\"返回\",\"MatcherSource | None\"]},\"2225\":{\"h\":\"\",\"t\":[\"说明: 注册一个基础事件响应器，可自定义类型。\",\"参数\",\"type (str): 事件响应器类型\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2226\":{\"h\":\"\",\"t\":[\"说明: 注册一个元事件响应器。\",\"参数\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2227\":{\"h\":\"\",\"t\":[\"说明: 注册一个消息事件响应器。\",\"参数\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2228\":{\"h\":\"\",\"t\":[\"说明: 注册一个通知事件响应器。\",\"参数\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2229\":{\"h\":\"\",\"t\":[\"说明: 注册一个请求事件响应器。\",\"参数\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2230\":{\"h\":\"\",\"t\":[\"说明: 注册一个消息事件响应器，并且当消息的文本部分以指定内容开头时响应。\",\"参数\",\"msg (str | tuple[str, ...]): 指定消息开头内容\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"ignorecase (bool): 是否忽略大小写\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2231\":{\"h\":\"\",\"t\":[\"说明: 注册一个消息事件响应器，并且当消息的文本部分以指定内容结尾时响应。\",\"参数\",\"msg (str | tuple[str, ...]): 指定消息结尾内容\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"ignorecase (bool): 是否忽略大小写\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2232\":{\"h\":\"\",\"t\":[\"说明: 注册一个消息事件响应器，并且当消息的文本部分与指定内容完全一致时响应。\",\"参数\",\"msg (str | tuple[str, ...]): 指定消息全匹配内容\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"ignorecase (bool): 是否忽略大小写\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2233\":{\"h\":\"\",\"t\":[\"说明: 注册一个消息事件响应器，并且当消息纯文本部分包含关键词时响应。\",\"参数\",\"keywords (set[str]): 关键词列表\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2234\":{\"h\":\"\",\"t\":[\"说明\",\"注册一个消息事件响应器，并且当消息以指定命令开头时响应。\",\"命令匹配规则参考: 命令形式匹配 <rule.md#command-command>_\",\"参数\",\"cmd (str | tuple[str, ...]): 指定命令内容\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"aliases (set[str | tuple[str, ...]] | None): 命令别名\",\"force_whitespace (str | bool | None): 是否强制命令后必须有指定空白符\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2235\":{\"h\":\"\",\"t\":[\"说明\",\"注册一个支持 shell_like 解析参数的命令消息事件响应器。\",\"与普通的 on_command 不同的是，在添加 parser 参数时, 响应器会自动处理消息。\",\"可以通过 ShellCommandArgv 获取原始参数列表， 通过 ShellCommandArgs 获取解析后的参数字典。\",\"参数\",\"cmd (str | tuple[str, ...]): 指定命令内容\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"aliases (set[str | tuple[str, ...]] | None): 命令别名\",\"parser (ArgumentParser | None): nonebot.rule.ArgumentParser 对象\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2236\":{\"h\":\"\",\"t\":[\"说明\",\"注册一个消息事件响应器，并且当消息匹配正则表达式时响应。\",\"命令匹配规则参考: 正则匹配 <rule.md#regex-regex-flags-0>_\",\"参数\",\"pattern (str): 正则表达式\",\"flags (int | re.RegexFlag): 正则匹配标志\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2237\":{\"h\":\"\",\"t\":[\"说明: 注册一个事件响应器，并且当事件为指定类型时响应。\",\"参数\",\"types (type[Event] | tuple[type[Event], ...]): 事件类型\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2238\":{\"h\":\"\",\"t\":[\"参数\",\"cmd (str | tuple[str, ...])\",\"prefix_aliases (bool)\",\"rule (Rule | T_RuleChecker | None)\",\"permission (Permission | T_PermissionChecker | None)\",\"handlers (list[T_Handler | Dependent[Any]] | None)\",\"temp (bool)\",\"expire_time (datetime | timedelta | None)\",\"priority (int)\",\"block (bool)\",\"state (T_State | None)\"]},\"2239\":{\"h\":\"\",\"t\":[\"说明: 注册一个新的命令。新参数将会覆盖命令组默认值\",\"参数\",\"cmd (str | tuple[str, ...]): 指定命令内容\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"aliases (set[str | tuple[str, ...]] | None): 命令别名\",\"force_whitespace (str | bool | None): 是否强制命令后必须有指定空白符\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2240\":{\"h\":\"\",\"t\":[\"说明: 注册一个新的 shell_like 命令。新参数将会覆盖命令组默认值\",\"参数\",\"cmd (str | tuple[str, ...]): 指定命令内容\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"aliases (set[str | tuple[str, ...]] | None): 命令别名\",\"parser (ArgumentParser | None): nonebot.rule.ArgumentParser 对象\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2241\":{\"h\":\"\",\"t\":[\"参数\",\"type (str)\",\"rule (Rule | T_RuleChecker | None)\",\"permission (Permission | T_PermissionChecker | None)\",\"handlers (list[T_Handler | Dependent[Any]] | None)\",\"temp (bool)\",\"expire_time (datetime | timedelta | None)\",\"priority (int)\",\"block (bool)\",\"state (T_State | None)\"]},\"2242\":{\"h\":\"\",\"t\":[\"说明: 注册一个基础事件响应器，可自定义类型。\",\"参数\",\"type (str): 事件响应器类型\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2243\":{\"h\":\"\",\"t\":[\"说明: 注册一个元事件响应器。\",\"参数\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2244\":{\"h\":\"\",\"t\":[\"说明: 注册一个消息事件响应器。\",\"参数\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2245\":{\"h\":\"\",\"t\":[\"说明: 注册一个通知事件响应器。\",\"参数\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2246\":{\"h\":\"\",\"t\":[\"说明: 注册一个请求事件响应器。\",\"参数\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2247\":{\"h\":\"\",\"t\":[\"说明: 注册一个消息事件响应器，并且当消息的文本部分以指定内容开头时响应。\",\"参数\",\"msg (str | tuple[str, ...]): 指定消息开头内容\",\"ignorecase (bool): 是否忽略大小写\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2248\":{\"h\":\"\",\"t\":[\"说明: 注册一个消息事件响应器，并且当消息的文本部分以指定内容结尾时响应。\",\"参数\",\"msg (str | tuple[str, ...]): 指定消息结尾内容\",\"ignorecase (bool): 是否忽略大小写\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2249\":{\"h\":\"\",\"t\":[\"说明: 注册一个消息事件响应器，并且当消息的文本部分与指定内容完全一致时响应。\",\"参数\",\"msg (str | tuple[str, ...]): 指定消息全匹配内容\",\"ignorecase (bool): 是否忽略大小写\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2250\":{\"h\":\"\",\"t\":[\"说明: 注册一个消息事件响应器，并且当消息纯文本部分包含关键词时响应。\",\"参数\",\"keywords (set[str]): 关键词列表\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2251\":{\"h\":\"\",\"t\":[\"说明\",\"注册一个消息事件响应器，并且当消息以指定命令开头时响应。\",\"命令匹配规则参考: 命令形式匹配 <rule.md#command-command>_\",\"参数\",\"cmd (str | tuple[str, ...]): 指定命令内容\",\"aliases (set[str | tuple[str, ...]] | None): 命令别名\",\"force_whitespace (str | bool | None): 是否强制命令后必须有指定空白符\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2252\":{\"h\":\"\",\"t\":[\"说明\",\"注册一个支持 shell_like 解析参数的命令消息事件响应器。\",\"与普通的 on_command 不同的是，在添加 parser 参数时, 响应器会自动处理消息。\",\"可以通过 ShellCommandArgv 获取原始参数列表， 通过 ShellCommandArgs 获取解析后的参数字典。\",\"参数\",\"cmd (str | tuple[str, ...]): 指定命令内容\",\"aliases (set[str | tuple[str, ...]] | None): 命令别名\",\"parser (ArgumentParser | None): nonebot.rule.ArgumentParser 对象\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2253\":{\"h\":\"\",\"t\":[\"说明\",\"注册一个消息事件响应器，并且当消息匹配正则表达式时响应。\",\"命令匹配规则参考: 正则匹配 <rule.md#regex-regex-flags-0>_\",\"参数\",\"pattern (str): 正则表达式\",\"flags (int | re.RegexFlag): 正则匹配标志\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2254\":{\"h\":\"\",\"t\":[\"说明: 注册一个事件响应器，并且当事件为指定类型时响应。\",\"参数\",\"types (type[Event] | tuple[type[Event]]): 事件类型\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2255\":{\"h\":\"Alconna 本体\",\"t\":[\"Alconna 隶属于 ArcletProject，是一个简单、灵活、高效的命令参数解析器, 并且不局限于解析命令式字符串。\",\"我们通过一个例子来讲解 Alconna 的核心 —— Args, Subcommand, Option：\",\"from arclet.alconna import Alconna, Args, Subcommand, Option alc = Alconna( \\\"pip\\\", Subcommand( \\\"install\\\", Args[\\\"package\\\", str], Option(\\\"-r|--requirement\\\", Args[\\\"file\\\", str]), Option(\\\"-i|--index-url\\\", Args[\\\"url\\\", str]), ) ) res = alc.parse(\\\"pip install nonebot2 -i URL\\\") print(res) # matched=True, header_match=(origin='pip' result='pip' matched=True groups={}), subcommands={'install': (value=Ellipsis args={'package': 'nonebot2'} options={'index-url': (value=None args={'url': 'URL'})} subcommands={})}, other_args={'package': 'nonebot2', 'url': 'URL'} print(res.all_matched_args) # {'package': 'nonebot2', 'url': 'URL'}\",\"这段代码通过Alconna创捷了一个接受主命令名为pip, 子命令为install且子命令接受一个 Args 参数package和二个 Option 参数-r和-i的命令参数解析器, 通过parse方法返回解析结果 Arparma 的实例。\"]},\"2256\":{\"h\":\"命令头\",\"t\":[\"命令头是指命令的前缀 (Prefix) 与命令名 (Command) 的组合，例如 !help 中的 ! 与 help。\",\"前缀\",\"命令名\",\"匹配内容\",\"说明\",\"-\",\"\\\"foo\\\"\",\"\\\"foo\\\"\",\"无前缀的纯文字头\",\"-\",\"123\",\"123\",\"无前缀的元素头\",\"-\",\"\\\"re:\\\\d{2}\\\"\",\"\\\"32\\\"\",\"无前缀的正则头\",\"-\",\"int\",\"123 或 \\\"456\\\"\",\"无前缀的类型头\",\"[int, bool]\",\"-\",\"True 或 123\",\"无名的元素类头\",\"[\\\"foo\\\", \\\"bar\\\"]\",\"-\",\"\\\"foo\\\" 或 \\\"bar\\\"\",\"无名的纯文字头\",\"[\\\"foo\\\", \\\"bar\\\"]\",\"\\\"baz\\\"\",\"\\\"foobaz\\\" 或 \\\"barbaz\\\"\",\"纯文字头\",\"[int, bool]\",\"\\\"foo\\\"\",\"[123, \\\"foo\\\"] 或 [False, \\\"foo\\\"]\",\"类型头\",\"[123, 4567]\",\"\\\"foo\\\"\",\"[123, \\\"foo\\\"] 或 [4567, \\\"foo\\\"]\",\"元素头\",\"[nepattern.NUMBER]\",\"\\\"bar\\\"\",\"[123, \\\"bar\\\"] 或 [123.456, \\\"bar\\\"]\",\"表达式头\",\"[123, \\\"foo\\\"]\",\"\\\"bar\\\"\",\"[123, \\\"bar\\\"] 或 \\\"foobar\\\" 或 [\\\"foo\\\", \\\"bar\\\"]\",\"混合头\",\"[(int, \\\"foo\\\"), (456, \\\"bar\\\")]\",\"\\\"baz\\\"\",\"[123, \\\"foobaz\\\"] 或 [456, \\\"foobaz\\\"] 或 [456, \\\"barbaz\\\"]\",\"对头\",\"对于无前缀的类型头，此时会将传入的值尝试转为 BasePattern，例如 int 会转为 nepattern.INTEGER。如此该命令头会匹配对应的类型， 例如 int 会匹配 123 或 \\\"456\\\"，但不会匹配 \\\"foo\\\"。解析后，Alconna 会将命令头匹配到的值转为对应的类型，例如 int 会将 \\\"123\\\" 转为 123。\",\"提示\",\"正则内容只在命令名上生效，前缀中的正则会被转义\",\"除了通过传入 re:xxx 来使用正则表达式外，Alconna 还提供了一种更加简洁的方式来使用正则表达式，称为 Bracket Header：\",\"from alconna import Alconna alc = Alconna(\\\".rd{roll:int}\\\") assert alc.parse(\\\".rd123\\\").header[\\\"roll\\\"] == 123\",\"Bracket Header 类似 python 里的 f-string 写法，通过 \\\"{}\\\" 声明匹配类型\",\"\\\"{}\\\" 中的内容为 \\\"name:type or pat\\\"：\",\"\\\"{}\\\", \\\"{:}\\\" ⇔ \\\"(.+)\\\", 占位符\",\"\\\"{foo}\\\" ⇔ \\\"(?P&lt;foo&gt;.+)\\\"\",\"\\\"{:\\\\d+}\\\" ⇔ \\\"(\\\\d+)\\\"\",\"\\\"{foo:int}\\\" ⇔ \\\"(?P&lt;foo&gt;\\\\d+)\\\"，其中 \\\"int\\\" 部分若能转为 BasePattern 则读取里面的表达式\"]},\"2257\":{\"h\":\"参数声明(Args)\",\"t\":[\"Args 是用于声明命令参数的组件， 可以通过以下几种方式构造 Args ：\",\"Args[key, var, default][key1, var1, default1][...]\",\"Args[(key, var, default)]\",\"Args.key[var, default]\",\"其中，key 一定是字符串，而 var 一般为参数的类型，default 为具体的值或者 arclet.alconna.args.Field\",\"其与函数签名类似，但是允许含有默认值的参数在前；同时支持 keyword-only 参数不依照构造顺序传入 （但是仍需要在非 keyword-only 参数之后）。\"]},\"2258\":{\"h\":\"key\",\"t\":[\"key 的作用是用以标记解析出来的参数并存放于 Arparma 中，以方便用户调用。\",\"其有三种为 Args 注解的标识符: ?、/、 !, 标识符与 key 之间建议以 ; 分隔：\",\"! 标识符表示该处传入的参数应不是规定的类型，或不在指定的值中。\",\"? 标识符表示该参数为可选参数，会在无参数匹配时跳过。\",\"/ 标识符表示该参数的类型注解需要隐藏。\",\"另外，对于参数的注释也可以标记在 key 中，其与 key 或者标识符 以 # 分割：foo#这是注释;? 或 foo?#这是注释\",\"提示\",\"Args 中的 key 在实际命令中并不需要传入（keyword 参数除外）：\",\"from arclet.alconna import Alconna, Args alc = Alconna(\\\"test\\\", Args[\\\"foo\\\", str]) alc.parse(\\\"test --foo abc\\\") # 错误 alc.parse(\\\"test abc\\\") # 正确\",\"若需要 test --foo abc，你应该使用 Option：\",\"from arclet.alconna import Alconna, Args, Option alc = Alconna(\\\"test\\\", Option(\\\"--foo\\\", Args[\\\"foo\\\", str]))\"]},\"2259\":{\"h\":\"var\",\"t\":[\"var 负责命令参数的类型检查与类型转化\",\"Args 的var表面上看需要传入一个 type，但实际上它需要的是一个 nepattern.BasePattern 的实例：\",\"from arclet.alconna import Args from nepattern import BasePattern # 表示 foo 参数需要匹配一个 @number 样式的字符串 args = Args[\\\"foo\\\", BasePattern(\\\"@\\\\d+\\\")]\",\"pip 示例中可以传入 str 是因为 str 已经注册在了 nepattern.global_patterns 中，因此会替换为 nepattern.global_patterns[str]\",\"nepattern.global_patterns默认支持的类型有：\",\"str: 匹配任意字符串\",\"int: 匹配整数\",\"float: 匹配浮点数\",\"bool: 匹配 True 与 False 以及他们小写形式\",\"hex: 匹配 0x 开头的十六进制字符串\",\"url: 匹配网址\",\"email: 匹配 xxxx@xxx 的字符串\",\"ipv4: 匹配 xxx.xxx.xxx.xxx 的字符串\",\"list: 匹配类似 [\\\"foo\\\",\\\"bar\\\",\\\"baz\\\"] 的字符串\",\"dict: 匹配类似 {\\\"foo\\\":\\\"bar\\\",\\\"baz\\\":\\\"qux\\\"} 的字符串\",\"datetime: 传入一个 datetime 支持的格式字符串，或时间戳\",\"Any: 匹配任意类型\",\"AnyString: 匹配任意类型，转为 str\",\"Number: 匹配 int 与 float，转为 int\",\"同时可以使用 typing 中的类型：\",\"Literal[X]: 匹配其中的任意一个值\",\"Union[X, Y]: 匹配其中的任意一个类型\",\"Optional[xxx]: 会自动将默认值设为 None，并在解析失败时使用默认值\",\"List[X]: 匹配一个列表，其中的元素为 X 类型\",\"Dict[X, Y]: 匹配一个字典，其中的 key 为 X 类型，value 为 Y 类型\",\"...\",\"提示\",\"几类特殊的传入标记：\",\"\\\"foo\\\": 匹配字符串 \\\"foo\\\" (若没有某个 BasePattern 与之关联)\",\"RawStr(\\\"foo\\\"): 匹配字符串 \\\"foo\\\" (即使有 BasePattern 与之关联也不会被替换)\",\"\\\"foo|bar|baz\\\": 匹配 \\\"foo\\\" 或 \\\"bar\\\" 或 \\\"baz\\\"\",\"[foo, bar, Baz, ...]: 匹配其中的任意一个值或类型\",\"Callable[[X], Y]: 匹配一个参数为 X 类型的值，并返回通过该函数调用得到的 Y 类型的值\",\"\\\"re:xxx\\\": 匹配一个正则表达式 xxx，会返回 Match[0]\",\"\\\"rep:xxx\\\": 匹配一个正则表达式 xxx，会返回 re.Match 对象\",\"{foo: bar, baz: qux}: 匹配字典中的任意一个键, 并返回对应的值 (特殊的键 ... 会匹配任意的值)\",\"...\",\"特别的，你可以不传入 var，此时会使用 key 作为 var, 匹配 key 字符串。\"]},\"2260\":{\"h\":\"MultiVar 与 KeyWordVar\",\"t\":[\"MultiVar 是一个特殊的标注，用于告知解析器该参数可以接受多个值，类似于函数中的 *args，其构造方法形如 MultiVar(str)。\",\"同样的还有 KeyWordVar，类似于函数中的 *, name: type，其构造方法形如 KeyWordVar(str)，用于告知解析器该参数为一个 keyword-only 参数。\",\"提示\",\"MultiVar 与 KeyWordVar 组合时，代表该参数为一个可接受多个 key-value 的参数，类似于函数中的 **kwargs，其构造方法形如 MultiVar(KeyWordVar(str))\",\"MultiVar 与 KeyWordVar 也可以传入 default 参数，用于指定默认值\",\"MultiVar 不能在 KeyWordVar 之后传入\"]},\"2261\":{\"h\":\"default\",\"t\":[\"default 传入的是该参数的默认值或者 Field，以携带对于该参数的更多信息。\",\"默认情况下 (即不声明) default 的值为特殊值 Empty。这也意味着你可以将默认值设置为 None 表示默认值为空值。\",\"Field 构造需要的参数说明如下：\",\"default: 参数单元的默认值\",\"alias: 参数单元默认值的别名\",\"completion: 参数单元的补全说明生成函数\",\"unmatch_tips: 参数单元的错误提示生成函数，其接收一个表示匹配失败的元素的参数\",\"missing_tips: 参数单元的缺失提示生成函数\"]},\"2262\":{\"h\":\"选项与子命令(Option & Subcommand)\",\"t\":[\"Option 和 Subcommand 可以传入一组 alias，如 Option(\\\"--foo|-F|--FOO|-f\\\")，Subcommand(\\\"foo\\\", alias=[\\\"F\\\"])\",\"传入别名后，选项与子命令会选择其中长度最长的作为其名称。若传入为 \\\"--foo|-f\\\"，则命令名称为 \\\"--foo\\\"\",\"特别提醒!!!\",\"Option 的名字或别名没有要求必须在前面写上 -\",\"Option 与 Subcommand 的唯一区别在于 Subcommand 可以传入自己的 Option 与 Subcommand\",\"他们拥有如下共同参数：\",\"help_text: 传入该组件的帮助信息\",\"dest: 被指定为解析完成时标注匹配结果的标识符，不传入时默认为选项或子命令的名称 (name)\",\"requires: 一段指定顺序的字符串列表，作为唯一的前置序列与命令嵌套替换 对于命令 test foo bar baz qux <a:int> 来讲，因为foo bar baz 仅需要判断是否相等, 所以可以这么编写：\",\"Alconna(\\\"test\\\", Option(\\\"qux\\\", Args.a[int], requires=[\\\"foo\\\", \\\"bar\\\", \\\"baz\\\"]))\",\"default: 默认值，在该组件未被解析时使用使用该值替换。 特别的，使用 OptionResult 或 SubcomanndResult 可以设置包括参数字典在内的默认值：\",\"from arclet.alconna import Option, OptionResult opt1 = Option(\\\"--foo\\\", default=False) opt2 = Option(\\\"--foo\\\", default=OptionResult(value=False, args={\\\"bar\\\": 1}))\"]},\"2263\":{\"h\":\"Action\",\"t\":[\"Option 可以特别设置传入一类 Action，作为解析操作\",\"Action 分为三类：\",\"store: 无 Args 时， 仅存储一个值， 默认为 Ellipsis； 有 Args 时， 后续的解析结果会覆盖之前的值\",\"append: 无 Args 时， 将多个值存为列表， 默认为 Ellipsis； 有 Args 时， 每个解析结果会追加到列表中, 当存在默认值并且不为列表时， 会自动将默认值变成列表， 以保证追加的正确性\",\"count: 无 Args 时， 计数器加一； 有 Args 时， 表现与 STORE 相同, 当存在默认值并且不为数字时， 会自动将默认值变成 1， 以保证计数器的正确性。\",\"Alconna 提供了预制的几类 Action：\",\"store(默认)，store_value，store_true，store_false\",\"append，append_value\",\"count\"]},\"2264\":{\"h\":\"解析结果(Arparma)\",\"t\":[\"Alconna.parse 会返回由 Arparma 承载的解析结果\",\"Arparma 有如下属性：\",\"调试类\",\"matched: 是否匹配成功\",\"error_data: 解析失败时剩余的数据\",\"error_info: 解析失败时的异常内容\",\"origin: 原始命令，可以类型标注\",\"分析类\",\"header_match: 命令头部的解析结果，包括原始头部、解析后头部、解析结果与可能的正则匹配组\",\"main_args: 命令的主参数的解析结果\",\"options: 命令所有选项的解析结果\",\"subcommands: 命令所有子命令的解析结果\",\"other_args: 除主参数外的其他解析结果\",\"all_matched_args: 所有 Args 的解析结果\",\"Arparma 同时提供了便捷的查询方法 query[type]()，会根据传入的 path 查找参数并返回\",\"path 支持如下:\",\"main_args, options, ...: 返回对应的属性\",\"args: 返回 all_matched_args\",\"main_args.xxx, options.xxx, ...: 返回字典中 xxx键对应的值\",\"args.xxx: 返回 all_matched_args 中 xxx键对应的值\",\"options.foo, foo: 返回选项 foo 的解析结果 (OptionResult)\",\"options.foo.value, foo.value: 返回选项 foo 的解析值\",\"options.foo.args, foo.args: 返回选项 foo 的解析参数字典\",\"options.foo.args.bar, foo.bar: 返回选项 foo 的参数字典中 bar 键对应的值 ...\"]},\"2265\":{\"h\":\"元数据(CommandMeta)\",\"t\":[\"Alconna 的元数据相当于其配置，拥有以下条目：\",\"description: 命令的描述\",\"usage: 命令的用法\",\"example: 命令的使用样例\",\"author: 命令的作者\",\"fuzzy_match: 命令是否开启模糊匹配\",\"fuzzy_threshold: 模糊匹配阈值\",\"raise_exception: 命令是否抛出异常\",\"hide: 命令是否对 manager 隐藏\",\"hide_shortcut: 命令的快捷指令是否在 help 信息中隐藏\",\"keep_crlf: 命令解析时是否保留换行字符\",\"compact: 命令是否允许第一个参数紧随头部\",\"strict: 命令是否严格匹配，若为 False 则未知参数将作为名为 $extra 的参数\",\"context_style: 命令上下文插值的风格，None 为关闭，bracket 为 {...}，parentheses 为 $(...)\",\"extra: 命令的自定义额外信息\",\"元数据一定使用 meta=... 形式传入：\",\"from arclet.alconna import Alconna, CommandMeta alc = Alconna(..., meta=CommandMeta(\\\"foo\\\", example=\\\"bar\\\"))\"]},\"2266\":{\"h\":\"命名空间配置\",\"t\":[\"命名空间配置 （以下简称命名空间） 相当于 Alconna 的默认配置，其优先度低于 CommandMeta。\",\"Alconna 默认使用 \\\"Alconna\\\" 命名空间。\",\"命名空间有以下几个属性：\",\"name: 命名空间名称\",\"prefixes: 默认前缀配置\",\"separators: 默认分隔符配置\",\"formatter_type: 默认格式化器类型\",\"fuzzy_match: 默认是否开启模糊匹配\",\"raise_exception: 默认是否抛出异常\",\"builtin_option_name: 默认的内置选项名称(--help, --shortcut, --comp)\",\"disable_builtin_options: 默认禁用的内置选项(--help, --shortcut, --comp)\",\"enable_message_cache: 默认是否启用消息缓存\",\"compact: 默认是否开启紧凑模式\",\"strict: 命令是否严格匹配\",\"context_style: 命令上下文插值的风格\",\"...\"]},\"2267\":{\"h\":\"新建命名空间并替换\",\"t\":[\"from arclet.alconna import Alconna, namespace, Namespace, Subcommand, Args, config ns = Namespace(\\\"foo\\\", prefixes=[\\\"/\\\"]) # 创建 \\\"foo\\\"命名空间配置, 它要求创建的Alconna的主命令前缀必须是/ alc = Alconna(\\\"pip\\\", Subcommand(\\\"install\\\", Args[\\\"package\\\", str]), namespace=ns) # 在创建Alconna时候传入命名空间以替换默认命名空间 # 可以通过with方式创建命名空间 with namespace(\\\"bar\\\") as np1: np1.prefixes = [\\\"!\\\"] # 以上下文管理器方式配置命名空间，此时配置会自动注入上下文内创建的命令 np1.formatter_type = ShellTextFormatter # 设置此命名空间下的命令的 formatter 默认为 ShellTextFormatter np1.builtin_option_name[\\\"help\\\"] = {\\\"帮助\\\", \\\"-h\\\"} # 设置此命名空间下的命令的帮助选项名称 # 你还可以使用config来管理所有命名空间并切换至任意命名空间 config.namespaces[\\\"foo\\\"] = ns # 将命名空间挂载到 config 上 alc = Alconna(\\\"pip\\\", Subcommand(\\\"install\\\", Args[\\\"package\\\", str]), namespace=config.namespaces[\\\"foo\\\"]) # 也是同样可以切换到\\\"foo\\\"命名空间\"]},\"2268\":{\"h\":\"修改默认的命名空间\",\"t\":[\"from arclet.alconna import config, namespace, Namespace config.default_namespace.prefixes = [...] # 直接修改默认配置 np = Namespace(\\\"xxx\\\", prefixes=[...]) config.default_namespace = np # 更换默认的命名空间 with namespace(config.default_namespace.name) as np: np.prefixes = [...]\"]},\"2269\":{\"h\":\"快捷指令\",\"t\":[\"快捷命令可以做到标识一段命令, 并且传递参数给原命令\",\"一般情况下你可以通过 Alconna.shortcut 进行快捷指令操作 (创建，删除)\",\"shortcut 的第一个参数为快捷指令名称，第二个参数为 ShortcutArgs，作为快捷指令的配置：\",\"class ShortcutArgs(TypedDict): \\\"\\\"\\\"快捷指令参数\\\"\\\"\\\" command: NotRequired[str] \\\"\\\"\\\"快捷指令的命令\\\"\\\"\\\" args: NotRequired[list[Any]] \\\"\\\"\\\"快捷指令的附带参数\\\"\\\"\\\" fuzzy: NotRequired[bool] \\\"\\\"\\\"是否允许命令后随参数\\\"\\\"\\\" prefix: NotRequired[bool] \\\"\\\"\\\"是否调用时保留指令前缀\\\"\\\"\\\" wrapper: NotRequired[ShortcutRegWrapper] \\\"\\\"\\\"快捷指令的正则匹配结果的额外处理函数\\\"\\\"\\\" humanized: NotRequired[str] \\\"\\\"\\\"快捷指令的人类可读描述\\\"\\\"\\\"\"]},\"2270\":{\"h\":\"args的使用\",\"t\":[\"from arclet.alconna import Alconna, Args alc = Alconna(\\\"setu\\\", Args[\\\"count\\\", int]) alc.shortcut(\\\"涩图(\\\\d+)张\\\", {\\\"args\\\": [\\\"{0}\\\"]}) # 'Alconna::setu 的快捷指令: \\\"涩图(\\\\\\\\d+)张\\\" 添加成功' alc.parse(\\\"涩图3张\\\").query(\\\"count\\\") # 3\"]},\"2271\":{\"h\":\"command的使用\",\"t\":[\"from arclet.alconna import Alconna, Args alc = Alconna(\\\"eval\\\", Args[\\\"content\\\", str]) alc.shortcut(\\\"echo\\\", {\\\"command\\\": \\\"eval print(\\\\\\\\'{*}\\\\\\\\')\\\"}) # 'Alconna::eval 的快捷指令: \\\"echo\\\" 添加成功' alc.shortcut(\\\"echo\\\", delete=True) # 删除快捷指令 # 'Alconna::eval 的快捷指令: \\\"echo\\\" 删除成功' @alc.bind() # 绑定一个命令执行器, 若匹配成功则会传入参数, 自动执行命令执行器 def cb(content: str): eval(content, {}, {}) alc.parse('eval print(\\\\\\\\\\\"hello world\\\\\\\\\\\")') # hello world alc.parse(\\\"echo hello world!\\\") # hello world!\",\"当 fuzzy 为 False 时，第一个例子中传入 \\\"涩图1张 abc\\\" 之类的快捷指令将视为解析失败\",\"快捷指令允许三类特殊的 placeholder：\",\"{%X}: 如 setu {%0}，表示此处填入快捷指令后随的第 X 个参数。\",\"例如，若快捷指令为 涩图, 配置为 {\\\"command\\\": \\\"setu {%0}\\\"}, 则指令 涩图 1 相当于 setu 1\",\"{*}: 表示此处填入所有后随参数，并且可以通过 {*X} 的方式指定组合参数之间的分隔符。\",\"{X}: 表示此处填入可能的正则匹配的组：\",\"若 command 中存在匹配组 (xxx)，则 {X} 表示第 X 个匹配组的内容\",\"若 command 中存储匹配组 (?P<xxx>...), 则 {X} 表示 名字 为 X 的匹配结果\",\"除此之外, 通过 Alconna 内置选项 --shortcut 可以动态操作快捷指令\",\"例如：\",\"cmd --shortcut <key> <cmd> 来增加一个快捷指令\",\"cmd --shortcut list 来列出当前指令的所有快捷指令\",\"cmd --shortcut delete key 来删除一个快捷指令\",\"from arclet.alconna import Alconna, Args alc = Alconna(\\\"eval\\\", Args[\\\"content\\\", str]) alc.shortcut(\\\"echo\\\", {\\\"command\\\": \\\"eval print(\\\\\\\\'{*}\\\\\\\\')\\\"}) alc.parse(\\\"eval --shortcut list\\\") # 'echo'\"]},\"2272\":{\"h\":\"紧凑命令\",\"t\":[\"Alconna, Option 与 Subcommand 可以设置 compact=True 使得解析命令时允许名称与后随参数之间没有分隔：\",\"from arclet.alconna import Alconna, Option, CommandMeta, Args alc = Alconna(\\\"test\\\", Args[\\\"foo\\\", int], Option(\\\"BAR\\\", Args[\\\"baz\\\", str], compact=True), meta=CommandMeta(compact=True)) assert alc.parse(\\\"test123 BARabc\\\").matched\",\"这使得我们可以实现如下命令：\",\"from arclet.alconna import Alconna, Option, Args, append alc = Alconna(\\\"gcc\\\", Option(\\\"--flag|-F\\\", Args[\\\"content\\\", str], action=append, compact=True)) print(alc.parse(\\\"gcc -Fabc -Fdef -Fxyz\\\").query[list](\\\"flag.content\\\")) # ['abc', 'def', 'xyz']\",\"当 Option 的 action 为 count 时，其自动支持 compact 特性：\",\"from arclet.alconna import Alconna, Option, count alc = Alconna(\\\"pp\\\", Option(\\\"--verbose|-v\\\", action=count, default=0)) print(alc.parse(\\\"pp -vvv\\\").query[int](\\\"verbose.value\\\")) # 3\"]},\"2273\":{\"h\":\"模糊匹配\",\"t\":[\"模糊匹配会应用在任意需要进行名称判断的地方，如 命令名称，选项名称 和 参数名称 (如指定需要传入参数名称)。\",\"from arclet.alconna import Alconna, CommandMeta alc = Alconna(\\\"test_fuzzy\\\", meta=CommandMeta(fuzzy_match=True)) alc.parse(\\\"test_fuzy\\\") # test_fuzy is not matched. Do you mean \\\"test_fuzzy\\\"?\"]},\"2274\":{\"h\":\"半自动补全\",\"t\":[\"半自动补全为用户提供了推荐后续输入的功能\",\"补全默认通过 --comp 或 -cp 或 ? 触发：（命名空间配置可修改名称）\",\"from arclet.alconna import Alconna, Args, Option alc = Alconna(\\\"test\\\", Args[\\\"abc\\\", int]) + Option(\\\"foo\\\") + Option(\\\"bar\\\") alc.parse(\\\"test --comp\\\") ''' output 以下是建议的输入： * <abc: int> * --help * -h * -sct * --shortcut * foo * bar '''\"]},\"2275\":{\"h\":\"Duplication\",\"t\":[\"Duplication 用来提供更好的自动补全，类似于 ArgParse 的 Namespace\",\"普通情况下使用，需要利用到 ArgsStub、OptionStub 和 SubcommandStub 三个部分\",\"以pip为例，其对应的 Duplication 应如下构造:\",\"from arclet.alconna import Alconna, Args, Option, OptionResult, Duplication, SubcommandStub, Subcommand, count class MyDup(Duplication): verbose: OptionResult install: SubcommandStub alc = Alconna( \\\"pip\\\", Subcommand( \\\"install\\\", Args[\\\"package\\\", str], Option(\\\"-r|--requirement\\\", Args[\\\"file\\\", str]), Option(\\\"-i|--index-url\\\", Args[\\\"url\\\", str]), ), Option(\\\"-v|--version\\\"), Option(\\\"-v|--verbose\\\", action=count), ) res = alc.parse(\\\"pip -v install ...\\\") # 不使用duplication获得的提示较少 print(res.query(\\\"install\\\")) # (value=Ellipsis args={'package': '...'} options={} subcommands={}) result = alc.parse(\\\"pip -v install ...\\\", duplication=MyDup) print(result.install) # SubcommandStub(_origin=Subcommand('install', args=Args('package': str)), _value=Ellipsis, available=True, args=ArgsStub(_origin=Args('package': str), _value={'package': '...'}, available=True), dest='install', options=[OptionStub(_origin=Option('requirement', args=Args('file': str)), _value=None, available=False, args=ArgsStub(_origin=Args('file': str), _value={}, available=False), dest='requirement', aliases=['r', 'requirement'], name='requirement'), OptionStub(_origin=Option('index-url', args=Args('url': str)), _value=None, available=False, args=ArgsStub(_origin=Args('url': str), _value={}, available=False), dest='index-url', aliases=['index-url', 'i'], name='index-url')], subcommands=[], name='install')\",\"Duplication 也可以如 Namespace 一样直接标明参数名称和类型：\",\"from typing import Optional from arclet.alconna import Duplication class MyDup(Duplication): package: str file: Optional[str] = None url: Optional[str] = None\"]},\"2276\":{\"h\":\"上下文插值\",\"t\":[\"当 context_style 条目被设置后，传入的命令中符合上下文插值的字段会被自动替换成当前上下文中的信息。\",\"上下文可以在 parse 中传入：\",\"from arclet.alconna import Alconna, Args, CommandMeta alc = Alconna(\\\"test\\\", Args[\\\"foo\\\", int], meta=CommandMeta(context_style=\\\"parentheses\\\")) alc.parse(\\\"test $(bar)\\\", {\\\"bar\\\": 123}) # {\\\"foo\\\": 123}\",\"context_style 的值分两种：\",\"\\\"bracket\\\": 插值格式为 {...}，例如 {foo}\",\"\\\"parentheses\\\": 插值格式为 $(...)，例如 $(bar)\"]},\"2277\":{\"h\":\"配置项\"},\"2278\":{\"h\":\"alconna_auto_send_output\",\"t\":[\"类型: bool\",\"默认值: False\",\"是否全局启用输出信息自动发送，不启用则会在触发特殊内置选项后仍然将解析结果传递至响应器。\"]},\"2279\":{\"h\":\"alconna_use_command_start\",\"t\":[\"类型: bool\",\"默认值: False\",\"是否读取 Nonebot 的配置项 COMMAND_START 来作为全局的 Alconna 命令前缀\"]},\"2280\":{\"h\":\"alconna_auto_completion\",\"t\":[\"类型: bool\",\"默认值: False\",\"是否全局启用命令自动补全，启用后会在参数缺失或触发 --comp 选项时自自动启用交互式补全。\"]},\"2281\":{\"h\":\"alconna_use_origin\",\"t\":[\"类型: bool\",\"默认值: False\",\"是否全局使用原始消息 (即未经过 to_me 等处理的)，该选项会影响到 Alconna 的匹配行为。\"]},\"2282\":{\"h\":\"alconna_use_command_sep\",\"t\":[\"类型: bool\",\"默认值: False\",\"是否读取 Nonebot 的配置项 COMMAND_SEP 来作为全局的 Alconna 命令分隔符。\"]},\"2283\":{\"h\":\"alconna_global_extensions\",\"t\":[\"类型: List[str]\",\"默认值: []\",\"全局加载的扩展，路径以 . 分隔，如 foo.bar.baz:DemoExtension。\"]},\"2284\":{\"h\":\"alconna_context_style\",\"t\":[\"类型: Optional[Literal[\\\"bracket\\\", \\\"parentheses\\\"]]\",\"默认值: None\",\"全局命令上下文插值的风格，None 为关闭，bracket 为 {...}，parentheses 为 $(...)。\"]},\"2285\":{\"h\":\"alconna_enable_saa_patch\",\"t\":[\"类型: bool\",\"默认值: False\",\"是否启用 SAA 补丁。\"]},\"2286\":{\"h\":\"alconna_apply_filehost\",\"t\":[\"类型: bool\",\"默认值: False\",\"是否启用文件托管。\"]},\"2287\":{\"h\":\"alconna_apply_fetch_targets\",\"t\":[\"类型: bool\",\"默认值: False\",\"是否启动时拉取一次发送对象列表。\"]},\"2288\":{\"h\":\"用户指南\",\"t\":[\"nonebot-plugin-orm 功能强大且复杂，使用上有一定难度。 不过，对于用户而言，只需要掌握部分功能即可。\",\"注意\",\"请注意区分插件的项目名（如：nonebot-plugin-wordcloud）和模块名（如：nonebot_plugin_wordcloud）。nonebot-plugin-orm 中统一使用插件模块名。参见 插件命名规范。\"]},\"2289\":{\"h\":\"示例\"},\"2290\":{\"h\":\"创建新机器人\",\"t\":[\"我们想要创建一个机器人，并安装 nonebot-plugin-wordcloud 插件，只需要执行以下命令：\",\"nb init # 初始化项目文件夹 pip install nonebot-plugin-orm[sqlite] # 安装 nonebot-plugin-orm，并附带 SQLite 支持 nb plugin install nonebot-plugin-wordcloud # 安装插件 # nb orm heads # 查看有什么插件使用到了数据库（可选） nb orm upgrade # 升级数据库 # nb orm check # 检查一下数据库模式是否与模型定义一致（可选） nb run # 启动机器人\"]},\"2291\":{\"h\":\"卸载插件\",\"t\":[\"我们已经安装了 nonebot-plugin-wordcloud 插件，但是现在想要卸载它，并且删除它的数据，只需要执行以下命令：\",\"nb plugin uninstall nonebot-plugin-wordcloud # 卸载插件 # nb orm heads # 查看有什么插件使用到了数据库。（可选） nb orm downgrade nonebot_plugin_wordcloud@base # 降级数据库，删除数据 # nb orm check # 检查一下数据库模式是否与模型定义一致（可选）\"]},\"2292\":{\"h\":\"CLI\",\"t\":[\"接下来，让我们了解下示例中出现的 CLI 命令的含义：\"]},\"2293\":{\"h\":\"heads\",\"t\":[\"显示所有的分支头。一般一个分支对应一个插件。\",\"nb orm heads\",\"输出格式为 <迁移 ID> (<插件模块名>) (<头部类型>)：\",\"46327b837dd8 (nonebot_plugin_chatrecorder) (head) 9492159f98f7 (nonebot_plugin_user) (head) 71a72119935f (nonebot_plugin_session_orm) (effective head) ade8cdca5470 (nonebot_plugin_wordcloud) (head)\"]},\"2294\":{\"h\":\"upgrade\",\"t\":[\"升级数据库。每次安装新的插件或更新插件版本后，都需要执行此命令。\",\"nb orm upgrade <插件模块名>@<迁移 ID>\",\"其中，<插件模块名>@<迁移 ID> 是可选参数。如果不指定，则会将所有分支升级到最新版本，这也是最常见的用法：\",\"nb orm upgrade\"]},\"2295\":{\"h\":\"downgrade\",\"t\":[\"降级数据库。当需要回滚插件版本或删除插件时，可以执行此命令。\",\"nb orm downgrade <插件模块名>@<迁移 ID>\",\"其中，<迁移 ID> 也可以是 base，即回滚到初始状态。常用于卸载插件后删除其数据：\",\"nb orm downgrade <插件模块名>@base\"]},\"2296\":{\"h\":\"check\",\"t\":[\"检查数据库模式是否与模型定义一致。机器人启动前会自动运行此命令（ALEMBIC_STARTUP_CHECK=true 时），并在检查失败时阻止启动。\",\"nb orm check\"]},\"2297\":{\"h\":\"配置\"},\"2298\":{\"h\":\"sqlalchemy_database_url\",\"t\":[\"默认数据库连接 URL。参见 数据库驱动和后端 和 引擎配置 — SQLAlchemy 2.0 文档。\",\"SQLALCHEMY_DATABASE_URL=dialect+driver://username:password@host:port/database\"]},\"2299\":{\"h\":\"sqlalchemy_bind\",\"t\":[\"bind keys（一般为插件模块名）到数据库连接 URL、create_async_engine() 参数字典或 AsyncEngine 实例的字典。 例如，我们想要让 nonebot-plugin-wordcloud 插件使用一个 SQLite 数据库，并开启 Echo 选项 便于 debug，而其他插件使用默认的 PostgreSQL 数据库，可以这样配置：\",\"SQLALCHEMY_BINDS='{ \\\"\\\": \\\"postgresql+psycopg://scott:tiger@localhost/mydatabase\\\", \\\"nonebot_plugin_wordcloud\\\": { \\\"url\\\": \\\"sqlite+aiosqlite://\\\", \\\"echo\\\": true } }'\"]},\"2300\":{\"h\":\"sqlalchemy_engine_options\",\"t\":[\"create_async_engine() 默认参数字典。\",\"SQLALCHEMY_ENGINE_OPTIONS='{ \\\"pool_size\\\": 5, \\\"max_overflow\\\": 10, \\\"pool_timeout\\\": 30, \\\"pool_recycle\\\": 3600, \\\"echo\\\": true }'\"]},\"2301\":{\"h\":\"sqlalchemy_echo\",\"t\":[\"开启 Echo 选项 和 Echo Pool 选项 便于 debug。\",\"SQLALCHEMY_ECHO=true\",\"注意\",\"以上配置之间有覆盖关系，遵循特殊优先于一般的原则，具体为 sqlalchemy_database_url > sqlalchemy_bind > sqlalchemy_echo > sqlalchemy_engine_options。 但覆盖顺序并非显而易见，出于清晰考虑，请只配置必要的选项。\"]},\"2302\":{\"h\":\"模拟网络通信\",\"t\":[\"NoneBot 驱动器提供了多种方法来帮助适配器进行网络通信，主要包括客户端和服务端两种类型。模拟网络通信可以帮助我们更加接近实际机器人应用场景，进行更加真实的集成测试。同时，通过这种途径，我们还可以完成对适配器的测试。\",\"NoneBot 中的网络通信主要包括以下几种：\",\"HTTP 服务端（WebHook）\",\"WebSocket 服务端\",\"HTTP 客户端\",\"WebSocket 客户端\",\"下面我们将分别介绍如何使用 NoneBug 来模拟这几种通信方式。\"]},\"2303\":{\"h\":\"测试 HTTP 服务端\",\"t\":[\"当 NoneBot 作为 ASGI 服务端应用时，我们可以定义一系列的路由来处理 HTTP 请求，适配器同样也可以通过定义路由来响应机器人相关的网络通信。下面假设我们使用了一个适配器 fake ，它定义了一个路由 /fake/http ，用于接收平台 WebHook 并处理。实际应用测试时，应将该路由地址替换为真实适配器注册的路由地址。\",\"我们首先需要获取测试用模拟客户端：\",\"from nonebug import App @pytest.mark.asyncio async def test_http_server(app: App): async with app.test_server() as ctx: client = ctx.get_client()\",\"默认情况下，app.test_server() 会通过 nonebot.get_asgi 获取测试对象，我们也可以通过参数指定 ASGI 应用：\",\"async with app.test_server(asgi=asgi_app) as ctx: ...\",\"获取到模拟客户端后，即可像 requests、httpx 等库类似的方法进行使用：\",\"import nonebot from nonebug import App from nonebot.adapters.fake import Adapter @pytest.mark.asyncio async def test_http_server(app: App): adapter = nonebot.get_adapter(Adapter) async with app.test_server() as ctx: client = ctx.get_client() response = await client.post(\\\"/fake/http\\\", json={\\\"bot_id\\\": \\\"fake\\\"}) assert response.status_code == 200 assert response.json() == {\\\"status\\\": \\\"success\\\"} assert \\\"fake\\\" in nonebot.get_bots() adapter.bot_disconnect(nonebot.get_bot(\\\"fake\\\"))\",\"在上面的测试中，我们向 /fake/http 发送了一个模拟 POST 请求，适配器将会对该请求进行处理，我们可以通过检查请求返回是否正确、Bot 对象是否创建等途径来验证机器人是否正确运行。在完成测试后，我们通常需要对 Bot 对象进行清理，以避免对其他测试产生影响。\"]},\"2304\":{\"h\":\"测试 WebSocket 服务端\",\"t\":[\"当 NoneBot 作为 ASGI 服务端应用时，我们还可以定义一系列的路由来处理 WebSocket 通信。下面假设我们使用了一个适配器 fake ，它定义了一个路由 /fake/ws ，用于处理平台 WebSocket 连接信息。实际应用测试时，应将该路由地址替换为真实适配器注册的路由地址。\",\"我们同样需要通过 app.test_server() 获取测试用模拟客户端，这里就不再赘述。在获取到模拟客户端后，我们可以通过 client.websocket_connect 方法来模拟 WebSocket 连接：\",\"import nonebot from nonebug import App from nonebot.adapters.fake import Adapter @pytest.mark.asyncio async def test_ws_server(app: App): adapter = nonebot.get_adapter(Adapter) async with app.test_server() as ctx: client = ctx.get_client() async with client.websocket_connect(\\\"/fake/ws\\\") as ws: await ws.send_json({\\\"bot_id\\\": \\\"fake\\\"}) response = await ws.receive_json() assert response == {\\\"status\\\": \\\"success\\\"} assert \\\"fake\\\" in nonebot.get_bots()\",\"在上面的测试中，我们向 /fake/ws 进行了 WebSocket 模拟通信，通过发送消息与机器人进行交互，然后检查机器人发送的信息是否正确。\"]},\"2305\":{\"h\":\"测试 HTTP 客户端\",\"t\":[\"暂不支持\"]},\"2306\":{\"h\":\"测试 WebSocket 客户端\",\"t\":[\"暂不支持\"]},\"2307\":{\"h\":\"nonebot.adapters\",\"t\":[\"本模块定义了协议适配基类，各协议请继承以下基类。\",\"使用 Driver.register_adapter 注册适配器。\"]},\"2308\":{\"h\":\"\",\"t\":[\"说明\",\"协议适配器基类。\",\"通常，在 Adapter 中编写协议通信相关代码，如: 建立通信连接、处理接收与发送 data 等。\",\"参数\",\"driver (Driver): Driver 实例\",\"**kwargs (Any): 其他由 Driver.register_adapter 传入的额外参数\"]},\"2309\":{\"h\":\"\",\"t\":[\"类型:Driver\",\"说明: 实例\"]},\"2310\":{\"h\":\"\",\"t\":[\"类型: dict[str, Bot]\",\"说明: 本协议适配器已建立连接的 Bot 实例\"]},\"2311\":{\"h\":\"\",\"t\":[\"说明: 当前协议适配器的名称\",\"参数\",\"empty\",\"返回\",\"str\"]},\"2312\":{\"h\":\"\",\"t\":[\"类型:Config\",\"说明: 全局 NoneBot 配置\"]},\"2313\":{\"h\":\"\",\"t\":[\"说明\",\"告知 NoneBot 建立了一个新的 Bot 连接。\",\"当有新的 Bot 实例连接建立成功时调用。\",\"参数\",\"bot (Bot): Bot 实例\",\"返回\",\"None\"]},\"2314\":{\"h\":\"\",\"t\":[\"说明\",\"告知 NoneBot Bot 连接已断开。\",\"当有 Bot 实例连接断开时调用。\",\"参数\",\"bot (Bot): Bot 实例\",\"返回\",\"None\"]},\"2315\":{\"h\":\"\",\"t\":[\"说明: 设置一个 HTTP 服务器路由配置\",\"参数\",\"setup (HTTPServerSetup)\",\"返回\",\"untyped\"]},\"2316\":{\"h\":\"\",\"t\":[\"说明: 设置一个 WebSocket 服务器路由配置\",\"参数\",\"setup (WebSocketServerSetup)\",\"返回\",\"untyped\"]},\"2317\":{\"h\":\"\",\"t\":[\"说明: 进行一个 HTTP 客户端请求\",\"参数\",\"setup (Request)\",\"返回\",\"Response\"]},\"2318\":{\"h\":\"\",\"t\":[\"说明: 建立一个 WebSocket 客户端连接请求\",\"参数\",\"setup (Request)\",\"返回\",\"AsyncGenerator[WebSocket, None]\"]},\"2319\":{\"h\":\"\",\"t\":[\"参数\",\"func (LIFESPAN_FUNC)\",\"返回\",\"LIFESPAN_FUNC\"]},\"2320\":{\"h\":\"\",\"t\":[\"说明\",\"Bot 基类。\",\"用于处理上报消息，并提供 API 调用接口。\",\"参数\",\"adapter (Adapter): 协议适配器实例\",\"self_id (str): 机器人 ID\"]},\"2321\":{\"h\":\"\",\"t\":[\"类型:Adapter\",\"说明: 协议适配器实例\"]},\"2322\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明: 机器人 ID\"]},\"2323\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明: 协议适配器名称\"]},\"2324\":{\"h\":\"\",\"t\":[\"类型:Config\",\"说明: 全局 NoneBot 配置\"]},\"2325\":{\"h\":\"\",\"t\":[\"说明: 调用机器人 API 接口，可以通过该函数或直接通过 bot 属性进行调用\",\"参数\",\"api (str): API 名称\",\"**data (Any): API 数据\",\"返回\",\"Any\",\"用法\",\"await bot.call_api(\\\"send_msg\\\", message=\\\"hello world\\\") await bot.send_msg(message=\\\"hello world\\\")\"]},\"2326\":{\"h\":\"\",\"t\":[\"说明: 调用机器人基础发送消息接口\",\"参数\",\"event (Event): 上报事件\",\"message (str | Message | MessageSegment): 要发送的消息\",\"**kwargs (Any): 任意额外参数\",\"返回\",\"Any\"]},\"2327\":{\"h\":\"\",\"t\":[\"说明\",\"调用 api 预处理。\",\"钩子函数参数:\",\"bot: 当前 bot 对象\",\"api: 调用的 api 名称\",\"data: api 调用的参数字典\",\"参数\",\"func (T_CallingAPIHook)\",\"返回\",\"T_CallingAPIHook\"]},\"2328\":{\"h\":\"\",\"t\":[\"说明\",\"调用 api 后处理。\",\"钩子函数参数:\",\"bot: 当前 bot 对象\",\"exception: 调用 api 时发生的错误\",\"api: 调用的 api 名称\",\"data: api 调用的参数字典\",\"result: api 调用的返回\",\"参数\",\"func (T_CalledAPIHook)\",\"返回\",\"T_CalledAPIHook\"]},\"2329\":{\"h\":\"\",\"t\":[\"说明: Event 基类。提供获取关键信息的方法，其余信息可直接获取。\",\"参数\",\"auto\"]},\"2330\":{\"h\":\"\",\"t\":[\"说明: 获取事件类型的方法，类型通常为 NoneBot 内置的四种类型。\",\"参数\",\"empty\",\"返回\",\"str\"]},\"2331\":{\"h\":\"\",\"t\":[\"说明: 获取事件名称的方法。\",\"参数\",\"empty\",\"返回\",\"str\"]},\"2332\":{\"h\":\"\",\"t\":[\"说明: 获取事件描述的方法，通常为事件具体内容。\",\"参数\",\"empty\",\"返回\",\"str\"]},\"2333\":{\"h\":\"\",\"t\":[\"说明\",\"获取事件日志信息的方法。\",\"通常你不需要修改这个方法，只有当希望 NoneBot 隐藏该事件日志时， 可以抛出 NoLogException 异常。\",\"参数\",\"empty\",\"返回\",\"str\",\"异常\",\"NoLogException: 希望 NoneBot 隐藏该事件日志\"]},\"2334\":{\"h\":\"\",\"t\":[\"说明: 获取事件主体 id 的方法，通常是用户 id 。\",\"参数\",\"empty\",\"返回\",\"str\"]},\"2335\":{\"h\":\"\",\"t\":[\"说明: 获取会话 id 的方法，用于判断当前事件属于哪一个会话， 通常是用户 id、群组 id 组合。\",\"参数\",\"empty\",\"返回\",\"str\"]},\"2336\":{\"h\":\"\",\"t\":[\"说明: 获取事件消息内容的方法。\",\"参数\",\"empty\",\"返回\",\"Message\"]},\"2337\":{\"h\":\"\",\"t\":[\"说明\",\"获取消息纯文本的方法。\",\"通常不需要修改，默认通过 get_message().extract_plain_text 获取。\",\"参数\",\"empty\",\"返回\",\"str\"]},\"2338\":{\"h\":\"\",\"t\":[\"说明: 获取事件是否与机器人有关的方法。\",\"参数\",\"empty\",\"返回\",\"bool\"]},\"2339\":{\"h\":\"\",\"t\":[\"说明: 消息序列\",\"参数\",\"message: 消息内容\"]},\"2340\":{\"h\":\"\",\"t\":[\"说明\",\"创建消息模板。\",\"用法和 str.format 大致相同，支持以 Message 对象作为消息模板并输出消息对象。 并且提供了拓展的格式化控制符， 可以通过该消息类型的 MessageSegment 工厂方法创建消息。\",\"参数\",\"format_string (str | TM): 格式化模板\",\"返回\",\"MessageTemplate[Self]: 消息格式化器\"]},\"2341\":{\"h\":\"\",\"t\":[\"说明: 获取消息段类型\",\"参数\",\"empty\",\"返回\",\"type[TMS]\"]},\"2342\":{\"h\":\"\",\"t\":[\"说明: 构造消息数组\",\"参数\",\"msg (str)\",\"返回\",\"Iterable[TMS]\"]},\"2343\":{\"h\":\"\",\"t\":[\"重载\",\"1.(args) -> Self\",\"参数\",\"args (str): 消息段类型\",\"返回\",\"Self: 所有类型为 args 的消息段\",\"2.(args) -> TMS\",\"参数\",\"args (tuple[str, int]): 消息段类型和索引\",\"返回\",\"TMS: 类型为 args[0] 的消息段第 args[1] 个\",\"3.(args) -> Self\",\"参数\",\"args (tuple[str, slice]): 消息段类型和切片\",\"返回\",\"Self: 类型为 args[0] 的消息段切片 args[1]\",\"4.(args) -> TMS\",\"参数\",\"args (int): 索引\",\"返回\",\"TMS: 第 args 个消息段\",\"5.(args) -> Self\",\"参数\",\"args (slice): 切片\",\"返回\",\"Self: 消息切片 args\"]},\"2344\":{\"h\":\"\",\"t\":[\"说明: 检查消息段是否存在\",\"参数\",\"value (TMS | str): 消息段或消息段类型\",\"返回\",\"bool: 消息内是否存在给定消息段或给定类型的消息段\"]},\"2345\":{\"h\":\"\",\"t\":[\"说明: 与 __contains__ 相同\",\"参数\",\"value (TMS | str)\",\"返回\",\"bool\"]},\"2346\":{\"h\":\"\",\"t\":[\"说明: 索引消息段\",\"参数\",\"value (TMS | str): 消息段或者消息段类型\",\"*args (SupportsIndex)\",\"arg: start 与 end\",\"返回\",\"int: 索引 index\",\"异常\",\"ValueError: 消息段不存在\"]},\"2347\":{\"h\":\"\",\"t\":[\"说明: 获取指定类型的消息段\",\"参数\",\"type_ (str): 消息段类型\",\"count (int | None): 获取个数\",\"返回\",\"Self: 构建的新消息\"]},\"2348\":{\"h\":\"\",\"t\":[\"说明: 计算指定消息段的个数\",\"参数\",\"value (TMS | str): 消息段或消息段类型\",\"返回\",\"int: 个数\"]},\"2349\":{\"h\":\"\",\"t\":[\"说明: 检查消息中是否仅包含指定消息段\",\"参数\",\"value (TMS | str): 指定消息段或消息段类型\",\"返回\",\"bool: 是否仅包含指定消息段\"]},\"2350\":{\"h\":\"\",\"t\":[\"说明: 添加一个消息段到消息数组末尾。\",\"参数\",\"obj (str | TMS): 要添加的消息段\",\"返回\",\"Self\"]},\"2351\":{\"h\":\"\",\"t\":[\"说明: 拼接一个消息数组或多个消息段到消息数组末尾。\",\"参数\",\"obj (Self | Iterable[TMS]): 要添加的消息数组\",\"返回\",\"Self\"]},\"2352\":{\"h\":\"\",\"t\":[\"说明: 将多个消息连接并将自身作为分割\",\"参数\",\"iterable (Iterable[TMS | Self]): 要连接的消息\",\"返回\",\"Self: 连接后的消息\"]},\"2353\":{\"h\":\"\",\"t\":[\"说明: 深拷贝消息\",\"参数\",\"empty\",\"返回\",\"Self\"]},\"2354\":{\"h\":\"\",\"t\":[\"说明: 过滤消息\",\"参数\",\"*types (str): 包含的消息段类型\",\"返回\",\"Self: 新构造的消息\"]},\"2355\":{\"h\":\"\",\"t\":[\"说明: 过滤消息\",\"参数\",\"*types (str): 不包含的消息段类型\",\"返回\",\"Self: 新构造的消息\"]},\"2356\":{\"h\":\"\",\"t\":[\"说明: 提取消息内纯文本消息\",\"参数\",\"empty\",\"返回\",\"str\"]},\"2357\":{\"h\":\"\",\"t\":[\"说明: 消息段基类\",\"参数\",\"auto\"]},\"2358\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明: 消息段类型\"]},\"2359\":{\"h\":\"\",\"t\":[\"类型: dict[str, Any]\",\"说明: 消息段数据\"]},\"2360\":{\"h\":\"\",\"t\":[\"说明: 获取消息数组类型\",\"参数\",\"empty\",\"返回\",\"type[TM]\"]},\"2361\":{\"h\":\"\",\"t\":[\"说明: 该消息段所代表的 str，在命令匹配部分使用\",\"参数\",\"empty\",\"返回\",\"str\"]},\"2362\":{\"h\":\"\",\"t\":[\"参数\",\"other (str | TMS | Iterable[TMS])\",\"返回\",\"TM\"]},\"2363\":{\"h\":\"\",\"t\":[\"参数\",\"key (str)\",\"default (Any)\",\"返回\",\"untyped\"]},\"2364\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"untyped\"]},\"2365\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"untyped\"]},\"2366\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"untyped\"]},\"2367\":{\"h\":\"\",\"t\":[\"参数\",\"iterable (Iterable[TMS | TM])\",\"返回\",\"TM\"]},\"2368\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"Self\"]},\"2369\":{\"h\":\"\",\"t\":[\"说明: 当前消息段是否为纯文本\",\"参数\",\"empty\",\"返回\",\"bool\"]},\"2370\":{\"h\":\"\",\"t\":[\"说明: 消息模板格式化实现类。\",\"参数\",\"template (str | TM): 模板\",\"factory (type[str] | type[TM]): 消息类型工厂，默认为 str\",\"private_getattr (bool): 是否允许在模板中访问私有属性，默认为 False\"]},\"2371\":{\"h\":\"\",\"t\":[\"参数\",\"spec (FormatSpecFunc_T)\",\"name (str | None)\",\"返回\",\"FormatSpecFunc_T\"]},\"2372\":{\"h\":\"\",\"t\":[\"说明: 根据传入参数和模板生成消息对象\",\"参数\",\"*args\",\"**kwargs\",\"返回\",\"TF\"]},\"2373\":{\"h\":\"\",\"t\":[\"说明: 根据传入字典和模板生成消息对象, 在传入字段名不是有效标识符时有用\",\"参数\",\"mapping (Mapping[str, Any])\",\"返回\",\"TF\"]},\"2374\":{\"h\":\"\",\"t\":[\"参数\",\"format_string (str)\",\"args (Sequence[Any])\",\"kwargs (Mapping[str, Any])\",\"返回\",\"TF\"]},\"2375\":{\"h\":\"\",\"t\":[\"参数\",\"field_name (str)\",\"args (Sequence[Any])\",\"kwargs (Mapping[str, Any])\",\"返回\",\"tuple[Any, int | str]\"]},\"2376\":{\"h\":\"\",\"t\":[\"参数\",\"value (Any)\",\"format_spec (str)\",\"返回\",\"Any\"]},\"2377\":{\"h\":\"nonebot.dependencies\",\"t\":[\"本模块模块实现了依赖注入的定义与处理。\"]},\"2378\":{\"h\":\"\",\"t\":[\"说明\",\"依赖注入的基本单元 —— 参数。\",\"继承自 pydantic.fields.FieldInfo，用于描述参数信息（不包括参数名）。\",\"参数\",\"*args\",\"validate (bool)\",\"**kwargs (Any)\"]},\"2379\":{\"h\":\"\",\"t\":[\"说明: 依赖注入容器\",\"参数\",\"call: 依赖注入的可调用对象，可以是任何 Callable 对象\",\"pre_checkers: 依赖注入解析前的参数检查\",\"params: 具名参数列表\",\"parameterless: 匿名参数列表\",\"allow_types: 允许的参数类型\"]},\"2380\":{\"h\":\"\",\"t\":[\"参数\",\"call (_DependentCallable[R])\",\"allow_types (tuple[type[Param], ...])\",\"返回\",\"tuple[ModelField, ...]\"]},\"2381\":{\"h\":\"\",\"t\":[\"参数\",\"parameterless (tuple[Any, ...])\",\"allow_types (tuple[type[Param], ...])\",\"返回\",\"tuple[Param, ...]\"]},\"2382\":{\"h\":\"\",\"t\":[\"参数\",\"call (_DependentCallable[R])\",\"parameterless (Iterable[Any] | None)\",\"allow_types (Iterable[type[Param]])\",\"返回\",\"Dependent[R]\"]},\"2383\":{\"h\":\"\",\"t\":[\"参数\",\"**params (Any)\",\"返回\",\"None\"]},\"2384\":{\"h\":\"\",\"t\":[\"参数\",\"**params (Any)\",\"返回\",\"dict[str, Any]\"]},\"2385\":{\"h\":\"nonebot.dependencies.utils\"},\"2386\":{\"h\":\"\",\"t\":[\"说明: 获取可调用对象签名\",\"参数\",\"call ((...) -> Any)\",\"返回\",\"inspect.Signature\"]},\"2387\":{\"h\":\"\",\"t\":[\"说明: 获取参数的类型注解\",\"参数\",\"param (inspect.Parameter)\",\"globalns (dict[str, Any])\",\"返回\",\"Any\"]},\"2388\":{\"h\":\"\",\"t\":[\"说明: 检查字段类型是否匹配\",\"参数\",\"field (ModelField)\",\"value (Any)\",\"返回\",\"Any\"]},\"2389\":{\"h\":\"nonebot.drivers.aiohttp\",\"t\":[\"AIOHTTP 驱动适配器。\",\"nb driver install aiohttp # 或者 pip install nonebot2[aiohttp]\",\"提示\",\"本驱动仅支持客户端连接\"]},\"2390\":{\"h\":\"\",\"t\":[\"参数\",\"params (QueryTypes)\",\"headers (HeaderTypes)\",\"cookies (CookieTypes)\",\"version (str | HTTPVersion)\",\"timeout (float | None)\",\"proxy (str | None)\"]},\"2391\":{\"h\":\"\",\"t\":[\"参数\",\"setup (Request)\",\"返回\",\"Response\"]},\"2392\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"None\"]},\"2393\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"None\"]},\"2394\":{\"h\":\"\",\"t\":[\"说明: AIOHTTP Mixin\",\"参数\",\"auto\"]},\"2395\":{\"h\":\"\",\"t\":[\"参数\",\"setup (Request)\",\"返回\",\"Response\"]},\"2396\":{\"h\":\"\",\"t\":[\"参数\",\"setup (Request)\",\"返回\",\"AsyncGenerator[WebSocket, None]\"]},\"2397\":{\"h\":\"\",\"t\":[\"参数\",\"params (QueryTypes)\",\"headers (HeaderTypes)\",\"cookies (CookieTypes)\",\"version (str | HTTPVersion)\",\"timeout (float | None)\",\"proxy (str | None)\",\"返回\",\"Session\"]},\"2398\":{\"h\":\"\",\"t\":[\"说明: AIOHTTP Websocket Wrapper\",\"参数\",\"request (Request)\",\"session (aiohttp.ClientSession)\",\"websocket (aiohttp.ClientWebSocketResponse)\"]},\"2399\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"untyped\"]},\"2400\":{\"h\":\"\",\"t\":[\"参数\",\"code (int)\",\"reason (str)\",\"返回\",\"untyped\"]},\"2401\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"str\"]},\"2402\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"str\"]},\"2403\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"bytes\"]},\"2404\":{\"h\":\"\",\"t\":[\"参数\",\"data (str)\",\"返回\",\"None\"]},\"2405\":{\"h\":\"\",\"t\":[\"参数\",\"data (bytes)\",\"返回\",\"None\"]},\"2406\":{\"h\":\"\",\"t\":[\"参数\",\"env (Env)\",\"config (Config)\"]},\"2407\":{\"h\":\"nonebot.drivers.fastapi\",\"t\":[\"FastAPI 驱动适配\",\"nb driver install fastapi # 或者 pip install nonebot2[fastapi]\",\"提示\",\"本驱动仅支持服务端连接\"]},\"2408\":{\"h\":\"\",\"t\":[\"说明: FastAPI 驱动框架设置，详情参考 FastAPI 文档\",\"参数\",\"auto\"]},\"2409\":{\"h\":\"\",\"t\":[\"类型: str | None\",\"说明:openapi.json 地址，默认为 None 即关闭\"]},\"2410\":{\"h\":\"\",\"t\":[\"类型: str | None\",\"说明:swagger 地址，默认为 None 即关闭\"]},\"2411\":{\"h\":\"\",\"t\":[\"类型: str | None\",\"说明:redoc 地址，默认为 None 即关闭\"]},\"2412\":{\"h\":\"\",\"t\":[\"类型: bool\",\"说明: 是否包含适配器路由的 schema，默认为 True\"]},\"2413\":{\"h\":\"\",\"t\":[\"类型: bool\",\"说明: 开启/关闭冷重载\"]},\"2414\":{\"h\":\"\",\"t\":[\"类型: list[str] | None\",\"说明: 重载监控文件夹列表，默认为 uvicorn 默认值\"]},\"2415\":{\"h\":\"\",\"t\":[\"类型: float\",\"说明: 重载延迟，默认为 uvicorn 默认值\"]},\"2416\":{\"h\":\"\",\"t\":[\"类型: list[str] | None\",\"说明: 要监听的文件列表，支持 glob pattern，默认为 uvicorn 默认值\"]},\"2417\":{\"h\":\"\",\"t\":[\"类型: list[str] | None\",\"说明: 不要监听的文件列表，支持 glob pattern，默认为 uvicorn 默认值\"]},\"2418\":{\"h\":\"\",\"t\":[\"类型: dict[str, Any]\",\"说明: 传递给 FastAPI 的其他参数。\"]},\"2419\":{\"h\":\"\",\"t\":[\"说明: FastAPI 驱动框架。\",\"参数\",\"env (Env)\",\"config (NoneBotConfig)\"]},\"2420\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明: 驱动名称: fastapi\"]},\"2421\":{\"h\":\"\",\"t\":[\"类型: FastAPI\",\"说明:FastAPI APP 对象\"]},\"2422\":{\"h\":\"\",\"t\":[\"类型: FastAPI\",\"说明:FastAPI APP 对象\"]},\"2423\":{\"h\":\"\",\"t\":[\"类型: logging.Logger\",\"说明: fastapi 使用的 logger\"]},\"2424\":{\"h\":\"\",\"t\":[\"参数\",\"setup (HTTPServerSetup)\",\"返回\",\"untyped\"]},\"2425\":{\"h\":\"\",\"t\":[\"参数\",\"setup (WebSocketServerSetup)\",\"返回\",\"None\"]},\"2426\":{\"h\":\"\",\"t\":[\"说明: 使用 uvicorn 启动 FastAPI\",\"参数\",\"host (str | None)\",\"port (int | None)\",\"*args\",\"app (str | None)\",\"**kwargs\",\"返回\",\"untyped\"]},\"2427\":{\"h\":\"\",\"t\":[\"说明: FastAPI WebSocket Wrapper\",\"参数\",\"request (BaseRequest)\",\"websocket (WebSocket)\"]},\"2428\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"None\"]},\"2429\":{\"h\":\"\",\"t\":[\"参数\",\"code (int)\",\"reason (str)\",\"返回\",\"None\"]},\"2430\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"str | bytes\"]},\"2431\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"str\"]},\"2432\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"bytes\"]},\"2433\":{\"h\":\"\",\"t\":[\"参数\",\"data (str)\",\"返回\",\"None\"]},\"2434\":{\"h\":\"\",\"t\":[\"参数\",\"data (bytes)\",\"返回\",\"None\"]},\"2435\":{\"h\":\"nonebot.drivers.httpx\",\"t\":[\"HTTPX 驱动适配\",\"nb driver install httpx # 或者 pip install nonebot2[httpx]\",\"提示\",\"本驱动仅支持客户端 HTTP 连接\"]},\"2436\":{\"h\":\"\",\"t\":[\"参数\",\"params (QueryTypes)\",\"headers (HeaderTypes)\",\"cookies (CookieTypes)\",\"version (str | HTTPVersion)\",\"timeout (float | None)\",\"proxy (str | None)\"]},\"2437\":{\"h\":\"\",\"t\":[\"参数\",\"setup (Request)\",\"返回\",\"Response\"]},\"2438\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"None\"]},\"2439\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"None\"]},\"2440\":{\"h\":\"\",\"t\":[\"说明: HTTPX Mixin\",\"参数\",\"auto\"]},\"2441\":{\"h\":\"\",\"t\":[\"参数\",\"setup (Request)\",\"返回\",\"Response\"]},\"2442\":{\"h\":\"\",\"t\":[\"参数\",\"params (QueryTypes)\",\"headers (HeaderTypes)\",\"cookies (CookieTypes)\",\"version (str | HTTPVersion)\",\"timeout (float | None)\",\"proxy (str | None)\",\"返回\",\"Session\"]},\"2443\":{\"h\":\"\",\"t\":[\"参数\",\"env (Env)\",\"config (Config)\"]},\"2444\":{\"h\":\"nonebot.drivers\",\"t\":[\"本模块定义了驱动适配器基类。\",\"各驱动请继承以下基类。\"]},\"2445\":{\"h\":\"\",\"t\":[\"说明\",\"ASGI 服务端基类。\",\"将后端框架封装，以满足适配器使用。\",\"参数\",\"auto\"]},\"2446\":{\"h\":\"\",\"t\":[\"类型: Any\",\"说明: 驱动 APP 对象\"]},\"2447\":{\"h\":\"\",\"t\":[\"类型: Any\",\"说明: 驱动 ASGI 对象\"]},\"2448\":{\"h\":\"\",\"t\":[\"说明: 设置一个 HTTP 服务器路由配置\",\"参数\",\"setup (HTTPServerSetup)\",\"返回\",\"None\"]},\"2449\":{\"h\":\"\",\"t\":[\"说明: 设置一个 WebSocket 服务器路由配置\",\"参数\",\"setup (WebSocketServerSetup)\",\"返回\",\"None\"]},\"2450\":{\"h\":\"\",\"t\":[\"参数\",\"cookies (CookieTypes)\"]},\"2451\":{\"h\":\"\",\"t\":[\"参数\",\"name (str)\",\"value (str)\",\"domain (str)\",\"path (str)\",\"返回\",\"None\"]},\"2452\":{\"h\":\"\",\"t\":[\"参数\",\"name (str)\",\"default (str | None)\",\"domain (str | None)\",\"path (str | None)\",\"返回\",\"str | None\"]},\"2453\":{\"h\":\"\",\"t\":[\"参数\",\"name (str)\",\"domain (str | None)\",\"path (str | None)\",\"返回\",\"None\"]},\"2454\":{\"h\":\"\",\"t\":[\"参数\",\"domain (str | None)\",\"path (str | None)\",\"返回\",\"None\"]},\"2455\":{\"h\":\"\",\"t\":[\"参数\",\"cookies (CookieTypes)\",\"返回\",\"None\"]},\"2456\":{\"h\":\"\",\"t\":[\"参数\",\"request (Request)\",\"返回\",\"dict[str, str]\"]},\"2457\":{\"h\":\"\",\"t\":[\"说明\",\"驱动器基类。\",\"驱动器控制框架的启动和停止，适配器的注册，以及机器人生命周期管理。\",\"参数\",\"env (Env): 包含环境信息的 Env 对象\",\"config (Config): 包含配置信息的 Config 对象\"]},\"2458\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明: 环境名称\"]},\"2459\":{\"h\":\"\",\"t\":[\"类型:Config\",\"说明: 全局配置对象\"]},\"2460\":{\"h\":\"\",\"t\":[\"类型: dict[str, Bot]\",\"说明: 获取当前所有已连接的 Bot\"]},\"2461\":{\"h\":\"\",\"t\":[\"说明: 注册一个协议适配器\",\"参数\",\"adapter (type[Adapter]): 适配器类\",\"**kwargs: 其他传递给适配器的参数\",\"返回\",\"None\"]},\"2462\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明: 驱动类型名称\"]},\"2463\":{\"h\":\"\",\"t\":[\"类型: untyped\",\"说明: 驱动专属 logger 日志记录器\"]},\"2464\":{\"h\":\"\",\"t\":[\"说明: 启动驱动框架\",\"参数\",\"*args\",\"**kwargs\",\"返回\",\"untyped\"]},\"2465\":{\"h\":\"\",\"t\":[\"说明: 注册一个启动时执行的函数\",\"参数\",\"func (LIFESPAN_FUNC)\",\"返回\",\"LIFESPAN_FUNC\"]},\"2466\":{\"h\":\"\",\"t\":[\"说明: 注册一个停止时执行的函数\",\"参数\",\"func (LIFESPAN_FUNC)\",\"返回\",\"LIFESPAN_FUNC\"]},\"2467\":{\"h\":\"\",\"t\":[\"说明\",\"装饰一个函数使他在 bot 连接成功时执行。\",\"钩子函数参数:\",\"bot: 当前连接上的 Bot 对象\",\"参数\",\"func (T_BotConnectionHook)\",\"返回\",\"T_BotConnectionHook\"]},\"2468\":{\"h\":\"\",\"t\":[\"说明\",\"装饰一个函数使他在 bot 连接断开时执行。\",\"钩子函数参数:\",\"bot: 当前连接上的 Bot 对象\",\"参数\",\"func (T_BotDisconnectionHook)\",\"返回\",\"T_BotDisconnectionHook\"]},\"2469\":{\"h\":\"\",\"t\":[\"类型: ForwardMixin\",\"说明\",\"支持客户端请求的驱动器。\",\"Deprecated，请使用 ForwardMixin 或其子类代替。\"]},\"2470\":{\"h\":\"\",\"t\":[\"说明: 客户端混入基类。\",\"参数\",\"auto\"]},\"2471\":{\"h\":\"\",\"t\":[\"说明: HTTP 客户端混入基类。\",\"参数\",\"auto\"]},\"2472\":{\"h\":\"\",\"t\":[\"说明: 发送一个 HTTP 请求\",\"参数\",\"setup (Request)\",\"返回\",\"Response\"]},\"2473\":{\"h\":\"\",\"t\":[\"说明: 获取一个 HTTP 会话\",\"参数\",\"params (QueryTypes)\",\"headers (HeaderTypes)\",\"cookies (CookieTypes)\",\"version (str | HTTPVersion)\",\"timeout (float | None)\",\"proxy (str | None)\",\"返回\",\"HTTPClientSession\"]},\"2474\":{\"h\":\"\",\"t\":[\"说明: HTTP 服务器路由配置。\",\"参数\",\"auto\"]},\"2475\":{\"h\":\"\",\"t\":[\"说明: An enumeration.\",\"参数\",\"auto\",\"H10: '1.0'\",\"H11: '1.1'\",\"H2: '2'\"]},\"2476\":{\"h\":\"\",\"t\":[\"说明: 可与其他驱动器共用的混入基类。\",\"参数\",\"auto\"]},\"2477\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明: 混入驱动类型名称\"]},\"2478\":{\"h\":\"\",\"t\":[\"参数\",\"method (str | bytes)\",\"url (URL | str | RawURL)\",\"params (QueryTypes)\",\"headers (HeaderTypes)\",\"cookies (CookieTypes)\",\"content (ContentTypes)\",\"data (DataTypes)\",\"json (Any)\",\"files (FilesTypes)\",\"version (str | HTTPVersion)\",\"timeout (float | None)\",\"proxy (str | None)\"]},\"2479\":{\"h\":\"\",\"t\":[\"参数\",\"status_code (int)\",\"headers (HeaderTypes)\",\"content (ContentTypes)\",\"request (Request | None)\"]},\"2480\":{\"h\":\"\",\"t\":[\"类型: ReverseMixin\",\"说明\",\"支持服务端请求的驱动器。\",\"Deprecated，请使用 ReverseMixin 或其子类代替。\"]},\"2481\":{\"h\":\"\",\"t\":[\"说明: 服务端混入基类。\",\"参数\",\"auto\"]},\"2482\":{\"h\":\"\",\"t\":[\"参数\",\"request (Request)\"]},\"2483\":{\"h\":\"\",\"t\":[\"类型: bool\",\"说明: 连接是否已经关闭\"]},\"2484\":{\"h\":\"\",\"t\":[\"说明: 接受 WebSocket 连接请求\",\"参数\",\"empty\",\"返回\",\"None\"]},\"2485\":{\"h\":\"\",\"t\":[\"说明: 关闭 WebSocket 连接请求\",\"参数\",\"code (int)\",\"reason (str)\",\"返回\",\"None\"]},\"2486\":{\"h\":\"\",\"t\":[\"说明: 接收一条 WebSocket text/bytes 信息\",\"参数\",\"empty\",\"返回\",\"str | bytes\"]},\"2487\":{\"h\":\"\",\"t\":[\"说明: 接收一条 WebSocket text 信息\",\"参数\",\"empty\",\"返回\",\"str\"]},\"2488\":{\"h\":\"\",\"t\":[\"说明: 接收一条 WebSocket binary 信息\",\"参数\",\"empty\",\"返回\",\"bytes\"]},\"2489\":{\"h\":\"\",\"t\":[\"说明: 发送一条 WebSocket text/bytes 信息\",\"参数\",\"data (str | bytes)\",\"返回\",\"None\"]},\"2490\":{\"h\":\"\",\"t\":[\"说明: 发送一条 WebSocket text 信息\",\"参数\",\"data (str)\",\"返回\",\"None\"]},\"2491\":{\"h\":\"\",\"t\":[\"说明: 发送一条 WebSocket binary 信息\",\"参数\",\"data (bytes)\",\"返回\",\"None\"]},\"2492\":{\"h\":\"\",\"t\":[\"说明: WebSocket 客户端混入基类。\",\"参数\",\"auto\"]},\"2493\":{\"h\":\"\",\"t\":[\"说明: 发起一个 WebSocket 连接\",\"参数\",\"setup (Request)\",\"返回\",\"AsyncGenerator[WebSocket, None]\"]},\"2494\":{\"h\":\"\",\"t\":[\"说明: WebSocket 服务器路由配置。\",\"参数\",\"auto\"]},\"2495\":{\"h\":\"\",\"t\":[\"说明: 将一个驱动器和多个混入类合并。\",\"重载\",\"1.(driver) -> type[D]\",\"参数\",\"driver (type[D])\",\"返回\",\"type[D]\",\"2.(driver, __m, /, *mixins) -> type[CombinedDriver]\",\"参数\",\"driver (type[D])\",\"__m (type[Mixin])\",\"*mixins (type[Mixin])\",\"返回\",\"type[CombinedDriver]\"]},\"2496\":{\"h\":\"nonebot.drivers.none\",\"t\":[\"None 驱动适配\",\"提示\",\"本驱动不支持任何服务器或客户端连接\"]},\"2497\":{\"h\":\"\",\"t\":[\"说明: None 驱动框架\",\"参数\",\"env (Env)\",\"config (Config)\"]},\"2498\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明: 驱动名称: none\"]},\"2499\":{\"h\":\"\",\"t\":[\"类型: untyped\",\"说明: none driver 使用的 logger\"]},\"2500\":{\"h\":\"\",\"t\":[\"说明: 启动 none driver\",\"参数\",\"*args\",\"**kwargs\",\"返回\",\"untyped\"]},\"2501\":{\"h\":\"\",\"t\":[\"说明: 退出 none driver\",\"参数\",\"force (bool): 强制退出\",\"返回\",\"untyped\"]},\"2502\":{\"h\":\"nonebot.drivers.quart\",\"t\":[\"Quart 驱动适配\",\"nb driver install quart # 或者 pip install nonebot2[quart]\",\"提示\",\"本驱动仅支持服务端连接\"]},\"2503\":{\"h\":\"\",\"t\":[\"说明: Quart 驱动框架设置\",\"参数\",\"auto\"]},\"2504\":{\"h\":\"\",\"t\":[\"类型: bool\",\"说明: 开启/关闭冷重载\"]},\"2505\":{\"h\":\"\",\"t\":[\"类型: list[str] | None\",\"说明: 重载监控文件夹列表，默认为 uvicorn 默认值\"]},\"2506\":{\"h\":\"\",\"t\":[\"类型: float\",\"说明: 重载延迟，默认为 uvicorn 默认值\"]},\"2507\":{\"h\":\"\",\"t\":[\"类型: list[str] | None\",\"说明: 要监听的文件列表，支持 glob pattern，默认为 uvicorn 默认值\"]},\"2508\":{\"h\":\"\",\"t\":[\"类型: list[str] | None\",\"说明: 不要监听的文件列表，支持 glob pattern，默认为 uvicorn 默认值\"]},\"2509\":{\"h\":\"\",\"t\":[\"类型: dict[str, Any]\",\"说明: 传递给 Quart 的其他参数。\"]},\"2510\":{\"h\":\"\",\"t\":[\"说明: Quart 驱动框架\",\"参数\",\"env (Env)\",\"config (NoneBotConfig)\"]},\"2511\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明: 驱动名称: quart\"]},\"2512\":{\"h\":\"\",\"t\":[\"类型: Quart\",\"说明:Quart 对象\"]},\"2513\":{\"h\":\"\",\"t\":[\"类型: untyped\",\"说明:Quart 对象\"]},\"2514\":{\"h\":\"\",\"t\":[\"类型: untyped\",\"说明: Quart 使用的 logger\"]},\"2515\":{\"h\":\"\",\"t\":[\"参数\",\"setup (HTTPServerSetup)\",\"返回\",\"untyped\"]},\"2516\":{\"h\":\"\",\"t\":[\"参数\",\"setup (WebSocketServerSetup)\",\"返回\",\"None\"]},\"2517\":{\"h\":\"\",\"t\":[\"说明: 使用 uvicorn 启动 Quart\",\"参数\",\"host (str | None)\",\"port (int | None)\",\"*args\",\"app (str | None)\",\"**kwargs\",\"返回\",\"untyped\"]},\"2518\":{\"h\":\"\",\"t\":[\"说明: Quart WebSocket Wrapper\",\"参数\",\"request (BaseRequest)\",\"websocket_ctx (WebsocketContext)\"]},\"2519\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"untyped\"]},\"2520\":{\"h\":\"\",\"t\":[\"参数\",\"code (int)\",\"reason (str)\",\"返回\",\"untyped\"]},\"2521\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"str | bytes\"]},\"2522\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"str\"]},\"2523\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"bytes\"]},\"2524\":{\"h\":\"\",\"t\":[\"参数\",\"data (str)\",\"返回\",\"untyped\"]},\"2525\":{\"h\":\"\",\"t\":[\"参数\",\"data (bytes)\",\"返回\",\"untyped\"]},\"2526\":{\"h\":\"nonebot.drivers.websockets\",\"t\":[\"websockets 驱动适配\",\"nb driver install websockets # 或者 pip install nonebot2[websockets]\",\"提示\",\"本驱动仅支持客户端 WebSocket 连接\"]},\"2527\":{\"h\":\"\",\"t\":[\"参数\",\"func ((P) -> Coroutine[Any, Any, T])\",\"返回\",\"(P) -> Coroutine[Any, Any, T]\"]},\"2528\":{\"h\":\"\",\"t\":[\"说明: Websockets Mixin\",\"参数\",\"auto\"]},\"2529\":{\"h\":\"\",\"t\":[\"参数\",\"setup (Request)\",\"返回\",\"AsyncGenerator[WebSocket, None]\"]},\"2530\":{\"h\":\"\",\"t\":[\"说明: Websockets WebSocket Wrapper\",\"参数\",\"request (Request)\",\"websocket (WebSocketClientProtocol)\"]},\"2531\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"untyped\"]},\"2532\":{\"h\":\"\",\"t\":[\"参数\",\"code (int)\",\"reason (str)\",\"返回\",\"untyped\"]},\"2533\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"str | bytes\"]},\"2534\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"str\"]},\"2535\":{\"h\":\"\",\"t\":[\"参数\",\"empty\",\"返回\",\"bytes\"]},\"2536\":{\"h\":\"\",\"t\":[\"参数\",\"data (str)\",\"返回\",\"None\"]},\"2537\":{\"h\":\"\",\"t\":[\"参数\",\"data (bytes)\",\"返回\",\"None\"]},\"2538\":{\"h\":\"\",\"t\":[\"参数\",\"env (Env)\",\"config (Config)\"]},\"2539\":{\"h\":\"nonebot.plugin\",\"t\":[\"本模块为 NoneBot 插件开发提供便携的定义函数。\"]},\"2540\":{\"h\":\"快捷导入\",\"t\":[\"为方便使用，本模块从子模块导入了部分内容，以下内容可以直接通过本模块导入:\",\"on => on\",\"on_metaevent => on_metaevent\",\"on_message => on_message\",\"on_notice => on_notice\",\"on_request => on_request\",\"on_startswith => on_startswith\",\"on_endswith => on_endswith\",\"on_fullmatch => on_fullmatch\",\"on_keyword => on_keyword\",\"on_command => on_command\",\"on_shell_command => on_shell_command\",\"on_regex => on_regex\",\"on_type => on_type\",\"CommandGroup => CommandGroup\",\"Matchergroup => MatcherGroup\",\"load_plugin => load_plugin\",\"load_plugins => load_plugins\",\"load_all_plugins => load_all_plugins\",\"load_from_json => load_from_json\",\"load_from_toml => load_from_toml\",\"load_builtin_plugin =>load_builtin_plugin\",\"load_builtin_plugins =>load_builtin_plugins\",\"require => require\",\"PluginMetadata => PluginMetadata\"]},\"2541\":{\"h\":\"\",\"t\":[\"说明\",\"获取已经导入的某个插件。\",\"如果为 load_plugins 文件夹导入的插件，则为文件(夹)名。\",\"如果为嵌套的子插件，标识符为 父插件标识符:子插件文件(夹)名。\",\"参数\",\"plugin_id (str): 插件标识符，即 Plugin.id_。\",\"返回\",\"Plugin | None\"]},\"2542\":{\"h\":\"\",\"t\":[\"说明\",\"通过模块名获取已经导入的某个插件。\",\"如果提供的模块名为某个插件的子模块，同样会返回该插件。\",\"参数\",\"module_name (str): 模块名，即 Plugin.module_name。\",\"返回\",\"Plugin | None\"]},\"2543\":{\"h\":\"\",\"t\":[\"说明: 获取当前已导入的所有插件。\",\"参数\",\"empty\",\"返回\",\"set[Plugin]\"]},\"2544\":{\"h\":\"\",\"t\":[\"说明: 获取当前所有可用的插件标识符（包含尚未加载的插件）。\",\"参数\",\"empty\",\"返回\",\"set[str]\"]},\"2545\":{\"h\":\"\",\"t\":[\"说明: 从全局配置获取当前插件需要的配置项。\",\"参数\",\"config (type[C])\",\"返回\",\"C\"]},\"2546\":{\"h\":\"nonebot.plugin.load\",\"t\":[\"本模块定义插件加载接口。\"]},\"2547\":{\"h\":\"\",\"t\":[\"说明: 加载单个插件，可以是本地插件或是通过 pip 安装的插件。\",\"参数\",\"module_path (str | Path): 插件名称 path.to.your.plugin 或插件路径 pathlib.Path(path/to/your/plugin)\",\"返回\",\"Plugin | None\"]},\"2548\":{\"h\":\"\",\"t\":[\"说明: 导入文件夹下多个插件，以 _ 开头的插件不会被导入!\",\"参数\",\"*plugin_dir (str): 文件夹路径\",\"返回\",\"set[Plugin]\"]},\"2549\":{\"h\":\"\",\"t\":[\"说明: 导入指定列表中的插件以及指定目录下多个插件，以 _ 开头的插件不会被导入!\",\"参数\",\"module_path (Iterable[str]): 指定插件集合\",\"plugin_dir (Iterable[str]): 指定文件夹路径集合\",\"返回\",\"set[Plugin]\"]},\"2550\":{\"h\":\"\",\"t\":[\"说明: 导入指定 json 文件中的 plugins 以及 plugin_dirs 下多个插件。 以 _ 开头的插件不会被导入!\",\"参数\",\"file_path (str): 指定 json 文件路径\",\"encoding (str): 指定 json 文件编码\",\"返回\",\"set[Plugin]\",\"用法\",\"{ \\\"plugins\\\": [\\\"some_plugin\\\"], \\\"plugin_dirs\\\": [\\\"some_dir\\\"] }\",\"nonebot.load_from_json(\\\"plugins.json\\\")\"]},\"2551\":{\"h\":\"\",\"t\":[\"说明: 导入指定 toml 文件 [tool.nonebot] 中的 plugins 以及 plugin_dirs 下多个插件。 以 _ 开头的插件不会被导入!\",\"参数\",\"file_path (str): 指定 toml 文件路径\",\"encoding (str): 指定 toml 文件编码\",\"返回\",\"set[Plugin]\",\"用法\",\"[tool.nonebot] plugins = [\\\"some_plugin\\\"] plugin_dirs = [\\\"some_dir\\\"]\",\"nonebot.load_from_toml(\\\"pyproject.toml\\\")\"]},\"2552\":{\"h\":\"\",\"t\":[\"说明: 导入 NoneBot 内置插件。\",\"参数\",\"name (str): 插件名称\",\"返回\",\"Plugin | None\"]},\"2553\":{\"h\":\"\",\"t\":[\"说明: 导入多个 NoneBot 内置插件。\",\"参数\",\"*plugins (str): 插件名称列表\",\"返回\",\"set[Plugin]\"]},\"2554\":{\"h\":\"\",\"t\":[\"说明: 声明依赖插件。\",\"参数\",\"name (str): 插件模块名或插件标识符，仅在已声明插件的情况下可使用标识符。\",\"返回\",\"ModuleType\",\"异常\",\"RuntimeError: 插件无法加载\"]},\"2555\":{\"h\":\"\",\"t\":[\"说明\",\"获取已加载插件的适配器支持状态集合。\",\"如果传入了多个插件名称，返回值会自动取交集。\",\"参数\",\"*names (str): 插件名称列表。\",\"返回\",\"set[str] | None\",\"异常\",\"RuntimeError: 插件未加载\",\"ValueError: 插件缺少元数据\"]},\"2556\":{\"h\":\"nonebot.plugin.manager\",\"t\":[\"本模块实现插件加载流程。\",\"参考: import hooks, PEP302\"]},\"2557\":{\"h\":\"\",\"t\":[\"说明: 插件管理器。\",\"参数\",\"plugins (Iterable[str] | None): 独立插件模块名集合。\",\"search_path (Iterable[str] | None): 插件搜索路径（文件夹），相对于当前工作目录。\"]},\"2558\":{\"h\":\"\",\"t\":[\"类型: set[str]\",\"说明: 返回所有独立插件标识符。\"]},\"2559\":{\"h\":\"\",\"t\":[\"类型: set[str]\",\"说明: 返回已搜索到的插件标识符。\"]},\"2560\":{\"h\":\"\",\"t\":[\"类型: set[str]\",\"说明: 返回当前插件管理器中可用的插件标识符。\"]},\"2561\":{\"h\":\"\",\"t\":[\"类型: dict[str, str]\",\"说明: 返回当前插件管理器中控制的插件标识符与模块路径映射字典。\"]},\"2562\":{\"h\":\"\",\"t\":[\"说明\",\"加载指定插件。\",\"可以使用完整插件模块名或者插件标识符加载。\",\"参数\",\"name (str): 插件名称或插件标识符。\",\"返回\",\"Plugin | None\"]},\"2563\":{\"h\":\"\",\"t\":[\"说明: 加载所有可用插件。\",\"参数\",\"empty\",\"返回\",\"set[Plugin]\"]},\"2564\":{\"h\":\"\",\"t\":[\"参数\",\"auto\"]},\"2565\":{\"h\":\"\",\"t\":[\"参数\",\"fullname (str)\",\"path (Sequence[str] | None)\",\"target (ModuleType | None)\",\"返回\",\"untyped\"]},\"2566\":{\"h\":\"\",\"t\":[\"参数\",\"manager (PluginManager)\",\"fullname (str)\",\"path (str)\"]},\"2567\":{\"h\":\"\",\"t\":[\"参数\",\"spec\",\"返回\",\"ModuleType | None\"]},\"2568\":{\"h\":\"\",\"t\":[\"参数\",\"module (ModuleType)\",\"返回\",\"None\"]},\"2569\":{\"h\":\"nonebot.plugin.model\",\"t\":[\"本模块定义插件相关信息。\"]},\"2570\":{\"h\":\"\",\"t\":[\"说明: 插件元信息，由插件编写者提供\",\"参数\",\"auto\"]},\"2571\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明: 插件名称\"]},\"2572\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明: 插件功能介绍\"]},\"2573\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明: 插件使用方法\"]},\"2574\":{\"h\":\"\",\"t\":[\"类型: str | None\",\"说明: 插件类型，用于商店分类\"]},\"2575\":{\"h\":\"\",\"t\":[\"类型: str | None\",\"说明: 插件主页\"]},\"2576\":{\"h\":\"\",\"t\":[\"类型: type[BaseModel] | None\",\"说明: 插件配置项\"]},\"2577\":{\"h\":\"\",\"t\":[\"类型: set[str] | None\",\"说明\",\"插件支持的适配器模块路径\",\"格式为 <module>[:<Adapter>]，~ 为 nonebot.adapters. 的缩写。\",\"None 表示支持所有适配器。\"]},\"2578\":{\"h\":\"\",\"t\":[\"类型: dict[Any, Any]\",\"说明: 插件额外信息，可由插件编写者自由扩展定义\"]},\"2579\":{\"h\":\"\",\"t\":[\"说明: 获取当前已安装的插件支持适配器类列表\",\"参数\",\"empty\",\"返回\",\"set[type[Adapter]] | None\"]},\"2580\":{\"h\":\"\",\"t\":[\"说明: 存储插件信息\",\"参数\",\"auto\"]},\"2581\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明: 插件名称，NoneBot 使用 文件/文件夹 名称作为插件名称\"]},\"2582\":{\"h\":\"\",\"t\":[\"类型: ModuleType\",\"说明: 插件模块对象\"]},\"2583\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明: 点分割模块路径\"]},\"2584\":{\"h\":\"\",\"t\":[\"类型:PluginManager\",\"说明: 导入该插件的插件管理器\"]},\"2585\":{\"h\":\"\",\"t\":[\"类型: set[type[Matcher]]\",\"说明: 插件加载时定义的 Matcher\"]},\"2586\":{\"h\":\"\",\"t\":[\"类型: Plugin | None\",\"说明: 父插件\"]},\"2587\":{\"h\":\"\",\"t\":[\"类型: set[Plugin]\",\"说明: 子插件集合\"]},\"2588\":{\"h\":\"\",\"t\":[\"类型: str\",\"说明: 插件索引标识\"]},\"2589\":{\"h\":\"nonebot.plugin.on\",\"t\":[\"本模块定义事件响应器便携定义函数。\"]},\"2590\":{\"h\":\"\",\"t\":[\"说明: 存储一个事件响应器到插件。\",\"参数\",\"matcher (type[Matcher]): 事件响应器\",\"返回\",\"None\"]},\"2591\":{\"h\":\"\",\"t\":[\"说明\",\"获取事件响应器定义所在插件。\",\"Deprecated, 请使用 get_matcher_source 获取信息。\",\"参数\",\"depth (int): 调用栈深度\",\"返回\",\"Plugin | None\"]},\"2592\":{\"h\":\"\",\"t\":[\"说明\",\"获取事件响应器定义所在模块。\",\"Deprecated, 请使用 get_matcher_source 获取信息。\",\"参数\",\"depth (int): 调用栈深度\",\"返回\",\"ModuleType | None\"]},\"2593\":{\"h\":\"\",\"t\":[\"说明: 获取事件响应器定义所在源码信息。\",\"参数\",\"depth (int): 调用栈深度\",\"返回\",\"MatcherSource | None\"]},\"2594\":{\"h\":\"\",\"t\":[\"说明: 注册一个基础事件响应器，可自定义类型。\",\"参数\",\"type (str): 事件响应器类型\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2595\":{\"h\":\"\",\"t\":[\"说明: 注册一个元事件响应器。\",\"参数\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2596\":{\"h\":\"\",\"t\":[\"说明: 注册一个消息事件响应器。\",\"参数\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2597\":{\"h\":\"\",\"t\":[\"说明: 注册一个通知事件响应器。\",\"参数\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2598\":{\"h\":\"\",\"t\":[\"说明: 注册一个请求事件响应器。\",\"参数\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2599\":{\"h\":\"\",\"t\":[\"说明: 注册一个消息事件响应器，并且当消息的文本部分以指定内容开头时响应。\",\"参数\",\"msg (str | tuple[str, ...]): 指定消息开头内容\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"ignorecase (bool): 是否忽略大小写\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2600\":{\"h\":\"\",\"t\":[\"说明: 注册一个消息事件响应器，并且当消息的文本部分以指定内容结尾时响应。\",\"参数\",\"msg (str | tuple[str, ...]): 指定消息结尾内容\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"ignorecase (bool): 是否忽略大小写\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2601\":{\"h\":\"\",\"t\":[\"说明: 注册一个消息事件响应器，并且当消息的文本部分与指定内容完全一致时响应。\",\"参数\",\"msg (str | tuple[str, ...]): 指定消息全匹配内容\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"ignorecase (bool): 是否忽略大小写\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2602\":{\"h\":\"\",\"t\":[\"说明: 注册一个消息事件响应器，并且当消息纯文本部分包含关键词时响应。\",\"参数\",\"keywords (set[str]): 关键词列表\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2603\":{\"h\":\"\",\"t\":[\"说明\",\"注册一个消息事件响应器，并且当消息以指定命令开头时响应。\",\"命令匹配规则参考: 命令形式匹配 <rule.md#command-command>_\",\"参数\",\"cmd (str | tuple[str, ...]): 指定命令内容\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"aliases (set[str | tuple[str, ...]] | None): 命令别名\",\"force_whitespace (str | bool | None): 是否强制命令后必须有指定空白符\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2604\":{\"h\":\"\",\"t\":[\"说明\",\"注册一个支持 shell_like 解析参数的命令消息事件响应器。\",\"与普通的 on_command 不同的是，在添加 parser 参数时, 响应器会自动处理消息。\",\"可以通过 ShellCommandArgv 获取原始参数列表， 通过 ShellCommandArgs 获取解析后的参数字典。\",\"参数\",\"cmd (str | tuple[str, ...]): 指定命令内容\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"aliases (set[str | tuple[str, ...]] | None): 命令别名\",\"parser (ArgumentParser | None): nonebot.rule.ArgumentParser 对象\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2605\":{\"h\":\"\",\"t\":[\"说明\",\"注册一个消息事件响应器，并且当消息匹配正则表达式时响应。\",\"命令匹配规则参考: 正则匹配 <rule.md#regex-regex-flags-0>_\",\"参数\",\"pattern (str): 正则表达式\",\"flags (int | re.RegexFlag): 正则匹配标志\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2606\":{\"h\":\"\",\"t\":[\"说明: 注册一个事件响应器，并且当事件为指定类型时响应。\",\"参数\",\"types (type[Event] | tuple[type[Event], ...]): 事件类型\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2607\":{\"h\":\"\",\"t\":[\"参数\",\"cmd (str | tuple[str, ...])\",\"prefix_aliases (bool)\",\"rule (Rule | T_RuleChecker | None)\",\"permission (Permission | T_PermissionChecker | None)\",\"handlers (list[T_Handler | Dependent[Any]] | None)\",\"temp (bool)\",\"expire_time (datetime | timedelta | None)\",\"priority (int)\",\"block (bool)\",\"state (T_State | None)\"]},\"2608\":{\"h\":\"\",\"t\":[\"说明: 注册一个新的命令。新参数将会覆盖命令组默认值\",\"参数\",\"cmd (str | tuple[str, ...]): 指定命令内容\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"aliases (set[str | tuple[str, ...]] | None): 命令别名\",\"force_whitespace (str | bool | None): 是否强制命令后必须有指定空白符\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2609\":{\"h\":\"\",\"t\":[\"说明: 注册一个新的 shell_like 命令。新参数将会覆盖命令组默认值\",\"参数\",\"cmd (str | tuple[str, ...]): 指定命令内容\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"aliases (set[str | tuple[str, ...]] | None): 命令别名\",\"parser (ArgumentParser | None): nonebot.rule.ArgumentParser 对象\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2610\":{\"h\":\"\",\"t\":[\"参数\",\"type (str)\",\"rule (Rule | T_RuleChecker | None)\",\"permission (Permission | T_PermissionChecker | None)\",\"handlers (list[T_Handler | Dependent[Any]] | None)\",\"temp (bool)\",\"expire_time (datetime | timedelta | None)\",\"priority (int)\",\"block (bool)\",\"state (T_State | None)\"]},\"2611\":{\"h\":\"\",\"t\":[\"说明: 注册一个基础事件响应器，可自定义类型。\",\"参数\",\"type (str): 事件响应器类型\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2612\":{\"h\":\"\",\"t\":[\"说明: 注册一个元事件响应器。\",\"参数\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2613\":{\"h\":\"\",\"t\":[\"说明: 注册一个消息事件响应器。\",\"参数\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2614\":{\"h\":\"\",\"t\":[\"说明: 注册一个通知事件响应器。\",\"参数\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2615\":{\"h\":\"\",\"t\":[\"说明: 注册一个请求事件响应器。\",\"参数\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2616\":{\"h\":\"\",\"t\":[\"说明: 注册一个消息事件响应器，并且当消息的文本部分以指定内容开头时响应。\",\"参数\",\"msg (str | tuple[str, ...]): 指定消息开头内容\",\"ignorecase (bool): 是否忽略大小写\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2617\":{\"h\":\"\",\"t\":[\"说明: 注册一个消息事件响应器，并且当消息的文本部分以指定内容结尾时响应。\",\"参数\",\"msg (str | tuple[str, ...]): 指定消息结尾内容\",\"ignorecase (bool): 是否忽略大小写\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2618\":{\"h\":\"\",\"t\":[\"说明: 注册一个消息事件响应器，并且当消息的文本部分与指定内容完全一致时响应。\",\"参数\",\"msg (str | tuple[str, ...]): 指定消息全匹配内容\",\"ignorecase (bool): 是否忽略大小写\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2619\":{\"h\":\"\",\"t\":[\"说明: 注册一个消息事件响应器，并且当消息纯文本部分包含关键词时响应。\",\"参数\",\"keywords (set[str]): 关键词列表\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2620\":{\"h\":\"\",\"t\":[\"说明\",\"注册一个消息事件响应器，并且当消息以指定命令开头时响应。\",\"命令匹配规则参考: 命令形式匹配 <rule.md#command-command>_\",\"参数\",\"cmd (str | tuple[str, ...]): 指定命令内容\",\"aliases (set[str | tuple[str, ...]] | None): 命令别名\",\"force_whitespace (str | bool | None): 是否强制命令后必须有指定空白符\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2621\":{\"h\":\"\",\"t\":[\"说明\",\"注册一个支持 shell_like 解析参数的命令消息事件响应器。\",\"与普通的 on_command 不同的是，在添加 parser 参数时, 响应器会自动处理消息。\",\"可以通过 ShellCommandArgv 获取原始参数列表， 通过 ShellCommandArgs 获取解析后的参数字典。\",\"参数\",\"cmd (str | tuple[str, ...]): 指定命令内容\",\"aliases (set[str | tuple[str, ...]] | None): 命令别名\",\"parser (ArgumentParser | None): nonebot.rule.ArgumentParser 对象\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2622\":{\"h\":\"\",\"t\":[\"说明\",\"注册一个消息事件响应器，并且当消息匹配正则表达式时响应。\",\"命令匹配规则参考: 正则匹配 <rule.md#regex-regex-flags-0>_\",\"参数\",\"pattern (str): 正则表达式\",\"flags (int | re.RegexFlag): 正则匹配标志\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2623\":{\"h\":\"\",\"t\":[\"说明: 注册一个事件响应器，并且当事件为指定类型时响应。\",\"参数\",\"types (type[Event] | tuple[type[Event]]): 事件类型\",\"rule (Rule | T_RuleChecker | None): 事件响应规则\",\"permission (Permission | T_PermissionChecker | None): 事件响应权限\",\"handlers (list[T_Handler | Dependent[Any]] | None): 事件处理函数列表\",\"temp (bool): 是否为临时事件响应器（仅执行一次）\",\"expire_time (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除\",\"priority (int): 事件响应器优先级\",\"block (bool): 是否阻止事件向更低优先级传递\",\"state (T_State | None): 默认 state\",\"返回\",\"type[Matcher]\"]},\"2624\":{\"h\":\"Alconna 本体\",\"t\":[\"Alconna 隶属于 ArcletProject，是一个简单、灵活、高效的命令参数解析器, 并且不局限于解析命令式字符串。\",\"我们通过一个例子来讲解 Alconna 的核心 —— Args, Subcommand, Option：\",\"from arclet.alconna import Alconna, Args, Subcommand, Option alc = Alconna( \\\"pip\\\", Subcommand( \\\"install\\\", Args[\\\"package\\\", str], Option(\\\"-r|--requirement\\\", Args[\\\"file\\\", str]), Option(\\\"-i|--index-url\\\", Args[\\\"url\\\", str]), ) ) res = alc.parse(\\\"pip install nonebot2 -i URL\\\") print(res) # matched=True, header_match=(origin='pip' result='pip' matched=True groups={}), subcommands={'install': (value=Ellipsis args={'package': 'nonebot2'} options={'index-url': (value=None args={'url': 'URL'})} subcommands={})}, other_args={'package': 'nonebot2', 'url': 'URL'} print(res.all_matched_args) # {'package': 'nonebot2', 'url': 'URL'}\",\"这段代码通过Alconna创捷了一个接受主命令名为pip, 子命令为install且子命令接受一个 Args 参数package和二个 Option 参数-r和-i的命令参数解析器, 通过parse方法返回解析结果 Arparma 的实例。\"]},\"2625\":{\"h\":\"命令头\",\"t\":[\"命令头是指命令的前缀 (Prefix) 与命令名 (Command) 的组合，例如 !help 中的 ! 与 help。\",\"前缀\",\"命令名\",\"匹配内容\",\"说明\",\"-\",\"\\\"foo\\\"\",\"\\\"foo\\\"\",\"无前缀的纯文字头\",\"-\",\"123\",\"123\",\"无前缀的元素头\",\"-\",\"\\\"re:\\\\d{2}\\\"\",\"\\\"32\\\"\",\"无前缀的正则头\",\"-\",\"int\",\"123 或 \\\"456\\\"\",\"无前缀的类型头\",\"[int, bool]\",\"-\",\"True 或 123\",\"无名的元素类头\",\"[\\\"foo\\\", \\\"bar\\\"]\",\"-\",\"\\\"foo\\\" 或 \\\"bar\\\"\",\"无名的纯文字头\",\"[\\\"foo\\\", \\\"bar\\\"]\",\"\\\"baz\\\"\",\"\\\"foobaz\\\" 或 \\\"barbaz\\\"\",\"纯文字头\",\"[int, bool]\",\"\\\"foo\\\"\",\"[123, \\\"foo\\\"] 或 [False, \\\"foo\\\"]\",\"类型头\",\"[123, 4567]\",\"\\\"foo\\\"\",\"[123, \\\"foo\\\"] 或 [4567, \\\"foo\\\"]\",\"元素头\",\"[nepattern.NUMBER]\",\"\\\"bar\\\"\",\"[123, \\\"bar\\\"] 或 [123.456, \\\"bar\\\"]\",\"表达式头\",\"[123, \\\"foo\\\"]\",\"\\\"bar\\\"\",\"[123, \\\"bar\\\"] 或 \\\"foobar\\\" 或 [\\\"foo\\\", \\\"bar\\\"]\",\"混合头\",\"[(int, \\\"foo\\\"), (456, \\\"bar\\\")]\",\"\\\"baz\\\"\",\"[123, \\\"foobaz\\\"] 或 [456, \\\"foobaz\\\"] 或 [456, \\\"barbaz\\\"]\",\"对头\",\"对于无前缀的类型头，此时会将传入的值尝试转为 BasePattern，例如 int 会转为 nepattern.INTEGER。如此该命令头会匹配对应的类型， 例如 int 会匹配 123 或 \\\"456\\\"，但不会匹配 \\\"foo\\\"。解析后，Alconna 会将命令头匹配到的值转为对应的类型，例如 int 会将 \\\"123\\\" 转为 123。\",\"提示\",\"正则内容只在命令名上生效，前缀中的正则会被转义\",\"除了通过传入 re:xxx 来使用正则表达式外，Alconna 还提供了一种更加简洁的方式来使用正则表达式，称为 Bracket Header：\",\"from alconna import Alconna alc = Alconna(\\\".rd{roll:int}\\\") assert alc.parse(\\\".rd123\\\").header[\\\"roll\\\"] == 123\",\"Bracket Header 类似 python 里的 f-string 写法，通过 \\\"{}\\\" 声明匹配类型\",\"\\\"{}\\\" 中的内容为 \\\"name:type or pat\\\"：\",\"\\\"{}\\\", \\\"{:}\\\" ⇔ \\\"(.+)\\\", 占位符\",\"\\\"{foo}\\\" ⇔ \\\"(?P&lt;foo&gt;.+)\\\"\",\"\\\"{:\\\\d+}\\\" ⇔ \\\"(\\\\d+)\\\"\",\"\\\"{foo:int}\\\" ⇔ \\\"(?P&lt;foo&gt;\\\\d+)\\\"，其中 \\\"int\\\" 部分若能转为 BasePattern 则读取里面的表达式\"]},\"2626\":{\"h\":\"参数声明(Args)\",\"t\":[\"Args 是用于声明命令参数的组件， 可以通过以下几种方式构造 Args ：\",\"Args[key, var, default][key1, var1, default1][...]\",\"Args[(key, var, default)]\",\"Args.key[var, default]\",\"其中，key 一定是字符串，而 var 一般为参数的类型，default 为具体的值或者 arclet.alconna.args.Field\",\"其与函数签名类似，但是允许含有默认值的参数在前；同时支持 keyword-only 参数不依照构造顺序传入 （但是仍需要在非 keyword-only 参数之后）。\"]},\"2627\":{\"h\":\"key\",\"t\":[\"key 的作用是用以标记解析出来的参数并存放于 Arparma 中，以方便用户调用。\",\"其有三种为 Args 注解的标识符: ?、/、 !, 标识符与 key 之间建议以 ; 分隔：\",\"! 标识符表示该处传入的参数应不是规定的类型，或不在指定的值中。\",\"? 标识符表示该参数为可选参数，会在无参数匹配时跳过。\",\"/ 标识符表示该参数的类型注解需要隐藏。\",\"另外，对于参数的注释也可以标记在 key 中，其与 key 或者标识符 以 # 分割：foo#这是注释;? 或 foo?#这是注释\",\"提示\",\"Args 中的 key 在实际命令中并不需要传入（keyword 参数除外）：\",\"from arclet.alconna import Alconna, Args alc = Alconna(\\\"test\\\", Args[\\\"foo\\\", str]) alc.parse(\\\"test --foo abc\\\") # 错误 alc.parse(\\\"test abc\\\") # 正确\",\"若需要 test --foo abc，你应该使用 Option：\",\"from arclet.alconna import Alconna, Args, Option alc = Alconna(\\\"test\\\", Option(\\\"--foo\\\", Args[\\\"foo\\\", str]))\"]},\"2628\":{\"h\":\"var\",\"t\":[\"var 负责命令参数的类型检查与类型转化\",\"Args 的var表面上看需要传入一个 type，但实际上它需要的是一个 nepattern.BasePattern 的实例：\",\"from arclet.alconna import Args from nepattern import BasePattern # 表示 foo 参数需要匹配一个 @number 样式的字符串 args = Args[\\\"foo\\\", BasePattern(\\\"@\\\\d+\\\")]\",\"pip 示例中可以传入 str 是因为 str 已经注册在了 nepattern.global_patterns 中，因此会替换为 nepattern.global_patterns[str]\",\"nepattern.global_patterns默认支持的类型有：\",\"str: 匹配任意字符串\",\"int: 匹配整数\",\"float: 匹配浮点数\",\"bool: 匹配 True 与 False 以及他们小写形式\",\"hex: 匹配 0x 开头的十六进制字符串\",\"url: 匹配网址\",\"email: 匹配 xxxx@xxx 的字符串\",\"ipv4: 匹配 xxx.xxx.xxx.xxx 的字符串\",\"list: 匹配类似 [\\\"foo\\\",\\\"bar\\\",\\\"baz\\\"] 的字符串\",\"dict: 匹配类似 {\\\"foo\\\":\\\"bar\\\",\\\"baz\\\":\\\"qux\\\"} 的字符串\",\"datetime: 传入一个 datetime 支持的格式字符串，或时间戳\",\"Any: 匹配任意类型\",\"AnyString: 匹配任意类型，转为 str\",\"Number: 匹配 int 与 float，转为 int\",\"同时可以使用 typing 中的类型：\",\"Literal[X]: 匹配其中的任意一个值\",\"Union[X, Y]: 匹配其中的任意一个类型\",\"Optional[xxx]: 会自动将默认值设为 None，并在解析失败时使用默认值\",\"List[X]: 匹配一个列表，其中的元素为 X 类型\",\"Dict[X, Y]: 匹配一个字典，其中的 key 为 X 类型，value 为 Y 类型\",\"...\",\"提示\",\"几类特殊的传入标记：\",\"\\\"foo\\\": 匹配字符串 \\\"foo\\\" (若没有某个 BasePattern 与之关联)\",\"RawStr(\\\"foo\\\"): 匹配字符串 \\\"foo\\\" (即使有 BasePattern 与之关联也不会被替换)\",\"\\\"foo|bar|baz\\\": 匹配 \\\"foo\\\" 或 \\\"bar\\\" 或 \\\"baz\\\"\",\"[foo, bar, Baz, ...]: 匹配其中的任意一个值或类型\",\"Callable[[X], Y]: 匹配一个参数为 X 类型的值，并返回通过该函数调用得到的 Y 类型的值\",\"\\\"re:xxx\\\": 匹配一个正则表达式 xxx，会返回 Match[0]\",\"\\\"rep:xxx\\\": 匹配一个正则表达式 xxx，会返回 re.Match 对象\",\"{foo: bar, baz: qux}: 匹配字典中的任意一个键, 并返回对应的值 (特殊的键 ... 会匹配任意的值)\",\"...\",\"特别的，你可以不传入 var，此时会使用 key 作为 var, 匹配 key 字符串。\"]},\"2629\":{\"h\":\"MultiVar 与 KeyWordVar\",\"t\":[\"MultiVar 是一个特殊的标注，用于告知解析器该参数可以接受多个值，类似于函数中的 *args，其构造方法形如 MultiVar(str)。\",\"同样的还有 KeyWordVar，类似于函数中的 *, name: type，其构造方法形如 KeyWordVar(str)，用于告知解析器该参数为一个 keyword-only 参数。\",\"提示\",\"MultiVar 与 KeyWordVar 组合时，代表该参数为一个可接受多个 key-value 的参数，类似于函数中的 **kwargs，其构造方法形如 MultiVar(KeyWordVar(str))\",\"MultiVar 与 KeyWordVar 也可以传入 default 参数，用于指定默认值\",\"MultiVar 不能在 KeyWordVar 之后传入\"]},\"2630\":{\"h\":\"default\",\"t\":[\"default 传入的是该参数的默认值或者 Field，以携带对于该参数的更多信息。\",\"默认情况下 (即不声明) default 的值为特殊值 Empty。这也意味着你可以将默认值设置为 None 表示默认值为空值。\",\"Field 构造需要的参数说明如下：\",\"default: 参数单元的默认值\",\"alias: 参数单元默认值的别名\",\"completion: 参数单元的补全说明生成函数\",\"unmatch_tips: 参数单元的错误提示生成函数，其接收一个表示匹配失败的元素的参数\",\"missing_tips: 参数单元的缺失提示生成函数\"]},\"2631\":{\"h\":\"选项与子命令(Option & Subcommand)\",\"t\":[\"Option 和 Subcommand 可以传入一组 alias，如 Option(\\\"--foo|-F|--FOO|-f\\\")，Subcommand(\\\"foo\\\", alias=[\\\"F\\\"])\",\"传入别名后，选项与子命令会选择其中长度最长的作为其名称。若传入为 \\\"--foo|-f\\\"，则命令名称为 \\\"--foo\\\"\",\"特别提醒!!!\",\"Option 的名字或别名没有要求必须在前面写上 -\",\"Option 与 Subcommand 的唯一区别在于 Subcommand 可以传入自己的 Option 与 Subcommand\",\"他们拥有如下共同参数：\",\"help_text: 传入该组件的帮助信息\",\"dest: 被指定为解析完成时标注匹配结果的标识符，不传入时默认为选项或子命令的名称 (name)\",\"requires: 一段指定顺序的字符串列表，作为唯一的前置序列与命令嵌套替换 对于命令 test foo bar baz qux <a:int> 来讲，因为foo bar baz 仅需要判断是否相等, 所以可以这么编写：\",\"Alconna(\\\"test\\\", Option(\\\"qux\\\", Args.a[int], requires=[\\\"foo\\\", \\\"bar\\\", \\\"baz\\\"]))\",\"default: 默认值，在该组件未被解析时使用使用该值替换。 特别的，使用 OptionResult 或 SubcomanndResult 可以设置包括参数字典在内的默认值：\",\"from arclet.alconna import Option, OptionResult opt1 = Option(\\\"--foo\\\", default=False) opt2 = Option(\\\"--foo\\\", default=OptionResult(value=False, args={\\\"bar\\\": 1}))\"]},\"2632\":{\"h\":\"Action\",\"t\":[\"Option 可以特别设置传入一类 Action，作为解析操作\",\"Action 分为三类：\",\"store: 无 Args 时， 仅存储一个值， 默认为 Ellipsis； 有 Args 时， 后续的解析结果会覆盖之前的值\",\"append: 无 Args 时， 将多个值存为列表， 默认为 Ellipsis； 有 Args 时， 每个解析结果会追加到列表中, 当存在默认值并且不为列表时， 会自动将默认值变成列表， 以保证追加的正确性\",\"count: 无 Args 时， 计数器加一； 有 Args 时， 表现与 STORE 相同, 当存在默认值并且不为数字时， 会自动将默认值变成 1， 以保证计数器的正确性。\",\"Alconna 提供了预制的几类 Action：\",\"store(默认)，store_value，store_true，store_false\",\"append，append_value\",\"count\"]},\"2633\":{\"h\":\"解析结果(Arparma)\",\"t\":[\"Alconna.parse 会返回由 Arparma 承载的解析结果\",\"Arparma 有如下属性：\",\"调试类\",\"matched: 是否匹配成功\",\"error_data: 解析失败时剩余的数据\",\"error_info: 解析失败时的异常内容\",\"origin: 原始命令，可以类型标注\",\"分析类\",\"header_match: 命令头部的解析结果，包括原始头部、解析后头部、解析结果与可能的正则匹配组\",\"main_args: 命令的主参数的解析结果\",\"options: 命令所有选项的解析结果\",\"subcommands: 命令所有子命令的解析结果\",\"other_args: 除主参数外的其他解析结果\",\"all_matched_args: 所有 Args 的解析结果\",\"Arparma 同时提供了便捷的查询方法 query[type]()，会根据传入的 path 查找参数并返回\",\"path 支持如下:\",\"main_args, options, ...: 返回对应的属性\",\"args: 返回 all_matched_args\",\"main_args.xxx, options.xxx, ...: 返回字典中 xxx键对应的值\",\"args.xxx: 返回 all_matched_args 中 xxx键对应的值\",\"options.foo, foo: 返回选项 foo 的解析结果 (OptionResult)\",\"options.foo.value, foo.value: 返回选项 foo 的解析值\",\"options.foo.args, foo.args: 返回选项 foo 的解析参数字典\",\"options.foo.args.bar, foo.bar: 返回选项 foo 的参数字典中 bar 键对应的值 ...\"]},\"2634\":{\"h\":\"元数据(CommandMeta)\",\"t\":[\"Alconna 的元数据相当于其配置，拥有以下条目：\",\"description: 命令的描述\",\"usage: 命令的用法\",\"example: 命令的使用样例\",\"author: 命令的作者\",\"fuzzy_match: 命令是否开启模糊匹配\",\"fuzzy_threshold: 模糊匹配阈值\",\"raise_exception: 命令是否抛出异常\",\"hide: 命令是否对 manager 隐藏\",\"hide_shortcut: 命令的快捷指令是否在 help 信息中隐藏\",\"keep_crlf: 命令解析时是否保留换行字符\",\"compact: 命令是否允许第一个参数紧随头部\",\"strict: 命令是否严格匹配，若为 False 则未知参数将作为名为 $extra 的参数\",\"context_style: 命令上下文插值的风格，None 为关闭，bracket 为 {...}，parentheses 为 $(...)\",\"extra: 命令的自定义额外信息\",\"元数据一定使用 meta=... 形式传入：\",\"from arclet.alconna import Alconna, CommandMeta alc = Alconna(..., meta=CommandMeta(\\\"foo\\\", example=\\\"bar\\\"))\"]},\"2635\":{\"h\":\"命名空间配置\",\"t\":[\"命名空间配置 （以下简称命名空间） 相当于 Alconna 的默认配置，其优先度低于 CommandMeta。\",\"Alconna 默认使用 \\\"Alconna\\\" 命名空间。\",\"命名空间有以下几个属性：\",\"name: 命名空间名称\",\"prefixes: 默认前缀配置\",\"separators: 默认分隔符配置\",\"formatter_type: 默认格式化器类型\",\"fuzzy_match: 默认是否开启模糊匹配\",\"raise_exception: 默认是否抛出异常\",\"builtin_option_name: 默认的内置选项名称(--help, --shortcut, --comp)\",\"disable_builtin_options: 默认禁用的内置选项(--help, --shortcut, --comp)\",\"enable_message_cache: 默认是否启用消息缓存\",\"compact: 默认是否开启紧凑模式\",\"strict: 命令是否严格匹配\",\"context_style: 命令上下文插值的风格\",\"...\"]},\"2636\":{\"h\":\"新建命名空间并替换\",\"t\":[\"from arclet.alconna import Alconna, namespace, Namespace, Subcommand, Args, config ns = Namespace(\\\"foo\\\", prefixes=[\\\"/\\\"]) # 创建 \\\"foo\\\"命名空间配置, 它要求创建的Alconna的主命令前缀必须是/ alc = Alconna(\\\"pip\\\", Subcommand(\\\"install\\\", Args[\\\"package\\\", str]), namespace=ns) # 在创建Alconna时候传入命名空间以替换默认命名空间 # 可以通过with方式创建命名空间 with namespace(\\\"bar\\\") as np1: np1.prefixes = [\\\"!\\\"] # 以上下文管理器方式配置命名空间，此时配置会自动注入上下文内创建的命令 np1.formatter_type = ShellTextFormatter # 设置此命名空间下的命令的 formatter 默认为 ShellTextFormatter np1.builtin_option_name[\\\"help\\\"] = {\\\"帮助\\\", \\\"-h\\\"} # 设置此命名空间下的命令的帮助选项名称 # 你还可以使用config来管理所有命名空间并切换至任意命名空间 config.namespaces[\\\"foo\\\"] = ns # 将命名空间挂载到 config 上 alc = Alconna(\\\"pip\\\", Subcommand(\\\"install\\\", Args[\\\"package\\\", str]), namespace=config.namespaces[\\\"foo\\\"]) # 也是同样可以切换到\\\"foo\\\"命名空间\"]},\"2637\":{\"h\":\"修改默认的命名空间\",\"t\":[\"from arclet.alconna import config, namespace, Namespace config.default_namespace.prefixes = [...] # 直接修改默认配置 np = Namespace(\\\"xxx\\\", prefixes=[...]) config.default_namespace = np # 更换默认的命名空间 with namespace(config.default_namespace.name) as np: np.prefixes = [...]\"]},\"2638\":{\"h\":\"快捷指令\",\"t\":[\"快捷命令可以做到标识一段命令, 并且传递参数给原命令\",\"一般情况下你可以通过 Alconna.shortcut 进行快捷指令操作 (创建，删除)\",\"shortcut 的第一个参数为快捷指令名称，第二个参数为 ShortcutArgs，作为快捷指令的配置：\",\"class ShortcutArgs(TypedDict): \\\"\\\"\\\"快捷指令参数\\\"\\\"\\\" command: NotRequired[str] \\\"\\\"\\\"快捷指令的命令\\\"\\\"\\\" args: NotRequired[list[Any]] \\\"\\\"\\\"快捷指令的附带参数\\\"\\\"\\\" fuzzy: NotRequired[bool] \\\"\\\"\\\"是否允许命令后随参数\\\"\\\"\\\" prefix: NotRequired[bool] \\\"\\\"\\\"是否调用时保留指令前缀\\\"\\\"\\\" wrapper: NotRequired[ShortcutRegWrapper] \\\"\\\"\\\"快捷指令的正则匹配结果的额外处理函数\\\"\\\"\\\" humanized: NotRequired[str] \\\"\\\"\\\"快捷指令的人类可读描述\\\"\\\"\\\"\"]},\"2639\":{\"h\":\"args的使用\",\"t\":[\"from arclet.alconna import Alconna, Args alc = Alconna(\\\"setu\\\", Args[\\\"count\\\", int]) alc.shortcut(\\\"涩图(\\\\d+)张\\\", {\\\"args\\\": [\\\"{0}\\\"]}) # 'Alconna::setu 的快捷指令: \\\"涩图(\\\\\\\\d+)张\\\" 添加成功' alc.parse(\\\"涩图3张\\\").query(\\\"count\\\") # 3\"]},\"2640\":{\"h\":\"command的使用\",\"t\":[\"from arclet.alconna import Alconna, Args alc = Alconna(\\\"eval\\\", Args[\\\"content\\\", str]) alc.shortcut(\\\"echo\\\", {\\\"command\\\": \\\"eval print(\\\\\\\\'{*}\\\\\\\\')\\\"}) # 'Alconna::eval 的快捷指令: \\\"echo\\\" 添加成功' alc.shortcut(\\\"echo\\\", delete=True) # 删除快捷指令 # 'Alconna::eval 的快捷指令: \\\"echo\\\" 删除成功' @alc.bind() # 绑定一个命令执行器, 若匹配成功则会传入参数, 自动执行命令执行器 def cb(content: str): eval(content, {}, {}) alc.parse('eval print(\\\\\\\\\\\"hello world\\\\\\\\\\\")') # hello world alc.parse(\\\"echo hello world!\\\") # hello world!\",\"当 fuzzy 为 False 时，第一个例子中传入 \\\"涩图1张 abc\\\" 之类的快捷指令将视为解析失败\",\"快捷指令允许三类特殊的 placeholder：\",\"{%X}: 如 setu {%0}，表示此处填入快捷指令后随的第 X 个参数。\",\"例如，若快捷指令为 涩图, 配置为 {\\\"command\\\": \\\"setu {%0}\\\"}, 则指令 涩图 1 相当于 setu 1\",\"{*}: 表示此处填入所有后随参数，并且可以通过 {*X} 的方式指定组合参数之间的分隔符。\",\"{X}: 表示此处填入可能的正则匹配的组：\",\"若 command 中存在匹配组 (xxx)，则 {X} 表示第 X 个匹配组的内容\",\"若 command 中存储匹配组 (?P<xxx>...), 则 {X} 表示 名字 为 X 的匹配结果\",\"除此之外, 通过 Alconna 内置选项 --shortcut 可以动态操作快捷指令\",\"例如：\",\"cmd --shortcut <key> <cmd> 来增加一个快捷指令\",\"cmd --shortcut list 来列出当前指令的所有快捷指令\",\"cmd --shortcut delete key 来删除一个快捷指令\",\"from arclet.alconna import Alconna, Args alc = Alconna(\\\"eval\\\", Args[\\\"content\\\", str]) alc.shortcut(\\\"echo\\\", {\\\"command\\\": \\\"eval print(\\\\\\\\'{*}\\\\\\\\')\\\"}) alc.parse(\\\"eval --shortcut list\\\") # 'echo'\"]},\"2641\":{\"h\":\"紧凑命令\",\"t\":[\"Alconna, Option 与 Subcommand 可以设置 compact=True 使得解析命令时允许名称与后随参数之间没有分隔：\",\"from arclet.alconna import Alconna, Option, CommandMeta, Args alc = Alconna(\\\"test\\\", Args[\\\"foo\\\", int], Option(\\\"BAR\\\", Args[\\\"baz\\\", str], compact=True), meta=CommandMeta(compact=True)) assert alc.parse(\\\"test123 BARabc\\\").matched\",\"这使得我们可以实现如下命令：\",\"from arclet.alconna import Alconna, Option, Args, append alc = Alconna(\\\"gcc\\\", Option(\\\"--flag|-F\\\", Args[\\\"content\\\", str], action=append, compact=True)) print(alc.parse(\\\"gcc -Fabc -Fdef -Fxyz\\\").query[list](\\\"flag.content\\\")) # ['abc', 'def', 'xyz']\",\"当 Option 的 action 为 count 时，其自动支持 compact 特性：\",\"from arclet.alconna import Alconna, Option, count alc = Alconna(\\\"pp\\\", Option(\\\"--verbose|-v\\\", action=count, default=0)) print(alc.parse(\\\"pp -vvv\\\").query[int](\\\"verbose.value\\\")) # 3\"]},\"2642\":{\"h\":\"模糊匹配\",\"t\":[\"模糊匹配会应用在任意需要进行名称判断的地方，如 命令名称，选项名称 和 参数名称 (如指定需要传入参数名称)。\",\"from arclet.alconna import Alconna, CommandMeta alc = Alconna(\\\"test_fuzzy\\\", meta=CommandMeta(fuzzy_match=True)) alc.parse(\\\"test_fuzy\\\") # test_fuzy is not matched. Do you mean \\\"test_fuzzy\\\"?\"]},\"2643\":{\"h\":\"半自动补全\",\"t\":[\"半自动补全为用户提供了推荐后续输入的功能\",\"补全默认通过 --comp 或 -cp 或 ? 触发：（命名空间配置可修改名称）\",\"from arclet.alconna import Alconna, Args, Option alc = Alconna(\\\"test\\\", Args[\\\"abc\\\", int]) + Option(\\\"foo\\\") + Option(\\\"bar\\\") alc.parse(\\\"test --comp\\\") ''' output 以下是建议的输入： * <abc: int> * --help * -h * -sct * --shortcut * foo * bar '''\"]},\"2644\":{\"h\":\"Duplication\",\"t\":[\"Duplication 用来提供更好的自动补全，类似于 ArgParse 的 Namespace\",\"普通情况下使用，需要利用到 ArgsStub、OptionStub 和 SubcommandStub 三个部分\",\"以pip为例，其对应的 Duplication 应如下构造:\",\"from arclet.alconna import Alconna, Args, Option, OptionResult, Duplication, SubcommandStub, Subcommand, count class MyDup(Duplication): verbose: OptionResult install: SubcommandStub alc = Alconna( \\\"pip\\\", Subcommand( \\\"install\\\", Args[\\\"package\\\", str], Option(\\\"-r|--requirement\\\", Args[\\\"file\\\", str]), Option(\\\"-i|--index-url\\\", Args[\\\"url\\\", str]), ), Option(\\\"-v|--version\\\"), Option(\\\"-v|--verbose\\\", action=count), ) res = alc.parse(\\\"pip -v install ...\\\") # 不使用duplication获得的提示较少 print(res.query(\\\"install\\\")) # (value=Ellipsis args={'package': '...'} options={} subcommands={}) result = alc.parse(\\\"pip -v install ...\\\", duplication=MyDup) print(result.install) # SubcommandStub(_origin=Subcommand('install', args=Args('package': str)), _value=Ellipsis, available=True, args=ArgsStub(_origin=Args('package': str), _value={'package': '...'}, available=True), dest='install', options=[OptionStub(_origin=Option('requirement', args=Args('file': str)), _value=None, available=False, args=ArgsStub(_origin=Args('file': str), _value={}, available=False), dest='requirement', aliases=['r', 'requirement'], name='requirement'), OptionStub(_origin=Option('index-url', args=Args('url': str)), _value=None, available=False, args=ArgsStub(_origin=Args('url': str), _value={}, available=False), dest='index-url', aliases=['index-url', 'i'], name='index-url')], subcommands=[], name='install')\",\"Duplication 也可以如 Namespace 一样直接标明参数名称和类型：\",\"from typing import Optional from arclet.alconna import Duplication class MyDup(Duplication): package: str file: Optional[str] = None url: Optional[str] = None\"]},\"2645\":{\"h\":\"上下文插值\",\"t\":[\"当 context_style 条目被设置后，传入的命令中符合上下文插值的字段会被自动替换成当前上下文中的信息。\",\"上下文可以在 parse 中传入：\",\"from arclet.alconna import Alconna, Args, CommandMeta alc = Alconna(\\\"test\\\", Args[\\\"foo\\\", int], meta=CommandMeta(context_style=\\\"parentheses\\\")) alc.parse(\\\"test $(bar)\\\", {\\\"bar\\\": 123}) # {\\\"foo\\\": 123}\",\"context_style 的值分两种：\",\"\\\"bracket\\\": 插值格式为 {...}，例如 {foo}\",\"\\\"parentheses\\\": 插值格式为 $(...)，例如 $(bar)\"]},\"2646\":{\"h\":\"配置项\"},\"2647\":{\"h\":\"alconna_auto_send_output\",\"t\":[\"类型: bool\",\"默认值: False\",\"是否全局启用输出信息自动发送，不启用则会在触发特殊内置选项后仍然将解析结果传递至响应器。\"]},\"2648\":{\"h\":\"alconna_use_command_start\",\"t\":[\"类型: bool\",\"默认值: False\",\"是否读取 Nonebot 的配置项 COMMAND_START 来作为全局的 Alconna 命令前缀\"]},\"2649\":{\"h\":\"alconna_auto_completion\",\"t\":[\"类型: bool\",\"默认值: False\",\"是否全局启用命令自动补全，启用后会在参数缺失或触发 --comp 选项时自自动启用交互式补全。\"]},\"2650\":{\"h\":\"alconna_use_origin\",\"t\":[\"类型: bool\",\"默认值: False\",\"是否全局使用原始消息 (即未经过 to_me 等处理的)，该选项会影响到 Alconna 的匹配行为。\"]},\"2651\":{\"h\":\"alconna_use_command_sep\",\"t\":[\"类型: bool\",\"默认值: False\",\"是否读取 Nonebot 的配置项 COMMAND_SEP 来作为全局的 Alconna 命令分隔符。\"]},\"2652\":{\"h\":\"alconna_global_extensions\",\"t\":[\"类型: List[str]\",\"默认值: []\",\"全局加载的扩展，路径以 . 分隔，如 foo.bar.baz:DemoExtension。\"]},\"2653\":{\"h\":\"alconna_context_style\",\"t\":[\"类型: Optional[Literal[\\\"bracket\\\", \\\"parentheses\\\"]]\",\"默认值: None\",\"全局命令上下文插值的风格，None 为关闭，bracket 为 {...}，parentheses 为 $(...)。\"]},\"2654\":{\"h\":\"alconna_enable_saa_patch\",\"t\":[\"类型: bool\",\"默认值: False\",\"是否启用 SAA 补丁。\"]},\"2655\":{\"h\":\"alconna_apply_filehost\",\"t\":[\"类型: bool\",\"默认值: False\",\"是否启用文件托管。\"]},\"2656\":{\"h\":\"alconna_apply_fetch_targets\",\"t\":[\"类型: bool\",\"默认值: False\",\"是否启动时拉取一次发送对象列表。\"]},\"2657\":{\"h\":\"用户指南\",\"t\":[\"nonebot-plugin-orm 功能强大且复杂，使用上有一定难度。 不过，对于用户而言，只需要掌握部分功能即可。\",\"注意\",\"请注意区分插件的项目名（如：nonebot-plugin-wordcloud）和模块名（如：nonebot_plugin_wordcloud）。nonebot-plugin-orm 中统一使用插件模块名。参见 插件命名规范。\"]},\"2658\":{\"h\":\"示例\"},\"2659\":{\"h\":\"创建新机器人\",\"t\":[\"我们想要创建一个机器人，并安装 nonebot-plugin-wordcloud 插件，只需要执行以下命令：\",\"nb init # 初始化项目文件夹 pip install nonebot-plugin-orm[sqlite] # 安装 nonebot-plugin-orm，并附带 SQLite 支持 nb plugin install nonebot-plugin-wordcloud # 安装插件 # nb orm heads # 查看有什么插件使用到了数据库（可选） nb orm upgrade # 升级数据库 # nb orm check # 检查一下数据库模式是否与模型定义一致（可选） nb run # 启动机器人\"]},\"2660\":{\"h\":\"卸载插件\",\"t\":[\"我们已经安装了 nonebot-plugin-wordcloud 插件，但是现在想要卸载它，并且删除它的数据，只需要执行以下命令：\",\"nb plugin uninstall nonebot-plugin-wordcloud # 卸载插件 # nb orm heads # 查看有什么插件使用到了数据库。（可选） nb orm downgrade nonebot_plugin_wordcloud@base # 降级数据库，删除数据 # nb orm check # 检查一下数据库模式是否与模型定义一致（可选）\"]},\"2661\":{\"h\":\"CLI\",\"t\":[\"接下来，让我们了解下示例中出现的 CLI 命令的含义：\"]},\"2662\":{\"h\":\"heads\",\"t\":[\"显示所有的分支头。一般一个分支对应一个插件。\",\"nb orm heads\",\"输出格式为 <迁移 ID> (<插件模块名>) (<头部类型>)：\",\"46327b837dd8 (nonebot_plugin_chatrecorder) (head) 9492159f98f7 (nonebot_plugin_user) (head) 71a72119935f (nonebot_plugin_session_orm) (effective head) ade8cdca5470 (nonebot_plugin_wordcloud) (head)\"]},\"2663\":{\"h\":\"upgrade\",\"t\":[\"升级数据库。每次安装新的插件或更新插件版本后，都需要执行此命令。\",\"nb orm upgrade <插件模块名>@<迁移 ID>\",\"其中，<插件模块名>@<迁移 ID> 是可选参数。如果不指定，则会将所有分支升级到最新版本，这也是最常见的用法：\",\"nb orm upgrade\"]},\"2664\":{\"h\":\"downgrade\",\"t\":[\"降级数据库。当需要回滚插件版本或删除插件时，可以执行此命令。\",\"nb orm downgrade <插件模块名>@<迁移 ID>\",\"其中，<迁移 ID> 也可以是 base，即回滚到初始状态。常用于卸载插件后删除其数据：\",\"nb orm downgrade <插件模块名>@base\"]},\"2665\":{\"h\":\"check\",\"t\":[\"检查数据库模式是否与模型定义一致。机器人启动前会自动运行此命令（ALEMBIC_STARTUP_CHECK=true 时），并在检查失败时阻止启动。\",\"nb orm check\"]},\"2666\":{\"h\":\"配置\"},\"2667\":{\"h\":\"sqlalchemy_database_url\",\"t\":[\"默认数据库连接 URL。参见 数据库驱动和后端 和 引擎配置 — SQLAlchemy 2.0 文档。\",\"SQLALCHEMY_DATABASE_URL=dialect+driver://username:password@host:port/database\"]},\"2668\":{\"h\":\"sqlalchemy_bind\",\"t\":[\"bind keys（一般为插件模块名）到数据库连接 URL、create_async_engine() 参数字典或 AsyncEngine 实例的字典。 例如，我们想要让 nonebot-plugin-wordcloud 插件使用一个 SQLite 数据库，并开启 Echo 选项 便于 debug，而其他插件使用默认的 PostgreSQL 数据库，可以这样配置：\",\"SQLALCHEMY_BINDS='{ \\\"\\\": \\\"postgresql+psycopg://scott:tiger@localhost/mydatabase\\\", \\\"nonebot_plugin_wordcloud\\\": { \\\"url\\\": \\\"sqlite+aiosqlite://\\\", \\\"echo\\\": true } }'\"]},\"2669\":{\"h\":\"sqlalchemy_engine_options\",\"t\":[\"create_async_engine() 默认参数字典。\",\"SQLALCHEMY_ENGINE_OPTIONS='{ \\\"pool_size\\\": 5, \\\"max_overflow\\\": 10, \\\"pool_timeout\\\": 30, \\\"pool_recycle\\\": 3600, \\\"echo\\\": true }'\"]},\"2670\":{\"h\":\"sqlalchemy_echo\",\"t\":[\"开启 Echo 选项 和 Echo Pool 选项 便于 debug。\",\"SQLALCHEMY_ECHO=true\",\"注意\",\"以上配置之间有覆盖关系，遵循特殊优先于一般的原则，具体为 sqlalchemy_database_url > sqlalchemy_bind > sqlalchemy_echo > sqlalchemy_engine_options。 但覆盖顺序并非显而易见，出于清晰考虑，请只配置必要的选项。\"]},\"2671\":{\"h\":\"模拟网络通信\",\"t\":[\"NoneBot 驱动器提供了多种方法来帮助适配器进行网络通信，主要包括客户端和服务端两种类型。模拟网络通信可以帮助我们更加接近实际机器人应用场景，进行更加真实的集成测试。同时，通过这种途径，我们还可以完成对适配器的测试。\",\"NoneBot 中的网络通信主要包括以下几种：\",\"HTTP 服务端（WebHook）\",\"WebSocket 服务端\",\"HTTP 客户端\",\"WebSocket 客户端\",\"下面我们将分别介绍如何使用 NoneBug 来模拟这几种通信方式。\"]},\"2672\":{\"h\":\"测试 HTTP 服务端\",\"t\":[\"当 NoneBot 作为 ASGI 服务端应用时，我们可以定义一系列的路由来处理 HTTP 请求，适配器同样也可以通过定义路由来响应机器人相关的网络通信。下面假设我们使用了一个适配器 fake ，它定义了一个路由 /fake/http ，用于接收平台 WebHook 并处理。实际应用测试时，应将该路由地址替换为真实适配器注册的路由地址。\",\"我们首先需要获取测试用模拟客户端：\",\"from nonebug import App @pytest.mark.asyncio async def test_http_server(app: App): async with app.test_server() as ctx: client = ctx.get_client()\",\"默认情况下，app.test_server() 会通过 nonebot.get_asgi 获取测试对象，我们也可以通过参数指定 ASGI 应用：\",\"async with app.test_server(asgi=asgi_app) as ctx: ...\",\"获取到模拟客户端后，即可像 requests、httpx 等库类似的方法进行使用：\",\"import nonebot from nonebug import App from nonebot.adapters.fake import Adapter @pytest.mark.asyncio async def test_http_server(app: App): adapter = nonebot.get_adapter(Adapter) async with app.test_server() as ctx: client = ctx.get_client() response = await client.post(\\\"/fake/http\\\", json={\\\"bot_id\\\": \\\"fake\\\"}) assert response.status_code == 200 assert response.json() == {\\\"status\\\": \\\"success\\\"} assert \\\"fake\\\" in nonebot.get_bots() adapter.bot_disconnect(nonebot.get_bot(\\\"fake\\\"))\",\"在上面的测试中，我们向 /fake/http 发送了一个模拟 POST 请求，适配器将会对该请求进行处理，我们可以通过检查请求返回是否正确、Bot 对象是否创建等途径来验证机器人是否正确运行。在完成测试后，我们通常需要对 Bot 对象进行清理，以避免对其他测试产生影响。\"]},\"2673\":{\"h\":\"测试 WebSocket 服务端\",\"t\":[\"当 NoneBot 作为 ASGI 服务端应用时，我们还可以定义一系列的路由来处理 WebSocket 通信。下面假设我们使用了一个适配器 fake ，它定义了一个路由 /fake/ws ，用于处理平台 WebSocket 连接信息。实际应用测试时，应将该路由地址替换为真实适配器注册的路由地址。\",\"我们同样需要通过 app.test_server() 获取测试用模拟客户端，这里就不再赘述。在获取到模拟客户端后，我们可以通过 client.websocket_connect 方法来模拟 WebSocket 连接：\",\"import nonebot from nonebug import App from nonebot.adapters.fake import Adapter @pytest.mark.asyncio async def test_ws_server(app: App): adapter = nonebot.get_adapter(Adapter) async with app.test_server() as ctx: client = ctx.get_client() async with client.websocket_connect(\\\"/fake/ws\\\") as ws: await ws.send_json({\\\"bot_id\\\": \\\"fake\\\"}) response = await ws.receive_json() assert response == {\\\"status\\\": \\\"success\\\"} assert \\\"fake\\\" in nonebot.get_bots()\",\"在上面的测试中，我们向 /fake/ws 进行了 WebSocket 模拟通信，通过发送消息与机器人进行交互，然后检查机器人发送的信息是否正确。\"]},\"2674\":{\"h\":\"测试 HTTP 客户端\",\"t\":[\"暂不支持\"]},\"2675\":{\"h\":\"测试 WebSocket 客户端\",\"t\":[\"暂不支持\"]},\"2676\":{\"h\":\"开发者指南\",\"t\":[\"开发者指南内容较多，故分为了一个示例以及数个专题。 阅读（并且最好跟随实践）示例后，你将会对使用 nonebot-plugin-orm 开发插件有一个基本的认识。 如果想要更深入地学习关于 SQLAlchemy 和 Alembic 的知识，或者在使用过程中遇到了问题，可以查阅专题以及其官方文档。\"]},\"2677\":{\"h\":\"示例\"},\"2678\":{\"h\":\"模型定义\",\"t\":[\"首先，我们需要设计存储的数据的结构。 例如天气插件，需要存储什么地方 (location) 的天气是什么 (weather)。 其中，一个地方只会有一种天气，而不同地方可能有相同的天气。 所以，我们可以设计出如下的模型：\",\"from nonebot_plugin_orm import Model from sqlalchemy.orm import Mapped, mapped_column class Weather(Model): location: Mapped[str] = mapped_column(primary_key=True) weather: Mapped[str]\",\"其中，primary_key=True 意味着此列 (location) 是主键，即内容是唯一的且非空的。 每一个模型必须有至少一个主键。\",\"我们可以用以下代码检查模型生成的数据库模式是否正确：\",\"from sqlalchemy.schema import CreateTable print(CreateTable(Weather.__table__))\",\"CREATE TABLE weather_weather ( location VARCHAR NOT NULL, weather VARCHAR NOT NULL, CONSTRAINT pk_weather_weather PRIMARY KEY (location) )\",\"可以注意到表名是 weather_weather 而不是 Weather 或者 weather。 这是因为 nonebot-plugin-orm 会自动为模型生成一个表名，规则是：<插件模块名>_<类名小写>。\",\"你也可以通过指定 __tablename__ 属性来自定义表名：\",\"class Weather(Model): __tablename__ = \\\"weather\\\" ...\",\"CREATE TABLE weather ( ... )\",\"但是，并不推荐你这么做，因为这可能会导致不同插件间的表名重复，引发冲突。 特别是当你会发布插件时，你并不知道其他插件会不会使用相同的表名。\"]},\"2679\":{\"h\":\"首次迁移\",\"t\":[\"我们成功定义了模型，现在启动机器人试试吧：\",\"$ nb run 01-02 15:04:05 [SUCCESS] nonebot | NoneBot is initializing... 01-02 15:04:05 [ERROR] nonebot_plugin_orm | 启动检查失败 01-02 15:04:05 [ERROR] nonebot | Application startup failed. Exiting. Traceback (most recent call last): ... click.exceptions.UsageError: 检测到新的升级操作: [('add_table', Table('weather', MetaData(), Column('location', String(), table=<weather>, primary_key=True, nullable=False), Column('weather', String(), table=<weather>, nullable=False), schema=None))]\",\"咦，发生了什么？nonebot-plugin-orm 试图阻止我们启动机器人。 原来是我们定义了模型，但是数据库中并没有对应的表，这会导致插件不能正常运行。 所以，我们需要迁移数据库。\",\"首先，我们需要创建一个迁移脚本：\",\"nb orm revision -m \\\"first revision\\\" --branch-label weather\",\"其中，-m 参数是迁移脚本的描述，--branch-label 参数是迁移脚本的分支，一般为插件模块名。 执行命令过后，出现了一个 weather/migrations 目录，其中有一个 xxxxxxxxxxxx_first_revision.py 文件：\",\"weather ├── __init__.py ├── config.py └── migrations └── xxxxxxxxxxxx_first_revision.py\",\"这就是我们创建的迁移脚本，它记录了数据库模式的变化。 我们可以查看一下它的内容：\",\"\\\"\\\"\\\"first revision 迁移 ID: xxxxxxxxxxxx 父迁移: 创建时间: 2006-01-02 15:04:05.999999 \\\"\\\"\\\" from __future__ import annotations from collections.abc import Sequence import sqlalchemy as sa from alembic import op revision: str = \\\"xxxxxxxxxxxx\\\" down_revision: str | Sequence[str] | None = None branch_labels: str | Sequence[str] | None = (\\\"weather\\\",) depends_on: str | Sequence[str] | None = None def upgrade(name: str = \\\"\\\") -> None: if name: return # ### commands auto generated by Alembic - please adjust! ### op.create_table( \\\"weather_weather\\\", sa.Column(\\\"location\\\", sa.String(), nullable=False), sa.Column(\\\"weather\\\", sa.String(), nullable=False), sa.PrimaryKeyConstraint(\\\"location\\\", name=op.f(\\\"pk_weather_weather\\\")), info={\\\"bind_key\\\": \\\"weather\\\"}, ) # ### end Alembic commands ### def downgrade(name: str = \\\"\\\") -> None: if name: return # ### commands auto generated by Alembic - please adjust! ### op.drop_table(\\\"weather_weather\\\") # ### end Alembic commands ###\",\"可以注意到脚本的主体部分（其余是模版代码，请勿修改）是：\",\"# ### commands auto generated by Alembic - please adjust! ### op.create_table( # CREATE TABLE \\\"weather_weather\\\", # weather_weather sa.Column(\\\"location\\\", sa.String(), nullable=False), # location VARCHAR NOT NULL, sa.Column(\\\"weather\\\", sa.String(), nullable=False), # weather VARCHAR NOT NULL, sa.PrimaryKeyConstraint(\\\"location\\\", name=op.f(\\\"pk_weather_weather\\\")), # CONSTRAINT pk_weather_weather PRIMARY KEY (location) info={\\\"bind_key\\\": \\\"weather\\\"}, ) # ### end Alembic commands ###\",\"# ### commands auto generated by Alembic - please adjust! ### op.drop_table(\\\"weather_weather\\\") # DROP TABLE weather_weather; # ### end Alembic commands ###\",\"虽然我们不是很懂这些代码的意思，但是可以注意到它们几乎与 SQL 语句 (DDL) 一一对应。 显然，它们是用来创建和删除表的。\",\"我们还可以注意到，upgrade() 和 downgrade() 函数中的代码是互逆的。 也就是说，执行一次 upgrade() 函数，再执行一次 downgrade() 函数后，数据库的模式就会回到原来的状态。\",\"这就是迁移脚本的作用：记录数据库模式的变化，以便我们在不同的环境中（例如开发环境和生产环境）可复现地、可逆地同步数据库模式，正如 git 对我们的代码做的事情那样。\",\"对了，不要忘记还有一段注释：commands auto generated by Alembic - please adjust!。 它在提醒我们，这些代码是由 Alembic 自动生成的，我们应该检查它们，并且根据需要进行调整。\",\"注意\",\"迁移脚本冗长且繁琐，我们一般不会手写它们，而是由 Alembic 自动生成。 一般情况下，Alembic 足够智能，可以正确地生成迁移脚本。 但是，在复杂或有歧义的情况下，我们可能需要手动调整迁移脚本。 所以，永远要检查迁移脚本，并且在开发环境中测试！\",\"迁移脚本中任何一处错误都足以使数据付之东流！\",\"确定迁移脚本正确后，我们就可以执行迁移脚本，将数据库模式同步到数据库中：\",\"nb orm upgrade\",\"现在，我们可以正常启动机器人了。\",\"开发过程中，我们可能会频繁地修改模型，这意味着我们需要频繁地创建并执行迁移脚本，非常繁琐。 实际上，此时我们不在乎数据安全，只需要数据库模式与模型定义一致即可。 所以，我们可以关闭 nonebot-plugin-orm 的启动检查：\",\"ALEMBIC_STARTUP_CHECK=false\",\"现在，每次启动机器人时，数据库模式会自动与模型定义同步，无需手动迁移。\"]},\"2680\":{\"h\":\"会话管理\",\"t\":[\"我们已经成功定义了模型，并且迁移了数据库，现在可以开始使用数据库了……吗？ 并不能，因为模型只是数据结构的定义，并不能通过它操作数据（如果你曾经使用过 Tortoise ORM，可能会知道 await Weather.get(location=\\\"上海\\\") 这样的面向对象编程。 但是 SQLAlchemy 不同，选择了命令式编程）。 我们需要使用会话操作数据：\",\"from nonebot import on_command from nonebot.adapters import Message from nonebot.params import CommandArg from nonebot_plugin_orm import async_scoped_session weather = on_command(\\\"天气\\\") @weather.handle() async def _(session: async_scoped_session, args: Message = CommandArg()): location = args.extract_plain_text() if wea := await session.get(Weather, location): await weather.finish(f\\\"今天{location}的天气是{wea.weather}\\\") await weather.finish(f\\\"未查询到{location}的天气\\\")\",\"我们通过 session: async_scoped_session 依赖注入获得了一个会话，然后使用 await session.get(Weather, location) 查询数据库。async_scoped_session 是一个有作用域限制的会话，作用域为当前事件、当前事件响应器。 会话产生的模型实例（例如此处的 wea := await session.get(Weather, location)）作用域与会话相同。\",\"注意\",\"此处提到的“会话”指的是 ORM 会话，而非 NoneBot 会话，两者的生命周期也是不同的（NoneBot 会话的生命周期中可能包含多个事件，不同的事件也会有不同的事件响应器）。 具体而言，就是不要将 ORM 会话和模型实例存储在 NoneBot 会话状态中：\",\"from nonebot.params import ArgPlainText from nonebot.typing import T_State @weather.got(\\\"location\\\", prompt=\\\"请输入地名\\\") async def _(state: T_State, session: async_scoped_session, location: str = ArgPlainText()): wea = await session.get(Weather, location) if not wea: await weather.finish(f\\\"未查询到{location}的天气\\\") state[\\\"weather\\\"] = wea # 不要这么做，除非你知道自己在做什么\",\"当然非要这么做也不是不可以：\",\"@weather.handle() async def _(state: T_State, session: async_scoped_session): # 通过 await session.merge(state[\\\"weather\\\"]) 获得了此 ORM 会话中的相应模型实例， # 而非直接使用会话状态中的模型实例， # 因为先前的 ORM 会话已经关闭了。 wea = await session.merge(state[\\\"weather\\\"]) await weather.finish(f\\\"今天{state['location']}的天气是{wea.weather}\\\")\",\"当有数据更改时，我们需要提交事务，也要注意会话作用域问题：\",\"from nonebot.params import Depends async def get_weather( session: async_scoped_session, args: Message = CommandArg() ) -> Weather: location = args.extract_plain_text() if not (wea := await session.get(Weather, location)): wea = Weather(location=location, weather=\\\"未知\\\") session.add(wea) # await session.commit() # 不应该在其他地方提交事务 return wea @weather.handle() async def _(session: async_scoped_session, wea: Weather = Depends(get_weather)): await weather.send(f\\\"今天的天气是{wea.weather}\\\") await session.commit() # 而应该在事件响应器结束前提交事务\",\"当然我们也可以获得一个新的会话，不过此时就要手动管理会话了：\",\"from nonebot_plugin_orm import get_session async def get_weather(location: str) -> str: session = get_session() async with session.begin(): wea = await session.get(Weather, location) if not wea: wea = Weather(location=location, weather=\\\"未知\\\") session.add(wea) return wea.weather @weather.handle() async def _(args: Message = CommandArg()): wea = await get_weather(args.extract_plain_text()) await weather.send(f\\\"今天的天气是{wea}\\\")\"]},\"2681\":{\"h\":\"依赖注入\",\"t\":[\"在上面的示例中，我们都是通过会话获得数据的。 不过，我们也可以通过依赖注入获得数据：\",\"from sqlalchemy import select from nonebot.params import Depends from nonebot_plugin_orm import SQLDepends def extract_arg_plain_text(args: Message = CommandArg()) -> str: return args.extract_plain_text() @weather.handle() async def _( wea: Weather = SQLDepends( select(Weather).where(Weather.location == Depends(extract_arg_plain_text)) ), ): await weather.send(f\\\"今天的天气是{wea.weather}\\\")\",\"其中，SQLDepends 是一个特殊的依赖注入，它会根据类型标注和 SQL 语句提供数据，SQL 语句中也可以有子依赖。\",\"不同的类型标注也会获得不同形式的数据：\",\"from collections.abc import Sequence @weather.handle() async def _( weas: Sequence[Weather] = SQLDepends( select(Weather).where(Weather.weather == Depends(extract_arg_plain_text)) ), ): await weather.send(f\\\"今天的天气是{weas[0].weather}的城市有{'，'.join(wea.location for wea in weas)}\\\")\",\"支持的类型标注请参见 依赖注入。\",\"我们也可以像 类作为依赖 那样，在类属性中声明子依赖：\",\"from collections.abc import Sequence class Weather(Model): location: Mapped[str] = mapped_column(primary_key=True) weather: Mapped[str] = Depends(extract_arg_plain_text) # weather: Annotated[Mapped[str], Depends(extract_arg_plain_text)] # Annotated 支持 @weather.handle() async def _(weas: Sequence[Weather]): await weather.send( f\\\"今天的天气是{weas[0].weather}的城市有{'，'.join(wea.location for wea in weas)}\\\" )\"]},\"2682\":{\"h\":\"依赖注入\",\"t\":[\"nonebot-plugin-orm 提供了强大且灵活的依赖注入，可以方便地帮助你获取数据库会话和查询数据。\"]},\"2683\":{\"h\":\"数据库会话\"},\"2684\":{\"h\":\"AsyncSession\",\"t\":[\"新数据库会话，常用于有独立的数据库操作逻辑的插件。\",\"from nonebot import on_message from nonebot.params import Depends from nonebot_plugin_orm import AsyncSession, Model, async_scoped_session from sqlalchemy.orm import Mapped, mapped_column message = on_message() class Message(Model): id: Mapped[int] = mapped_column(primary_key=True, autoincrement=True) async def get_message(session: AsyncSession) -> Message: # 等价于 session = get_session() async with session: msg = Message() session.add(msg) await session.commit() await session.refresh(msg) return msg @message.handle() async def _(session: async_scoped_session, msg: Message = Depends(get_message)): await session.rollback() # 无法回退 get_message() 中的更改 await message.send(str(msg.id)) # msg 被存储，msg.id 递增\"]},\"2685\":{\"h\":\"async_scoped_session\",\"t\":[\"数据库作用域会话，常用于事件响应器和有与响应逻辑相关的数据库操作逻辑的插件。\",\"from nonebot import on_message from nonebot.params import Depends from nonebot_plugin_orm import Model, async_scoped_session from sqlalchemy.orm import Mapped, mapped_column message = on_message() class Message(Model): id: Mapped[int] = mapped_column(primary_key=True, autoincrement=True) async def get_message(session: async_scoped_session) -> Message: # 等价于 session = get_scoped_session() msg = Message() session.add(msg) await session.flush() await session.refresh(msg) return msg @message.handle() async def _(session: async_scoped_session, msg: Message = Depends(get_message)): await session.rollback() # 可以回退 get_message() 中的更改 await message.send(str(msg.id)) # msg 没有被存储，msg.id 不变\"]},\"2686\":{\"h\":\"查询数据\"},\"2687\":{\"h\":\"Model\",\"t\":[\"支持类作为依赖。\",\"from typing import Annotated from nonebot.params import Depends from nonebot_plugin_orm import Model from sqlalchemy.orm import Mapped, mapped_column def get_id() -> int: ... class Message(Model): id: Annotated[Mapped[int], Depends(get_id)] = mapped_column( primary_key=True, autoincrement=True ) async def _(msg: Message): # 等价于 msg = ( # await (await session.stream(select(Message).where(Message.id == get_id()))) # .scalars() # .one_or_none() # ) ...\"]},\"2688\":{\"h\":\"SQLDepends\",\"t\":[\"参数为一个 SQL 语句，决定依赖注入的内容，SQL 语句中可以使用子依赖。\",\"from nonebot.params import Depends from nonebot_plugin_orm import Model, SQLDepends from sqlalchemy import select def get_id() -> int: ... async def _( model: Model = SQLDepends(select(Model).where(Model.id == Depends(get_id))), ): ...\",\"参数可以是任意 SQL 语句，但不建议使用 select 以外的语句，因为语句可能没有返回值（returning 除外），而且代码不清晰。\"]},\"2689\":{\"h\":\"类型标注\",\"t\":[\"类型标注决定依赖注入的数据结构，主要影响以下几个层面：\",\"迭代器（session.execute()）或异步迭代器（session.stream()）\",\"标量（session.execute().scalars()）或元组（session.execute()）\",\"一个（session.execute().one_or_none()，注意 None 时可能触发 重载）或全部（session.execute() / session.execute().all()）\",\"连续（session().execute()）或分块（session.execute().partitions()）\",\"具体如下（可以使用父类型作为类型标注）：\",\"async def _(rows_partitions: AsyncIterator[Sequence[Tuple[Model, ...]]]): # 等价于 rows_partitions = await (await session.stream(sql).partitions()) async for partition in rows_partitions: for row in partition: print(row[0], row[1], ...)\",\"async def _(model_partitions: AsyncIterator[Sequence[Model]]): # 等价于 model_partitions = await (await session.stream(sql).scalars().partitions()) async for partition in model_partitions: for model in partition: print(model)\",\"async def _(row_partitions: Iterator[Sequence[Tuple[Model, ...]]]): # 等价于 row_partitions = await session.execute(sql).partitions() for partition in rows_partitions: for row in partition: print(row[0], row[1], ...)\",\"async def _(model_partitions: Iterator[Sequence[Model]]): # 等价于 model_partitions = await (await session.execute(sql).scalars().partitions()) for partition in model_partitions: for model in partition: print(model)\",\"async def _(rows: sa_async.AsyncResult[Tuple[Model, ...]]): # 等价于 rows = await session.stream(sql) async for row in rows: print(row[0], row[1], ...)\",\"async def _(models: sa_async.AsyncScalarResult[Model]): # 等价于 models = await session.stream(sql).scalars() async for model in models: print(model)\",\"async def _(rows: sa.Result[Tuple[Model, ...]]): # 等价于 rows = await session.execute(sql) for row in rows: print(row[0], row[1], ...)\",\"async def _(models: sa.ScalarResult[Model]): # 等价于 models = await session.execute(sql).scalars() for model in models: print(model)\",\"async def _(rows: Sequence[Tuple[Model, ...]]): # 等价于 rows = await (await session.stream(sql).all()) for row in rows: print(row[0], row[1], ...)\",\"async def _(models: Sequence[Model]): # 等价于 models = await (await session.stream(sql).scalars().all()) for model in models: print(model)\",\"async def _(row: Tuple[Model, ...]): # 等价于 row = await (await session.stream(sql).one_or_none()) print(row[0], row[1], ...)\",\"async def _(model: Model): # 等价于 model = await (await session.stream(sql).scalars().one_or_none()) print(model)\"]},\"2690\":{\"h\":\"测试\",\"t\":[\"百思不如一试，测试是发现问题的最佳方式。\",\"不同的用户会有不同的配置，为了提高项目的兼容性，我们需要在不同数据库后端上测试。 手动进行大量的、重复的测试不可靠，也不现实，因此我们推荐使用 GitHub Actions 进行自动化测试：\",\"name: Test on: push: branches: - main jobs: test: runs-on: ubuntu-latest strategy: matrix: db: - sqlite+aiosqlite:///db.sqlite3 - postgresql+psycopg://postgres:postgres@localhost:5432/postgres - mysql+aiomysql://mysql:mysql@localhost:3306/mymysql fail-fast: false env: SQLALCHEMY_DATABASE_URL: ${{ matrix.db }} services: postgresql: image: ${{ startsWith(matrix.db, 'postgresql') && 'postgres' || '' }} env: POSTGRES_USER: postgres POSTGRES_PASSWORD: postgres POSTGRES_DB: postgres ports: - 5432:5432 mysql: image: ${{ startsWith(matrix.db, 'mysql') && 'mysql' || '' }} env: MYSQL_ROOT_PASSWORD: mysql MYSQL_USER: mysql MYSQL_PASSWORD: mysql MYSQL_DATABASE: mymysql ports: - 3306:3306 steps: - uses: actions/checkout@v4 - uses: actions/setup-python@v5 - name: Install dependencies run: pip install -r requirements.txt - name: Run migrations run: pipx run nb-cli orm upgrade - name: Run tests run: pytest\",\"如果项目还需要考虑跨平台和跨 Python 版本兼容，测试矩阵中还需要增加这两个维度。 但是，我们没必要在所有平台和 Python 版本上运行所有数据库的测试，因为很显然，PostgreSQL 和 MySQL 这类独立的数据库后端不会受平台和 Python 影响，而且 Github Actions 的非 Linux 平台不支持运行独立服务：\",\"Python 3.9\",\"Python 3.10\",\"Python 3.11\",\"Python 3.12\",\"Linux\",\"SQLite\",\"SQLite\",\"SQLite\",\"SQLite / PostgreSQL / MySQL\",\"Windows\",\"SQLite\",\"SQLite\",\"SQLite\",\"SQLite\",\"macOS\",\"SQLite\",\"SQLite\",\"SQLite\",\"SQLite\",\"name: Test on: push: branches: - main jobs: test: runs-on: ${{ matrix.os }} strategy: matrix: os: [ubuntu-latest, windows-latest, macos-latest] python-version: [\\\"3.9\\\", \\\"3.10\\\", \\\"3.11\\\", \\\"3.12\\\"] db: [\\\"sqlite+aiosqlite:///db.sqlite3\\\"] include: - os: ubuntu-latest python-version: \\\"3.12\\\" db: postgresql+psycopg://postgres:postgres@localhost:5432/postgres - os: ubuntu-latest python-version: \\\"3.12\\\" db: mysql+aiomysql://mysql:mysql@localhost:3306/mymysql fail-fast: false env: SQLALCHEMY_DATABASE_URL: ${{ matrix.db }} services: postgresql: image: ${{ startsWith(matrix.db, 'postgresql') && 'postgres' || '' }} env: POSTGRES_USER: postgres POSTGRES_PASSWORD: postgres POSTGRES_DB: postgres ports: - 5432:5432 mysql: image: ${{ startsWith(matrix.db, 'mysql') && 'mysql' || '' }} env: MYSQL_ROOT_PASSWORD: mysql MYSQL_USER: mysql MYSQL_PASSWORD: mysql MYSQL_DATABASE: mymysql ports: - 3306:3306 steps: - uses: actions/checkout@v4 - uses: actions/setup-python@v5 with: python-version: ${{ matrix.python-version }} - name: Install dependencies run: pip install -r requirements.txt - name: Run migrations run: pipx run nb-cli orm upgrade - name: Run tests run: pytest\"]},\"2691\":{\"h\":\"开发者指南\",\"t\":[\"开发者指南内容较多，故分为了一个示例以及数个专题。 阅读（并且最好跟随实践）示例后，你将会对使用 nonebot-plugin-orm 开发插件有一个基本的认识。 如果想要更深入地学习关于 SQLAlchemy 和 Alembic 的知识，或者在使用过程中遇到了问题，可以查阅专题以及其官方文档。\"]},\"2692\":{\"h\":\"示例\"},\"2693\":{\"h\":\"模型定义\",\"t\":[\"首先，我们需要设计存储的数据的结构。 例如天气插件，需要存储什么地方 (location) 的天气是什么 (weather)。 其中，一个地方只会有一种天气，而不同地方可能有相同的天气。 所以，我们可以设计出如下的模型：\",\"from nonebot_plugin_orm import Model from sqlalchemy.orm import Mapped, mapped_column class Weather(Model): location: Mapped[str] = mapped_column(primary_key=True) weather: Mapped[str]\",\"其中，primary_key=True 意味着此列 (location) 是主键，即内容是唯一的且非空的。 每一个模型必须有至少一个主键。\",\"我们可以用以下代码检查模型生成的数据库模式是否正确：\",\"from sqlalchemy.schema import CreateTable print(CreateTable(Weather.__table__))\",\"CREATE TABLE weather_weather ( location VARCHAR NOT NULL, weather VARCHAR NOT NULL, CONSTRAINT pk_weather_weather PRIMARY KEY (location) )\",\"可以注意到表名是 weather_weather 而不是 Weather 或者 weather。 这是因为 nonebot-plugin-orm 会自动为模型生成一个表名，规则是：<插件模块名>_<类名小写>。\",\"你也可以通过指定 __tablename__ 属性来自定义表名：\",\"class Weather(Model): __tablename__ = \\\"weather\\\" ...\",\"CREATE TABLE weather ( ... )\",\"但是，并不推荐你这么做，因为这可能会导致不同插件间的表名重复，引发冲突。 特别是当你会发布插件时，你并不知道其他插件会不会使用相同的表名。\"]},\"2694\":{\"h\":\"首次迁移\",\"t\":[\"我们成功定义了模型，现在启动机器人试试吧：\",\"$ nb run 01-02 15:04:05 [SUCCESS] nonebot | NoneBot is initializing... 01-02 15:04:05 [ERROR] nonebot_plugin_orm | 启动检查失败 01-02 15:04:05 [ERROR] nonebot | Application startup failed. Exiting. Traceback (most recent call last): ... click.exceptions.UsageError: 检测到新的升级操作: [('add_table', Table('weather', MetaData(), Column('location', String(), table=<weather>, primary_key=True, nullable=False), Column('weather', String(), table=<weather>, nullable=False), schema=None))]\",\"咦，发生了什么？nonebot-plugin-orm 试图阻止我们启动机器人。 原来是我们定义了模型，但是数据库中并没有对应的表，这会导致插件不能正常运行。 所以，我们需要迁移数据库。\",\"首先，我们需要创建一个迁移脚本：\",\"nb orm revision -m \\\"first revision\\\" --branch-label weather\",\"其中，-m 参数是迁移脚本的描述，--branch-label 参数是迁移脚本的分支，一般为插件模块名。 执行命令过后，出现了一个 weather/migrations 目录，其中有一个 xxxxxxxxxxxx_first_revision.py 文件：\",\"weather ├── __init__.py ├── config.py └── migrations └── xxxxxxxxxxxx_first_revision.py\",\"这就是我们创建的迁移脚本，它记录了数据库模式的变化。 我们可以查看一下它的内容：\",\"\\\"\\\"\\\"first revision 迁移 ID: xxxxxxxxxxxx 父迁移: 创建时间: 2006-01-02 15:04:05.999999 \\\"\\\"\\\" from __future__ import annotations from collections.abc import Sequence import sqlalchemy as sa from alembic import op revision: str = \\\"xxxxxxxxxxxx\\\" down_revision: str | Sequence[str] | None = None branch_labels: str | Sequence[str] | None = (\\\"weather\\\",) depends_on: str | Sequence[str] | None = None def upgrade(name: str = \\\"\\\") -> None: if name: return # ### commands auto generated by Alembic - please adjust! ### op.create_table( \\\"weather_weather\\\", sa.Column(\\\"location\\\", sa.String(), nullable=False), sa.Column(\\\"weather\\\", sa.String(), nullable=False), sa.PrimaryKeyConstraint(\\\"location\\\", name=op.f(\\\"pk_weather_weather\\\")), info={\\\"bind_key\\\": \\\"weather\\\"}, ) # ### end Alembic commands ### def downgrade(name: str = \\\"\\\") -> None: if name: return # ### commands auto generated by Alembic - please adjust! ### op.drop_table(\\\"weather_weather\\\") # ### end Alembic commands ###\",\"可以注意到脚本的主体部分（其余是模版代码，请勿修改）是：\",\"# ### commands auto generated by Alembic - please adjust! ### op.create_table( # CREATE TABLE \\\"weather_weather\\\", # weather_weather sa.Column(\\\"location\\\", sa.String(), nullable=False), # location VARCHAR NOT NULL, sa.Column(\\\"weather\\\", sa.String(), nullable=False), # weather VARCHAR NOT NULL, sa.PrimaryKeyConstraint(\\\"location\\\", name=op.f(\\\"pk_weather_weather\\\")), # CONSTRAINT pk_weather_weather PRIMARY KEY (location) info={\\\"bind_key\\\": \\\"weather\\\"}, ) # ### end Alembic commands ###\",\"# ### commands auto generated by Alembic - please adjust! ### op.drop_table(\\\"weather_weather\\\") # DROP TABLE weather_weather; # ### end Alembic commands ###\",\"虽然我们不是很懂这些代码的意思，但是可以注意到它们几乎与 SQL 语句 (DDL) 一一对应。 显然，它们是用来创建和删除表的。\",\"我们还可以注意到，upgrade() 和 downgrade() 函数中的代码是互逆的。 也就是说，执行一次 upgrade() 函数，再执行一次 downgrade() 函数后，数据库的模式就会回到原来的状态。\",\"这就是迁移脚本的作用：记录数据库模式的变化，以便我们在不同的环境中（例如开发环境和生产环境）可复现地、可逆地同步数据库模式，正如 git 对我们的代码做的事情那样。\",\"对了，不要忘记还有一段注释：commands auto generated by Alembic - please adjust!。 它在提醒我们，这些代码是由 Alembic 自动生成的，我们应该检查它们，并且根据需要进行调整。\",\"注意\",\"迁移脚本冗长且繁琐，我们一般不会手写它们，而是由 Alembic 自动生成。 一般情况下，Alembic 足够智能，可以正确地生成迁移脚本。 但是，在复杂或有歧义的情况下，我们可能需要手动调整迁移脚本。 所以，永远要检查迁移脚本，并且在开发环境中测试！\",\"迁移脚本中任何一处错误都足以使数据付之东流！\",\"确定迁移脚本正确后，我们就可以执行迁移脚本，将数据库模式同步到数据库中：\",\"nb orm upgrade\",\"现在，我们可以正常启动机器人了。\",\"开发过程中，我们可能会频繁地修改模型，这意味着我们需要频繁地创建并执行迁移脚本，非常繁琐。 实际上，此时我们不在乎数据安全，只需要数据库模式与模型定义一致即可。 所以，我们可以关闭 nonebot-plugin-orm 的启动检查：\",\"ALEMBIC_STARTUP_CHECK=false\",\"现在，每次启动机器人时，数据库模式会自动与模型定义同步，无需手动迁移。\"]},\"2695\":{\"h\":\"会话管理\",\"t\":[\"我们已经成功定义了模型，并且迁移了数据库，现在可以开始使用数据库了……吗？ 并不能，因为模型只是数据结构的定义，并不能通过它操作数据（如果你曾经使用过 Tortoise ORM，可能会知道 await Weather.get(location=\\\"上海\\\") 这样的面向对象编程。 但是 SQLAlchemy 不同，选择了命令式编程）。 我们需要使用会话操作数据：\",\"from nonebot import on_command from nonebot.adapters import Message from nonebot.params import CommandArg from nonebot_plugin_orm import async_scoped_session weather = on_command(\\\"天气\\\") @weather.handle() async def _(session: async_scoped_session, args: Message = CommandArg()): location = args.extract_plain_text() if wea := await session.get(Weather, location): await weather.finish(f\\\"今天{location}的天气是{wea.weather}\\\") await weather.finish(f\\\"未查询到{location}的天气\\\")\",\"我们通过 session: async_scoped_session 依赖注入获得了一个会话，然后使用 await session.get(Weather, location) 查询数据库。async_scoped_session 是一个有作用域限制的会话，作用域为当前事件、当前事件响应器。 会话产生的模型实例（例如此处的 wea := await session.get(Weather, location)）作用域与会话相同。\",\"注意\",\"此处提到的“会话”指的是 ORM 会话，而非 NoneBot 会话，两者的生命周期也是不同的（NoneBot 会话的生命周期中可能包含多个事件，不同的事件也会有不同的事件响应器）。 具体而言，就是不要将 ORM 会话和模型实例存储在 NoneBot 会话状态中：\",\"from nonebot.params import ArgPlainText from nonebot.typing import T_State @weather.got(\\\"location\\\", prompt=\\\"请输入地名\\\") async def _(state: T_State, session: async_scoped_session, location: str = ArgPlainText()): wea = await session.get(Weather, location) if not wea: await weather.finish(f\\\"未查询到{location}的天气\\\") state[\\\"weather\\\"] = wea # 不要这么做，除非你知道自己在做什么\",\"当然非要这么做也不是不可以：\",\"@weather.handle() async def _(state: T_State, session: async_scoped_session): # 通过 await session.merge(state[\\\"weather\\\"]) 获得了此 ORM 会话中的相应模型实例， # 而非直接使用会话状态中的模型实例， # 因为先前的 ORM 会话已经关闭了。 wea = await session.merge(state[\\\"weather\\\"]) await weather.finish(f\\\"今天{state['location']}的天气是{wea.weather}\\\")\",\"当有数据更改时，我们需要提交事务，也要注意会话作用域问题：\",\"from nonebot.params import Depends async def get_weather( session: async_scoped_session, args: Message = CommandArg() ) -> Weather: location = args.extract_plain_text() if not (wea := await session.get(Weather, location)): wea = Weather(location=location, weather=\\\"未知\\\") session.add(wea) # await session.commit() # 不应该在其他地方提交事务 return wea @weather.handle() async def _(session: async_scoped_session, wea: Weather = Depends(get_weather)): await weather.send(f\\\"今天的天气是{wea.weather}\\\") await session.commit() # 而应该在事件响应器结束前提交事务\",\"当然我们也可以获得一个新的会话，不过此时就要手动管理会话了：\",\"from nonebot_plugin_orm import get_session async def get_weather(location: str) -> str: session = get_session() async with session.begin(): wea = await session.get(Weather, location) if not wea: wea = Weather(location=location, weather=\\\"未知\\\") session.add(wea) return wea.weather @weather.handle() async def _(args: Message = CommandArg()): wea = await get_weather(args.extract_plain_text()) await weather.send(f\\\"今天的天气是{wea}\\\")\"]},\"2696\":{\"h\":\"依赖注入\",\"t\":[\"在上面的示例中，我们都是通过会话获得数据的。 不过，我们也可以通过依赖注入获得数据：\",\"from sqlalchemy import select from nonebot.params import Depends from nonebot_plugin_orm import SQLDepends def extract_arg_plain_text(args: Message = CommandArg()) -> str: return args.extract_plain_text() @weather.handle() async def _( wea: Weather = SQLDepends( select(Weather).where(Weather.location == Depends(extract_arg_plain_text)) ), ): await weather.send(f\\\"今天的天气是{wea.weather}\\\")\",\"其中，SQLDepends 是一个特殊的依赖注入，它会根据类型标注和 SQL 语句提供数据，SQL 语句中也可以有子依赖。\",\"不同的类型标注也会获得不同形式的数据：\",\"from collections.abc import Sequence @weather.handle() async def _( weas: Sequence[Weather] = SQLDepends( select(Weather).where(Weather.weather == Depends(extract_arg_plain_text)) ), ): await weather.send(f\\\"今天的天气是{weas[0].weather}的城市有{'，'.join(wea.location for wea in weas)}\\\")\",\"支持的类型标注请参见 依赖注入。\",\"我们也可以像 类作为依赖 那样，在类属性中声明子依赖：\",\"from collections.abc import Sequence class Weather(Model): location: Mapped[str] = mapped_column(primary_key=True) weather: Mapped[str] = Depends(extract_arg_plain_text) # weather: Annotated[Mapped[str], Depends(extract_arg_plain_text)] # Annotated 支持 @weather.handle() async def _(weas: Sequence[Weather]): await weather.send( f\\\"今天的天气是{weas[0].weather}的城市有{'，'.join(wea.location for wea in weas)}\\\" )\"]},\"2697\":{\"h\":\"依赖注入\",\"t\":[\"nonebot-plugin-orm 提供了强大且灵活的依赖注入，可以方便地帮助你获取数据库会话和查询数据。\"]},\"2698\":{\"h\":\"数据库会话\"},\"2699\":{\"h\":\"AsyncSession\",\"t\":[\"新数据库会话，常用于有独立的数据库操作逻辑的插件。\",\"from nonebot import on_message from nonebot.params import Depends from nonebot_plugin_orm import AsyncSession, Model, async_scoped_session from sqlalchemy.orm import Mapped, mapped_column message = on_message() class Message(Model): id: Mapped[int] = mapped_column(primary_key=True, autoincrement=True) async def get_message(session: AsyncSession) -> Message: # 等价于 session = get_session() async with session: msg = Message() session.add(msg) await session.commit() await session.refresh(msg) return msg @message.handle() async def _(session: async_scoped_session, msg: Message = Depends(get_message)): await session.rollback() # 无法回退 get_message() 中的更改 await message.send(str(msg.id)) # msg 被存储，msg.id 递增\"]},\"2700\":{\"h\":\"async_scoped_session\",\"t\":[\"数据库作用域会话，常用于事件响应器和有与响应逻辑相关的数据库操作逻辑的插件。\",\"from nonebot import on_message from nonebot.params import Depends from nonebot_plugin_orm import Model, async_scoped_session from sqlalchemy.orm import Mapped, mapped_column message = on_message() class Message(Model): id: Mapped[int] = mapped_column(primary_key=True, autoincrement=True) async def get_message(session: async_scoped_session) -> Message: # 等价于 session = get_scoped_session() msg = Message() session.add(msg) await session.flush() await session.refresh(msg) return msg @message.handle() async def _(session: async_scoped_session, msg: Message = Depends(get_message)): await session.rollback() # 可以回退 get_message() 中的更改 await message.send(str(msg.id)) # msg 没有被存储，msg.id 不变\"]},\"2701\":{\"h\":\"查询数据\"},\"2702\":{\"h\":\"Model\",\"t\":[\"支持类作为依赖。\",\"from typing import Annotated from nonebot.params import Depends from nonebot_plugin_orm import Model from sqlalchemy.orm import Mapped, mapped_column def get_id() -> int: ... class Message(Model): id: Annotated[Mapped[int], Depends(get_id)] = mapped_column( primary_key=True, autoincrement=True ) async def _(msg: Message): # 等价于 msg = ( # await (await session.stream(select(Message).where(Message.id == get_id()))) # .scalars() # .one_or_none() # ) ...\"]},\"2703\":{\"h\":\"SQLDepends\",\"t\":[\"参数为一个 SQL 语句，决定依赖注入的内容，SQL 语句中可以使用子依赖。\",\"from nonebot.params import Depends from nonebot_plugin_orm import Model, SQLDepends from sqlalchemy import select def get_id() -> int: ... async def _( model: Model = SQLDepends(select(Model).where(Model.id == Depends(get_id))), ): ...\",\"参数可以是任意 SQL 语句，但不建议使用 select 以外的语句，因为语句可能没有返回值（returning 除外），而且代码不清晰。\"]},\"2704\":{\"h\":\"类型标注\",\"t\":[\"类型标注决定依赖注入的数据结构，主要影响以下几个层面：\",\"迭代器（session.execute()）或异步迭代器（session.stream()）\",\"标量（session.execute().scalars()）或元组（session.execute()）\",\"一个（session.execute().one_or_none()，注意 None 时可能触发 重载）或全部（session.execute() / session.execute().all()）\",\"连续（session().execute()）或分块（session.execute().partitions()）\",\"具体如下（可以使用父类型作为类型标注）：\",\"async def _(rows_partitions: AsyncIterator[Sequence[Tuple[Model, ...]]]): # 等价于 rows_partitions = await (await session.stream(sql).partitions()) async for partition in rows_partitions: for row in partition: print(row[0], row[1], ...)\",\"async def _(model_partitions: AsyncIterator[Sequence[Model]]): # 等价于 model_partitions = await (await session.stream(sql).scalars().partitions()) async for partition in model_partitions: for model in partition: print(model)\",\"async def _(row_partitions: Iterator[Sequence[Tuple[Model, ...]]]): # 等价于 row_partitions = await session.execute(sql).partitions() for partition in rows_partitions: for row in partition: print(row[0], row[1], ...)\",\"async def _(model_partitions: Iterator[Sequence[Model]]): # 等价于 model_partitions = await (await session.execute(sql).scalars().partitions()) for partition in model_partitions: for model in partition: print(model)\",\"async def _(rows: sa_async.AsyncResult[Tuple[Model, ...]]): # 等价于 rows = await session.stream(sql) async for row in rows: print(row[0], row[1], ...)\",\"async def _(models: sa_async.AsyncScalarResult[Model]): # 等价于 models = await session.stream(sql).scalars() async for model in models: print(model)\",\"async def _(rows: sa.Result[Tuple[Model, ...]]): # 等价于 rows = await session.execute(sql) for row in rows: print(row[0], row[1], ...)\",\"async def _(models: sa.ScalarResult[Model]): # 等价于 models = await session.execute(sql).scalars() for model in models: print(model)\",\"async def _(rows: Sequence[Tuple[Model, ...]]): # 等价于 rows = await (await session.stream(sql).all()) for row in rows: print(row[0], row[1], ...)\",\"async def _(models: Sequence[Model]): # 等价于 models = await (await session.stream(sql).scalars().all()) for model in models: print(model)\",\"async def _(row: Tuple[Model, ...]): # 等价于 row = await (await session.stream(sql).one_or_none()) print(row[0], row[1], ...)\",\"async def _(model: Model): # 等价于 model = await (await session.stream(sql).scalars().one_or_none()) print(model)\"]},\"2705\":{\"h\":\"测试\",\"t\":[\"百思不如一试，测试是发现问题的最佳方式。\",\"不同的用户会有不同的配置，为了提高项目的兼容性，我们需要在不同数据库后端上测试。 手动进行大量的、重复的测试不可靠，也不现实，因此我们推荐使用 GitHub Actions 进行自动化测试：\",\"name: Test on: push: branches: - main jobs: test: runs-on: ubuntu-latest strategy: matrix: db: - sqlite+aiosqlite:///db.sqlite3 - postgresql+psycopg://postgres:postgres@localhost:5432/postgres - mysql+aiomysql://mysql:mysql@localhost:3306/mymysql fail-fast: false env: SQLALCHEMY_DATABASE_URL: ${{ matrix.db }} services: postgresql: image: ${{ startsWith(matrix.db, 'postgresql') && 'postgres' || '' }} env: POSTGRES_USER: postgres POSTGRES_PASSWORD: postgres POSTGRES_DB: postgres ports: - 5432:5432 mysql: image: ${{ startsWith(matrix.db, 'mysql') && 'mysql' || '' }} env: MYSQL_ROOT_PASSWORD: mysql MYSQL_USER: mysql MYSQL_PASSWORD: mysql MYSQL_DATABASE: mymysql ports: - 3306:3306 steps: - uses: actions/checkout@v4 - uses: actions/setup-python@v5 - name: Install dependencies run: pip install -r requirements.txt - name: Run migrations run: pipx run nb-cli orm upgrade - name: Run tests run: pytest\",\"如果项目还需要考虑跨平台和跨 Python 版本兼容，测试矩阵中还需要增加这两个维度。 但是，我们没必要在所有平台和 Python 版本上运行所有数据库的测试，因为很显然，PostgreSQL 和 MySQL 这类独立的数据库后端不会受平台和 Python 影响，而且 Github Actions 的非 Linux 平台不支持运行独立服务：\",\"Python 3.9\",\"Python 3.10\",\"Python 3.11\",\"Python 3.12\",\"Linux\",\"SQLite\",\"SQLite\",\"SQLite\",\"SQLite / PostgreSQL / MySQL\",\"Windows\",\"SQLite\",\"SQLite\",\"SQLite\",\"SQLite\",\"macOS\",\"SQLite\",\"SQLite\",\"SQLite\",\"SQLite\",\"name: Test on: push: branches: - main jobs: test: runs-on: ${{ matrix.os }} strategy: matrix: os: [ubuntu-latest, windows-latest, macos-latest] python-version: [\\\"3.9\\\", \\\"3.10\\\", \\\"3.11\\\", \\\"3.12\\\"] db: [\\\"sqlite+aiosqlite:///db.sqlite3\\\"] include: - os: ubuntu-latest python-version: \\\"3.12\\\" db: postgresql+psycopg://postgres:postgres@localhost:5432/postgres - os: ubuntu-latest python-version: \\\"3.12\\\" db: mysql+aiomysql://mysql:mysql@localhost:3306/mymysql fail-fast: false env: SQLALCHEMY_DATABASE_URL: ${{ matrix.db }} services: postgresql: image: ${{ startsWith(matrix.db, 'postgresql') && 'postgres' || '' }} env: POSTGRES_USER: postgres POSTGRES_PASSWORD: postgres POSTGRES_DB: postgres ports: - 5432:5432 mysql: image: ${{ startsWith(matrix.db, 'mysql') && 'mysql' || '' }} env: MYSQL_ROOT_PASSWORD: mysql MYSQL_USER: mysql MYSQL_PASSWORD: mysql MYSQL_DATABASE: mymysql ports: - 3306:3306 steps: - uses: actions/checkout@v4 - uses: actions/setup-python@v5 with: python-version: ${{ matrix.python-version }} - name: Install dependencies run: pip install -r requirements.txt - name: Run migrations run: pipx run nb-cli orm upgrade - name: Run tests run: pytest\"]},\"2706\":{\"h\":\"开发者指南\",\"t\":[\"开发者指南内容较多，故分为了一个示例以及数个专题。 阅读（并且最好跟随实践）示例后，你将会对使用 nonebot-plugin-orm 开发插件有一个基本的认识。 如果想要更深入地学习关于 SQLAlchemy 和 Alembic 的知识，或者在使用过程中遇到了问题，可以查阅专题以及其官方文档。\"]},\"2707\":{\"h\":\"示例\"},\"2708\":{\"h\":\"模型定义\",\"t\":[\"首先，我们需要设计存储的数据的结构。 例如天气插件，需要存储什么地方 (location) 的天气是什么 (weather)。 其中，一个地方只会有一种天气，而不同地方可能有相同的天气。 所以，我们可以设计出如下的模型：\",\"from nonebot_plugin_orm import Model from sqlalchemy.orm import Mapped, mapped_column class Weather(Model): location: Mapped[str] = mapped_column(primary_key=True) weather: Mapped[str]\",\"其中，primary_key=True 意味着此列 (location) 是主键，即内容是唯一的且非空的。 每一个模型必须有至少一个主键。\",\"我们可以用以下代码检查模型生成的数据库模式是否正确：\",\"from sqlalchemy.schema import CreateTable print(CreateTable(Weather.__table__))\",\"CREATE TABLE weather_weather ( location VARCHAR NOT NULL, weather VARCHAR NOT NULL, CONSTRAINT pk_weather_weather PRIMARY KEY (location) )\",\"可以注意到表名是 weather_weather 而不是 Weather 或者 weather。 这是因为 nonebot-plugin-orm 会自动为模型生成一个表名，规则是：<插件模块名>_<类名小写>。\",\"你也可以通过指定 __tablename__ 属性来自定义表名：\",\"class Weather(Model): __tablename__ = \\\"weather\\\" ...\",\"CREATE TABLE weather ( ... )\",\"但是，并不推荐你这么做，因为这可能会导致不同插件间的表名重复，引发冲突。 特别是当你会发布插件时，你并不知道其他插件会不会使用相同的表名。\"]},\"2709\":{\"h\":\"首次迁移\",\"t\":[\"我们成功定义了模型，现在启动机器人试试吧：\",\"$ nb run 01-02 15:04:05 [SUCCESS] nonebot | NoneBot is initializing... 01-02 15:04:05 [ERROR] nonebot_plugin_orm | 启动检查失败 01-02 15:04:05 [ERROR] nonebot | Application startup failed. Exiting. Traceback (most recent call last): ... click.exceptions.UsageError: 检测到新的升级操作: [('add_table', Table('weather', MetaData(), Column('location', String(), table=<weather>, primary_key=True, nullable=False), Column('weather', String(), table=<weather>, nullable=False), schema=None))]\",\"咦，发生了什么？nonebot-plugin-orm 试图阻止我们启动机器人。 原来是我们定义了模型，但是数据库中并没有对应的表，这会导致插件不能正常运行。 所以，我们需要迁移数据库。\",\"首先，我们需要创建一个迁移脚本：\",\"nb orm revision -m \\\"first revision\\\" --branch-label weather\",\"其中，-m 参数是迁移脚本的描述，--branch-label 参数是迁移脚本的分支，一般为插件模块名。 执行命令过后，出现了一个 weather/migrations 目录，其中有一个 xxxxxxxxxxxx_first_revision.py 文件：\",\"weather ├── __init__.py ├── config.py └── migrations └── xxxxxxxxxxxx_first_revision.py\",\"这就是我们创建的迁移脚本，它记录了数据库模式的变化。 我们可以查看一下它的内容：\",\"\\\"\\\"\\\"first revision 迁移 ID: xxxxxxxxxxxx 父迁移: 创建时间: 2006-01-02 15:04:05.999999 \\\"\\\"\\\" from __future__ import annotations from collections.abc import Sequence import sqlalchemy as sa from alembic import op revision: str = \\\"xxxxxxxxxxxx\\\" down_revision: str | Sequence[str] | None = None branch_labels: str | Sequence[str] | None = (\\\"weather\\\",) depends_on: str | Sequence[str] | None = None def upgrade(name: str = \\\"\\\") -> None: if name: return # ### commands auto generated by Alembic - please adjust! ### op.create_table( \\\"weather_weather\\\", sa.Column(\\\"location\\\", sa.String(), nullable=False), sa.Column(\\\"weather\\\", sa.String(), nullable=False), sa.PrimaryKeyConstraint(\\\"location\\\", name=op.f(\\\"pk_weather_weather\\\")), info={\\\"bind_key\\\": \\\"weather\\\"}, ) # ### end Alembic commands ### def downgrade(name: str = \\\"\\\") -> None: if name: return # ### commands auto generated by Alembic - please adjust! ### op.drop_table(\\\"weather_weather\\\") # ### end Alembic commands ###\",\"可以注意到脚本的主体部分（其余是模版代码，请勿修改）是：\",\"# ### commands auto generated by Alembic - please adjust! ### op.create_table( # CREATE TABLE \\\"weather_weather\\\", # weather_weather sa.Column(\\\"location\\\", sa.String(), nullable=False), # location VARCHAR NOT NULL, sa.Column(\\\"weather\\\", sa.String(), nullable=False), # weather VARCHAR NOT NULL, sa.PrimaryKeyConstraint(\\\"location\\\", name=op.f(\\\"pk_weather_weather\\\")), # CONSTRAINT pk_weather_weather PRIMARY KEY (location) info={\\\"bind_key\\\": \\\"weather\\\"}, ) # ### end Alembic commands ###\",\"# ### commands auto generated by Alembic - please adjust! ### op.drop_table(\\\"weather_weather\\\") # DROP TABLE weather_weather; # ### end Alembic commands ###\",\"虽然我们不是很懂这些代码的意思，但是可以注意到它们几乎与 SQL 语句 (DDL) 一一对应。 显然，它们是用来创建和删除表的。\",\"我们还可以注意到，upgrade() 和 downgrade() 函数中的代码是互逆的。 也就是说，执行一次 upgrade() 函数，再执行一次 downgrade() 函数后，数据库的模式就会回到原来的状态。\",\"这就是迁移脚本的作用：记录数据库模式的变化，以便我们在不同的环境中（例如开发环境和生产环境）可复现地、可逆地同步数据库模式，正如 git 对我们的代码做的事情那样。\",\"对了，不要忘记还有一段注释：commands auto generated by Alembic - please adjust!。 它在提醒我们，这些代码是由 Alembic 自动生成的，我们应该检查它们，并且根据需要进行调整。\",\"注意\",\"迁移脚本冗长且繁琐，我们一般不会手写它们，而是由 Alembic 自动生成。 一般情况下，Alembic 足够智能，可以正确地生成迁移脚本。 但是，在复杂或有歧义的情况下，我们可能需要手动调整迁移脚本。 所以，永远要检查迁移脚本，并且在开发环境中测试！\",\"迁移脚本中任何一处错误都足以使数据付之东流！\",\"确定迁移脚本正确后，我们就可以执行迁移脚本，将数据库模式同步到数据库中：\",\"nb orm upgrade\",\"现在，我们可以正常启动机器人了。\",\"开发过程中，我们可能会频繁地修改模型，这意味着我们需要频繁地创建并执行迁移脚本，非常繁琐。 实际上，此时我们不在乎数据安全，只需要数据库模式与模型定义一致即可。 所以，我们可以关闭 nonebot-plugin-orm 的启动检查：\",\"ALEMBIC_STARTUP_CHECK=false\",\"现在，每次启动机器人时，数据库模式会自动与模型定义同步，无需手动迁移。\"]},\"2710\":{\"h\":\"会话管理\",\"t\":[\"我们已经成功定义了模型，并且迁移了数据库，现在可以开始使用数据库了……吗？ 并不能，因为模型只是数据结构的定义，并不能通过它操作数据（如果你曾经使用过 Tortoise ORM，可能会知道 await Weather.get(location=\\\"上海\\\") 这样的面向对象编程。 但是 SQLAlchemy 不同，选择了命令式编程）。 我们需要使用会话操作数据：\",\"from nonebot import on_command from nonebot.adapters import Message from nonebot.params import CommandArg from nonebot_plugin_orm import async_scoped_session weather = on_command(\\\"天气\\\") @weather.handle() async def _(session: async_scoped_session, args: Message = CommandArg()): location = args.extract_plain_text() if wea := await session.get(Weather, location): await weather.finish(f\\\"今天{location}的天气是{wea.weather}\\\") await weather.finish(f\\\"未查询到{location}的天气\\\")\",\"我们通过 session: async_scoped_session 依赖注入获得了一个会话，然后使用 await session.get(Weather, location) 查询数据库。async_scoped_session 是一个有作用域限制的会话，作用域为当前事件、当前事件响应器。 会话产生的模型实例（例如此处的 wea := await session.get(Weather, location)）作用域与会话相同。\",\"注意\",\"此处提到的“会话”指的是 ORM 会话，而非 NoneBot 会话，两者的生命周期也是不同的（NoneBot 会话的生命周期中可能包含多个事件，不同的事件也会有不同的事件响应器）。 具体而言，就是不要将 ORM 会话和模型实例存储在 NoneBot 会话状态中：\",\"from nonebot.params import ArgPlainText from nonebot.typing import T_State @weather.got(\\\"location\\\", prompt=\\\"请输入地名\\\") async def _(state: T_State, session: async_scoped_session, location: str = ArgPlainText()): wea = await session.get(Weather, location) if not wea: await weather.finish(f\\\"未查询到{location}的天气\\\") state[\\\"weather\\\"] = wea # 不要这么做，除非你知道自己在做什么\",\"当然非要这么做也不是不可以：\",\"@weather.handle() async def _(state: T_State, session: async_scoped_session): # 通过 await session.merge(state[\\\"weather\\\"]) 获得了此 ORM 会话中的相应模型实例， # 而非直接使用会话状态中的模型实例， # 因为先前的 ORM 会话已经关闭了。 wea = await session.merge(state[\\\"weather\\\"]) await weather.finish(f\\\"今天{state['location']}的天气是{wea.weather}\\\")\",\"当有数据更改时，我们需要提交事务，也要注意会话作用域问题：\",\"from nonebot.params import Depends async def get_weather( session: async_scoped_session, args: Message = CommandArg() ) -> Weather: location = args.extract_plain_text() if not (wea := await session.get(Weather, location)): wea = Weather(location=location, weather=\\\"未知\\\") session.add(wea) # await session.commit() # 不应该在其他地方提交事务 return wea @weather.handle() async def _(session: async_scoped_session, wea: Weather = Depends(get_weather)): await weather.send(f\\\"今天的天气是{wea.weather}\\\") await session.commit() # 而应该在事件响应器结束前提交事务\",\"当然我们也可以获得一个新的会话，不过此时就要手动管理会话了：\",\"from nonebot_plugin_orm import get_session async def get_weather(location: str) -> str: session = get_session() async with session.begin(): wea = await session.get(Weather, location) if not wea: wea = Weather(location=location, weather=\\\"未知\\\") session.add(wea) return wea.weather @weather.handle() async def _(args: Message = CommandArg()): wea = await get_weather(args.extract_plain_text()) await weather.send(f\\\"今天的天气是{wea}\\\")\"]},\"2711\":{\"h\":\"依赖注入\",\"t\":[\"在上面的示例中，我们都是通过会话获得数据的。 不过，我们也可以通过依赖注入获得数据：\",\"from sqlalchemy import select from nonebot.params import Depends from nonebot_plugin_orm import SQLDepends def extract_arg_plain_text(args: Message = CommandArg()) -> str: return args.extract_plain_text() @weather.handle() async def _( wea: Weather = SQLDepends( select(Weather).where(Weather.location == Depends(extract_arg_plain_text)) ), ): await weather.send(f\\\"今天的天气是{wea.weather}\\\")\",\"其中，SQLDepends 是一个特殊的依赖注入，它会根据类型标注和 SQL 语句提供数据，SQL 语句中也可以有子依赖。\",\"不同的类型标注也会获得不同形式的数据：\",\"from collections.abc import Sequence @weather.handle() async def _( weas: Sequence[Weather] = SQLDepends( select(Weather).where(Weather.weather == Depends(extract_arg_plain_text)) ), ): await weather.send(f\\\"今天的天气是{weas[0].weather}的城市有{'，'.join(wea.location for wea in weas)}\\\")\",\"支持的类型标注请参见 依赖注入。\",\"我们也可以像 类作为依赖 那样，在类属性中声明子依赖：\",\"from collections.abc import Sequence class Weather(Model): location: Mapped[str] = mapped_column(primary_key=True) weather: Mapped[str] = Depends(extract_arg_plain_text) # weather: Annotated[Mapped[str], Depends(extract_arg_plain_text)] # Annotated 支持 @weather.handle() async def _(weas: Sequence[Weather]): await weather.send( f\\\"今天的天气是{weas[0].weather}的城市有{'，'.join(wea.location for wea in weas)}\\\" )\"]},\"2712\":{\"h\":\"依赖注入\",\"t\":[\"nonebot-plugin-orm 提供了强大且灵活的依赖注入，可以方便地帮助你获取数据库会话和查询数据。\"]},\"2713\":{\"h\":\"数据库会话\"},\"2714\":{\"h\":\"AsyncSession\",\"t\":[\"新数据库会话，常用于有独立的数据库操作逻辑的插件。\",\"from nonebot import on_message from nonebot.params import Depends from nonebot_plugin_orm import AsyncSession, Model, async_scoped_session from sqlalchemy.orm import Mapped, mapped_column message = on_message() class Message(Model): id: Mapped[int] = mapped_column(primary_key=True, autoincrement=True) async def get_message(session: AsyncSession) -> Message: # 等价于 session = get_session() async with session: msg = Message() session.add(msg) await session.commit() await session.refresh(msg) return msg @message.handle() async def _(session: async_scoped_session, msg: Message = Depends(get_message)): await session.rollback() # 无法回退 get_message() 中的更改 await message.send(str(msg.id)) # msg 被存储，msg.id 递增\"]},\"2715\":{\"h\":\"async_scoped_session\",\"t\":[\"数据库作用域会话，常用于事件响应器和有与响应逻辑相关的数据库操作逻辑的插件。\",\"from nonebot import on_message from nonebot.params import Depends from nonebot_plugin_orm import Model, async_scoped_session from sqlalchemy.orm import Mapped, mapped_column message = on_message() class Message(Model): id: Mapped[int] = mapped_column(primary_key=True, autoincrement=True) async def get_message(session: async_scoped_session) -> Message: # 等价于 session = get_scoped_session() msg = Message() session.add(msg) await session.flush() await session.refresh(msg) return msg @message.handle() async def _(session: async_scoped_session, msg: Message = Depends(get_message)): await session.rollback() # 可以回退 get_message() 中的更改 await message.send(str(msg.id)) # msg 没有被存储，msg.id 不变\"]},\"2716\":{\"h\":\"查询数据\"},\"2717\":{\"h\":\"Model\",\"t\":[\"支持类作为依赖。\",\"from typing import Annotated from nonebot.params import Depends from nonebot_plugin_orm import Model from sqlalchemy.orm import Mapped, mapped_column def get_id() -> int: ... class Message(Model): id: Annotated[Mapped[int], Depends(get_id)] = mapped_column( primary_key=True, autoincrement=True ) async def _(msg: Message): # 等价于 msg = ( # await (await session.stream(select(Message).where(Message.id == get_id()))) # .scalars() # .one_or_none() # ) ...\"]},\"2718\":{\"h\":\"SQLDepends\",\"t\":[\"参数为一个 SQL 语句，决定依赖注入的内容，SQL 语句中可以使用子依赖。\",\"from nonebot.params import Depends from nonebot_plugin_orm import Model, SQLDepends from sqlalchemy import select def get_id() -> int: ... async def _( model: Model = SQLDepends(select(Model).where(Model.id == Depends(get_id))), ): ...\",\"参数可以是任意 SQL 语句，但不建议使用 select 以外的语句，因为语句可能没有返回值（returning 除外），而且代码不清晰。\"]},\"2719\":{\"h\":\"类型标注\",\"t\":[\"类型标注决定依赖注入的数据结构，主要影响以下几个层面：\",\"迭代器（session.execute()）或异步迭代器（session.stream()）\",\"标量（session.execute().scalars()）或元组（session.execute()）\",\"一个（session.execute().one_or_none()，注意 None 时可能触发 重载）或全部（session.execute() / session.execute().all()）\",\"连续（session().execute()）或分块（session.execute().partitions()）\",\"具体如下（可以使用父类型作为类型标注）：\",\"async def _(rows_partitions: AsyncIterator[Sequence[Tuple[Model, ...]]]): # 等价于 rows_partitions = await (await session.stream(sql).partitions()) async for partition in rows_partitions: for row in partition: print(row[0], row[1], ...)\",\"async def _(model_partitions: AsyncIterator[Sequence[Model]]): # 等价于 model_partitions = await (await session.stream(sql).scalars().partitions()) async for partition in model_partitions: for model in partition: print(model)\",\"async def _(row_partitions: Iterator[Sequence[Tuple[Model, ...]]]): # 等价于 row_partitions = await session.execute(sql).partitions() for partition in rows_partitions: for row in partition: print(row[0], row[1], ...)\",\"async def _(model_partitions: Iterator[Sequence[Model]]): # 等价于 model_partitions = await (await session.execute(sql).scalars().partitions()) for partition in model_partitions: for model in partition: print(model)\",\"async def _(rows: sa_async.AsyncResult[Tuple[Model, ...]]): # 等价于 rows = await session.stream(sql) async for row in rows: print(row[0], row[1], ...)\",\"async def _(models: sa_async.AsyncScalarResult[Model]): # 等价于 models = await session.stream(sql).scalars() async for model in models: print(model)\",\"async def _(rows: sa.Result[Tuple[Model, ...]]): # 等价于 rows = await session.execute(sql) for row in rows: print(row[0], row[1], ...)\",\"async def _(models: sa.ScalarResult[Model]): # 等价于 models = await session.execute(sql).scalars() for model in models: print(model)\",\"async def _(rows: Sequence[Tuple[Model, ...]]): # 等价于 rows = await (await session.stream(sql).all()) for row in rows: print(row[0], row[1], ...)\",\"async def _(models: Sequence[Model]): # 等价于 models = await (await session.stream(sql).scalars().all()) for model in models: print(model)\",\"async def _(row: Tuple[Model, ...]): # 等价于 row = await (await session.stream(sql).one_or_none()) print(row[0], row[1], ...)\",\"async def _(model: Model): # 等价于 model = await (await session.stream(sql).scalars().one_or_none()) print(model)\"]},\"2720\":{\"h\":\"测试\",\"t\":[\"百思不如一试，测试是发现问题的最佳方式。\",\"不同的用户会有不同的配置，为了提高项目的兼容性，我们需要在不同数据库后端上测试。 手动进行大量的、重复的测试不可靠，也不现实，因此我们推荐使用 GitHub Actions 进行自动化测试：\",\"name: Test on: push: branches: - main jobs: test: runs-on: ubuntu-latest strategy: matrix: db: - sqlite+aiosqlite:///db.sqlite3 - postgresql+psycopg://postgres:postgres@localhost:5432/postgres - mysql+aiomysql://mysql:mysql@localhost:3306/mymysql fail-fast: false env: SQLALCHEMY_DATABASE_URL: ${{ matrix.db }} services: postgresql: image: ${{ startsWith(matrix.db, 'postgresql') && 'postgres' || '' }} env: POSTGRES_USER: postgres POSTGRES_PASSWORD: postgres POSTGRES_DB: postgres ports: - 5432:5432 mysql: image: ${{ startsWith(matrix.db, 'mysql') && 'mysql' || '' }} env: MYSQL_ROOT_PASSWORD: mysql MYSQL_USER: mysql MYSQL_PASSWORD: mysql MYSQL_DATABASE: mymysql ports: - 3306:3306 steps: - uses: actions/checkout@v4 - uses: actions/setup-python@v5 - name: Install dependencies run: pip install -r requirements.txt - name: Run migrations run: pipx run nb-cli orm upgrade - name: Run tests run: pytest\",\"如果项目还需要考虑跨平台和跨 Python 版本兼容，测试矩阵中还需要增加这两个维度。 但是，我们没必要在所有平台和 Python 版本上运行所有数据库的测试，因为很显然，PostgreSQL 和 MySQL 这类独立的数据库后端不会受平台和 Python 影响，而且 Github Actions 的非 Linux 平台不支持运行独立服务：\",\"Python 3.9\",\"Python 3.10\",\"Python 3.11\",\"Python 3.12\",\"Linux\",\"SQLite\",\"SQLite\",\"SQLite\",\"SQLite / PostgreSQL / MySQL\",\"Windows\",\"SQLite\",\"SQLite\",\"SQLite\",\"SQLite\",\"macOS\",\"SQLite\",\"SQLite\",\"SQLite\",\"SQLite\",\"name: Test on: push: branches: - main jobs: test: runs-on: ${{ matrix.os }} strategy: matrix: os: [ubuntu-latest, windows-latest, macos-latest] python-version: [\\\"3.9\\\", \\\"3.10\\\", \\\"3.11\\\", \\\"3.12\\\"] db: [\\\"sqlite+aiosqlite:///db.sqlite3\\\"] include: - os: ubuntu-latest python-version: \\\"3.12\\\" db: postgresql+psycopg://postgres:postgres@localhost:5432/postgres - os: ubuntu-latest python-version: \\\"3.12\\\" db: mysql+aiomysql://mysql:mysql@localhost:3306/mymysql fail-fast: false env: SQLALCHEMY_DATABASE_URL: ${{ matrix.db }} services: postgresql: image: ${{ startsWith(matrix.db, 'postgresql') && 'postgres' || '' }} env: POSTGRES_USER: postgres POSTGRES_PASSWORD: postgres POSTGRES_DB: postgres ports: - 5432:5432 mysql: image: ${{ startsWith(matrix.db, 'mysql') && 'mysql' || '' }} env: MYSQL_ROOT_PASSWORD: mysql MYSQL_USER: mysql MYSQL_PASSWORD: mysql MYSQL_DATABASE: mymysql ports: - 3306:3306 steps: - uses: actions/checkout@v4 - uses: actions/setup-python@v5 with: python-version: ${{ matrix.python-version }} - name: Install dependencies run: pip install -r requirements.txt - name: Run migrations run: pipx run nb-cli orm upgrade - name: Run tests run: pytest\"]},\"2721\":{\"h\":\"\",\"t\":[\"{ \\\"position\\\": 15 }\"]},\"2722\":{\"h\":\"\",\"t\":[\"{ \\\"position\\\": 13 }\"]},\"2723\":{\"h\":\"\",\"t\":[\"{ \\\"position\\\": 14 }\"]},\"2724\":{\"h\":\"\",\"t\":[\"{ \\\"position\\\": 12 }\"]},\"2725\":{\"h\":\"\",\"t\":[\"{ \\\"label\\\": \\\"Alconna 命令解析拓展\\\", \\\"position\\\": 6 }\"]},\"2726\":{\"h\":\"\",\"t\":[\"{ \\\"label\\\": \\\"数据库\\\", \\\"position\\\": 7 }\"]},\"2727\":{\"h\":\"\",\"t\":[\"{ \\\"label\\\": \\\"单元测试\\\", \\\"position\\\": 5 }\"]},\"2728\":{\"h\":\"\",\"t\":[\"{ \\\"position\\\": 15 }\"]},\"2729\":{\"h\":\"\",\"t\":[\"{ \\\"position\\\": 13 }\"]},\"2730\":{\"h\":\"\",\"t\":[\"{ \\\"position\\\": 14 }\"]},\"2731\":{\"h\":\"\",\"t\":[\"{ \\\"position\\\": 12 }\"]},\"2732\":{\"h\":\"\",\"t\":[\"{ \\\"label\\\": \\\"Alconna 命令解析拓展\\\", \\\"position\\\": 6 }\"]},\"2733\":{\"h\":\"\",\"t\":[\"{ \\\"label\\\": \\\"数据库\\\", \\\"position\\\": 7 }\"]},\"2734\":{\"h\":\"\",\"t\":[\"{ \\\"label\\\": \\\"单元测试\\\", \\\"position\\\": 5 }\"]},\"2735\":{\"h\":\"\",\"t\":[\"{ \\\"position\\\": 15 }\"]},\"2736\":{\"h\":\"\",\"t\":[\"{ \\\"position\\\": 13 }\"]},\"2737\":{\"h\":\"\",\"t\":[\"{ \\\"position\\\": 14 }\"]},\"2738\":{\"h\":\"\",\"t\":[\"{ \\\"position\\\": 12 }\"]},\"2739\":{\"h\":\"\",\"t\":[\"{ \\\"label\\\": \\\"Alconna 命令解析拓展\\\", \\\"position\\\": 6 }\"]},\"2740\":{\"h\":\"\",\"t\":[\"{ \\\"label\\\": \\\"数据库\\\", \\\"position\\\": 7 }\"]},\"2741\":{\"h\":\"\",\"t\":[\"{ \\\"label\\\": \\\"单元测试\\\", \\\"position\\\": 5 }\"]},\"2742\":{\"h\":\"\",\"t\":[\"{ \\\"label\\\": \\\"开发者指南\\\", \\\"position\\\": 3 }\"]},\"2743\":{\"h\":\"\",\"t\":[\"{ \\\"label\\\": \\\"开发者指南\\\", \\\"position\\\": 3 }\"]},\"2744\":{\"h\":\"\",\"t\":[\"{ \\\"label\\\": \\\"开发者指南\\\", \\\"position\\\": 3 }\"]},\"2745\":{\"h\":\"\",\"t\":[\"404 Not Found\"]},\"2746\":{\"h\":\"\"},\"2747\":{\"h\":\"Advanced\"},\"2748\":{\"h\":\"Appendices\"},\"2749\":{\"h\":\"Best Practice\"},\"2750\":{\"h\":\"Community\"},\"2751\":{\"h\":\"Developer\"},\"2752\":{\"h\":\"Ospp\"},\"2753\":{\"h\":\"Tutorial\"},\"2754\":{\"h\":\"Advanced\"},\"2755\":{\"h\":\"Appendices\"},\"2756\":{\"h\":\"Best Practice\"},\"2757\":{\"h\":\"Community\"},\"2758\":{\"h\":\"Developer\"},\"2759\":{\"h\":\"Ospp\"},\"2760\":{\"h\":\"Tutorial\"},\"2761\":{\"h\":\"Advanced\"},\"2762\":{\"h\":\"Appendices\"},\"2763\":{\"h\":\"Best Practice\"},\"2764\":{\"h\":\"Community\"},\"2765\":{\"h\":\"Developer\"},\"2766\":{\"h\":\"Ospp\"},\"2767\":{\"h\":\"Tutorial\"},\"2768\":{\"h\":\"Alconna\"},\"2769\":{\"h\":\"Database\"},\"2770\":{\"h\":\"Testing\"},\"2771\":{\"h\":\"Alconna\"},\"2772\":{\"h\":\"Database\"},\"2773\":{\"h\":\"Testing\"},\"2774\":{\"h\":\"Alconna\"},\"2775\":{\"h\":\"Database\"},\"2776\":{\"h\":\"Testing\"}},\"dirtCount\":0,\"index\":[[\"6\",{\"1\":{\"2725\":1,\"2732\":1,\"2739\":1}}],[\"6+\",{\"1\":{\"58\":1,\"566\":1,\"1076\":1}}],[\"影响\",{\"1\":{\"2690\":1,\"2705\":1,\"2720\":1}}],[\"手动进行大量的\",{\"1\":{\"2690\":1,\"2705\":1,\"2720\":1}}],[\"手动创建项目\",{\"0\":{\"504\":1,\"1014\":1,\"1529\":1}}],[\"百思不如一试\",{\"1\":{\"2690\":1,\"2705\":1,\"2720\":1}}],[\"连续\",{\"1\":{\"2689\":1,\"2704\":1,\"2719\":1}}],[\"连接信息\",{\"1\":{\"1935\":1,\"2304\":1,\"2673\":1}}],[\"连接是否已经关闭\",{\"1\":{\"1736\":1,\"2105\":1,\"2483\":1}}],[\"连接断开时执行\",{\"1\":{\"1720\":1,\"2089\":1,\"2468\":1}}],[\"连接断开时钩子函数\",{\"1\":{\"384\":1,\"892\":1,\"1407\":1}}],[\"连接成功时执行\",{\"1\":{\"1719\":1,\"2088\":1,\"2467\":1}}],[\"连接后的消息\",{\"1\":{\"1614\":1,\"1983\":1,\"2352\":1}}],[\"连接已断开\",{\"1\":{\"1595\":1,\"1964\":1,\"2314\":1}}],[\"连接已关闭\",{\"1\":{\"214\":1,\"722\":1,\"1234\":1}}],[\"连接建立时钩子函数\",{\"1\":{\"383\":1,\"891\":1,\"1406\":1}}],[\"连接不可用时抛出\",{\"1\":{\"210\":1,\"718\":1,\"1230\":1}}],[\"连接处理\",{\"0\":{\"129\":1,\"637\":1,\"1147\":1}}],[\"连接数据库\",{\"1\":{\"127\":1,\"635\":1,\"1145\":1}}],[\"连接请求\",{\"1\":{\"78\":1,\"79\":1,\"586\":1,\"587\":1,\"1096\":1,\"1097\":1,\"1737\":1,\"1738\":1,\"2106\":1,\"2107\":1,\"2484\":1,\"2485\":1}}],[\"连接请求地址以及对\",{\"1\":{\"53\":1,\"561\":1,\"1071\":1}}],[\"连接上下文\",{\"1\":{\"53\":1,\"561\":1,\"1071\":1}}],[\"连接\",{\"0\":{\"472\":1,\"982\":1,\"1497\":1},\"1\":{\"53\":1,\"470\":3,\"472\":4,\"561\":1,\"980\":3,\"982\":4,\"1071\":1,\"1495\":3,\"1497\":4,\"1594\":1,\"1697\":1,\"1756\":1,\"1788\":1,\"1935\":1,\"1963\":1,\"2066\":1,\"2125\":1,\"2157\":1,\"2304\":1,\"2313\":1,\"2435\":1,\"2493\":1,\"2526\":1,\"2673\":1}}],[\"迭代器\",{\"1\":{\"2689\":1,\"2704\":1,\"2719\":1}}],[\"决定依赖注入的内容\",{\"1\":{\"2688\":1,\"2703\":1,\"2718\":1}}],[\"递增\",{\"1\":{\"2684\":1,\"2699\":1,\"2714\":1}}],[\"那样\",{\"1\":{\"2681\":1,\"2696\":1,\"2711\":1}}],[\"那么消息模板将采用消息序列形式的格式化\",{\"1\":{\"543\":1,\"1053\":1,\"1568\":1}}],[\"那么\",{\"1\":{\"533\":1,\"1043\":1,\"1558\":1}}],[\"那么你需要在\",{\"1\":{\"514\":1,\"1024\":1,\"1539\":1}}],[\"那么你需要做出如下修改\",{\"1\":{\"513\":2,\"1023\":2,\"1538\":2}}],[\"那么你可以跳过这一节\",{\"1\":{\"514\":1,\"1024\":1,\"1539\":1}}],[\"那么其他依赖注入将不会执行\",{\"1\":{\"422\":1,\"932\":1,\"1447\":1}}],[\"那么就不要修改事件参数类型注解\",{\"1\":{\"421\":1,\"931\":1,\"1446\":1}}],[\"那么我们就可以向驱动器添加路由规则\",{\"1\":{\"118\":1,\"626\":1,\"1136\":1}}],[\"就是不要将\",{\"1\":{\"2680\":1,\"2695\":1,\"2710\":1}}],[\"就可以正常使用\",{\"1\":{\"0\":1,\"12\":1,\"24\":1}}],[\"两者的生命周期也是不同的\",{\"1\":{\"2680\":1,\"2695\":1,\"2710\":1}}],[\"两个类\",{\"1\":{\"477\":1,\"987\":1,\"1502\":1}}],[\"未知\",{\"1\":{\"2680\":2,\"2695\":2,\"2710\":2}}],[\"未查询到\",{\"1\":{\"2680\":2,\"2695\":2,\"2710\":2}}],[\"未注册\",{\"1\":{\"218\":1,\"726\":1,\"1238\":1}}],[\"今天的天气是\",{\"1\":{\"2680\":2,\"2681\":3,\"2695\":2,\"2696\":3,\"2710\":2,\"2711\":3}}],[\"今天\",{\"1\":{\"2680\":2,\"2695\":2,\"2710\":2}}],[\"吗\",{\"1\":{\"2680\":1,\"2695\":1,\"2710\":1}}],[\"确定迁移脚本正确后\",{\"1\":{\"2679\":1,\"2694\":1,\"2709\":1}}],[\"确保插件对\",{\"1\":{\"503\":1,\"1013\":1,\"1528\":1}}],[\"确保只有在私聊或者\",{\"1\":{\"423\":1,\"933\":1,\"1448\":1}}],[\"确保依赖的外部插件已经被声明或加载\",{\"1\":{\"116\":1,\"624\":1,\"1134\":1}}],[\"确保代码可以被编辑器正确解析\",{\"1\":{\"8\":1,\"20\":1,\"32\":1}}],[\"永远要检查迁移脚本\",{\"1\":{\"2679\":1,\"2694\":1,\"2709\":1}}],[\"足够智能\",{\"1\":{\"2679\":1,\"2694\":1,\"2709\":1}}],[\"记录数据库模式的变化\",{\"1\":{\"2679\":1,\"2694\":1,\"2709\":1}}],[\"记录日志\",{\"0\":{\"417\":1,\"927\":1,\"1442\":1},\"1\":{\"169\":1,\"677\":1,\"1187\":1}}],[\"再执行一次\",{\"1\":{\"2679\":1,\"2694\":1,\"2709\":1}}],[\"执行一次\",{\"1\":{\"2679\":1,\"2694\":1,\"2709\":1}}],[\"执行命令过后\",{\"1\":{\"2679\":1,\"2694\":1,\"2709\":1}}],[\"显然\",{\"1\":{\"2679\":1,\"2694\":1,\"2709\":1}}],[\"显示所有的分支头\",{\"1\":{\"1924\":1,\"2293\":1,\"2662\":1}}],[\"虽然我们不是很懂这些代码的意思\",{\"1\":{\"2679\":1,\"2694\":1,\"2709\":1}}],[\"虽然我们可以使用\",{\"1\":{\"416\":1,\"926\":1,\"1441\":1}}],[\"父迁移\",{\"1\":{\"2679\":1,\"2694\":1,\"2709\":1}}],[\"父插件\",{\"1\":{\"1848\":1,\"2217\":1,\"2586\":1}}],[\"父插件标识符\",{\"1\":{\"1803\":1,\"2172\":1,\"2541\":1}}],[\"迁移脚本中任何一处错误都足以使数据付之东流\",{\"1\":{\"2679\":1,\"2694\":1,\"2709\":1}}],[\"迁移脚本冗长且繁琐\",{\"1\":{\"2679\":1,\"2694\":1,\"2709\":1}}],[\"迁移\",{\"1\":{\"2679\":1,\"2694\":1,\"2709\":1}}],[\"出现了一个\",{\"1\":{\"2679\":1,\"2694\":1,\"2709\":1}}],[\"出于清晰考虑\",{\"1\":{\"1932\":1,\"2301\":1,\"2670\":1}}],[\"试图阻止我们启动机器人\",{\"1\":{\"2679\":1,\"2694\":1,\"2709\":1}}],[\"咦\",{\"1\":{\"2679\":1,\"2694\":1,\"2709\":1}}],[\"检测到新的升级操作\",{\"1\":{\"2679\":1,\"2694\":1,\"2709\":1}}],[\"检查数据库模式是否与模型定义一致\",{\"1\":{\"1927\":1,\"2296\":1,\"2665\":1}}],[\"检查一下数据库模式是否与模型定义一致\",{\"1\":{\"1921\":1,\"1922\":1,\"2290\":1,\"2291\":1,\"2659\":1,\"2660\":1}}],[\"检查字段类型是否匹配\",{\"1\":{\"1650\":1,\"2019\":1,\"2388\":1}}],[\"检查通过时匹配成功\",{\"1\":{\"425\":1,\"935\":1,\"1450\":1}}],[\"检查事件是否有回复消息\",{\"1\":{\"475\":1,\"985\":1,\"1500\":1}}],[\"检查事件是否和机器人有关操作\",{\"1\":{\"475\":1,\"985\":1,\"1500\":1}}],[\"检查事件是否与机器人有关\",{\"1\":{\"368\":1,\"876\":1,\"1391\":1}}],[\"检查事件类型是否为指定类型\",{\"1\":{\"370\":1,\"878\":1,\"1393\":1}}],[\"检查消息中是否仅包含指定消息段\",{\"1\":{\"1611\":1,\"1980\":1,\"2349\":1}}],[\"检查消息段是否存在\",{\"1\":{\"1606\":1,\"1975\":1,\"2344\":1}}],[\"检查消息段\",{\"0\":{\"540\":1,\"1050\":1,\"1565\":1}}],[\"检查消息字符串是否符合指定正则表达式\",{\"1\":{\"366\":1,\"874\":1,\"1389\":1}}],[\"检查消息是否为指定\",{\"1\":{\"364\":1,\"872\":1,\"1387\":1}}],[\"检查消息是否为指定命令\",{\"1\":{\"360\":1,\"868\":1,\"1383\":1}}],[\"检查消息纯文本是否包含指定关键字\",{\"1\":{\"358\":1,\"866\":1,\"1381\":1}}],[\"检查消息纯文本是否与指定字符串全匹配\",{\"1\":{\"356\":1,\"864\":1,\"1379\":1}}],[\"检查消息纯文本是否以指定字符串结尾\",{\"1\":{\"354\":1,\"862\":1,\"1377\":1}}],[\"检查消息纯文本是否以指定字符串开头\",{\"1\":{\"352\":1,\"860\":1,\"1375\":1}}],[\"检查当前事件是否是消息事件且属于超级管理员\",{\"1\":{\"344\":1,\"852\":1,\"1367\":1}}],[\"检查当前事件是否属于指定会话\",{\"1\":{\"330\":1,\"838\":1,\"1356\":1}}],[\"检查是否符合所有规则\",{\"1\":{\"349\":1,\"857\":1,\"1372\":1}}],[\"检查是否为元事件\",{\"1\":{\"339\":1,\"847\":1,\"1362\":1}}],[\"检查是否为请求事件\",{\"1\":{\"338\":1,\"846\":1,\"1361\":1}}],[\"检查是否为通知事件\",{\"1\":{\"337\":1,\"845\":1,\"1360\":1}}],[\"检查是否为消息事件\",{\"1\":{\"336\":1,\"844\":1,\"1359\":1}}],[\"检查是否满足某个权限\",{\"1\":{\"335\":1,\"843\":1,\"1355\":1}}],[\"检查是否满足匹配规则\",{\"1\":{\"245\":1,\"753\":1,\"1266\":1}}],[\"检查是否满足触发权限\",{\"1\":{\"244\":1,\"752\":1,\"1265\":1}}],[\"检查结果为\",{\"1\":{\"328\":1,\"346\":1,\"836\":1,\"854\":1,\"1351\":1,\"1369\":1}}],[\"检查并运行事件响应器\",{\"1\":{\"292\":1,\"800\":1,\"1312\":1}}],[\"检查依赖的插件是否已经被加载\",{\"1\":{\"117\":1,\"625\":1,\"1135\":1}}],[\"检查\",{\"1\":{\"3\":1,\"15\":1,\"27\":1,\"400\":1,\"401\":1,\"402\":1,\"403\":1,\"404\":1,\"405\":1,\"482\":1,\"908\":1,\"909\":1,\"910\":1,\"911\":1,\"912\":1,\"913\":1,\"992\":1,\"1423\":1,\"1424\":1,\"1425\":1,\"1426\":1,\"1427\":1,\"1428\":1,\"1507\":1}}],[\"首次迁移\",{\"0\":{\"2679\":1,\"2694\":1,\"2709\":1}}],[\"首先\",{\"1\":{\"2678\":1,\"2679\":1,\"2693\":1,\"2694\":1,\"2708\":1,\"2709\":1}}],[\"引发冲突\",{\"1\":{\"2678\":1,\"2693\":1,\"2708\":1}}],[\"引擎配置\",{\"1\":{\"1929\":1,\"2298\":1,\"2667\":1}}],[\"意味着此列\",{\"1\":{\"2678\":1,\"2693\":1,\"2708\":1}}],[\"意思是\",{\"1\":{\"7\":1,\"19\":1,\"31\":1}}],[\"阅读\",{\"1\":{\"2676\":1,\"2691\":1,\"2706\":1}}],[\"故分为了一个示例以及数个专题\",{\"1\":{\"2676\":1,\"2691\":1,\"2706\":1}}],[\"故需要先获得全局驱动器\",{\"1\":{\"126\":1,\"634\":1,\"1144\":1}}],[\"暂不支持\",{\"1\":{\"1936\":1,\"1937\":1,\"2305\":1,\"2306\":1,\"2674\":1,\"2675\":1}}],[\"测试矩阵中还需要增加这两个维度\",{\"1\":{\"2690\":1,\"2705\":1,\"2720\":1}}],[\"测试是发现问题的最佳方式\",{\"1\":{\"2690\":1,\"2705\":1,\"2720\":1}}],[\"测试\",{\"0\":{\"1934\":1,\"1935\":1,\"1936\":1,\"1937\":1,\"2303\":1,\"2304\":1,\"2305\":1,\"2306\":1,\"2672\":1,\"2673\":1,\"2674\":1,\"2675\":1,\"2690\":1,\"2705\":1,\"2720\":1}}],[\"遵循特殊优先于一般的原则\",{\"1\":{\"1932\":1,\"2301\":1,\"2670\":1}}],[\"到数据库连接\",{\"1\":{\"1930\":1,\"2299\":1,\"2668\":1}}],[\"降级数据库\",{\"1\":{\"1922\":1,\"1926\":1,\"2291\":1,\"2295\":1,\"2660\":1,\"2664\":1}}],[\"卸载插件\",{\"0\":{\"1922\":1,\"2291\":1,\"2660\":1},\"1\":{\"1922\":1,\"2291\":1,\"2660\":1}}],[\"启用后会在参数缺失或触发\",{\"1\":{\"1911\":1,\"2280\":1,\"2649\":1}}],[\"启动检查失败\",{\"1\":{\"2679\":1,\"2694\":1,\"2709\":1}}],[\"启动机器人\",{\"1\":{\"1921\":1,\"2290\":1,\"2659\":1}}],[\"启动驱动框架\",{\"1\":{\"1716\":1,\"2085\":1,\"2464\":1}}],[\"启动和关闭时进行相关操作\",{\"1\":{\"470\":1,\"980\":1,\"1495\":1}}],[\"启动所需函数\",{\"1\":{\"215\":1,\"723\":1,\"1235\":1}}],[\"启动时运行\",{\"1\":{\"127\":1,\"635\":1,\"1145\":1}}],[\"启动准备\",{\"0\":{\"127\":1,\"635\":1,\"1145\":1}}],[\"启动\",{\"1\":{\"64\":1,\"72\":1,\"225\":1,\"572\":1,\"580\":1,\"733\":1,\"1082\":1,\"1090\":1,\"1245\":1,\"1688\":1,\"1762\":1,\"1779\":1,\"2057\":1,\"2131\":1,\"2148\":1,\"2426\":1,\"2500\":1,\"2517\":1}}],[\"插值格式为\",{\"1\":{\"1907\":2,\"2276\":2,\"2645\":2}}],[\"插件命名规范\",{\"1\":{\"1919\":1,\"2288\":1,\"2657\":1}}],[\"插件索引标识\",{\"1\":{\"1850\":1,\"2219\":1,\"2588\":1}}],[\"插件索引名称\",{\"1\":{\"110\":1,\"111\":1,\"618\":1,\"619\":1,\"1128\":1,\"1129\":1}}],[\"插件加载时定义的\",{\"1\":{\"1847\":1,\"2216\":1,\"2585\":1}}],[\"插件额外信息\",{\"1\":{\"1840\":1,\"2209\":1,\"2578\":1}}],[\"插件支持的适配器模块路径\",{\"1\":{\"1839\":1,\"2208\":1,\"2577\":1}}],[\"插件配置项\",{\"1\":{\"1838\":1,\"2207\":1,\"2576\":1}}],[\"插件主页\",{\"1\":{\"1837\":1,\"2206\":1,\"2575\":1}}],[\"插件类型\",{\"1\":{\"1836\":1,\"2205\":1,\"2574\":1}}],[\"插件类别\",{\"1\":{\"110\":1,\"618\":1,\"1128\":1}}],[\"插件功能介绍\",{\"1\":{\"1834\":1,\"2203\":1,\"2572\":1}}],[\"插件元信息\",{\"1\":{\"1832\":1,\"2201\":1,\"2570\":1}}],[\"插件元数据\",{\"0\":{\"110\":1,\"618\":1,\"1128\":1},\"1\":{\"110\":1,\"111\":1,\"618\":1,\"619\":1,\"1128\":1,\"1129\":1}}],[\"插件搜索路径\",{\"1\":{\"1819\":1,\"2188\":1,\"2557\":1}}],[\"插件缺少元数据\",{\"1\":{\"1817\":1,\"2186\":1,\"2555\":1}}],[\"插件未加载\",{\"1\":{\"1817\":1,\"2186\":1,\"2555\":1}}],[\"插件无法加载\",{\"1\":{\"1816\":1,\"2185\":1,\"2554\":1}}],[\"插件标识符\",{\"1\":{\"1803\":1,\"2172\":1,\"2541\":1}}],[\"插件开发提供便携的定义函数\",{\"1\":{\"1801\":1,\"2170\":1,\"2539\":1}}],[\"插件目录应该为相对机器人\",{\"1\":{\"516\":1,\"1026\":1,\"1541\":1}}],[\"插件目录中编写一个响应规则\",{\"1\":{\"424\":1,\"934\":1,\"1449\":1}}],[\"插件文件名或文件夹名\",{\"1\":{\"514\":1,\"1024\":1,\"1539\":1}}],[\"插件内容可以在\",{\"1\":{\"512\":1,\"1022\":1,\"1537\":1}}],[\"插件间应尽量减少耦合\",{\"1\":{\"510\":1,\"1020\":1,\"1535\":1}}],[\"插件即是\",{\"1\":{\"510\":1,\"1020\":1,\"1535\":1}}],[\"插件结构\",{\"0\":{\"510\":1,\"1020\":1,\"1535\":1}}],[\"插件作者名正确展示\",{\"1\":{\"502\":1,\"1012\":1,\"1527\":1}}],[\"插件作者想要修改插件信息时无法便捷的找到操作方式等\",{\"1\":{\"502\":1,\"1012\":1,\"1527\":1}}],[\"插件存储至\",{\"1\":{\"502\":1,\"1012\":1,\"1527\":1}}],[\"插件使用一个\",{\"1\":{\"1930\":1,\"2299\":1,\"2668\":1}}],[\"插件使用方法\",{\"1\":{\"110\":1,\"618\":1,\"1128\":1,\"1835\":1,\"2204\":1,\"2573\":1}}],[\"插件使得官网内容构建正常\",{\"1\":{\"501\":1,\"1011\":1,\"1526\":1}}],[\"插件编写准备\",{\"0\":{\"509\":1,\"1019\":1,\"1534\":1}}],[\"插件编写\",{\"1\":{\"499\":1,\"1009\":1,\"1524\":1}}],[\"插件提供面板服务\",{\"1\":{\"497\":1,\"1007\":1,\"1522\":1}}],[\"插件提供的方法均返回一个\",{\"1\":{\"433\":1,\"943\":1,\"1458\":1}}],[\"插件管理\",{\"1\":{\"493\":1,\"497\":1,\"1003\":1,\"1007\":1,\"1518\":1,\"1522\":1}}],[\"插件管理器\",{\"1\":{\"111\":1,\"619\":1,\"1129\":1,\"1819\":1,\"2188\":1,\"2557\":1}}],[\"插件机制的自动化测试框架\",{\"1\":{\"485\":1,\"995\":1,\"1510\":1}}],[\"插件进行支持\",{\"1\":{\"448\":1,\"958\":1,\"1473\":1}}],[\"插件兼容\",{\"1\":{\"433\":1,\"943\":1,\"1458\":1}}],[\"插件至项目环境中\",{\"1\":{\"432\":1,\"443\":1,\"449\":1,\"942\":1,\"953\":1,\"959\":1,\"1457\":1,\"1468\":1,\"1474\":1}}],[\"插件依赖声明\",{\"0\":{\"117\":1,\"625\":1,\"1135\":1}}],[\"插件跟踪\",{\"0\":{\"116\":1,\"624\":1,\"1134\":1}}],[\"插件化系统的设计使得插件之间可以功能独立\",{\"1\":{\"115\":1,\"623\":1,\"1133\":1}}],[\"插件就会加载\",{\"1\":{\"114\":1,\"622\":1,\"1132\":1}}],[\"插件的开发\",{\"1\":{\"503\":1,\"1013\":1,\"1528\":1}}],[\"插件的低代码编写\",{\"1\":{\"503\":1,\"1013\":1,\"1528\":1}}],[\"插件的数据目录和配置目录是同一个目录\",{\"1\":{\"433\":1,\"943\":1,\"1458\":1}}],[\"插件的子插件集合\",{\"1\":{\"111\":1,\"619\":1,\"1129\":1}}],[\"插件的父插件\",{\"1\":{\"111\":1,\"619\":1,\"1129\":1}}],[\"插件的配置类\",{\"1\":{\"110\":1,\"618\":1,\"1128\":1}}],[\"插件中\",{\"1\":{\"426\":1,\"936\":1,\"1451\":1}}],[\"插件中定义的事件响应器\",{\"1\":{\"111\":1,\"619\":1,\"1129\":1}}],[\"插件中的事件响应器\",{\"1\":{\"110\":1,\"618\":1,\"1128\":1}}],[\"插件对象\",{\"1\":{\"111\":1,\"619\":1,\"1129\":1}}],[\"插件项目主页\",{\"1\":{\"110\":1,\"618\":1,\"1128\":1}}],[\"插件描述\",{\"1\":{\"110\":1,\"618\":1,\"1128\":1}}],[\"插件名称或插件标识符\",{\"1\":{\"1824\":1,\"2193\":1,\"2562\":1}}],[\"插件名称列表\",{\"1\":{\"1815\":1,\"1817\":1,\"2184\":1,\"2186\":1,\"2553\":1,\"2555\":1}}],[\"插件名称\",{\"1\":{\"110\":1,\"113\":1,\"513\":1,\"618\":1,\"621\":1,\"1023\":1,\"1128\":1,\"1131\":1,\"1538\":1,\"1809\":1,\"1814\":1,\"1833\":1,\"1843\":1,\"2178\":1,\"2183\":1,\"2202\":1,\"2212\":1,\"2547\":1,\"2552\":1,\"2571\":1,\"2581\":1}}],[\"插件父子关系等\",{\"1\":{\"110\":1,\"618\":1,\"1128\":1}}],[\"插件模块对象\",{\"1\":{\"1844\":1,\"2213\":1,\"2582\":1}}],[\"插件模块名或插件标识符\",{\"1\":{\"1816\":1,\"2185\":1,\"2554\":1}}],[\"插件模块名称\",{\"1\":{\"110\":1,\"618\":1,\"1128\":1}}],[\"插件模块路径\",{\"1\":{\"111\":1,\"619\":1,\"1129\":1}}],[\"插件模块\",{\"1\":{\"110\":1,\"111\":1,\"514\":1,\"618\":1,\"619\":1,\"1024\":1,\"1128\":1,\"1129\":1,\"1539\":1}}],[\"插件信息\",{\"0\":{\"109\":1,\"617\":1,\"1127\":1}}],[\"插件\",{\"1\":{\"10\":1,\"22\":1,\"34\":1,\"110\":1,\"431\":1,\"442\":1,\"494\":1,\"499\":1,\"504\":1,\"523\":1,\"526\":1,\"618\":1,\"941\":1,\"952\":1,\"1004\":1,\"1009\":1,\"1014\":1,\"1033\":1,\"1036\":1,\"1128\":1,\"1456\":1,\"1467\":1,\"1519\":1,\"1524\":1,\"1529\":1,\"1548\":1,\"1551\":1,\"1921\":1,\"1922\":1,\"2290\":1,\"2291\":1,\"2659\":1,\"2660\":1}}],[\"插件视图搜索并安装\",{\"1\":{\"10\":1,\"22\":1,\"34\":1}}],[\"插件系统通过\",{\"1\":{\"116\":1,\"624\":1,\"1134\":1}}],[\"插件系统内部索引\",{\"1\":{\"110\":1,\"618\":1,\"1128\":1}}],[\"插件系统获取收集到的信息\",{\"1\":{\"110\":1,\"618\":1,\"1128\":1}}],[\"插件系统是\",{\"1\":{\"5\":1,\"17\":1,\"29\":1}}],[\"插件系统\",{\"0\":{\"5\":1,\"17\":1,\"29\":1}}],[\"条目被设置后\",{\"1\":{\"1907\":1,\"2276\":1,\"2645\":1}}],[\"普通情况下使用\",{\"1\":{\"1906\":1,\"2275\":1,\"2644\":1}}],[\"触发\",{\"1\":{\"1905\":1,\"2274\":1,\"2643\":1}}],[\"触发权限更新函数是一个\",{\"1\":{\"140\":1,\"648\":1,\"1158\":1}}],[\"补丁\",{\"1\":{\"1916\":1,\"2285\":1,\"2654\":1}}],[\"补全默认通过\",{\"1\":{\"1905\":1,\"2274\":1,\"2643\":1}}],[\"补充\",{\"1\":{\"489\":1,\"999\":1,\"1514\":1}}],[\"半自动补全为用户提供了推荐后续输入的功能\",{\"1\":{\"1905\":1,\"2274\":1,\"2643\":1}}],[\"半自动补全\",{\"0\":{\"1905\":1,\"2274\":1,\"2643\":1}}],[\"紧凑命令\",{\"0\":{\"1903\":1,\"2272\":1,\"2641\":1}}],[\"绑定一个命令执行器\",{\"1\":{\"1902\":1,\"2271\":1,\"2640\":1}}],[\"张\",{\"1\":{\"1901\":2,\"2270\":2,\"2639\":2}}],[\"涩图1张\",{\"1\":{\"1902\":1,\"2271\":1,\"2640\":1}}],[\"涩图3张\",{\"1\":{\"1901\":1,\"2270\":1,\"2639\":1}}],[\"涩图\",{\"1\":{\"1901\":2,\"1902\":2,\"2270\":2,\"2271\":2,\"2639\":2,\"2640\":2}}],[\"删除数据\",{\"1\":{\"1922\":1,\"2291\":1,\"2660\":1}}],[\"删除成功\",{\"1\":{\"1902\":1,\"2271\":1,\"2640\":1}}],[\"删除快捷指令\",{\"1\":{\"1902\":1,\"2271\":1,\"2640\":1}}],[\"删除\",{\"1\":{\"1900\":1,\"2269\":1,\"2638\":1}}],[\"命名空间名称\",{\"1\":{\"1897\":1,\"2266\":1,\"2635\":1}}],[\"命名空间有以下几个属性\",{\"1\":{\"1897\":1,\"2266\":1,\"2635\":1}}],[\"命名空间\",{\"1\":{\"1897\":1,\"1898\":1,\"2266\":1,\"2267\":1,\"2635\":1,\"2636\":1}}],[\"命名空间配置可修改名称\",{\"1\":{\"1905\":1,\"2274\":1,\"2643\":1}}],[\"命名空间配置\",{\"0\":{\"1897\":1,\"2266\":1,\"2635\":1},\"1\":{\"1897\":1,\"1898\":1,\"2266\":1,\"2267\":1,\"2635\":1,\"2636\":1}}],[\"命令分隔符\",{\"1\":{\"1913\":1,\"2282\":1,\"2651\":1}}],[\"命令前缀\",{\"1\":{\"1910\":1,\"2279\":1,\"2648\":1}}],[\"命令前缀存储\",{\"1\":{\"182\":1,\"690\":1,\"1202\":1}}],[\"命令上下文插值的风格\",{\"1\":{\"1896\":1,\"1897\":1,\"2265\":1,\"2266\":1,\"2634\":1,\"2635\":1}}],[\"命令是否严格匹配\",{\"1\":{\"1896\":1,\"1897\":1,\"2265\":1,\"2266\":1,\"2634\":1,\"2635\":1}}],[\"命令是否允许第一个参数紧随头部\",{\"1\":{\"1896\":1,\"2265\":1,\"2634\":1}}],[\"命令是否对\",{\"1\":{\"1896\":1,\"2265\":1,\"2634\":1}}],[\"命令是否抛出异常\",{\"1\":{\"1896\":1,\"2265\":1,\"2634\":1}}],[\"命令是否开启模糊匹配\",{\"1\":{\"1896\":1,\"2265\":1,\"2634\":1}}],[\"命令所有子命令的解析结果\",{\"1\":{\"1895\":1,\"2264\":1,\"2633\":1}}],[\"命令所有选项的解析结果\",{\"1\":{\"1895\":1,\"2264\":1,\"2633\":1}}],[\"命令名称\",{\"1\":{\"1904\":1,\"2273\":1,\"2642\":1}}],[\"命令名\",{\"1\":{\"1887\":1,\"2256\":1,\"2625\":1}}],[\"命令头部的解析结果\",{\"1\":{\"1895\":1,\"2264\":1,\"2633\":1}}],[\"命令头是指命令的前缀\",{\"1\":{\"1887\":1,\"2256\":1,\"2625\":1}}],[\"命令头\",{\"0\":{\"1887\":1,\"2256\":1,\"2625\":1}}],[\"命令形式匹配\",{\"1\":{\"1865\":1,\"1882\":1,\"2234\":1,\"2251\":1,\"2603\":1,\"2620\":1}}],[\"命令形式的消息\",{\"1\":{\"100\":1,\"608\":1,\"1118\":1}}],[\"命令匹配规则参考\",{\"1\":{\"1865\":1,\"1867\":1,\"1882\":1,\"1884\":1,\"2234\":1,\"2236\":1,\"2251\":1,\"2253\":1,\"2603\":1,\"2605\":1,\"2620\":1,\"2622\":1}}],[\"命令从完整模板创建\",{\"1\":{\"513\":1,\"1023\":1,\"1538\":1}}],[\"命令来运行机器人\",{\"1\":{\"508\":1,\"1018\":1,\"1533\":1}}],[\"命令来检查数据存储路径\",{\"1\":{\"433\":1,\"943\":1,\"1458\":1}}],[\"命令代替\",{\"1\":{\"507\":1,\"1017\":1,\"1532\":1}}],[\"命令行的使用仍具有一定的困难\",{\"1\":{\"497\":1,\"1007\":1,\"1522\":1}}],[\"命令行即时交互通信设计与实现\",{\"0\":{\"494\":1,\"1004\":1,\"1519\":1}}],[\"命令行交互代码编写\",{\"1\":{\"493\":1,\"494\":1,\"1003\":1,\"1004\":1,\"1518\":1,\"1519\":1}}],[\"命令行\",{\"0\":{\"493\":1,\"1003\":1,\"1518\":1}}],[\"命令行工具以及参数\",{\"1\":{\"64\":1,\"72\":1,\"572\":1,\"580\":1,\"1082\":1,\"1090\":1}}],[\"命令就只会在插件启用且在私聊或者\",{\"1\":{\"426\":1,\"936\":1,\"1451\":1}}],[\"命令添加了一个\",{\"1\":{\"423\":1,\"933\":1,\"1448\":1}}],[\"命令参数解析器\",{\"1\":{\"362\":1,\"870\":1,\"1385\":1}}],[\"命令参数存储\",{\"1\":{\"185\":1,\"693\":1,\"1205\":1}}],[\"命令内容与后续消息间无需空格\",{\"1\":{\"361\":1,\"365\":1,\"869\":1,\"873\":1,\"1384\":1,\"1388\":1}}],[\"命令文本或命令元组\",{\"1\":{\"361\":1,\"365\":1,\"869\":1,\"873\":1,\"1384\":1,\"1388\":1}}],[\"命令文本存储\",{\"1\":{\"184\":1,\"692\":1,\"1204\":1}}],[\"命令原始参数列表\",{\"1\":{\"317\":1,\"825\":1,\"1338\":1}}],[\"命令原始参数列表存储\",{\"1\":{\"189\":1,\"697\":1,\"1209\":1}}],[\"命令与参数间空白符存储\",{\"1\":{\"187\":1,\"695\":1,\"1207\":1}}],[\"命令开头存储\",{\"1\":{\"186\":1,\"694\":1,\"1206\":1}}],[\"命令元组存储\",{\"1\":{\"183\":1,\"691\":1,\"1203\":1}}],[\"命令的含义\",{\"1\":{\"1923\":1,\"2292\":1,\"2661\":1}}],[\"命令的自定义额外信息\",{\"1\":{\"1896\":1,\"2265\":1,\"2634\":1}}],[\"命令的快捷指令是否在\",{\"1\":{\"1896\":1,\"2265\":1,\"2634\":1}}],[\"命令的作者\",{\"1\":{\"1896\":1,\"2265\":1,\"2634\":1}}],[\"命令的使用样例\",{\"1\":{\"1896\":1,\"2265\":1,\"2634\":1}}],[\"命令的用法\",{\"1\":{\"1896\":1,\"2265\":1,\"2634\":1}}],[\"命令的描述\",{\"1\":{\"1896\":1,\"2265\":1,\"2634\":1}}],[\"命令的主参数的解析结果\",{\"1\":{\"1895\":1,\"2264\":1,\"2633\":1}}],[\"命令的分隔标记\",{\"1\":{\"174\":1,\"682\":1,\"1192\":1}}],[\"命令的起始标记\",{\"1\":{\"173\":1,\"681\":1,\"1191\":1}}],[\"命令创建插件时\",{\"1\":{\"113\":1,\"621\":1,\"1131\":1}}],[\"命令解析时是否保留换行字符\",{\"1\":{\"1896\":1,\"2265\":1,\"2634\":1}}],[\"命令解析后的参数字典\",{\"1\":{\"316\":1,\"824\":1,\"1337\":1}}],[\"命令解析后的结果可以通过\",{\"1\":{\"99\":1,\"607\":1,\"1117\":1}}],[\"命令解析拓展\",{\"1\":{\"108\":1,\"616\":1,\"1126\":1,\"2725\":1,\"2732\":1,\"2739\":1}}],[\"命令\",{\"1\":{\"105\":2,\"188\":1,\"361\":2,\"364\":1,\"613\":2,\"696\":1,\"869\":2,\"872\":1,\"1123\":2,\"1208\":1,\"1384\":2,\"1387\":1,\"1871\":1,\"2240\":1,\"2609\":1}}],[\"命令别名\",{\"1\":{\"105\":1,\"613\":1,\"1123\":1,\"1865\":1,\"1866\":1,\"1870\":1,\"1871\":1,\"1882\":1,\"1883\":1,\"2234\":1,\"2235\":1,\"2239\":1,\"2240\":1,\"2251\":1,\"2252\":1,\"2603\":1,\"2604\":1,\"2608\":1,\"2609\":1,\"2620\":1,\"2621\":1}}],[\"命令并且带有\",{\"1\":{\"100\":1,\"608\":1,\"1118\":1}}],[\"隐藏\",{\"1\":{\"1896\":1,\"2265\":1,\"2634\":1}}],[\"隐藏该事件日志\",{\"1\":{\"1583\":1,\"1952\":1,\"2333\":1}}],[\"隐藏该事件日志时\",{\"1\":{\"1583\":1,\"1952\":1,\"2333\":1}}],[\"键对应的值\",{\"1\":{\"1895\":1,\"2264\":1,\"2633\":1}}],[\"查询数据\",{\"0\":{\"2686\":1,\"2701\":1,\"2716\":1}}],[\"查询数据库\",{\"1\":{\"2680\":1,\"2695\":1,\"2710\":1}}],[\"查看有什么插件使用到了数据库\",{\"1\":{\"1921\":1,\"1922\":1,\"2290\":1,\"2291\":1,\"2659\":1,\"2660\":1}}],[\"查找参数并返回\",{\"1\":{\"1895\":1,\"2264\":1,\"2633\":1}}],[\"查天气\",{\"1\":{\"426\":1,\"527\":2,\"936\":1,\"1037\":2,\"1451\":1,\"1552\":2}}],[\"原来是我们定义了模型\",{\"1\":{\"2679\":1,\"2694\":1,\"2709\":1}}],[\"原始命令\",{\"1\":{\"1895\":1,\"2264\":1,\"2633\":1}}],[\"原本正常运行的代码报错\",{\"1\":{\"64\":1,\"572\":1,\"1082\":1}}],[\"承载的解析结果\",{\"1\":{\"1895\":1,\"2264\":1,\"2633\":1}}],[\"计数器加一\",{\"1\":{\"1894\":1,\"2263\":1,\"2632\":1}}],[\"计算指定消息段的个数\",{\"1\":{\"1610\":1,\"1979\":1,\"2348\":1}}],[\"因为很显然\",{\"1\":{\"2690\":1,\"2705\":1,\"2720\":1}}],[\"因为语句可能没有返回值\",{\"1\":{\"2688\":1,\"2703\":1,\"2718\":1}}],[\"因为先前的\",{\"1\":{\"2680\":1,\"2695\":1,\"2710\":1}}],[\"因为模型只是数据结构的定义\",{\"1\":{\"2680\":1,\"2695\":1,\"2710\":1}}],[\"因为这可能会导致不同插件间的表名重复\",{\"1\":{\"2678\":1,\"2693\":1,\"2708\":1}}],[\"因为foo\",{\"1\":{\"1893\":1,\"2262\":1,\"2631\":1}}],[\"因此会替换为\",{\"1\":{\"1890\":1,\"2259\":1,\"2628\":1}}],[\"因此会话更新后的默认触发权限为当前事件的会话\",{\"1\":{\"140\":1,\"648\":1,\"1158\":1}}],[\"因此会话更新后的默认响应事件类型为\",{\"1\":{\"139\":1,\"647\":1,\"1157\":1}}],[\"因此请使用上述的\",{\"1\":{\"543\":1,\"1053\":1,\"1568\":1}}],[\"因此可以使用\",{\"1\":{\"538\":1,\"1048\":1,\"1563\":1}}],[\"因此你需要参考协议适配器的文档并导入对应的消息段后才能使用其特殊的消息类型\",{\"1\":{\"531\":1,\"1041\":1,\"1556\":1}}],[\"因此我们推荐使用\",{\"1\":{\"2690\":1,\"2705\":1,\"2720\":1}}],[\"因此我们无法使用平台特有的消息类型\",{\"1\":{\"531\":1,\"1041\":1,\"1556\":1}}],[\"因此我们希望为\",{\"1\":{\"486\":1,\"487\":1,\"996\":1,\"997\":1,\"1511\":1,\"1512\":1}}],[\"因此我们可以使用\",{\"1\":{\"466\":1,\"976\":1,\"1491\":1}}],[\"因此我们需要使用调用平台\",{\"1\":{\"452\":1,\"962\":1,\"1477\":1}}],[\"因此我们不能在\",{\"1\":{\"116\":1,\"624\":1,\"1134\":1}}],[\"因此其任务函数无法同事件处理函数一样通过依赖注入获取上下文信息\",{\"1\":{\"452\":1,\"962\":1,\"1477\":1}}],[\"因此其使用方式与\",{\"1\":{\"450\":1,\"960\":1,\"1475\":1}}],[\"因此需要在使用前对其进行加载并导入其中的\",{\"1\":{\"451\":1,\"961\":1,\"1476\":1}}],[\"因此开发环境中\",{\"1\":{\"446\":1,\"956\":1,\"1471\":1}}],[\"因此在使用时需要注意避免文件名冲突\",{\"1\":{\"433\":1,\"943\":1,\"1458\":1}}],[\"因此不要使用\",{\"1\":{\"429\":1,\"939\":1,\"1454\":1}}],[\"因此应该在所有其他注入参数之后使用\",{\"1\":{\"304\":1,\"812\":1,\"1321\":1}}],[\"因此应该在其他参数之前检查\",{\"1\":{\"302\":1,\"810\":1,\"1322\":1}}],[\"因此\",{\"1\":{\"54\":1,\"81\":1,\"110\":1,\"422\":1,\"497\":1,\"499\":1,\"525\":1,\"530\":1,\"537\":1,\"562\":1,\"589\":1,\"618\":1,\"932\":1,\"1007\":1,\"1009\":1,\"1035\":1,\"1040\":1,\"1047\":1,\"1072\":1,\"1099\":1,\"1128\":1,\"1447\":1,\"1522\":1,\"1524\":1,\"1550\":1,\"1555\":1,\"1562\":1}}],[\"几类特殊的传入标记\",{\"1\":{\"1890\":1,\"2259\":1,\"2628\":1}}],[\"样式的字符串\",{\"1\":{\"1890\":1,\"2259\":1,\"2628\":1}}],[\"错误\",{\"1\":{\"1889\":1,\"2258\":1,\"2627\":1}}],[\"错误跟踪通常在生产环境中使用\",{\"1\":{\"446\":1,\"956\":1,\"1471\":1}}],[\"错误跟踪\",{\"0\":{\"442\":1,\"952\":1,\"1467\":1}}],[\"另外\",{\"1\":{\"1889\":1,\"2258\":1,\"2627\":1}}],[\"另外建议编写适配器文档或者一些插件开发示例\",{\"1\":{\"479\":1,\"989\":1,\"1504\":1}}],[\"占位符\",{\"1\":{\"1887\":1,\"2256\":1,\"2625\":1}}],[\"⇔\",{\"1\":{\"1887\":4,\"2256\":4,\"2625\":4}}],[\"声明匹配类型\",{\"1\":{\"1887\":1,\"2256\":1,\"2625\":1}}],[\"声明依赖插件\",{\"1\":{\"1816\":1,\"2185\":1,\"2554\":1}}],[\"写法\",{\"1\":{\"1887\":1,\"2256\":1,\"2625\":1}}],[\"写入文件内容\",{\"1\":{\"433\":1,\"943\":1,\"1458\":1}}],[\"里的\",{\"1\":{\"1887\":1,\"2256\":1,\"2625\":1}}],[\"称为\",{\"1\":{\"1887\":1,\"2256\":1,\"2625\":1}}],[\"转为\",{\"1\":{\"1887\":1,\"1890\":2,\"2256\":1,\"2259\":2,\"2625\":1,\"2628\":2}}],[\"转换平台\",{\"1\":{\"473\":1,\"983\":1,\"1498\":1}}],[\"转换\",{\"0\":{\"473\":1,\"983\":1,\"1498\":1}}],[\"转换路径为模块名\",{\"1\":{\"410\":1,\"920\":1,\"1435\":1}}],[\"混合头\",{\"1\":{\"1887\":1,\"2256\":1,\"2625\":1}}],[\"混入驱动类型名称\",{\"1\":{\"1708\":1,\"2077\":1,\"2477\":1}}],[\"元数据一定使用\",{\"1\":{\"1896\":1,\"2265\":1,\"2634\":1}}],[\"元数据\",{\"0\":{\"1896\":1,\"2265\":1,\"2634\":1}}],[\"元素头\",{\"1\":{\"1887\":1,\"2256\":1,\"2625\":1}}],[\"元组\",{\"1\":{\"320\":1,\"330\":1,\"367\":1,\"828\":1,\"838\":1,\"875\":1,\"1341\":1,\"1356\":1,\"1390\":1}}],[\"纯文字头\",{\"1\":{\"1887\":1,\"2256\":1,\"2625\":1}}],[\"纯文本形式的格式化\",{\"1\":{\"543\":1,\"1053\":1,\"1568\":1}}],[\"纯文本字符串\",{\"1\":{\"367\":1,\"875\":1,\"1390\":1}}],[\"纯文本消息参数\",{\"1\":{\"309\":1,\"817\":1,\"1330\":1}}],[\"隶属于\",{\"1\":{\"1886\":1,\"2255\":1,\"2624\":1}}],[\"点分割模块路径\",{\"1\":{\"1845\":1,\"2214\":1,\"2583\":1}}],[\"点击发布适配器按钮\",{\"1\":{\"479\":1,\"989\":1,\"1504\":1}}],[\"点击下方链接直达\",{\"1\":{\"457\":2,\"967\":2,\"1482\":2}}],[\"点击下方链接前往\",{\"1\":{\"457\":1,\"967\":1,\"1482\":1}}],[\"点击左下角\",{\"1\":{\"11\":1,\"23\":1,\"35\":1}}],[\"表现与\",{\"1\":{\"1894\":1,\"2263\":1,\"2632\":1}}],[\"表示第\",{\"1\":{\"1902\":1,\"2271\":1,\"2640\":1}}],[\"表示此处填入可能的正则匹配的组\",{\"1\":{\"1902\":1,\"2271\":1,\"2640\":1}}],[\"表示此处填入所有后随参数\",{\"1\":{\"1902\":1,\"2271\":1,\"2640\":1}}],[\"表示此处填入快捷指令后随的第\",{\"1\":{\"1902\":1,\"2271\":1,\"2640\":1}}],[\"表示默认值为空值\",{\"1\":{\"1892\":1,\"2261\":1,\"2630\":1}}],[\"表示\",{\"1\":{\"1890\":1,\"1902\":1,\"2259\":1,\"2271\":1,\"2628\":1,\"2640\":1}}],[\"表示支持所有适配器\",{\"1\":{\"1839\":1,\"2208\":1,\"2577\":1}}],[\"表达式头\",{\"1\":{\"1887\":1,\"2256\":1,\"2625\":1}}],[\"表述\",{\"1\":{\"482\":1,\"992\":1,\"1507\":1}}],[\"独立插件模块名集合\",{\"1\":{\"1819\":1,\"2188\":1,\"2557\":1}}],[\"名字\",{\"1\":{\"1902\":1,\"2271\":1,\"2640\":1}}],[\"名\",{\"1\":{\"1803\":2,\"2172\":2,\"2541\":2}}],[\"名称作为插件名称\",{\"1\":{\"1843\":1,\"2212\":1,\"2581\":1}}],[\"名称\",{\"1\":{\"1575\":1,\"1577\":1,\"1578\":1,\"1944\":1,\"1946\":1,\"1947\":1,\"2325\":1,\"2327\":1,\"2328\":1}}],[\"夹\",{\"1\":{\"1803\":2,\"2172\":2,\"2541\":2}}],[\"强制退出\",{\"1\":{\"1763\":1,\"2132\":1,\"2501\":1}}],[\"强制切换到\",{\"1\":{\"64\":1,\"572\":1,\"1082\":1}}],[\"退出\",{\"1\":{\"1763\":1,\"2132\":1,\"2501\":1}}],[\"环境名称\",{\"1\":{\"1710\":1,\"2079\":1,\"2458\":1}}],[\"环境变量\",{\"1\":{\"163\":1,\"671\":1,\"1181\":1}}],[\"地址\",{\"1\":{\"1671\":1,\"1672\":1,\"1673\":1,\"2040\":1,\"2041\":1,\"2042\":1,\"2409\":1,\"2410\":1,\"2411\":1}}],[\"驱动\",{\"1\":{\"1731\":1,\"1732\":1,\"2100\":1,\"2101\":1,\"2446\":1,\"2447\":1}}],[\"驱动专属\",{\"1\":{\"1715\":1,\"2084\":1,\"2463\":1}}],[\"驱动类型名称\",{\"1\":{\"1714\":1,\"2083\":1,\"2462\":1}}],[\"驱动名称\",{\"1\":{\"1682\":1,\"1760\":1,\"1773\":1,\"2051\":1,\"2129\":1,\"2142\":1,\"2420\":1,\"2498\":1,\"2511\":1}}],[\"驱动框架\",{\"1\":{\"1681\":1,\"1759\":1,\"1772\":1,\"2050\":1,\"2128\":1,\"2141\":1,\"2419\":1,\"2497\":1,\"2510\":1}}],[\"驱动框架设置\",{\"1\":{\"1670\":1,\"1765\":1,\"2039\":1,\"2134\":1,\"2408\":1,\"2503\":1}}],[\"驱动适配\",{\"1\":{\"1669\":1,\"1697\":1,\"1758\":1,\"1764\":1,\"1788\":1,\"2038\":1,\"2066\":1,\"2127\":1,\"2133\":1,\"2157\":1,\"2407\":1,\"2435\":1,\"2496\":1,\"2502\":1,\"2526\":1}}],[\"驱动适配器\",{\"1\":{\"1651\":1,\"2020\":1,\"2389\":1}}],[\"驱动器提供了多种方法来帮助适配器进行网络通信\",{\"1\":{\"1933\":1,\"2302\":1,\"2671\":1}}],[\"驱动器控制框架的启动和停止\",{\"1\":{\"1709\":1,\"2078\":1,\"2457\":1}}],[\"驱动器基类\",{\"1\":{\"1709\":1,\"2078\":1,\"2457\":1}}],[\"驱动器商店\",{\"1\":{\"505\":1,\"1015\":1,\"1530\":1}}],[\"驱动器包名可以在\",{\"1\":{\"505\":1,\"1015\":1,\"1530\":1}}],[\"驱动器添加路由规则\",{\"1\":{\"118\":1,\"626\":1,\"1136\":1}}],[\"驱动器配置格式采用特殊语法\",{\"1\":{\"54\":1,\"562\":1,\"1072\":1}}],[\"驱动器的上层\",{\"1\":{\"523\":1,\"1033\":1,\"1548\":1}}],[\"驱动器的配置方法已经在配置章节中简单进行了介绍\",{\"1\":{\"54\":1,\"562\":1,\"1072\":1}}],[\"驱动器的选择通常与机器人所使用的协议适配器相关\",{\"1\":{\"52\":1,\"560\":1,\"1070\":1}}],[\"驱动器类型大体上可以分为两种\",{\"1\":{\"53\":1,\"561\":1,\"1071\":1}}],[\"驱动器类型\",{\"0\":{\"53\":1,\"561\":1,\"1071\":1}}],[\"驱动器\",{\"1\":{\"52\":1,\"494\":2,\"523\":1,\"560\":1,\"1004\":2,\"1033\":1,\"1070\":1,\"1519\":2,\"1548\":1}}],[\"允许的参数类型\",{\"1\":{\"1641\":1,\"2010\":1,\"2379\":1}}],[\"匿名参数列表\",{\"1\":{\"1641\":1,\"2010\":1,\"2379\":1}}],[\"新数据库会话\",{\"1\":{\"2684\":1,\"2699\":1,\"2714\":1}}],[\"新建命名空间并替换\",{\"0\":{\"1898\":1,\"2267\":1,\"2636\":1}}],[\"新参数将会覆盖命令组默认值\",{\"1\":{\"1870\":1,\"1871\":1,\"2239\":1,\"2240\":1,\"2608\":1,\"2609\":1}}],[\"新构造的消息\",{\"1\":{\"1616\":1,\"1617\":1,\"1985\":1,\"1986\":1,\"2354\":1,\"2355\":1}}],[\"新的事件响应器类\",{\"1\":{\"242\":1,\"750\":1,\"1263\":1}}],[\"第一个例子中传入\",{\"1\":{\"1902\":1,\"2271\":1,\"2640\":1}}],[\"第二个参数为\",{\"1\":{\"1900\":1,\"2269\":1,\"2638\":1}}],[\"第\",{\"1\":{\"1605\":1,\"1974\":1,\"2343\":1}}],[\"第三方插件\",{\"1\":{\"507\":1,\"1017\":1,\"1532\":1}}],[\"第三方库\",{\"1\":{\"448\":1,\"958\":1,\"1473\":1}}],[\"第三方响应规则\",{\"0\":{\"107\":1,\"615\":1,\"1125\":1}}],[\"个匹配组的内容\",{\"1\":{\"1902\":1,\"2271\":1,\"2640\":1}}],[\"个参数\",{\"1\":{\"1902\":1,\"2271\":1,\"2640\":1}}],[\"个数\",{\"1\":{\"1610\":1,\"1979\":1,\"2348\":1}}],[\"个消息段\",{\"1\":{\"1605\":1,\"1974\":1,\"2343\":1}}],[\"个\",{\"1\":{\"1605\":1,\"1974\":1,\"2343\":1}}],[\"个套接字\",{\"1\":{\"64\":1,\"572\":1,\"1082\":1}}],[\"大致相同\",{\"1\":{\"1602\":1,\"1971\":1,\"2340\":1}}],[\"大小写不敏感\",{\"1\":{\"163\":1,\"165\":1,\"671\":1,\"673\":1,\"1181\":1,\"1183\":1}}],[\"告知\",{\"1\":{\"1594\":1,\"1595\":1,\"1963\":1,\"1964\":1,\"2313\":1,\"2314\":1}}],[\"希望\",{\"1\":{\"1583\":1,\"1952\":1,\"2333\":1}}],[\"希望能在\",{\"1\":{\"486\":1,\"487\":1,\"996\":1,\"997\":1,\"1511\":1,\"1512\":1}}],[\"预处理\",{\"1\":{\"1577\":1,\"1946\":1,\"2327\":1}}],[\"越小越优先\",{\"1\":{\"1037\":1,\"1552\":1}}],[\"越先被触发\",{\"1\":{\"89\":1,\"597\":1,\"1107\":1}}],[\"深拷贝消息\",{\"1\":{\"1615\":1,\"1984\":1,\"2353\":1}}],[\"深入\",{\"1\":{\"602\":1,\"1112\":1}}],[\"深度更新合并字典\",{\"1\":{\"399\":1,\"907\":1,\"1422\":1}}],[\"构造需要的参数说明如下\",{\"1\":{\"1892\":1,\"2261\":1,\"2630\":1}}],[\"构造消息数组\",{\"1\":{\"1604\":1,\"1973\":1,\"2342\":1}}],[\"构造消息序列\",{\"0\":{\"533\":1,\"1043\":1,\"1558\":1}}],[\"构建的新消息\",{\"1\":{\"1609\":1,\"1978\":1,\"2347\":1}}],[\"构建模板的效果是一样的\",{\"1\":{\"543\":1,\"1053\":1,\"1568\":1}}],[\"构建消息模板时\",{\"1\":{\"543\":1,\"1053\":1,\"1568\":1}}],[\"构建消息模板\",{\"1\":{\"543\":1,\"1053\":1,\"1568\":1}}],[\"总是可以参考python\",{\"1\":{\"543\":1,\"1053\":1,\"1568\":1}}],[\"极为相近\",{\"1\":{\"543\":1,\"1053\":1,\"1568\":1}}],[\"客制化\",{\"1\":{\"543\":1,\"1053\":1,\"1568\":1}}],[\"客户端混入基类\",{\"1\":{\"1746\":1,\"1751\":1,\"1755\":1,\"2115\":1,\"2120\":1,\"2124\":1,\"2470\":1,\"2471\":1,\"2492\":1}}],[\"客户端连接请求\",{\"1\":{\"1599\":1,\"1968\":1,\"2318\":1}}],[\"客户端连接等情形\",{\"1\":{\"53\":1,\"561\":1,\"1071\":1}}],[\"客户端请求\",{\"1\":{\"1598\":1,\"1967\":1,\"2317\":1}}],[\"客户端\",{\"0\":{\"1936\":1,\"1937\":1,\"2305\":1,\"2306\":1,\"2674\":1,\"2675\":1},\"1\":{\"471\":1,\"523\":1,\"981\":1,\"1033\":1,\"1496\":1,\"1548\":1,\"1933\":2,\"2302\":2,\"2671\":2}}],[\"客户端通信方式\",{\"0\":{\"470\":1,\"980\":1,\"1495\":1}}],[\"客户端驱动器\",{\"1\":{\"78\":1,\"79\":1,\"80\":1,\"586\":1,\"587\":1,\"588\":1,\"1096\":1,\"1097\":1,\"1098\":1}}],[\"客户端驱动器模块中还会提供一个\",{\"1\":{\"54\":1,\"562\":1,\"1072\":1}}],[\"客户端型驱动器可以分为以下两种\",{\"1\":{\"53\":1,\"561\":1,\"1071\":1}}],[\"多行富文本编排\",{\"1\":{\"543\":1,\"1053\":1,\"1568\":1}}],[\"多用户同时参与的会话\",{\"1\":{\"140\":1,\"648\":1,\"1158\":1}}],[\"多用于使用\",{\"1\":{\"53\":2,\"561\":2,\"1071\":2}}],[\"扩展\",{\"1\":{\"542\":1,\"1052\":1,\"1567\":1}}],[\"附加\",{\"1\":{\"542\":1,\"1052\":1,\"1567\":1}}],[\"附有适当的图片指引\",{\"1\":{\"495\":1,\"1005\":1,\"1520\":1}}],[\"拼接一个消息数组或多个消息段到消息数组末尾\",{\"1\":{\"1613\":1,\"1982\":1,\"2351\":1}}],[\"拼接消息\",{\"0\":{\"542\":1,\"1052\":1,\"1567\":1}}],[\"拼接等\",{\"1\":{\"530\":1,\"1040\":1,\"1555\":1}}],[\"切片\",{\"1\":{\"541\":1,\"1051\":1,\"1566\":1,\"1605\":1,\"1974\":1,\"2343\":1}}],[\"切片的基础上\",{\"1\":{\"541\":1,\"1051\":1,\"1566\":1}}],[\"切换到适配器页签\",{\"1\":{\"479\":1,\"989\":1,\"1504\":1}}],[\"比较\",{\"0\":{\"539\":1,\"1049\":1,\"1564\":1}}],[\"比如\",{\"1\":{\"7\":1,\"19\":1,\"31\":1,\"139\":1,\"647\":1,\"1157\":1}}],[\"循环遍历消息段\",{\"1\":{\"538\":1,\"1048\":1,\"1563\":1}}],[\"遍历\",{\"0\":{\"538\":1,\"1048\":1,\"1563\":1}}],[\"既可以使用\",{\"1\":{\"533\":1,\"1043\":1,\"1558\":1}}],[\"既然事件是基类的子类型\",{\"1\":{\"421\":1,\"931\":1,\"1446\":1}}],[\"既然驱动器可以作为服务端运行\",{\"1\":{\"118\":1,\"626\":1,\"1136\":1}}],[\"抽象基类\",{\"1\":{\"531\":1,\"1041\":1,\"1556\":1}}],[\"抽象类\",{\"1\":{\"82\":1,\"590\":1,\"1100\":1}}],[\"抽象类继承自\",{\"1\":{\"82\":1,\"590\":1,\"1100\":1}}],[\"绝大多数的平台都有着独特的消息类型\",{\"1\":{\"531\":1,\"1041\":1,\"1556\":1}}],[\"认识消息类型\",{\"0\":{\"529\":1,\"1039\":1,\"1554\":1}}],[\"都需要执行此命令\",{\"1\":{\"1925\":1,\"2294\":1,\"2663\":1}}],[\"都采用消息序列的形式进行处理\",{\"1\":{\"528\":1,\"1038\":1,\"1553\":1}}],[\"都要在内部继承自这个\",{\"1\":{\"208\":1,\"716\":1,\"1228\":1}}],[\"辅助函数来创建一个事件响应器\",{\"1\":{\"526\":1,\"1036\":1,\"1551\":1}}],[\"辅助函数以\",{\"1\":{\"525\":1,\"1035\":1,\"1550\":1}}],[\"辅助函数\",{\"1\":{\"525\":1,\"1035\":1,\"1550\":1}}],[\"辅助用户更好的上手项目以及进行开发\",{\"1\":{\"495\":1,\"1005\":1,\"1520\":1}}],[\"辅助用户更好地上手项目以及进行开发\",{\"1\":{\"493\":1,\"1003\":1,\"1518\":1}}],[\"互相搭配\",{\"1\":{\"523\":1,\"1033\":1,\"1548\":1}}],[\"操作系统的消息格式相互转换\",{\"1\":{\"523\":1,\"1033\":1,\"1548\":1}}],[\"操作失败\",{\"1\":{\"212\":1,\"720\":1,\"1232\":1}}],[\"稍后的文档中将会使用到这些概念\",{\"1\":{\"523\":1,\"1033\":1,\"1548\":1}}],[\"8\",{\"1\":{\"518\":1,\"519\":1,\"1028\":1,\"1029\":1,\"1543\":1,\"1544\":1}}],[\"8601\",{\"1\":{\"175\":1,\"683\":1,\"1193\":1}}],[\"变种\",{\"1\":{\"518\":1,\"519\":1,\"1028\":1,\"1029\":1,\"1543\":1,\"1544\":1}}],[\"管理插件\",{\"1\":{\"514\":1,\"1024\":1,\"1539\":1}}],[\"取消注释或者添加如下代码\",{\"1\":{\"513\":1,\"1023\":1,\"1538\":1}}],[\"包含尚未加载的插件\",{\"1\":{\"1806\":1,\"2175\":1,\"2544\":1}}],[\"包含配置信息的\",{\"1\":{\"1709\":1,\"2078\":1,\"2457\":1}}],[\"包含环境信息的\",{\"1\":{\"1709\":1,\"2078\":1,\"2457\":1}}],[\"包含的消息段类型\",{\"1\":{\"1616\":1,\"1985\":1,\"2354\":1}}],[\"包含图片\",{\"1\":{\"543\":1,\"1053\":1,\"1568\":1}}],[\"包\",{\"1\":{\"512\":1,\"1022\":1,\"1537\":1}}],[\"包插件\",{\"0\":{\"512\":1,\"1022\":1,\"1537\":1}}],[\"包括原始头部\",{\"1\":{\"1895\":1,\"2264\":1,\"2633\":1}}],[\"包括事件响应与消息处理等\",{\"1\":{\"503\":1,\"1013\":1,\"1528\":1}}],[\"包括\",{\"1\":{\"490\":1,\"491\":1,\"1000\":1,\"1001\":1,\"1515\":1,\"1516\":1}}],[\"包括插件的索引名称\",{\"1\":{\"110\":1,\"618\":1,\"1128\":1}}],[\"包括但不限于\",{\"1\":{\"64\":1,\"572\":1,\"1082\":1}}],[\"尽管它还什么都没做\",{\"1\":{\"511\":1,\"1021\":1,\"1536\":1}}],[\"你并不知道其他插件会不会使用相同的表名\",{\"1\":{\"2678\":1,\"2693\":1,\"2708\":1}}],[\"你也可以通过指定\",{\"1\":{\"2678\":1,\"2693\":1,\"2708\":1}}],[\"你也可以使用\",{\"1\":{\"1018\":1,\"1533\":1}}],[\"你将会对使用\",{\"1\":{\"2676\":1,\"2691\":1,\"2706\":1}}],[\"你还可以使用config来管理所有命名空间并切换至任意命名空间\",{\"1\":{\"1898\":1,\"2267\":1,\"2636\":1}}],[\"你应该使用\",{\"1\":{\"1889\":1,\"2258\":1,\"2627\":1}}],[\"你需要确保你使用的消息序列类型与你所要发送的平台类型一致\",{\"1\":{\"532\":1,\"1042\":1,\"1557\":1}}],[\"你需要导入对应的协议适配器中的消息序列和消息段后才能使用其特殊的工厂方法\",{\"1\":{\"531\":1,\"1041\":1,\"1556\":1}}],[\"你仍可以使用\",{\"1\":{\"508\":1,\"1018\":1,\"1533\":1}}],[\"你可以不传入\",{\"1\":{\"1890\":1,\"2259\":1,\"2628\":1}}],[\"你可以在\",{\"1\":{\"114\":1,\"622\":1,\"1132\":1}}],[\"你可以通过直接继承\",{\"1\":{\"84\":1,\"592\":1,\"1102\":1}}],[\"你可能就需要考虑相关库对事件循环的支持\",{\"1\":{\"64\":1,\"572\":1,\"1082\":1}}],[\"解释器运行入口文件\",{\"1\":{\"508\":1,\"1018\":1,\"1533\":1}}],[\"解析失败时的异常内容\",{\"1\":{\"1895\":1,\"2264\":1,\"2633\":1}}],[\"解析失败时剩余的数据\",{\"1\":{\"1895\":1,\"2264\":1,\"2633\":1}}],[\"解析结果与可能的正则匹配组\",{\"1\":{\"1895\":1,\"2264\":1,\"2633\":1}}],[\"解析结果\",{\"0\":{\"1895\":1,\"2264\":1,\"2633\":1}}],[\"解析后头部\",{\"1\":{\"1895\":1,\"2264\":1,\"2633\":1}}],[\"解析后\",{\"1\":{\"1887\":1,\"2256\":1,\"2625\":1}}],[\"解析参数的命令消息事件响应器\",{\"1\":{\"1866\":1,\"1883\":1,\"2235\":1,\"2252\":1,\"2604\":1,\"2621\":1}}],[\"解析并导入点分表示法的对象\",{\"1\":{\"411\":1,\"921\":1,\"1436\":1}}],[\"解析出错时不会退出程序\",{\"1\":{\"362\":1,\"870\":1,\"1385\":1}}],[\"避免重复命名\",{\"1\":{\"507\":1,\"1017\":1,\"1532\":1}}],[\"顾名思义\",{\"1\":{\"507\":1,\"531\":1,\"1017\":1,\"1041\":1,\"1532\":1,\"1556\":1}}],[\"监听的端口\",{\"1\":{\"506\":1,\"1016\":1,\"1531\":1}}],[\"监听的\",{\"1\":{\"506\":1,\"1016\":1,\"1531\":1}}],[\"复杂类型数据需使用\",{\"1\":{\"506\":1,\"1016\":1,\"1531\":1}}],[\"复制其中的\",{\"1\":{\"445\":1,\"955\":1,\"1470\":1}}],[\"入口文件不会被创建\",{\"1\":{\"507\":1,\"1017\":1,\"1532\":1}}],[\"入口文件需要完成框架的初始化\",{\"1\":{\"507\":1,\"1017\":1,\"1532\":1}}],[\"入口文件\",{\"1\":{\"504\":1,\"507\":1,\"515\":1,\"516\":1,\"1014\":1,\"1017\":1,\"1025\":1,\"1026\":1,\"1529\":1,\"1532\":1,\"1540\":1,\"1541\":1}}],[\"入口文件调用\",{\"1\":{\"215\":1,\"723\":1,\"1235\":1}}],[\"网络请求等常用功能\",{\"1\":{\"503\":1,\"1013\":1,\"1528\":1}}],[\"集成\",{\"1\":{\"503\":1,\"1013\":1,\"1528\":1}}],[\"生态组件\",{\"1\":{\"503\":1,\"1013\":1,\"1528\":1}}],[\"生态的成长\",{\"1\":{\"503\":1,\"1013\":1,\"1528\":1}}],[\"生态中就有一类插件\",{\"1\":{\"115\":1,\"623\":1,\"1133\":1}}],[\"经过深入分析社区反馈\",{\"1\":{\"503\":1,\"1013\":1,\"1528\":1}}],[\"状态\",{\"1\":{\"502\":1,\"1012\":1,\"1527\":1}}],[\"状态码\",{\"1\":{\"471\":1,\"981\":1,\"1496\":1}}],[\"整合现有\",{\"1\":{\"502\":1,\"1012\":1,\"1527\":1}}],[\"缺少统计相关信息以帮助商店更好的展示当前插件状态\",{\"1\":{\"502\":1,\"1012\":1,\"1527\":1}}],[\"跟进插件新版本情况等\",{\"1\":{\"502\":1,\"1012\":1,\"1527\":1}}],[\"跟踪插件前进行模块\",{\"1\":{\"116\":1,\"624\":1,\"1134\":1}}],[\"索引消息段\",{\"1\":{\"1608\":1,\"1977\":1,\"2346\":1}}],[\"索引\",{\"1\":{\"530\":1,\"541\":1,\"1040\":1,\"1051\":1,\"1555\":1,\"1566\":1,\"1605\":1,\"1608\":1,\"1974\":1,\"1977\":1,\"2343\":1,\"2346\":1}}],[\"索引原理等\",{\"1\":{\"501\":1,\"1011\":1,\"1526\":1}}],[\"索引与切片\",{\"0\":{\"541\":1,\"1051\":1,\"1566\":1}}],[\"索引与\",{\"1\":{\"501\":1,\"541\":1,\"1011\":1,\"1051\":1,\"1526\":1,\"1566\":1}}],[\"掌握\",{\"1\":{\"501\":1,\"502\":1,\"503\":1,\"1011\":1,\"1012\":1,\"1013\":1,\"1526\":1,\"1527\":1,\"1528\":1}}],[\"熟练掌握\",{\"1\":{\"501\":1,\"1011\":1,\"1526\":1}}],[\"熟悉静态网站生成\",{\"1\":{\"501\":1,\"1011\":1,\"1526\":1}}],[\"熟悉前后端相关实现方式\",{\"1\":{\"497\":1,\"1007\":1,\"1522\":1}}],[\"熟悉文档结构组织与语言表达\",{\"1\":{\"495\":1,\"1005\":1,\"1520\":1}}],[\"熟悉所选语言的\",{\"1\":{\"491\":1,\"1001\":1,\"1516\":1}}],[\"熟悉聊天机器人开发\",{\"1\":{\"490\":1,\"491\":1,\"1000\":1,\"1001\":1,\"1515\":1,\"1516\":1}}],[\"熟悉至少两个聊天平台的聊天机器人开发\",{\"1\":{\"489\":1,\"999\":1,\"1514\":1}}],[\"熟悉\",{\"1\":{\"482\":1,\"483\":1,\"485\":1,\"486\":1,\"487\":1,\"490\":1,\"493\":3,\"494\":3,\"495\":2,\"497\":2,\"498\":2,\"499\":5,\"502\":4,\"503\":3,\"992\":1,\"993\":1,\"995\":1,\"996\":1,\"997\":1,\"1000\":1,\"1003\":3,\"1004\":3,\"1005\":2,\"1007\":2,\"1008\":2,\"1009\":5,\"1012\":4,\"1013\":3,\"1507\":1,\"1508\":1,\"1510\":1,\"1511\":1,\"1512\":1,\"1515\":1,\"1518\":3,\"1519\":3,\"1520\":2,\"1522\":2,\"1523\":2,\"1524\":5,\"1527\":4,\"1528\":3}}],[\"桌面端与移动端显示正常\",{\"1\":{\"501\":1,\"1011\":1,\"1526\":1}}],[\"升级数据库\",{\"1\":{\"1921\":1,\"1925\":1,\"2290\":1,\"2294\":1,\"2659\":1,\"2663\":1}}],[\"升级官网采用新版组件库\",{\"1\":{\"501\":1,\"1011\":1,\"1526\":1}}],[\"升级相关依赖并重新打造\",{\"1\":{\"501\":1,\"1011\":1,\"1526\":1}}],[\"布局与组件\",{\"1\":{\"501\":1,\"1011\":1,\"1526\":1}}],[\"替换现有的热重载逻辑以减少开发环境启动耗时等\",{\"1\":{\"501\":1,\"1011\":1,\"1526\":1}}],[\"替代方案\",{\"1\":{\"64\":1,\"72\":1,\"572\":1,\"580\":1,\"1082\":1,\"1090\":1}}],[\"水平\",{\"1\":{\"501\":1,\"1011\":1,\"1526\":1}}],[\"活动联合各大开源社区\",{\"1\":{\"500\":1,\"1010\":1,\"1525\":1}}],[\"旨在鼓励高校学生积极参与开源软件的开发维护\",{\"1\":{\"500\":1,\"1010\":1,\"1525\":1}}],[\"旨在鼓励在校学生积极参与开源软件的开发维护\",{\"1\":{\"480\":1,\"492\":1,\"496\":1,\"990\":1,\"1002\":1,\"1006\":1,\"1505\":1,\"1517\":1,\"1521\":1}}],[\"便于\",{\"1\":{\"1930\":1,\"1932\":1,\"2299\":1,\"2301\":1,\"2668\":1,\"2670\":1}}],[\"便于用户读写应用数据\",{\"1\":{\"499\":1,\"1009\":1,\"1524\":1}}],[\"便于维护和管理\",{\"1\":{\"5\":1,\"17\":1,\"29\":1}}],[\"各驱动请继承以下基类\",{\"1\":{\"1706\":1,\"2075\":1,\"2444\":1}}],[\"各协议请继承以下基类\",{\"1\":{\"1569\":1,\"1938\":1,\"2307\":1}}],[\"各模块职责与适配器编写\",{\"1\":{\"498\":1,\"1008\":1,\"1523\":1}}],[\"各司其职\",{\"1\":{\"115\":1,\"623\":1,\"1133\":1}}],[\"均可以从\",{\"1\":{\"525\":1,\"1035\":1,\"1550\":1}}],[\"均可通过图形化界面的形式为用户提供更便捷的项目开发\",{\"1\":{\"497\":1,\"1007\":1,\"1522\":1}}],[\"均为下文中适配器所编写的类\",{\"1\":{\"465\":1,\"975\":1,\"1490\":1}}],[\"合理分配布局\",{\"1\":{\"495\":1,\"1005\":1,\"1520\":1}}],[\"合并响应规则可以有多种形式\",{\"1\":{\"426\":1,\"936\":1,\"1451\":1}}],[\"合并响应规则\",{\"0\":{\"426\":1,\"936\":1,\"1451\":1}}],[\"适当的界面美化\",{\"1\":{\"495\":1,\"1005\":1,\"1520\":1}}],[\"适配\",{\"1\":{\"475\":1,\"985\":1,\"1500\":1}}],[\"适配器将会对该请求进行处理\",{\"1\":{\"1934\":1,\"2303\":1,\"2672\":1}}],[\"适配器同样也可以通过定义路由来响应机器人相关的网络通信\",{\"1\":{\"1934\":1,\"2303\":1,\"2672\":1}}],[\"适配器类\",{\"1\":{\"1713\":1,\"2082\":1,\"2461\":1}}],[\"适配器类型\",{\"1\":{\"218\":1,\"726\":1,\"1238\":1}}],[\"适配器在接收到消息时\",{\"1\":{\"532\":1,\"1042\":1,\"1557\":1}}],[\"适配器在处理时通常需要打印日志\",{\"1\":{\"466\":1,\"976\":1,\"1491\":1}}],[\"适配器商店\",{\"1\":{\"505\":1,\"1015\":1,\"1530\":1}}],[\"适配器包名可以在\",{\"1\":{\"505\":1,\"1015\":1,\"1530\":1}}],[\"适配器并能够使用\",{\"1\":{\"486\":1,\"996\":1,\"1511\":1}}],[\"适配器来支持\",{\"1\":{\"486\":1,\"996\":1,\"1511\":1}}],[\"适配器测试\",{\"0\":{\"478\":1,\"988\":1,\"1503\":1}}],[\"适配器的注册\",{\"1\":{\"1709\":1,\"2078\":1,\"2457\":1}}],[\"适配器的配置方法与插件配置类似\",{\"1\":{\"467\":1,\"977\":1,\"1492\":1}}],[\"适配器的所有事件模型均继承自\",{\"1\":{\"41\":1,\"549\":1,\"1059\":1}}],[\"适配器项目通常以\",{\"1\":{\"463\":1,\"973\":1,\"1488\":1}}],[\"适配器名称\",{\"1\":{\"218\":1,\"468\":1,\"726\":1,\"978\":1,\"1238\":1,\"1493\":1}}],[\"适配器为例\",{\"1\":{\"38\":1,\"546\":1,\"1056\":1}}],[\"适配器通常由\",{\"1\":{\"462\":1,\"972\":1,\"1487\":1}}],[\"适配器通常由四个部分组成\",{\"1\":{\"37\":1,\"545\":1,\"1055\":1}}],[\"适配器通常有两种功能\",{\"1\":{\"37\":1,\"545\":1,\"1055\":1}}],[\"适配器功能与组成\",{\"0\":{\"37\":1,\"545\":1,\"1055\":1}}],[\"适配器\",{\"0\":{\"486\":1,\"498\":1,\"996\":1,\"1008\":1,\"1511\":1,\"1523\":1},\"1\":{\"36\":1,\"498\":1,\"523\":1,\"544\":1,\"1008\":1,\"1033\":1,\"1054\":1,\"1523\":1,\"1548\":1}}],[\"404\",{\"1\":{\"2745\":1}}],[\"46327b837dd8\",{\"1\":{\"1924\":1,\"2293\":1,\"2662\":1}}],[\"4567\",{\"1\":{\"1887\":2,\"2256\":2,\"2625\":2}}],[\"456\",{\"1\":{\"1887\":6,\"2256\":6,\"2625\":6}}],[\"4\",{\"1\":{\"1605\":1,\"1974\":1,\"2343\":1}}],[\"415\",{\"1\":{\"495\":1,\"1005\":1,\"1520\":1}}],[\"484\",{\"1\":{\"3\":1,\"15\":1,\"27\":1,\"372\":1,\"880\":1,\"1395\":1}}],[\"单文件插件\",{\"0\":{\"511\":1,\"1021\":1,\"1536\":1}}],[\"单元测试\",{\"1\":{\"495\":1,\"1005\":1,\"1520\":1,\"2727\":1,\"2734\":1,\"2741\":1}}],[\"单位\",{\"1\":{\"170\":1,\"678\":1,\"1188\":1}}],[\"工厂方法创建消息\",{\"1\":{\"1602\":1,\"1971\":1,\"2340\":1}}],[\"工作流\",{\"1\":{\"502\":1,\"1012\":1,\"1527\":1}}],[\"工作原理\",{\"1\":{\"495\":1,\"1005\":1,\"1520\":1}}],[\"工具更佳\",{\"1\":{\"483\":1,\"993\":1,\"1508\":1}}],[\"工具进行类型检查\",{\"1\":{\"8\":1,\"20\":1,\"32\":1}}],[\"方便进行命令匹配\",{\"1\":{\"526\":1,\"1036\":1,\"1551\":1}}],[\"方便了开发者直观的感受机器人文本交互功能\",{\"1\":{\"494\":1,\"1004\":1,\"1519\":1}}],[\"方法也进行了增强\",{\"1\":{\"541\":1,\"1051\":1,\"1566\":1}}],[\"方法进行类型过滤\",{\"1\":{\"541\":1,\"1051\":1,\"1566\":1}}],[\"方法进行构造\",{\"1\":{\"536\":1,\"1046\":1,\"1561\":1}}],[\"方法进行加载并导入需要使用的方法\",{\"1\":{\"433\":1,\"943\":1,\"1458\":1}}],[\"方法创建事件响应器过于繁琐且不能记录插件信息\",{\"1\":{\"525\":1,\"1035\":1,\"1550\":1}}],[\"方法自行读取配置来加载插件\",{\"1\":{\"518\":1,\"519\":1,\"1028\":1,\"1029\":1,\"1543\":1,\"1544\":1}}],[\"方法发送数据\",{\"1\":{\"474\":1,\"984\":1,\"1499\":1}}],[\"方法告知\",{\"1\":{\"472\":2,\"982\":2,\"1497\":2}}],[\"方法\",{\"1\":{\"466\":1,\"474\":1,\"476\":1,\"541\":1,\"542\":1,\"976\":1,\"984\":1,\"986\":1,\"1051\":1,\"1052\":1,\"1491\":1,\"1499\":1,\"1501\":1,\"1566\":1,\"1567\":1}}],[\"方法的方式\",{\"1\":{\"452\":1,\"962\":1,\"1477\":1}}],[\"方法可轻松完成这一过程\",{\"1\":{\"451\":1,\"961\":1,\"1476\":1}}],[\"方法添加文件处理器\",{\"1\":{\"418\":1,\"928\":1,\"1443\":1}}],[\"方法时抛出\",{\"1\":{\"203\":1,\"711\":1,\"1223\":1}}],[\"方法快速获取\",{\"1\":{\"123\":1,\"631\":1,\"1141\":1}}],[\"方法动态阻止事件传播\",{\"1\":{\"90\":1,\"598\":1,\"1108\":1}}],[\"方法设置存储提供者\",{\"1\":{\"83\":1,\"591\":1,\"1101\":1}}],[\"方法获取消息纯文本\",{\"1\":{\"537\":1,\"1047\":1,\"1562\":1}}],[\"方法获取全局驱动器实例\",{\"1\":{\"55\":1,\"563\":1,\"1073\":1}}],[\"方法获取指定\",{\"1\":{\"40\":1,\"548\":1,\"1058\":1}}],[\"方法获取\",{\"1\":{\"40\":1,\"548\":1,\"1058\":1}}],[\"方法来模拟\",{\"1\":{\"1935\":1,\"2304\":1,\"2673\":1}}],[\"方法来拼接一串消息\",{\"1\":{\"542\":1,\"1052\":1,\"1567\":1}}],[\"方法来检查消息中是否仅包含指定的消息段\",{\"1\":{\"540\":1,\"1050\":1,\"1565\":1}}],[\"方法来\",{\"1\":{\"540\":1,\"1050\":1,\"1565\":1}}],[\"方法来获取消息序列中的纯文本内容\",{\"1\":{\"530\":1,\"1040\":1,\"1555\":1}}],[\"方法来获取已注册的适配器\",{\"1\":{\"39\":1,\"547\":1,\"1057\":1}}],[\"方法来发送请求\",{\"1\":{\"474\":1,\"984\":1,\"1499\":1}}],[\"方法来发送数据\",{\"1\":{\"474\":1,\"984\":1,\"1499\":1}}],[\"方法来让\",{\"1\":{\"473\":1,\"983\":1,\"1498\":1}}],[\"方法来注册多个适配器\",{\"1\":{\"38\":1,\"546\":1,\"1056\":1}}],[\"方法将适配器注册到驱动器中即可\",{\"1\":{\"38\":1,\"546\":1,\"1056\":1}}],[\"成果仓库\",{\"1\":{\"493\":1,\"494\":1,\"495\":1,\"497\":1,\"498\":1,\"499\":1,\"501\":1,\"502\":1,\"503\":1,\"1003\":1,\"1004\":1,\"1005\":1,\"1007\":1,\"1008\":1,\"1009\":1,\"1011\":1,\"1012\":1,\"1013\":1,\"1518\":1,\"1519\":1,\"1520\":1,\"1522\":1,\"1523\":1,\"1524\":1,\"1526\":1,\"1527\":1,\"1528\":1}}],[\"项目本身结构复杂耦合\",{\"1\":{\"502\":1,\"1012\":1,\"1527\":1}}],[\"项目组织方式\",{\"1\":{\"493\":1,\"494\":1,\"495\":1,\"1003\":1,\"1004\":1,\"1005\":1,\"1518\":1,\"1519\":1,\"1520\":1}}],[\"项目管理图形化面板\",{\"0\":{\"497\":1,\"1007\":1,\"1522\":1}}],[\"项目管理\",{\"1\":{\"493\":1,\"1003\":1,\"1518\":1}}],[\"明确各功能模块\",{\"1\":{\"493\":1,\"1003\":1,\"1518\":1}}],[\"进阶部分向已经熟悉开发流程的用户介绍更多高级技巧\",{\"1\":{\"495\":1,\"1005\":1,\"1520\":1}}],[\"进阶\",{\"1\":{\"493\":1,\"494\":1,\"495\":1,\"497\":1,\"498\":1,\"499\":1,\"501\":1,\"502\":1,\"503\":1,\"1003\":1,\"1004\":1,\"1005\":1,\"1007\":1,\"1008\":1,\"1009\":1,\"1011\":1,\"1012\":1,\"1013\":1,\"1518\":1,\"1519\":1,\"1520\":1,\"1522\":1,\"1523\":1,\"1524\":1,\"1526\":1,\"1527\":1,\"1528\":1}}],[\"进行自动化测试\",{\"1\":{\"2690\":1,\"2705\":1,\"2720\":1}}],[\"进行更加真实的集成测试\",{\"1\":{\"1933\":1,\"2302\":1,\"2671\":1}}],[\"进行快捷指令操作\",{\"1\":{\"1900\":1,\"2269\":1,\"2638\":1}}],[\"进行一个\",{\"1\":{\"1598\":1,\"1967\":1,\"2317\":1}}],[\"进行加载\",{\"1\":{\"519\":1,\"1029\":1,\"1544\":1}}],[\"进行项目创建\",{\"1\":{\"504\":1,\"1014\":1,\"1529\":1}}],[\"进行处理\",{\"1\":{\"473\":1,\"983\":1,\"1498\":1}}],[\"进行处理但不显示\",{\"1\":{\"209\":1,\"717\":1,\"1229\":1}}],[\"进行了\",{\"1\":{\"1935\":1,\"2304\":1,\"2673\":1}}],[\"进行了解\",{\"1\":{\"452\":1,\"962\":1,\"1477\":1}}],[\"进行了封装以适用于\",{\"1\":{\"450\":1,\"960\":1,\"1475\":1}}],[\"进行检查\",{\"1\":{\"427\":1,\"937\":1,\"1452\":1}}],[\"进行事件处理的函数\",{\"1\":{\"131\":1,\"639\":1,\"1149\":1}}],[\"脚手架的扩展开发\",{\"1\":{\"503\":1,\"1013\":1,\"1528\":1}}],[\"脚手架\",{\"1\":{\"503\":1,\"1013\":1,\"1528\":1}}],[\"脚手架功能存在一定的定位不明确\",{\"1\":{\"493\":1,\"1003\":1,\"1518\":1}}],[\"脚本\",{\"1\":{\"433\":1,\"943\":1,\"1458\":1}}],[\"随着\",{\"1\":{\"493\":1,\"1003\":1,\"1518\":1}}],[\"部署项目等功能\",{\"1\":{\"493\":1,\"1003\":1,\"1518\":1}}],[\"部分若能转为\",{\"1\":{\"1887\":1,\"2256\":1,\"2625\":1}}],[\"部分插件可能仅在某些特定平台上可用\",{\"1\":{\"523\":1,\"1033\":1,\"1548\":1}}],[\"部分是手动编写的\",{\"1\":{\"483\":1,\"993\":1,\"1508\":1}}],[\"部分和\",{\"1\":{\"482\":1,\"992\":1,\"1507\":1}}],[\"部分\",{\"0\":{\"482\":1,\"992\":1,\"1507\":1},\"1\":{\"523\":1,\"1033\":1,\"1548\":1}}],[\"安装的插件\",{\"1\":{\"1809\":1,\"2178\":1,\"2547\":1}}],[\"安装适配器\",{\"1\":{\"505\":1,\"1015\":1,\"1530\":1}}],[\"安装依赖\",{\"0\":{\"505\":1,\"1015\":1,\"1530\":1}}],[\"安装\",{\"1\":{\"495\":1,\"505\":1,\"1005\":1,\"1015\":1,\"1520\":1,\"1530\":1,\"1921\":1,\"2290\":1,\"2659\":1}}],[\"安装与卸载插件\",{\"1\":{\"493\":1,\"1003\":1,\"1518\":1}}],[\"安装插件\",{\"0\":{\"432\":1,\"443\":1,\"449\":1,\"942\":1,\"953\":1,\"959\":1,\"1457\":1,\"1468\":1,\"1474\":1},\"1\":{\"1921\":1,\"2290\":1,\"2659\":1}}],[\"交互体验升级\",{\"0\":{\"493\":1,\"1003\":1,\"1518\":1}}],[\"了本次活动\",{\"1\":{\"492\":1,\"496\":1,\"500\":1,\"1002\":1,\"1006\":1,\"1010\":1,\"1517\":1,\"1521\":1,\"1525\":1}}],[\"了解机器人的基本构成有助于你更好地使用\",{\"1\":{\"523\":1,\"1033\":1,\"1548\":1}}],[\"了解使用不同语言编写聊天机器人时的常用实践\",{\"1\":{\"489\":1,\"999\":1,\"1514\":1}}],[\"了解主流的\",{\"1\":{\"485\":1,\"995\":1,\"1510\":1}}],[\"了解聊天机器人基本开发过程\",{\"1\":{\"482\":1,\"992\":1,\"1507\":1}}],[\"了解\",{\"1\":{\"482\":2,\"483\":3,\"485\":2,\"486\":3,\"487\":3,\"489\":1,\"503\":1,\"992\":2,\"993\":3,\"995\":2,\"996\":3,\"997\":3,\"999\":1,\"1013\":1,\"1507\":2,\"1508\":3,\"1510\":2,\"1511\":3,\"1512\":3,\"1514\":1,\"1528\":1}}],[\"充分考虑同时兼容\",{\"1\":{\"490\":1,\"491\":1,\"1000\":1,\"1001\":1,\"1515\":1,\"1516\":1}}],[\"某聊天平台的\",{\"1\":{\"490\":1,\"491\":1,\"1000\":1,\"1001\":1,\"1515\":1,\"1516\":1}}],[\"快捷命令可以做到标识一段命令\",{\"1\":{\"1900\":1,\"2269\":1,\"2638\":1}}],[\"快捷指令允许三类特殊的\",{\"1\":{\"1902\":1,\"2271\":1,\"2640\":1}}],[\"快捷指令的人类可读描述\",{\"1\":{\"1900\":1,\"2269\":1,\"2638\":1}}],[\"快捷指令的正则匹配结果的额外处理函数\",{\"1\":{\"1900\":1,\"2269\":1,\"2638\":1}}],[\"快捷指令的附带参数\",{\"1\":{\"1900\":1,\"2269\":1,\"2638\":1}}],[\"快捷指令的命令\",{\"1\":{\"1900\":1,\"2269\":1,\"2638\":1}}],[\"快捷指令参数\",{\"1\":{\"1900\":1,\"2269\":1,\"2638\":1}}],[\"快捷指令\",{\"0\":{\"1900\":1,\"2269\":1,\"2638\":1}}],[\"快捷导入\",{\"0\":{\"216\":1,\"724\":1,\"1236\":1,\"1802\":1,\"2171\":1,\"2540\":1}}],[\"快速编写具体的\",{\"1\":{\"490\":1,\"1000\":1,\"1515\":1}}],[\"版\",{\"0\":{\"490\":1,\"1000\":1,\"1515\":1}}],[\"版本上运行所有数据库的测试\",{\"1\":{\"2690\":1,\"2705\":1,\"2720\":1}}],[\"版本兼容\",{\"1\":{\"2690\":1,\"2705\":1,\"2720\":1}}],[\"版本兼容层模块\",{\"1\":{\"141\":1,\"649\":1,\"1159\":1}}],[\"版本的兼容性\",{\"1\":{\"503\":1,\"1013\":1,\"1528\":1}}],[\"版本的发布\",{\"1\":{\"493\":1,\"1003\":1,\"1518\":1}}],[\"版本仍然与\",{\"1\":{\"489\":1,\"999\":1,\"1514\":1}}],[\"版本\",{\"1\":{\"141\":1,\"649\":1,\"1159\":1}}],[\"优先级为\",{\"1\":{\"527\":1,\"1037\":1,\"1552\":1}}],[\"优先使用\",{\"1\":{\"340\":1,\"341\":1,\"342\":1,\"343\":1,\"848\":1,\"849\":1,\"850\":1,\"851\":1,\"1363\":1,\"1364\":1,\"1365\":1,\"1366\":1}}],[\"优化与\",{\"1\":{\"501\":1,\"1011\":1,\"1526\":1}}],[\"优化官网插件商店的展示细节\",{\"1\":{\"501\":1,\"1011\":1,\"1526\":1}}],[\"优化官网过长的\",{\"1\":{\"501\":1,\"1011\":1,\"1526\":1}}],[\"优化官网部分页面\",{\"1\":{\"501\":1,\"1011\":1,\"1526\":1}}],[\"优化官网开发与生产构建体验\",{\"1\":{\"501\":1,\"1011\":1,\"1526\":1}}],[\"优化用户体验\",{\"1\":{\"493\":1,\"1003\":1,\"1518\":1}}],[\"优化现有的通信\",{\"1\":{\"489\":1,\"999\":1,\"1514\":1}}],[\"核心\",{\"1\":{\"489\":1,\"999\":1,\"1514\":1}}],[\"核心代码的平台通用性\",{\"1\":{\"486\":1,\"487\":1,\"996\":1,\"997\":1,\"1511\":1,\"1512\":1}}],[\"易于使用的同时易于实现的聊天机器人接口标准\",{\"1\":{\"489\":1,\"999\":1,\"1514\":1}}],[\"易于维护\",{\"1\":{\"112\":1,\"620\":1,\"1130\":1}}],[\"耦合的历史包袱\",{\"1\":{\"489\":1,\"999\":1,\"1514\":1}}],[\"去掉无用\",{\"1\":{\"489\":1,\"999\":1,\"1514\":1}}],[\"去掉与\",{\"1\":{\"489\":1,\"999\":1,\"1514\":1}}],[\"去除事件消息首尾的\",{\"1\":{\"475\":1,\"985\":1,\"1500\":1}}],[\"规范\",{\"1\":{\"486\":1,\"487\":1,\"497\":1,\"498\":1,\"499\":1,\"996\":1,\"997\":1,\"1007\":1,\"1008\":1,\"1009\":1,\"1511\":1,\"1512\":1,\"1522\":1,\"1523\":1,\"1524\":1}}],[\"规则是\",{\"1\":{\"2678\":1,\"2693\":1,\"2708\":1}}],[\"规则类\",{\"1\":{\"347\":1,\"855\":1,\"1370\":1}}],[\"规则的\",{\"1\":{\"90\":1,\"598\":1,\"1108\":1}}],[\"代码符合\",{\"1\":{\"497\":1,\"498\":1,\"499\":1,\"1007\":1,\"1008\":1,\"1009\":1,\"1522\":1,\"1523\":1,\"1524\":1}}],[\"代码遵守项目\",{\"1\":{\"486\":1,\"487\":1,\"996\":1,\"997\":1,\"1511\":1,\"1512\":1}}],[\"代表该参数为一个可接受多个\",{\"1\":{\"1891\":1,\"2260\":1,\"2629\":1}}],[\"代表\",{\"1\":{\"208\":1,\"716\":1,\"1228\":1}}],[\"代表使用内置驱动器\",{\"1\":{\"54\":1,\"562\":1,\"1072\":1}}],[\"代表驱动器混入类名\",{\"1\":{\"54\":1,\"562\":1,\"1072\":1}}],[\"代表驱动器类名\",{\"1\":{\"54\":1,\"562\":1,\"1072\":1}}],[\"代表驱动器模块路径\",{\"1\":{\"54\":1,\"562\":1,\"1072\":1}}],[\"获得了此\",{\"1\":{\"2680\":1,\"2695\":1,\"2710\":1}}],[\"获得更多的跨平台支持\",{\"1\":{\"486\":1,\"487\":1,\"996\":1,\"997\":1,\"1511\":1,\"1512\":1}}],[\"获取测试用模拟客户端\",{\"1\":{\"1935\":1,\"2304\":1,\"2673\":1}}],[\"获取测试对象\",{\"1\":{\"1934\":1,\"2303\":1,\"2672\":1}}],[\"获取原始参数列表\",{\"1\":{\"1866\":1,\"1883\":1,\"2235\":1,\"2252\":1,\"2604\":1,\"2621\":1}}],[\"获取原始消息的消息内容\",{\"1\":{\"475\":1,\"985\":1,\"1500\":1}}],[\"获取信息\",{\"1\":{\"1853\":1,\"1854\":1,\"2222\":1,\"2223\":1,\"2591\":1,\"2592\":1}}],[\"获取当前已安装的插件支持适配器类列表\",{\"1\":{\"1841\":1,\"2210\":1,\"2579\":1}}],[\"获取当前已导入的所有插件\",{\"1\":{\"1805\":1,\"2174\":1,\"2543\":1}}],[\"获取当前所有可用的插件标识符\",{\"1\":{\"1806\":1,\"2175\":1,\"2544\":1}}],[\"获取当前所有已连接的\",{\"1\":{\"1712\":1,\"2081\":1,\"2460\":1}}],[\"获取已加载插件的适配器支持状态集合\",{\"1\":{\"1817\":1,\"2186\":1,\"2555\":1}}],[\"获取已经导入的某个插件\",{\"1\":{\"1803\":1,\"2172\":1,\"2541\":1}}],[\"获取已注册的\",{\"1\":{\"218\":1,\"726\":1,\"1238\":1}}],[\"获取已注册的适配器\",{\"0\":{\"39\":1,\"547\":1,\"1057\":1}}],[\"获取参数的类型注解\",{\"1\":{\"1649\":1,\"2018\":1,\"2387\":1}}],[\"获取可调用对象签名\",{\"1\":{\"1648\":1,\"2017\":1,\"2386\":1}}],[\"获取个数\",{\"1\":{\"1609\":1,\"1978\":1,\"2347\":1}}],[\"获取指定类型的消息段\",{\"1\":{\"1609\":1,\"1978\":1,\"2347\":1}}],[\"获取指定类型指定个数的消息段\",{\"1\":{\"541\":1,\"1051\":1,\"1566\":1}}],[\"获取消息数组类型\",{\"1\":{\"1622\":1,\"1991\":1,\"2360\":1}}],[\"获取消息段类型\",{\"1\":{\"1603\":1,\"1972\":1,\"2341\":1}}],[\"获取消息纯文本的方法\",{\"1\":{\"1587\":1,\"1956\":1,\"2337\":1}}],[\"获取消息纯文本\",{\"0\":{\"537\":1,\"1047\":1,\"1562\":1}}],[\"获取会话\",{\"1\":{\"1585\":1,\"1954\":1,\"2335\":1}}],[\"获取了命令的参数\",{\"1\":{\"530\":1,\"1040\":1,\"1555\":1}}],[\"获取用户\",{\"1\":{\"476\":1,\"986\":1,\"1501\":1}}],[\"获取事件响应器定义所在源码信息\",{\"1\":{\"1855\":1,\"2224\":1,\"2593\":1}}],[\"获取事件响应器定义所在模块\",{\"1\":{\"1854\":1,\"2223\":1,\"2592\":1}}],[\"获取事件响应器定义所在插件\",{\"1\":{\"1853\":1,\"2222\":1,\"2591\":1}}],[\"获取事件是否与机器人有关的方法\",{\"1\":{\"1588\":1,\"1957\":1,\"2338\":1}}],[\"获取事件消息内容的方法\",{\"1\":{\"1586\":1,\"1955\":1,\"2336\":1}}],[\"获取事件消息的方法\",{\"1\":{\"476\":1,\"986\":1,\"1501\":1}}],[\"获取事件主体\",{\"1\":{\"1584\":1,\"1953\":1,\"2334\":1}}],[\"获取事件日志信息的方法\",{\"1\":{\"1583\":1,\"1952\":1,\"2333\":1}}],[\"获取事件描述的方法\",{\"1\":{\"1582\":1,\"1951\":1,\"2332\":1}}],[\"获取事件名称的方法\",{\"1\":{\"1581\":1,\"1950\":1,\"2331\":1}}],[\"获取事件类型的方法\",{\"1\":{\"1580\":1,\"1949\":1,\"2330\":1}}],[\"获取事件会话\",{\"1\":{\"476\":1,\"986\":1,\"1501\":1}}],[\"获取事件通用信息\",{\"0\":{\"41\":1,\"549\":1,\"1059\":1}}],[\"获取到模拟客户端后\",{\"1\":{\"1934\":1,\"2303\":1,\"2672\":1}}],[\"获取到\",{\"1\":{\"472\":1,\"982\":1,\"1497\":1}}],[\"获取插件配置文件\",{\"1\":{\"433\":1,\"943\":1,\"1458\":1}}],[\"获取插件配置目录\",{\"1\":{\"433\":1,\"943\":1,\"1458\":1}}],[\"获取插件数据文件\",{\"1\":{\"433\":1,\"943\":1,\"1458\":1}}],[\"获取插件数据目录\",{\"1\":{\"433\":1,\"943\":1,\"1458\":1}}],[\"获取插件缓存文件\",{\"1\":{\"433\":1,\"943\":1,\"1458\":1}}],[\"获取插件缓存目录\",{\"1\":{\"433\":1,\"943\":1,\"1458\":1}}],[\"获取插件信息\",{\"0\":{\"111\":1,\"619\":1,\"1129\":1}}],[\"获取对象的名称\",{\"1\":{\"409\":1,\"919\":1,\"1434\":1}}],[\"获取的将是\",{\"1\":{\"365\":1,\"873\":1,\"1388\":1}}],[\"获取解析后的参数字典\",{\"1\":{\"365\":1,\"873\":1,\"1388\":1,\"1866\":1,\"1883\":1,\"2235\":1,\"2252\":1,\"2604\":1,\"2621\":1}}],[\"获取解析前的参数列表\",{\"1\":{\"365\":1,\"873\":1,\"1388\":1}}],[\"获取匹配成功的\",{\"1\":{\"367\":2,\"875\":2,\"1390\":2}}],[\"获取匹配成功的字符串\",{\"1\":{\"367\":1,\"875\":1,\"1390\":1}}],[\"获取匹配成功的原始命令文本\",{\"1\":{\"361\":1,\"365\":1,\"869\":1,\"873\":1,\"1384\":1,\"1388\":1}}],[\"获取匹配成功的命令参数\",{\"1\":{\"361\":1,\"869\":1,\"1384\":1}}],[\"获取匹配成功的命令\",{\"1\":{\"361\":1,\"365\":1,\"869\":1,\"873\":1,\"1384\":1,\"1388\":1}}],[\"获取最近一次\",{\"1\":{\"261\":1,\"769\":1,\"1282\":1}}],[\"获取一个\",{\"1\":{\"259\":1,\"262\":1,\"767\":1,\"770\":1,\"1280\":1,\"1283\":1,\"1753\":1,\"2122\":1,\"2473\":1}}],[\"获取一个参数\",{\"1\":{\"251\":1,\"759\":1,\"1272\":1}}],[\"获取一个连接到\",{\"1\":{\"222\":1,\"730\":1,\"1242\":1}}],[\"获取所有连接到\",{\"1\":{\"223\":1,\"731\":1,\"1243\":1}}],[\"获取所有已注册的\",{\"1\":{\"219\":1,\"727\":1,\"1239\":1}}],[\"获取全局\",{\"1\":{\"217\":1,\"220\":1,\"221\":1,\"725\":1,\"728\":1,\"729\":1,\"1237\":1,\"1240\":1,\"1241\":1}}],[\"获取驱动器\",{\"0\":{\"55\":1,\"563\":1,\"1073\":1}}],[\"获取\",{\"0\":{\"40\":1,\"123\":1,\"445\":1,\"548\":1,\"631\":1,\"955\":1,\"1058\":1,\"1141\":1,\"1470\":1},\"1\":{\"377\":1,\"532\":1,\"885\":1,\"1042\":1,\"1400\":1,\"1557\":1,\"1587\":1,\"1956\":1,\"2337\":1}}],[\"钉钉协议\",{\"1\":{\"486\":1,\"487\":1,\"996\":1,\"997\":1,\"1511\":1,\"1512\":1}}],[\"形式传入\",{\"1\":{\"1896\":1,\"2265\":1,\"2634\":1}}],[\"形式出现\",{\"1\":{\"525\":1,\"1035\":1,\"1550\":1}}],[\"形式的消息命令\",{\"1\":{\"365\":1,\"873\":1,\"1388\":1}}],[\"形成一个通用的\",{\"1\":{\"489\":1,\"999\":1,\"1514\":1}}],[\"形成额外的维护成本\",{\"1\":{\"483\":1,\"993\":1,\"1508\":1}}],[\"机制\",{\"1\":{\"482\":1,\"992\":1,\"1507\":1}}],[\"机器人启动前会自动运行此命令\",{\"1\":{\"1927\":1,\"2296\":1,\"2665\":1}}],[\"机器人框架主体外\",{\"1\":{\"523\":1,\"1033\":1,\"1548\":1}}],[\"机器人框架主体\",{\"1\":{\"523\":1,\"1033\":1,\"1548\":1}}],[\"机器人的功能实现\",{\"1\":{\"523\":1,\"1033\":1,\"1548\":1}}],[\"机器人的构成\",{\"0\":{\"523\":1,\"1033\":1,\"1548\":1}}],[\"机器人的开发\",{\"1\":{\"486\":1,\"996\":1,\"1511\":1}}],[\"机器人的昵称\",{\"1\":{\"50\":1,\"526\":1,\"558\":1,\"1036\":1,\"1068\":1,\"1551\":1}}],[\"机器人平台相关的部分\",{\"1\":{\"482\":1,\"992\":1,\"1507\":1}}],[\"机器人平台不再提供服务\",{\"1\":{\"482\":1,\"992\":1,\"1507\":1}}],[\"机器人在实际应用中\",{\"1\":{\"423\":1,\"933\":1,\"1448\":1}}],[\"机器人用户就会在私聊和群聊中分别收到不同的回复\",{\"1\":{\"422\":1,\"932\":1,\"1447\":1}}],[\"机器人用户权限检查以及认证\",{\"1\":{\"7\":1,\"19\":1,\"31\":1}}],[\"机器人昵称\",{\"1\":{\"172\":1,\"680\":1,\"1190\":1}}],[\"机器人超级用户\",{\"1\":{\"171\":1,\"679\":1,\"1189\":1}}],[\"机器人可以与用户进行多次交互\",{\"1\":{\"138\":1,\"646\":1,\"1156\":1}}],[\"机器人\",{\"1\":{\"50\":1,\"526\":1,\"558\":1,\"1036\":1,\"1068\":1,\"1551\":1,\"1570\":1,\"1572\":1,\"1939\":1,\"1941\":1,\"2320\":1,\"2322\":1}}],[\"技术要求\",{\"1\":{\"482\":1,\"483\":1,\"485\":1,\"486\":1,\"487\":1,\"489\":1,\"490\":1,\"491\":1,\"493\":1,\"494\":1,\"495\":1,\"497\":1,\"498\":1,\"499\":1,\"501\":1,\"502\":1,\"503\":1,\"992\":1,\"993\":1,\"995\":1,\"996\":1,\"997\":1,\"999\":1,\"1000\":1,\"1001\":1,\"1003\":1,\"1004\":1,\"1005\":1,\"1007\":1,\"1008\":1,\"1009\":1,\"1011\":1,\"1012\":1,\"1013\":1,\"1507\":1,\"1508\":1,\"1510\":1,\"1511\":1,\"1512\":1,\"1514\":1,\"1515\":1,\"1516\":1,\"1518\":1,\"1519\":1,\"1520\":1,\"1522\":1,\"1523\":1,\"1524\":1,\"1526\":1,\"1527\":1,\"1528\":1}}],[\"聊天机器人\",{\"1\":{\"498\":1,\"1008\":1,\"1523\":1}}],[\"聊天机器人框架\",{\"1\":{\"0\":1,\"12\":1,\"24\":1}}],[\"聊天\",{\"1\":{\"482\":1,\"992\":1,\"1507\":1}}],[\"案例\",{\"1\":{\"482\":1,\"992\":1,\"1507\":1}}],[\"图灵机器人\",{\"1\":{\"482\":1,\"992\":1,\"1507\":1}}],[\"修复流程中存在的问题\",{\"1\":{\"502\":1,\"1012\":1,\"1527\":1}}],[\"修复\",{\"1\":{\"482\":1,\"992\":1,\"1507\":1}}],[\"修改默认的命名空间\",{\"0\":{\"1899\":1,\"2268\":1,\"2637\":1}}],[\"修改其中可能已经不可用的部分\",{\"1\":{\"482\":1,\"992\":1,\"1507\":1}}],[\"修改\",{\"1\":{\"10\":1,\"22\":1,\"34\":1,\"482\":2,\"501\":1,\"513\":2,\"992\":2,\"1011\":1,\"1023\":2,\"1507\":2,\"1526\":1,\"1538\":2}}],[\"产出要求\",{\"1\":{\"482\":1,\"483\":1,\"485\":1,\"486\":1,\"487\":1,\"489\":1,\"490\":1,\"491\":1,\"493\":1,\"494\":1,\"495\":1,\"497\":1,\"498\":1,\"499\":1,\"501\":1,\"502\":1,\"503\":1,\"992\":1,\"993\":1,\"995\":1,\"996\":1,\"997\":1,\"999\":1,\"1000\":1,\"1001\":1,\"1003\":1,\"1004\":1,\"1005\":1,\"1007\":1,\"1008\":1,\"1009\":1,\"1011\":1,\"1012\":1,\"1013\":1,\"1507\":1,\"1508\":1,\"1510\":1,\"1511\":1,\"1512\":1,\"1514\":1,\"1515\":1,\"1516\":1,\"1518\":1,\"1519\":1,\"1520\":1,\"1522\":1,\"1523\":1,\"1524\":1,\"1526\":1,\"1527\":1,\"1528\":1}}],[\"导入该插件的插件管理器\",{\"1\":{\"1846\":1,\"2215\":1,\"2584\":1}}],[\"导入多个\",{\"1\":{\"1815\":1,\"2184\":1,\"2553\":1}}],[\"导入\",{\"1\":{\"1814\":1,\"2183\":1,\"2552\":1}}],[\"导入指定\",{\"1\":{\"1812\":1,\"1813\":1,\"2181\":1,\"2182\":1,\"2550\":1,\"2551\":1}}],[\"导入指定列表中的插件以及指定目录下多个插件\",{\"1\":{\"1811\":1,\"2180\":1,\"2549\":1}}],[\"导入文件夹下多个插件\",{\"1\":{\"1810\":1,\"2179\":1,\"2548\":1}}],[\"导入调度器\",{\"0\":{\"451\":1,\"961\":1,\"1476\":1}}],[\"导致用户难以理解\",{\"1\":{\"495\":1,\"1005\":1,\"1520\":1}}],[\"导师\",{\"1\":{\"482\":1,\"483\":1,\"485\":1,\"486\":1,\"487\":1,\"489\":1,\"490\":1,\"491\":1,\"493\":1,\"494\":1,\"495\":1,\"497\":1,\"498\":1,\"499\":1,\"501\":1,\"502\":1,\"503\":1,\"992\":1,\"993\":1,\"995\":1,\"996\":1,\"997\":1,\"999\":1,\"1000\":1,\"1001\":1,\"1003\":1,\"1004\":1,\"1005\":1,\"1007\":1,\"1008\":1,\"1009\":1,\"1011\":1,\"1012\":1,\"1013\":1,\"1507\":1,\"1508\":1,\"1510\":1,\"1511\":1,\"1512\":1,\"1514\":1,\"1515\":1,\"1516\":1,\"1518\":1,\"1519\":1,\"1520\":1,\"1522\":1,\"1523\":1,\"1524\":1,\"1526\":1,\"1527\":1,\"1528\":1}}],[\"低代码框架的使用和开发\",{\"1\":{\"503\":1,\"1013\":1,\"1528\":1}}],[\"低代码框架开发\",{\"0\":{\"503\":1,\"1013\":1,\"1528\":1}}],[\"低代码开发框架\",{\"1\":{\"503\":1,\"1013\":1,\"1528\":1}}],[\"低\",{\"1\":{\"482\":1,\"992\":1,\"1507\":1}}],[\"难度\",{\"1\":{\"482\":1,\"483\":1,\"485\":1,\"486\":1,\"487\":1,\"489\":1,\"490\":1,\"491\":1,\"493\":1,\"494\":1,\"495\":1,\"497\":1,\"498\":1,\"499\":1,\"501\":1,\"502\":1,\"503\":1,\"992\":1,\"993\":1,\"995\":1,\"996\":1,\"997\":1,\"999\":1,\"1000\":1,\"1001\":1,\"1003\":1,\"1004\":1,\"1005\":1,\"1007\":1,\"1008\":1,\"1009\":1,\"1011\":1,\"1012\":1,\"1013\":1,\"1507\":1,\"1508\":1,\"1510\":1,\"1511\":1,\"1512\":1,\"1514\":1,\"1515\":1,\"1516\":1,\"1518\":1,\"1519\":1,\"1520\":1,\"1522\":1,\"1523\":1,\"1524\":1,\"1526\":1,\"1527\":1,\"1528\":1}}],[\"难免会需要存储一些持久化数据\",{\"1\":{\"431\":1,\"941\":1,\"1456\":1}}],[\"示例后\",{\"1\":{\"2676\":1,\"2691\":1,\"2706\":1}}],[\"示例\",{\"0\":{\"1920\":1,\"2289\":1,\"2658\":1,\"2677\":1,\"2692\":1,\"2707\":1}}],[\"示例中可以传入\",{\"1\":{\"1890\":1,\"2259\":1,\"2628\":1}}],[\"示例是否有已经过时\",{\"1\":{\"482\":1,\"992\":1,\"1507\":1}}],[\"示例做一次全面检查\",{\"1\":{\"482\":1,\"992\":1,\"1507\":1}}],[\"示例插件\",{\"1\":{\"110\":1,\"618\":1,\"1128\":1}}],[\"联系我们\",{\"1\":{\"480\":1,\"492\":1,\"496\":1,\"500\":1,\"990\":1,\"1002\":1,\"1006\":1,\"1010\":1,\"1505\":1,\"1517\":1,\"1521\":1,\"1525\":1}}],[\"社区中承担着重要的角色\",{\"1\":{\"502\":1,\"1012\":1,\"1527\":1}}],[\"社区自动化工作流管理优化\",{\"0\":{\"502\":1,\"1012\":1,\"1527\":1}}],[\"社区有幸作为开源社区\",{\"1\":{\"492\":1,\"496\":1,\"500\":1,\"1002\":1,\"1006\":1,\"1010\":1,\"1517\":1,\"1521\":1,\"1525\":1}}],[\"社区有幸作为开源社区参与了本次活动\",{\"1\":{\"480\":1,\"990\":1,\"1505\":1}}],[\"社区主办的一项面向高校学生的暑期活动\",{\"1\":{\"492\":1,\"496\":1,\"1002\":1,\"1006\":1,\"1517\":1,\"1521\":1}}],[\"社区反馈有更多的平台需求\",{\"1\":{\"486\":1,\"487\":1,\"996\":1,\"997\":1,\"1511\":1,\"1512\":1}}],[\"社区共同举办的一项面向高校学生的暑期活动\",{\"1\":{\"480\":1,\"990\":1,\"1505\":1}}],[\"官网目前采用基于\",{\"1\":{\"501\":1,\"1011\":1,\"1526\":1}}],[\"官网组件库更新与优化\",{\"0\":{\"501\":1,\"1011\":1,\"1526\":1}}],[\"官网\",{\"1\":{\"480\":1,\"492\":1,\"496\":1,\"500\":1,\"990\":1,\"1002\":1,\"1006\":1,\"1010\":1,\"1505\":1,\"1517\":1,\"1521\":1,\"1525\":1}}],[\"官方文档\",{\"1\":{\"450\":1,\"452\":2,\"960\":1,\"962\":2,\"1475\":1,\"1477\":2}}],[\"官方支持的适配器和社区贡献的适配器均可在商店中查看\",{\"1\":{\"51\":1,\"559\":1,\"1069\":1}}],[\"报名方式\",{\"1\":{\"480\":1,\"492\":1,\"496\":1,\"500\":1,\"990\":1,\"1002\":1,\"1006\":1,\"1010\":1,\"1505\":1,\"1517\":1,\"1521\":1,\"1525\":1}}],[\"促进优秀开源软件社区的蓬勃发展\",{\"1\":{\"480\":1,\"492\":1,\"496\":1,\"500\":1,\"990\":1,\"1002\":1,\"1006\":1,\"1010\":1,\"1505\":1,\"1517\":1,\"1521\":1,\"1525\":1}}],[\"暑期\",{\"0\":{\"480\":1,\"492\":1,\"496\":1,\"500\":1,\"990\":1,\"1002\":1,\"1006\":1,\"1010\":1,\"1505\":1,\"1517\":1,\"1521\":1,\"1525\":1},\"1\":{\"480\":1,\"492\":1,\"496\":1,\"500\":1,\"990\":1,\"1002\":1,\"1006\":1,\"1010\":1,\"1505\":1,\"1517\":1,\"1521\":1,\"1525\":1}}],[\"填写适配器相关信息并提交\",{\"1\":{\"479\":1,\"989\":1,\"1504\":1}}],[\"商店\",{\"1\":{\"479\":1,\"989\":1,\"1504\":1}}],[\"申请添加好友事件\",{\"1\":{\"476\":1,\"986\":1,\"1501\":1}}],[\"加载所有可用插件\",{\"1\":{\"1825\":1,\"2194\":1,\"2563\":1}}],[\"加载所有传入的插件模块名称\",{\"1\":{\"517\":1,\"1027\":1,\"1542\":1}}],[\"加载指定插件\",{\"1\":{\"1824\":1,\"2193\":1,\"2562\":1}}],[\"加载单个插件\",{\"1\":{\"1809\":1,\"2178\":1,\"2547\":1}}],[\"加载传入插件列表中的所有内置插件\",{\"1\":{\"521\":1,\"1031\":1,\"1546\":1}}],[\"加载传入插件目录中的所有插件\",{\"1\":{\"516\":1,\"1026\":1,\"1541\":1}}],[\"加载一个内置插件\",{\"1\":{\"520\":1,\"1030\":1,\"1545\":1}}],[\"加载项目插件\",{\"1\":{\"515\":1,\"1025\":1,\"1540\":1}}],[\"加载第三方插件\",{\"1\":{\"515\":1,\"1025\":1,\"1540\":1}}],[\"加载的插件模块名称\",{\"1\":{\"514\":1,\"1024\":1,\"1539\":1}}],[\"加载插件的方式有多种\",{\"1\":{\"514\":1,\"1024\":1,\"1539\":1}}],[\"加载插件的方法来加载子插件\",{\"1\":{\"112\":1,\"620\":1,\"1130\":1}}],[\"加载插件是在机器人入口文件中完成的\",{\"1\":{\"514\":1,\"1024\":1,\"1539\":1}}],[\"加载插件等工作\",{\"1\":{\"507\":1,\"1017\":1,\"1532\":1}}],[\"加载插件\",{\"0\":{\"514\":1,\"1024\":1,\"1539\":1},\"1\":{\"495\":1,\"514\":1,\"1005\":1,\"1024\":1,\"1520\":1,\"1539\":1}}],[\"加入房间事件\",{\"1\":{\"476\":1,\"986\":1,\"1501\":1}}],[\"心跳时间\",{\"1\":{\"476\":1,\"986\":1,\"1501\":1}}],[\"回复事件的方法\",{\"1\":{\"475\":1,\"985\":1,\"1500\":1}}],[\"飞书是目前企业用户广泛使用的即时聊天和协作软件\",{\"1\":{\"487\":1,\"997\":1,\"1512\":1}}],[\"飞书适配器\",{\"0\":{\"487\":1,\"997\":1,\"1512\":1}}],[\"飞书\",{\"1\":{\"474\":1,\"498\":1,\"984\":1,\"1008\":1,\"1499\":1,\"1523\":1}}],[\"采用了扁平化的消息序列形式\",{\"1\":{\"528\":1,\"1038\":1,\"1553\":1}}],[\"采用了一套自行定义的依赖注入系统\",{\"1\":{\"6\":1,\"18\":1,\"30\":1}}],[\"采用\",{\"1\":{\"474\":2,\"984\":2,\"1499\":2}}],[\"给予日志提示\",{\"1\":{\"474\":1,\"984\":1,\"1499\":1}}],[\"给出日志提示\",{\"1\":{\"473\":1,\"983\":1,\"1498\":1}}],[\"让我们了解下示例中出现的\",{\"1\":{\"1923\":1,\"2292\":1,\"2661\":1}}],[\"让有更复杂需求的用户\",{\"1\":{\"495\":1,\"1005\":1,\"1520\":1}}],[\"让\",{\"1\":{\"473\":1,\"475\":1,\"983\":1,\"985\":1,\"1498\":1,\"1500\":1}}],[\"无需手动迁移\",{\"1\":{\"2679\":1,\"2694\":1,\"2709\":1}}],[\"无需平台适配接入即可对机器人进行测试\",{\"1\":{\"494\":1,\"1004\":1,\"1519\":1}}],[\"无\",{\"1\":{\"1894\":3,\"2263\":3,\"2632\":3}}],[\"无名的纯文字头\",{\"1\":{\"1887\":1,\"2256\":1,\"2625\":1}}],[\"无名的元素类头\",{\"1\":{\"1887\":1,\"2256\":1,\"2625\":1}}],[\"无前缀的类型头\",{\"1\":{\"1887\":1,\"2256\":1,\"2625\":1}}],[\"无前缀的正则头\",{\"1\":{\"1887\":1,\"2256\":1,\"2625\":1}}],[\"无前缀的元素头\",{\"1\":{\"1887\":1,\"2256\":1,\"2625\":1}}],[\"无前缀的纯文字头\",{\"1\":{\"1887\":1,\"2256\":1,\"2625\":1}}],[\"无论是接收还是发送的消息\",{\"1\":{\"528\":1,\"1038\":1,\"1553\":1}}],[\"无论是在开发还是在生产环境中\",{\"1\":{\"416\":1,\"926\":1,\"1441\":1}}],[\"无法回退\",{\"1\":{\"2684\":1,\"2699\":1,\"2714\":1}}],[\"无法将其转换为插件而出现意料之外的情况\",{\"1\":{\"514\":1,\"1024\":1,\"1539\":1}}],[\"无法正常解析为具体\",{\"1\":{\"473\":1,\"983\":1,\"1498\":1}}],[\"做一层异常处理\",{\"1\":{\"473\":1,\"983\":1,\"1498\":1}}],[\"反向\",{\"1\":{\"471\":1,\"981\":1,\"1496\":1}}],[\"反序列化后一起带入\",{\"1\":{\"165\":1,\"673\":1,\"1183\":1}}],[\"尝试重连\",{\"1\":{\"470\":1,\"980\":1,\"1495\":1}}],[\"鉴权请求头\",{\"1\":{\"470\":1,\"980\":1,\"1495\":1}}],[\"建立一个\",{\"1\":{\"1599\":1,\"1968\":1,\"2318\":1}}],[\"建立通信连接\",{\"1\":{\"1589\":1,\"1958\":1,\"2308\":1}}],[\"建立了一个新的\",{\"1\":{\"1594\":1,\"1963\":1,\"2313\":1}}],[\"建立了\",{\"1\":{\"472\":1,\"982\":1,\"1497\":1}}],[\"建立服务端路由\",{\"1\":{\"471\":1,\"981\":1,\"1496\":1}}],[\"建立\",{\"0\":{\"472\":1,\"982\":1,\"1497\":1},\"1\":{\"470\":1,\"472\":1,\"980\":1,\"982\":1,\"1495\":1,\"1497\":1}}],[\"任意额外参数\",{\"1\":{\"1576\":1,\"1945\":1,\"2326\":1}}],[\"任意变量\",{\"1\":{\"224\":1,\"732\":1,\"1244\":1}}],[\"任选一个\",{\"1\":{\"491\":1,\"1001\":1,\"1516\":1}}],[\"任务\",{\"1\":{\"470\":1,\"980\":1,\"1495\":1}}],[\"读取适配器所需的配置项\",{\"1\":{\"468\":1,\"978\":1,\"1493\":1}}],[\"读取文件内容\",{\"1\":{\"433\":1,\"943\":1,\"1458\":1}}],[\"输入适配器名称以及存储位置\",{\"1\":{\"464\":1,\"974\":1,\"1489\":1}}],[\"输出格式为\",{\"1\":{\"1924\":1,\"2293\":1,\"2662\":1}}],[\"输出的日志等级\",{\"1\":{\"455\":1,\"965\":1,\"1480\":1}}],[\"输出至\",{\"1\":{\"227\":1,\"735\":1,\"1247\":1}}],[\"输出\",{\"1\":{\"227\":1,\"735\":1,\"1247\":1}}],[\"输出目录\",{\"1\":{\"113\":1,\"513\":1,\"621\":1,\"1023\":1,\"1131\":1,\"1538\":1}}],[\"按照指引\",{\"1\":{\"464\":1,\"974\":1,\"1489\":1}}],[\"保证实际可用性即可\",{\"1\":{\"463\":1,\"973\":1,\"1488\":1}}],[\"组合时\",{\"1\":{\"1891\":1,\"2260\":1,\"2629\":1}}],[\"组合\",{\"1\":{\"1585\":1,\"1954\":1,\"2335\":1}}],[\"组合而成\",{\"1\":{\"47\":1,\"555\":1,\"1065\":1}}],[\"组件库及相关插件\",{\"1\":{\"501\":1,\"1011\":1,\"1526\":1}}],[\"组件库及\",{\"1\":{\"501\":1,\"1011\":1,\"1526\":1}}],[\"组成部分\",{\"0\":{\"465\":1,\"975\":1,\"1490\":1}}],[\"组织结构\",{\"0\":{\"463\":1,\"973\":1,\"1488\":1}}],[\"四个部分组成\",{\"1\":{\"462\":1,\"972\":1,\"1487\":1}}],[\"作用域与会话相同\",{\"1\":{\"2680\":1,\"2695\":1,\"2710\":1}}],[\"作用域为当前事件\",{\"1\":{\"2680\":1,\"2695\":1,\"2710\":1}}],[\"作出的贡献\",{\"1\":{\"461\":1,\"971\":1,\"1486\":1}}],[\"作为快捷指令的配置\",{\"1\":{\"1900\":1,\"2269\":1,\"2638\":1}}],[\"作为解析操作\",{\"1\":{\"1894\":1,\"2263\":1,\"2632\":1}}],[\"作为唯一的前置序列与命令嵌套替换\",{\"1\":{\"1893\":1,\"2262\":1,\"2631\":1}}],[\"作为\",{\"1\":{\"1890\":1,\"1934\":1,\"1935\":1,\"2259\":1,\"2303\":1,\"2304\":1,\"2628\":1,\"2672\":1,\"2673\":1}}],[\"作为消息\",{\"1\":{\"533\":1,\"1043\":1,\"1558\":1}}],[\"作为纯文本消息回复\",{\"1\":{\"531\":1,\"1041\":1,\"1556\":1}}],[\"作为特殊消息载体的存在\",{\"1\":{\"531\":1,\"1041\":1,\"1556\":1}}],[\"作为众多用户期待的平台适配之一\",{\"1\":{\"498\":1,\"1008\":1,\"1523\":1}}],[\"作为一个跨平台聊天机器人框架\",{\"1\":{\"498\":1,\"1008\":1,\"1523\":1}}],[\"作为项目名\",{\"1\":{\"463\":1,\"973\":1,\"1488\":1}}],[\"作为前缀\",{\"1\":{\"456\":1,\"966\":1,\"1481\":1}}],[\"作为插件\",{\"1\":{\"451\":1,\"961\":1,\"1476\":1}}],[\"作为命令解析器\",{\"1\":{\"108\":1,\"616\":1,\"1126\":1}}],[\"作为最高优先级同样存储于该字典中\",{\"1\":{\"81\":1,\"589\":1,\"1099\":1}}],[\"感谢以下开发者对\",{\"1\":{\"461\":1,\"971\":1,\"1486\":1}}],[\"鸣谢\",{\"0\":{\"461\":1,\"971\":1,\"1486\":1}}],[\"贡献指南\",{\"0\":{\"458\":1,\"968\":1,\"1483\":1}}],[\"qqguild\",{\"1\":{\"471\":1,\"477\":1,\"981\":1,\"987\":1,\"1496\":1,\"1502\":1}}],[\"qq\",{\"1\":{\"457\":2,\"474\":1,\"482\":2,\"489\":4,\"492\":1,\"498\":1,\"967\":2,\"984\":1,\"992\":2,\"999\":4,\"1002\":1,\"1008\":1,\"1482\":2,\"1499\":1,\"1507\":2,\"1514\":4,\"1517\":1,\"1523\":1}}],[\"qux\",{\"1\":{\"1890\":2,\"1893\":2,\"2259\":2,\"2262\":2,\"2628\":2,\"2631\":2}}],[\"query\",{\"1\":{\"1895\":1,\"1901\":1,\"1903\":2,\"1906\":1,\"2264\":1,\"2270\":1,\"2272\":2,\"2275\":1,\"2633\":1,\"2639\":1,\"2641\":2,\"2644\":1}}],[\"querytypes\",{\"1\":{\"1652\":1,\"1659\":1,\"1698\":1,\"1704\":1,\"1728\":1,\"1753\":1,\"2021\":1,\"2028\":1,\"2067\":1,\"2073\":1,\"2097\":1,\"2122\":1,\"2390\":1,\"2397\":1,\"2436\":1,\"2442\":1,\"2473\":1,\"2478\":1}}],[\"question\",{\"1\":{\"457\":1,\"967\":1,\"1482\":1}}],[\"quart\",{\"0\":{\"70\":1,\"71\":1,\"578\":1,\"579\":1,\"1088\":1,\"1089\":1,\"1764\":1,\"2133\":1,\"2502\":1},\"1\":{\"70\":2,\"77\":1,\"578\":2,\"585\":1,\"1088\":2,\"1095\":1,\"1764\":3,\"1765\":1,\"1771\":1,\"1772\":1,\"1773\":1,\"1774\":2,\"1775\":1,\"1776\":1,\"1779\":1,\"1780\":1,\"2133\":3,\"2134\":1,\"2140\":1,\"2141\":1,\"2142\":1,\"2143\":2,\"2144\":1,\"2145\":1,\"2148\":1,\"2149\":1,\"2502\":3,\"2503\":1,\"2509\":1,\"2510\":1,\"2511\":1,\"2512\":2,\"2513\":1,\"2514\":1,\"2517\":1,\"2518\":1}}],[\"页面\",{\"1\":{\"457\":1,\"967\":1,\"1482\":1}}],[\"过滤消息\",{\"1\":{\"1616\":1,\"1617\":1,\"1985\":1,\"1986\":1,\"2354\":1,\"2355\":1}}],[\"过滤索引与切片\",{\"1\":{\"541\":1,\"1051\":1,\"1566\":1}}],[\"过滤\",{\"0\":{\"541\":1,\"1051\":1,\"1566\":1}}],[\"过程中遇到了任何问题\",{\"1\":{\"457\":1,\"967\":1,\"1482\":1}}],[\"过时即被删除\",{\"1\":{\"242\":1,\"750\":1,\"1263\":1,\"1856\":1,\"1857\":1,\"1858\":1,\"1859\":1,\"1860\":1,\"1861\":1,\"1862\":1,\"1863\":1,\"1864\":1,\"1865\":1,\"1866\":1,\"1867\":1,\"1868\":1,\"1870\":1,\"1871\":1,\"1873\":1,\"1874\":1,\"1875\":1,\"1876\":1,\"1877\":1,\"1878\":1,\"1879\":1,\"1880\":1,\"1881\":1,\"1882\":1,\"1883\":1,\"1884\":1,\"1885\":1,\"2225\":1,\"2226\":1,\"2227\":1,\"2228\":1,\"2229\":1,\"2230\":1,\"2231\":1,\"2232\":1,\"2233\":1,\"2234\":1,\"2235\":1,\"2236\":1,\"2237\":1,\"2239\":1,\"2240\":1,\"2242\":1,\"2243\":1,\"2244\":1,\"2245\":1,\"2246\":1,\"2247\":1,\"2248\":1,\"2249\":1,\"2250\":1,\"2251\":1,\"2252\":1,\"2253\":1,\"2254\":1,\"2594\":1,\"2595\":1,\"2596\":1,\"2597\":1,\"2598\":1,\"2599\":1,\"2600\":1,\"2601\":1,\"2602\":1,\"2603\":1,\"2604\":1,\"2605\":1,\"2606\":1,\"2608\":1,\"2609\":1,\"2611\":1,\"2612\":1,\"2613\":1,\"2614\":1,\"2615\":1,\"2616\":1,\"2617\":1,\"2618\":1,\"2619\":1,\"2620\":1,\"2621\":1,\"2622\":1,\"2623\":1}}],[\"若\",{\"1\":{\"1902\":2,\"2271\":2,\"2640\":2}}],[\"若快捷指令为\",{\"1\":{\"1902\":1,\"2271\":1,\"2640\":1}}],[\"若匹配成功则会传入参数\",{\"1\":{\"1902\":1,\"2271\":1,\"2640\":1}}],[\"若为\",{\"1\":{\"1896\":1,\"2265\":1,\"2634\":1}}],[\"若传入为\",{\"1\":{\"1893\":1,\"2262\":1,\"2631\":1}}],[\"若没有某个\",{\"1\":{\"1890\":1,\"2259\":1,\"2628\":1}}],[\"若需要\",{\"1\":{\"1889\":1,\"2258\":1,\"2627\":1}}],[\"若不启动需要自行调用\",{\"1\":{\"454\":1,\"964\":1,\"1479\":1}}],[\"若插件可以保证兼容所有适配器\",{\"1\":{\"110\":1,\"618\":1,\"1128\":1}}],[\"关键词列表\",{\"1\":{\"1864\":1,\"1881\":1,\"2233\":1,\"2250\":1,\"2602\":1,\"2619\":1}}],[\"关闭\",{\"1\":{\"1738\":1,\"2107\":1,\"2485\":1}}],[\"关闭冷重载\",{\"1\":{\"1675\":1,\"1766\":1,\"2044\":1,\"2135\":1,\"2413\":1,\"2504\":1}}],[\"关闭数据库连接\",{\"1\":{\"128\":1,\"636\":1,\"1146\":1}}],[\"关于具体的活动规划\",{\"1\":{\"480\":1,\"492\":1,\"496\":1,\"500\":1,\"990\":1,\"1002\":1,\"1006\":1,\"1010\":1,\"1505\":1,\"1517\":1,\"1521\":1,\"1525\":1}}],[\"关于适配器测试相关内容在这里不再展开\",{\"1\":{\"478\":1,\"988\":1,\"1503\":1}}],[\"关于\",{\"1\":{\"452\":1,\"962\":1,\"1477\":1}}],[\"调试类\",{\"1\":{\"1895\":1,\"2264\":1,\"2633\":1}}],[\"调研各聊天机器人平台的官方\",{\"1\":{\"489\":1,\"999\":1,\"1514\":1}}],[\"调研飞书机器人\",{\"1\":{\"487\":1,\"997\":1,\"1512\":1}}],[\"调研\",{\"1\":{\"486\":1,\"498\":1,\"996\":1,\"1008\":1,\"1511\":1,\"1523\":1}}],[\"调研现有的\",{\"1\":{\"485\":1,\"995\":1,\"1510\":1}}],[\"调研市面上常见的\",{\"1\":{\"483\":1,\"993\":1,\"1508\":1}}],[\"调度器来创建定时任务\",{\"1\":{\"451\":1,\"961\":1,\"1476\":1}}],[\"调用栈深度\",{\"1\":{\"1853\":1,\"1854\":1,\"1855\":1,\"2222\":1,\"2223\":1,\"2224\":1,\"2591\":1,\"2592\":1,\"2593\":1}}],[\"调用的返回\",{\"1\":{\"1578\":1,\"1947\":1,\"2328\":1}}],[\"调用的参数字典\",{\"1\":{\"1577\":1,\"1578\":1,\"1946\":1,\"1947\":1,\"2327\":1,\"2328\":1}}],[\"调用的\",{\"1\":{\"1577\":1,\"1578\":1,\"1946\":1,\"1947\":1,\"2327\":1,\"2328\":1}}],[\"调用机器人基础发送消息接口\",{\"1\":{\"1576\":1,\"1945\":1,\"2326\":1}}],[\"调用机器人\",{\"1\":{\"1575\":1,\"1944\":1,\"2325\":1}}],[\"调用后根据不同的参数返回一个\",{\"1\":{\"525\":1,\"1035\":1,\"1550\":1}}],[\"调用发送消息接口进行发送\",{\"1\":{\"475\":1,\"985\":1,\"1500\":1}}],[\"调用\",{\"1\":{\"474\":1,\"475\":2,\"984\":1,\"985\":2,\"1499\":1,\"1500\":2,\"1577\":1,\"1578\":2,\"1946\":1,\"1947\":2,\"2327\":1,\"2328\":2}}],[\"调用平台\",{\"0\":{\"474\":1,\"984\":1,\"1499\":1},\"1\":{\"474\":1,\"475\":1,\"495\":1,\"984\":1,\"985\":1,\"1005\":1,\"1499\":1,\"1500\":1,\"1520\":1}}],[\"调用平台接口是指将机器人插件调用平台接口的数据转换为平台指定的格式\",{\"1\":{\"37\":1,\"545\":1,\"1055\":1}}],[\"调用接口\",{\"1\":{\"468\":1,\"978\":1,\"1493\":1,\"1570\":1,\"1939\":1,\"2320\":1}}],[\"调用该函数以实现分发事件\",{\"1\":{\"293\":1,\"801\":1,\"1313\":1}}],[\"调用或修改本次调用返回值\",{\"1\":{\"202\":1,\"710\":1,\"1222\":1}}],[\"留空即会停用插件\",{\"1\":{\"446\":1,\"956\":1,\"1471\":1}}],[\"留空则会根据参数名称获取\",{\"1\":{\"298\":1,\"806\":1,\"1316\":1}}],[\"甚至是由于第三方服务的错误\",{\"1\":{\"442\":1,\"952\":1,\"1467\":1}}],[\"71a72119935f\",{\"1\":{\"1924\":1,\"2293\":1,\"2662\":1}}],[\"793\",{\"1\":{\"495\":1,\"1005\":1,\"1520\":1}}],[\"737131827\",{\"1\":{\"492\":1,\"1002\":1,\"1517\":1}}],[\"7\",{\"1\":{\"437\":1,\"438\":1,\"947\":1,\"948\":1,\"1462\":1,\"1463\":1,\"2726\":1,\"2733\":1,\"2740\":1}}],[\"xyz\",{\"1\":{\"1903\":1,\"2272\":1,\"2641\":1}}],[\"x\",{\"1\":{\"1890\":8,\"1902\":8,\"2259\":8,\"2271\":8,\"2628\":8,\"2640\":8}}],[\"xxx键对应的值\",{\"1\":{\"1895\":2,\"2264\":2,\"2633\":2}}],[\"xxxxxxxxxxxx\",{\"1\":{\"2679\":4,\"2694\":4,\"2709\":4}}],[\"xxxx\",{\"1\":{\"1890\":1,\"2259\":1,\"2628\":1}}],[\"xxx\",{\"1\":{\"467\":2,\"471\":1,\"977\":2,\"981\":1,\"1492\":2,\"1496\":1,\"1887\":1,\"1890\":10,\"1895\":3,\"1899\":1,\"1902\":1,\"2256\":1,\"2259\":10,\"2264\":3,\"2268\":1,\"2271\":1,\"2625\":1,\"2628\":10,\"2633\":3,\"2637\":1,\"2640\":1}}],[\"xp\",{\"1\":{\"437\":1,\"438\":1,\"947\":1,\"948\":1,\"1462\":1,\"1463\":1}}],[\"xdg\",{\"1\":{\"436\":1,\"946\":1,\"1461\":1}}],[\"数据库作用域会话\",{\"1\":{\"2685\":1,\"2700\":1,\"2715\":1}}],[\"数据库会话\",{\"0\":{\"2683\":1,\"2698\":1,\"2713\":1}}],[\"数据库模式会自动与模型定义同步\",{\"1\":{\"2679\":1,\"2694\":1,\"2709\":1}}],[\"数据库的模式就会回到原来的状态\",{\"1\":{\"2679\":1,\"2694\":1,\"2709\":1}}],[\"数据库\",{\"1\":{\"1930\":2,\"2299\":2,\"2668\":2,\"2726\":1,\"2733\":1,\"2740\":1}}],[\"数据库驱动和后端\",{\"1\":{\"1929\":1,\"2298\":1,\"2667\":1}}],[\"数据库支持插件\",{\"0\":{\"499\":1,\"1009\":1,\"1524\":1}}],[\"数据\",{\"1\":{\"1575\":1,\"1944\":1,\"2325\":1}}],[\"数据存放散乱等现象\",{\"1\":{\"499\":1,\"1009\":1,\"1524\":1}}],[\"数据存储\",{\"0\":{\"431\":1,\"941\":1,\"1456\":1}}],[\"数据存储插件等\",{\"1\":{\"115\":1,\"623\":1,\"1133\":1}}],[\"数据目录为\",{\"1\":{\"437\":1,\"947\":1,\"1462\":1}}],[\"否则\",{\"1\":{\"436\":1,\"437\":1,\"438\":1,\"946\":1,\"947\":1,\"948\":1,\"1461\":1,\"1462\":1,\"1463\":1}}],[\"否则会产生异常\",{\"1\":{\"48\":1,\"556\":1,\"1066\":1}}],[\"缓存目录为\",{\"1\":{\"436\":1,\"946\":1,\"1461\":1}}],[\"路径以\",{\"1\":{\"1914\":1,\"2283\":1,\"2652\":1}}],[\"路径\",{\"1\":{\"433\":1,\"943\":1,\"1458\":1}}],[\"路由地址\",{\"1\":{\"471\":2,\"981\":2,\"1496\":2}}],[\"路由处理函数\",{\"1\":{\"120\":1,\"121\":1,\"471\":2,\"628\":1,\"629\":1,\"981\":2,\"1138\":1,\"1139\":1,\"1496\":2}}],[\"路由名称\",{\"1\":{\"120\":1,\"121\":1,\"471\":2,\"628\":1,\"629\":1,\"981\":2,\"1138\":1,\"1139\":1,\"1496\":2}}],[\"路由路径\",{\"1\":{\"120\":1,\"121\":1,\"628\":1,\"629\":1,\"1138\":1,\"1139\":1}}],[\"路由\",{\"0\":{\"120\":1,\"121\":1,\"628\":1,\"629\":1,\"1138\":1,\"1139\":1},\"1\":{\"124\":1,\"471\":2,\"632\":1,\"981\":2,\"1142\":1,\"1496\":2}}],[\"群组\",{\"1\":{\"1585\":1,\"1954\":1,\"2335\":1}}],[\"群组的信息等\",{\"1\":{\"431\":1,\"941\":1,\"1456\":1}}],[\"群\",{\"1\":{\"457\":1,\"492\":1,\"967\":1,\"1002\":1,\"1482\":1,\"1517\":1}}],[\"群聊消息\",{\"1\":{\"422\":1,\"932\":1,\"1447\":1}}],[\"至此\",{\"1\":{\"430\":1,\"940\":1,\"1455\":1}}],[\"密码为\",{\"1\":{\"429\":1,\"939\":1,\"1454\":1}}],[\"密码正确\",{\"1\":{\"429\":1,\"939\":1,\"1454\":1}}],[\"密码错误\",{\"1\":{\"429\":1,\"939\":1,\"1454\":1}}],[\"密码错误次数过多\",{\"1\":{\"429\":1,\"939\":1,\"1454\":1}}],[\"运算符或消息序列的\",{\"1\":{\"540\":1,\"1050\":1,\"1565\":1}}],[\"运算符比较是否相同\",{\"1\":{\"539\":1,\"1049\":1,\"1564\":1}}],[\"运算符合并\",{\"1\":{\"426\":1,\"936\":1,\"1451\":1}}],[\"运算构造\",{\"0\":{\"535\":1,\"1045\":1,\"1560\":1}}],[\"运行协程并在取消时屏蔽取消异常\",{\"1\":{\"917\":1,\"1432\":1}}],[\"运行协程并当遇到指定异常时返回指定值\",{\"1\":{\"408\":1,\"916\":1,\"1431\":1}}],[\"运行之前进行\",{\"1\":{\"514\":1,\"1024\":1,\"1539\":1}}],[\"运行机器人\",{\"0\":{\"508\":1,\"1018\":1,\"1533\":1}}],[\"运行所需要的配置项\",{\"1\":{\"506\":1,\"1016\":1,\"1531\":1}}],[\"运行所使用的\",{\"1\":{\"166\":1,\"674\":1,\"1184\":1}}],[\"运行项目\",{\"1\":{\"493\":1,\"1003\":1,\"1518\":1}}],[\"运行前进行检查\",{\"1\":{\"333\":1,\"347\":1,\"841\":1,\"855\":1,\"1353\":1,\"1370\":1}}],[\"运行环境配置\",{\"1\":{\"163\":1,\"671\":1,\"1181\":1}}],[\"运行中产生的异常\",{\"1\":{\"135\":1,\"643\":1,\"1153\":1}}],[\"运行事件响应器后运行\",{\"1\":{\"135\":1,\"643\":1,\"1153\":1}}],[\"运行事件响应器前运行\",{\"1\":{\"134\":1,\"642\":1,\"1152\":1}}],[\"运行后处理\",{\"0\":{\"135\":1,\"643\":1,\"1153\":1},\"1\":{\"291\":1,\"799\":1,\"1311\":1}}],[\"运行预处理\",{\"0\":{\"134\":1,\"642\":1,\"1152\":1},\"1\":{\"290\":1,\"798\":1,\"1310\":1}}],[\"运行时可能会抛出的异常\",{\"1\":{\"195\":1,\"703\":1,\"1215\":1}}],[\"运行时\",{\"1\":{\"64\":1,\"572\":1,\"1082\":1}}],[\"天气\",{\"1\":{\"424\":1,\"425\":1,\"426\":1,\"526\":4,\"527\":2,\"934\":1,\"935\":1,\"936\":1,\"1036\":4,\"1037\":2,\"1449\":1,\"1450\":1,\"1451\":1,\"1551\":4,\"1552\":2,\"2680\":1,\"2695\":1,\"2710\":1}}],[\"往往会接收到多种多样的事件类型\",{\"1\":{\"423\":1,\"933\":1,\"1448\":1}}],[\"三个部分\",{\"1\":{\"1906\":1,\"2275\":1,\"2644\":1}}],[\"三个命令的响应规则\",{\"1\":{\"1037\":1,\"1552\":1}}],[\"三个命令\",{\"1\":{\"105\":1,\"527\":1,\"613\":1,\"1123\":1}}],[\"三者的参数类型注解具有最高检查优先级\",{\"1\":{\"422\":1,\"932\":1,\"1447\":1}}],[\"私聊消息\",{\"1\":{\"422\":1,\"932\":1,\"1447\":1}}],[\"私聊和群聊消息事件的规则\",{\"1\":{\"103\":1,\"611\":1,\"1121\":1}}],[\"──nb\",{\"1\":{\"493\":1,\"1003\":1,\"1518\":1}}],[\"──\",{\"1\":{\"422\":1,\"932\":1,\"1447\":1}}],[\"针对重要开源软件的开发与维护提供项目开发任务\",{\"1\":{\"500\":1,\"1010\":1,\"1525\":1}}],[\"针对某聊天平台的对接代码\",{\"1\":{\"490\":1,\"491\":1,\"1000\":1,\"1001\":1,\"1515\":1,\"1516\":1}}],[\"针对这些问题\",{\"1\":{\"422\":1,\"932\":1,\"1447\":1}}],[\"针对其本身运行过程的钩子函数\",{\"1\":{\"126\":1,\"634\":1,\"1144\":1}}],[\"常用于事件响应器和有与响应逻辑相关的数据库操作逻辑的插件\",{\"1\":{\"2685\":1,\"2700\":1,\"2715\":1}}],[\"常用于有独立的数据库操作逻辑的插件\",{\"1\":{\"2684\":1,\"2699\":1,\"2714\":1}}],[\"常用于卸载插件后删除其数据\",{\"1\":{\"1926\":1,\"2295\":1,\"2664\":1}}],[\"常用的方法有\",{\"1\":{\"433\":1,\"943\":1,\"1458\":1}}],[\"常常会遇到这样一个问题\",{\"1\":{\"422\":1,\"932\":1,\"1447\":1}}],[\"常见的驱动器配置如下\",{\"1\":{\"54\":1,\"562\":1,\"1072\":1}}],[\"重复的测试不可靠\",{\"1\":{\"2690\":1,\"2705\":1,\"2720\":1}}],[\"重复加载将会导致异常\",{\"1\":{\"514\":1,\"1024\":1,\"1539\":1}}],[\"重构现有工作流处理结构\",{\"1\":{\"502\":1,\"1012\":1,\"1527\":1}}],[\"重构\",{\"1\":{\"501\":1,\"1011\":1,\"1526\":1}}],[\"重连间隔\",{\"1\":{\"470\":1,\"980\":1,\"1495\":1}}],[\"重定向\",{\"0\":{\"419\":1,\"929\":1,\"1444\":1}}],[\"重载机制对所有的参数类型注解都有效\",{\"1\":{\"422\":1,\"932\":1,\"1447\":1}}],[\"重载\",{\"0\":{\"422\":1,\"932\":1,\"1447\":1},\"1\":{\"218\":1,\"259\":1,\"261\":1,\"262\":1,\"265\":1,\"278\":1,\"319\":1,\"363\":1,\"408\":1,\"422\":1,\"726\":1,\"767\":1,\"769\":1,\"770\":1,\"773\":1,\"786\":1,\"827\":1,\"871\":1,\"916\":1,\"932\":1,\"1238\":1,\"1280\":1,\"1282\":1,\"1283\":1,\"1286\":1,\"1298\":1,\"1340\":1,\"1386\":1,\"1431\":1,\"1447\":1,\"1605\":1,\"1750\":1,\"1974\":1,\"2119\":1,\"2343\":1,\"2495\":1,\"2689\":1,\"2704\":1,\"2719\":1}}],[\"重载延迟\",{\"1\":{\"66\":1,\"74\":1,\"574\":1,\"582\":1,\"1084\":1,\"1092\":1,\"1677\":1,\"1768\":1,\"2046\":1,\"2137\":1,\"2415\":1,\"2506\":1}}],[\"重载监控文件夹列表\",{\"1\":{\"65\":1,\"73\":1,\"573\":1,\"581\":1,\"1083\":1,\"1091\":1,\"1676\":1,\"1767\":1,\"2045\":1,\"2136\":1,\"2414\":1,\"2505\":1}}],[\"移除\",{\"1\":{\"418\":1,\"928\":1,\"1443\":1}}],[\"级别的日志\",{\"1\":{\"417\":1,\"927\":1,\"1442\":1}}],[\"控制台中仅会输出大于等于\",{\"1\":{\"417\":1,\"927\":1,\"1442\":1}}],[\"库来进行日志记录\",{\"1\":{\"416\":1,\"926\":1,\"1441\":1}}],[\"分析类\",{\"1\":{\"1895\":1,\"2264\":1,\"2633\":1}}],[\"分析等\",{\"1\":{\"416\":1,\"926\":1,\"1441\":1}}],[\"分为三类\",{\"1\":{\"1894\":1,\"2263\":1,\"2632\":1}}],[\"分割\",{\"1\":{\"1889\":1,\"2258\":1,\"2627\":1}}],[\"分隔\",{\"1\":{\"1889\":1,\"1914\":1,\"2258\":1,\"2283\":1,\"2627\":1,\"2652\":1}}],[\"分离\",{\"1\":{\"489\":1,\"999\":1,\"1514\":1}}],[\"分别对应驱动框架应用和\",{\"1\":{\"123\":1,\"631\":1,\"1141\":1}}],[\"分别对应元事件\",{\"1\":{\"86\":1,\"594\":1,\"1104\":1}}],[\"分别用于定义\",{\"1\":{\"119\":1,\"627\":1,\"1137\":1}}],[\"分别是接收事件和调用平台接口\",{\"1\":{\"37\":1,\"545\":1,\"1055\":1}}],[\"排查问题等\",{\"1\":{\"416\":1,\"926\":1,\"1441\":1}}],[\"要连接的消息\",{\"1\":{\"1614\":1,\"1983\":1,\"2352\":1}}],[\"要添加的消息数组\",{\"1\":{\"1613\":1,\"1982\":1,\"2351\":1}}],[\"要添加的消息段\",{\"1\":{\"1612\":1,\"1981\":1,\"2350\":1}}],[\"要发送的消息\",{\"1\":{\"1576\":1,\"1945\":1,\"2326\":1}}],[\"要做的是让\",{\"1\":{\"490\":1,\"491\":1,\"1000\":1,\"1001\":1,\"1515\":1,\"1516\":1}}],[\"要捕获的异常\",{\"1\":{\"408\":1,\"916\":1,\"1431\":1}}],[\"要运行的协程\",{\"1\":{\"408\":1,\"916\":1,\"917\":1,\"1431\":1,\"1432\":1}}],[\"要监听的文件列表\",{\"1\":{\"67\":1,\"75\":1,\"575\":1,\"583\":1,\"1085\":1,\"1093\":1,\"1678\":1,\"1769\":1,\"2047\":1,\"2138\":1,\"2416\":1,\"2507\":1}}],[\"被存储\",{\"1\":{\"2684\":1,\"2699\":1,\"2714\":1}}],[\"被指定为解析完成时标注匹配结果的标识符\",{\"1\":{\"1893\":1,\"2262\":1,\"2631\":1}}],[\"被装饰的同步函数\",{\"1\":{\"406\":1,\"914\":1,\"1429\":1}}],[\"被称为钩子\",{\"1\":{\"125\":1,\"633\":1,\"1143\":1}}],[\"协议\",{\"1\":{\"475\":1,\"985\":1,\"1500\":1}}],[\"协议适配器基类\",{\"1\":{\"1589\":1,\"1958\":1,\"2308\":1}}],[\"协议适配器名称\",{\"1\":{\"1573\":1,\"1942\":1,\"2323\":1}}],[\"协议适配器实例\",{\"1\":{\"1570\":1,\"1571\":1,\"1939\":1,\"1940\":1,\"2320\":1,\"2321\":1}}],[\"协议适配器来演示消息序列的使用方法\",{\"1\":{\"532\":1,\"1042\":1,\"1557\":1}}],[\"协议适配器会将\",{\"1\":{\"526\":1,\"1036\":1,\"1551\":1}}],[\"协议适配器会将事件合理地分类至这四种类型中\",{\"1\":{\"86\":1,\"594\":1,\"1104\":1}}],[\"协议适配器的消息事件提供的发送时间\",{\"1\":{\"421\":1,\"931\":1,\"1446\":1}}],[\"协议适配器为例\",{\"1\":{\"421\":1,\"422\":1,\"931\":1,\"932\":1,\"1446\":1,\"1447\":1}}],[\"协议适配器自定义\",{\"1\":{\"53\":2,\"561\":2,\"1071\":2}}],[\"协程的返回值\",{\"1\":{\"917\":1,\"1432\":1}}],[\"协程的返回值或发生异常时的指定值\",{\"1\":{\"408\":1,\"916\":1,\"1431\":1}}],[\"协程函数\",{\"1\":{\"403\":1,\"911\":1,\"1426\":1}}],[\"带有默认值的参数\",{\"1\":{\"383\":1,\"384\":1,\"387\":1,\"388\":1,\"389\":1,\"390\":1,\"391\":1,\"392\":1,\"394\":1,\"395\":1,\"891\":1,\"892\":1,\"895\":1,\"896\":1,\"897\":1,\"898\":1,\"899\":1,\"900\":1,\"902\":1,\"903\":1,\"1406\":1,\"1407\":1,\"1410\":1,\"1411\":1,\"1412\":1,\"1413\":1,\"1414\":1,\"1415\":1,\"1417\":1,\"1418\":1}}],[\"判断消息段是否为纯文本\",{\"1\":{\"537\":1,\"1047\":1,\"1562\":1}}],[\"判断消息是否为命令\",{\"1\":{\"361\":1,\"365\":1,\"869\":1,\"873\":1,\"1384\":1,\"1388\":1}}],[\"判断为\",{\"1\":{\"526\":1,\"1036\":1,\"1551\":1}}],[\"判断该消息段是否为纯文本\",{\"1\":{\"477\":1,\"987\":1,\"1502\":1}}],[\"判断事件是否和机器人有关\",{\"1\":{\"476\":1,\"986\":1,\"1501\":1}}],[\"判断用户配置的driver类型是否符合适配器要求\",{\"1\":{\"470\":1,\"980\":1,\"1495\":1}}],[\"判断是否是\",{\"1\":{\"376\":1,\"378\":1,\"379\":1,\"884\":1,\"886\":1,\"887\":1,\"1399\":1,\"1401\":1,\"1402\":1}}],[\"语句中可以使用子依赖\",{\"1\":{\"2688\":1,\"2703\":1,\"2718\":1}}],[\"语句中也可以有子依赖\",{\"1\":{\"2681\":1,\"2696\":1,\"2711\":1}}],[\"语句提供数据\",{\"1\":{\"2681\":1,\"2696\":1,\"2711\":1}}],[\"语句\",{\"1\":{\"2679\":1,\"2688\":2,\"2694\":1,\"2703\":2,\"2709\":1,\"2718\":2}}],[\"语句导入插件\",{\"1\":{\"116\":1,\"624\":1,\"1134\":1}}],[\"语法\",{\"1\":{\"372\":1,\"880\":1,\"1395\":1}}],[\"模型定义\",{\"0\":{\"2678\":1,\"2693\":1,\"2708\":1}}],[\"模型继承自\",{\"1\":{\"473\":1,\"983\":1,\"1498\":1}}],[\"模拟通信\",{\"1\":{\"1935\":1,\"2304\":1,\"2673\":1}}],[\"模拟网络通信可以帮助我们更加接近实际机器人应用场景\",{\"1\":{\"1933\":1,\"2302\":1,\"2671\":1}}],[\"模拟网络通信\",{\"0\":{\"1933\":1,\"2302\":1,\"2671\":1}}],[\"模糊匹配会应用在任意需要进行名称判断的地方\",{\"1\":{\"1904\":1,\"2273\":1,\"2642\":1}}],[\"模糊匹配\",{\"0\":{\"1904\":1,\"2273\":1,\"2642\":1}}],[\"模糊匹配阈值\",{\"1\":{\"1896\":1,\"2265\":1,\"2634\":1}}],[\"模板\",{\"1\":{\"1632\":1,\"2001\":1,\"2370\":1}}],[\"模板创建了项目\",{\"1\":{\"513\":1,\"1023\":1,\"1538\":1}}],[\"模式安装的适配器代码\",{\"1\":{\"478\":1,\"988\":1,\"1503\":1}}],[\"模式才会显示\",{\"1\":{\"455\":1,\"965\":1,\"1480\":1}}],[\"模式来确保匹配开头\",{\"1\":{\"101\":1,\"609\":1,\"1119\":1}}],[\"模块名\",{\"1\":{\"1804\":1,\"2173\":1,\"2542\":1}}],[\"模块直接导入使用\",{\"1\":{\"525\":1,\"1035\":1,\"1550\":1}}],[\"模块\",{\"1\":{\"490\":1,\"491\":1,\"1000\":1,\"1001\":1,\"1515\":1,\"1516\":1}}],[\"模块导入以使用\",{\"1\":{\"418\":1,\"928\":1,\"1443\":1}}],[\"模块中共享的一些类型\",{\"1\":{\"372\":1,\"880\":1,\"1395\":1}}],[\"字段进行加载\",{\"1\":{\"518\":1,\"1028\":1,\"1543\":1}}],[\"字段和\",{\"1\":{\"518\":1,\"1028\":1,\"1543\":1}}],[\"字符串与消息段相加\",{\"1\":{\"542\":1,\"1052\":1,\"1567\":1}}],[\"字符串与消息序列相加\",{\"1\":{\"542\":1,\"1052\":1,\"1567\":1}}],[\"字符串\",{\"1\":{\"367\":1,\"875\":1,\"1390\":1,\"1890\":1,\"2259\":1,\"2628\":1}}],[\"字典内可以存储任意类型的数据\",{\"1\":{\"429\":1,\"939\":1,\"1454\":1}}],[\"字典\",{\"1\":{\"321\":1,\"367\":1,\"829\":1,\"875\":1,\"1342\":1,\"1390\":1}}],[\"字典的键名来达成收集某些特殊信息的目的\",{\"1\":{\"110\":1,\"618\":1,\"1128\":1}}],[\"富文本解析\",{\"1\":{\"362\":1,\"870\":1,\"1385\":1}}],[\"例\",{\"1\":{\"361\":2,\"365\":4,\"869\":2,\"873\":4,\"1384\":2,\"1388\":4}}],[\"例如此处的\",{\"1\":{\"2680\":1,\"2695\":1,\"2710\":1}}],[\"例如开发环境和生产环境\",{\"1\":{\"2679\":1,\"2694\":1,\"2709\":1}}],[\"例如天气插件\",{\"1\":{\"2678\":1,\"2693\":1,\"2708\":1}}],[\"例如切片\",{\"1\":{\"530\":1,\"1040\":1,\"1555\":1}}],[\"例如事件响应器的优先级\",{\"1\":{\"527\":1,\"1037\":1,\"1552\":1}}],[\"例如在项目\",{\"1\":{\"515\":1,\"516\":1,\"1025\":1,\"1026\":1,\"1540\":1,\"1541\":1}}],[\"例如在生产构建使用自有的\",{\"1\":{\"501\":1,\"1011\":1,\"1526\":1}}],[\"例如创建一个\",{\"1\":{\"511\":1,\"512\":1,\"1021\":1,\"1022\":1,\"1536\":1,\"1537\":1}}],[\"例如停止任务\",{\"1\":{\"470\":1,\"980\":1,\"1495\":1}}],[\"例如和平台建立连接\",{\"1\":{\"470\":1,\"980\":1,\"1495\":1}}],[\"例如平台连接密钥等\",{\"1\":{\"467\":1,\"977\":1,\"1492\":1}}],[\"例如用户的个人信息\",{\"1\":{\"431\":1,\"941\":1,\"1456\":1}}],[\"例如用户的重试次数等等\",{\"1\":{\"429\":1,\"939\":1,\"1454\":1}}],[\"例如消息发送时间\",{\"1\":{\"420\":1,\"930\":1,\"1445\":1}}],[\"例如多人小游戏等等\",{\"1\":{\"140\":1,\"648\":1,\"1158\":1}}],[\"例如获取当前所有已导入的插件\",{\"1\":{\"111\":1,\"619\":1,\"1129\":1}}],[\"例如插件的名称\",{\"1\":{\"109\":1,\"617\":1,\"1127\":1}}],[\"例如\",{\"1\":{\"81\":1,\"95\":1,\"96\":1,\"97\":1,\"98\":1,\"99\":1,\"100\":1,\"101\":1,\"102\":1,\"103\":1,\"105\":1,\"106\":1,\"120\":1,\"121\":1,\"200\":1,\"418\":1,\"425\":1,\"426\":1,\"427\":1,\"456\":1,\"463\":1,\"467\":1,\"475\":2,\"476\":1,\"502\":1,\"515\":1,\"516\":1,\"517\":1,\"518\":1,\"519\":1,\"520\":1,\"521\":1,\"524\":1,\"525\":1,\"526\":1,\"527\":1,\"532\":1,\"589\":1,\"603\":1,\"604\":1,\"605\":1,\"606\":1,\"607\":1,\"608\":1,\"609\":1,\"610\":1,\"611\":1,\"613\":1,\"614\":1,\"628\":1,\"629\":1,\"708\":1,\"928\":1,\"935\":1,\"936\":1,\"937\":1,\"966\":1,\"973\":1,\"977\":1,\"985\":2,\"986\":1,\"1012\":1,\"1025\":1,\"1026\":1,\"1027\":1,\"1028\":1,\"1029\":1,\"1030\":1,\"1031\":1,\"1034\":1,\"1035\":1,\"1036\":1,\"1037\":1,\"1042\":1,\"1099\":1,\"1113\":1,\"1114\":1,\"1115\":1,\"1116\":1,\"1117\":1,\"1118\":1,\"1119\":1,\"1120\":1,\"1121\":1,\"1123\":1,\"1124\":1,\"1138\":1,\"1139\":1,\"1220\":1,\"1443\":1,\"1450\":1,\"1451\":1,\"1452\":1,\"1481\":1,\"1488\":1,\"1492\":1,\"1500\":2,\"1501\":1,\"1527\":1,\"1540\":1,\"1541\":1,\"1542\":1,\"1543\":1,\"1544\":1,\"1545\":1,\"1546\":1,\"1549\":1,\"1550\":1,\"1551\":1,\"1552\":1,\"1557\":1,\"1887\":4,\"1902\":2,\"1907\":2,\"1930\":1,\"2256\":4,\"2271\":2,\"2276\":2,\"2299\":1,\"2625\":4,\"2640\":2,\"2645\":2,\"2668\":1}}],[\"需先做简单调研\",{\"1\":{\"482\":1,\"992\":1,\"1507\":1}}],[\"需同时满足的权限\",{\"1\":{\"330\":1,\"331\":1,\"332\":1,\"838\":1,\"839\":1,\"840\":1,\"1356\":1,\"1357\":1,\"1358\":1}}],[\"需要存储什么地方\",{\"1\":{\"2678\":1,\"2693\":1,\"2708\":1}}],[\"需要利用到\",{\"1\":{\"1906\":1,\"2275\":1,\"2644\":1}}],[\"需要私聊或\",{\"1\":{\"527\":1,\"1037\":1,\"1552\":1}}],[\"需要在框架初始化之后\",{\"1\":{\"514\":1,\"1024\":1,\"1539\":1}}],[\"需要在机器人入口文件提供\",{\"1\":{\"64\":1,\"72\":1,\"572\":1,\"580\":1,\"1082\":1,\"1090\":1}}],[\"需要手动测试每一个边际条件是非常痛苦的\",{\"1\":{\"485\":1,\"995\":1,\"1510\":1}}],[\"需要计算适配器测试覆盖率\",{\"1\":{\"478\":1,\"988\":1,\"1503\":1}}],[\"需要构造一个\",{\"1\":{\"474\":1,\"984\":1,\"1499\":1}}],[\"需要我们自行获取信息以及发送信息\",{\"1\":{\"452\":1,\"962\":1,\"1477\":1}}],[\"需要转义的字符串\",{\"1\":{\"398\":1,\"906\":1,\"1421\":1}}],[\"需要同时满足的权限\",{\"1\":{\"329\":1,\"837\":1,\"1352\":1}}],[\"需要注意的是\",{\"1\":{\"0\":1,\"12\":1,\"24\":1,\"527\":1,\"1037\":1,\"1552\":1}}],[\"限制\",{\"1\":{\"329\":1,\"331\":1,\"332\":1,\"837\":1,\"839\":1,\"840\":1,\"1352\":1,\"1357\":1,\"1358\":1}}],[\"每一个模型必须有至少一个主键\",{\"1\":{\"2678\":1,\"2693\":1,\"2708\":1}}],[\"每次启动机器人时\",{\"1\":{\"2679\":1,\"2694\":1,\"2709\":1}}],[\"每次安装新的插件或更新插件版本后\",{\"1\":{\"1925\":1,\"2294\":1,\"2663\":1}}],[\"每次需要等待用户事件时\",{\"1\":{\"138\":1,\"646\":1,\"1156\":1}}],[\"每个解析结果会追加到列表中\",{\"1\":{\"1894\":1,\"2263\":1,\"2632\":1}}],[\"每个\",{\"1\":{\"423\":1,\"933\":1,\"1448\":1}}],[\"每个事件响应器拥有一个rule\",{\"1\":{\"346\":1,\"854\":1,\"1369\":1}}],[\"每个事件响应器\",{\"1\":{\"328\":1,\"836\":1,\"1351\":1}}],[\"及其子类或\",{\"1\":{\"299\":1,\"300\":1,\"305\":1,\"807\":1,\"808\":1,\"813\":1,\"1320\":1,\"1324\":1,\"1326\":1}}],[\"子命令为install且子命令接受一个\",{\"1\":{\"1886\":1,\"2255\":1,\"2624\":1}}],[\"子插件集合\",{\"1\":{\"1849\":1,\"2218\":1,\"2587\":1}}],[\"子插件文件\",{\"1\":{\"1803\":1,\"2172\":1,\"2541\":1}}],[\"子插件的存储目录将位于父插件存储目录下\",{\"1\":{\"433\":1,\"943\":1,\"1458\":1}}],[\"子依赖参数\",{\"1\":{\"383\":1,\"384\":1,\"387\":1,\"388\":1,\"389\":1,\"390\":1,\"391\":1,\"392\":1,\"394\":1,\"395\":1,\"891\":1,\"892\":1,\"895\":1,\"896\":1,\"897\":1,\"898\":1,\"899\":1,\"900\":1,\"902\":1,\"903\":1,\"1406\":1,\"1407\":1,\"1410\":1,\"1411\":1,\"1412\":1,\"1413\":1,\"1414\":1,\"1415\":1,\"1417\":1,\"1418\":1}}],[\"子依赖注入参数\",{\"1\":{\"302\":1,\"810\":1,\"1322\":1}}],[\"子依赖装饰器\",{\"1\":{\"297\":1,\"805\":1,\"1323\":1}}],[\"子类型则根据不同的平台进行了实现\",{\"1\":{\"421\":1,\"931\":1,\"1446\":1}}],[\"子类\",{\"1\":{\"54\":2,\"562\":2,\"1072\":2}}],[\"装饰一个函数使他在\",{\"1\":{\"1719\":1,\"1720\":1,\"2088\":1,\"2089\":1,\"2467\":1,\"2468\":1}}],[\"装饰一个函数\",{\"1\":{\"288\":1,\"289\":1,\"290\":1,\"291\":1,\"796\":1,\"797\":1,\"798\":1,\"799\":1,\"1308\":1,\"1309\":1,\"1310\":1,\"1311\":1}}],[\"装饰一个函数来指示\",{\"1\":{\"250\":1,\"251\":1,\"758\":1,\"759\":1,\"1271\":1,\"1272\":1}}],[\"装饰一个函数来向事件响应器直接添加一个处理函数\",{\"1\":{\"249\":1,\"757\":1,\"1270\":1}}],[\"装饰一个函数来更改当前事件响应器的默认会话权限更新函数\",{\"1\":{\"247\":1,\"755\":1,\"1268\":1}}],[\"装饰一个函数来更改当前事件响应器的默认响应事件类型更新函数\",{\"1\":{\"246\":1,\"754\":1,\"1267\":1}}],[\"值\",{\"1\":{\"259\":1,\"261\":1,\"262\":1,\"426\":2,\"445\":1,\"767\":1,\"769\":1,\"770\":1,\"936\":2,\"955\":1,\"1280\":1,\"1282\":1,\"1283\":1,\"1451\":2,\"1470\":1}}],[\"继续下一个处理函数\",{\"1\":{\"258\":1,\"766\":1,\"1279\":1}}],[\"继承自\",{\"1\":{\"166\":1,\"674\":1,\"1184\":1,\"1640\":1,\"2009\":1,\"2378\":1}}],[\"跳过当前事件处理函数\",{\"1\":{\"258\":1,\"766\":1,\"1279\":1}}],[\"最终用户提供消息模板时\",{\"1\":{\"543\":1,\"1053\":1,\"1568\":1}}],[\"最初基于的\",{\"1\":{\"482\":1,\"992\":1,\"1507\":1}}],[\"最近使用\",{\"1\":{\"255\":1,\"256\":1,\"257\":1,\"763\":1,\"764\":1,\"765\":1,\"1276\":1,\"1277\":1,\"1278\":1}}],[\"最多只支持\",{\"1\":{\"64\":1,\"572\":1,\"1082\":1}}],[\"已经注册在了\",{\"1\":{\"1890\":1,\"2259\":1,\"2628\":1}}],[\"已经可以被称为一个插件了\",{\"1\":{\"511\":1,\"1021\":1,\"1536\":1}}],[\"已支持\",{\"1\":{\"486\":1,\"487\":1,\"996\":1,\"997\":1,\"1511\":1,\"1512\":1}}],[\"已存在则直接继续运行\",{\"1\":{\"251\":1,\"759\":1,\"1272\":1}}],[\"已有插件\",{\"0\":{\"114\":1,\"622\":1,\"1132\":1}}],[\"非常繁琐\",{\"1\":{\"2679\":1,\"2694\":1,\"2709\":1}}],[\"非常相似的接口和使用方法\",{\"1\":{\"70\":1,\"578\":1,\"1088\":1}}],[\"非官方接口特点\",{\"1\":{\"489\":1,\"999\":1,\"1514\":1}}],[\"非参数类型依赖列表\",{\"1\":{\"249\":1,\"250\":1,\"251\":1,\"757\":1,\"758\":1,\"759\":1,\"1270\":1,\"1271\":1,\"1272\":1}}],[\"销毁当前的事件响应器\",{\"1\":{\"243\":1,\"751\":1,\"1264\":1}}],[\"空字符串表示任意\",{\"1\":{\"242\":1,\"750\":1,\"1263\":1}}],[\"之类的快捷指令将视为解析失败\",{\"1\":{\"1902\":1,\"2271\":1,\"2640\":1}}],[\"之后传入\",{\"1\":{\"1891\":1,\"2260\":1,\"2629\":1}}],[\"之间建议以\",{\"1\":{\"1889\":1,\"2258\":1,\"2627\":1}}],[\"之间的桥梁\",{\"1\":{\"228\":1,\"736\":1,\"1248\":1}}],[\"之前添加以下内容\",{\"1\":{\"418\":1,\"928\":1,\"1443\":1}}],[\"之前进行\",{\"1\":{\"86\":1,\"594\":1,\"1104\":1}}],[\"根据传入字典和模板生成消息对象\",{\"1\":{\"1635\":1,\"2004\":1,\"2373\":1}}],[\"根据传入参数和模板生成消息对象\",{\"1\":{\"1634\":1,\"2003\":1,\"2372\":1}}],[\"根据需求实现\",{\"1\":{\"501\":1,\"1011\":1,\"1526\":1}}],[\"根据需要\",{\"1\":{\"475\":1,\"985\":1,\"1500\":1}}],[\"根据事件具体实现\",{\"1\":{\"476\":3,\"986\":3,\"1501\":3}}],[\"根据平台实现\",{\"1\":{\"475\":1,\"985\":1,\"1500\":1}}],[\"根据平台事件的特性\",{\"1\":{\"473\":1,\"983\":1,\"1498\":1}}],[\"根据配置里提供的\",{\"1\":{\"361\":1,\"365\":1,\"869\":1,\"873\":1,\"1384\":1,\"1388\":1}}],[\"根据\",{\"1\":{\"227\":1,\"230\":1,\"735\":1,\"738\":1,\"1247\":1,\"1250\":1}}],[\"根据会话状态\",{\"1\":{\"139\":1,\"647\":1,\"1157\":1}}],[\"格式为\",{\"1\":{\"1839\":1,\"2208\":1,\"2577\":1}}],[\"格式化模板\",{\"1\":{\"1602\":1,\"1971\":1,\"2340\":1}}],[\"格式填写\",{\"1\":{\"506\":1,\"1016\":1,\"1531\":1}}],[\"格式\",{\"1\":{\"227\":1,\"506\":1,\"735\":1,\"1016\":1,\"1247\":1,\"1531\":1}}],[\"05\",{\"1\":{\"2679\":4,\"2694\":4,\"2709\":4}}],[\"04\",{\"1\":{\"2679\":4,\"2694\":4,\"2709\":4}}],[\"02\",{\"1\":{\"2679\":4,\"2694\":4,\"2709\":4}}],[\"01\",{\"1\":{\"2679\":4,\"2694\":4,\"2709\":4}}],[\"0x\",{\"1\":{\"1890\":1,\"2259\":1,\"2628\":1}}],[\"0>\",{\"1\":{\"1867\":1,\"1884\":1,\"2236\":1,\"2253\":1,\"2605\":1,\"2622\":1}}],[\"0\",{\"1\":{\"225\":2,\"319\":1,\"417\":1,\"452\":1,\"506\":3,\"541\":4,\"733\":2,\"827\":1,\"927\":1,\"962\":1,\"1016\":3,\"1051\":4,\"1245\":2,\"1340\":1,\"1442\":1,\"1477\":1,\"1531\":3,\"1566\":4,\"1605\":2,\"1745\":1,\"1890\":1,\"1901\":1,\"1902\":2,\"1929\":1,\"1974\":2,\"2114\":1,\"2259\":1,\"2270\":1,\"2271\":2,\"2298\":1,\"2343\":2,\"2475\":1,\"2628\":1,\"2639\":1,\"2640\":2,\"2667\":1,\"2681\":2,\"2689\":6,\"2696\":2,\"2704\":6,\"2711\":2,\"2719\":6}}],[\"传入该组件的帮助信息\",{\"1\":{\"1893\":1,\"2262\":1,\"2631\":1}}],[\"传入别名后\",{\"1\":{\"1893\":1,\"2262\":1,\"2631\":1}}],[\"传入一个\",{\"1\":{\"1890\":1,\"2259\":1,\"2628\":1}}],[\"传入的命令中符合上下文插值的字段会被自动替换成当前上下文中的信息\",{\"1\":{\"1907\":1,\"2276\":1,\"2645\":1}}],[\"传入的是该参数的默认值或者\",{\"1\":{\"1892\":1,\"2261\":1,\"2630\":1}}],[\"传入的额外参数\",{\"1\":{\"1589\":1,\"1958\":1,\"2308\":1}}],[\"传入的插件名必须为\",{\"1\":{\"520\":1,\"1030\":1,\"1545\":1}}],[\"传入\",{\"1\":{\"225\":2,\"733\":2,\"1245\":2}}],[\"传递给\",{\"1\":{\"69\":1,\"77\":1,\"577\":1,\"585\":1,\"1087\":1,\"1095\":1,\"1680\":1,\"1771\":1,\"2049\":1,\"2140\":1,\"2418\":1,\"2509\":1}}],[\"初始化项目文件夹\",{\"1\":{\"1921\":1,\"2290\":1,\"2659\":1}}],[\"初始化并运行机器人的\",{\"1\":{\"504\":1,\"1014\":1,\"1529\":1}}],[\"初始化\",{\"1\":{\"224\":1,\"507\":1,\"732\":1,\"1017\":1,\"1244\":1,\"1532\":1}}],[\"没有被存储\",{\"1\":{\"2685\":1,\"2700\":1,\"2715\":1}}],[\"没有传入\",{\"1\":{\"222\":1,\"730\":1,\"1242\":1}}],[\"没什么用\",{\"1\":{\"110\":1,\"618\":1,\"1128\":1}}],[\"尚未调用\",{\"1\":{\"217\":1,\"218\":1,\"219\":1,\"220\":1,\"221\":1,\"222\":1,\"223\":1,\"725\":1,\"726\":1,\"727\":1,\"728\":1,\"729\":1,\"730\":1,\"731\":1,\"1237\":1,\"1238\":1,\"1239\":1,\"1240\":1,\"1241\":1,\"1242\":1,\"1243\":1}}],[\"全局命令上下文插值的风格\",{\"1\":{\"1915\":1,\"2284\":1,\"2653\":1}}],[\"全局加载的扩展\",{\"1\":{\"1914\":1,\"2283\":1,\"2652\":1}}],[\"全局配置对象\",{\"1\":{\"1711\":1,\"2080\":1,\"2459\":1}}],[\"全局\",{\"1\":{\"217\":2,\"218\":1,\"219\":1,\"220\":2,\"221\":2,\"222\":1,\"223\":1,\"224\":1,\"725\":2,\"726\":1,\"727\":1,\"728\":2,\"729\":2,\"730\":1,\"731\":1,\"732\":1,\"1237\":2,\"1238\":1,\"1239\":1,\"1240\":2,\"1241\":2,\"1242\":1,\"1243\":1,\"1244\":1,\"1574\":1,\"1593\":1,\"1943\":1,\"1962\":1,\"2312\":1,\"2324\":1}}],[\"全局钩子函数是指\",{\"1\":{\"126\":1,\"634\":1,\"1144\":1}}],[\"全局钩子函数\",{\"0\":{\"126\":1,\"634\":1,\"1144\":1}}],[\"全局钩子函数和事件处理钩子函数\",{\"1\":{\"125\":1,\"633\":1,\"1143\":1}}],[\"供\",{\"1\":{\"215\":1,\"723\":1,\"1235\":1}}],[\"信息中隐藏\",{\"1\":{\"1896\":1,\"2265\":1,\"2634\":1}}],[\"信息并作为回复消息发送\",{\"1\":{\"524\":1,\"1034\":1,\"1549\":1}}],[\"信息\",{\"1\":{\"209\":1,\"717\":1,\"1229\":1,\"1739\":1,\"1740\":1,\"1741\":1,\"1742\":1,\"1743\":1,\"1744\":1,\"2108\":1,\"2109\":1,\"2110\":1,\"2111\":1,\"2112\":1,\"2113\":1,\"2486\":1,\"2487\":1,\"2488\":1,\"2489\":1,\"2490\":1,\"2491\":1}}],[\"且每一个插件只能被加载一次\",{\"1\":{\"514\":1,\"1024\":1,\"1539\":1}}],[\"且返回值类型为\",{\"1\":{\"471\":1,\"981\":1,\"1496\":1}}],[\"且没有类型注解的参数\",{\"1\":{\"299\":1,\"300\":1,\"301\":1,\"305\":1,\"306\":1,\"807\":1,\"808\":1,\"809\":1,\"813\":1,\"814\":1,\"1320\":1,\"1324\":1,\"1325\":1,\"1326\":1,\"1327\":1}}],[\"且没有\",{\"1\":{\"222\":1,\"730\":1,\"1242\":1}}],[\"且后续\",{\"1\":{\"207\":1,\"715\":1,\"1227\":1}}],[\"且打印的异常堆栈信息和\",{\"1\":{\"64\":1,\"572\":1,\"1082\":1}}],[\"结束当前\",{\"1\":{\"205\":1,\"206\":1,\"207\":1,\"713\":1,\"714\":1,\"715\":1,\"1225\":1,\"1226\":1,\"1227\":1}}],[\"阻止事件传播\",{\"1\":{\"266\":1,\"774\":1,\"1287\":1}}],[\"阻止本次\",{\"1\":{\"202\":1,\"710\":1,\"1222\":1}}],[\"阻断事件向后续优先级传播的事件响应器了\",{\"1\":{\"1037\":1,\"1552\":1}}],[\"阻断事件传播的事件响应器了\",{\"1\":{\"527\":1}}],[\"阻断\",{\"0\":{\"90\":1,\"598\":1,\"1108\":1},\"1\":{\"90\":1,\"598\":1,\"1108\":1}}],[\"立即结束当前\",{\"1\":{\"200\":1,\"708\":1,\"1220\":1}}],[\"抛出的异常基类\",{\"1\":{\"213\":1,\"721\":1,\"1233\":1}}],[\"抛出的异常\",{\"1\":{\"208\":1,\"716\":1,\"1228\":1}}],[\"抛出\",{\"1\":{\"199\":1,\"200\":1,\"202\":1,\"205\":1,\"206\":1,\"207\":1,\"707\":1,\"708\":1,\"710\":1,\"713\":1,\"714\":1,\"715\":1,\"1219\":1,\"1220\":1,\"1222\":1,\"1225\":1,\"1226\":1,\"1227\":1}}],[\"应将该路由地址替换为真实适配器注册的路由地址\",{\"1\":{\"1934\":1,\"1935\":1,\"2303\":1,\"2304\":1,\"2672\":1,\"2673\":1}}],[\"应如下构造\",{\"1\":{\"1906\":1,\"2275\":1,\"2644\":1}}],[\"应注意消息序列为平台适配器提供的类型\",{\"1\":{\"543\":1,\"1053\":1,\"1568\":1}}],[\"应该忽略该事件\",{\"1\":{\"199\":1,\"707\":1,\"1219\":1}}],[\"应用程序或其他软件组件的行为的各种技术\",{\"1\":{\"125\":1,\"633\":1,\"1143\":1}}],[\"应用后\",{\"1\":{\"124\":1,\"632\":1,\"1142\":1}}],[\"应用添加路由\",{\"0\":{\"122\":1,\"630\":1,\"1140\":1}}],[\"应用添加路由规则\",{\"1\":{\"118\":1,\"626\":1,\"1136\":1}}],[\"应用添加任何服务端相关功能\",{\"1\":{\"53\":1,\"561\":1,\"1071\":1}}],[\"应用路径\",{\"1\":{\"64\":1,\"72\":1,\"572\":1,\"580\":1,\"1082\":1,\"1090\":1}}],[\"应用\",{\"0\":{\"123\":1,\"631\":1,\"1141\":1},\"1\":{\"58\":1,\"118\":1,\"123\":1,\"497\":1,\"566\":1,\"626\":1,\"631\":1,\"1007\":1,\"1076\":1,\"1136\":1,\"1141\":1,\"1522\":1,\"1934\":1,\"2303\":1,\"2672\":1}}],[\"应用框架提供的功能来添加路由规则了\",{\"1\":{\"124\":1,\"632\":1,\"1142\":1}}],[\"应用框架提供的特性与功能\",{\"1\":{\"118\":1,\"626\":1,\"1136\":1}}],[\"应用框架\",{\"1\":{\"53\":1,\"561\":1,\"1071\":1}}],[\"指的是\",{\"1\":{\"2680\":1,\"2695\":1,\"2710\":1}}],[\"指南\",{\"0\":{\"482\":1,\"992\":1,\"1507\":1},\"1\":{\"482\":2,\"992\":2,\"1507\":2}}],[\"指定命令内容\",{\"1\":{\"1865\":1,\"1866\":1,\"1870\":1,\"1871\":1,\"1882\":1,\"1883\":1,\"2234\":1,\"2235\":1,\"2239\":1,\"2240\":1,\"2251\":1,\"2252\":1,\"2603\":1,\"2604\":1,\"2608\":1,\"2609\":1,\"2620\":1,\"2621\":1}}],[\"指定命令元组列表\",{\"1\":{\"360\":1,\"364\":1,\"868\":1,\"872\":1,\"1383\":1,\"1387\":1}}],[\"指定\",{\"1\":{\"1812\":2,\"1813\":2,\"2181\":2,\"2182\":2,\"2550\":2,\"2551\":2}}],[\"指定文件夹路径集合\",{\"1\":{\"1811\":1,\"2180\":1,\"2549\":1}}],[\"指定插件集合\",{\"1\":{\"1811\":1,\"2180\":1,\"2549\":1}}],[\"指定类型消息段数量\",{\"1\":{\"541\":1,\"1051\":1,\"1566\":1}}],[\"指定类型首个消息段索引\",{\"1\":{\"541\":1,\"1051\":1,\"1566\":1}}],[\"指定类型的\",{\"1\":{\"218\":1,\"726\":1,\"1238\":1}}],[\"指定关键字元组\",{\"1\":{\"358\":1,\"359\":1,\"866\":1,\"867\":1,\"1381\":1,\"1382\":1}}],[\"指定消息全匹配内容\",{\"1\":{\"1863\":1,\"1880\":1,\"2232\":1,\"2249\":1,\"2601\":1,\"2618\":1}}],[\"指定消息全匹配字符串元组\",{\"1\":{\"356\":1,\"357\":1,\"864\":1,\"865\":1,\"1379\":1,\"1380\":1}}],[\"指定消息结尾内容\",{\"1\":{\"1862\":1,\"1879\":1,\"2231\":1,\"2248\":1,\"2600\":1,\"2617\":1}}],[\"指定消息结尾字符串元组\",{\"1\":{\"354\":1,\"862\":1,\"1377\":1}}],[\"指定消息开头内容\",{\"1\":{\"1861\":1,\"1878\":1,\"2230\":1,\"2247\":1,\"2599\":1,\"2616\":1}}],[\"指定消息开头字符串元组\",{\"1\":{\"352\":1,\"353\":1,\"355\":1,\"860\":1,\"861\":1,\"863\":1,\"1375\":1,\"1376\":1,\"1378\":1}}],[\"指定消息段或消息段类型\",{\"1\":{\"1611\":1,\"1980\":1,\"2349\":1}}],[\"指定会话与权限\",{\"1\":{\"332\":1,\"840\":1,\"1358\":1}}],[\"指定获取的参数\",{\"1\":{\"298\":1,\"806\":1,\"1316\":1}}],[\"指定的\",{\"1\":{\"218\":1,\"726\":1,\"1238\":1}}],[\"指定名称的\",{\"1\":{\"218\":1,\"726\":1,\"1238\":1}}],[\"指示\",{\"1\":{\"199\":1,\"200\":1,\"202\":1,\"203\":1,\"205\":1,\"206\":1,\"207\":1,\"209\":1,\"707\":1,\"708\":1,\"710\":1,\"711\":1,\"713\":1,\"714\":1,\"715\":1,\"717\":1,\"1219\":1,\"1220\":1,\"1222\":1,\"1223\":1,\"1225\":1,\"1226\":1,\"1227\":1,\"1229\":1}}],[\"指通过拦截软件模块间的函数调用\",{\"1\":{\"125\":1,\"633\":1,\"1143\":1}}],[\"内插件信息\",{\"1\":{\"502\":1,\"1012\":1,\"1527\":1}}],[\"内容完整\",{\"1\":{\"495\":1,\"1005\":1,\"1520\":1}}],[\"内添加如下代码\",{\"1\":{\"478\":1,\"988\":1,\"1503\":1}}],[\"内部处理并按优先级分发事件给所有事件响应器\",{\"1\":{\"287\":1,\"795\":1,\"1307\":1}}],[\"内部运行时被捕获\",{\"1\":{\"195\":1,\"703\":1,\"1215\":1}}],[\"内置选项\",{\"1\":{\"1902\":1,\"2271\":1,\"2640\":1}}],[\"内置插件\",{\"1\":{\"507\":1,\"513\":1,\"520\":1,\"1017\":1,\"1023\":1,\"1030\":1,\"1532\":1,\"1538\":1,\"1545\":1,\"1814\":1,\"1815\":1,\"2183\":1,\"2184\":1,\"2552\":1,\"2553\":1}}],[\"内置响应规则列表可以参考事件响应器进阶\",{\"1\":{\"428\":1,\"938\":1,\"1453\":1}}],[\"内置响应规则\",{\"0\":{\"94\":1,\"428\":1,\"602\":1,\"938\":1,\"1112\":1,\"1453\":1}}],[\"内置了一些常用的响应规则\",{\"1\":{\"428\":1,\"938\":1,\"1453\":1}}],[\"内置了四种常用事件类型\",{\"1\":{\"86\":1,\"594\":1,\"1104\":1}}],[\"内置了多个驱动器适配\",{\"1\":{\"54\":1,\"562\":1,\"1072\":1}}],[\"内置的四种类型\",{\"1\":{\"1580\":1,\"1949\":1,\"2330\":1}}],[\"内置的事件响应器中\",{\"1\":{\"90\":1,\"598\":1,\"1108\":1}}],[\"内置的响应规则\",{\"1\":{\"84\":1,\"592\":1,\"1102\":1}}],[\"内置的空驱动器\",{\"1\":{\"57\":1,\"565\":1,\"1075\":1}}],[\"内置驱动器\",{\"0\":{\"56\":1,\"564\":1,\"1074\":1}}],[\"后续的解析结果会覆盖之前的值\",{\"1\":{\"1894\":1,\"2263\":1,\"2632\":1}}],[\"后续工作\",{\"0\":{\"479\":1,\"989\":1,\"1504\":1}}],[\"后处理\",{\"1\":{\"1578\":1,\"1947\":1,\"2328\":1}}],[\"后执行的函数\",{\"1\":{\"386\":1,\"894\":1,\"1409\":1}}],[\"后参数字典存储\",{\"1\":{\"188\":1,\"696\":1,\"1208\":1}}],[\"后者直接使用\",{\"1\":{\"118\":1,\"626\":1,\"1136\":1}}],[\"后者\",{\"1\":{\"64\":1,\"572\":1,\"1082\":1}}],[\"目前采用了\",{\"1\":{\"502\":1,\"1012\":1,\"1527\":1}}],[\"目前官网组件库已产生了较大的版本落后\",{\"1\":{\"501\":1,\"1011\":1,\"1526\":1}}],[\"目前已有\",{\"1\":{\"498\":1,\"1008\":1,\"1523\":1}}],[\"目前提供了开箱即用的命令行脚手架来帮助初次使用的用户更快的上手编写应用\",{\"1\":{\"497\":1,\"1007\":1,\"1522\":1}}],[\"目前文档对于用户而言过于费解\",{\"1\":{\"495\":1,\"1005\":1,\"1520\":1}}],[\"目前最常用的\",{\"1\":{\"490\":1,\"491\":1,\"1000\":1,\"1001\":1,\"1515\":1,\"1516\":1}}],[\"目前的\",{\"1\":{\"489\":1,\"999\":1,\"1514\":1}}],[\"目前\",{\"1\":{\"482\":1,\"483\":1,\"486\":1,\"487\":1,\"499\":1,\"525\":1,\"992\":1,\"993\":1,\"996\":1,\"997\":1,\"1009\":1,\"1035\":1,\"1507\":1,\"1508\":1,\"1511\":1,\"1512\":1,\"1524\":1,\"1550\":1}}],[\"目录\",{\"1\":{\"2679\":1,\"2694\":1,\"2709\":1}}],[\"目录下\",{\"1\":{\"515\":1,\"516\":1,\"1025\":1,\"1026\":1,\"1540\":1,\"1541\":1}}],[\"目录下创建一个名为\",{\"1\":{\"513\":1,\"1023\":1,\"1538\":1}}],[\"目录下的所有插件\",{\"1\":{\"114\":1,\"622\":1,\"1132\":1}}],[\"目录中编写实际代码\",{\"1\":{\"463\":1,\"973\":1,\"1488\":1}}],[\"目标存储\",{\"1\":{\"180\":1,\"181\":1,\"688\":1,\"689\":1,\"1198\":1,\"1199\":1}}],[\"存储一个事件响应器到插件\",{\"1\":{\"1852\":1,\"2221\":1,\"2590\":1}}],[\"存储插件信息\",{\"1\":{\"1842\":1,\"2211\":1,\"2580\":1}}],[\"存储机器人启动所需的配置\",{\"1\":{\"504\":1,\"1014\":1,\"1529\":1}}],[\"存储\",{\"1\":{\"177\":1,\"178\":1,\"179\":1,\"334\":1,\"348\":1,\"470\":1,\"685\":1,\"686\":1,\"687\":1,\"842\":1,\"856\":1,\"980\":1,\"1195\":1,\"1196\":1,\"1197\":1,\"1354\":1,\"1371\":1,\"1495\":1}}],[\"±\",{\"1\":{\"175\":1,\"683\":1,\"1193\":1}}],[\"秒\",{\"1\":{\"170\":1,\"678\":1,\"1188\":1}}],[\"日志内容以及可选的异常\",{\"1\":{\"466\":1,\"976\":1,\"1491\":1}}],[\"日志重定向到\",{\"1\":{\"419\":1,\"929\":1,\"1444\":1}}],[\"日志可以通过配置\",{\"1\":{\"417\":1,\"927\":1,\"1442\":1}}],[\"日志都是一个重要的功能\",{\"1\":{\"416\":1,\"926\":1,\"1441\":1}}],[\"日志\",{\"0\":{\"416\":1,\"419\":1,\"926\":1,\"929\":1,\"1441\":1,\"1444\":1},\"1\":{\"417\":1,\"455\":1,\"927\":1,\"965\":1,\"1442\":1,\"1480\":1}}],[\"日志信息\",{\"1\":{\"415\":1,\"925\":1,\"1440\":1}}],[\"日志记录器\",{\"1\":{\"1715\":1,\"2084\":1,\"2463\":1}}],[\"日志记录器对象\",{\"1\":{\"227\":1,\"735\":1,\"1247\":1}}],[\"日志记录函数的参数\",{\"1\":{\"415\":1,\"925\":1,\"1440\":1}}],[\"日志记录函数\",{\"1\":{\"415\":1,\"925\":1,\"1440\":1}}],[\"日志等级名称应为大写\",{\"1\":{\"169\":1,\"677\":1,\"1187\":1}}],[\"日志等级\",{\"1\":{\"169\":1,\"415\":1,\"466\":1,\"677\":1,\"925\":1,\"976\":1,\"1187\":1,\"1440\":1,\"1491\":1}}],[\"日志输出等级\",{\"1\":{\"169\":1,\"677\":1,\"1187\":1}}],[\"主动使用响应规则\",{\"0\":{\"427\":1,\"937\":1,\"1452\":1}}],[\"主机名\",{\"1\":{\"167\":1,\"506\":1,\"675\":1,\"1016\":1,\"1185\":1,\"1531\":1}}],[\"主要影响以下几个层面\",{\"1\":{\"2689\":1,\"2704\":1,\"2719\":1}}],[\"主要功能代码\",{\"1\":{\"493\":1,\"1003\":1,\"1518\":1}}],[\"主要包括客户端和服务端两种类型\",{\"1\":{\"1933\":1,\"2302\":1,\"2671\":1}}],[\"主要包括\",{\"1\":{\"493\":1,\"495\":2,\"1003\":1,\"1005\":2,\"1518\":1,\"1520\":2}}],[\"主要分为客户端和服务端两种类型\",{\"1\":{\"469\":1,\"979\":1,\"1494\":1}}],[\"主要配置\",{\"1\":{\"165\":1,\"673\":1,\"1183\":1}}],[\"主要驱动器可以为客户端或服务端类型\",{\"1\":{\"54\":1,\"562\":1,\"1072\":1}}],[\"主要负责数据收发\",{\"1\":{\"52\":1,\"560\":1,\"1070\":1}}],[\"序列化格式\",{\"1\":{\"162\":1,\"670\":1,\"1180\":1}}],[\"keep\",{\"1\":{\"1896\":1,\"2265\":1,\"2634\":1}}],[\"key=true\",{\"1\":{\"2678\":2,\"2679\":1,\"2681\":1,\"2684\":1,\"2685\":1,\"2687\":1,\"2693\":2,\"2694\":1,\"2696\":1,\"2699\":1,\"2700\":1,\"2702\":1,\"2708\":2,\"2709\":1,\"2711\":1,\"2714\":1,\"2715\":1,\"2717\":1}}],[\"key1\",{\"1\":{\"1888\":1,\"2257\":1,\"2626\":1}}],[\"keys\",{\"1\":{\"445\":1,\"955\":1,\"1470\":1,\"1930\":1,\"2299\":1,\"2668\":1}}],[\"keysview\",{\"1\":{\"275\":1,\"783\":1,\"1295\":1}}],[\"keyerror\",{\"1\":{\"222\":1,\"730\":1,\"1242\":1}}],[\"key\",{\"0\":{\"1889\":1,\"2258\":1,\"2627\":1},\"1\":{\"177\":1,\"178\":1,\"179\":2,\"180\":1,\"181\":1,\"182\":1,\"183\":1,\"184\":1,\"185\":1,\"186\":1,\"187\":1,\"188\":1,\"189\":1,\"190\":1,\"191\":1,\"192\":1,\"193\":1,\"194\":1,\"251\":4,\"256\":1,\"262\":4,\"263\":1,\"278\":4,\"279\":1,\"283\":1,\"295\":1,\"296\":1,\"298\":2,\"303\":1,\"429\":5,\"685\":1,\"686\":1,\"687\":2,\"688\":1,\"689\":1,\"690\":1,\"691\":1,\"692\":1,\"693\":1,\"694\":1,\"695\":1,\"696\":1,\"697\":1,\"698\":1,\"699\":1,\"700\":1,\"701\":1,\"702\":1,\"759\":4,\"764\":1,\"770\":4,\"771\":1,\"786\":4,\"787\":1,\"791\":1,\"803\":1,\"804\":1,\"806\":2,\"811\":1,\"939\":5,\"1195\":1,\"1196\":1,\"1197\":2,\"1198\":1,\"1199\":1,\"1200\":1,\"1201\":2,\"1202\":1,\"1203\":1,\"1204\":1,\"1205\":1,\"1206\":1,\"1207\":1,\"1208\":1,\"1209\":1,\"1210\":1,\"1211\":1,\"1212\":1,\"1213\":1,\"1214\":1,\"1272\":4,\"1277\":1,\"1283\":4,\"1284\":1,\"1298\":4,\"1299\":1,\"1303\":1,\"1315\":1,\"1316\":2,\"1317\":1,\"1318\":1,\"1319\":1,\"1454\":5,\"1625\":1,\"1888\":4,\"1889\":5,\"1890\":3,\"1891\":1,\"1902\":1,\"1994\":1,\"2257\":4,\"2258\":5,\"2259\":3,\"2260\":1,\"2271\":1,\"2363\":1,\"2626\":4,\"2627\":5,\"2628\":3,\"2629\":1,\"2640\":1,\"2678\":1,\"2679\":3,\"2693\":1,\"2694\":3,\"2708\":1,\"2709\":3}}],[\"keywordvar\",{\"0\":{\"1891\":1,\"2260\":1,\"2629\":1},\"1\":{\"1891\":6,\"2260\":6,\"2629\":6}}],[\"keywords\",{\"1\":{\"358\":1,\"359\":1,\"866\":1,\"867\":1,\"1381\":1,\"1382\":1,\"1864\":1,\"1881\":1,\"2233\":1,\"2250\":1,\"2602\":1,\"2619\":1}}],[\"keyword\",{\"1\":{\"98\":5,\"194\":1,\"216\":2,\"606\":5,\"702\":1,\"724\":2,\"1116\":5,\"1214\":1,\"1236\":2,\"1802\":2,\"1888\":2,\"1889\":1,\"1891\":1,\"2171\":2,\"2257\":2,\"2258\":1,\"2260\":1,\"2540\":2,\"2626\":2,\"2627\":1,\"2629\":1}}],[\"koishi\",{\"1\":{\"497\":1,\"1007\":1,\"1522\":1}}],[\"kotlin\",{\"1\":{\"490\":1,\"491\":2,\"1000\":1,\"1001\":2,\"1515\":1,\"1516\":2}}],[\"k\",{\"1\":{\"399\":3,\"907\":3,\"1422\":3}}],[\"kwargs=\",{\"1\":{\"452\":2,\"962\":2,\"1477\":2}}],[\"kwargs\",{\"1\":{\"146\":1,\"155\":1,\"224\":1,\"225\":1,\"252\":1,\"253\":1,\"254\":1,\"255\":1,\"256\":1,\"257\":1,\"298\":1,\"299\":1,\"300\":1,\"301\":1,\"302\":1,\"304\":1,\"305\":1,\"306\":1,\"468\":2,\"470\":2,\"471\":2,\"475\":2,\"654\":1,\"663\":1,\"732\":1,\"733\":1,\"760\":1,\"761\":1,\"762\":1,\"763\":1,\"764\":1,\"765\":1,\"806\":1,\"807\":1,\"808\":1,\"809\":1,\"810\":1,\"812\":1,\"813\":1,\"814\":1,\"978\":2,\"980\":2,\"981\":2,\"985\":2,\"1164\":1,\"1173\":1,\"1244\":1,\"1245\":1,\"1273\":1,\"1274\":1,\"1275\":1,\"1276\":1,\"1277\":1,\"1278\":1,\"1316\":1,\"1320\":1,\"1321\":1,\"1322\":1,\"1324\":1,\"1325\":1,\"1326\":1,\"1327\":1,\"1493\":2,\"1495\":2,\"1496\":2,\"1500\":2,\"1576\":1,\"1589\":1,\"1634\":1,\"1636\":1,\"1637\":1,\"1640\":1,\"1688\":1,\"1713\":1,\"1716\":1,\"1762\":1,\"1779\":1,\"1891\":1,\"1945\":1,\"1958\":1,\"2003\":1,\"2005\":1,\"2006\":1,\"2009\":1,\"2057\":1,\"2082\":1,\"2085\":1,\"2131\":1,\"2148\":1,\"2260\":1,\"2308\":1,\"2326\":1,\"2372\":1,\"2374\":1,\"2375\":1,\"2378\":1,\"2426\":1,\"2461\":1,\"2464\":1,\"2500\":1,\"2517\":1,\"2629\":1}}],[\"本体\",{\"0\":{\"1886\":1,\"2255\":1,\"2624\":1}}],[\"本驱动不支持任何服务器或客户端连接\",{\"1\":{\"1758\":1,\"2127\":1,\"2496\":1}}],[\"本驱动仅支持客户端\",{\"1\":{\"1697\":1,\"1788\":1,\"2066\":1,\"2157\":1,\"2435\":1,\"2526\":1}}],[\"本驱动仅支持客户端连接\",{\"1\":{\"1651\":1,\"2020\":1,\"2389\":1}}],[\"本驱动仅支持服务端连接\",{\"1\":{\"1669\":1,\"1764\":1,\"2038\":1,\"2133\":1,\"2407\":1,\"2502\":1}}],[\"本驱动器仅支持\",{\"1\":{\"78\":1,\"79\":1,\"586\":1,\"587\":1,\"1096\":1,\"1097\":1}}],[\"本协议适配器已建立连接的\",{\"1\":{\"1591\":1,\"1960\":1,\"2310\":1}}],[\"本章节将介绍\",{\"1\":{\"523\":1,\"1033\":1,\"1548\":1}}],[\"本章节的代码中提到的\",{\"1\":{\"465\":1,\"975\":1,\"1490\":1}}],[\"本地插件的路径应该为相对机器人\",{\"1\":{\"515\":1,\"1025\":1,\"1540\":1}}],[\"本地插件\",{\"1\":{\"507\":1,\"513\":1,\"1017\":1,\"1023\":1,\"1532\":1,\"1538\":1}}],[\"本项目将基于\",{\"1\":{\"503\":1,\"1013\":1,\"1528\":1}}],[\"本项目希望针对以上问题与不足的地方进行修复与优化\",{\"1\":{\"502\":1,\"1012\":1,\"1527\":1}}],[\"本项目希望在跟进框架新版本的基础上\",{\"1\":{\"501\":1,\"1011\":1,\"1526\":1}}],[\"本项目旨在优化文档内容\",{\"1\":{\"495\":1,\"1005\":1,\"1520\":1}}],[\"本项目旨在重新设计\",{\"1\":{\"493\":1,\"1003\":1,\"1518\":1}}],[\"本质上是对\",{\"1\":{\"450\":1,\"960\":1,\"1475\":1}}],[\"本身并无显著区别\",{\"1\":{\"450\":1,\"960\":1,\"1475\":1}}],[\"本身会在会话状态中存储一些信息\",{\"1\":{\"429\":1,\"939\":1,\"1454\":1}}],[\"本身运行所需的配置项\",{\"1\":{\"162\":1,\"670\":1,\"1180\":1}}],[\"本注入参数应该具有最低优先级\",{\"1\":{\"304\":1,\"812\":1,\"1321\":1}}],[\"本注入应该具有最高优先级\",{\"1\":{\"302\":1,\"810\":1,\"1322\":1}}],[\"本注入还会解析名为\",{\"1\":{\"299\":1,\"300\":1,\"301\":1,\"305\":1,\"306\":1,\"807\":1,\"808\":1,\"809\":1,\"813\":1,\"814\":1,\"1320\":1,\"1324\":1,\"1325\":1,\"1326\":1,\"1327\":1}}],[\"本注入解析所有剩余未能解析且具有默认值的参数\",{\"1\":{\"304\":1,\"812\":1,\"1321\":1}}],[\"本注入解析所有子依赖注入\",{\"1\":{\"302\":1,\"810\":1,\"1322\":1}}],[\"本注入解析所有类型为\",{\"1\":{\"301\":1,\"306\":1,\"809\":1,\"814\":1,\"1325\":1,\"1327\":1}}],[\"本注入解析所有类型为且仅为\",{\"1\":{\"299\":1,\"300\":1,\"305\":1,\"807\":1,\"808\":1,\"813\":1,\"1320\":1,\"1324\":1,\"1326\":1}}],[\"本注入解析事件响应器操作\",{\"1\":{\"298\":1,\"806\":1,\"1316\":1}}],[\"本模块实现插件加载流程\",{\"1\":{\"1818\":1,\"2187\":1,\"2556\":1}}],[\"本模块实现事件响应器的创建与运行\",{\"1\":{\"232\":1,\"740\":1,\"1252\":1}}],[\"本模块定义事件响应器便携定义函数\",{\"1\":{\"1851\":1,\"2220\":1,\"2589\":1}}],[\"本模块定义插件相关信息\",{\"1\":{\"1831\":1,\"2200\":1,\"2569\":1}}],[\"本模块定义插件加载接口\",{\"1\":{\"1808\":1,\"2177\":1,\"2546\":1}}],[\"本模块定义了驱动适配器基类\",{\"1\":{\"1706\":1,\"2075\":1,\"2444\":1}}],[\"本模块定义了协议适配基类\",{\"1\":{\"1569\":1,\"1938\":1,\"2307\":1}}],[\"本模块定义了依赖注入的各类参数\",{\"1\":{\"294\":1,\"802\":1,\"1314\":1}}],[\"本模块定义了事件处理主要流程\",{\"1\":{\"287\":1,\"795\":1,\"1307\":1}}],[\"本模块定义了\",{\"1\":{\"162\":1,\"226\":1,\"372\":1,\"670\":1,\"734\":1,\"880\":1,\"1180\":1,\"1246\":1,\"1395\":1}}],[\"本模块模块实现了依赖注入的定义与处理\",{\"1\":{\"1639\":1,\"2008\":1,\"2377\":1}}],[\"本模块是\",{\"1\":{\"328\":1,\"346\":1,\"836\":1,\"854\":1,\"1351\":1,\"1369\":1}}],[\"本模块从子模块导入了部分内容\",{\"1\":{\"216\":1,\"724\":1,\"1236\":1,\"1802\":1,\"2171\":1,\"2540\":1}}],[\"本模块主要定义了\",{\"1\":{\"215\":1,\"723\":1,\"1235\":1}}],[\"本模块包含了所有\",{\"1\":{\"195\":1,\"703\":1,\"1215\":1}}],[\"本模块包含了\",{\"1\":{\"176\":1,\"397\":1,\"684\":1,\"905\":1,\"1194\":1,\"1420\":1}}],[\"本模块为\",{\"1\":{\"141\":1,\"649\":1,\"1159\":1,\"1801\":1,\"2170\":1,\"2539\":1}}],[\"权限限制\",{\"1\":{\"502\":1,\"1012\":1,\"1527\":1}}],[\"权限类\",{\"1\":{\"333\":1,\"841\":1,\"1353\":1}}],[\"权限\",{\"1\":{\"140\":1,\"242\":1,\"648\":1,\"750\":1,\"1158\":1,\"1263\":1}}],[\"权限控制\",{\"1\":{\"86\":1,\"495\":1,\"594\":1,\"1005\":1,\"1104\":1,\"1520\":1}}],[\"权限控制等功能\",{\"1\":{\"84\":1,\"592\":1,\"1102\":1}}],[\"上海\",{\"1\":{\"2680\":1,\"2695\":1,\"2710\":1}}],[\"上下文可以在\",{\"1\":{\"1907\":1,\"2276\":1,\"2645\":1}}],[\"上下文插值\",{\"0\":{\"1907\":1,\"2276\":1,\"2645\":1}}],[\"上\",{\"1\":{\"1898\":1,\"2267\":1,\"2636\":1}}],[\"上述的项目结构仅作推荐\",{\"1\":{\"463\":1,\"973\":1,\"1488\":1}}],[\"上述权限更新函数是默认的权限更新函数\",{\"1\":{\"140\":1,\"648\":1,\"1158\":1}}],[\"上报事件\",{\"1\":{\"244\":1,\"245\":1,\"752\":1,\"753\":1,\"1265\":1,\"1266\":1,\"1576\":1,\"1945\":1,\"2326\":1}}],[\"上报地址以及对上报数据处理的回调函数\",{\"1\":{\"53\":1,\"561\":1,\"1071\":1}}],[\"忽略不符合其参数类型注解的情况\",{\"1\":{\"422\":1,\"932\":1,\"1447\":1}}],[\"忽略事件的原因\",{\"1\":{\"199\":1,\"707\":1,\"1219\":1}}],[\"忽略本次运行\",{\"1\":{\"134\":1,\"642\":1,\"1152\":1}}],[\"忽略该事件\",{\"1\":{\"132\":1,\"640\":1,\"1150\":1}}],[\"断开了\",{\"1\":{\"472\":1,\"982\":1,\"1497\":1}}],[\"断开\",{\"1\":{\"470\":1,\"472\":1,\"980\":1,\"982\":1,\"1495\":1,\"1497\":1}}],[\"断开连接\",{\"1\":{\"470\":1,\"980\":1,\"1495\":1}}],[\"断开与\",{\"1\":{\"130\":1,\"638\":1,\"1148\":1}}],[\"断开处理\",{\"0\":{\"130\":1,\"638\":1,\"1148\":1}}],[\"终止事件向下层传播\",{\"1\":{\"203\":1,\"711\":1,\"1223\":1}}],[\"终止时运行\",{\"1\":{\"128\":1,\"636\":1,\"1146\":1}}],[\"终止处理\",{\"0\":{\"128\":1,\"636\":1,\"1146\":1}}],[\"很多时候\",{\"1\":{\"127\":1,\"635\":1,\"1145\":1}}],[\"处理接收与发送\",{\"1\":{\"1589\":1,\"1958\":1,\"2308\":1}}],[\"处理消息\",{\"0\":{\"528\":1,\"1038\":1,\"1553\":1}}],[\"处理消息事件\",{\"1\":{\"495\":1,\"1005\":1,\"1520\":1}}],[\"处理消息失败时返回的异常\",{\"1\":{\"197\":1,\"705\":1,\"1217\":1}}],[\"处理\",{\"1\":{\"419\":1,\"470\":1,\"929\":1,\"980\":1,\"1444\":1,\"1495\":1}}],[\"处理函数\",{\"1\":{\"393\":1,\"471\":2,\"901\":1,\"981\":2,\"1416\":1,\"1496\":2}}],[\"处理一个事件\",{\"1\":{\"293\":1,\"801\":1,\"1313\":1}}],[\"处理事件完成后运行\",{\"1\":{\"133\":1,\"641\":1,\"1151\":1}}],[\"处理事件的核心\",{\"1\":{\"81\":1,\"589\":1,\"1099\":1}}],[\"处理被拦截的函数调用\",{\"1\":{\"125\":1,\"633\":1,\"1143\":1}}],[\"挂钩\",{\"1\":{\"125\":1,\"633\":1,\"1143\":1}}],[\"钩子编程\",{\"1\":{\"125\":1,\"633\":1,\"1143\":1}}],[\"钩子函数参数\",{\"1\":{\"1577\":1,\"1578\":1,\"1719\":1,\"1720\":1,\"1946\":1,\"1947\":1,\"2088\":1,\"2089\":1,\"2327\":1,\"2328\":1,\"2467\":1,\"2468\":1}}],[\"钩子函数\",{\"0\":{\"125\":1,\"633\":1,\"1143\":1},\"1\":{\"385\":1,\"495\":1,\"893\":1,\"1005\":1,\"1408\":1,\"1520\":1}}],[\"演示如何添加路由规则\",{\"1\":{\"124\":1,\"632\":1,\"1142\":1}}],[\"发生了什么\",{\"1\":{\"2679\":1,\"2694\":1,\"2709\":1}}],[\"发生的异常基类\",{\"1\":{\"196\":1,\"204\":1,\"704\":1,\"712\":1,\"1216\":1,\"1224\":1}}],[\"发起一个\",{\"1\":{\"1756\":1,\"2125\":1,\"2493\":1}}],[\"发布插件等\",{\"1\":{\"495\":1,\"1005\":1,\"1520\":1}}],[\"发布插件必填\",{\"1\":{\"110\":2,\"618\":2,\"1128\":2}}],[\"发送了一个模拟\",{\"1\":{\"1934\":1,\"2303\":1,\"2672\":1}}],[\"发送一个\",{\"1\":{\"1752\":1,\"2121\":1,\"2472\":1}}],[\"发送一条\",{\"1\":{\"1742\":1,\"1743\":1,\"1744\":1,\"2111\":1,\"2112\":1,\"2113\":1,\"2489\":1,\"2490\":1,\"2491\":1}}],[\"发送一条消息给当前交互用户并将当前事件处理流程中断在当前位置\",{\"1\":{\"255\":1,\"256\":1,\"257\":1,\"763\":1,\"764\":1,\"765\":1,\"1276\":1,\"1277\":1,\"1278\":1}}],[\"发送一条消息给当前交互用户并暂停事件响应器\",{\"1\":{\"254\":1,\"762\":1,\"1275\":1}}],[\"发送一条消息给当前交互用户并结束当前事件响应器\",{\"1\":{\"253\":1,\"761\":1,\"1274\":1}}],[\"发送一条消息给当前交互用户\",{\"1\":{\"252\":1,\"760\":1,\"1273\":1}}],[\"发送结果\",{\"1\":{\"1318\":1,\"1349\":1,\"1350\":1}}],[\"发送结果存储\",{\"1\":{\"1200\":1,\"1201\":1}}],[\"发送\",{\"1\":{\"474\":2,\"984\":2,\"1499\":2}}],[\"发送请求\",{\"1\":{\"474\":1,\"984\":1,\"1499\":1}}],[\"发送所有接收到的数据\",{\"1\":{\"121\":1,\"629\":1,\"1139\":1}}],[\"返回选项\",{\"1\":{\"1895\":4,\"2264\":4,\"2633\":4}}],[\"返回字典中\",{\"1\":{\"1895\":1,\"2264\":1,\"2633\":1}}],[\"返回对应的属性\",{\"1\":{\"1895\":1,\"2264\":1,\"2633\":1}}],[\"返回当前插件管理器中控制的插件标识符与模块路径映射字典\",{\"1\":{\"1823\":1,\"2192\":1,\"2561\":1}}],[\"返回当前插件管理器中可用的插件标识符\",{\"1\":{\"1822\":1,\"2191\":1,\"2560\":1}}],[\"返回已搜索到的插件标识符\",{\"1\":{\"1821\":1,\"2190\":1,\"2559\":1}}],[\"返回所有独立插件标识符\",{\"1\":{\"1820\":1,\"2189\":1,\"2558\":1}}],[\"返回值会自动取交集\",{\"1\":{\"1817\":1,\"2186\":1,\"2555\":1}}],[\"返回该消息段的纯文本表现形式\",{\"1\":{\"477\":1,\"987\":1,\"1502\":1}}],[\"返回适配器的\",{\"1\":{\"477\":2,\"987\":2,\"1502\":2}}],[\"返回事件消息对应的\",{\"1\":{\"476\":1,\"986\":1,\"1501\":1}}],[\"返回事件的描述\",{\"1\":{\"476\":1,\"986\":1,\"1501\":1}}],[\"返回事件的名称\",{\"1\":{\"476\":1,\"986\":1,\"1501\":1}}],[\"返回结果\",{\"1\":{\"474\":1,\"984\":1,\"1499\":1}}],[\"返回机器人用户对应的平台\",{\"1\":{\"421\":1,\"931\":1,\"1446\":1}}],[\"返回一个\",{\"1\":{\"222\":1,\"730\":1,\"1242\":1}}],[\"返回的内容\",{\"1\":{\"202\":1,\"710\":1,\"1222\":1}}],[\"返回\",{\"1\":{\"120\":1,\"152\":1,\"153\":1,\"154\":1,\"155\":1,\"156\":1,\"157\":1,\"158\":1,\"159\":1,\"160\":1,\"161\":1,\"217\":1,\"218\":2,\"219\":1,\"220\":1,\"221\":1,\"222\":1,\"223\":1,\"224\":1,\"225\":1,\"229\":1,\"230\":1,\"242\":1,\"243\":1,\"244\":1,\"245\":1,\"246\":1,\"247\":1,\"248\":1,\"249\":1,\"250\":1,\"251\":1,\"252\":1,\"253\":1,\"254\":1,\"255\":1,\"256\":1,\"257\":1,\"258\":1,\"259\":3,\"260\":1,\"261\":3,\"262\":3,\"263\":1,\"264\":1,\"265\":2,\"266\":1,\"267\":1,\"268\":1,\"269\":1,\"270\":1,\"271\":1,\"272\":1,\"275\":1,\"276\":1,\"277\":1,\"278\":2,\"279\":1,\"280\":1,\"281\":1,\"282\":1,\"283\":1,\"284\":1,\"288\":1,\"289\":1,\"290\":1,\"291\":1,\"292\":1,\"293\":1,\"295\":1,\"296\":1,\"297\":1,\"303\":1,\"307\":1,\"308\":1,\"309\":1,\"310\":1,\"311\":1,\"312\":1,\"313\":1,\"314\":1,\"315\":1,\"316\":1,\"317\":1,\"318\":1,\"319\":3,\"320\":1,\"321\":1,\"322\":1,\"323\":1,\"324\":1,\"325\":1,\"326\":1,\"327\":1,\"329\":1,\"331\":1,\"332\":1,\"335\":1,\"349\":1,\"353\":1,\"355\":1,\"357\":1,\"359\":1,\"361\":1,\"363\":3,\"365\":1,\"367\":1,\"369\":1,\"371\":1,\"373\":1,\"374\":1,\"375\":1,\"376\":1,\"377\":1,\"378\":1,\"379\":1,\"380\":1,\"398\":1,\"399\":1,\"400\":1,\"401\":1,\"402\":1,\"403\":1,\"404\":1,\"405\":1,\"406\":1,\"407\":1,\"408\":3,\"409\":1,\"410\":1,\"411\":1,\"414\":1,\"415\":1,\"628\":1,\"660\":1,\"661\":1,\"662\":1,\"663\":1,\"664\":1,\"665\":1,\"666\":1,\"667\":1,\"668\":1,\"669\":1,\"725\":1,\"726\":2,\"727\":1,\"728\":1,\"729\":1,\"730\":1,\"731\":1,\"732\":1,\"733\":1,\"737\":1,\"738\":1,\"750\":1,\"751\":1,\"752\":1,\"753\":1,\"754\":1,\"755\":1,\"756\":1,\"757\":1,\"758\":1,\"759\":1,\"760\":1,\"761\":1,\"762\":1,\"763\":1,\"764\":1,\"765\":1,\"766\":1,\"767\":3,\"768\":1,\"769\":3,\"770\":3,\"771\":1,\"772\":1,\"773\":2,\"774\":1,\"775\":1,\"776\":1,\"777\":1,\"778\":1,\"779\":1,\"780\":1,\"783\":1,\"784\":1,\"785\":1,\"786\":2,\"787\":1,\"788\":1,\"789\":1,\"790\":1,\"791\":1,\"792\":1,\"796\":1,\"797\":1,\"798\":1,\"799\":1,\"800\":1,\"801\":1,\"803\":1,\"804\":1,\"805\":1,\"811\":1,\"815\":1,\"816\":1,\"817\":1,\"818\":1,\"819\":1,\"820\":1,\"821\":1,\"822\":1,\"823\":1,\"824\":1,\"825\":1,\"826\":1,\"827\":3,\"828\":1,\"829\":1,\"830\":1,\"831\":1,\"832\":1,\"833\":1,\"834\":1,\"835\":1,\"837\":1,\"839\":1,\"840\":1,\"843\":1,\"857\":1,\"861\":1,\"863\":1,\"865\":1,\"867\":1,\"869\":1,\"871\":3,\"873\":1,\"875\":1,\"877\":1,\"879\":1,\"881\":1,\"882\":1,\"883\":1,\"884\":1,\"885\":1,\"886\":1,\"887\":1,\"888\":1,\"906\":1,\"907\":1,\"908\":1,\"909\":1,\"910\":1,\"911\":1,\"912\":1,\"913\":1,\"914\":1,\"915\":1,\"916\":3,\"917\":1,\"918\":1,\"919\":1,\"920\":1,\"921\":1,\"924\":1,\"925\":1,\"1138\":1,\"1170\":1,\"1171\":1,\"1172\":1,\"1173\":1,\"1174\":1,\"1175\":1,\"1176\":1,\"1177\":1,\"1178\":1,\"1179\":1,\"1237\":1,\"1238\":2,\"1239\":1,\"1240\":1,\"1241\":1,\"1242\":1,\"1243\":1,\"1244\":1,\"1245\":1,\"1249\":1,\"1250\":1,\"1263\":1,\"1264\":1,\"1265\":1,\"1266\":1,\"1267\":1,\"1268\":1,\"1269\":1,\"1270\":1,\"1271\":1,\"1272\":1,\"1273\":1,\"1274\":1,\"1275\":1,\"1276\":1,\"1277\":1,\"1278\":1,\"1279\":1,\"1280\":3,\"1281\":1,\"1282\":3,\"1283\":3,\"1284\":1,\"1285\":1,\"1286\":2,\"1287\":1,\"1288\":1,\"1289\":1,\"1290\":1,\"1291\":1,\"1292\":1,\"1293\":1,\"1295\":1,\"1296\":1,\"1297\":1,\"1298\":2,\"1299\":1,\"1300\":1,\"1301\":1,\"1302\":1,\"1303\":1,\"1304\":1,\"1308\":1,\"1309\":1,\"1310\":1,\"1311\":1,\"1312\":1,\"1313\":1,\"1315\":1,\"1317\":1,\"1318\":1,\"1319\":1,\"1323\":1,\"1328\":1,\"1329\":1,\"1330\":1,\"1331\":1,\"1332\":1,\"1333\":1,\"1334\":1,\"1335\":1,\"1336\":1,\"1337\":1,\"1338\":1,\"1339\":1,\"1340\":3,\"1341\":1,\"1342\":1,\"1343\":1,\"1344\":1,\"1345\":1,\"1346\":1,\"1347\":1,\"1348\":1,\"1349\":1,\"1350\":1,\"1352\":1,\"1355\":1,\"1357\":1,\"1358\":1,\"1372\":1,\"1376\":1,\"1378\":1,\"1380\":1,\"1382\":1,\"1384\":1,\"1386\":3,\"1388\":1,\"1390\":1,\"1392\":1,\"1394\":1,\"1396\":1,\"1397\":1,\"1398\":1,\"1399\":1,\"1400\":1,\"1401\":1,\"1402\":1,\"1403\":1,\"1421\":1,\"1422\":1,\"1423\":1,\"1424\":1,\"1425\":1,\"1426\":1,\"1427\":1,\"1428\":1,\"1429\":1,\"1430\":1,\"1431\":3,\"1432\":1,\"1433\":1,\"1434\":1,\"1435\":1,\"1436\":1,\"1439\":1,\"1440\":1,\"1575\":1,\"1576\":1,\"1577\":1,\"1578\":1,\"1580\":1,\"1581\":1,\"1582\":1,\"1583\":1,\"1584\":1,\"1585\":1,\"1586\":1,\"1587\":1,\"1588\":1,\"1592\":1,\"1594\":1,\"1595\":1,\"1596\":1,\"1597\":1,\"1598\":1,\"1599\":1,\"1600\":1,\"1602\":1,\"1603\":1,\"1604\":1,\"1605\":5,\"1606\":1,\"1607\":1,\"1608\":1,\"1609\":1,\"1610\":1,\"1611\":1,\"1612\":1,\"1613\":1,\"1614\":1,\"1615\":1,\"1616\":1,\"1617\":1,\"1618\":1,\"1622\":1,\"1623\":1,\"1624\":1,\"1625\":1,\"1626\":1,\"1627\":1,\"1628\":1,\"1629\":1,\"1630\":1,\"1631\":1,\"1633\":1,\"1634\":1,\"1635\":1,\"1636\":1,\"1637\":1,\"1638\":1,\"1642\":1,\"1643\":1,\"1644\":1,\"1645\":1,\"1646\":1,\"1648\":1,\"1649\":1,\"1650\":1,\"1653\":1,\"1654\":1,\"1655\":1,\"1657\":1,\"1658\":1,\"1659\":1,\"1661\":1,\"1662\":1,\"1663\":1,\"1664\":1,\"1665\":1,\"1666\":1,\"1667\":1,\"1686\":1,\"1687\":1,\"1688\":1,\"1690\":1,\"1691\":1,\"1692\":1,\"1693\":1,\"1694\":1,\"1695\":1,\"1696\":1,\"1699\":1,\"1700\":1,\"1701\":1,\"1703\":1,\"1704\":1,\"1713\":1,\"1716\":1,\"1717\":1,\"1718\":1,\"1719\":1,\"1720\":1,\"1722\":1,\"1723\":1,\"1724\":1,\"1725\":1,\"1726\":1,\"1727\":1,\"1733\":1,\"1734\":1,\"1737\":1,\"1738\":1,\"1739\":1,\"1740\":1,\"1741\":1,\"1742\":1,\"1743\":1,\"1744\":1,\"1750\":2,\"1752\":1,\"1753\":1,\"1756\":1,\"1762\":1,\"1763\":1,\"1777\":1,\"1778\":1,\"1779\":1,\"1781\":1,\"1782\":1,\"1783\":1,\"1784\":1,\"1785\":1,\"1786\":1,\"1787\":1,\"1789\":1,\"1791\":1,\"1793\":1,\"1794\":1,\"1795\":1,\"1796\":1,\"1797\":1,\"1798\":1,\"1799\":1,\"1803\":1,\"1804\":1,\"1805\":1,\"1806\":1,\"1807\":1,\"1809\":1,\"1810\":1,\"1811\":1,\"1812\":1,\"1813\":1,\"1814\":1,\"1815\":1,\"1816\":1,\"1817\":1,\"1824\":1,\"1825\":1,\"1827\":1,\"1829\":1,\"1830\":1,\"1841\":1,\"1852\":1,\"1853\":1,\"1854\":1,\"1855\":1,\"1856\":1,\"1857\":1,\"1858\":1,\"1859\":1,\"1860\":1,\"1861\":1,\"1862\":1,\"1863\":1,\"1864\":1,\"1865\":1,\"1866\":1,\"1867\":1,\"1868\":1,\"1870\":1,\"1871\":1,\"1873\":1,\"1874\":1,\"1875\":1,\"1876\":1,\"1877\":1,\"1878\":1,\"1879\":1,\"1880\":1,\"1881\":1,\"1882\":1,\"1883\":1,\"1884\":1,\"1885\":1,\"1895\":2,\"1944\":1,\"1945\":1,\"1946\":1,\"1947\":1,\"1949\":1,\"1950\":1,\"1951\":1,\"1952\":1,\"1953\":1,\"1954\":1,\"1955\":1,\"1956\":1,\"1957\":1,\"1961\":1,\"1963\":1,\"1964\":1,\"1965\":1,\"1966\":1,\"1967\":1,\"1968\":1,\"1969\":1,\"1971\":1,\"1972\":1,\"1973\":1,\"1974\":5,\"1975\":1,\"1976\":1,\"1977\":1,\"1978\":1,\"1979\":1,\"1980\":1,\"1981\":1,\"1982\":1,\"1983\":1,\"1984\":1,\"1985\":1,\"1986\":1,\"1987\":1,\"1991\":1,\"1992\":1,\"1993\":1,\"1994\":1,\"1995\":1,\"1996\":1,\"1997\":1,\"1998\":1,\"1999\":1,\"2000\":1,\"2002\":1,\"2003\":1,\"2004\":1,\"2005\":1,\"2006\":1,\"2007\":1,\"2011\":1,\"2012\":1,\"2013\":1,\"2014\":1,\"2015\":1,\"2017\":1,\"2018\":1,\"2019\":1,\"2022\":1,\"2023\":1,\"2024\":1,\"2026\":1,\"2027\":1,\"2028\":1,\"2030\":1,\"2031\":1,\"2032\":1,\"2033\":1,\"2034\":1,\"2035\":1,\"2036\":1,\"2055\":1,\"2056\":1,\"2057\":1,\"2059\":1,\"2060\":1,\"2061\":1,\"2062\":1,\"2063\":1,\"2064\":1,\"2065\":1,\"2068\":1,\"2069\":1,\"2070\":1,\"2072\":1,\"2073\":1,\"2082\":1,\"2085\":1,\"2086\":1,\"2087\":1,\"2088\":1,\"2089\":1,\"2091\":1,\"2092\":1,\"2093\":1,\"2094\":1,\"2095\":1,\"2096\":1,\"2102\":1,\"2103\":1,\"2106\":1,\"2107\":1,\"2108\":1,\"2109\":1,\"2110\":1,\"2111\":1,\"2112\":1,\"2113\":1,\"2119\":2,\"2121\":1,\"2122\":1,\"2125\":1,\"2131\":1,\"2132\":1,\"2146\":1,\"2147\":1,\"2148\":1,\"2150\":1,\"2151\":1,\"2152\":1,\"2153\":1,\"2154\":1,\"2155\":1,\"2156\":1,\"2158\":1,\"2160\":1,\"2162\":1,\"2163\":1,\"2164\":1,\"2165\":1,\"2166\":1,\"2167\":1,\"2168\":1,\"2172\":1,\"2173\":1,\"2174\":1,\"2175\":1,\"2176\":1,\"2178\":1,\"2179\":1,\"2180\":1,\"2181\":1,\"2182\":1,\"2183\":1,\"2184\":1,\"2185\":1,\"2186\":1,\"2193\":1,\"2194\":1,\"2196\":1,\"2198\":1,\"2199\":1,\"2210\":1,\"2221\":1,\"2222\":1,\"2223\":1,\"2224\":1,\"2225\":1,\"2226\":1,\"2227\":1,\"2228\":1,\"2229\":1,\"2230\":1,\"2231\":1,\"2232\":1,\"2233\":1,\"2234\":1,\"2235\":1,\"2236\":1,\"2237\":1,\"2239\":1,\"2240\":1,\"2242\":1,\"2243\":1,\"2244\":1,\"2245\":1,\"2246\":1,\"2247\":1,\"2248\":1,\"2249\":1,\"2250\":1,\"2251\":1,\"2252\":1,\"2253\":1,\"2254\":1,\"2264\":2,\"2311\":1,\"2313\":1,\"2314\":1,\"2315\":1,\"2316\":1,\"2317\":1,\"2318\":1,\"2319\":1,\"2325\":1,\"2326\":1,\"2327\":1,\"2328\":1,\"2330\":1,\"2331\":1,\"2332\":1,\"2333\":1,\"2334\":1,\"2335\":1,\"2336\":1,\"2337\":1,\"2338\":1,\"2340\":1,\"2341\":1,\"2342\":1,\"2343\":5,\"2344\":1,\"2345\":1,\"2346\":1,\"2347\":1,\"2348\":1,\"2349\":1,\"2350\":1,\"2351\":1,\"2352\":1,\"2353\":1,\"2354\":1,\"2355\":1,\"2356\":1,\"2360\":1,\"2361\":1,\"2362\":1,\"2363\":1,\"2364\":1,\"2365\":1,\"2366\":1,\"2367\":1,\"2368\":1,\"2369\":1,\"2371\":1,\"2372\":1,\"2373\":1,\"2374\":1,\"2375\":1,\"2376\":1,\"2380\":1,\"2381\":1,\"2382\":1,\"2383\":1,\"2384\":1,\"2386\":1,\"2387\":1,\"2388\":1,\"2391\":1,\"2392\":1,\"2393\":1,\"2395\":1,\"2396\":1,\"2397\":1,\"2399\":1,\"2400\":1,\"2401\":1,\"2402\":1,\"2403\":1,\"2404\":1,\"2405\":1,\"2424\":1,\"2425\":1,\"2426\":1,\"2428\":1,\"2429\":1,\"2430\":1,\"2431\":1,\"2432\":1,\"2433\":1,\"2434\":1,\"2437\":1,\"2438\":1,\"2439\":1,\"2441\":1,\"2442\":1,\"2448\":1,\"2449\":1,\"2451\":1,\"2452\":1,\"2453\":1,\"2454\":1,\"2455\":1,\"2456\":1,\"2461\":1,\"2464\":1,\"2465\":1,\"2466\":1,\"2467\":1,\"2468\":1,\"2472\":1,\"2473\":1,\"2484\":1,\"2485\":1,\"2486\":1,\"2487\":1,\"2488\":1,\"2489\":1,\"2490\":1,\"2491\":1,\"2493\":1,\"2495\":2,\"2500\":1,\"2501\":1,\"2515\":1,\"2516\":1,\"2517\":1,\"2519\":1,\"2520\":1,\"2521\":1,\"2522\":1,\"2523\":1,\"2524\":1,\"2525\":1,\"2527\":1,\"2529\":1,\"2531\":1,\"2532\":1,\"2533\":1,\"2534\":1,\"2535\":1,\"2536\":1,\"2537\":1,\"2541\":1,\"2542\":1,\"2543\":1,\"2544\":1,\"2545\":1,\"2547\":1,\"2548\":1,\"2549\":1,\"2550\":1,\"2551\":1,\"2552\":1,\"2553\":1,\"2554\":1,\"2555\":1,\"2562\":1,\"2563\":1,\"2565\":1,\"2567\":1,\"2568\":1,\"2579\":1,\"2590\":1,\"2591\":1,\"2592\":1,\"2593\":1,\"2594\":1,\"2595\":1,\"2596\":1,\"2597\":1,\"2598\":1,\"2599\":1,\"2600\":1,\"2601\":1,\"2602\":1,\"2603\":1,\"2604\":1,\"2605\":1,\"2606\":1,\"2608\":1,\"2609\":1,\"2611\":1,\"2612\":1,\"2613\":1,\"2614\":1,\"2615\":1,\"2616\":1,\"2617\":1,\"2618\":1,\"2619\":1,\"2620\":1,\"2621\":1,\"2622\":1,\"2623\":1,\"2633\":2}}],[\"兼容层定义了两个数据类\",{\"1\":{\"119\":1,\"627\":1,\"1137\":1}}],[\"兼容同步\",{\"1\":{\"0\":1,\"12\":1,\"24\":1}}],[\"更换默认的命名空间\",{\"1\":{\"1899\":1,\"2268\":1,\"2637\":1}}],[\"更佳\",{\"1\":{\"482\":1,\"992\":1,\"1507\":1}}],[\"更新\",{\"0\":{\"482\":1,\"992\":1,\"1507\":1}}],[\"更新事件触发权限\",{\"0\":{\"140\":1,\"648\":1,\"1158\":1}}],[\"更新事件响应器类型\",{\"0\":{\"139\":1,\"647\":1,\"1157\":1}}],[\"更新事件响应器类型和更新事件触发权限\",{\"1\":{\"138\":1,\"646\":1,\"1156\":1}}],[\"更深入地了解\",{\"1\":{\"430\":1,\"940\":1,\"1455\":1}}],[\"更自由\",{\"1\":{\"118\":1,\"626\":1,\"1136\":1}}],[\"更多通信交互方式可以参考以下适配器\",{\"1\":{\"471\":1,\"981\":1,\"1496\":1}}],[\"更多的使用方面的功能请参考apscheduler\",{\"1\":{\"450\":1,\"960\":1,\"1475\":1}}],[\"更多的基类抽象方法可以在使用适配器中查看\",{\"1\":{\"421\":1,\"931\":1,\"1446\":1}}],[\"更多日志处理器的使用方法请参考\",{\"1\":{\"418\":1,\"928\":1,\"1443\":1}}],[\"更多日志记录方法请参考\",{\"1\":{\"417\":1,\"927\":1,\"1442\":1}}],[\"更多示例参考argparse\",{\"1\":{\"365\":1,\"873\":1,\"1388\":1}}],[\"更多关于\",{\"1\":{\"100\":1,\"608\":1,\"1118\":1}}],[\"更多\",{\"0\":{\"51\":1,\"559\":1,\"1069\":1}}],[\"前缀中的正则会被转义\",{\"1\":{\"1887\":1,\"2256\":1,\"2625\":1}}],[\"前缀\",{\"1\":{\"1887\":1,\"2256\":1,\"2625\":1}}],[\"前往\",{\"1\":{\"445\":1,\"457\":1,\"955\":1,\"967\":1,\"1470\":1,\"1482\":1}}],[\"前往编辑\",{\"1\":{\"11\":1,\"23\":1,\"35\":1}}],[\"前者可以在各种服务端型驱动器下运行\",{\"1\":{\"118\":1,\"626\":1,\"1136\":1}}],[\"直接修改默认配置\",{\"1\":{\"1899\":1,\"2268\":1,\"2637\":1}}],[\"直接构造\",{\"0\":{\"534\":1,\"1044\":1,\"1559\":1}}],[\"直接调用\",{\"1\":{\"494\":1,\"1004\":1,\"1519\":1}}],[\"直接向\",{\"1\":{\"118\":1,\"626\":1,\"1136\":1}}],[\"直接使用\",{\"1\":{\"116\":1,\"624\":1,\"1134\":1}}],[\"直接使用辅助函数新建一个响应器\",{\"1\":{\"100\":1,\"608\":1,\"1118\":1}}],[\"详情参考\",{\"1\":{\"1670\":1,\"2039\":1,\"2408\":1}}],[\"详情请参考拼接消息\",{\"1\":{\"535\":1,\"1045\":1,\"1560\":1}}],[\"详情请阅读最佳实践中的\",{\"1\":{\"108\":1,\"616\":1,\"1126\":1}}],[\"详情见\",{\"1\":{\"162\":1,\"670\":1,\"1180\":1}}],[\"详情可以参考选择驱动器\",{\"1\":{\"118\":1,\"626\":1,\"1136\":1}}],[\"接下来\",{\"1\":{\"1923\":1,\"2292\":1,\"2661\":1}}],[\"接受\",{\"1\":{\"1737\":1,\"2106\":1,\"2484\":1}}],[\"接口\",{\"1\":{\"490\":1,\"491\":1,\"1000\":1,\"1001\":1,\"1515\":1,\"1516\":1,\"1575\":1,\"1944\":1,\"2325\":1}}],[\"接口标准\",{\"0\":{\"489\":1,\"999\":1,\"1514\":1}}],[\"接口也转型且改名为\",{\"1\":{\"482\":1,\"992\":1,\"1507\":1}}],[\"接口地址\",{\"1\":{\"474\":1,\"984\":1,\"1499\":1}}],[\"接口等功能\",{\"1\":{\"118\":1,\"626\":1,\"1136\":1}}],[\"接收一条\",{\"1\":{\"1739\":1,\"1740\":1,\"1741\":1,\"2108\":1,\"2109\":1,\"2110\":1,\"2486\":1,\"2487\":1,\"2488\":1}}],[\"接收并返回结果\",{\"1\":{\"474\":1,\"984\":1,\"1499\":1}}],[\"接收到的事件数据\",{\"1\":{\"473\":1,\"983\":1,\"1498\":1}}],[\"接收到新的事件时运行\",{\"1\":{\"132\":1,\"640\":1,\"1150\":1}}],[\"接收的方法\",{\"1\":{\"471\":1,\"981\":1,\"1496\":1}}],[\"接收的消息不符合预期\",{\"1\":{\"255\":1,\"256\":1,\"257\":1,\"763\":1,\"764\":1,\"765\":1,\"1276\":1,\"1277\":1,\"1278\":1}}],[\"接收\",{\"1\":{\"53\":1,\"561\":1,\"1071\":1}}],[\"接收事件是指将驱动器收到的事件消息转换为\",{\"1\":{\"37\":1,\"545\":1,\"1055\":1}}],[\"从全局配置获取当前插件需要的配置项\",{\"1\":{\"1807\":1,\"2176\":1,\"2545\":1}}],[\"从字典数组构造\",{\"0\":{\"536\":1,\"1046\":1,\"1561\":1}}],[\"从而提升用户体验并有助于\",{\"1\":{\"503\":1,\"1013\":1,\"1528\":1}}],[\"从而方便其他开发者们使用对应语言快速编写具体的\",{\"1\":{\"491\":1,\"1001\":1,\"1516\":1}}],[\"从而方便其他开发者们使用\",{\"1\":{\"490\":1,\"1000\":1,\"1515\":1}}],[\"从而实现自定义的\",{\"1\":{\"118\":1,\"626\":1,\"1136\":1}}],[\"从事件中获取会话\",{\"1\":{\"331\":1,\"839\":1,\"1357\":1}}],[\"从该文件读取配置\",{\"1\":{\"224\":1,\"732\":1,\"1244\":1}}],[\"从默认的\",{\"1\":{\"64\":1,\"572\":1,\"1082\":1}}],[\"会通过\",{\"1\":{\"1934\":1,\"2303\":1,\"2672\":1}}],[\"会根据传入的\",{\"1\":{\"1895\":1,\"2264\":1,\"2633\":1}}],[\"会返回由\",{\"1\":{\"1895\":1,\"2264\":1,\"2633\":1}}],[\"会返回\",{\"1\":{\"1890\":2,\"2259\":2,\"2628\":2}}],[\"会自动为模型生成一个表名\",{\"1\":{\"2678\":1,\"2693\":1,\"2708\":1}}],[\"会自动将默认值变成\",{\"1\":{\"1894\":1,\"2263\":1,\"2632\":1}}],[\"会自动将默认值变成列表\",{\"1\":{\"1894\":1,\"2263\":1,\"2632\":1}}],[\"会自动将默认值设为\",{\"1\":{\"1890\":1,\"2259\":1,\"2628\":1}}],[\"会自动检测入口文件\",{\"1\":{\"508\":1,\"1018\":1,\"1533\":1}}],[\"会将\",{\"1\":{\"1887\":1,\"2256\":1,\"2625\":1}}],[\"会将命令头匹配到的值转为对应的类型\",{\"1\":{\"1887\":1,\"2256\":1,\"2625\":1}}],[\"会将消息转换为消息序列\",{\"1\":{\"532\":1,\"1042\":1,\"1557\":1}}],[\"会匹配任意的值\",{\"1\":{\"1890\":1,\"2259\":1,\"2628\":1}}],[\"会匹配\",{\"1\":{\"1887\":1,\"2256\":1,\"2625\":1}}],[\"会转为\",{\"1\":{\"1887\":1,\"2256\":1,\"2625\":1}}],[\"会在无参数匹配时跳过\",{\"1\":{\"1889\":1,\"2258\":1,\"2627\":1}}],[\"会在\",{\"1\":{\"513\":1,\"1023\":1,\"1538\":1}}],[\"会在导入时对这些模块做一些特殊的处理使得他们成为一个插件\",{\"1\":{\"510\":1,\"1020\":1,\"1535\":1}}],[\"会在加载当前插件时\",{\"1\":{\"117\":1,\"625\":1,\"1135\":1}}],[\"会并发调用所有\",{\"1\":{\"427\":1,\"937\":1,\"1452\":1}}],[\"会忽略\",{\"1\":{\"426\":1,\"936\":1,\"1451\":1}}],[\"会话已经关闭了\",{\"1\":{\"2680\":1,\"2695\":1,\"2710\":1}}],[\"会话中的相应模型实例\",{\"1\":{\"2680\":1,\"2695\":1,\"2710\":1}}],[\"会话和模型实例存储在\",{\"1\":{\"2680\":1,\"2695\":1,\"2710\":1}}],[\"会话的生命周期中可能包含多个事件\",{\"1\":{\"2680\":1,\"2695\":1,\"2710\":1}}],[\"会话产生的模型实例\",{\"1\":{\"2680\":1,\"2695\":1,\"2710\":1}}],[\"会话管理\",{\"0\":{\"2680\":1,\"2695\":1,\"2710\":1}}],[\"会话\",{\"1\":{\"330\":1,\"838\":1,\"1356\":1,\"1753\":1,\"2122\":1,\"2473\":1,\"2680\":3,\"2695\":3,\"2710\":3}}],[\"会话白名单\",{\"1\":{\"329\":1,\"332\":1,\"837\":1,\"840\":1,\"1352\":1,\"1358\":1}}],[\"会话权限更新函数\",{\"1\":{\"247\":1,\"755\":1,\"1268\":1}}],[\"会话通常是由机器人与用户进行的一对一交互\",{\"1\":{\"140\":1,\"648\":1,\"1158\":1}}],[\"会话过程中\",{\"1\":{\"138\":1,\"646\":1,\"1156\":1}}],[\"会话更新分为两部分\",{\"1\":{\"138\":1,\"646\":1,\"1156\":1}}],[\"会话更新\",{\"0\":{\"138\":1,\"646\":1,\"1156\":1}}],[\"会话状态中\",{\"1\":{\"2680\":1,\"2695\":1,\"2710\":1}}],[\"会话状态还可以用于发送动态消息\",{\"1\":{\"429\":1,\"939\":1,\"1454\":1}}],[\"会话状态的生命周期与事件处理流程相同\",{\"1\":{\"429\":1,\"939\":1,\"1454\":1}}],[\"会话状态会持续到整个事件响应流程结束\",{\"1\":{\"138\":1,\"646\":1,\"1156\":1}}],[\"会话状态\",{\"0\":{\"429\":1,\"939\":1,\"1454\":1},\"1\":{\"132\":1,\"133\":1,\"134\":1,\"135\":1,\"292\":1,\"640\":1,\"641\":1,\"642\":1,\"643\":1,\"800\":1,\"1150\":1,\"1151\":1,\"1152\":1,\"1153\":1,\"1312\":1}}],[\"会使\",{\"1\":{\"132\":1,\"640\":1,\"1150\":1}}],[\"会尝试优先加载依赖的插件\",{\"1\":{\"117\":1,\"625\":1,\"1135\":1}}],[\"会正确识别这些插件的父子关系\",{\"1\":{\"114\":1,\"622\":1,\"1132\":1}}],[\"外\",{\"1\":{\"426\":1,\"936\":1,\"1451\":1}}],[\"外部插件之前\",{\"1\":{\"116\":1,\"624\":1,\"1134\":1}}],[\"外的其他消息段\",{\"1\":{\"108\":1,\"616\":1,\"1126\":1}}],[\"简单来说\",{\"1\":{\"116\":1,\"422\":1,\"531\":1,\"624\":1,\"932\":1,\"1041\":1,\"1134\":1,\"1447\":1,\"1556\":1}}],[\"此处提到的\",{\"1\":{\"2680\":1,\"2695\":1,\"2710\":1}}],[\"此处为全大写字母的\",{\"1\":{\"140\":1,\"648\":1,\"1158\":1}}],[\"此函数是\",{\"1\":{\"222\":1,\"730\":1,\"1242\":1}}],[\"此时我们不在乎数据安全\",{\"1\":{\"2679\":1,\"2694\":1,\"2709\":1}}],[\"此时配置会自动注入上下文内创建的命令\",{\"1\":{\"1898\":1,\"2267\":1,\"2636\":1}}],[\"此时会使用\",{\"1\":{\"1890\":1,\"2259\":1,\"2628\":1}}],[\"此时会将传入的值尝试转为\",{\"1\":{\"1887\":1,\"2256\":1,\"2625\":1}}],[\"此时的消息将会是平台特定的\",{\"1\":{\"543\":1,\"1053\":1,\"1568\":1}}],[\"此时\",{\"1\":{\"116\":1,\"624\":1,\"1134\":1}}],[\"此外\",{\"1\":{\"99\":1,\"497\":1,\"541\":1,\"607\":1,\"1007\":1,\"1051\":1,\"1117\":1,\"1522\":1,\"1566\":1}}],[\"也不现实\",{\"1\":{\"2690\":1,\"2705\":1,\"2720\":1}}],[\"也要注意会话作用域问题\",{\"1\":{\"2680\":1,\"2695\":1,\"2710\":1}}],[\"也就是说\",{\"1\":{\"2679\":1,\"2694\":1,\"2709\":1}}],[\"也是同样可以切换到\",{\"1\":{\"1898\":1,\"2267\":1,\"2636\":1}}],[\"也有可能是多种类型的组合等等\",{\"1\":{\"528\":1,\"1038\":1,\"1553\":1}}],[\"也有\",{\"1\":{\"474\":1,\"984\":1,\"1499\":1}}],[\"也无法通过事件响应器对象的方法进行任何操作\",{\"1\":{\"452\":1,\"962\":1,\"1477\":1}}],[\"也会使\",{\"1\":{\"134\":1,\"642\":1,\"1152\":1}}],[\"也称作\",{\"1\":{\"125\":1,\"633\":1,\"1143\":1}}],[\"也能正确跟踪插件\",{\"1\":{\"116\":1,\"624\":1,\"1134\":1}}],[\"也可能是由于用户输入错误\",{\"1\":{\"442\":1,\"952\":1,\"1467\":1}}],[\"也可用于快速创建各适配器下的消息段\",{\"1\":{\"108\":1,\"616\":1,\"1126\":1}}],[\"也可以是\",{\"1\":{\"1926\":1,\"2295\":1,\"2664\":1}}],[\"也可以如\",{\"1\":{\"1906\":1,\"2275\":1,\"2644\":1}}],[\"也可以传入\",{\"1\":{\"1891\":1,\"2260\":1,\"2629\":1}}],[\"也可以传入自定义的\",{\"1\":{\"224\":1,\"732\":1,\"1244\":1}}],[\"也可以使用\",{\"1\":{\"533\":1,\"537\":1,\"1043\":1,\"1047\":1,\"1558\":1,\"1562\":1}}],[\"也可以手动新建空白文件\",{\"1\":{\"513\":1,\"1023\":1,\"1538\":1}}],[\"也可以阅读本章节\",{\"1\":{\"504\":1,\"1014\":1,\"1529\":1}}],[\"也可以尝试转为基础\",{\"1\":{\"473\":1,\"983\":1,\"1498\":1}}],[\"也可以在子插件信息中看到它们的父插件信息\",{\"1\":{\"114\":1,\"622\":1,\"1132\":1}}],[\"也可以通过插件索引名称获取插件对象\",{\"1\":{\"111\":1,\"619\":1,\"1129\":1}}],[\"也可以直接使用辅助函数新建一个响应器\",{\"1\":{\"95\":1,\"96\":1,\"97\":1,\"98\":1,\"99\":1,\"101\":1,\"603\":1,\"604\":1,\"605\":1,\"606\":1,\"607\":1,\"609\":1,\"1113\":1,\"1114\":1,\"1115\":1,\"1116\":1,\"1117\":1,\"1119\":1}}],[\"也可以挂载其他\",{\"1\":{\"58\":1,\"566\":1,\"1076\":1}}],[\"由插件编写者提供\",{\"1\":{\"1832\":1,\"2201\":1,\"2570\":1}}],[\"由\",{\"1\":{\"543\":1,\"1053\":1,\"1568\":1}}],[\"由字典数组构造消息序列\",{\"1\":{\"536\":1,\"1046\":1,\"1561\":1}}],[\"由字典构造消息段\",{\"1\":{\"536\":1,\"1046\":1,\"1561\":1}}],[\"由浅入深\",{\"1\":{\"495\":1,\"1005\":1,\"1520\":1}}],[\"由中国科学院软件研究所与\",{\"1\":{\"492\":1,\"496\":1,\"1002\":1,\"1006\":1,\"1517\":1,\"1521\":1}}],[\"由协议适配器生成\",{\"1\":{\"140\":1,\"648\":1,\"1158\":1}}],[\"由于消息中存在各种类型的消息段\",{\"1\":{\"537\":1,\"1047\":1,\"1562\":1}}],[\"由于消息序列是\",{\"1\":{\"532\":1,\"1042\":1,\"1557\":1}}],[\"由于消息序列的本质是由若干消息段所组成的序列\",{\"1\":{\"531\":1,\"1041\":1,\"1556\":1}}],[\"由于消息序列继承自\",{\"1\":{\"530\":1,\"1040\":1,\"1555\":1}}],[\"由于相关依赖版本迭代迅速\",{\"1\":{\"501\":1,\"1011\":1,\"1526\":1}}],[\"由于这些插件已经被声明\",{\"1\":{\"116\":1,\"624\":1,\"1134\":1}}],[\"由于\",{\"1\":{\"116\":1,\"451\":1,\"452\":1,\"482\":1,\"624\":1,\"961\":1,\"962\":1,\"992\":1,\"1134\":1,\"1476\":1,\"1477\":1,\"1507\":1}}],[\"由适配器实现的判断\",{\"1\":{\"50\":1,\"558\":1,\"1068\":1}}],[\"由适配器填写\",{\"1\":{\"40\":1,\"548\":1,\"1058\":1}}],[\"定时更新的同时提供统计数据\",{\"1\":{\"502\":1,\"1012\":1,\"1527\":1}}],[\"定时更新中需要插件测试环境隔离\",{\"1\":{\"502\":1,\"1012\":1,\"1527\":1}}],[\"定时自动更新\",{\"1\":{\"502\":1,\"1012\":1,\"1527\":1}}],[\"定时任务作为一个额外功能\",{\"1\":{\"448\":1,\"958\":1,\"1473\":1}}],[\"定时任务\",{\"0\":{\"448\":1,\"958\":1,\"1473\":1},\"1\":{\"495\":1,\"503\":1,\"1005\":1,\"1013\":1,\"1520\":1,\"1528\":1}}],[\"定时任务插件\",{\"1\":{\"115\":1,\"623\":1,\"1133\":1}}],[\"定义消息事件\",{\"1\":{\"495\":1,\"1005\":1,\"1520\":1}}],[\"定义关闭时的操作\",{\"1\":{\"470\":1,\"980\":1,\"1495\":1}}],[\"定义启动时的操作\",{\"1\":{\"470\":1,\"980\":1,\"1495\":1}}],[\"定义了一系列兼容函数与类供使用\",{\"1\":{\"141\":1,\"649\":1,\"1159\":1}}],[\"定义中是否包含适配器路由的\",{\"1\":{\"63\":1,\"571\":1,\"1081\":1}}],[\"定义\",{\"1\":{\"60\":1,\"568\":1,\"1078\":1}}],[\"定义地址\",{\"1\":{\"60\":1,\"568\":1,\"1078\":1}}],[\"定义的事件模型\",{\"1\":{\"37\":1,\"545\":1,\"1055\":1}}],[\"跨插件访问\",{\"0\":{\"115\":1,\"623\":1,\"1133\":1},\"1\":{\"433\":1,\"451\":1,\"495\":1,\"943\":1,\"961\":1,\"1005\":1,\"1458\":1,\"1476\":1,\"1520\":1}}],[\"跨平台\",{\"1\":{\"0\":1,\"12\":1,\"24\":1}}],[\"join\",{\"1\":{\"542\":2,\"1052\":2,\"1567\":2,\"2681\":2,\"2696\":2,\"2711\":2}}],[\"joinroomevent\",{\"1\":{\"476\":1,\"986\":1,\"1501\":1}}],[\"joinpath\",{\"1\":{\"114\":1,\"622\":1,\"1132\":1}}],[\"jobs\",{\"1\":{\"2690\":2,\"2705\":2,\"2720\":2}}],[\"job\",{\"1\":{\"452\":5,\"962\":5,\"1477\":5}}],[\"json=\",{\"1\":{\"1934\":1,\"2303\":1,\"2672\":1}}],[\"json=platform\",{\"1\":{\"474\":1,\"984\":1,\"1499\":1}}],[\"jsonencoder\",{\"1\":{\"413\":1,\"923\":1,\"1438\":1}}],[\"json\",{\"1\":{\"60\":2,\"63\":1,\"160\":1,\"162\":1,\"165\":1,\"216\":2,\"506\":1,\"518\":6,\"568\":2,\"571\":1,\"668\":1,\"670\":1,\"673\":1,\"724\":2,\"1016\":1,\"1028\":6,\"1078\":2,\"1081\":1,\"1178\":1,\"1180\":1,\"1183\":1,\"1236\":2,\"1531\":1,\"1543\":6,\"1671\":1,\"1728\":1,\"1802\":2,\"1812\":5,\"1934\":1,\"1935\":2,\"2040\":1,\"2097\":1,\"2171\":2,\"2181\":5,\"2303\":1,\"2304\":2,\"2409\":1,\"2478\":1,\"2540\":2,\"2550\":5,\"2672\":1,\"2673\":2}}],[\"想要在其中嵌套加载子插件\",{\"1\":{\"114\":1,\"622\":1,\"1132\":1}}],[\"you\",{\"1\":{\"1904\":1,\"2273\":1,\"2642\":1}}],[\"your\",{\"1\":{\"466\":1,\"468\":1,\"470\":1,\"471\":2,\"473\":1,\"474\":2,\"475\":1,\"515\":2,\"516\":1,\"517\":2,\"518\":2,\"519\":2,\"976\":1,\"978\":1,\"980\":1,\"981\":2,\"983\":1,\"984\":2,\"985\":1,\"1025\":2,\"1026\":1,\"1027\":2,\"1028\":2,\"1029\":2,\"1491\":1,\"1493\":1,\"1495\":1,\"1496\":2,\"1498\":1,\"1499\":2,\"1500\":1,\"1540\":2,\"1541\":1,\"1542\":2,\"1543\":2,\"1544\":2,\"1809\":2,\"2178\":2,\"2547\":2}}],[\"yanyongyu\",{\"1\":{\"485\":1,\"486\":1,\"487\":1,\"493\":1,\"499\":1,\"501\":1,\"995\":1,\"996\":1,\"997\":1,\"1003\":1,\"1009\":1,\"1011\":1,\"1510\":1,\"1511\":1,\"1512\":1,\"1518\":1,\"1524\":1,\"1526\":1}}],[\"y>\",{\"1\":{\"474\":1,\"984\":1,\"1499\":1}}],[\"yield\",{\"1\":{\"297\":1,\"805\":1,\"1323\":1}}],[\"y\",{\"1\":{\"113\":2,\"421\":1,\"513\":1,\"621\":2,\"931\":1,\"1023\":1,\"1131\":2,\"1446\":1,\"1538\":1,\"1890\":5,\"2259\":5,\"2628\":5}}],[\"$extra\",{\"1\":{\"1896\":1,\"2265\":1,\"2634\":1}}],[\"$xdg\",{\"1\":{\"437\":1,\"947\":1,\"1462\":1}}],[\"$\",{\"1\":{\"113\":1,\"513\":1,\"621\":1,\"1023\":1,\"1131\":1,\"1538\":1,\"1896\":1,\"1907\":3,\"1915\":1,\"2265\":1,\"2276\":3,\"2284\":1,\"2634\":1,\"2645\":3,\"2653\":1,\"2679\":1,\"2690\":8,\"2694\":1,\"2705\":8,\"2709\":1,\"2720\":8}}],[\"嵌套插件\",{\"0\":{\"112\":1,\"620\":1,\"1130\":1}}],[\"请勿修改\",{\"1\":{\"2679\":1,\"2694\":1,\"2709\":1}}],[\"请勿在插件被加载前\",{\"1\":{\"514\":1,\"1024\":1,\"1539\":1}}],[\"请只配置必要的选项\",{\"1\":{\"1932\":1,\"2301\":1,\"2670\":1}}],[\"请使用\",{\"1\":{\"1748\":1,\"1749\":1,\"1853\":1,\"1854\":1,\"2117\":1,\"2118\":1,\"2222\":1,\"2223\":1,\"2469\":1,\"2480\":1,\"2591\":1,\"2592\":1}}],[\"请先激活虚拟环境\",{\"1\":{\"508\":1,\"1018\":1,\"1533\":1}}],[\"请优先考虑使用\",{\"1\":{\"504\":1,\"1014\":1,\"1529\":1}}],[\"请查看该活动的\",{\"1\":{\"480\":1,\"492\":1,\"496\":1,\"500\":1,\"990\":1,\"1002\":1,\"1006\":1,\"1010\":1,\"1505\":1,\"1517\":1,\"1521\":1,\"1525\":1}}],[\"请在\",{\"1\":{\"478\":1,\"988\":1,\"1503\":1}}],[\"请参阅\",{\"1\":{\"459\":1,\"460\":1,\"969\":1,\"970\":1,\"1484\":1,\"1485\":1}}],[\"请参考对应\",{\"1\":{\"252\":1,\"253\":1,\"254\":1,\"255\":1,\"256\":1,\"257\":1,\"760\":1,\"761\":1,\"762\":1,\"763\":1,\"764\":1,\"765\":1,\"1273\":1,\"1274\":1,\"1275\":1,\"1276\":1,\"1277\":1,\"1278\":1}}],[\"请参考\",{\"1\":{\"226\":1,\"734\":1,\"1246\":1}}],[\"请不要将事件处理依赖的特殊语法用于定时任务\",{\"1\":{\"452\":1,\"962\":1,\"1477\":1}}],[\"请重新输入\",{\"1\":{\"429\":1,\"939\":1,\"1454\":1}}],[\"请输入\",{\"1\":{\"429\":1,\"939\":1,\"1454\":1}}],[\"请输入密码\",{\"1\":{\"429\":1,\"939\":1,\"1454\":1}}],[\"请输入地名\",{\"1\":{\"421\":1,\"931\":1,\"1446\":1,\"2680\":1,\"2695\":1,\"2710\":1}}],[\"请注意区分插件的项目名\",{\"1\":{\"1919\":1,\"2288\":1,\"2657\":1}}],[\"请注意转义\",{\"1\":{\"476\":1,\"986\":1,\"1501\":1}}],[\"请注意\",{\"1\":{\"110\":1,\"140\":1,\"514\":1,\"515\":1,\"516\":1,\"618\":1,\"648\":1,\"1024\":1,\"1025\":1,\"1026\":1,\"1128\":1,\"1158\":1,\"1539\":1,\"1540\":1,\"1541\":1}}],[\"请求头\",{\"1\":{\"474\":1,\"984\":1,\"1499\":1}}],[\"请求的方式\",{\"1\":{\"474\":1,\"984\":1,\"1499\":1}}],[\"请求成功返回数据\",{\"1\":{\"212\":1,\"720\":1,\"1232\":1}}],[\"请求无返回或返回状态非正常等\",{\"1\":{\"211\":1,\"719\":1,\"1231\":1}}],[\"请求地址不正确\",{\"1\":{\"211\":1,\"719\":1,\"1231\":1}}],[\"请求超时时间\",{\"1\":{\"170\":1,\"678\":1,\"1188\":1}}],[\"请求方法\",{\"1\":{\"120\":1,\"474\":1,\"628\":1,\"984\":1,\"1138\":1,\"1499\":1}}],[\"请求处理的回调函数\",{\"1\":{\"53\":1,\"561\":1,\"1071\":1}}],[\"请求\",{\"1\":{\"53\":1,\"78\":1,\"79\":1,\"86\":1,\"474\":1,\"561\":1,\"586\":1,\"587\":1,\"594\":1,\"984\":1,\"1071\":1,\"1096\":1,\"1097\":1,\"1104\":1,\"1499\":1,\"1752\":1,\"1934\":2,\"2121\":1,\"2303\":2,\"2472\":1,\"2672\":2}}],[\"一一对应\",{\"1\":{\"2679\":1,\"2694\":1,\"2709\":1}}],[\"一样直接标明参数名称和类型\",{\"1\":{\"1906\":1,\"2275\":1,\"2644\":1}}],[\"一般情况下\",{\"1\":{\"2679\":1,\"2694\":1,\"2709\":1}}],[\"一般情况下你可以通过\",{\"1\":{\"1900\":1,\"2269\":1,\"2638\":1}}],[\"一般为插件模块名\",{\"1\":{\"1930\":1,\"2299\":1,\"2668\":1,\"2679\":1,\"2694\":1,\"2709\":1}}],[\"一般为参数的类型\",{\"1\":{\"1888\":1,\"2257\":1,\"2626\":1}}],[\"一般一个分支对应一个插件\",{\"1\":{\"1924\":1,\"2293\":1,\"2662\":1}}],[\"一段指定顺序的字符串列表\",{\"1\":{\"1893\":1,\"2262\":1,\"2631\":1}}],[\"一段语音\",{\"1\":{\"528\":1,\"1038\":1,\"1553\":1}}],[\"一定是字符串\",{\"1\":{\"1888\":1,\"2257\":1,\"2626\":1}}],[\"一串消息\",{\"1\":{\"530\":1,\"1040\":1,\"1555\":1}}],[\"一篇富文本文章\",{\"1\":{\"528\":1,\"1038\":1,\"1553\":1}}],[\"一张图片\",{\"1\":{\"528\":1,\"1038\":1,\"1553\":1}}],[\"一条消息可能会有承载有各种不同的表现形式\",{\"1\":{\"528\":1,\"1038\":1,\"1553\":1}}],[\"一套自动化的测试机制是非常重要的\",{\"1\":{\"485\":1,\"995\":1,\"1510\":1}}],[\"一些有关\",{\"1\":{\"475\":1,\"985\":1,\"1500\":1}}],[\"一些使用了\",{\"1\":{\"64\":1,\"572\":1,\"1082\":1}}],[\"一节进行了解\",{\"1\":{\"433\":1,\"451\":1,\"943\":1,\"961\":1,\"1458\":1,\"1476\":1}}],[\"一致时触发\",{\"1\":{\"242\":1,\"750\":1,\"1263\":1}}],[\"一个\",{\"1\":{\"2689\":1,\"2704\":1,\"2719\":1}}],[\"一个地方只会有一种天气\",{\"1\":{\"2678\":1,\"2693\":1,\"2708\":1}}],[\"一个包含\",{\"1\":{\"512\":1,\"1022\":1,\"1537\":1}}],[\"一个普通的\",{\"1\":{\"511\":1,\"1021\":1,\"1536\":1}}],[\"一个机器人项目的最小实例中至少需要包含以下内容\",{\"1\":{\"504\":1,\"1014\":1,\"1529\":1}}],[\"一个用于检查用户是否在黑名单中\",{\"1\":{\"425\":1,\"935\":1,\"1450\":1}}],[\"一个用于检查插件是否启用\",{\"1\":{\"425\":1,\"935\":1,\"1450\":1}}],[\"一个用于包装\",{\"1\":{\"406\":1,\"407\":1,\"914\":1,\"915\":1,\"1429\":1,\"1430\":1}}],[\"一个以\",{\"1\":{\"223\":1,\"731\":1,\"1243\":1}}],[\"一个字典\",{\"1\":{\"110\":1,\"618\":1,\"1128\":1}}],[\"向机器人用户提供功能\",{\"1\":{\"110\":1,\"618\":1,\"1128\":1}}],[\"除外\",{\"1\":{\"2688\":1,\"2703\":1,\"2718\":1}}],[\"除非你知道自己在做什么\",{\"1\":{\"2680\":1,\"2695\":1,\"2710\":1}}],[\"除主参数外的其他解析结果\",{\"1\":{\"1895\":1,\"2264\":1,\"2633\":1}}],[\"除\",{\"1\":{\"523\":1,\"1033\":1,\"1548\":1}}],[\"除此之外\",{\"1\":{\"110\":1,\"618\":1,\"1128\":1,\"1902\":1,\"2271\":1,\"2640\":1}}],[\"除了通过传入\",{\"1\":{\"1887\":1,\"2256\":1,\"2625\":1}}],[\"除了在事件响应器中使用响应规则外\",{\"1\":{\"427\":1,\"937\":1,\"1452\":1}}],[\"除了使用数据库等第三方存储之外\",{\"1\":{\"431\":1,\"941\":1,\"1456\":1}}],[\"除了使用\",{\"1\":{\"426\":1,\"936\":1,\"1451\":1}}],[\"除了\",{\"1\":{\"93\":1,\"165\":1,\"601\":1,\"673\":1,\"1111\":1,\"1183\":1}}],[\"└──\",{\"1\":{\"110\":4,\"195\":6,\"463\":2,\"511\":1,\"512\":2,\"513\":8,\"618\":4,\"703\":6,\"973\":2,\"1021\":1,\"1022\":2,\"1023\":8,\"1128\":4,\"1215\":6,\"1488\":2,\"1536\":1,\"1537\":2,\"1538\":8,\"2679\":2,\"2694\":2,\"2709\":2}}],[\"│\",{\"1\":{\"110\":1,\"463\":21,\"513\":3,\"618\":1,\"973\":21,\"1023\":3,\"1128\":1,\"1488\":21,\"1538\":3}}],[\"📜\",{\"1\":{\"110\":4,\"463\":8,\"511\":1,\"512\":1,\"513\":7,\"618\":4,\"973\":8,\"1021\":1,\"1022\":1,\"1023\":7,\"1128\":4,\"1488\":8,\"1536\":1,\"1537\":1,\"1538\":7}}],[\"📂\",{\"1\":{\"110\":3,\"463\":3,\"511\":1,\"512\":2,\"513\":7,\"618\":3,\"973\":3,\"1021\":1,\"1022\":2,\"1023\":7,\"1128\":3,\"1488\":3,\"1536\":1,\"1537\":2,\"1538\":7}}],[\"📦\",{\"1\":{\"110\":1,\"463\":1,\"513\":3,\"618\":1,\"973\":1,\"1023\":3,\"1128\":1,\"1488\":1,\"1538\":3}}],[\"├──\",{\"1\":{\"110\":3,\"195\":12,\"463\":9,\"513\":6,\"618\":3,\"703\":12,\"973\":9,\"1023\":6,\"1128\":3,\"1215\":12,\"1488\":9,\"1538\":6,\"2679\":2,\"2694\":2,\"2709\":2}}],[\"假设我们有一个插件\",{\"1\":{\"110\":1,\"117\":1,\"618\":1,\"625\":1,\"1128\":1,\"1135\":1}}],[\"现在可以开始使用数据库了\",{\"1\":{\"2680\":1,\"2695\":1,\"2710\":1}}],[\"现在启动机器人试试吧\",{\"1\":{\"2679\":1,\"2694\":1,\"2709\":1}}],[\"现在我们来实现他的功能\",{\"1\":{\"526\":1,\"1036\":1,\"1551\":1}}],[\"现在你可以选择\",{\"1\":{\"430\":1,\"940\":1,\"1455\":1}}],[\"现在\",{\"1\":{\"110\":1,\"618\":1,\"1128\":1,\"2679\":2,\"2694\":2,\"2709\":2}}],[\"而且\",{\"1\":{\"2690\":1,\"2705\":1,\"2720\":1}}],[\"而且代码不清晰\",{\"1\":{\"2688\":1,\"2703\":1,\"2718\":1}}],[\"而且不利于日志的归档\",{\"1\":{\"416\":1,\"926\":1,\"1441\":1}}],[\"而应该在事件响应器结束前提交事务\",{\"1\":{\"2680\":1,\"2695\":1,\"2710\":1}}],[\"而是由\",{\"1\":{\"2679\":1,\"2694\":1,\"2709\":1}}],[\"而是一个消息序列的字符串表示\",{\"1\":{\"537\":1,\"1047\":1,\"1562\":1}}],[\"而不是\",{\"1\":{\"2678\":1,\"2693\":1,\"2708\":1}}],[\"而不同地方可能有相同的天气\",{\"1\":{\"2678\":1,\"2693\":1,\"2708\":1}}],[\"而其他插件使用默认的\",{\"1\":{\"1930\":1,\"2299\":1,\"2668\":1}}],[\"而\",{\"1\":{\"1888\":1,\"2257\":1,\"2626\":1}}],[\"而消息段则是组成自然段的一句话\",{\"1\":{\"531\":1,\"1041\":1,\"1556\":1}}],[\"而无需关心\",{\"1\":{\"490\":1,\"491\":1,\"1000\":1,\"1001\":1,\"1515\":1,\"1516\":1}}],[\"而在使用时\",{\"1\":{\"426\":1,\"936\":1,\"1451\":1}}],[\"而插件使用者或者机器人用户想要看到的是插件使用方法等帮助信息\",{\"1\":{\"110\":1,\"618\":1,\"1128\":1}}],[\"而非直接使用会话状态中的模型实例\",{\"1\":{\"2680\":1,\"2695\":1,\"2710\":1}}],[\"而非\",{\"1\":{\"101\":1,\"367\":2,\"465\":1,\"609\":1,\"875\":2,\"975\":1,\"1119\":1,\"1390\":2,\"1490\":1,\"2680\":1,\"2695\":1,\"2710\":1}}],[\"章节\",{\"1\":{\"108\":1,\"616\":1,\"1126\":1}}],[\"实际上\",{\"1\":{\"2679\":1,\"2694\":1,\"2709\":1}}],[\"实际应用测试时\",{\"1\":{\"1934\":1,\"1935\":1,\"2303\":1,\"2304\":1,\"2672\":1,\"2673\":1}}],[\"实际的命令名\",{\"1\":{\"174\":1,\"682\":1,\"1192\":1}}],[\"实现相应\",{\"1\":{\"497\":1,\"1007\":1,\"1522\":1}}],[\"实现相应适配器\",{\"1\":{\"494\":1,\"1004\":1,\"1519\":1}}],[\"实现更多附加特性\",{\"1\":{\"491\":1,\"1001\":1,\"1516\":1}}],[\"实现自选语言版\",{\"0\":{\"491\":1,\"1001\":1,\"1516\":1}}],[\"实现第一手\",{\"1\":{\"490\":1,\"491\":1,\"1000\":1,\"1001\":1,\"1515\":1,\"1516\":1}}],[\"实现的开发者\",{\"1\":{\"490\":1,\"491\":1,\"1000\":1,\"1001\":1,\"1515\":1,\"1516\":1}}],[\"实现的开发者只需编写针对特定聊天平台的对接代码\",{\"1\":{\"490\":1,\"491\":1,\"1000\":1,\"1001\":1,\"1515\":1,\"1516\":1}}],[\"实现所有\",{\"1\":{\"490\":1,\"491\":1,\"1000\":1,\"1001\":1,\"1515\":1,\"1516\":1}}],[\"实现所共享的功能\",{\"1\":{\"490\":2,\"491\":2,\"1000\":2,\"1001\":2,\"1515\":2,\"1516\":2}}],[\"实现包括\",{\"1\":{\"490\":1,\"491\":1,\"1000\":1,\"1001\":1,\"1515\":1,\"1516\":1}}],[\"实现\",{\"0\":{\"490\":1,\"1000\":1,\"1515\":1},\"1\":{\"485\":1,\"490\":2,\"491\":2,\"503\":2,\"995\":1,\"1000\":2,\"1001\":2,\"1013\":2,\"1510\":1,\"1515\":2,\"1516\":2,\"1528\":2}}],[\"实现从字符串中构造消息数组\",{\"1\":{\"477\":1,\"987\":1,\"1502\":1}}],[\"实现方式具体可以参考以下适配器\",{\"1\":{\"474\":1,\"984\":1,\"1499\":1}}],[\"实现了常用字典操作\",{\"1\":{\"274\":1,\"782\":1,\"1294\":1}}],[\"实现了跨平台接收和发送消息的功能\",{\"1\":{\"108\":1,\"616\":1,\"1126\":1}}],[\"实例的字典\",{\"1\":{\"1930\":1,\"2299\":1,\"2668\":1}}],[\"实例连接断开时调用\",{\"1\":{\"1595\":1,\"1964\":1,\"2314\":1}}],[\"实例连接建立成功时调用\",{\"1\":{\"1594\":1,\"1963\":1,\"2313\":1}}],[\"实例化\",{\"1\":{\"472\":2,\"982\":2,\"1497\":2}}],[\"实例字典\",{\"1\":{\"219\":1,\"727\":1,\"1239\":1}}],[\"实例\",{\"1\":{\"217\":2,\"218\":1,\"219\":1,\"725\":2,\"726\":1,\"727\":1,\"1237\":2,\"1238\":1,\"1239\":1,\"1589\":1,\"1590\":1,\"1591\":1,\"1594\":1,\"1595\":1,\"1958\":1,\"1959\":1,\"1960\":1,\"1963\":1,\"1964\":1,\"2308\":1,\"2309\":1,\"2310\":1,\"2313\":1,\"2314\":1}}],[\"实例后调用方法\",{\"1\":{\"90\":1,\"598\":1,\"1108\":1}}],[\"标量\",{\"1\":{\"2689\":1,\"2704\":1,\"2719\":1}}],[\"标准定义的通信方式\",{\"1\":{\"490\":1,\"491\":1,\"1000\":1,\"1001\":1,\"1515\":1,\"1516\":1}}],[\"标准的\",{\"1\":{\"489\":1,\"999\":1,\"1514\":1}}],[\"标准\",{\"1\":{\"482\":1,\"992\":1,\"1507\":1}}],[\"标准库中的日志模块\",{\"1\":{\"419\":1,\"929\":1,\"1444\":1}}],[\"标准库文档\",{\"1\":{\"365\":1,\"873\":1,\"1388\":1}}],[\"标准库进行\",{\"1\":{\"100\":1,\"608\":1,\"1118\":1}}],[\"标签\",{\"1\":{\"398\":1,\"906\":1,\"1421\":1}}],[\"标记一个方法为父类\",{\"1\":{\"373\":1,\"881\":1,\"1396\":1}}],[\"标识符表示该参数的类型注解需要隐藏\",{\"1\":{\"1889\":1,\"2258\":1,\"2627\":1}}],[\"标识符表示该参数为可选参数\",{\"1\":{\"1889\":1,\"2258\":1,\"2627\":1}}],[\"标识符表示该处传入的参数应不是规定的类型\",{\"1\":{\"1889\":1,\"2258\":1,\"2627\":1}}],[\"标识符与\",{\"1\":{\"1889\":1,\"2258\":1,\"2627\":1}}],[\"标识符为\",{\"1\":{\"1803\":1,\"2172\":1,\"2541\":1}}],[\"标识\",{\"1\":{\"208\":1,\"716\":1,\"1228\":1}}],[\"标注可用于在\",{\"1\":{\"108\":1,\"616\":1,\"1126\":1}}],[\"高\",{\"1\":{\"485\":1,\"490\":1,\"995\":1,\"1000\":1,\"1510\":1,\"1515\":1}}],[\"高度灵活的自动化测试框架\",{\"1\":{\"485\":1,\"995\":1,\"1510\":1}}],[\"高效的命令参数解析器\",{\"1\":{\"108\":1,\"616\":1,\"1126\":1,\"1886\":1,\"2255\":1,\"2624\":1}}],[\"高性能的异步\",{\"1\":{\"58\":1,\"566\":1,\"1076\":1}}],[\"灵活\",{\"1\":{\"108\":1,\"616\":1,\"1126\":1,\"1886\":1,\"2255\":1,\"2624\":1}}],[\"设计并实现\",{\"1\":{\"499\":1,\"1009\":1,\"1524\":1}}],[\"设计并实现项目管理面板相关功能\",{\"1\":{\"497\":1,\"1007\":1,\"1522\":1}}],[\"设计与编写\",{\"1\":{\"498\":1,\"1008\":1,\"1523\":1}}],[\"设计命令行交互界面\",{\"1\":{\"494\":1,\"1004\":1,\"1519\":1}}],[\"设计命令行与\",{\"1\":{\"494\":1,\"1004\":1,\"1519\":1}}],[\"设计用户交互模式\",{\"1\":{\"493\":1,\"1003\":1,\"1518\":1}}],[\"设计项目联动\",{\"1\":{\"490\":1,\"1000\":1,\"1515\":1}}],[\"设计\",{\"0\":{\"489\":1,\"999\":1,\"1514\":1},\"1\":{\"485\":1,\"493\":1,\"995\":1,\"1003\":1,\"1510\":1,\"1518\":1}}],[\"设定的前缀\",{\"1\":{\"105\":1,\"613\":1,\"1123\":1}}],[\"设置此命名空间下的命令的帮助选项名称\",{\"1\":{\"1898\":1,\"2267\":1,\"2636\":1}}],[\"设置此命名空间下的命令的\",{\"1\":{\"1898\":1,\"2267\":1,\"2636\":1}}],[\"设置事件响应器存储器\",{\"1\":{\"284\":1,\"792\":1,\"1304\":1}}],[\"设置一个\",{\"1\":{\"260\":1,\"263\":1,\"768\":1,\"771\":1,\"1281\":1,\"1284\":1,\"1596\":1,\"1597\":1,\"1733\":1,\"1734\":1,\"1965\":1,\"1966\":1,\"2102\":1,\"2103\":1,\"2315\":1,\"2316\":1,\"2448\":1,\"2449\":1}}],[\"设置存储提供者\",{\"0\":{\"83\":1,\"591\":1,\"1101\":1}}],[\"设置视图搜索配置项\",{\"1\":{\"10\":1,\"22\":1,\"34\":1}}],[\"他们拥有如下共同参数\",{\"1\":{\"1893\":1,\"2262\":1,\"2631\":1}}],[\"他们往往同样需要再次实现类似逻辑\",{\"1\":{\"490\":1,\"491\":1,\"1000\":1,\"1001\":1,\"1515\":1,\"1516\":1}}],[\"他们具有相同的优先级\",{\"1\":{\"105\":1,\"613\":1,\"1123\":1}}],[\"他可以作为驱动器单独运行\",{\"1\":{\"54\":1,\"562\":1,\"1072\":1}}],[\"+=\",{\"1\":{\"542\":3,\"1052\":3,\"1567\":3}}],[\"+\",{\"1\":{\"101\":2,\"429\":1,\"490\":1,\"491\":1,\"542\":8,\"543\":2,\"609\":2,\"939\":1,\"1000\":1,\"1001\":1,\"1052\":8,\"1053\":2,\"1119\":2,\"1454\":1,\"1515\":1,\"1516\":1,\"1567\":8,\"1568\":2,\"1887\":2,\"1905\":2,\"2256\":2,\"2274\":2,\"2625\":2,\"2643\":2}}],[\"+<module>\",{\"1\":{\"54\":1,\"166\":1,\"562\":1,\"674\":1,\"1072\":1,\"1184\":1}}],[\"zerodivisionerror\",{\"1\":{\"417\":2,\"927\":2,\"1442\":2}}],[\"z\",{\"1\":{\"101\":2,\"609\":2,\"1119\":2}}],[\"^xxx\",{\"1\":{\"101\":1,\"367\":1,\"609\":1,\"875\":1,\"1119\":1,\"1390\":1}}],[\"正如\",{\"1\":{\"2679\":1,\"2694\":1,\"2709\":1}}],[\"正确\",{\"1\":{\"1889\":1,\"2258\":1,\"2627\":1}}],[\"正确处理\",{\"1\":{\"502\":1,\"1012\":1,\"1527\":1}}],[\"正确创建\",{\"1\":{\"37\":1,\"545\":1,\"1055\":1}}],[\"正常\",{\"1\":{\"501\":1,\"1011\":1,\"1526\":1}}],[\"正则内容只在命令名上生效\",{\"1\":{\"1887\":1,\"2256\":1,\"2625\":1}}],[\"正则表达式标记\",{\"1\":{\"366\":1,\"367\":1,\"874\":1,\"875\":1,\"1389\":1,\"1390\":1}}],[\"正则表达式\",{\"1\":{\"366\":1,\"367\":1,\"874\":1,\"875\":1,\"1389\":1,\"1390\":1,\"1867\":1,\"1884\":1,\"2236\":1,\"2253\":1,\"2605\":1,\"2622\":1}}],[\"正则表达式匹配使用\",{\"1\":{\"101\":1,\"367\":2,\"609\":1,\"875\":2,\"1119\":1,\"1390\":2}}],[\"正则匹配标志\",{\"1\":{\"1867\":1,\"1884\":1,\"2236\":1,\"2253\":1,\"2605\":1,\"2622\":1}}],[\"正则匹配\",{\"1\":{\"1867\":1,\"1884\":1,\"2236\":1,\"2253\":1,\"2605\":1,\"2622\":1}}],[\"正则匹配结果文本\",{\"1\":{\"319\":1,\"827\":1,\"1340\":1}}],[\"正则匹配结果\",{\"1\":{\"318\":1,\"320\":1,\"321\":1,\"826\":1,\"828\":1,\"829\":1,\"1339\":1,\"1341\":1,\"1342\":1}}],[\"正则匹配结果存储\",{\"1\":{\"190\":1,\"698\":1,\"1210\":1}}],[\"正则匹配后的结果可以通过\",{\"1\":{\"101\":1,\"609\":1,\"1119\":1}}],[\"选项时自自动启用交互式补全\",{\"1\":{\"1911\":1,\"2280\":1,\"2649\":1}}],[\"选项名称\",{\"1\":{\"1904\":1,\"2273\":1,\"2642\":1}}],[\"选项与子命令会选择其中长度最长的作为其名称\",{\"1\":{\"1893\":1,\"2262\":1,\"2631\":1}}],[\"选项与子命令\",{\"0\":{\"1893\":1,\"2262\":1,\"2631\":1}}],[\"选项与默认\",{\"1\":{\"100\":1,\"608\":1,\"1118\":1}}],[\"选项\",{\"1\":{\"417\":2,\"927\":2,\"1442\":2,\"1930\":1,\"1932\":2,\"2299\":1,\"2301\":2,\"2668\":1,\"2670\":2}}],[\"选项直接创建一个嵌套插件\",{\"1\":{\"113\":1,\"621\":1,\"1131\":1}}],[\"选择了命令式编程\",{\"1\":{\"2680\":1,\"2695\":1,\"2710\":1}}],[\"选择直接通过模板创建一个嵌套插件\",{\"1\":{\"113\":1,\"621\":1,\"1131\":1}}],[\"选择驱动器\",{\"0\":{\"52\":1,\"560\":1,\"1070\":1}}],[\"帮助文档\",{\"1\":{\"480\":1,\"492\":1,\"496\":1,\"500\":1,\"990\":1,\"1002\":1,\"1006\":1,\"1010\":1,\"1505\":1,\"1517\":1,\"1521\":1,\"1525\":1}}],[\"帮助选项的规则\",{\"1\":{\"100\":1,\"608\":1,\"1118\":1}}],[\"帮助\",{\"1\":{\"99\":3,\"105\":3,\"607\":3,\"613\":3,\"1117\":3,\"1123\":3,\"1898\":1,\"2267\":1,\"2636\":1}}],[\"匹配字典中的任意一个键\",{\"1\":{\"1890\":1,\"2259\":1,\"2628\":1}}],[\"匹配字符串\",{\"1\":{\"1890\":2,\"2259\":2,\"2628\":2}}],[\"匹配一个正则表达式\",{\"1\":{\"1890\":2,\"2259\":2,\"2628\":2}}],[\"匹配一个参数为\",{\"1\":{\"1890\":1,\"2259\":1,\"2628\":1}}],[\"匹配一个字典\",{\"1\":{\"1890\":1,\"2259\":1,\"2628\":1}}],[\"匹配一个列表\",{\"1\":{\"1890\":1,\"2259\":1,\"2628\":1}}],[\"匹配其中的任意一个类型\",{\"1\":{\"1890\":1,\"2259\":1,\"2628\":1}}],[\"匹配其中的任意一个值或类型\",{\"1\":{\"1890\":1,\"2259\":1,\"2628\":1}}],[\"匹配其中的任意一个值\",{\"1\":{\"1890\":1,\"2259\":1,\"2628\":1}}],[\"匹配类似\",{\"1\":{\"1890\":2,\"2259\":2,\"2628\":2}}],[\"匹配网址\",{\"1\":{\"1890\":1,\"2259\":1,\"2628\":1}}],[\"匹配浮点数\",{\"1\":{\"1890\":1,\"2259\":1,\"2628\":1}}],[\"匹配整数\",{\"1\":{\"1890\":1,\"2259\":1,\"2628\":1}}],[\"匹配内容\",{\"1\":{\"1887\":1,\"2256\":1,\"2625\":1}}],[\"匹配事件类型\",{\"1\":{\"371\":1,\"879\":1,\"1394\":1}}],[\"匹配与机器人有关的事件\",{\"1\":{\"369\":1,\"877\":1,\"1392\":1}}],[\"匹配符合正则表达式的消息字符串\",{\"1\":{\"367\":1,\"875\":1,\"1390\":1}}],[\"匹配消息命令\",{\"1\":{\"361\":1,\"869\":1,\"1384\":1}}],[\"匹配消息纯文本关键词\",{\"1\":{\"359\":1,\"867\":1,\"1382\":1}}],[\"匹配消息纯文本结尾\",{\"1\":{\"355\":1,\"863\":1,\"1378\":1}}],[\"匹配消息纯文本开头\",{\"1\":{\"353\":1,\"861\":1,\"1376\":1}}],[\"匹配任意类型\",{\"1\":{\"1890\":2,\"2259\":2,\"2628\":2}}],[\"匹配任意字符串\",{\"1\":{\"1890\":1,\"2259\":1,\"2628\":1}}],[\"匹配任意超级用户事件\",{\"1\":{\"345\":1,\"853\":1,\"1368\":1}}],[\"匹配任意\",{\"1\":{\"340\":1,\"341\":1,\"342\":1,\"343\":1,\"848\":1,\"849\":1,\"850\":1,\"851\":1,\"1363\":1,\"1364\":1,\"1365\":1,\"1366\":1}}],[\"匹配当前事件属于指定会话\",{\"1\":{\"329\":1,\"837\":1,\"1352\":1}}],[\"匹配规则等\",{\"1\":{\"527\":1,\"1037\":1,\"1552\":1}}],[\"匹配规则\",{\"1\":{\"242\":1,\"750\":1,\"1263\":1}}],[\"匹配\",{\"1\":{\"99\":2,\"365\":1,\"607\":2,\"873\":1,\"1117\":2,\"1388\":1,\"1890\":7,\"2259\":7,\"2628\":7}}],[\"时可能触发\",{\"1\":{\"2689\":1,\"2704\":1,\"2719\":1}}],[\"时发生的错误\",{\"1\":{\"1578\":1,\"1947\":1,\"2328\":1}}],[\"时遇到的挑战\",{\"1\":{\"503\":1,\"1013\":1,\"1528\":1}}],[\"时才会响应\",{\"1\":{\"423\":1,\"426\":1,\"527\":1,\"933\":1,\"936\":1,\"1037\":1,\"1448\":1,\"1451\":1,\"1552\":1}}],[\"时被运行\",{\"1\":{\"394\":1,\"395\":1,\"902\":1,\"903\":1,\"1417\":1,\"1418\":1}}],[\"时继续运行\",{\"1\":{\"346\":1,\"854\":1,\"1369\":1}}],[\"时就会继续运行\",{\"1\":{\"328\":1,\"836\":1,\"1351\":1}}],[\"时抛出\",{\"1\":{\"209\":1,\"717\":1,\"1229\":1}}],[\"时运行\",{\"1\":{\"129\":1,\"637\":1,\"1147\":1}}],[\"时\",{\"1\":{\"99\":1,\"120\":1,\"222\":1,\"436\":1,\"437\":1,\"438\":1,\"473\":1,\"490\":1,\"491\":1,\"526\":1,\"607\":1,\"628\":1,\"730\":1,\"946\":1,\"947\":1,\"948\":1,\"983\":1,\"1000\":1,\"1001\":1,\"1036\":1,\"1117\":1,\"1138\":1,\"1242\":1,\"1461\":1,\"1462\":1,\"1463\":1,\"1498\":1,\"1515\":1,\"1516\":1,\"1551\":1,\"1894\":6,\"1902\":1,\"1903\":1,\"1927\":1,\"2263\":6,\"2271\":1,\"2272\":1,\"2296\":1,\"2632\":6,\"2640\":1,\"2641\":1,\"2665\":1}}],[\"时更容易上手\",{\"1\":{\"4\":1,\"16\":1,\"28\":1}}],[\"当然我们也可以获得一个新的会话\",{\"1\":{\"2680\":1,\"2695\":1,\"2710\":1}}],[\"当然非要这么做也不是不可以\",{\"1\":{\"2680\":1,\"2695\":1,\"2710\":1}}],[\"当需要回滚插件版本或删除插件时\",{\"1\":{\"1926\":1,\"2295\":1,\"2664\":1}}],[\"当存在默认值并且不为数字时\",{\"1\":{\"1894\":1,\"2263\":1,\"2632\":1}}],[\"当存在默认值并且不为列表时\",{\"1\":{\"1894\":1,\"2263\":1,\"2632\":1}}],[\"当有数据更改时\",{\"1\":{\"2680\":1,\"2695\":1,\"2710\":1}}],[\"当有\",{\"1\":{\"1595\":1,\"1964\":1,\"2314\":1}}],[\"当有新的\",{\"1\":{\"1594\":1,\"1963\":1,\"2313\":1}}],[\"当社区中的开发者想针对一个新的聊天平台实现\",{\"1\":{\"490\":1,\"491\":1,\"1000\":1,\"1001\":1,\"1515\":1,\"1516\":1}}],[\"当\",{\"1\":{\"436\":1,\"437\":1,\"438\":1,\"946\":1,\"947\":1,\"948\":1,\"1461\":1,\"1462\":1,\"1463\":1,\"1902\":1,\"1903\":1,\"1907\":1,\"1934\":1,\"1935\":1,\"2271\":1,\"2272\":1,\"2276\":1,\"2303\":1,\"2304\":1,\"2640\":1,\"2641\":1,\"2645\":1,\"2672\":1,\"2673\":1}}],[\"当发生异常时返回的值\",{\"1\":{\"408\":1,\"916\":1,\"1431\":1}}],[\"当事件传递时\",{\"1\":{\"333\":1,\"347\":1,\"841\":1,\"855\":1,\"1353\":1,\"1370\":1}}],[\"当要获取的\",{\"1\":{\"251\":1,\"759\":1,\"1272\":1}}],[\"当不提供时\",{\"1\":{\"222\":1,\"730\":1,\"1242\":1}}],[\"当提供\",{\"1\":{\"222\":1,\"730\":1,\"1242\":1}}],[\"当我们需要等待用户事件时\",{\"1\":{\"139\":1,\"647\":1,\"1157\":1}}],[\"当我们配置了\",{\"1\":{\"99\":1,\"607\":1,\"1117\":1}}],[\"当请求方法为\",{\"1\":{\"120\":1,\"628\":1,\"1138\":1}}],[\"当前事件响应器\",{\"1\":{\"2680\":1,\"2695\":1,\"2710\":1}}],[\"当前连接上的\",{\"1\":{\"1719\":1,\"1720\":1,\"2088\":1,\"2089\":1,\"2467\":1,\"2468\":1}}],[\"当前消息段是否为纯文本\",{\"1\":{\"1631\":1,\"2000\":1,\"2369\":1}}],[\"当前协议适配器的名称\",{\"1\":{\"1592\":1,\"1961\":1,\"2311\":1}}],[\"当前存储器中已有的事件响应器\",{\"1\":{\"285\":1,\"793\":1,\"1305\":1}}],[\"当前状态\",{\"1\":{\"245\":1,\"753\":1,\"1266\":1}}],[\"当前\",{\"1\":{\"180\":1,\"201\":1,\"349\":1,\"688\":1,\"709\":1,\"857\":1,\"1198\":1,\"1221\":1,\"1372\":1,\"1577\":1,\"1578\":1,\"1946\":1,\"1947\":1,\"2327\":1,\"2328\":1}}],[\"当前环境名\",{\"1\":{\"164\":1,\"672\":1,\"1182\":1}}],[\"当前有效类别有\",{\"1\":{\"110\":1,\"618\":1,\"1128\":1}}],[\"当前所有适配器已连接的\",{\"1\":{\"40\":1,\"548\":1,\"1058\":1}}],[\"来模拟这几种通信方式\",{\"1\":{\"1933\":1,\"2302\":1,\"2671\":1}}],[\"来作为全局的\",{\"1\":{\"1910\":1,\"1913\":1,\"2279\":1,\"2282\":1,\"2648\":1,\"2651\":1}}],[\"来删除一个快捷指令\",{\"1\":{\"1902\":1,\"2271\":1,\"2640\":1}}],[\"来列出当前指令的所有快捷指令\",{\"1\":{\"1902\":1,\"2271\":1,\"2640\":1}}],[\"来增加一个快捷指令\",{\"1\":{\"1902\":1,\"2271\":1,\"2640\":1}}],[\"来讲\",{\"1\":{\"1893\":1,\"2262\":1,\"2631\":1}}],[\"来使用正则表达式外\",{\"1\":{\"1887\":1,\"2256\":1,\"2625\":1}}],[\"来自动检测代码的更改并自动重新运行入口文件\",{\"1\":{\"1018\":1,\"1533\":1}}],[\"来辅助我们用最简的方式创建带有不同规则预设的事件响应器\",{\"1\":{\"525\":1,\"1035\":1,\"1550\":1}}],[\"来存放项目所需文件\",{\"1\":{\"504\":1,\"1014\":1,\"1529\":1}}],[\"来实现各种\",{\"1\":{\"477\":1,\"987\":1,\"1502\":1}}],[\"来帮助适配器进行网络通信\",{\"1\":{\"469\":1,\"979\":1,\"1494\":1}}],[\"来获取\",{\"1\":{\"429\":1,\"939\":1,\"1454\":1}}],[\"来获取事件发送者\",{\"1\":{\"421\":1,\"931\":1,\"1446\":1}}],[\"来更好地复用规则\",{\"1\":{\"426\":1,\"936\":1,\"1451\":1}}],[\"来将需要的信息输出到控制台\",{\"1\":{\"416\":1,\"926\":1,\"1441\":1}}],[\"来确保匹配开头\",{\"1\":{\"367\":1,\"875\":1,\"1390\":1}}],[\"来记录日志信息\",{\"1\":{\"226\":1,\"734\":1,\"1246\":1}}],[\"来指定\",{\"1\":{\"224\":1,\"732\":1,\"1244\":1}}],[\"来读取配置\",{\"1\":{\"162\":1,\"506\":1,\"670\":1,\"1016\":1,\"1180\":1,\"1531\":1}}],[\"来判断消息是否为命令\",{\"1\":{\"99\":1,\"607\":1,\"1117\":1}}],[\"来看看如何注册适配器\",{\"1\":{\"38\":1,\"546\":1,\"1056\":1}}],[\"完成\",{\"1\":{\"493\":1,\"1003\":1,\"1518\":1}}],[\"完善功能\",{\"1\":{\"493\":1,\"1003\":1,\"1518\":1}}],[\"完全匹配消息\",{\"1\":{\"357\":1,\"865\":1,\"1380\":1}}],[\"完全相同\",{\"1\":{\"97\":1,\"605\":1,\"1115\":1}}],[\"完整实现了类型注解\",{\"1\":{\"3\":1,\"15\":1,\"27\":1}}],[\"完整的类型注解\",{\"0\":{\"3\":1,\"15\":1,\"27\":1}}],[\"相当于\",{\"1\":{\"1897\":1,\"1902\":1,\"2266\":1,\"2271\":1,\"2635\":1,\"2640\":1}}],[\"相对于当前工作目录\",{\"1\":{\"1819\":1,\"2188\":1,\"2557\":1}}],[\"相对于事件处理依赖而言\",{\"1\":{\"452\":1,\"962\":1,\"1477\":1}}],[\"相加均会返回一个新的\",{\"1\":{\"542\":1,\"1052\":1,\"1567\":1}}],[\"相加构造\",{\"1\":{\"535\":1,\"1045\":1,\"1560\":1}}],[\"相关技术\",{\"1\":{\"502\":1,\"1012\":1,\"1527\":1}}],[\"相关操作\",{\"1\":{\"502\":1,\"1012\":1,\"1527\":1}}],[\"相关能力\",{\"1\":{\"501\":1,\"1011\":1,\"1526\":1}}],[\"相关功能与接口\",{\"1\":{\"498\":1,\"1008\":1,\"1523\":1}}],[\"相关功能\",{\"1\":{\"497\":1,\"1007\":1,\"1522\":1}}],[\"相关\",{\"1\":{\"495\":1,\"1005\":1,\"1520\":1}}],[\"相关信息参考\",{\"1\":{\"64\":1,\"572\":1,\"1082\":1}}],[\"相信你已经可以独自写出一个插件了\",{\"1\":{\"430\":1,\"940\":1,\"1455\":1}}],[\"相信你已经能够实现更复杂的会话功能了\",{\"1\":{\"140\":1,\"648\":1,\"1158\":1}}],[\"相同\",{\"1\":{\"95\":1,\"96\":1,\"362\":1,\"603\":1,\"604\":1,\"870\":1,\"1113\":1,\"1114\":1,\"1385\":1,\"1607\":1,\"1894\":1,\"1976\":1,\"2263\":1,\"2345\":1,\"2632\":1}}],[\"下多个插件\",{\"1\":{\"1812\":1,\"1813\":1,\"2181\":1,\"2182\":1,\"2550\":1,\"2551\":1}}],[\"下面假设我们使用了一个适配器\",{\"1\":{\"1934\":1,\"1935\":1,\"2303\":1,\"2304\":1,\"2672\":1,\"2673\":1}}],[\"下面列出了目前我们已经发布的项目\",{\"1\":{\"480\":1,\"492\":1,\"496\":1,\"500\":1,\"990\":1,\"1002\":1,\"1006\":1,\"1010\":1,\"1505\":1,\"1517\":1,\"1521\":1,\"1525\":1}}],[\"下面我们将分别介绍如何使用\",{\"1\":{\"1933\":1,\"2302\":1,\"2671\":1}}],[\"下面我们将介绍如何为插件添加元数据\",{\"1\":{\"109\":1,\"617\":1,\"1127\":1}}],[\"下面我们创建一个项目文件夹\",{\"1\":{\"504\":1,\"1014\":1,\"1529\":1}}],[\"下面我们逐个介绍\",{\"1\":{\"93\":1,\"601\":1,\"1111\":1}}],[\"下一步\",{\"0\":{\"430\":1,\"940\":1,\"1455\":1}}],[\"下一个\",{\"1\":{\"181\":1,\"689\":1,\"1199\":1}}],[\"下称\",{\"1\":{\"0\":1,\"12\":1,\"24\":1,\"525\":1,\"1035\":1,\"1550\":1}}],[\"函数后\",{\"1\":{\"2679\":1,\"2694\":1,\"2709\":1}}],[\"函数中的代码是互逆的\",{\"1\":{\"2679\":1,\"2694\":1,\"2709\":1}}],[\"函数会在默认\",{\"1\":{\"466\":1,\"976\":1,\"1491\":1}}],[\"函数用于快捷打印适配器日志\",{\"1\":{\"466\":1,\"976\":1,\"1491\":1}}],[\"函数都会检查事件是否符合条件\",{\"1\":{\"423\":1,\"933\":1,\"1448\":1}}],[\"函数组成\",{\"1\":{\"423\":1,\"933\":1,\"1448\":1}}],[\"函数声明其依赖于插件\",{\"1\":{\"117\":1,\"625\":1,\"1135\":1}}],[\"函数的参数为插件索引名称或者外部插件的模块名称\",{\"1\":{\"117\":1,\"625\":1,\"1135\":1}}],[\"函数的\",{\"1\":{\"99\":1,\"607\":1,\"1117\":1}}],[\"函数\",{\"1\":{\"93\":2,\"111\":1,\"117\":2,\"601\":2,\"619\":1,\"625\":2,\"1111\":2,\"1129\":1,\"1135\":2,\"2679\":1,\"2694\":1,\"2709\":1}}],[\"函数具有一个\",{\"1\":{\"93\":1,\"601\":1,\"1111\":1}}],[\"创建时间\",{\"1\":{\"2679\":1,\"2694\":1,\"2709\":1}}],[\"创建新机器人\",{\"0\":{\"1921\":1,\"2290\":1,\"2659\":1}}],[\"创建\",{\"1\":{\"1898\":1,\"1900\":1,\"2267\":1,\"2269\":1,\"2636\":1,\"2638\":1}}],[\"创建消息模板\",{\"1\":{\"1602\":1,\"1971\":1,\"2340\":1}}],[\"创建消息事件响应器\",{\"1\":{\"93\":1,\"601\":1,\"1111\":1}}],[\"创建事件响应器\",{\"0\":{\"526\":1,\"1036\":1,\"1551\":1}}],[\"创建插件可以通过\",{\"1\":{\"513\":1,\"1023\":1,\"1538\":1}}],[\"创建插件\",{\"0\":{\"513\":1,\"1023\":1,\"1538\":1}}],[\"创建入口文件\",{\"0\":{\"507\":1,\"1017\":1,\"1532\":1}}],[\"创建配置文件\",{\"0\":{\"506\":1,\"1016\":1,\"1531\":1}}],[\"创建配置项目\",{\"1\":{\"495\":1,\"1005\":1,\"1520\":1}}],[\"创建虚拟环境\",{\"1\":{\"505\":1,\"1015\":1,\"1530\":1}}],[\"创建一个项目\",{\"1\":{\"504\":1,\"1014\":1,\"1529\":1}}],[\"创建一个新的事件响应器\",{\"1\":{\"242\":1,\"750\":1,\"1263\":1}}],[\"创建与管理项目\",{\"1\":{\"497\":1,\"1007\":1,\"1522\":1}}],[\"创建项目\",{\"0\":{\"464\":1,\"974\":1,\"1489\":1},\"1\":{\"493\":1,\"507\":1,\"1003\":1,\"1017\":1,\"1518\":1,\"1532\":1}}],[\"创建嵌套插件\",{\"0\":{\"113\":1,\"621\":1,\"1131\":1}}],[\"创建通知事件响应器\",{\"1\":{\"93\":1,\"601\":1,\"1111\":1}}],[\"创建请求事件响应器\",{\"1\":{\"93\":1,\"601\":1,\"1111\":1}}],[\"创建元事件响应器\",{\"1\":{\"93\":1,\"601\":1,\"1111\":1}}],[\"创建任何类型的事件响应器\",{\"1\":{\"93\":1,\"601\":1,\"1111\":1}}],[\"该选项会影响到\",{\"1\":{\"1912\":1,\"2281\":1,\"2650\":1}}],[\"该消息段所代表的\",{\"1\":{\"1623\":1,\"1992\":1,\"2361\":1}}],[\"该方法是\",{\"1\":{\"520\":1,\"1030\":1,\"1545\":1}}],[\"该方法需要\",{\"1\":{\"90\":1,\"598\":1,\"1108\":1}}],[\"该文件功能会被\",{\"1\":{\"507\":1,\"1017\":1,\"1532\":1}}],[\"该模块实现所有\",{\"1\":{\"490\":1,\"491\":1,\"1000\":1,\"1001\":1,\"1515\":1,\"1516\":1}}],[\"该处理器会将日志输出到stdout\",{\"1\":{\"418\":1,\"928\":1,\"1443\":1}}],[\"该插件同时通过提供\",{\"1\":{\"108\":1,\"616\":1,\"1126\":1}}],[\"该插件同时提供了一系列便捷的消息段标注\",{\"1\":{\"108\":1,\"616\":1,\"1126\":1}}],[\"该插件提供了一类新的事件响应器辅助函数\",{\"1\":{\"108\":1,\"616\":1,\"1126\":1}}],[\"该插件使用\",{\"1\":{\"108\":1,\"616\":1,\"1126\":1}}],[\"该响应器会被自动销毁\",{\"1\":{\"91\":1,\"599\":1,\"1109\":1}}],[\"响应内容\",{\"1\":{\"471\":1,\"981\":1,\"1496\":1}}],[\"响应头\",{\"1\":{\"471\":1,\"981\":1,\"1496\":1}}],[\"响应事件类型更新函数\",{\"1\":{\"246\":1,\"754\":1,\"1267\":1}}],[\"响应事件类型更新函数是一个\",{\"1\":{\"139\":1,\"647\":1,\"1157\":1}}],[\"响应触发关键字\",{\"1\":{\"194\":1,\"325\":1,\"702\":1,\"833\":1,\"1214\":1,\"1346\":1}}],[\"响应触发完整消息\",{\"1\":{\"193\":1,\"324\":1,\"701\":1,\"832\":1,\"1213\":1,\"1345\":1}}],[\"响应触发后缀\",{\"1\":{\"192\":1,\"323\":1,\"700\":1,\"831\":1,\"1212\":1,\"1344\":1}}],[\"响应触发前缀\",{\"1\":{\"191\":1,\"322\":1,\"699\":1,\"830\":1,\"1211\":1,\"1343\":1}}],[\"响应器会自动处理消息\",{\"1\":{\"1866\":1,\"1883\":1,\"2235\":1,\"2252\":1,\"2604\":1,\"2621\":1}}],[\"响应器组\",{\"0\":{\"104\":1,\"612\":1,\"1122\":1}}],[\"响应器的默认状态\",{\"1\":{\"93\":1,\"601\":1,\"1111\":1}}],[\"响应器的优先级\",{\"1\":{\"93\":1,\"601\":1,\"1111\":1}}],[\"响应器的优先级越小\",{\"1\":{\"89\":1,\"597\":1,\"1107\":1}}],[\"响应器的过期时间\",{\"1\":{\"93\":1,\"601\":1,\"1111\":1}}],[\"响应器将会初始化默认状态然后开始执行事件处理流程\",{\"1\":{\"92\":1,\"600\":1,\"1110\":1}}],[\"响应优先级\",{\"0\":{\"89\":1,\"597\":1,\"1107\":1},\"1\":{\"89\":1,\"242\":1,\"597\":1,\"750\":1,\"1107\":1,\"1263\":1}}],[\"响应规则的使用方法可以参考\",{\"1\":{\"602\":1,\"1112\":1}}],[\"响应规则是一个\",{\"1\":{\"423\":1,\"933\":1,\"1448\":1}}],[\"响应规则一样进行命令匹配\",{\"1\":{\"100\":1,\"608\":1,\"1118\":1}}],[\"响应规则用于匹配事件类型是否为指定类型\",{\"1\":{\"103\":1,\"611\":1,\"1121\":1}}],[\"响应规则用于匹配事件是否与机器人相关\",{\"1\":{\"102\":1,\"610\":1,\"1120\":1}}],[\"响应规则用于匹配消息是否与指定正则表达式匹配\",{\"1\":{\"101\":1,\"609\":1,\"1119\":1}}],[\"响应规则用于匹配消息纯文本部分是否包含指定字符串\",{\"1\":{\"98\":1,\"606\":1,\"1116\":1}}],[\"响应规则用于匹配消息纯文本部分是否与指定字符串\",{\"1\":{\"97\":1,\"605\":1,\"1115\":1}}],[\"响应规则用于匹配消息纯文本部分的结尾是否与指定字符串\",{\"1\":{\"96\":1,\"604\":1,\"1114\":1}}],[\"响应规则用于匹配消息纯文本部分的开头是否与指定字符串\",{\"1\":{\"95\":1,\"603\":1,\"1113\":1}}],[\"响应规则用于匹配类\",{\"1\":{\"100\":1,\"608\":1,\"1118\":1}}],[\"响应规则默认允许消息命令与参数间不加空格\",{\"1\":{\"99\":1,\"607\":1,\"1117\":1}}],[\"响应规则\",{\"0\":{\"423\":1,\"933\":1,\"1448\":1},\"1\":{\"86\":1,\"93\":1,\"594\":1,\"601\":1,\"602\":1,\"1104\":1,\"1111\":1,\"1112\":1}}],[\"消息类型工厂\",{\"1\":{\"1632\":1,\"2001\":1,\"2370\":1}}],[\"消息类型事件还应重写\",{\"1\":{\"476\":1,\"986\":1,\"1501\":1}}],[\"消息内是否存在给定消息段或给定类型的消息段\",{\"1\":{\"1606\":1,\"1975\":1,\"2344\":1}}],[\"消息内容\",{\"1\":{\"252\":1,\"253\":1,\"254\":1,\"255\":1,\"256\":1,\"257\":1,\"760\":1,\"761\":1,\"762\":1,\"763\":1,\"764\":1,\"765\":1,\"1273\":1,\"1274\":1,\"1275\":1,\"1276\":1,\"1277\":1,\"1278\":1,\"1601\":1,\"1970\":1,\"2339\":1}}],[\"消息切片\",{\"1\":{\"1605\":1,\"1974\":1,\"2343\":1}}],[\"消息格式化器\",{\"1\":{\"1602\":1,\"1971\":1,\"2340\":1}}],[\"消息格式等\",{\"1\":{\"490\":1,\"491\":1,\"1000\":1,\"1001\":1,\"1515\":1,\"1516\":1}}],[\"消息和消息段都可以使用\",{\"1\":{\"539\":1,\"1049\":1,\"1564\":1}}],[\"消息序列与消息序列相加\",{\"1\":{\"542\":1,\"1052\":1,\"1567\":1}}],[\"消息序列与消息段相加\",{\"1\":{\"542\":1,\"1052\":1,\"1567\":1}}],[\"消息序列与字符串相加\",{\"1\":{\"542\":1,\"1052\":1,\"1567\":1}}],[\"消息序列添加了一个\",{\"1\":{\"541\":1,\"1051\":1,\"1566\":1}}],[\"消息序列对列表的\",{\"1\":{\"541\":1,\"1051\":1,\"1566\":1}}],[\"消息序列对列表的索引与切片进行了增强\",{\"1\":{\"541\":1,\"1051\":1,\"1566\":1}}],[\"消息序列继承自\",{\"1\":{\"538\":1,\"1048\":1,\"1563\":1}}],[\"消息序列可以通过多种方式构造\",{\"1\":{\"533\":1,\"1043\":1,\"1558\":1}}],[\"消息序列类似于一个自然段\",{\"1\":{\"531\":1,\"1041\":1,\"1556\":1}}],[\"消息序列的使用方法与\",{\"1\":{\"530\":1,\"1040\":1,\"1555\":1}}],[\"消息序列\",{\"0\":{\"530\":1,\"1040\":1,\"1555\":1},\"1\":{\"530\":1,\"1040\":1,\"1555\":1,\"1601\":1,\"1970\":1,\"2339\":1}}],[\"消息序列是\",{\"1\":{\"528\":1,\"1038\":1,\"1553\":1}}],[\"消息对象的便捷操作\",{\"1\":{\"503\":1,\"1013\":1,\"1528\":1}}],[\"消息解析\",{\"1\":{\"490\":2,\"491\":2,\"1000\":2,\"1001\":2,\"1515\":2,\"1516\":2}}],[\"消息表示机制\",{\"1\":{\"489\":1,\"999\":1,\"1514\":1}}],[\"消息段数据\",{\"1\":{\"1621\":1,\"1990\":1,\"2359\":1}}],[\"消息段基类\",{\"1\":{\"1619\":1,\"1988\":1,\"2357\":1}}],[\"消息段不存在\",{\"1\":{\"1608\":1,\"1977\":1,\"2346\":1}}],[\"消息段或者消息段类型\",{\"1\":{\"1608\":1,\"1977\":1,\"2346\":1}}],[\"消息段或消息段类型\",{\"1\":{\"1606\":1,\"1610\":1,\"1975\":1,\"1979\":1,\"2344\":1,\"2348\":1}}],[\"消息段类型和切片\",{\"1\":{\"1605\":1,\"1974\":1,\"2343\":1}}],[\"消息段类型和索引\",{\"1\":{\"1605\":1,\"1974\":1,\"2343\":1}}],[\"消息段类型\",{\"1\":{\"1605\":1,\"1609\":1,\"1620\":1,\"1974\":1,\"1978\":1,\"1989\":1,\"2343\":1,\"2347\":1,\"2358\":1}}],[\"消息段与消息序列相加\",{\"1\":{\"542\":1,\"1052\":1,\"1567\":1}}],[\"消息段与消息段相加\",{\"1\":{\"542\":1,\"1052\":1,\"1567\":1}}],[\"消息段与字符串相加\",{\"1\":{\"542\":1,\"1052\":1,\"1567\":1}}],[\"消息段的类型是由协议适配器提供的\",{\"1\":{\"531\":1,\"1041\":1,\"1556\":1}}],[\"消息段可以被认为是构成消息序列的最小单位\",{\"1\":{\"531\":1,\"1041\":1,\"1556\":1}}],[\"消息段\",{\"0\":{\"531\":1,\"1041\":1,\"1556\":1},\"1\":{\"477\":1,\"531\":1,\"987\":1,\"1041\":1,\"1502\":1,\"1556\":1}}],[\"消息事件\",{\"1\":{\"476\":1,\"986\":1,\"1501\":1}}],[\"消息模板格式化实现类\",{\"1\":{\"1632\":1,\"2001\":1,\"2370\":1}}],[\"消息模板支持使用拓展控制符来控制消息段类型\",{\"1\":{\"543\":1,\"1053\":1,\"1568\":1}}],[\"消息模板支持使用消息段进行格式化\",{\"1\":{\"543\":1,\"1053\":1,\"1568\":1}}],[\"消息模板同样支持使用消息序列作为模板\",{\"1\":{\"543\":1,\"1053\":1,\"1568\":1}}],[\"消息模板采用\",{\"1\":{\"543\":1,\"1053\":1,\"1568\":1}}],[\"消息模板的使用方法已经在消息处理中介绍过\",{\"1\":{\"429\":1,\"939\":1,\"1454\":1}}],[\"消息模板在发送时会使用会话状态字典进行渲染\",{\"1\":{\"429\":1,\"939\":1,\"1454\":1}}],[\"消息发送者等等\",{\"1\":{\"420\":1,\"930\":1,\"1445\":1}}],[\"消息命令与参数之间的空白\",{\"1\":{\"315\":1,\"823\":1,\"1336\":1}}],[\"消息命令开头\",{\"1\":{\"314\":1,\"822\":1,\"1335\":1}}],[\"消息命令参数\",{\"1\":{\"313\":1,\"821\":1,\"1334\":1}}],[\"消息命令文本\",{\"1\":{\"312\":1,\"820\":1,\"1333\":1}}],[\"消息命令元组\",{\"1\":{\"311\":1,\"819\":1,\"1332\":1}}],[\"消息参数\",{\"1\":{\"308\":1,\"816\":1,\"1329\":1}}],[\"消息的代码\",{\"1\":{\"125\":1,\"633\":1,\"1143\":1}}],[\"消息传递\",{\"1\":{\"125\":1,\"633\":1,\"1143\":1}}],[\"消息\",{\"1\":{\"86\":1,\"250\":1,\"257\":1,\"262\":1,\"263\":1,\"524\":1,\"594\":1,\"758\":1,\"765\":1,\"770\":1,\"771\":1,\"1034\":1,\"1104\":1,\"1271\":1,\"1278\":1,\"1283\":1,\"1284\":1,\"1549\":1}}],[\"消息中包含\",{\"1\":{\"50\":1,\"558\":1,\"1068\":1}}],[\"才会触发该响应器\",{\"1\":{\"86\":1,\"594\":1,\"1104\":1}}],[\"只需要数据库模式与模型定义一致即可\",{\"1\":{\"2679\":1,\"2694\":1,\"2709\":1}}],[\"只需要执行以下命令\",{\"1\":{\"1921\":1,\"1922\":1,\"2290\":1,\"2291\":1,\"2659\":1,\"2660\":1}}],[\"只需要掌握部分功能即可\",{\"1\":{\"1919\":1,\"2288\":1,\"2657\":1}}],[\"只需要继承并实现\",{\"1\":{\"82\":1,\"590\":1,\"1100\":1}}],[\"只要有一个\",{\"1\":{\"328\":1,\"836\":1,\"1351\":1}}],[\"只有当希望\",{\"1\":{\"1583\":1,\"1952\":1,\"2333\":1}}],[\"只有当所有\",{\"1\":{\"346\":1,\"425\":1,\"854\":1,\"935\":1,\"1369\":1,\"1450\":1}}],[\"只有消息序列中的文本类型消息段才能被格式化\",{\"1\":{\"543\":1,\"1053\":1,\"1568\":1}}],[\"只有一个类型为\",{\"1\":{\"471\":2,\"981\":2,\"1496\":2}}],[\"只有在开启\",{\"1\":{\"455\":1,\"965\":1,\"1480\":1}}],[\"只有在接收到的事件类型与该响应器的类型相同时\",{\"1\":{\"86\":1,\"594\":1,\"1104\":1}}],[\"只有插件开发者才需要关心这些信息\",{\"1\":{\"110\":1,\"618\":1,\"1128\":1}}],[\"类作为依赖\",{\"1\":{\"2681\":1,\"2696\":1,\"2711\":1}}],[\"类直接构建模板\",{\"1\":{\"543\":1,\"1053\":1,\"1568\":1}}],[\"类可以直接实例化\",{\"1\":{\"534\":1,\"1044\":1,\"1559\":1}}],[\"类似于\",{\"1\":{\"1906\":1,\"2275\":1,\"2644\":1}}],[\"类似于函数中的\",{\"1\":{\"1891\":3,\"2260\":3,\"2629\":3}}],[\"类似的方式来处理消息序列\",{\"1\":{\"532\":1,\"1042\":1,\"1557\":1}}],[\"类似\",{\"1\":{\"492\":1,\"496\":1,\"1002\":1,\"1006\":1,\"1517\":1,\"1521\":1,\"1887\":1,\"2256\":1,\"2625\":1}}],[\"类属性装饰器\",{\"1\":{\"412\":1,\"922\":1,\"1437\":1}}],[\"类中\",{\"1\":{\"165\":1,\"673\":1,\"1183\":1}}],[\"类来创建一个新的事件响应器\",{\"1\":{\"84\":1,\"592\":1,\"1102\":1}}],[\"类型标注决定依赖注入的数据结构\",{\"1\":{\"2689\":1,\"2704\":1,\"2719\":1}}],[\"类型标注\",{\"0\":{\"2689\":1,\"2704\":1,\"2719\":1}}],[\"类型头\",{\"1\":{\"1887\":1,\"2256\":1,\"2625\":1}}],[\"类型通常为\",{\"1\":{\"1580\":1,\"1949\":1,\"2330\":1}}],[\"类型切片\",{\"1\":{\"541\":1,\"1051\":1,\"1566\":1}}],[\"类型索引\",{\"1\":{\"541\":1,\"1051\":1,\"1566\":1}}],[\"类型过滤\",{\"1\":{\"541\":1,\"1051\":1,\"1566\":1}}],[\"类型检查与推导\",{\"1\":{\"499\":1,\"1009\":1,\"1524\":1}}],[\"类型本身\",{\"1\":{\"477\":2,\"987\":2,\"1502\":2}}],[\"类型特殊标签\",{\"1\":{\"398\":1,\"906\":1,\"1421\":1}}],[\"类型包含的所有值\",{\"1\":{\"377\":1,\"885\":1,\"1400\":1}}],[\"类型事件\",{\"1\":{\"340\":1,\"341\":1,\"342\":1,\"343\":1,\"848\":1,\"849\":1,\"850\":1,\"851\":1,\"1363\":1,\"1364\":1,\"1365\":1,\"1366\":1}}],[\"类型参数\",{\"1\":{\"307\":1,\"815\":1,\"1328\":1}}],[\"类型校验\",{\"1\":{\"297\":1,\"805\":1,\"1323\":1}}],[\"类型等级或等级名称\",{\"1\":{\"169\":1,\"677\":1,\"1187\":1}}],[\"类型的值\",{\"1\":{\"1890\":2,\"2259\":2,\"2628\":2}}],[\"类型的新事件响应器\",{\"1\":{\"525\":1,\"1035\":1,\"1550\":1}}],[\"类型的数据\",{\"1\":{\"474\":2,\"984\":2,\"1499\":2}}],[\"类型的依赖函数\",{\"1\":{\"424\":1,\"934\":1,\"1449\":1}}],[\"类型的权限检查函数\",{\"1\":{\"329\":1,\"331\":1,\"332\":1,\"837\":1,\"839\":1,\"840\":1,\"1352\":1,\"1357\":1,\"1358\":1}}],[\"类型的事件\",{\"1\":{\"139\":1,\"647\":1,\"1157\":1}}],[\"类型的事件响应器都会阻断事件传递\",{\"1\":{\"90\":1,\"598\":1,\"1108\":1}}],[\"类型的\",{\"1\":{\"124\":1,\"632\":1,\"1142\":1}}],[\"类型为\",{\"1\":{\"120\":4,\"121\":3,\"628\":4,\"629\":3,\"1138\":4,\"1139\":3,\"1605\":2,\"1974\":2,\"2343\":2}}],[\"类型或者具体的字符串\",{\"1\":{\"99\":1,\"607\":1,\"1117\":1}}],[\"类型\",{\"1\":{\"57\":1,\"58\":1,\"60\":1,\"61\":1,\"62\":1,\"63\":1,\"64\":1,\"65\":1,\"66\":1,\"67\":1,\"68\":1,\"69\":1,\"70\":1,\"72\":1,\"73\":1,\"74\":1,\"75\":1,\"76\":1,\"77\":1,\"78\":1,\"79\":1,\"80\":1,\"142\":1,\"145\":1,\"147\":1,\"149\":1,\"150\":1,\"151\":1,\"164\":1,\"166\":1,\"167\":1,\"168\":1,\"169\":1,\"170\":1,\"171\":1,\"172\":1,\"173\":1,\"174\":1,\"175\":1,\"177\":1,\"178\":1,\"179\":1,\"180\":1,\"181\":1,\"182\":1,\"183\":1,\"184\":1,\"185\":1,\"186\":1,\"187\":1,\"188\":1,\"189\":1,\"190\":1,\"191\":1,\"192\":1,\"193\":1,\"194\":1,\"220\":1,\"221\":1,\"227\":1,\"231\":1,\"234\":1,\"235\":1,\"236\":1,\"237\":1,\"238\":1,\"239\":1,\"240\":1,\"241\":1,\"273\":1,\"286\":1,\"334\":1,\"340\":1,\"341\":1,\"342\":1,\"343\":1,\"345\":1,\"348\":1,\"376\":1,\"378\":1,\"379\":1,\"382\":2,\"383\":1,\"384\":1,\"385\":1,\"386\":1,\"387\":2,\"388\":2,\"389\":2,\"390\":2,\"391\":1,\"392\":1,\"393\":1,\"394\":1,\"395\":1,\"396\":1,\"401\":3,\"454\":1,\"455\":1,\"456\":1,\"565\":1,\"566\":1,\"568\":1,\"569\":1,\"570\":1,\"571\":1,\"572\":1,\"573\":1,\"574\":1,\"575\":1,\"576\":1,\"577\":1,\"578\":1,\"580\":1,\"581\":1,\"582\":1,\"583\":1,\"584\":1,\"585\":1,\"586\":1,\"587\":1,\"588\":1,\"650\":1,\"653\":1,\"655\":1,\"657\":1,\"658\":1,\"659\":1,\"672\":1,\"674\":1,\"675\":1,\"676\":1,\"677\":1,\"678\":1,\"679\":1,\"680\":1,\"681\":1,\"682\":1,\"683\":1,\"685\":1,\"686\":1,\"687\":1,\"688\":1,\"689\":1,\"690\":1,\"691\":1,\"692\":1,\"693\":1,\"694\":1,\"695\":1,\"696\":1,\"697\":1,\"698\":1,\"699\":1,\"700\":1,\"701\":1,\"702\":1,\"728\":1,\"729\":1,\"735\":1,\"739\":1,\"742\":1,\"743\":1,\"744\":1,\"745\":1,\"746\":1,\"747\":1,\"748\":1,\"749\":1,\"781\":1,\"794\":1,\"842\":1,\"848\":1,\"849\":1,\"850\":1,\"851\":1,\"853\":1,\"856\":1,\"884\":1,\"886\":1,\"887\":1,\"890\":2,\"891\":1,\"892\":1,\"893\":1,\"894\":1,\"895\":2,\"896\":2,\"897\":2,\"898\":2,\"899\":1,\"900\":1,\"901\":1,\"902\":1,\"903\":1,\"904\":1,\"909\":3,\"964\":1,\"965\":1,\"966\":1,\"1075\":1,\"1076\":1,\"1078\":1,\"1079\":1,\"1080\":1,\"1081\":1,\"1082\":1,\"1083\":1,\"1084\":1,\"1085\":1,\"1086\":1,\"1087\":1,\"1088\":1,\"1090\":1,\"1091\":1,\"1092\":1,\"1093\":1,\"1094\":1,\"1095\":1,\"1096\":1,\"1097\":1,\"1098\":1,\"1160\":1,\"1163\":1,\"1165\":1,\"1167\":1,\"1168\":1,\"1169\":1,\"1182\":1,\"1184\":1,\"1185\":1,\"1186\":1,\"1187\":1,\"1188\":1,\"1189\":1,\"1190\":1,\"1191\":1,\"1192\":1,\"1193\":1,\"1195\":1,\"1196\":1,\"1197\":1,\"1198\":1,\"1199\":1,\"1200\":1,\"1201\":1,\"1202\":1,\"1203\":1,\"1204\":1,\"1205\":1,\"1206\":1,\"1207\":1,\"1208\":1,\"1209\":1,\"1210\":1,\"1211\":1,\"1212\":1,\"1213\":1,\"1214\":1,\"1240\":1,\"1241\":1,\"1247\":1,\"1251\":1,\"1253\":1,\"1255\":1,\"1256\":1,\"1257\":1,\"1258\":1,\"1259\":1,\"1260\":1,\"1261\":1,\"1262\":1,\"1306\":1,\"1354\":1,\"1363\":1,\"1364\":1,\"1365\":1,\"1366\":1,\"1368\":1,\"1371\":1,\"1399\":1,\"1401\":1,\"1402\":1,\"1405\":2,\"1406\":1,\"1407\":1,\"1408\":1,\"1409\":1,\"1410\":2,\"1411\":2,\"1412\":2,\"1413\":2,\"1414\":1,\"1415\":1,\"1416\":1,\"1417\":1,\"1418\":1,\"1419\":1,\"1424\":3,\"1479\":1,\"1480\":1,\"1481\":1,\"1571\":1,\"1572\":1,\"1573\":1,\"1574\":1,\"1590\":1,\"1591\":1,\"1593\":1,\"1620\":1,\"1621\":1,\"1671\":1,\"1672\":1,\"1673\":1,\"1674\":1,\"1675\":1,\"1676\":1,\"1677\":1,\"1678\":1,\"1679\":1,\"1680\":1,\"1682\":1,\"1683\":1,\"1684\":1,\"1685\":1,\"1708\":1,\"1710\":1,\"1711\":1,\"1712\":1,\"1714\":1,\"1715\":1,\"1731\":1,\"1732\":1,\"1736\":1,\"1748\":1,\"1749\":1,\"1760\":1,\"1761\":1,\"1766\":1,\"1767\":1,\"1768\":1,\"1769\":1,\"1770\":1,\"1771\":1,\"1773\":1,\"1774\":1,\"1775\":1,\"1776\":1,\"1820\":1,\"1821\":1,\"1822\":1,\"1823\":1,\"1833\":1,\"1834\":1,\"1835\":1,\"1836\":1,\"1837\":1,\"1838\":1,\"1839\":1,\"1840\":1,\"1843\":1,\"1844\":1,\"1845\":1,\"1846\":1,\"1847\":1,\"1848\":1,\"1849\":1,\"1850\":1,\"1890\":3,\"1909\":1,\"1910\":1,\"1911\":1,\"1912\":1,\"1913\":1,\"1914\":1,\"1915\":1,\"1916\":1,\"1917\":1,\"1918\":1,\"1940\":1,\"1941\":1,\"1942\":1,\"1943\":1,\"1959\":1,\"1960\":1,\"1962\":1,\"1989\":1,\"1990\":1,\"2040\":1,\"2041\":1,\"2042\":1,\"2043\":1,\"2044\":1,\"2045\":1,\"2046\":1,\"2047\":1,\"2048\":1,\"2049\":1,\"2051\":1,\"2052\":1,\"2053\":1,\"2054\":1,\"2077\":1,\"2079\":1,\"2080\":1,\"2081\":1,\"2083\":1,\"2084\":1,\"2100\":1,\"2101\":1,\"2105\":1,\"2117\":1,\"2118\":1,\"2129\":1,\"2130\":1,\"2135\":1,\"2136\":1,\"2137\":1,\"2138\":1,\"2139\":1,\"2140\":1,\"2142\":1,\"2143\":1,\"2144\":1,\"2145\":1,\"2189\":1,\"2190\":1,\"2191\":1,\"2192\":1,\"2202\":1,\"2203\":1,\"2204\":1,\"2205\":1,\"2206\":1,\"2207\":1,\"2208\":1,\"2209\":1,\"2212\":1,\"2213\":1,\"2214\":1,\"2215\":1,\"2216\":1,\"2217\":1,\"2218\":1,\"2219\":1,\"2259\":3,\"2278\":1,\"2279\":1,\"2280\":1,\"2281\":1,\"2282\":1,\"2283\":1,\"2284\":1,\"2285\":1,\"2286\":1,\"2287\":1,\"2309\":1,\"2310\":1,\"2312\":1,\"2321\":1,\"2322\":1,\"2323\":1,\"2324\":1,\"2358\":1,\"2359\":1,\"2409\":1,\"2410\":1,\"2411\":1,\"2412\":1,\"2413\":1,\"2414\":1,\"2415\":1,\"2416\":1,\"2417\":1,\"2418\":1,\"2420\":1,\"2421\":1,\"2422\":1,\"2423\":1,\"2446\":1,\"2447\":1,\"2458\":1,\"2459\":1,\"2460\":1,\"2462\":1,\"2463\":1,\"2469\":1,\"2477\":1,\"2480\":1,\"2483\":1,\"2498\":1,\"2499\":1,\"2504\":1,\"2505\":1,\"2506\":1,\"2507\":1,\"2508\":1,\"2509\":1,\"2511\":1,\"2512\":1,\"2513\":1,\"2514\":1,\"2558\":1,\"2559\":1,\"2560\":1,\"2561\":1,\"2571\":1,\"2572\":1,\"2573\":1,\"2574\":1,\"2575\":1,\"2576\":1,\"2577\":1,\"2578\":1,\"2581\":1,\"2582\":1,\"2583\":1,\"2584\":1,\"2585\":1,\"2586\":1,\"2587\":1,\"2588\":1,\"2628\":3,\"2647\":1,\"2648\":1,\"2649\":1,\"2650\":1,\"2651\":1,\"2652\":1,\"2653\":1,\"2654\":1,\"2655\":1,\"2656\":1}}],[\"与之关联也不会被替换\",{\"1\":{\"1890\":1,\"2259\":1,\"2628\":1}}],[\"与之关联\",{\"1\":{\"1890\":1,\"2259\":1,\"2628\":1}}],[\"与命令名\",{\"1\":{\"1887\":1,\"2256\":1,\"2625\":1}}],[\"与普通的\",{\"1\":{\"1866\":1,\"1883\":1,\"2235\":1,\"2252\":1,\"2604\":1,\"2621\":1}}],[\"与平台建立连接和进行交互\",{\"1\":{\"469\":1,\"979\":1,\"1494\":1}}],[\"与平台交互\",{\"0\":{\"469\":1,\"979\":1,\"1494\":1}}],[\"与\",{\"0\":{\"1891\":1,\"2260\":1,\"2629\":1},\"1\":{\"141\":1,\"228\":1,\"242\":1,\"426\":1,\"490\":1,\"503\":1,\"649\":1,\"736\":1,\"750\":1,\"936\":1,\"1000\":1,\"1013\":1,\"1159\":1,\"1248\":1,\"1263\":1,\"1451\":1,\"1515\":1,\"1528\":1,\"1607\":1,\"1608\":1,\"1887\":1,\"1890\":2,\"1891\":2,\"1893\":2,\"1903\":1,\"1976\":1,\"1977\":1,\"2256\":1,\"2259\":2,\"2260\":2,\"2262\":2,\"2272\":1,\"2345\":1,\"2346\":1,\"2625\":1,\"2628\":2,\"2629\":2,\"2631\":2,\"2641\":1}}],[\"与机器人用户进行的会话都是通过消息事件进行的\",{\"1\":{\"139\":1,\"647\":1,\"1157\":1}}],[\"与插件索引名称无关\",{\"1\":{\"110\":1,\"618\":1,\"1128\":1}}],[\"与第三方响应规则拓展\",{\"1\":{\"84\":1,\"592\":1,\"1102\":1}}],[\"与群聊\",{\"1\":{\"47\":1,\"555\":1,\"1065\":1}}],[\"对了\",{\"1\":{\"2679\":1,\"2694\":1,\"2709\":1}}],[\"对我们的代码做的事情那样\",{\"1\":{\"2679\":1,\"2694\":1,\"2709\":1}}],[\"对头\",{\"1\":{\"1887\":1,\"2256\":1,\"2625\":1}}],[\"对接\",{\"1\":{\"503\":1,\"1013\":1,\"1528\":1}}],[\"对文档整体视觉体验进行重新设计\",{\"1\":{\"501\":1,\"1011\":1,\"1526\":1}}],[\"对文档的优雅性与美观性有追求更佳\",{\"1\":{\"489\":1,\"999\":1,\"1514\":1}}],[\"对事件进行某些预处理\",{\"1\":{\"475\":1,\"985\":1,\"1500\":1}}],[\"对事件进行处理\",{\"1\":{\"473\":2,\"475\":1,\"983\":2,\"985\":1,\"1498\":2,\"1500\":1}}],[\"对事件的处理行为\",{\"1\":{\"81\":1,\"589\":1,\"1099\":1}}],[\"对不同类型的事件需要做出不同的处理\",{\"1\":{\"420\":1,\"930\":1,\"1445\":1}}],[\"对应\",{\"1\":{\"222\":1,\"730\":1,\"1242\":1}}],[\"对应的\",{\"1\":{\"220\":1,\"221\":1,\"474\":1,\"728\":1,\"729\":1,\"984\":1,\"1240\":1,\"1241\":1,\"1499\":1}}],[\"对当前\",{\"1\":{\"209\":1,\"717\":1,\"1229\":1}}],[\"对于用户而言\",{\"1\":{\"1919\":1,\"2288\":1,\"2657\":1}}],[\"对于命令\",{\"1\":{\"1893\":1,\"2262\":1,\"2631\":1}}],[\"对于参数的注释也可以标记在\",{\"1\":{\"1889\":1,\"2258\":1,\"2627\":1}}],[\"对于无前缀的类型头\",{\"1\":{\"1887\":1,\"2256\":1,\"2625\":1}}],[\"对于未有一定开发经验的用户\",{\"1\":{\"497\":1,\"1007\":1,\"1522\":1}}],[\"对于嵌套插件\",{\"1\":{\"433\":1,\"943\":1,\"1458\":1}}],[\"对于\",{\"1\":{\"120\":1,\"121\":1,\"628\":1,\"629\":1,\"1138\":1,\"1139\":1}}],[\"对于在项目目录下的插件\",{\"1\":{\"116\":1,\"624\":1,\"1134\":1}}],[\"对象进行清理\",{\"1\":{\"1934\":1,\"2303\":1,\"2672\":1}}],[\"对象进行合并\",{\"1\":{\"426\":1,\"936\":1,\"1451\":1}}],[\"对象是否创建等途径来验证机器人是否正确运行\",{\"1\":{\"1934\":1,\"2303\":1,\"2672\":1}}],[\"对象作为消息模板并输出消息对象\",{\"1\":{\"1602\":1,\"1971\":1,\"2340\":1}}],[\"对象之间可以直接相加\",{\"1\":{\"542\":1,\"1052\":1,\"1567\":1}}],[\"对象支持\",{\"1\":{\"536\":1,\"1046\":1,\"1561\":1}}],[\"对象来加载插件\",{\"1\":{\"515\":1,\"1025\":1,\"1540\":1}}],[\"对象来组合多个\",{\"1\":{\"426\":1,\"936\":1,\"1451\":1}}],[\"对象的方法来记录日志\",{\"1\":{\"417\":1,\"927\":1,\"1442\":1}}],[\"对象里\",{\"1\":{\"224\":1,\"732\":1,\"1244\":1}}],[\"对象为值的字典\",{\"1\":{\"223\":1,\"731\":1,\"1243\":1}}],[\"对象不是\",{\"1\":{\"220\":1,\"221\":1,\"728\":1,\"729\":1,\"1240\":1,\"1241\":1}}],[\"对象尚未初始化\",{\"1\":{\"217\":1,\"218\":1,\"219\":1,\"220\":1,\"221\":1,\"222\":1,\"223\":1,\"725\":1,\"726\":1,\"727\":1,\"728\":1,\"729\":1,\"730\":1,\"731\":1,\"1237\":1,\"1238\":1,\"1239\":1,\"1240\":1,\"1241\":1,\"1242\":1,\"1243\":1}}],[\"对象调用平台接口后运行\",{\"1\":{\"137\":1,\"645\":1,\"1155\":1}}],[\"对象调用平台接口并返回指定的结果\",{\"1\":{\"136\":1,\"644\":1,\"1154\":1}}],[\"对象调用平台接口时运行\",{\"1\":{\"136\":1,\"644\":1,\"1154\":1}}],[\"对象至\",{\"1\":{\"129\":1,\"637\":1,\"1147\":1}}],[\"对象中存储了插件系统所需要的一系列信息\",{\"1\":{\"110\":1,\"618\":1,\"1128\":1}}],[\"对象或者\",{\"1\":{\"93\":2,\"601\":2,\"1111\":2}}],[\"对象都具有一个\",{\"1\":{\"40\":1,\"548\":1,\"1058\":1}}],[\"对象可以通过\",{\"1\":{\"40\":1,\"535\":1,\"548\":1,\"1045\":1,\"1058\":1,\"1560\":1}}],[\"对象\",{\"0\":{\"40\":1,\"548\":1,\"1058\":1},\"1\":{\"40\":2,\"87\":1,\"88\":1,\"91\":1,\"92\":1,\"129\":1,\"130\":1,\"132\":1,\"133\":1,\"134\":1,\"135\":1,\"217\":1,\"218\":2,\"220\":2,\"221\":2,\"222\":2,\"223\":1,\"224\":1,\"225\":1,\"244\":1,\"245\":1,\"252\":1,\"253\":1,\"254\":1,\"255\":1,\"256\":1,\"257\":1,\"292\":2,\"293\":2,\"331\":1,\"335\":2,\"349\":2,\"365\":1,\"383\":1,\"384\":1,\"387\":3,\"388\":3,\"389\":4,\"390\":4,\"391\":3,\"392\":2,\"394\":4,\"395\":4,\"417\":1,\"423\":1,\"427\":1,\"474\":3,\"476\":1,\"528\":1,\"542\":1,\"548\":2,\"595\":1,\"596\":1,\"599\":1,\"600\":1,\"637\":1,\"638\":1,\"640\":1,\"641\":1,\"642\":1,\"643\":1,\"725\":1,\"726\":2,\"728\":2,\"729\":2,\"730\":2,\"731\":1,\"732\":1,\"733\":1,\"752\":1,\"753\":1,\"760\":1,\"761\":1,\"762\":1,\"763\":1,\"764\":1,\"765\":1,\"800\":2,\"801\":2,\"839\":1,\"843\":2,\"857\":2,\"873\":1,\"891\":1,\"892\":1,\"895\":3,\"896\":3,\"897\":4,\"898\":4,\"899\":3,\"900\":2,\"902\":4,\"903\":4,\"927\":1,\"933\":1,\"937\":1,\"984\":3,\"986\":1,\"1038\":1,\"1052\":1,\"1058\":2,\"1105\":1,\"1106\":1,\"1109\":1,\"1110\":1,\"1147\":1,\"1148\":1,\"1150\":1,\"1151\":1,\"1152\":1,\"1153\":1,\"1237\":1,\"1238\":2,\"1240\":2,\"1241\":2,\"1242\":2,\"1243\":1,\"1244\":1,\"1245\":1,\"1265\":1,\"1266\":1,\"1273\":1,\"1274\":1,\"1275\":1,\"1276\":1,\"1277\":1,\"1278\":1,\"1312\":2,\"1313\":2,\"1355\":2,\"1357\":1,\"1372\":2,\"1388\":1,\"1406\":1,\"1407\":1,\"1410\":3,\"1411\":3,\"1412\":4,\"1413\":4,\"1414\":3,\"1415\":2,\"1417\":4,\"1418\":4,\"1442\":1,\"1448\":1,\"1452\":1,\"1499\":3,\"1501\":1,\"1553\":1,\"1567\":1,\"1577\":1,\"1578\":1,\"1641\":1,\"1683\":1,\"1684\":1,\"1709\":2,\"1719\":1,\"1720\":1,\"1731\":1,\"1732\":1,\"1774\":1,\"1775\":1,\"1866\":1,\"1871\":1,\"1883\":1,\"1890\":1,\"1946\":1,\"1947\":1,\"2010\":1,\"2052\":1,\"2053\":1,\"2078\":2,\"2088\":1,\"2089\":1,\"2100\":1,\"2101\":1,\"2143\":1,\"2144\":1,\"2235\":1,\"2240\":1,\"2252\":1,\"2259\":1,\"2327\":1,\"2328\":1,\"2379\":1,\"2421\":1,\"2422\":1,\"2446\":1,\"2447\":1,\"2457\":2,\"2467\":1,\"2468\":1,\"2512\":1,\"2513\":1,\"2604\":1,\"2609\":1,\"2621\":1,\"2628\":1}}],[\"对象并注册到\",{\"1\":{\"37\":1,\"468\":1,\"545\":1,\"978\":1,\"1055\":1,\"1493\":1}}],[\"295\",{\"1\":{\"495\":1,\"1005\":1,\"1520\":1}}],[\"2024\",{\"0\":{\"500\":1,\"1010\":1,\"1525\":1},\"1\":{\"500\":1,\"1010\":1,\"1525\":1}}],[\"2023\",{\"0\":{\"496\":1,\"1006\":1,\"1521\":1},\"1\":{\"496\":1,\"1006\":1,\"1521\":1}}],[\"2022\",{\"0\":{\"492\":1,\"1002\":1,\"1517\":1},\"1\":{\"492\":1,\"1002\":1,\"1517\":1}}],[\"2021\",{\"0\":{\"480\":1,\"990\":1,\"1505\":1},\"1\":{\"480\":1,\"990\":1,\"1505\":1}}],[\"20\",{\"1\":{\"455\":1,\"965\":1,\"1480\":1}}],[\"2006\",{\"1\":{\"2679\":1,\"2694\":1,\"2709\":1}}],[\"200\",{\"1\":{\"120\":2,\"628\":2,\"1138\":2,\"1934\":1,\"2303\":1,\"2672\":1}}],[\"2\",{\"1\":{\"78\":1,\"218\":1,\"259\":1,\"261\":1,\"262\":1,\"265\":1,\"278\":1,\"319\":1,\"363\":1,\"408\":1,\"447\":1,\"452\":4,\"485\":3,\"532\":1,\"541\":3,\"586\":1,\"726\":1,\"767\":1,\"769\":1,\"770\":1,\"773\":1,\"786\":1,\"827\":1,\"871\":1,\"916\":1,\"957\":1,\"962\":4,\"995\":3,\"1042\":1,\"1051\":3,\"1096\":1,\"1238\":1,\"1280\":1,\"1282\":1,\"1283\":1,\"1286\":1,\"1298\":1,\"1340\":1,\"1386\":1,\"1431\":1,\"1472\":1,\"1477\":4,\"1510\":3,\"1557\":1,\"1566\":3,\"1605\":1,\"1745\":1,\"1750\":1,\"1887\":1,\"1929\":1,\"1974\":1,\"2114\":1,\"2119\":1,\"2256\":1,\"2298\":1,\"2343\":1,\"2475\":1,\"2495\":1,\"2625\":1,\"2667\":1}}],[\"拥有以下条目\",{\"1\":{\"1896\":1,\"2265\":1,\"2634\":1}}],[\"拥有一个\",{\"1\":{\"328\":1,\"836\":1,\"1351\":1}}],[\"拥有与\",{\"1\":{\"70\":1,\"578\":1,\"1088\":1}}],[\"拥有大量的开发者为其开发插件\",{\"1\":{\"0\":1,\"12\":1,\"24\":1}}],[\"gcc\",{\"1\":{\"1903\":2,\"2272\":2,\"2641\":2}}],[\"gt\",{\"1\":{\"1887\":2,\"2256\":2,\"2625\":2}}],[\"graphql\",{\"1\":{\"502\":1,\"1012\":1,\"1527\":1}}],[\"groups=\",{\"1\":{\"1886\":1,\"2255\":1,\"2624\":1}}],[\"groups\",{\"1\":{\"319\":2,\"827\":2,\"1340\":2}}],[\"group2\",{\"1\":{\"319\":2,\"827\":2,\"1340\":2}}],[\"group1\",{\"1\":{\"319\":2,\"827\":2,\"1340\":2}}],[\"group=0\",{\"1\":{\"319\":1,\"827\":1}}],[\"group\",{\"1\":{\"105\":7,\"106\":3,\"319\":3,\"320\":1,\"321\":1,\"367\":2,\"422\":3,\"613\":7,\"614\":3,\"801\":1,\"827\":3,\"828\":1,\"829\":1,\"875\":2,\"918\":1,\"932\":3,\"1123\":7,\"1124\":3,\"1313\":1,\"1340\":4,\"1341\":1,\"1342\":1,\"1390\":2,\"1433\":1,\"1447\":3}}],[\"groupmessageevent\",{\"1\":{\"103\":2,\"422\":2,\"611\":2,\"932\":2,\"1121\":2,\"1447\":2}}],[\"gsoc\",{\"1\":{\"492\":1,\"496\":1,\"1002\":1,\"1006\":1,\"1517\":1,\"1521\":1}}],[\"google\",{\"1\":{\"492\":1,\"496\":1,\"1002\":1,\"1006\":1,\"1517\":1,\"1521\":1}}],[\"go\",{\"1\":{\"482\":1,\"490\":1,\"491\":2,\"992\":1,\"1000\":1,\"1001\":2,\"1507\":1,\"1515\":1,\"1516\":2}}],[\"got\",{\"1\":{\"255\":1,\"256\":1,\"262\":1,\"263\":1,\"298\":1,\"417\":1,\"421\":2,\"429\":2,\"763\":1,\"764\":1,\"770\":1,\"771\":1,\"806\":1,\"927\":1,\"931\":2,\"939\":2,\"1276\":1,\"1277\":1,\"1283\":1,\"1284\":1,\"1316\":1,\"1442\":1,\"1446\":2,\"1454\":2,\"2680\":1,\"2695\":1,\"2710\":1}}],[\"git\",{\"1\":{\"482\":1,\"483\":1,\"485\":1,\"486\":1,\"487\":1,\"489\":1,\"502\":2,\"992\":1,\"993\":1,\"995\":1,\"996\":1,\"997\":1,\"999\":1,\"1012\":2,\"1507\":1,\"1508\":1,\"1510\":1,\"1511\":1,\"1512\":1,\"1514\":1,\"1527\":2,\"2679\":1,\"2694\":1,\"2709\":1}}],[\"github\",{\"1\":{\"457\":1,\"483\":2,\"493\":2,\"494\":1,\"495\":3,\"497\":1,\"498\":1,\"499\":1,\"501\":1,\"502\":8,\"503\":1,\"967\":1,\"993\":2,\"1003\":2,\"1004\":1,\"1005\":3,\"1007\":1,\"1008\":1,\"1009\":1,\"1011\":1,\"1012\":8,\"1013\":1,\"1482\":1,\"1508\":2,\"1518\":2,\"1519\":1,\"1520\":3,\"1522\":1,\"1523\":1,\"1524\":1,\"1526\":1,\"1527\":8,\"1528\":1,\"2690\":2,\"2705\":2,\"2720\":2}}],[\"given\",{\"1\":{\"152\":1,\"159\":1,\"160\":1,\"660\":1,\"667\":1,\"668\":1,\"1170\":1,\"1177\":1,\"1178\":1}}],[\"g>\",{\"1\":{\"418\":2,\"928\":2,\"1443\":2}}],[\"generated\",{\"1\":{\"2679\":5,\"2694\":5,\"2709\":5}}],[\"generator\",{\"1\":{\"161\":1,\"669\":1,\"918\":1,\"1179\":1,\"1433\":1}}],[\"gen\",{\"1\":{\"297\":3,\"805\":3,\"1323\":3}}],[\"getattr\",{\"1\":{\"1632\":1,\"2001\":1,\"2370\":1}}],[\"get\",{\"1\":{\"38\":1,\"39\":5,\"40\":5,\"42\":1,\"43\":1,\"44\":1,\"45\":1,\"46\":1,\"47\":1,\"48\":1,\"49\":1,\"55\":3,\"64\":1,\"72\":1,\"111\":5,\"118\":2,\"120\":4,\"121\":2,\"123\":3,\"124\":3,\"127\":2,\"128\":2,\"129\":2,\"130\":2,\"153\":1,\"155\":1,\"156\":1,\"157\":1,\"209\":1,\"216\":7,\"217\":1,\"218\":1,\"219\":1,\"220\":1,\"221\":1,\"222\":4,\"223\":1,\"242\":1,\"421\":1,\"424\":1,\"425\":1,\"426\":1,\"429\":1,\"433\":7,\"468\":3,\"470\":4,\"471\":3,\"474\":2,\"476\":14,\"477\":2,\"490\":1,\"491\":1,\"507\":1,\"532\":1,\"541\":2,\"546\":1,\"547\":5,\"548\":5,\"550\":1,\"551\":1,\"552\":1,\"553\":1,\"554\":1,\"555\":1,\"556\":1,\"557\":1,\"563\":3,\"572\":1,\"580\":1,\"619\":5,\"626\":2,\"628\":4,\"629\":2,\"631\":3,\"632\":3,\"635\":2,\"636\":2,\"637\":2,\"638\":2,\"661\":1,\"663\":1,\"664\":1,\"665\":1,\"717\":1,\"724\":7,\"725\":1,\"726\":1,\"727\":1,\"728\":1,\"729\":1,\"730\":4,\"731\":1,\"750\":1,\"931\":1,\"934\":2,\"935\":1,\"936\":2,\"939\":1,\"943\":7,\"978\":3,\"980\":4,\"981\":3,\"984\":2,\"986\":14,\"987\":2,\"1000\":1,\"1001\":1,\"1017\":1,\"1042\":1,\"1051\":2,\"1056\":1,\"1057\":5,\"1058\":5,\"1060\":1,\"1061\":1,\"1062\":1,\"1063\":1,\"1064\":1,\"1065\":1,\"1066\":1,\"1067\":1,\"1073\":3,\"1082\":1,\"1090\":1,\"1129\":5,\"1136\":2,\"1138\":4,\"1139\":2,\"1141\":3,\"1142\":3,\"1145\":2,\"1146\":2,\"1147\":2,\"1148\":2,\"1171\":1,\"1173\":1,\"1174\":1,\"1175\":1,\"1229\":1,\"1236\":7,\"1237\":1,\"1238\":1,\"1239\":1,\"1240\":1,\"1241\":1,\"1242\":4,\"1243\":1,\"1263\":1,\"1446\":1,\"1449\":2,\"1450\":1,\"1451\":2,\"1454\":1,\"1458\":7,\"1493\":3,\"1495\":4,\"1496\":3,\"1499\":2,\"1501\":14,\"1502\":2,\"1515\":1,\"1516\":1,\"1532\":1,\"1557\":1,\"1566\":2,\"1587\":1,\"1853\":1,\"1854\":1,\"1934\":6,\"1935\":3,\"1956\":1,\"2222\":1,\"2223\":1,\"2303\":6,\"2304\":3,\"2337\":1,\"2591\":1,\"2592\":1,\"2672\":6,\"2673\":3,\"2680\":13,\"2684\":4,\"2685\":4,\"2687\":3,\"2688\":2,\"2695\":13,\"2699\":4,\"2700\":4,\"2702\":3,\"2703\":2,\"2710\":13,\"2714\":4,\"2715\":4,\"2717\":3,\"2718\":2}}],[\"global\",{\"0\":{\"1914\":1,\"2283\":1,\"2652\":1},\"1\":{\"1890\":3,\"2259\":3,\"2628\":3}}],[\"globalns\",{\"1\":{\"380\":1,\"888\":1,\"1403\":1,\"1649\":1,\"2018\":1,\"2387\":1}}],[\"glob\",{\"1\":{\"67\":1,\"68\":1,\"75\":1,\"76\":1,\"575\":1,\"576\":1,\"583\":1,\"584\":1,\"1085\":1,\"1086\":1,\"1093\":1,\"1094\":1,\"1678\":1,\"1679\":1,\"1769\":1,\"1770\":1,\"2047\":1,\"2048\":1,\"2138\":1,\"2139\":1,\"2416\":1,\"2417\":1,\"2507\":1,\"2508\":1}}],[\"支持类作为依赖\",{\"1\":{\"2687\":1,\"2702\":1,\"2717\":1}}],[\"支持如下\",{\"1\":{\"1895\":1,\"2264\":1,\"2633\":1}}],[\"支持的类型标注请参见\",{\"1\":{\"2681\":1,\"2696\":1,\"2711\":1}}],[\"支持的格式字符串\",{\"1\":{\"1890\":1,\"2259\":1,\"2628\":1}}],[\"支持的适配器模块名集合\",{\"1\":{\"110\":1,\"618\":1,\"1128\":1}}],[\"支持服务端请求的驱动器\",{\"1\":{\"1749\":1,\"2118\":1,\"2480\":1}}],[\"支持客户端请求的驱动器\",{\"1\":{\"1748\":1,\"2117\":1,\"2469\":1}}],[\"支持以\",{\"1\":{\"1602\":1,\"1971\":1,\"2340\":1}}],[\"支持对\",{\"1\":{\"503\":1,\"1013\":1,\"1528\":1}}],[\"支持对多种类型\",{\"1\":{\"503\":1,\"1013\":1,\"1528\":1}}],[\"支持等\",{\"1\":{\"491\":1,\"1001\":1,\"1516\":1}}],[\"支持依赖注入\",{\"1\":{\"129\":1,\"130\":1,\"132\":1,\"133\":1,\"134\":1,\"135\":1,\"424\":1,\"637\":1,\"638\":1,\"640\":1,\"641\":1,\"642\":1,\"643\":1,\"934\":1,\"1147\":1,\"1148\":1,\"1150\":1,\"1151\":1,\"1152\":1,\"1153\":1,\"1449\":1}}],[\"支持嵌套插件\",{\"1\":{\"112\":1,\"620\":1,\"1130\":1}}],[\"支持\",{\"1\":{\"67\":1,\"68\":1,\"75\":1,\"76\":1,\"100\":1,\"362\":1,\"442\":1,\"490\":1,\"534\":1,\"541\":1,\"575\":1,\"576\":1,\"583\":1,\"584\":1,\"608\":1,\"870\":1,\"952\":1,\"1000\":1,\"1044\":1,\"1051\":1,\"1085\":1,\"1086\":1,\"1093\":1,\"1094\":1,\"1118\":1,\"1385\":1,\"1467\":1,\"1515\":1,\"1559\":1,\"1566\":1,\"1678\":1,\"1679\":1,\"1769\":1,\"1770\":1,\"1921\":1,\"2047\":1,\"2048\":1,\"2138\":1,\"2139\":1,\"2290\":1,\"2416\":1,\"2417\":1,\"2507\":1,\"2508\":1,\"2659\":1,\"2681\":1,\"2696\":1,\"2711\":1}}],[\"功能强大且复杂\",{\"1\":{\"1919\":1,\"2288\":1,\"2657\":1}}],[\"功能框架\",{\"1\":{\"493\":2,\"1003\":2,\"1518\":2}}],[\"功能体验不佳\",{\"1\":{\"493\":1,\"1003\":1,\"1518\":1}}],[\"功能完整\",{\"1\":{\"118\":1,\"626\":1,\"1136\":1}}],[\"功能\",{\"1\":{\"64\":1,\"72\":1,\"572\":1,\"580\":1,\"1082\":1,\"1090\":1}}],[\"功能的实际来源\",{\"1\":{\"64\":1,\"572\":1,\"1082\":1}}],[\"异常信息\",{\"1\":{\"415\":1,\"925\":1,\"1440\":1}}],[\"异常对象\",{\"1\":{\"390\":1,\"898\":1,\"1413\":1}}],[\"异常\",{\"1\":{\"217\":1,\"218\":1,\"219\":1,\"220\":1,\"221\":1,\"222\":1,\"223\":1,\"365\":1,\"725\":1,\"726\":1,\"727\":1,\"728\":1,\"729\":1,\"730\":1,\"731\":1,\"873\":1,\"1237\":1,\"1238\":1,\"1239\":1,\"1240\":1,\"1241\":1,\"1242\":1,\"1243\":1,\"1388\":1,\"1583\":2,\"1608\":1,\"1816\":1,\"1817\":1,\"1952\":2,\"1977\":1,\"2185\":1,\"2186\":1,\"2333\":2,\"2346\":1,\"2554\":1,\"2555\":1}}],[\"异常来忽略平台接口返回的结果并返回指定的结果\",{\"1\":{\"137\":1,\"645\":1,\"1155\":1}}],[\"异常来阻止\",{\"1\":{\"136\":1,\"644\":1,\"1154\":1}}],[\"异常一般为\",{\"1\":{\"64\":1,\"572\":1,\"1082\":1}}],[\"异步上下文栈\",{\"1\":{\"244\":1,\"245\":1,\"292\":1,\"335\":1,\"349\":1,\"752\":1,\"753\":1,\"800\":1,\"843\":1,\"857\":1,\"1265\":1,\"1266\":1,\"1312\":1,\"1355\":1,\"1372\":1}}],[\"异步建立\",{\"1\":{\"53\":1,\"561\":1,\"1071\":1}}],[\"异步发送\",{\"1\":{\"53\":1,\"561\":1,\"1071\":1}}],[\"异步优先\",{\"0\":{\"2\":1,\"14\":1,\"26\":1}}],[\"有如下属性\",{\"1\":{\"1895\":1,\"2264\":1,\"2633\":1}}],[\"有\",{\"1\":{\"1894\":3,\"2263\":3,\"2632\":3}}],[\"有很多相似之处\",{\"1\":{\"530\":1,\"1040\":1,\"1555\":1}}],[\"有时候我们可能需要在不同插件之间调用功能\",{\"1\":{\"115\":1,\"623\":1,\"1133\":1}}],[\"有三个基本属性\",{\"1\":{\"110\":1,\"618\":1,\"1128\":1}}],[\"有效期\",{\"0\":{\"91\":1,\"599\":1,\"1109\":1}}],[\"有关其他插件加载的方式\",{\"1\":{\"522\":1,\"1032\":1,\"1547\":1}}],[\"有关\",{\"1\":{\"64\":1,\"572\":1,\"1082\":1}}],[\"有一种方法可以让你的代码声明它工作和使用所需要的东西\",{\"1\":{\"7\":1,\"19\":1,\"31\":1}}],[\"所实现的接口自动实现类似\",{\"1\":{\"490\":1,\"491\":1,\"1000\":1,\"1001\":1,\"1515\":1,\"1516\":1}}],[\"所获取的参数\",{\"1\":{\"298\":1,\"806\":1,\"1316\":1}}],[\"所提供的功能\",{\"1\":{\"117\":1,\"625\":1,\"1135\":1}}],[\"所有类型为\",{\"1\":{\"1605\":1,\"1974\":1,\"2343\":1}}],[\"所有平台消息在进入处理流程前需要转换为\",{\"1\":{\"476\":1,\"986\":1,\"1501\":1}}],[\"所有的事件响应器都继承自\",{\"1\":{\"524\":1,\"1034\":1,\"1549\":1}}],[\"所有的\",{\"1\":{\"208\":1,\"716\":1,\"1228\":1}}],[\"所有\",{\"1\":{\"196\":1,\"204\":1,\"219\":1,\"704\":1,\"712\":1,\"727\":1,\"1216\":1,\"1224\":1,\"1239\":1,\"1895\":1,\"2264\":1,\"2633\":1}}],[\"所有标注位于\",{\"1\":{\"108\":1,\"616\":1,\"1126\":1}}],[\"所有非\",{\"1\":{\"90\":1,\"598\":1,\"1108\":1}}],[\"所有驱动器模块都会包含一个\",{\"1\":{\"54\":1,\"562\":1,\"1072\":1}}],[\"所以可以这么编写\",{\"1\":{\"1893\":1,\"2262\":1,\"2631\":1}}],[\"所以你在使用的时候\",{\"1\":{\"543\":1,\"1053\":1,\"1568\":1}}],[\"所以你总是可以用和操作\",{\"1\":{\"532\":1,\"1042\":1,\"1557\":1}}],[\"所以\",{\"1\":{\"64\":1,\"530\":1,\"572\":1,\"1040\":1,\"1082\":1,\"1555\":1,\"2678\":1,\"2679\":3,\"2693\":1,\"2694\":3,\"2708\":1,\"2709\":3}}],[\"平台不支持运行独立服务\",{\"1\":{\"2690\":1,\"2705\":1,\"2720\":1}}],[\"平台有较多耦合\",{\"1\":{\"489\":1,\"999\":1,\"1514\":1}}],[\"平台\",{\"1\":{\"442\":1,\"445\":1,\"952\":1,\"955\":1,\"1467\":1,\"1470\":1}}],[\"平台接口调用后钩子\",{\"0\":{\"137\":1,\"645\":1,\"1155\":1}}],[\"平台接口调用钩子\",{\"0\":{\"136\":1,\"644\":1,\"1154\":1}}],[\"平台的可使用性不如前者\",{\"1\":{\"64\":1,\"572\":1,\"1082\":1}}],[\"平台上开启该功能有可能会造成预料之外的影响\",{\"1\":{\"64\":1,\"72\":1,\"572\":1,\"580\":1,\"1082\":1,\"1090\":1}}],[\"14\",{\"1\":{\"2723\":1,\"2730\":1,\"2737\":1}}],[\"13\",{\"1\":{\"2722\":1,\"2729\":1,\"2736\":1}}],[\"11\",{\"1\":{\"2690\":2,\"2705\":2,\"2720\":2}}],[\"15\",{\"1\":{\"2679\":4,\"2694\":4,\"2709\":4,\"2721\":1,\"2728\":1,\"2735\":1}}],[\"10\",{\"1\":{\"455\":1,\"527\":1,\"965\":1,\"1037\":1,\"1480\":1,\"1552\":1,\"1931\":1,\"2300\":1,\"2669\":1,\"2690\":2,\"2705\":2,\"2720\":2}}],[\"100\",{\"1\":{\"447\":1,\"957\":1,\"1472\":1}}],[\"1070\",{\"1\":{\"64\":1,\"572\":1,\"1082\":1}}],[\"12\",{\"1\":{\"2690\":4,\"2705\":4,\"2720\":4,\"2724\":1,\"2731\":1,\"2738\":1}}],[\"127\",{\"1\":{\"225\":1,\"733\":1,\"1245\":1}}],[\"123456\",{\"1\":{\"543\":2,\"1053\":2,\"1568\":2}}],[\"12345\",{\"1\":{\"222\":2,\"730\":2,\"1242\":2}}],[\"12345789\",{\"1\":{\"171\":1,\"679\":1,\"1189\":1}}],[\"123\",{\"1\":{\"136\":1,\"137\":1,\"644\":1,\"645\":1,\"1154\":1,\"1155\":1,\"1887\":16,\"1907\":2,\"2256\":16,\"2276\":2,\"2625\":16,\"2645\":2}}],[\"1257\",{\"1\":{\"64\":1,\"572\":1,\"1082\":1}}],[\"1\",{\"1\":{\"78\":2,\"218\":1,\"225\":1,\"259\":1,\"261\":1,\"262\":1,\"265\":1,\"278\":1,\"319\":1,\"363\":1,\"408\":1,\"417\":1,\"418\":1,\"429\":2,\"447\":1,\"452\":3,\"541\":2,\"586\":2,\"726\":1,\"733\":1,\"767\":1,\"769\":1,\"770\":1,\"773\":1,\"786\":1,\"827\":1,\"871\":1,\"916\":1,\"927\":1,\"928\":1,\"939\":2,\"957\":1,\"962\":3,\"1051\":2,\"1096\":2,\"1238\":1,\"1245\":1,\"1280\":1,\"1282\":1,\"1283\":1,\"1286\":1,\"1298\":1,\"1340\":1,\"1386\":1,\"1431\":1,\"1442\":1,\"1443\":1,\"1454\":2,\"1472\":1,\"1477\":3,\"1566\":2,\"1605\":3,\"1745\":3,\"1750\":1,\"1893\":1,\"1894\":1,\"1902\":2,\"1974\":3,\"2114\":3,\"2119\":1,\"2262\":1,\"2263\":1,\"2271\":2,\"2343\":3,\"2475\":3,\"2495\":1,\"2631\":1,\"2632\":1,\"2640\":2,\"2689\":6,\"2704\":6,\"2719\":6}}],[\"5432\",{\"1\":{\"2690\":6,\"2705\":6,\"2720\":6}}],[\"5\",{\"1\":{\"1605\":1,\"1931\":1,\"1974\":1,\"2300\":1,\"2343\":1,\"2669\":1,\"2727\":1,\"2734\":1,\"2741\":1}}],[\"526\",{\"1\":{\"372\":1,\"880\":1,\"1395\":1}}],[\"529\",{\"1\":{\"64\":1,\"572\":1,\"1082\":1}}],[\"512\",{\"1\":{\"64\":1,\"572\":1,\"1082\":1}}],[\"561\",{\"1\":{\"8\":1,\"20\":1,\"32\":1}}],[\"底层\",{\"1\":{\"64\":1,\"572\":1,\"1082\":1}}],[\"rd123\",{\"1\":{\"1887\":1,\"2256\":1,\"2625\":1}}],[\"rd\",{\"1\":{\"1887\":1,\"2256\":1,\"2625\":1}}],[\"r和\",{\"1\":{\"1886\":1,\"2255\":1,\"2624\":1}}],[\"r|\",{\"1\":{\"1886\":1,\"1906\":1,\"2255\":1,\"2275\":1,\"2624\":1,\"2644\":1}}],[\"richardchien\",{\"1\":{\"489\":1,\"490\":1,\"491\":1,\"999\":1,\"1000\":1,\"1001\":1,\"1514\":1,\"1515\":1,\"1516\":1}}],[\"r>\",{\"1\":{\"470\":3,\"980\":3,\"1495\":3}}],[\"row\",{\"1\":{\"2689\":21,\"2704\":21,\"2719\":21}}],[\"rows\",{\"1\":{\"2689\":13,\"2704\":13,\"2719\":13}}],[\"rollback\",{\"1\":{\"2684\":1,\"2685\":1,\"2699\":1,\"2700\":1,\"2714\":1,\"2715\":1}}],[\"roll\",{\"1\":{\"1887\":2,\"2256\":2,\"2625\":2}}],[\"room\",{\"1\":{\"476\":1,\"986\":1,\"1501\":1}}],[\"root\",{\"1\":{\"419\":1,\"929\":1,\"1444\":1,\"2690\":2,\"2705\":2,\"2720\":2}}],[\"roaming\",{\"1\":{\"437\":2,\"438\":3,\"947\":2,\"948\":3,\"1462\":2,\"1463\":3}}],[\"rotation=\",{\"1\":{\"418\":1,\"928\":1,\"1443\":1}}],[\"robustness\",{\"1\":{\"79\":1,\"587\":1,\"1097\":1}}],[\"rate\",{\"1\":{\"447\":1,\"957\":1,\"1472\":1}}],[\"rawstr\",{\"1\":{\"1890\":1,\"2259\":1,\"2628\":1}}],[\"rawurl\",{\"1\":{\"1728\":1,\"2097\":1,\"2478\":1}}],[\"raw\",{\"1\":{\"184\":1,\"692\":1,\"1204\":1}}],[\"rawcommand\",{\"1\":{\"99\":1,\"361\":1,\"365\":1,\"607\":1,\"869\":1,\"873\":1,\"1117\":1,\"1384\":1,\"1388\":1}}],[\"raise\",{\"1\":{\"132\":1,\"134\":1,\"136\":1,\"137\":1,\"470\":1,\"471\":1,\"476\":3,\"640\":1,\"642\":1,\"644\":1,\"645\":1,\"980\":1,\"981\":1,\"986\":3,\"1150\":1,\"1152\":1,\"1154\":1,\"1155\":1,\"1495\":1,\"1496\":1,\"1501\":3,\"1896\":1,\"1897\":1,\"2265\":1,\"2266\":1,\"2634\":1,\"2635\":1}}],[\"r\",{\"1\":{\"101\":3,\"367\":1,\"406\":2,\"408\":3,\"609\":3,\"875\":1,\"914\":2,\"916\":3,\"1119\":3,\"1390\":1,\"1429\":2,\"1431\":3,\"1642\":1,\"1644\":2,\"1906\":1,\"2011\":1,\"2013\":2,\"2275\":1,\"2380\":1,\"2382\":2,\"2644\":1,\"2690\":2,\"2705\":2,\"2720\":2}}],[\"rust\",{\"0\":{\"490\":1,\"1000\":1,\"1515\":1},\"1\":{\"490\":4,\"1000\":4,\"1515\":4}}],[\"rule>\",{\"1\":{\"525\":1,\"1035\":1,\"1550\":1}}],[\"rule2\",{\"1\":{\"426\":3,\"936\":3,\"1451\":3}}],[\"rule1\",{\"1\":{\"426\":3,\"936\":3,\"1451\":3}}],[\"rule=rule\",{\"1\":{\"425\":1,\"935\":1,\"1450\":1}}],[\"rule=is\",{\"1\":{\"424\":1,\"426\":1,\"934\":1,\"936\":1,\"1449\":1,\"1451\":1}}],[\"rule=to\",{\"1\":{\"106\":1,\"423\":1,\"426\":2,\"527\":1,\"614\":1,\"933\":1,\"936\":2,\"1037\":1,\"1124\":1,\"1448\":1,\"1451\":2,\"1552\":1}}],[\"rulechecker\",{\"0\":{\"424\":1,\"934\":1,\"1449\":1},\"1\":{\"93\":1,\"346\":2,\"347\":2,\"348\":1,\"391\":1,\"423\":2,\"424\":3,\"425\":4,\"426\":1,\"427\":1,\"601\":1,\"854\":2,\"855\":2,\"856\":1,\"899\":1,\"933\":2,\"934\":3,\"935\":4,\"936\":1,\"937\":1,\"1111\":1,\"1369\":2,\"1370\":2,\"1371\":1,\"1414\":1,\"1448\":2,\"1449\":3,\"1450\":4,\"1451\":1,\"1452\":1,\"1856\":1,\"1857\":1,\"1858\":1,\"1859\":1,\"1860\":1,\"1861\":1,\"1862\":1,\"1863\":1,\"1864\":1,\"1865\":1,\"1866\":1,\"1867\":1,\"1868\":1,\"1869\":1,\"1870\":1,\"1871\":1,\"1872\":1,\"1873\":1,\"1874\":1,\"1875\":1,\"1876\":1,\"1877\":1,\"1878\":1,\"1879\":1,\"1880\":1,\"1881\":1,\"1882\":1,\"1883\":1,\"1884\":1,\"1885\":1,\"2225\":1,\"2226\":1,\"2227\":1,\"2228\":1,\"2229\":1,\"2230\":1,\"2231\":1,\"2232\":1,\"2233\":1,\"2234\":1,\"2235\":1,\"2236\":1,\"2237\":1,\"2238\":1,\"2239\":1,\"2240\":1,\"2241\":1,\"2242\":1,\"2243\":1,\"2244\":1,\"2245\":1,\"2246\":1,\"2247\":1,\"2248\":1,\"2249\":1,\"2250\":1,\"2251\":1,\"2252\":1,\"2253\":1,\"2254\":1,\"2594\":1,\"2595\":1,\"2596\":1,\"2597\":1,\"2598\":1,\"2599\":1,\"2600\":1,\"2601\":1,\"2602\":1,\"2603\":1,\"2604\":1,\"2605\":1,\"2606\":1,\"2607\":1,\"2608\":1,\"2609\":1,\"2610\":1,\"2611\":1,\"2612\":1,\"2613\":1,\"2614\":1,\"2615\":1,\"2616\":1,\"2617\":1,\"2618\":1,\"2619\":1,\"2620\":1,\"2621\":1,\"2622\":1,\"2623\":1}}],[\"rule\",{\"0\":{\"346\":1,\"425\":1,\"854\":1,\"935\":1,\"1369\":1,\"1450\":1},\"1\":{\"88\":2,\"93\":2,\"95\":2,\"96\":2,\"97\":2,\"98\":2,\"99\":5,\"100\":3,\"101\":2,\"102\":2,\"103\":2,\"106\":1,\"235\":1,\"242\":2,\"346\":1,\"347\":2,\"353\":1,\"355\":1,\"357\":1,\"359\":1,\"361\":1,\"365\":3,\"367\":1,\"369\":1,\"371\":1,\"423\":1,\"425\":5,\"426\":11,\"427\":4,\"527\":1,\"596\":2,\"601\":2,\"603\":2,\"604\":2,\"605\":2,\"606\":2,\"607\":5,\"608\":3,\"609\":2,\"610\":2,\"611\":2,\"614\":1,\"743\":1,\"750\":2,\"854\":1,\"855\":2,\"861\":1,\"863\":1,\"865\":1,\"867\":1,\"869\":1,\"873\":3,\"875\":1,\"877\":1,\"879\":1,\"933\":1,\"935\":5,\"936\":11,\"937\":4,\"1037\":1,\"1106\":2,\"1111\":2,\"1113\":2,\"1114\":2,\"1115\":2,\"1116\":2,\"1117\":5,\"1118\":3,\"1119\":2,\"1120\":2,\"1121\":2,\"1124\":1,\"1256\":1,\"1263\":2,\"1369\":1,\"1370\":2,\"1376\":1,\"1378\":1,\"1380\":1,\"1382\":1,\"1384\":1,\"1388\":3,\"1390\":1,\"1392\":1,\"1394\":1,\"1448\":1,\"1450\":5,\"1451\":11,\"1452\":4,\"1552\":1,\"1856\":2,\"1857\":2,\"1858\":2,\"1859\":2,\"1860\":2,\"1861\":2,\"1862\":2,\"1863\":2,\"1864\":2,\"1865\":2,\"1866\":3,\"1867\":2,\"1868\":2,\"1869\":2,\"1870\":2,\"1871\":3,\"1872\":2,\"1873\":2,\"1874\":2,\"1875\":2,\"1876\":2,\"1877\":2,\"1878\":2,\"1879\":2,\"1880\":2,\"1881\":2,\"1882\":2,\"1883\":3,\"1884\":2,\"1885\":2,\"2225\":2,\"2226\":2,\"2227\":2,\"2228\":2,\"2229\":2,\"2230\":2,\"2231\":2,\"2232\":2,\"2233\":2,\"2234\":2,\"2235\":3,\"2236\":2,\"2237\":2,\"2238\":2,\"2239\":2,\"2240\":3,\"2241\":2,\"2242\":2,\"2243\":2,\"2244\":2,\"2245\":2,\"2246\":2,\"2247\":2,\"2248\":2,\"2249\":2,\"2250\":2,\"2251\":2,\"2252\":3,\"2253\":2,\"2254\":2,\"2594\":2,\"2595\":2,\"2596\":2,\"2597\":2,\"2598\":2,\"2599\":2,\"2600\":2,\"2601\":2,\"2602\":2,\"2603\":2,\"2604\":3,\"2605\":2,\"2606\":2,\"2607\":2,\"2608\":2,\"2609\":3,\"2610\":2,\"2611\":2,\"2612\":2,\"2613\":2,\"2614\":2,\"2615\":2,\"2616\":2,\"2617\":2,\"2618\":2,\"2619\":2,\"2620\":2,\"2621\":3,\"2622\":2,\"2623\":2}}],[\"runs\",{\"1\":{\"2690\":2,\"2705\":2,\"2720\":2}}],[\"runtimeerror\",{\"1\":{\"470\":1,\"471\":1,\"980\":1,\"981\":1,\"1495\":1,\"1496\":1,\"1816\":1,\"1817\":1,\"2185\":1,\"2186\":1,\"2554\":1,\"2555\":1}}],[\"runpostprocessor\",{\"1\":{\"291\":2,\"390\":1,\"799\":2,\"898\":1,\"1311\":2,\"1413\":1}}],[\"runpreprocessor\",{\"1\":{\"290\":2,\"389\":1,\"798\":2,\"897\":1,\"1310\":2,\"1412\":1}}],[\"run\",{\"1\":{\"64\":2,\"72\":2,\"134\":2,\"135\":2,\"200\":1,\"225\":3,\"452\":3,\"507\":2,\"508\":1,\"514\":1,\"572\":2,\"580\":2,\"642\":2,\"643\":2,\"708\":1,\"733\":3,\"962\":3,\"1017\":2,\"1018\":2,\"1024\":1,\"1082\":2,\"1090\":2,\"1152\":2,\"1153\":2,\"1220\":1,\"1245\":3,\"1477\":3,\"1532\":2,\"1533\":2,\"1539\":1,\"1921\":1,\"2290\":1,\"2659\":1,\"2679\":1,\"2690\":12,\"2694\":1,\"2705\":12,\"2709\":1,\"2720\":12}}],[\"revision\",{\"1\":{\"2679\":7,\"2694\":7,\"2709\":7}}],[\"reversemixin\",{\"1\":{\"1749\":2,\"2118\":2,\"2480\":2}}],[\"reversedriver\",{\"1\":{\"167\":1,\"168\":1,\"675\":1,\"676\":1,\"1185\":1,\"1186\":1}}],[\"reverse\",{\"1\":{\"53\":1,\"561\":1,\"1071\":1}}],[\"rep\",{\"1\":{\"1890\":1,\"2259\":1,\"2628\":1}}],[\"report\",{\"1\":{\"478\":1,\"988\":1,\"1503\":1}}],[\"repr\",{\"1\":{\"476\":1,\"986\":1,\"1501\":1}}],[\"release\",{\"1\":{\"447\":2,\"957\":2,\"1472\":2}}],[\"reload\",{\"1\":{\"64\":4,\"72\":3,\"572\":4,\"580\":3,\"1018\":1,\"1082\":4,\"1090\":3,\"1533\":1}}],[\"remove\",{\"1\":{\"418\":1,\"928\":1,\"1443\":1}}],[\"refresh\",{\"1\":{\"2684\":1,\"2685\":1,\"2699\":1,\"2700\":1,\"2714\":1,\"2715\":1}}],[\"ref\",{\"1\":{\"380\":1,\"888\":1,\"1403\":1}}],[\"re\",{\"1\":{\"367\":1,\"875\":1,\"1390\":1,\"1867\":1,\"1884\":1,\"1887\":2,\"1890\":2,\"2236\":1,\"2253\":1,\"2256\":2,\"2259\":2,\"2605\":1,\"2622\":1,\"2625\":2,\"2628\":2}}],[\"recent\",{\"1\":{\"2679\":1,\"2694\":1,\"2709\":1}}],[\"receive\",{\"1\":{\"121\":1,\"177\":2,\"178\":2,\"255\":1,\"257\":1,\"259\":1,\"260\":1,\"261\":1,\"326\":1,\"327\":1,\"474\":3,\"629\":1,\"685\":2,\"686\":2,\"763\":1,\"765\":1,\"767\":1,\"768\":1,\"769\":1,\"834\":1,\"835\":1,\"984\":3,\"1139\":1,\"1195\":2,\"1196\":2,\"1276\":1,\"1278\":1,\"1280\":1,\"1281\":1,\"1282\":1,\"1347\":1,\"1348\":1,\"1349\":1,\"1499\":3,\"1935\":1,\"2304\":1,\"2673\":1}}],[\"recycle\",{\"1\":{\"1931\":1,\"2300\":1,\"2669\":1}}],[\"reconnect\",{\"1\":{\"470\":2,\"980\":2,\"1495\":2}}],[\"record\",{\"1\":{\"229\":1,\"230\":2,\"737\":1,\"738\":2,\"1249\":1,\"1250\":2}}],[\"rejectedexception\",{\"1\":{\"195\":1,\"703\":1,\"1215\":1}}],[\"reject\",{\"1\":{\"180\":1,\"181\":1,\"206\":2,\"394\":1,\"395\":1,\"429\":1,\"688\":1,\"689\":1,\"714\":2,\"902\":1,\"903\":1,\"939\":1,\"1198\":1,\"1199\":1,\"1201\":2,\"1226\":2,\"1417\":1,\"1418\":1,\"1454\":1}}],[\"react\",{\"1\":{\"501\":2,\"1011\":2,\"1526\":2}}],[\"read\",{\"1\":{\"433\":1,\"943\":1,\"1458\":1}}],[\"readme\",{\"1\":{\"110\":1,\"463\":1,\"513\":2,\"618\":1,\"973\":1,\"1023\":2,\"1128\":1,\"1488\":1,\"1538\":2}}],[\"reason\",{\"1\":{\"132\":1,\"134\":1,\"199\":1,\"640\":1,\"642\":1,\"707\":1,\"1150\":1,\"1152\":1,\"1219\":1,\"1662\":1,\"1691\":1,\"1738\":1,\"1782\":1,\"1794\":1,\"2031\":1,\"2060\":1,\"2107\":1,\"2151\":1,\"2163\":1,\"2400\":1,\"2429\":1,\"2485\":1,\"2520\":1,\"2532\":1}}],[\"returning\",{\"1\":{\"2688\":1,\"2703\":1,\"2718\":1}}],[\"return\",{\"1\":{\"120\":1,\"124\":1,\"139\":1,\"140\":2,\"297\":1,\"408\":5,\"424\":1,\"425\":2,\"426\":1,\"468\":1,\"471\":1,\"473\":2,\"474\":4,\"476\":9,\"477\":4,\"628\":1,\"632\":1,\"647\":1,\"648\":2,\"805\":1,\"916\":5,\"934\":1,\"935\":2,\"936\":1,\"978\":1,\"981\":1,\"983\":2,\"984\":4,\"986\":9,\"987\":4,\"1138\":1,\"1142\":1,\"1157\":1,\"1158\":2,\"1323\":1,\"1431\":5,\"1449\":1,\"1450\":2,\"1451\":1,\"1493\":1,\"1496\":1,\"1498\":2,\"1499\":4,\"1501\":9,\"1502\":4,\"2679\":2,\"2680\":2,\"2681\":1,\"2684\":1,\"2685\":1,\"2694\":2,\"2695\":2,\"2696\":1,\"2699\":1,\"2700\":1,\"2709\":2,\"2710\":2,\"2711\":1,\"2714\":1,\"2715\":1}}],[\"res\",{\"1\":{\"1886\":3,\"1906\":2,\"2255\":3,\"2275\":2,\"2624\":3,\"2644\":2}}],[\"rest\",{\"1\":{\"502\":1,\"1012\":1,\"1527\":1}}],[\"result\",{\"1\":{\"137\":3,\"202\":1,\"386\":1,\"427\":1,\"645\":3,\"710\":1,\"894\":1,\"937\":1,\"1155\":3,\"1200\":1,\"1201\":1,\"1222\":1,\"1409\":1,\"1452\":1,\"1578\":1,\"1906\":2,\"1947\":1,\"2275\":2,\"2328\":1,\"2644\":2,\"2689\":1,\"2704\":1,\"2719\":1}}],[\"result=\",{\"1\":{\"136\":1,\"137\":1,\"644\":1,\"645\":1,\"1154\":1,\"1155\":1,\"1886\":1,\"2255\":1,\"2624\":1}}],[\"response\",{\"1\":{\"120\":5,\"471\":3,\"628\":5,\"981\":3,\"1138\":5,\"1496\":3,\"1598\":1,\"1653\":1,\"1657\":1,\"1699\":1,\"1703\":1,\"1752\":1,\"1934\":3,\"1935\":2,\"1967\":1,\"2022\":1,\"2026\":1,\"2068\":1,\"2072\":1,\"2121\":1,\"2303\":3,\"2304\":2,\"2317\":1,\"2391\":1,\"2395\":1,\"2437\":1,\"2441\":1,\"2472\":1,\"2672\":3,\"2673\":2}}],[\"resolve\",{\"1\":{\"114\":1,\"478\":1,\"622\":1,\"988\":1,\"1132\":1,\"1503\":1}}],[\"requires=\",{\"1\":{\"1893\":1,\"2262\":1,\"2631\":1}}],[\"requires\",{\"1\":{\"1893\":1,\"2262\":1,\"2631\":1}}],[\"requirements\",{\"1\":{\"2690\":2,\"2705\":2,\"2720\":2}}],[\"requirement\",{\"1\":{\"1886\":1,\"1906\":5,\"2255\":1,\"2275\":5,\"2624\":1,\"2644\":5}}],[\"require\",{\"1\":{\"117\":6,\"216\":2,\"433\":3,\"451\":3,\"452\":2,\"625\":6,\"724\":2,\"943\":3,\"961\":3,\"962\":2,\"1135\":6,\"1236\":2,\"1458\":3,\"1476\":3,\"1477\":2,\"1802\":2,\"2171\":2,\"2540\":2}}],[\"requests\",{\"1\":{\"1934\":1,\"2303\":1,\"2672\":1}}],[\"request\",{\"1\":{\"11\":1,\"23\":1,\"35\":1,\"42\":1,\"86\":1,\"93\":1,\"120\":5,\"216\":2,\"342\":2,\"447\":1,\"470\":4,\"471\":4,\"474\":8,\"476\":1,\"502\":1,\"550\":1,\"594\":1,\"601\":1,\"628\":5,\"724\":2,\"850\":2,\"957\":1,\"980\":4,\"981\":4,\"984\":8,\"986\":1,\"1012\":1,\"1060\":1,\"1104\":1,\"1111\":1,\"1138\":5,\"1236\":2,\"1365\":2,\"1472\":1,\"1495\":4,\"1496\":4,\"1499\":8,\"1501\":1,\"1527\":1,\"1598\":1,\"1599\":1,\"1653\":1,\"1657\":1,\"1658\":1,\"1660\":2,\"1689\":1,\"1699\":1,\"1703\":1,\"1727\":2,\"1729\":2,\"1735\":2,\"1752\":1,\"1756\":1,\"1780\":1,\"1791\":1,\"1792\":2,\"1802\":2,\"1967\":1,\"1968\":1,\"2022\":1,\"2026\":1,\"2027\":1,\"2029\":2,\"2058\":1,\"2068\":1,\"2072\":1,\"2096\":2,\"2098\":2,\"2104\":2,\"2121\":1,\"2125\":1,\"2149\":1,\"2160\":1,\"2161\":2,\"2171\":2,\"2317\":1,\"2318\":1,\"2391\":1,\"2395\":1,\"2396\":1,\"2398\":2,\"2427\":1,\"2437\":1,\"2441\":1,\"2456\":2,\"2472\":1,\"2479\":2,\"2482\":2,\"2493\":1,\"2518\":1,\"2529\":1,\"2530\":2,\"2540\":2}}],[\"registry\",{\"1\":{\"502\":5,\"1012\":5,\"1527\":5}}],[\"register\",{\"1\":{\"38\":3,\"507\":1,\"546\":3,\"1017\":1,\"1056\":3,\"1532\":1,\"1569\":1,\"1589\":1,\"1938\":1,\"1958\":1,\"2307\":1,\"2308\":1}}],[\"regexflag\",{\"1\":{\"367\":1,\"875\":1,\"1390\":1,\"1867\":1,\"1884\":1,\"2236\":1,\"2253\":1,\"2605\":1,\"2622\":1}}],[\"regexdict\",{\"1\":{\"101\":1,\"367\":1,\"609\":1,\"875\":1,\"1119\":1,\"1390\":1}}],[\"regexgroup\",{\"1\":{\"101\":1,\"367\":1,\"609\":1,\"875\":1,\"1119\":1,\"1390\":1}}],[\"regexstr\",{\"1\":{\"101\":1,\"367\":1,\"609\":1,\"875\":1,\"1119\":1,\"1390\":1}}],[\"regex\",{\"1\":{\"101\":5,\"216\":2,\"366\":1,\"367\":1,\"609\":5,\"724\":2,\"874\":1,\"875\":1,\"1119\":5,\"1236\":2,\"1389\":1,\"1390\":1,\"1802\":2,\"1867\":2,\"1884\":2,\"2171\":2,\"2236\":2,\"2253\":2,\"2540\":2,\"2605\":2,\"2622\":2}}],[\"red>\",{\"1\":{\"417\":1,\"927\":1,\"1442\":1}}],[\"redis\",{\"1\":{\"81\":1,\"589\":1,\"1099\":1}}],[\"redoc\",{\"1\":{\"62\":2,\"570\":2,\"1080\":2,\"1673\":1,\"2042\":1,\"2411\":1}}],[\"reimplementation\",{\"1\":{\"70\":1,\"578\":1,\"1088\":1}}],[\"不变\",{\"1\":{\"2685\":1,\"2700\":1,\"2715\":1}}],[\"不应该在其他地方提交事务\",{\"1\":{\"2680\":1,\"2695\":1,\"2710\":1}}],[\"不同\",{\"1\":{\"2680\":1,\"2695\":1,\"2710\":1}}],[\"不同的用户会有不同的配置\",{\"1\":{\"2690\":1,\"2705\":1,\"2720\":1}}],[\"不同的类型标注也会获得不同形式的数据\",{\"1\":{\"2681\":1,\"2696\":1,\"2711\":1}}],[\"不同的事件也会有不同的事件响应器\",{\"1\":{\"2680\":1,\"2695\":1,\"2710\":1}}],[\"不同的是\",{\"1\":{\"1866\":1,\"1883\":1,\"2235\":1,\"2252\":1,\"2604\":1,\"2621\":1}}],[\"不同的辅助函数有不同的可选参数\",{\"1\":{\"527\":1,\"1037\":1,\"1552\":1}}],[\"不要这么做\",{\"1\":{\"2680\":1,\"2695\":1,\"2710\":1}}],[\"不要忘记还有一段注释\",{\"1\":{\"2679\":1,\"2694\":1,\"2709\":1}}],[\"不要监听的文件列表\",{\"1\":{\"68\":1,\"76\":1,\"576\":1,\"584\":1,\"1086\":1,\"1094\":1,\"1679\":1,\"1770\":1,\"2048\":1,\"2139\":1,\"2417\":1,\"2508\":1}}],[\"不过此时就要手动管理会话了\",{\"1\":{\"2680\":1,\"2695\":1,\"2710\":1}}],[\"不过\",{\"1\":{\"1919\":1,\"2288\":1,\"2657\":1,\"2681\":1,\"2696\":1,\"2711\":1}}],[\"不启用则会在触发特殊内置选项后仍然将解析结果传递至响应器\",{\"1\":{\"1909\":1,\"2278\":1,\"2647\":1}}],[\"不使用duplication获得的提示较少\",{\"1\":{\"1906\":1,\"2275\":1,\"2644\":1}}],[\"不传入时默认为选项或子命令的名称\",{\"1\":{\"1893\":1,\"2262\":1,\"2631\":1}}],[\"不包括参数名\",{\"1\":{\"1640\":1,\"2009\":1,\"2378\":1}}],[\"不包含的消息段类型\",{\"1\":{\"1617\":1,\"1986\":1,\"2355\":1}}],[\"不能在\",{\"1\":{\"1891\":1,\"2260\":1,\"2629\":1}}],[\"不能使用\",{\"1\":{\"543\":1,\"1053\":1,\"1568\":1}}],[\"不能相同\",{\"1\":{\"514\":1,\"1024\":1,\"1539\":1}}],[\"不让文档成为用户上手的阻碍\",{\"1\":{\"495\":1,\"1005\":1,\"1520\":1}}],[\"不可用的地方\",{\"1\":{\"482\":1,\"992\":1,\"1507\":1}}],[\"不可重复\",{\"1\":{\"120\":1,\"121\":1,\"628\":1,\"629\":1,\"1138\":1,\"1139\":1}}],[\"不符合时应抛出异常\",{\"1\":{\"470\":1,\"980\":1,\"1495\":1}}],[\"不方便区分适配器输出和其它日志\",{\"1\":{\"466\":1,\"976\":1,\"1491\":1}}],[\"不做强制要求\",{\"1\":{\"463\":1,\"973\":1,\"1488\":1}}],[\"不存在时接收用户新的一条消息再运行该函数\",{\"1\":{\"251\":1,\"759\":1,\"1272\":1}}],[\"不存在\",{\"1\":{\"222\":1,\"730\":1,\"1242\":1}}],[\"不再被运行\",{\"1\":{\"207\":1,\"715\":1,\"1227\":1}}],[\"不为\",{\"1\":{\"91\":1,\"599\":1,\"1109\":1}}],[\"不支持特殊占位表达式\",{\"1\":{\"120\":1,\"121\":1,\"628\":1,\"629\":1,\"1138\":1,\"1139\":1}}],[\"不支持\",{\"1\":{\"78\":1,\"79\":1,\"586\":1,\"587\":1,\"1096\":1,\"1097\":1}}],[\"不支持创建子进程\",{\"1\":{\"64\":1,\"572\":1,\"1082\":1}}],[\"不推荐开启该配置项\",{\"1\":{\"64\":1,\"72\":1,\"572\":1,\"580\":1,\"1082\":1,\"1090\":1}}],[\"不提供任何收发数据功能\",{\"1\":{\"57\":1,\"565\":1,\"1075\":1}}],[\"警告\",{\"1\":{\"64\":1,\"72\":1,\"365\":1,\"433\":1,\"504\":1,\"514\":1,\"572\":1,\"580\":1,\"873\":1,\"943\":1,\"1014\":1,\"1024\":1,\"1082\":1,\"1090\":1,\"1388\":1,\"1458\":1,\"1529\":1,\"1539\":1}}],[\"ospp\",{\"0\":{\"2752\":1,\"2759\":1,\"2766\":1}}],[\"os\",{\"1\":{\"2690\":4,\"2705\":4,\"2720\":4}}],[\"overflow\",{\"1\":{\"1931\":1,\"2300\":1,\"2669\":1}}],[\"override\",{\"1\":{\"468\":3,\"470\":2,\"471\":1,\"474\":2,\"475\":3,\"476\":13,\"477\":6,\"978\":3,\"980\":2,\"981\":1,\"984\":2,\"985\":3,\"986\":13,\"987\":6,\"1493\":3,\"1495\":2,\"1496\":1,\"1499\":2,\"1500\":3,\"1501\":13,\"1502\":6}}],[\"output\",{\"0\":{\"1909\":1,\"2278\":1,\"2647\":1},\"1\":{\"1905\":1,\"2274\":1,\"2643\":1}}],[\"other\",{\"1\":{\"1624\":1,\"1886\":1,\"1895\":1,\"1993\":1,\"2255\":1,\"2264\":1,\"2362\":1,\"2624\":1,\"2633\":1}}],[\"o\",{\"1\":{\"414\":1,\"924\":1,\"1439\":1}}],[\"obj\",{\"1\":{\"409\":1,\"411\":1,\"919\":1,\"921\":1,\"1434\":1,\"1436\":1,\"1612\":1,\"1613\":1,\"1981\":1,\"1982\":1,\"2350\":1,\"2351\":1}}],[\"object\",{\"1\":{\"143\":1,\"373\":1,\"651\":1,\"881\":1,\"1161\":1,\"1396\":1}}],[\"orm\",{\"1\":{\"499\":4,\"1009\":4,\"1524\":4,\"1919\":2,\"1921\":5,\"1922\":3,\"1924\":2,\"1925\":2,\"1926\":2,\"1927\":1,\"2288\":2,\"2290\":5,\"2291\":3,\"2293\":2,\"2294\":2,\"2295\":2,\"2296\":1,\"2657\":2,\"2659\":5,\"2660\":3,\"2662\":2,\"2663\":2,\"2664\":2,\"2665\":1,\"2676\":1,\"2678\":3,\"2679\":5,\"2680\":7,\"2681\":1,\"2682\":1,\"2684\":2,\"2685\":2,\"2687\":2,\"2688\":1,\"2690\":2,\"2691\":1,\"2693\":3,\"2694\":5,\"2695\":7,\"2696\":1,\"2697\":1,\"2699\":2,\"2700\":2,\"2702\":2,\"2703\":1,\"2705\":2,\"2706\":1,\"2708\":3,\"2709\":5,\"2710\":7,\"2711\":1,\"2712\":1,\"2714\":2,\"2715\":2,\"2717\":2,\"2718\":1,\"2720\":2}}],[\"or\",{\"1\":{\"400\":2,\"401\":5,\"437\":1,\"908\":2,\"909\":5,\"947\":1,\"1423\":2,\"1424\":5,\"1462\":1,\"1887\":1,\"2256\":1,\"2625\":1,\"2687\":1,\"2689\":3,\"2702\":1,\"2704\":3,\"2717\":1,\"2719\":3}}],[\"origin=option\",{\"1\":{\"1906\":2,\"2275\":2,\"2644\":2}}],[\"origin=args\",{\"1\":{\"1906\":3,\"2275\":3,\"2644\":3}}],[\"origin=subcommand\",{\"1\":{\"1906\":1,\"2275\":1,\"2644\":1}}],[\"origin=\",{\"1\":{\"1886\":1,\"2255\":1,\"2624\":1}}],[\"origin\",{\"0\":{\"1912\":1,\"2281\":1,\"2650\":1},\"1\":{\"375\":1,\"376\":1,\"378\":1,\"883\":1,\"884\":1,\"886\":1,\"1398\":1,\"1399\":1,\"1401\":1,\"1895\":1,\"2264\":1,\"2633\":1}}],[\"op\",{\"1\":{\"2679\":5,\"2694\":5,\"2709\":5}}],[\"open\",{\"1\":{\"502\":1,\"1012\":1,\"1527\":1}}],[\"openeuler\",{\"1\":{\"480\":1,\"492\":1,\"496\":1,\"990\":1,\"1002\":1,\"1006\":1,\"1505\":1,\"1517\":1,\"1521\":1}}],[\"openapi\",{\"1\":{\"60\":2,\"63\":1,\"568\":2,\"571\":1,\"1078\":2,\"1081\":1,\"1671\":1,\"2040\":1,\"2409\":1}}],[\"opt2\",{\"1\":{\"1893\":1,\"2262\":1,\"2631\":1}}],[\"opt1\",{\"1\":{\"1893\":1,\"2262\":1,\"2631\":1}}],[\"optionresult\",{\"1\":{\"1893\":2,\"1895\":1,\"1906\":2,\"2262\":2,\"2264\":1,\"2275\":2,\"2631\":2,\"2633\":1,\"2644\":2}}],[\"option\",{\"0\":{\"1893\":1,\"2262\":1,\"2631\":1},\"1\":{\"1886\":5,\"1889\":3,\"1893\":9,\"1894\":1,\"1897\":1,\"1898\":1,\"1903\":8,\"1905\":3,\"1906\":5,\"2255\":5,\"2258\":3,\"2262\":9,\"2263\":1,\"2266\":1,\"2267\":1,\"2272\":8,\"2274\":3,\"2275\":5,\"2624\":5,\"2627\":3,\"2631\":9,\"2632\":1,\"2635\":1,\"2636\":1,\"2641\":8,\"2643\":3,\"2644\":5}}],[\"optionstub\",{\"1\":{\"1906\":3,\"2275\":3,\"2644\":3}}],[\"options=\",{\"1\":{\"1886\":1,\"1906\":2,\"1931\":1,\"2255\":1,\"2275\":2,\"2300\":1,\"2624\":1,\"2644\":2,\"2669\":1}}],[\"options\",{\"0\":{\"1931\":1,\"2300\":1,\"2669\":1},\"1\":{\"478\":1,\"988\":1,\"1503\":1,\"1895\":7,\"1897\":1,\"1932\":1,\"2264\":7,\"2266\":1,\"2301\":1,\"2633\":7,\"2635\":1,\"2670\":1}}],[\"optional\",{\"1\":{\"135\":1,\"137\":1,\"470\":1,\"643\":1,\"645\":1,\"980\":1,\"1153\":1,\"1155\":1,\"1495\":1,\"1890\":1,\"1906\":3,\"1915\":1,\"2259\":1,\"2275\":3,\"2284\":1,\"2628\":1,\"2644\":3,\"2653\":1}}],[\"opt\",{\"1\":{\"417\":2,\"927\":2,\"1442\":2}}],[\"ok\",{\"1\":{\"120\":1,\"628\":1,\"1138\":1}}],[\"of\",{\"0\":{\"459\":1,\"969\":1,\"1484\":1},\"1\":{\"70\":1,\"142\":1,\"147\":1,\"149\":1,\"150\":1,\"151\":1,\"153\":1,\"156\":1,\"157\":1,\"459\":1,\"477\":1,\"492\":1,\"496\":1,\"578\":1,\"650\":1,\"655\":1,\"657\":1,\"658\":1,\"659\":1,\"661\":1,\"664\":1,\"665\":1,\"969\":1,\"987\":1,\"1002\":1,\"1006\":1,\"1088\":1,\"1160\":1,\"1165\":1,\"1167\":1,\"1168\":1,\"1169\":1,\"1171\":1,\"1174\":1,\"1175\":1,\"1484\":1,\"1502\":1,\"1517\":1,\"1521\":1}}],[\"one\",{\"1\":{\"2687\":1,\"2689\":3,\"2702\":1,\"2704\":3,\"2717\":1,\"2719\":3}}],[\"onebot\",{\"0\":{\"488\":1,\"489\":1,\"998\":1,\"999\":1,\"1513\":1,\"1514\":1},\"1\":{\"103\":2,\"422\":7,\"471\":1,\"474\":2,\"477\":1,\"482\":2,\"486\":1,\"487\":1,\"489\":2,\"490\":12,\"491\":12,\"498\":1,\"611\":2,\"932\":7,\"981\":1,\"984\":2,\"987\":1,\"992\":2,\"996\":1,\"997\":1,\"999\":2,\"1000\":12,\"1001\":12,\"1008\":1,\"1121\":2,\"1447\":7,\"1496\":1,\"1499\":2,\"1502\":1,\"1507\":2,\"1511\":1,\"1512\":1,\"1514\":2,\"1515\":12,\"1516\":12,\"1523\":1}}],[\"only\",{\"1\":{\"540\":3,\"1050\":3,\"1565\":3,\"1888\":2,\"1891\":1,\"2257\":2,\"2260\":1,\"2626\":2,\"2629\":1}}],[\"on\",{\"0\":{\"1851\":1,\"2220\":1,\"2589\":1},\"1\":{\"58\":1,\"79\":1,\"93\":6,\"95\":2,\"96\":2,\"97\":2,\"98\":2,\"99\":2,\"100\":2,\"101\":2,\"106\":2,\"108\":1,\"127\":1,\"128\":1,\"129\":1,\"130\":1,\"136\":1,\"137\":1,\"139\":1,\"140\":2,\"203\":1,\"216\":26,\"408\":5,\"424\":1,\"425\":1,\"426\":1,\"470\":2,\"525\":3,\"526\":3,\"527\":2,\"566\":1,\"587\":1,\"601\":6,\"603\":2,\"604\":2,\"605\":2,\"606\":2,\"607\":2,\"608\":2,\"609\":2,\"614\":2,\"616\":1,\"635\":1,\"636\":1,\"637\":1,\"638\":1,\"644\":1,\"645\":1,\"647\":1,\"648\":2,\"711\":1,\"724\":26,\"916\":5,\"934\":1,\"935\":1,\"936\":1,\"980\":2,\"1035\":3,\"1036\":3,\"1037\":2,\"1076\":1,\"1097\":1,\"1111\":6,\"1113\":2,\"1114\":2,\"1115\":2,\"1116\":2,\"1117\":2,\"1118\":2,\"1119\":2,\"1124\":2,\"1126\":1,\"1145\":1,\"1146\":1,\"1147\":1,\"1148\":1,\"1154\":1,\"1155\":1,\"1157\":1,\"1158\":2,\"1223\":1,\"1236\":26,\"1431\":5,\"1449\":1,\"1450\":1,\"1451\":1,\"1495\":2,\"1550\":3,\"1551\":3,\"1552\":2,\"1802\":26,\"1866\":1,\"1883\":1,\"2171\":26,\"2235\":1,\"2252\":1,\"2540\":26,\"2604\":1,\"2621\":1,\"2679\":1,\"2680\":2,\"2684\":2,\"2685\":2,\"2690\":4,\"2694\":1,\"2695\":2,\"2699\":2,\"2700\":2,\"2705\":4,\"2709\":1,\"2710\":2,\"2714\":2,\"2715\":2,\"2720\":4}}],[\"说明\",{\"1\":{\"60\":1,\"61\":1,\"62\":1,\"63\":1,\"64\":1,\"65\":1,\"66\":1,\"67\":1,\"68\":1,\"69\":1,\"72\":1,\"73\":1,\"74\":1,\"75\":1,\"76\":1,\"77\":1,\"142\":1,\"143\":1,\"144\":1,\"145\":1,\"146\":1,\"147\":1,\"148\":1,\"149\":1,\"150\":1,\"151\":1,\"152\":1,\"153\":1,\"154\":1,\"155\":1,\"156\":1,\"157\":1,\"159\":1,\"160\":1,\"161\":1,\"163\":1,\"164\":1,\"165\":1,\"166\":1,\"167\":1,\"168\":1,\"169\":1,\"170\":1,\"171\":1,\"172\":1,\"173\":1,\"174\":1,\"175\":1,\"177\":1,\"178\":1,\"179\":1,\"180\":1,\"181\":1,\"182\":1,\"183\":1,\"184\":1,\"185\":1,\"186\":1,\"187\":1,\"188\":1,\"189\":1,\"190\":1,\"191\":1,\"192\":1,\"193\":1,\"194\":1,\"196\":1,\"197\":1,\"198\":1,\"199\":1,\"200\":1,\"201\":1,\"202\":1,\"203\":1,\"204\":1,\"205\":1,\"206\":1,\"207\":1,\"208\":1,\"209\":1,\"210\":1,\"211\":1,\"212\":1,\"213\":1,\"214\":1,\"217\":1,\"218\":1,\"219\":1,\"220\":1,\"221\":1,\"222\":1,\"223\":1,\"224\":1,\"225\":1,\"227\":1,\"228\":1,\"230\":1,\"231\":1,\"233\":1,\"234\":1,\"235\":1,\"236\":1,\"237\":1,\"238\":1,\"239\":1,\"240\":1,\"241\":1,\"242\":1,\"243\":1,\"244\":1,\"245\":1,\"246\":1,\"247\":1,\"249\":1,\"250\":1,\"251\":1,\"252\":1,\"253\":1,\"254\":1,\"255\":1,\"256\":1,\"257\":1,\"258\":1,\"259\":1,\"260\":1,\"261\":1,\"262\":1,\"263\":1,\"266\":1,\"274\":1,\"284\":1,\"285\":1,\"286\":1,\"288\":1,\"289\":1,\"290\":1,\"291\":1,\"292\":1,\"293\":1,\"295\":1,\"296\":1,\"297\":1,\"298\":1,\"299\":1,\"300\":1,\"301\":1,\"302\":1,\"303\":1,\"304\":1,\"305\":1,\"306\":1,\"307\":1,\"308\":1,\"309\":1,\"310\":1,\"311\":1,\"312\":1,\"313\":1,\"314\":1,\"315\":1,\"316\":1,\"317\":1,\"318\":1,\"319\":1,\"320\":1,\"321\":1,\"322\":1,\"323\":1,\"324\":1,\"325\":1,\"326\":1,\"327\":1,\"329\":1,\"330\":1,\"331\":1,\"332\":1,\"333\":1,\"334\":1,\"335\":1,\"336\":1,\"337\":1,\"338\":1,\"339\":1,\"340\":1,\"341\":1,\"342\":1,\"343\":1,\"344\":1,\"345\":1,\"347\":1,\"348\":1,\"349\":1,\"351\":1,\"352\":1,\"353\":1,\"354\":1,\"355\":1,\"356\":1,\"357\":1,\"358\":1,\"359\":1,\"360\":1,\"361\":1,\"362\":1,\"364\":1,\"365\":1,\"366\":1,\"367\":1,\"368\":1,\"369\":1,\"370\":1,\"371\":1,\"373\":1,\"376\":1,\"377\":1,\"378\":1,\"379\":1,\"382\":1,\"383\":1,\"384\":1,\"385\":1,\"386\":1,\"387\":1,\"388\":1,\"389\":1,\"390\":1,\"391\":1,\"392\":1,\"393\":1,\"394\":1,\"395\":1,\"396\":1,\"398\":1,\"399\":1,\"400\":1,\"401\":1,\"402\":1,\"403\":1,\"404\":1,\"405\":1,\"406\":1,\"407\":1,\"408\":1,\"409\":1,\"410\":1,\"411\":1,\"412\":1,\"413\":1,\"415\":1,\"568\":1,\"569\":1,\"570\":1,\"571\":1,\"572\":1,\"573\":1,\"574\":1,\"575\":1,\"576\":1,\"577\":1,\"580\":1,\"581\":1,\"582\":1,\"583\":1,\"584\":1,\"585\":1,\"650\":1,\"651\":1,\"652\":1,\"653\":1,\"654\":1,\"655\":1,\"656\":1,\"657\":1,\"658\":1,\"659\":1,\"660\":1,\"661\":1,\"662\":1,\"663\":1,\"664\":1,\"665\":1,\"667\":1,\"668\":1,\"669\":1,\"671\":1,\"672\":1,\"673\":1,\"674\":1,\"675\":1,\"676\":1,\"677\":1,\"678\":1,\"679\":1,\"680\":1,\"681\":1,\"682\":1,\"683\":1,\"685\":1,\"686\":1,\"687\":1,\"688\":1,\"689\":1,\"690\":1,\"691\":1,\"692\":1,\"693\":1,\"694\":1,\"695\":1,\"696\":1,\"697\":1,\"698\":1,\"699\":1,\"700\":1,\"701\":1,\"702\":1,\"704\":1,\"705\":1,\"706\":1,\"707\":1,\"708\":1,\"709\":1,\"710\":1,\"711\":1,\"712\":1,\"713\":1,\"714\":1,\"715\":1,\"716\":1,\"717\":1,\"718\":1,\"719\":1,\"720\":1,\"721\":1,\"722\":1,\"725\":1,\"726\":1,\"727\":1,\"728\":1,\"729\":1,\"730\":1,\"731\":1,\"732\":1,\"733\":1,\"735\":1,\"736\":1,\"738\":1,\"739\":1,\"741\":1,\"742\":1,\"743\":1,\"744\":1,\"745\":1,\"746\":1,\"747\":1,\"748\":1,\"749\":1,\"750\":1,\"751\":1,\"752\":1,\"753\":1,\"754\":1,\"755\":1,\"757\":1,\"758\":1,\"759\":1,\"760\":1,\"761\":1,\"762\":1,\"763\":1,\"764\":1,\"765\":1,\"766\":1,\"767\":1,\"768\":1,\"769\":1,\"770\":1,\"771\":1,\"774\":1,\"782\":1,\"792\":1,\"793\":1,\"794\":1,\"796\":1,\"797\":1,\"798\":1,\"799\":1,\"800\":1,\"801\":1,\"803\":1,\"804\":1,\"805\":1,\"806\":1,\"807\":1,\"808\":1,\"809\":1,\"810\":1,\"811\":1,\"812\":1,\"813\":1,\"814\":1,\"815\":1,\"816\":1,\"817\":1,\"818\":1,\"819\":1,\"820\":1,\"821\":1,\"822\":1,\"823\":1,\"824\":1,\"825\":1,\"826\":1,\"827\":1,\"828\":1,\"829\":1,\"830\":1,\"831\":1,\"832\":1,\"833\":1,\"834\":1,\"835\":1,\"837\":1,\"838\":1,\"839\":1,\"840\":1,\"841\":1,\"842\":1,\"843\":1,\"844\":1,\"845\":1,\"846\":1,\"847\":1,\"848\":1,\"849\":1,\"850\":1,\"851\":1,\"852\":1,\"853\":1,\"855\":1,\"856\":1,\"857\":1,\"859\":1,\"860\":1,\"861\":1,\"862\":1,\"863\":1,\"864\":1,\"865\":1,\"866\":1,\"867\":1,\"868\":1,\"869\":1,\"870\":1,\"872\":1,\"873\":1,\"874\":1,\"875\":1,\"876\":1,\"877\":1,\"878\":1,\"879\":1,\"881\":1,\"884\":1,\"885\":1,\"886\":1,\"887\":1,\"890\":1,\"891\":1,\"892\":1,\"893\":1,\"894\":1,\"895\":1,\"896\":1,\"897\":1,\"898\":1,\"899\":1,\"900\":1,\"901\":1,\"902\":1,\"903\":1,\"904\":1,\"906\":1,\"907\":1,\"908\":1,\"909\":1,\"910\":1,\"911\":1,\"912\":1,\"913\":1,\"914\":1,\"915\":1,\"916\":1,\"917\":1,\"919\":1,\"920\":1,\"921\":1,\"922\":1,\"923\":1,\"925\":1,\"1078\":1,\"1079\":1,\"1080\":1,\"1081\":1,\"1082\":1,\"1083\":1,\"1084\":1,\"1085\":1,\"1086\":1,\"1087\":1,\"1090\":1,\"1091\":1,\"1092\":1,\"1093\":1,\"1094\":1,\"1095\":1,\"1160\":1,\"1161\":1,\"1162\":1,\"1163\":1,\"1164\":1,\"1165\":1,\"1166\":1,\"1167\":1,\"1168\":1,\"1169\":1,\"1170\":1,\"1171\":1,\"1172\":1,\"1173\":1,\"1174\":1,\"1175\":1,\"1177\":1,\"1178\":1,\"1179\":1,\"1181\":1,\"1182\":1,\"1183\":1,\"1184\":1,\"1185\":1,\"1186\":1,\"1187\":1,\"1188\":1,\"1189\":1,\"1190\":1,\"1191\":1,\"1192\":1,\"1193\":1,\"1195\":1,\"1196\":1,\"1197\":1,\"1198\":1,\"1199\":1,\"1200\":1,\"1201\":1,\"1202\":1,\"1203\":1,\"1204\":1,\"1205\":1,\"1206\":1,\"1207\":1,\"1208\":1,\"1209\":1,\"1210\":1,\"1211\":1,\"1212\":1,\"1213\":1,\"1214\":1,\"1216\":1,\"1217\":1,\"1218\":1,\"1219\":1,\"1220\":1,\"1221\":1,\"1222\":1,\"1223\":1,\"1224\":1,\"1225\":1,\"1226\":1,\"1227\":1,\"1228\":1,\"1229\":1,\"1230\":1,\"1231\":1,\"1232\":1,\"1233\":1,\"1234\":1,\"1237\":1,\"1238\":1,\"1239\":1,\"1240\":1,\"1241\":1,\"1242\":1,\"1243\":1,\"1244\":1,\"1245\":1,\"1247\":1,\"1248\":1,\"1250\":1,\"1251\":1,\"1253\":1,\"1254\":1,\"1255\":1,\"1256\":1,\"1257\":1,\"1258\":1,\"1259\":1,\"1260\":1,\"1261\":1,\"1262\":1,\"1263\":1,\"1264\":1,\"1265\":1,\"1266\":1,\"1267\":1,\"1268\":1,\"1270\":1,\"1271\":1,\"1272\":1,\"1273\":1,\"1274\":1,\"1275\":1,\"1276\":1,\"1277\":1,\"1278\":1,\"1279\":1,\"1280\":1,\"1281\":1,\"1282\":1,\"1283\":1,\"1284\":1,\"1287\":1,\"1294\":1,\"1304\":1,\"1305\":1,\"1308\":1,\"1309\":1,\"1310\":1,\"1311\":1,\"1312\":1,\"1313\":1,\"1315\":1,\"1316\":1,\"1317\":1,\"1318\":1,\"1319\":1,\"1320\":1,\"1321\":1,\"1322\":1,\"1323\":1,\"1324\":1,\"1325\":1,\"1326\":1,\"1327\":1,\"1328\":1,\"1329\":1,\"1330\":1,\"1331\":1,\"1332\":1,\"1333\":1,\"1334\":1,\"1335\":1,\"1336\":1,\"1337\":1,\"1338\":1,\"1339\":1,\"1340\":1,\"1341\":1,\"1342\":1,\"1343\":1,\"1344\":1,\"1345\":1,\"1346\":1,\"1347\":1,\"1348\":1,\"1349\":1,\"1350\":1,\"1352\":1,\"1353\":1,\"1354\":1,\"1355\":1,\"1356\":1,\"1357\":1,\"1358\":1,\"1359\":1,\"1360\":1,\"1361\":1,\"1362\":1,\"1363\":1,\"1364\":1,\"1365\":1,\"1366\":1,\"1367\":1,\"1368\":1,\"1370\":1,\"1371\":1,\"1372\":1,\"1374\":1,\"1375\":1,\"1376\":1,\"1377\":1,\"1378\":1,\"1379\":1,\"1380\":1,\"1381\":1,\"1382\":1,\"1383\":1,\"1384\":1,\"1385\":1,\"1387\":1,\"1388\":1,\"1389\":1,\"1390\":1,\"1391\":1,\"1392\":1,\"1393\":1,\"1394\":1,\"1396\":1,\"1399\":1,\"1400\":1,\"1401\":1,\"1402\":1,\"1405\":1,\"1406\":1,\"1407\":1,\"1408\":1,\"1409\":1,\"1410\":1,\"1411\":1,\"1412\":1,\"1413\":1,\"1414\":1,\"1415\":1,\"1416\":1,\"1417\":1,\"1418\":1,\"1419\":1,\"1421\":1,\"1422\":1,\"1423\":1,\"1424\":1,\"1425\":1,\"1426\":1,\"1427\":1,\"1428\":1,\"1429\":1,\"1430\":1,\"1431\":1,\"1432\":1,\"1434\":1,\"1435\":1,\"1436\":1,\"1437\":1,\"1438\":1,\"1440\":1,\"1570\":1,\"1571\":1,\"1572\":1,\"1573\":1,\"1574\":1,\"1575\":1,\"1576\":1,\"1577\":1,\"1578\":1,\"1579\":1,\"1580\":1,\"1581\":1,\"1582\":1,\"1583\":1,\"1584\":1,\"1585\":1,\"1586\":1,\"1587\":1,\"1588\":1,\"1589\":1,\"1590\":1,\"1591\":1,\"1592\":1,\"1593\":1,\"1594\":1,\"1595\":1,\"1596\":1,\"1597\":1,\"1598\":1,\"1599\":1,\"1601\":1,\"1602\":1,\"1603\":1,\"1604\":1,\"1606\":1,\"1607\":1,\"1608\":1,\"1609\":1,\"1610\":1,\"1611\":1,\"1612\":1,\"1613\":1,\"1614\":1,\"1615\":1,\"1616\":1,\"1617\":1,\"1618\":1,\"1619\":1,\"1620\":1,\"1621\":1,\"1622\":1,\"1623\":1,\"1631\":1,\"1632\":1,\"1634\":1,\"1635\":1,\"1640\":1,\"1641\":1,\"1648\":1,\"1649\":1,\"1650\":1,\"1656\":1,\"1660\":1,\"1670\":1,\"1671\":1,\"1672\":1,\"1673\":1,\"1674\":1,\"1675\":1,\"1676\":1,\"1677\":1,\"1678\":1,\"1679\":1,\"1680\":1,\"1681\":1,\"1682\":1,\"1683\":1,\"1684\":1,\"1685\":1,\"1688\":1,\"1689\":1,\"1702\":1,\"1707\":1,\"1708\":1,\"1709\":1,\"1710\":1,\"1711\":1,\"1712\":1,\"1713\":1,\"1714\":1,\"1715\":1,\"1716\":1,\"1717\":1,\"1718\":1,\"1719\":1,\"1720\":1,\"1730\":1,\"1731\":1,\"1732\":1,\"1733\":1,\"1734\":1,\"1736\":1,\"1737\":1,\"1738\":1,\"1739\":1,\"1740\":1,\"1741\":1,\"1742\":1,\"1743\":1,\"1744\":1,\"1745\":1,\"1746\":1,\"1747\":1,\"1748\":1,\"1749\":1,\"1750\":1,\"1751\":1,\"1752\":1,\"1753\":1,\"1754\":1,\"1755\":1,\"1756\":1,\"1757\":1,\"1759\":1,\"1760\":1,\"1761\":1,\"1762\":1,\"1763\":1,\"1765\":1,\"1766\":1,\"1767\":1,\"1768\":1,\"1769\":1,\"1770\":1,\"1771\":1,\"1772\":1,\"1773\":1,\"1774\":1,\"1775\":1,\"1776\":1,\"1779\":1,\"1780\":1,\"1790\":1,\"1792\":1,\"1803\":1,\"1804\":1,\"1805\":1,\"1806\":1,\"1807\":1,\"1809\":1,\"1810\":1,\"1811\":1,\"1812\":1,\"1813\":1,\"1814\":1,\"1815\":1,\"1816\":1,\"1817\":1,\"1819\":1,\"1820\":1,\"1821\":1,\"1822\":1,\"1823\":1,\"1824\":1,\"1825\":1,\"1832\":1,\"1833\":1,\"1834\":1,\"1835\":1,\"1836\":1,\"1837\":1,\"1838\":1,\"1839\":1,\"1840\":1,\"1841\":1,\"1842\":1,\"1843\":1,\"1844\":1,\"1845\":1,\"1846\":1,\"1847\":1,\"1848\":1,\"1849\":1,\"1850\":1,\"1852\":1,\"1853\":1,\"1854\":1,\"1855\":1,\"1856\":1,\"1857\":1,\"1858\":1,\"1859\":1,\"1860\":1,\"1861\":1,\"1862\":1,\"1863\":1,\"1864\":1,\"1865\":1,\"1866\":1,\"1867\":1,\"1868\":1,\"1870\":1,\"1871\":1,\"1873\":1,\"1874\":1,\"1875\":1,\"1876\":1,\"1877\":1,\"1878\":1,\"1879\":1,\"1880\":1,\"1881\":1,\"1882\":1,\"1883\":1,\"1884\":1,\"1885\":1,\"1887\":1,\"1939\":1,\"1940\":1,\"1941\":1,\"1942\":1,\"1943\":1,\"1944\":1,\"1945\":1,\"1946\":1,\"1947\":1,\"1948\":1,\"1949\":1,\"1950\":1,\"1951\":1,\"1952\":1,\"1953\":1,\"1954\":1,\"1955\":1,\"1956\":1,\"1957\":1,\"1958\":1,\"1959\":1,\"1960\":1,\"1961\":1,\"1962\":1,\"1963\":1,\"1964\":1,\"1965\":1,\"1966\":1,\"1967\":1,\"1968\":1,\"1970\":1,\"1971\":1,\"1972\":1,\"1973\":1,\"1975\":1,\"1976\":1,\"1977\":1,\"1978\":1,\"1979\":1,\"1980\":1,\"1981\":1,\"1982\":1,\"1983\":1,\"1984\":1,\"1985\":1,\"1986\":1,\"1987\":1,\"1988\":1,\"1989\":1,\"1990\":1,\"1991\":1,\"1992\":1,\"2000\":1,\"2001\":1,\"2003\":1,\"2004\":1,\"2009\":1,\"2010\":1,\"2017\":1,\"2018\":1,\"2019\":1,\"2025\":1,\"2029\":1,\"2039\":1,\"2040\":1,\"2041\":1,\"2042\":1,\"2043\":1,\"2044\":1,\"2045\":1,\"2046\":1,\"2047\":1,\"2048\":1,\"2049\":1,\"2050\":1,\"2051\":1,\"2052\":1,\"2053\":1,\"2054\":1,\"2057\":1,\"2058\":1,\"2071\":1,\"2076\":1,\"2077\":1,\"2078\":1,\"2079\":1,\"2080\":1,\"2081\":1,\"2082\":1,\"2083\":1,\"2084\":1,\"2085\":1,\"2086\":1,\"2087\":1,\"2088\":1,\"2089\":1,\"2099\":1,\"2100\":1,\"2101\":1,\"2102\":1,\"2103\":1,\"2105\":1,\"2106\":1,\"2107\":1,\"2108\":1,\"2109\":1,\"2110\":1,\"2111\":1,\"2112\":1,\"2113\":1,\"2114\":1,\"2115\":1,\"2116\":1,\"2117\":1,\"2118\":1,\"2119\":1,\"2120\":1,\"2121\":1,\"2122\":1,\"2123\":1,\"2124\":1,\"2125\":1,\"2126\":1,\"2128\":1,\"2129\":1,\"2130\":1,\"2131\":1,\"2132\":1,\"2134\":1,\"2135\":1,\"2136\":1,\"2137\":1,\"2138\":1,\"2139\":1,\"2140\":1,\"2141\":1,\"2142\":1,\"2143\":1,\"2144\":1,\"2145\":1,\"2148\":1,\"2149\":1,\"2159\":1,\"2161\":1,\"2172\":1,\"2173\":1,\"2174\":1,\"2175\":1,\"2176\":1,\"2178\":1,\"2179\":1,\"2180\":1,\"2181\":1,\"2182\":1,\"2183\":1,\"2184\":1,\"2185\":1,\"2186\":1,\"2188\":1,\"2189\":1,\"2190\":1,\"2191\":1,\"2192\":1,\"2193\":1,\"2194\":1,\"2201\":1,\"2202\":1,\"2203\":1,\"2204\":1,\"2205\":1,\"2206\":1,\"2207\":1,\"2208\":1,\"2209\":1,\"2210\":1,\"2211\":1,\"2212\":1,\"2213\":1,\"2214\":1,\"2215\":1,\"2216\":1,\"2217\":1,\"2218\":1,\"2219\":1,\"2221\":1,\"2222\":1,\"2223\":1,\"2224\":1,\"2225\":1,\"2226\":1,\"2227\":1,\"2228\":1,\"2229\":1,\"2230\":1,\"2231\":1,\"2232\":1,\"2233\":1,\"2234\":1,\"2235\":1,\"2236\":1,\"2237\":1,\"2239\":1,\"2240\":1,\"2242\":1,\"2243\":1,\"2244\":1,\"2245\":1,\"2246\":1,\"2247\":1,\"2248\":1,\"2249\":1,\"2250\":1,\"2251\":1,\"2252\":1,\"2253\":1,\"2254\":1,\"2256\":1,\"2308\":1,\"2309\":1,\"2310\":1,\"2311\":1,\"2312\":1,\"2313\":1,\"2314\":1,\"2315\":1,\"2316\":1,\"2317\":1,\"2318\":1,\"2320\":1,\"2321\":1,\"2322\":1,\"2323\":1,\"2324\":1,\"2325\":1,\"2326\":1,\"2327\":1,\"2328\":1,\"2329\":1,\"2330\":1,\"2331\":1,\"2332\":1,\"2333\":1,\"2334\":1,\"2335\":1,\"2336\":1,\"2337\":1,\"2338\":1,\"2339\":1,\"2340\":1,\"2341\":1,\"2342\":1,\"2344\":1,\"2345\":1,\"2346\":1,\"2347\":1,\"2348\":1,\"2349\":1,\"2350\":1,\"2351\":1,\"2352\":1,\"2353\":1,\"2354\":1,\"2355\":1,\"2356\":1,\"2357\":1,\"2358\":1,\"2359\":1,\"2360\":1,\"2361\":1,\"2369\":1,\"2370\":1,\"2372\":1,\"2373\":1,\"2378\":1,\"2379\":1,\"2386\":1,\"2387\":1,\"2388\":1,\"2394\":1,\"2398\":1,\"2408\":1,\"2409\":1,\"2410\":1,\"2411\":1,\"2412\":1,\"2413\":1,\"2414\":1,\"2415\":1,\"2416\":1,\"2417\":1,\"2418\":1,\"2419\":1,\"2420\":1,\"2421\":1,\"2422\":1,\"2423\":1,\"2426\":1,\"2427\":1,\"2440\":1,\"2445\":1,\"2446\":1,\"2447\":1,\"2448\":1,\"2449\":1,\"2457\":1,\"2458\":1,\"2459\":1,\"2460\":1,\"2461\":1,\"2462\":1,\"2463\":1,\"2464\":1,\"2465\":1,\"2466\":1,\"2467\":1,\"2468\":1,\"2469\":1,\"2470\":1,\"2471\":1,\"2472\":1,\"2473\":1,\"2474\":1,\"2475\":1,\"2476\":1,\"2477\":1,\"2480\":1,\"2481\":1,\"2483\":1,\"2484\":1,\"2485\":1,\"2486\":1,\"2487\":1,\"2488\":1,\"2489\":1,\"2490\":1,\"2491\":1,\"2492\":1,\"2493\":1,\"2494\":1,\"2495\":1,\"2497\":1,\"2498\":1,\"2499\":1,\"2500\":1,\"2501\":1,\"2503\":1,\"2504\":1,\"2505\":1,\"2506\":1,\"2507\":1,\"2508\":1,\"2509\":1,\"2510\":1,\"2511\":1,\"2512\":1,\"2513\":1,\"2514\":1,\"2517\":1,\"2518\":1,\"2528\":1,\"2530\":1,\"2541\":1,\"2542\":1,\"2543\":1,\"2544\":1,\"2545\":1,\"2547\":1,\"2548\":1,\"2549\":1,\"2550\":1,\"2551\":1,\"2552\":1,\"2553\":1,\"2554\":1,\"2555\":1,\"2557\":1,\"2558\":1,\"2559\":1,\"2560\":1,\"2561\":1,\"2562\":1,\"2563\":1,\"2570\":1,\"2571\":1,\"2572\":1,\"2573\":1,\"2574\":1,\"2575\":1,\"2576\":1,\"2577\":1,\"2578\":1,\"2579\":1,\"2580\":1,\"2581\":1,\"2582\":1,\"2583\":1,\"2584\":1,\"2585\":1,\"2586\":1,\"2587\":1,\"2588\":1,\"2590\":1,\"2591\":1,\"2592\":1,\"2593\":1,\"2594\":1,\"2595\":1,\"2596\":1,\"2597\":1,\"2598\":1,\"2599\":1,\"2600\":1,\"2601\":1,\"2602\":1,\"2603\":1,\"2604\":1,\"2605\":1,\"2606\":1,\"2608\":1,\"2609\":1,\"2611\":1,\"2612\":1,\"2613\":1,\"2614\":1,\"2615\":1,\"2616\":1,\"2617\":1,\"2618\":1,\"2619\":1,\"2620\":1,\"2621\":1,\"2622\":1,\"2623\":1,\"2625\":1}}],[\"||\",{\"1\":{\"2690\":4,\"2705\":4,\"2720\":4}}],[\"|\",{\"1\":{\"60\":1,\"61\":1,\"62\":1,\"65\":1,\"66\":1,\"67\":1,\"68\":1,\"73\":1,\"74\":1,\"75\":1,\"76\":1,\"110\":3,\"111\":2,\"152\":1,\"158\":2,\"160\":1,\"163\":3,\"165\":3,\"169\":1,\"170\":1,\"195\":13,\"222\":1,\"224\":1,\"241\":1,\"242\":14,\"244\":2,\"245\":2,\"248\":1,\"249\":1,\"250\":1,\"251\":5,\"252\":3,\"253\":4,\"254\":4,\"255\":4,\"256\":4,\"257\":4,\"259\":4,\"261\":4,\"262\":4,\"265\":4,\"267\":2,\"268\":2,\"271\":2,\"272\":2,\"278\":4,\"292\":2,\"295\":1,\"296\":1,\"297\":2,\"299\":1,\"300\":1,\"303\":1,\"305\":1,\"319\":8,\"326\":1,\"329\":1,\"330\":1,\"331\":1,\"332\":1,\"333\":2,\"335\":2,\"347\":1,\"349\":2,\"353\":1,\"355\":1,\"357\":1,\"360\":2,\"361\":3,\"363\":10,\"364\":1,\"365\":2,\"367\":1,\"375\":1,\"376\":1,\"378\":1,\"386\":1,\"400\":1,\"401\":1,\"408\":4,\"411\":1,\"418\":2,\"447\":12,\"513\":3,\"568\":1,\"569\":1,\"570\":1,\"573\":1,\"574\":1,\"575\":1,\"576\":1,\"581\":1,\"582\":1,\"583\":1,\"584\":1,\"618\":3,\"619\":2,\"660\":1,\"666\":2,\"668\":1,\"671\":3,\"673\":3,\"677\":1,\"678\":1,\"703\":13,\"730\":1,\"732\":1,\"749\":1,\"750\":14,\"752\":2,\"753\":2,\"756\":1,\"757\":1,\"758\":1,\"759\":5,\"760\":3,\"761\":4,\"762\":4,\"763\":4,\"764\":4,\"765\":4,\"767\":4,\"769\":4,\"770\":4,\"773\":4,\"775\":2,\"776\":2,\"779\":2,\"780\":2,\"786\":4,\"800\":2,\"803\":1,\"804\":1,\"805\":2,\"807\":1,\"808\":1,\"811\":1,\"813\":1,\"827\":8,\"834\":1,\"837\":1,\"838\":1,\"839\":1,\"840\":1,\"841\":2,\"843\":2,\"855\":1,\"857\":2,\"861\":1,\"863\":1,\"865\":1,\"868\":2,\"869\":3,\"871\":10,\"872\":1,\"873\":2,\"875\":1,\"883\":1,\"884\":1,\"886\":1,\"894\":1,\"908\":1,\"909\":1,\"916\":4,\"921\":1,\"928\":2,\"957\":12,\"1023\":3,\"1078\":1,\"1079\":1,\"1080\":1,\"1083\":1,\"1084\":1,\"1085\":1,\"1086\":1,\"1091\":1,\"1092\":1,\"1093\":1,\"1094\":1,\"1128\":3,\"1129\":2,\"1170\":1,\"1176\":2,\"1178\":1,\"1181\":3,\"1183\":3,\"1187\":1,\"1188\":1,\"1215\":13,\"1242\":1,\"1244\":1,\"1262\":1,\"1263\":14,\"1265\":2,\"1266\":2,\"1269\":1,\"1270\":1,\"1271\":1,\"1272\":5,\"1273\":3,\"1274\":4,\"1275\":4,\"1276\":4,\"1277\":4,\"1278\":4,\"1280\":4,\"1282\":4,\"1283\":4,\"1286\":4,\"1288\":2,\"1289\":2,\"1292\":2,\"1293\":2,\"1298\":4,\"1312\":2,\"1315\":1,\"1317\":1,\"1318\":1,\"1319\":1,\"1320\":1,\"1323\":2,\"1324\":1,\"1326\":1,\"1340\":8,\"1347\":1,\"1349\":1,\"1352\":1,\"1353\":2,\"1355\":2,\"1356\":1,\"1357\":1,\"1358\":1,\"1370\":1,\"1372\":2,\"1376\":1,\"1378\":1,\"1380\":1,\"1383\":2,\"1384\":3,\"1386\":10,\"1387\":1,\"1388\":2,\"1390\":1,\"1398\":1,\"1399\":1,\"1401\":1,\"1409\":1,\"1423\":1,\"1424\":1,\"1431\":4,\"1436\":1,\"1443\":2,\"1472\":12,\"1538\":3,\"1576\":2,\"1602\":1,\"1606\":1,\"1607\":1,\"1608\":1,\"1609\":1,\"1610\":1,\"1611\":1,\"1612\":1,\"1613\":1,\"1614\":1,\"1624\":2,\"1629\":1,\"1632\":2,\"1633\":1,\"1637\":1,\"1644\":1,\"1652\":3,\"1659\":3,\"1671\":1,\"1672\":1,\"1673\":1,\"1676\":1,\"1678\":1,\"1679\":1,\"1688\":3,\"1692\":1,\"1698\":3,\"1704\":3,\"1723\":4,\"1724\":2,\"1725\":2,\"1728\":6,\"1729\":1,\"1739\":1,\"1742\":1,\"1753\":3,\"1767\":1,\"1769\":1,\"1770\":1,\"1779\":3,\"1783\":1,\"1795\":1,\"1803\":1,\"1804\":1,\"1809\":2,\"1814\":1,\"1817\":1,\"1819\":2,\"1824\":1,\"1827\":2,\"1829\":1,\"1836\":1,\"1837\":1,\"1838\":1,\"1839\":1,\"1841\":1,\"1848\":1,\"1853\":1,\"1854\":1,\"1855\":1,\"1856\":9,\"1857\":9,\"1858\":9,\"1859\":9,\"1860\":9,\"1861\":10,\"1862\":10,\"1863\":10,\"1864\":9,\"1865\":14,\"1866\":13,\"1867\":10,\"1868\":10,\"1869\":10,\"1870\":14,\"1871\":13,\"1872\":9,\"1873\":9,\"1874\":9,\"1875\":9,\"1876\":9,\"1877\":9,\"1878\":10,\"1879\":10,\"1880\":10,\"1881\":9,\"1882\":14,\"1883\":13,\"1884\":10,\"1885\":10,\"1945\":2,\"1971\":1,\"1975\":1,\"1976\":1,\"1977\":1,\"1978\":1,\"1979\":1,\"1980\":1,\"1981\":1,\"1982\":1,\"1983\":1,\"1993\":2,\"1998\":1,\"2001\":2,\"2002\":1,\"2006\":1,\"2013\":1,\"2021\":3,\"2028\":3,\"2040\":1,\"2041\":1,\"2042\":1,\"2045\":1,\"2047\":1,\"2048\":1,\"2057\":3,\"2061\":1,\"2067\":3,\"2073\":3,\"2092\":4,\"2093\":2,\"2094\":2,\"2097\":6,\"2098\":1,\"2108\":1,\"2111\":1,\"2122\":3,\"2136\":1,\"2138\":1,\"2139\":1,\"2148\":3,\"2152\":1,\"2164\":1,\"2172\":1,\"2173\":1,\"2178\":2,\"2183\":1,\"2186\":1,\"2188\":2,\"2193\":1,\"2196\":2,\"2198\":1,\"2205\":1,\"2206\":1,\"2207\":1,\"2208\":1,\"2210\":1,\"2217\":1,\"2222\":1,\"2223\":1,\"2224\":1,\"2225\":9,\"2226\":9,\"2227\":9,\"2228\":9,\"2229\":9,\"2230\":10,\"2231\":10,\"2232\":10,\"2233\":9,\"2234\":14,\"2235\":13,\"2236\":10,\"2237\":10,\"2238\":10,\"2239\":14,\"2240\":13,\"2241\":9,\"2242\":9,\"2243\":9,\"2244\":9,\"2245\":9,\"2246\":9,\"2247\":10,\"2248\":10,\"2249\":10,\"2250\":9,\"2251\":14,\"2252\":13,\"2253\":10,\"2254\":10,\"2326\":2,\"2340\":1,\"2344\":1,\"2345\":1,\"2346\":1,\"2347\":1,\"2348\":1,\"2349\":1,\"2350\":1,\"2351\":1,\"2352\":1,\"2362\":2,\"2367\":1,\"2370\":2,\"2371\":1,\"2375\":1,\"2382\":1,\"2390\":3,\"2397\":3,\"2409\":1,\"2410\":1,\"2411\":1,\"2414\":1,\"2416\":1,\"2417\":1,\"2426\":3,\"2430\":1,\"2436\":3,\"2442\":3,\"2452\":4,\"2453\":2,\"2454\":2,\"2473\":3,\"2478\":6,\"2479\":1,\"2486\":1,\"2489\":1,\"2505\":1,\"2507\":1,\"2508\":1,\"2517\":3,\"2521\":1,\"2533\":1,\"2541\":1,\"2542\":1,\"2547\":2,\"2552\":1,\"2555\":1,\"2557\":2,\"2562\":1,\"2565\":2,\"2567\":1,\"2574\":1,\"2575\":1,\"2576\":1,\"2577\":1,\"2579\":1,\"2586\":1,\"2591\":1,\"2592\":1,\"2593\":1,\"2594\":9,\"2595\":9,\"2596\":9,\"2597\":9,\"2598\":9,\"2599\":10,\"2600\":10,\"2601\":10,\"2602\":9,\"2603\":14,\"2604\":13,\"2605\":10,\"2606\":10,\"2607\":10,\"2608\":14,\"2609\":13,\"2610\":9,\"2611\":9,\"2612\":9,\"2613\":9,\"2614\":9,\"2615\":9,\"2616\":10,\"2617\":10,\"2618\":10,\"2619\":9,\"2620\":14,\"2621\":13,\"2622\":10,\"2623\":10,\"2679\":9,\"2694\":9,\"2709\":9}}],[\"自加\",{\"1\":{\"542\":1,\"1052\":1,\"1567\":1}}],[\"自研的\",{\"1\":{\"501\":1,\"1011\":1,\"1526\":1}}],[\"自动执行命令执行器\",{\"1\":{\"1902\":1,\"2271\":1,\"2640\":1}}],[\"自动化测试框架\",{\"0\":{\"485\":1,\"995\":1,\"1510\":1},\"1\":{\"485\":2,\"995\":2,\"1510\":2}}],[\"自动化构建和部署\",{\"1\":{\"483\":1,\"993\":1,\"1508\":1}}],[\"自动生成的\",{\"1\":{\"2679\":1,\"2694\":1,\"2709\":1}}],[\"自动生成\",{\"1\":{\"58\":1,\"566\":1,\"1076\":1,\"2679\":1,\"2694\":1,\"2709\":1}}],[\"自行处理数据的传输形式\",{\"1\":{\"474\":1,\"984\":1,\"1499\":1}}],[\"自行将数据转为平台所需要的格式\",{\"1\":{\"474\":1,\"984\":1,\"1499\":1}}],[\"自定义类型构造\",{\"1\":{\"536\":1,\"1046\":1,\"1561\":1}}],[\"自定义一个\",{\"1\":{\"466\":1,\"976\":1,\"1491\":1}}],[\"自定义插件配置目录\",{\"1\":{\"441\":1,\"951\":1,\"1466\":1}}],[\"自定义插件数据目录\",{\"1\":{\"440\":1,\"950\":1,\"1465\":1}}],[\"自定义插件缓存目录\",{\"1\":{\"439\":1,\"949\":1,\"1464\":1}}],[\"自定义配置目录\",{\"1\":{\"438\":1,\"948\":1,\"1463\":1}}],[\"自定义数据目录\",{\"1\":{\"437\":1,\"947\":1,\"1462\":1}}],[\"自定义缓存目录\",{\"1\":{\"436\":1,\"946\":1,\"1461\":1}}],[\"自定义日志输出\",{\"0\":{\"418\":1,\"928\":1,\"1443\":1}}],[\"自定义日志\",{\"1\":{\"226\":1,\"734\":1,\"1246\":1}}],[\"自定义\",{\"1\":{\"53\":2,\"226\":1,\"561\":2,\"734\":1,\"1071\":2,\"1246\":1}}],[\"where\",{\"1\":{\"2681\":2,\"2687\":1,\"2688\":1,\"2696\":2,\"2702\":1,\"2703\":1,\"2711\":2,\"2717\":1,\"2718\":1}}],[\"while\",{\"1\":{\"121\":1,\"470\":3,\"629\":1,\"980\":3,\"1139\":1,\"1495\":3}}],[\"whitespace=\",{\"1\":{\"99\":1,\"607\":1,\"1117\":1}}],[\"whitespace=true\",{\"1\":{\"99\":1,\"607\":1,\"1117\":1}}],[\"whitespace\",{\"1\":{\"99\":2,\"187\":1,\"360\":1,\"361\":1,\"607\":2,\"695\":1,\"868\":1,\"869\":1,\"1117\":2,\"1207\":1,\"1383\":1,\"1384\":1,\"1865\":1,\"1870\":1,\"1882\":1,\"2234\":1,\"2239\":1,\"2251\":1,\"2603\":1,\"2608\":1,\"2620\":1}}],[\"which\",{\"1\":{\"78\":1,\"586\":1,\"1096\":1}}],[\"wrapper\",{\"1\":{\"466\":3,\"976\":3,\"1491\":3,\"1660\":1,\"1689\":1,\"1780\":1,\"1792\":1,\"1900\":1,\"2029\":1,\"2058\":1,\"2149\":1,\"2161\":1,\"2269\":1,\"2398\":1,\"2427\":1,\"2518\":1,\"2530\":1,\"2638\":1}}],[\"write\",{\"1\":{\"433\":1,\"943\":1,\"1458\":1}}],[\"wordcloud\",{\"1\":{\"1919\":2,\"1921\":2,\"1922\":3,\"1924\":1,\"1930\":2,\"2288\":2,\"2290\":2,\"2291\":3,\"2293\":1,\"2299\":2,\"2657\":2,\"2659\":2,\"2660\":3,\"2662\":1,\"2668\":2}}],[\"work\",{\"1\":{\"470\":1,\"471\":1,\"980\":1,\"981\":1,\"1495\":1,\"1496\":1}}],[\"working\",{\"1\":{\"436\":1,\"437\":1,\"438\":1,\"946\":1,\"947\":1,\"948\":1,\"1461\":1,\"1462\":1,\"1463\":1}}],[\"world\",{\"1\":{\"120\":1,\"124\":1,\"433\":1,\"524\":2,\"532\":2,\"534\":3,\"543\":8,\"628\":1,\"632\":1,\"943\":1,\"1034\":2,\"1042\":2,\"1044\":3,\"1053\":8,\"1138\":1,\"1142\":1,\"1458\":1,\"1549\":2,\"1557\":2,\"1559\":3,\"1568\":8,\"1575\":2,\"1902\":4,\"1944\":2,\"2271\":4,\"2325\":2,\"2640\":4}}],[\"weas\",{\"1\":{\"2681\":6,\"2696\":6,\"2711\":6}}],[\"wea\",{\"1\":{\"2680\":21,\"2681\":6,\"2695\":21,\"2696\":6,\"2710\":21,\"2711\":6}}],[\"weather=\",{\"1\":{\"2680\":2,\"2695\":2,\"2710\":2}}],[\"weather\",{\"1\":{\"421\":2,\"423\":1,\"424\":4,\"425\":2,\"426\":6,\"513\":3,\"526\":3,\"527\":3,\"931\":2,\"933\":1,\"934\":4,\"935\":2,\"936\":6,\"1023\":3,\"1036\":3,\"1037\":3,\"1446\":2,\"1448\":1,\"1449\":4,\"1450\":2,\"1451\":6,\"1538\":3,\"1551\":3,\"1552\":3,\"2678\":16,\"2679\":29,\"2680\":34,\"2681\":20,\"2693\":16,\"2694\":29,\"2695\":34,\"2696\":20,\"2708\":16,\"2709\":29,\"2710\":34,\"2711\":20}}],[\"week\",{\"1\":{\"418\":1,\"928\":1,\"1443\":1}}],[\"we\",{\"1\":{\"417\":1,\"927\":1,\"1442\":1}}],[\"webpack\",{\"1\":{\"501\":1,\"1011\":1,\"1526\":1}}],[\"webui\",{\"1\":{\"497\":1,\"1007\":1,\"1522\":1}}],[\"web\",{\"1\":{\"58\":2,\"486\":1,\"487\":1,\"490\":3,\"491\":3,\"566\":2,\"996\":1,\"997\":1,\"1000\":3,\"1001\":3,\"1076\":2,\"1511\":1,\"1512\":1,\"1515\":3,\"1516\":3}}],[\"webhook\",{\"1\":{\"53\":1,\"471\":5,\"486\":1,\"487\":1,\"561\":1,\"981\":5,\"996\":1,\"997\":1,\"1071\":1,\"1496\":5,\"1511\":1,\"1512\":1,\"1933\":1,\"1934\":1,\"2302\":1,\"2303\":1,\"2671\":1,\"2672\":1}}],[\"websocketcontext\",{\"1\":{\"1780\":1,\"2149\":1,\"2518\":1}}],[\"websocketclientprotocol\",{\"1\":{\"1792\":1,\"2161\":1,\"2530\":1}}],[\"websocketclientmixin\",{\"1\":{\"470\":2,\"980\":2,\"1495\":2}}],[\"websocketclosed\",{\"1\":{\"121\":1,\"195\":1,\"470\":2,\"629\":1,\"703\":1,\"980\":2,\"1139\":1,\"1215\":1,\"1495\":2}}],[\"websocketserversetup\",{\"1\":{\"119\":1,\"121\":3,\"471\":2,\"627\":1,\"629\":3,\"981\":2,\"1137\":1,\"1139\":3,\"1496\":2,\"1597\":1,\"1687\":1,\"1734\":1,\"1778\":1,\"1966\":1,\"2056\":1,\"2103\":1,\"2147\":1,\"2316\":1,\"2425\":1,\"2449\":1,\"2516\":1}}],[\"websockets\",{\"0\":{\"79\":1,\"587\":1,\"1097\":1,\"1788\":1,\"2157\":1,\"2526\":1},\"1\":{\"79\":1,\"587\":1,\"1097\":1,\"1788\":3,\"1790\":1,\"1792\":1,\"2157\":3,\"2159\":1,\"2161\":1,\"2526\":3,\"2528\":1,\"2530\":1}}],[\"websocket\",{\"0\":{\"121\":1,\"629\":1,\"1139\":1,\"1935\":1,\"1937\":1,\"2304\":1,\"2306\":1,\"2673\":1,\"2675\":1},\"1\":{\"53\":6,\"78\":1,\"79\":3,\"80\":1,\"119\":1,\"121\":6,\"214\":1,\"470\":9,\"471\":12,\"474\":7,\"494\":1,\"561\":6,\"586\":1,\"587\":3,\"588\":1,\"627\":1,\"629\":6,\"722\":1,\"980\":9,\"981\":12,\"984\":7,\"1004\":1,\"1071\":6,\"1096\":1,\"1097\":3,\"1098\":1,\"1137\":1,\"1139\":6,\"1234\":1,\"1495\":9,\"1496\":12,\"1499\":7,\"1519\":1,\"1597\":1,\"1599\":2,\"1658\":1,\"1660\":2,\"1689\":3,\"1734\":1,\"1737\":1,\"1738\":1,\"1739\":1,\"1740\":1,\"1741\":1,\"1742\":1,\"1743\":1,\"1744\":1,\"1755\":1,\"1756\":2,\"1757\":1,\"1780\":2,\"1788\":1,\"1791\":1,\"1792\":2,\"1933\":2,\"1935\":6,\"1966\":1,\"1968\":2,\"2027\":1,\"2029\":2,\"2058\":3,\"2103\":1,\"2106\":1,\"2107\":1,\"2108\":1,\"2109\":1,\"2110\":1,\"2111\":1,\"2112\":1,\"2113\":1,\"2124\":1,\"2125\":2,\"2126\":1,\"2149\":2,\"2157\":1,\"2160\":1,\"2161\":2,\"2302\":2,\"2304\":6,\"2316\":1,\"2318\":2,\"2396\":1,\"2398\":2,\"2427\":3,\"2449\":1,\"2484\":1,\"2485\":1,\"2486\":1,\"2487\":1,\"2488\":1,\"2489\":1,\"2490\":1,\"2491\":1,\"2492\":1,\"2493\":2,\"2494\":1,\"2518\":2,\"2526\":1,\"2529\":1,\"2530\":2,\"2671\":2,\"2673\":6}}],[\"warning\",{\"1\":{\"417\":4,\"455\":1,\"473\":1,\"927\":4,\"965\":1,\"983\":1,\"1442\":4,\"1480\":1,\"1498\":1}}],[\"ws\",{\"1\":{\"121\":8,\"470\":6,\"471\":4,\"474\":7,\"629\":8,\"980\":6,\"981\":4,\"984\":7,\"1139\":8,\"1495\":6,\"1496\":4,\"1499\":7,\"1935\":7,\"2304\":7,\"2673\":7}}],[\"wsgi\",{\"1\":{\"58\":1,\"566\":1,\"1076\":1}}],[\"win\",{\"1\":{\"437\":2,\"438\":2,\"947\":2,\"948\":2,\"1462\":2,\"1463\":2}}],[\"windows\",{\"1\":{\"64\":2,\"72\":1,\"433\":2,\"436\":1,\"505\":1,\"572\":2,\"580\":1,\"943\":2,\"946\":1,\"1015\":1,\"1082\":2,\"1090\":1,\"1458\":2,\"1461\":1,\"1530\":1,\"2690\":2,\"2705\":2,\"2720\":2}}],[\"with\",{\"1\":{\"58\":1,\"79\":1,\"121\":1,\"142\":1,\"146\":2,\"147\":1,\"148\":1,\"159\":1,\"160\":1,\"447\":1,\"470\":1,\"566\":1,\"587\":1,\"629\":1,\"650\":1,\"654\":2,\"655\":1,\"656\":1,\"667\":1,\"668\":1,\"957\":1,\"980\":1,\"1076\":1,\"1097\":1,\"1139\":1,\"1160\":1,\"1164\":2,\"1165\":1,\"1166\":1,\"1177\":1,\"1178\":1,\"1472\":1,\"1495\":1,\"1898\":1,\"1899\":1,\"1934\":3,\"1935\":2,\"2267\":1,\"2268\":1,\"2303\":3,\"2304\":2,\"2636\":1,\"2637\":1,\"2672\":3,\"2673\":2,\"2680\":1,\"2684\":1,\"2690\":1,\"2695\":1,\"2699\":1,\"2705\":1,\"2710\":1,\"2714\":1,\"2720\":1}}],[\"默认参数字典\",{\"1\":{\"1931\":1,\"2300\":1,\"2669\":1}}],[\"默认数据库连接\",{\"1\":{\"1929\":1,\"2298\":1,\"2667\":1}}],[\"默认禁用的内置选项\",{\"1\":{\"1897\":1,\"2266\":1,\"2635\":1}}],[\"默认是否开启紧凑模式\",{\"1\":{\"1897\":1,\"2266\":1,\"2635\":1}}],[\"默认是否开启模糊匹配\",{\"1\":{\"1897\":1,\"2266\":1,\"2635\":1}}],[\"默认是否启用消息缓存\",{\"1\":{\"1897\":1,\"2266\":1,\"2635\":1}}],[\"默认是否抛出异常\",{\"1\":{\"1897\":1,\"2266\":1,\"2635\":1}}],[\"默认格式化器类型\",{\"1\":{\"1897\":1,\"2266\":1,\"2635\":1}}],[\"默认分隔符配置\",{\"1\":{\"1897\":1,\"2266\":1,\"2635\":1}}],[\"默认前缀配置\",{\"1\":{\"1897\":1,\"2266\":1,\"2635\":1}}],[\"默认通过\",{\"1\":{\"1587\":1,\"1956\":1,\"2337\":1}}],[\"默认情况下\",{\"1\":{\"543\":1,\"1053\":1,\"1568\":1,\"1892\":1,\"1934\":1,\"2261\":1,\"2303\":1,\"2630\":1,\"2672\":1}}],[\"默认的内置选项名称\",{\"1\":{\"1897\":1,\"2266\":1,\"2635\":1}}],[\"默认的日志处理器\",{\"1\":{\"418\":1,\"928\":1,\"1443\":1}}],[\"默认的日志处理器并添加新的日志处理器\",{\"1\":{\"418\":1,\"928\":1,\"1443\":1}}],[\"默认的日志格式为\",{\"1\":{\"418\":1,\"928\":1,\"1443\":1}}],[\"默认的日志过滤器\",{\"1\":{\"230\":1,\"738\":1,\"1250\":1}}],[\"默认的\",{\"1\":{\"417\":1,\"927\":1,\"1442\":1}}],[\"默认会更新为当前事件的触发对象\",{\"1\":{\"395\":1,\"903\":1,\"1418\":1}}],[\"默认会更新为\",{\"1\":{\"394\":1,\"902\":1,\"1417\":1}}],[\"默认会话权限更新函数\",{\"1\":{\"242\":1,\"750\":1,\"1263\":1}}],[\"默认存储器类型\",{\"1\":{\"286\":1,\"794\":1,\"1253\":1}}],[\"默认事件类型更新函数\",{\"1\":{\"242\":1,\"750\":1,\"1263\":1}}],[\"默认日志格式\",{\"1\":{\"231\":1,\"739\":1,\"1251\":1}}],[\"默认信息\",{\"1\":{\"227\":1,\"735\":1,\"1247\":1}}],[\"默认从\",{\"1\":{\"224\":1,\"732\":1,\"1244\":1}}],[\"默认不会添加\",{\"1\":{\"105\":1,\"613\":1,\"1123\":1}}],[\"默认状态\",{\"0\":{\"92\":1,\"600\":1,\"1110\":1},\"1\":{\"242\":1,\"750\":1,\"1263\":1}}],[\"默认使用\",{\"1\":{\"81\":1,\"589\":1,\"1099\":1,\"1897\":1,\"2266\":1,\"2635\":1}}],[\"默认值注入参数\",{\"1\":{\"304\":1,\"812\":1,\"1321\":1}}],[\"默认值\",{\"1\":{\"60\":1,\"61\":1,\"62\":1,\"63\":1,\"64\":1,\"65\":2,\"66\":2,\"67\":2,\"68\":2,\"69\":1,\"72\":1,\"73\":2,\"74\":2,\"75\":2,\"76\":2,\"77\":1,\"435\":1,\"436\":1,\"437\":1,\"438\":1,\"439\":1,\"440\":1,\"441\":1,\"454\":1,\"455\":1,\"456\":1,\"568\":1,\"569\":1,\"570\":1,\"571\":1,\"572\":1,\"573\":2,\"574\":2,\"575\":2,\"576\":2,\"577\":1,\"580\":1,\"581\":2,\"582\":2,\"583\":2,\"584\":2,\"585\":1,\"945\":1,\"946\":1,\"947\":1,\"948\":1,\"949\":1,\"950\":1,\"951\":1,\"964\":1,\"965\":1,\"966\":1,\"1078\":1,\"1079\":1,\"1080\":1,\"1081\":1,\"1082\":1,\"1083\":2,\"1084\":2,\"1085\":2,\"1086\":2,\"1087\":1,\"1090\":1,\"1091\":2,\"1092\":2,\"1093\":2,\"1094\":2,\"1095\":1,\"1460\":1,\"1461\":1,\"1462\":1,\"1463\":1,\"1464\":1,\"1465\":1,\"1466\":1,\"1479\":1,\"1480\":1,\"1481\":1,\"1676\":1,\"1677\":1,\"1678\":1,\"1679\":1,\"1767\":1,\"1768\":1,\"1769\":1,\"1770\":1,\"1893\":1,\"1909\":1,\"1910\":1,\"1911\":1,\"1912\":1,\"1913\":1,\"1914\":1,\"1915\":1,\"1916\":1,\"1917\":1,\"1918\":1,\"2045\":1,\"2046\":1,\"2047\":1,\"2048\":1,\"2136\":1,\"2137\":1,\"2138\":1,\"2139\":1,\"2262\":1,\"2278\":1,\"2279\":1,\"2280\":1,\"2281\":1,\"2282\":1,\"2283\":1,\"2284\":1,\"2285\":1,\"2286\":1,\"2287\":1,\"2414\":1,\"2415\":1,\"2416\":1,\"2417\":1,\"2505\":1,\"2506\":1,\"2507\":1,\"2508\":1,\"2631\":1,\"2647\":1,\"2648\":1,\"2649\":1,\"2650\":1,\"2651\":1,\"2652\":1,\"2653\":1,\"2654\":1,\"2655\":1,\"2656\":1}}],[\"默认\",{\"0\":{\"58\":1,\"566\":1,\"1076\":1},\"1\":{\"455\":1,\"965\":1,\"1480\":1,\"1856\":1,\"1857\":1,\"1858\":1,\"1859\":1,\"1860\":1,\"1861\":1,\"1862\":1,\"1863\":1,\"1864\":1,\"1865\":1,\"1866\":1,\"1867\":1,\"1868\":1,\"1870\":1,\"1871\":1,\"1873\":1,\"1874\":1,\"1875\":1,\"1876\":1,\"1877\":1,\"1878\":1,\"1879\":1,\"1880\":1,\"1881\":1,\"1882\":1,\"1883\":1,\"1884\":1,\"1885\":1,\"1894\":1,\"2225\":1,\"2226\":1,\"2227\":1,\"2228\":1,\"2229\":1,\"2230\":1,\"2231\":1,\"2232\":1,\"2233\":1,\"2234\":1,\"2235\":1,\"2236\":1,\"2237\":1,\"2239\":1,\"2240\":1,\"2242\":1,\"2243\":1,\"2244\":1,\"2245\":1,\"2246\":1,\"2247\":1,\"2248\":1,\"2249\":1,\"2250\":1,\"2251\":1,\"2252\":1,\"2253\":1,\"2254\":1,\"2263\":1,\"2594\":1,\"2595\":1,\"2596\":1,\"2597\":1,\"2598\":1,\"2599\":1,\"2600\":1,\"2601\":1,\"2602\":1,\"2603\":1,\"2604\":1,\"2605\":1,\"2606\":1,\"2608\":1,\"2609\":1,\"2611\":1,\"2612\":1,\"2613\":1,\"2614\":1,\"2615\":1,\"2616\":1,\"2617\":1,\"2618\":1,\"2619\":1,\"2620\":1,\"2621\":1,\"2622\":1,\"2623\":1,\"2632\":1}}],[\"默认为参数的类型注释\",{\"1\":{\"297\":1,\"805\":1,\"1323\":1}}],[\"默认为\",{\"1\":{\"54\":2,\"65\":1,\"66\":1,\"67\":1,\"68\":1,\"73\":1,\"74\":1,\"75\":1,\"76\":1,\"95\":1,\"96\":1,\"97\":1,\"99\":1,\"297\":2,\"562\":2,\"573\":1,\"574\":1,\"575\":1,\"576\":1,\"581\":1,\"582\":1,\"583\":1,\"584\":1,\"603\":1,\"604\":1,\"605\":1,\"607\":1,\"805\":2,\"1072\":2,\"1083\":1,\"1084\":1,\"1085\":1,\"1086\":1,\"1091\":1,\"1092\":1,\"1093\":1,\"1094\":1,\"1113\":1,\"1114\":1,\"1115\":1,\"1117\":1,\"1323\":2,\"1632\":2,\"1671\":1,\"1672\":1,\"1673\":1,\"1674\":1,\"1676\":1,\"1677\":1,\"1678\":1,\"1679\":1,\"1767\":1,\"1768\":1,\"1769\":1,\"1770\":1,\"1894\":2,\"1898\":1,\"2001\":2,\"2040\":1,\"2041\":1,\"2042\":1,\"2043\":1,\"2045\":1,\"2046\":1,\"2047\":1,\"2048\":1,\"2136\":1,\"2137\":1,\"2138\":1,\"2139\":1,\"2263\":2,\"2267\":1,\"2370\":2,\"2409\":1,\"2410\":1,\"2411\":1,\"2412\":1,\"2414\":1,\"2415\":1,\"2416\":1,\"2417\":1,\"2505\":1,\"2506\":1,\"2507\":1,\"2508\":1,\"2632\":2,\"2636\":1}}],[\"具名参数列表\",{\"1\":{\"1641\":1,\"2010\":1,\"2379\":1}}],[\"具体如下\",{\"1\":{\"2689\":1,\"2704\":1,\"2719\":1}}],[\"具体而言\",{\"1\":{\"2680\":1,\"2695\":1,\"2710\":1}}],[\"具体为\",{\"1\":{\"1932\":1,\"2301\":1,\"2670\":1}}],[\"具体内容参考事件响应器进阶\",{\"1\":{\"525\":1,\"1035\":1,\"1550\":1}}],[\"具体可选配置方式以及配置项详情参考配置\",{\"1\":{\"506\":1,\"1016\":1,\"1531\":1}}],[\"具体可以参考以下适配器\",{\"1\":{\"477\":1,\"987\":1,\"1502\":1}}],[\"具体请参考事件类型\",{\"1\":{\"476\":1,\"986\":1,\"1501\":1}}],[\"具体请参考\",{\"1\":{\"473\":1,\"983\":1,\"1498\":1}}],[\"具体请参考安装驱动器\",{\"1\":{\"54\":1,\"562\":1,\"1072\":1}}],[\"具体用法如下\",{\"1\":{\"466\":1,\"976\":1,\"1491\":1}}],[\"具体方法参考\",{\"1\":{\"124\":1,\"632\":1,\"1142\":1}}],[\"具体填写见发布插件章节\",{\"1\":{\"110\":1,\"618\":1,\"1128\":1}}],[\"具体信息参考\",{\"1\":{\"64\":1,\"572\":1,\"1082\":1}}],[\"具有共同命令名称前缀的命令组以及具有共同参数的响应器组\",{\"1\":{\"525\":1,\"1035\":1,\"1550\":1}}],[\"具有三个属性\",{\"1\":{\"121\":1,\"629\":1,\"1139\":1}}],[\"具有四个属性\",{\"1\":{\"120\":1,\"628\":1,\"1138\":1}}],[\"具有极佳的编写体验\",{\"1\":{\"58\":1,\"566\":1,\"1076\":1}}],[\"具有以下功能\",{\"1\":{\"53\":1,\"561\":1,\"1071\":1}}],[\"具有交互式功能的命令行工具\",{\"1\":{\"4\":1,\"16\":1,\"28\":1}}],[\"符号作为内置驱动器模块路径的前缀\",{\"1\":{\"54\":1,\"562\":1,\"1072\":1}}],[\"~fastapi\",{\"1\":{\"54\":1,\"562\":1,\"1072\":1}}],[\"~\",{\"1\":{\"54\":1,\"166\":1,\"436\":2,\"437\":2,\"438\":1,\"562\":1,\"674\":1,\"946\":2,\"947\":2,\"948\":1,\"1072\":1,\"1184\":1,\"1461\":2,\"1462\":2,\"1463\":1,\"1839\":1,\"2208\":1,\"2577\":1}}],[\"特性\",{\"1\":{\"1903\":1,\"2272\":1,\"2641\":1}}],[\"特性实现完整的静态网站生成\",{\"1\":{\"501\":1,\"1011\":1,\"1526\":1}}],[\"特殊的键\",{\"1\":{\"1890\":1,\"2259\":1,\"2628\":1}}],[\"特定的缺失\",{\"1\":{\"489\":1,\"999\":1,\"1514\":1}}],[\"特定的\",{\"1\":{\"489\":1,\"999\":1,\"1514\":1}}],[\"特别是当你会发布插件时\",{\"1\":{\"2678\":1,\"2693\":1,\"2708\":1}}],[\"特别是对于\",{\"1\":{\"485\":1,\"995\":1,\"1510\":1}}],[\"特别提醒\",{\"1\":{\"1893\":1,\"2262\":1,\"2631\":1}}],[\"特别的\",{\"1\":{\"54\":1,\"401\":1,\"562\":1,\"909\":1,\"1072\":1,\"1424\":1,\"1890\":1,\"1893\":1,\"2259\":1,\"2262\":1,\"2628\":1,\"2631\":1}}],[\"特色\",{\"0\":{\"1\":1,\"13\":1,\"25\":1}}],[\"但不建议使用\",{\"1\":{\"2688\":1,\"2703\":1,\"2718\":1}}],[\"但不会匹配\",{\"1\":{\"1887\":1,\"2256\":1,\"2625\":1}}],[\"但覆盖顺序并非显而易见\",{\"1\":{\"1932\":1,\"2301\":1,\"2670\":1}}],[\"但实际上它需要的是一个\",{\"1\":{\"1890\":1,\"2259\":1,\"2628\":1}}],[\"但由于平台的兼容性问题\",{\"1\":{\"523\":1,\"1033\":1,\"1548\":1}}],[\"但在底层的加载逻辑是一致的\",{\"1\":{\"514\":1,\"1024\":1,\"1539\":1}}],[\"但已有不少插件作者改名\",{\"1\":{\"502\":1,\"1012\":1,\"1527\":1}}],[\"但因此也增加了插件统一管理的难度\",{\"1\":{\"499\":1,\"1009\":1,\"1524\":1}}],[\"但直接使用\",{\"1\":{\"466\":1,\"525\":1,\"976\":1,\"1035\":1,\"1491\":1,\"1550\":1}}],[\"但\",{\"1\":{\"212\":1,\"422\":1,\"720\":1,\"932\":1,\"1232\":1,\"1447\":1}}],[\"但只能在特定类型驱动器下运行\",{\"1\":{\"118\":1,\"626\":1,\"1136\":1}}],[\"但并不能直接使用\",{\"1\":{\"118\":1,\"626\":1,\"1136\":1}}],[\"但当我们使用了外部插件\",{\"1\":{\"116\":1,\"624\":1,\"1134\":1}}],[\"但是可以注意到它们几乎与\",{\"1\":{\"2679\":1,\"2694\":1,\"2709\":1}}],[\"但是数据库中并没有对应的表\",{\"1\":{\"2679\":1,\"2694\":1,\"2709\":1}}],[\"但是现在想要卸载它\",{\"1\":{\"1922\":1,\"2291\":1,\"2660\":1}}],[\"但是仍需要在非\",{\"1\":{\"1888\":1,\"2257\":1,\"2626\":1}}],[\"但是允许含有默认值的参数在前\",{\"1\":{\"1888\":1,\"2257\":1,\"2626\":1}}],[\"但是要注意的是\",{\"1\":{\"429\":1,\"939\":1,\"1454\":1}}],[\"但是这种方式难以控制\",{\"1\":{\"416\":1,\"926\":1,\"1441\":1}}],[\"但是\",{\"1\":{\"115\":1,\"420\":1,\"497\":1,\"502\":1,\"623\":1,\"930\":1,\"1007\":1,\"1012\":1,\"1133\":1,\"1445\":1,\"1522\":1,\"1527\":1,\"2678\":1,\"2679\":1,\"2680\":1,\"2690\":1,\"2693\":1,\"2694\":1,\"2695\":1,\"2705\":1,\"2708\":1,\"2709\":1,\"2710\":1,\"2720\":1}}],[\"但是我们也可以自定义事件响应器存储\",{\"1\":{\"81\":1,\"589\":1,\"1099\":1}}],[\"但会提供参数列表\",{\"1\":{\"100\":1,\"608\":1,\"1118\":1}}],[\"但需要安装额外依赖才能使用\",{\"1\":{\"54\":1,\"562\":1,\"1072\":1}}],[\"但混入类驱动器只能为客户端类型\",{\"1\":{\"54\":1,\"562\":1,\"1072\":1}}],[\"但服务端型驱动器仅能选择一个\",{\"1\":{\"54\":1,\"562\":1,\"1072\":1}}],[\"<类名小写>\",{\"1\":{\"2678\":1,\"2693\":1,\"2708\":1}}],[\"<头部类型>\",{\"1\":{\"1924\":1,\"2293\":1,\"2662\":1}}],[\"<插件模块名>\",{\"1\":{\"1924\":1,\"1925\":2,\"1926\":2,\"2293\":1,\"2294\":2,\"2295\":2,\"2662\":1,\"2663\":2,\"2664\":2,\"2678\":1,\"2693\":1,\"2708\":1}}],[\"<迁移\",{\"1\":{\"1924\":1,\"1925\":2,\"1926\":2,\"2293\":1,\"2294\":2,\"2295\":2,\"2662\":1,\"2663\":2,\"2664\":2}}],[\"<key>\",{\"1\":{\"1902\":1,\"2271\":1,\"2640\":1}}],[\"<abc\",{\"1\":{\"1905\":1,\"2274\":1,\"2643\":1}}],[\"<a\",{\"1\":{\"1893\":1,\"2262\":1,\"2631\":1}}],[\"<adapter>\",{\"1\":{\"1839\":1,\"2208\":1,\"2577\":1}}],[\"<type\",{\"1\":{\"525\":1,\"1035\":1,\"1550\":1}}],[\"<tag>\",{\"1\":{\"398\":1,\"906\":1,\"1421\":1}}],[\"<y>\",{\"1\":{\"474\":1,\"984\":1,\"1499\":1}}],[\"<rule\",{\"1\":{\"1865\":1,\"1867\":1,\"1882\":1,\"1884\":1,\"2234\":1,\"2236\":1,\"2251\":1,\"2253\":1,\"2603\":1,\"2605\":1,\"2620\":1,\"2622\":1}}],[\"<r><bg\",{\"1\":{\"470\":3,\"980\":3,\"1495\":3}}],[\"<red>big<\",{\"1\":{\"417\":1,\"927\":1,\"1442\":1}}],[\"<username>\",{\"1\":{\"436\":1,\"437\":2,\"438\":2,\"946\":1,\"947\":2,\"948\":2,\"1461\":1,\"1462\":2,\"1463\":2}}],[\"<cmd>\",{\"1\":{\"1902\":1,\"2271\":1,\"2640\":1}}],[\"<current\",{\"1\":{\"436\":1,\"437\":1,\"438\":1,\"946\":1,\"947\":1,\"948\":1,\"1461\":1,\"1462\":1,\"1463\":1}}],[\"<c><u>\",{\"1\":{\"418\":2,\"928\":2,\"1443\":2}}],[\"<lvl>\",{\"1\":{\"418\":2,\"928\":2,\"1443\":2}}],[\"<g>\",{\"1\":{\"418\":2,\"928\":2,\"1443\":2}}],[\"<\",{\"1\":{\"242\":1,\"418\":6,\"470\":2,\"474\":1,\"750\":1,\"928\":6,\"980\":2,\"984\":1,\"1263\":1,\"1443\":6,\"1495\":2,\"1499\":1}}],[\"<mixin>\",{\"1\":{\"54\":2,\"166\":1,\"562\":2,\"674\":1,\"1072\":2,\"1184\":1}}],[\"<module>\",{\"1\":{\"54\":2,\"166\":1,\"562\":2,\"674\":1,\"1072\":2,\"1184\":1,\"1839\":1,\"2208\":1,\"2577\":1}}],[\"<driver>\",{\"1\":{\"54\":2,\"166\":1,\"562\":2,\"674\":1,\"1072\":2,\"1184\":1}}],[\"添加成功\",{\"1\":{\"1901\":1,\"1902\":1,\"2270\":1,\"2271\":1,\"2639\":1,\"2640\":1}}],[\"添加一个消息段到消息数组末尾\",{\"1\":{\"1612\":1,\"1981\":1,\"2350\":1}}],[\"添加新自动化流程与维护现有流程困难\",{\"1\":{\"502\":1,\"1012\":1,\"1527\":1}}],[\"添加新的日志处理器\",{\"1\":{\"418\":1,\"928\":1,\"1443\":1}}],[\"添加定时任务\",{\"0\":{\"452\":1,\"962\":1,\"1477\":1}}],[\"添加\",{\"1\":{\"417\":2,\"419\":2,\"927\":2,\"929\":2,\"1442\":2,\"1444\":2}}],[\"添加路由规则\",{\"0\":{\"124\":1,\"632\":1,\"1142\":1}}],[\"添加路由\",{\"0\":{\"118\":1,\"626\":1,\"1136\":1}}],[\"添加前缀\",{\"1\":{\"105\":1,\"613\":1,\"1123\":1}}],[\"添加自定义路由\",{\"1\":{\"53\":1,\"561\":1,\"1071\":1}}],[\"添加其他编辑器配置推荐\",{\"1\":{\"11\":1,\"23\":1,\"35\":1}}],[\"服务器路由配置\",{\"1\":{\"1596\":1,\"1597\":1,\"1733\":1,\"1734\":1,\"1754\":1,\"1757\":1,\"1965\":1,\"1966\":1,\"2102\":1,\"2103\":1,\"2123\":1,\"2126\":1,\"2315\":1,\"2316\":1,\"2448\":1,\"2449\":1,\"2474\":1,\"2494\":1}}],[\"服务器\",{\"1\":{\"457\":1,\"967\":1,\"1482\":1}}],[\"服务器等情形\",{\"1\":{\"53\":1,\"561\":1,\"1071\":1}}],[\"服务端应用时\",{\"1\":{\"1934\":1,\"1935\":1,\"2303\":1,\"2304\":1,\"2672\":1,\"2673\":1}}],[\"服务端混入基类\",{\"1\":{\"1747\":1,\"2116\":1,\"2481\":1}}],[\"服务端基类\",{\"1\":{\"1730\":1,\"2099\":1,\"2445\":1}}],[\"服务端的功能实现\",{\"1\":{\"523\":1,\"1033\":1,\"1548\":1}}],[\"服务端的路由规则\",{\"1\":{\"119\":1,\"627\":1,\"1137\":1}}],[\"服务端\",{\"0\":{\"1934\":1,\"1935\":1,\"2303\":1,\"2304\":1,\"2672\":1,\"2673\":1},\"1\":{\"471\":2,\"981\":2,\"1496\":2,\"1933\":2,\"2302\":2,\"2671\":2}}],[\"服务端通信方式\",{\"0\":{\"471\":1,\"981\":1,\"1496\":1}}],[\"服务端监听的端口\",{\"1\":{\"168\":1,\"676\":1,\"1186\":1}}],[\"服务端监听的\",{\"1\":{\"167\":1,\"675\":1,\"1185\":1}}],[\"服务端类型的驱动器具有两个属性\",{\"1\":{\"123\":1,\"631\":1,\"1141\":1}}],[\"服务端和\",{\"1\":{\"119\":1,\"627\":1,\"1137\":1}}],[\"服务端驱动器\",{\"1\":{\"57\":1,\"58\":1,\"70\":1,\"565\":1,\"566\":1,\"578\":1,\"1075\":1,\"1076\":1,\"1088\":1}}],[\"服务端型驱动器目前有\",{\"1\":{\"53\":1,\"561\":1,\"1071\":1}}],[\"humanized\",{\"1\":{\"1900\":1,\"2269\":1,\"2638\":1}}],[\"h2\",{\"1\":{\"1745\":1,\"2114\":1,\"2475\":1}}],[\"h11\",{\"1\":{\"1745\":1,\"2114\":1,\"2475\":1}}],[\"h10\",{\"1\":{\"1745\":1,\"2114\":1,\"2475\":1}}],[\"hydrate\",{\"1\":{\"501\":1,\"1011\":1,\"1526\":1}}],[\"has\",{\"1\":{\"476\":3,\"540\":1,\"986\":3,\"1050\":1,\"1501\":3,\"1565\":1}}],[\"handle\",{\"1\":{\"120\":2,\"121\":3,\"136\":1,\"137\":1,\"200\":1,\"203\":1,\"205\":1,\"206\":1,\"207\":1,\"293\":1,\"422\":8,\"429\":3,\"471\":4,\"472\":2,\"473\":2,\"474\":1,\"475\":4,\"628\":2,\"629\":3,\"644\":1,\"645\":1,\"708\":1,\"711\":1,\"713\":1,\"714\":1,\"715\":1,\"801\":1,\"932\":8,\"939\":3,\"981\":4,\"982\":2,\"983\":2,\"984\":1,\"985\":4,\"1138\":2,\"1139\":3,\"1154\":1,\"1155\":1,\"1220\":1,\"1223\":1,\"1225\":1,\"1226\":1,\"1227\":1,\"1313\":1,\"1447\":8,\"1454\":3,\"1496\":4,\"1497\":2,\"1498\":2,\"1499\":1,\"1500\":4,\"2680\":4,\"2681\":3,\"2684\":1,\"2685\":1,\"2695\":4,\"2696\":3,\"2699\":1,\"2700\":1,\"2710\":4,\"2711\":3,\"2714\":1,\"2715\":1}}],[\"handlers=\",{\"1\":{\"419\":1,\"929\":1,\"1444\":1}}],[\"handlers\",{\"1\":{\"93\":1,\"242\":1,\"601\":1,\"750\":1,\"1111\":1,\"1263\":1,\"1856\":1,\"1857\":1,\"1858\":1,\"1859\":1,\"1860\":1,\"1861\":1,\"1862\":1,\"1863\":1,\"1864\":1,\"1865\":1,\"1866\":1,\"1867\":1,\"1868\":1,\"1869\":1,\"1870\":1,\"1871\":1,\"1872\":1,\"1873\":1,\"1874\":1,\"1875\":1,\"1876\":1,\"1877\":1,\"1878\":1,\"1879\":1,\"1880\":1,\"1881\":1,\"1882\":1,\"1883\":1,\"1884\":1,\"1885\":1,\"2225\":1,\"2226\":1,\"2227\":1,\"2228\":1,\"2229\":1,\"2230\":1,\"2231\":1,\"2232\":1,\"2233\":1,\"2234\":1,\"2235\":1,\"2236\":1,\"2237\":1,\"2238\":1,\"2239\":1,\"2240\":1,\"2241\":1,\"2242\":1,\"2243\":1,\"2244\":1,\"2245\":1,\"2246\":1,\"2247\":1,\"2248\":1,\"2249\":1,\"2250\":1,\"2251\":1,\"2252\":1,\"2253\":1,\"2254\":1,\"2594\":1,\"2595\":1,\"2596\":1,\"2597\":1,\"2598\":1,\"2599\":1,\"2600\":1,\"2601\":1,\"2602\":1,\"2603\":1,\"2604\":1,\"2605\":1,\"2606\":1,\"2607\":1,\"2608\":1,\"2609\":1,\"2610\":1,\"2611\":1,\"2612\":1,\"2613\":1,\"2614\":1,\"2615\":1,\"2616\":1,\"2617\":1,\"2618\":1,\"2619\":1,\"2620\":1,\"2621\":1,\"2622\":1,\"2623\":1}}],[\"handler\",{\"1\":{\"90\":1,\"121\":2,\"200\":2,\"201\":1,\"203\":1,\"205\":4,\"206\":4,\"207\":4,\"242\":1,\"248\":2,\"249\":2,\"250\":2,\"251\":2,\"297\":2,\"393\":1,\"419\":1,\"598\":1,\"629\":2,\"708\":2,\"709\":1,\"711\":1,\"713\":4,\"714\":4,\"715\":4,\"750\":1,\"756\":2,\"757\":2,\"758\":2,\"759\":2,\"805\":2,\"901\":1,\"929\":1,\"1108\":1,\"1139\":2,\"1220\":2,\"1221\":1,\"1223\":1,\"1225\":4,\"1226\":4,\"1227\":4,\"1263\":1,\"1269\":2,\"1270\":2,\"1271\":2,\"1272\":2,\"1323\":2,\"1416\":1,\"1444\":1,\"1856\":1,\"1857\":1,\"1858\":1,\"1859\":1,\"1860\":1,\"1861\":1,\"1862\":1,\"1863\":1,\"1864\":1,\"1865\":1,\"1866\":1,\"1867\":1,\"1868\":1,\"1869\":1,\"1870\":1,\"1871\":1,\"1872\":1,\"1873\":1,\"1874\":1,\"1875\":1,\"1876\":1,\"1877\":1,\"1878\":1,\"1879\":1,\"1880\":1,\"1881\":1,\"1882\":1,\"1883\":1,\"1884\":1,\"1885\":1,\"2225\":1,\"2226\":1,\"2227\":1,\"2228\":1,\"2229\":1,\"2230\":1,\"2231\":1,\"2232\":1,\"2233\":1,\"2234\":1,\"2235\":1,\"2236\":1,\"2237\":1,\"2238\":1,\"2239\":1,\"2240\":1,\"2241\":1,\"2242\":1,\"2243\":1,\"2244\":1,\"2245\":1,\"2246\":1,\"2247\":1,\"2248\":1,\"2249\":1,\"2250\":1,\"2251\":1,\"2252\":1,\"2253\":1,\"2254\":1,\"2594\":1,\"2595\":1,\"2596\":1,\"2597\":1,\"2598\":1,\"2599\":1,\"2600\":1,\"2601\":1,\"2602\":1,\"2603\":1,\"2604\":1,\"2605\":1,\"2606\":1,\"2607\":1,\"2608\":1,\"2609\":1,\"2610\":1,\"2611\":1,\"2612\":1,\"2613\":1,\"2614\":1,\"2615\":1,\"2616\":1,\"2617\":1,\"2618\":1,\"2619\":1,\"2620\":1,\"2621\":1,\"2622\":1,\"2623\":1}}],[\"hh\",{\"1\":{\"175\":2,\"418\":2,\"683\":2,\"928\":2,\"1193\":2,\"1443\":2}}],[\"host\",{\"1\":{\"1688\":1,\"1779\":1,\"1929\":1,\"2057\":1,\"2148\":1,\"2298\":1,\"2426\":1,\"2517\":1,\"2667\":1}}],[\"host=0\",{\"1\":{\"506\":1,\"1016\":1,\"1531\":1}}],[\"host=\",{\"1\":{\"225\":1,\"733\":1,\"1245\":1}}],[\"hour\",{\"1\":{\"452\":1,\"962\":1,\"1477\":1}}],[\"hour=\",{\"1\":{\"452\":1,\"962\":1,\"1477\":1}}],[\"home\",{\"1\":{\"437\":1,\"947\":1,\"1462\":1}}],[\"homepage\",{\"1\":{\"110\":1,\"618\":1,\"1128\":1}}],[\"hook\",{\"1\":{\"125\":1,\"202\":1,\"633\":1,\"710\":1,\"1143\":1,\"1222\":1}}],[\"hooking\",{\"1\":{\"125\":1,\"633\":1,\"1143\":1}}],[\"hooks\",{\"1\":{\"116\":1,\"624\":1,\"1134\":1,\"1818\":1,\"2187\":1,\"2556\":1}}],[\"h\",{\"1\":{\"100\":1,\"175\":1,\"365\":2,\"608\":1,\"683\":1,\"873\":2,\"1118\":1,\"1193\":1,\"1388\":2,\"1898\":1,\"1905\":1,\"2267\":1,\"2274\":1,\"2636\":1,\"2643\":1}}],[\"hex\",{\"1\":{\"1890\":1,\"2259\":1,\"2628\":1}}],[\"head\",{\"1\":{\"1924\":4,\"2293\":4,\"2662\":4}}],[\"heads\",{\"0\":{\"1924\":1,\"2293\":1,\"2662\":1},\"1\":{\"1921\":1,\"1922\":1,\"1924\":1,\"2290\":1,\"2291\":1,\"2293\":1,\"2659\":1,\"2660\":1,\"2662\":1}}],[\"headertypes\",{\"1\":{\"1652\":1,\"1659\":1,\"1698\":1,\"1704\":1,\"1728\":1,\"1729\":1,\"1753\":1,\"2021\":1,\"2028\":1,\"2067\":1,\"2073\":1,\"2097\":1,\"2098\":1,\"2122\":1,\"2390\":1,\"2397\":1,\"2436\":1,\"2442\":1,\"2473\":1,\"2478\":1,\"2479\":1}}],[\"headers\",{\"1\":{\"1652\":1,\"1659\":1,\"1698\":1,\"1704\":1,\"1728\":1,\"1729\":1,\"1753\":1,\"2021\":1,\"2028\":1,\"2067\":1,\"2073\":1,\"2097\":1,\"2098\":1,\"2122\":1,\"2390\":1,\"2397\":1,\"2436\":1,\"2442\":1,\"2473\":1,\"2478\":1,\"2479\":1}}],[\"headers=\",{\"1\":{\"470\":1,\"471\":1,\"474\":1,\"980\":1,\"981\":1,\"984\":1,\"1495\":1,\"1496\":1,\"1499\":1}}],[\"header\",{\"1\":{\"53\":2,\"561\":2,\"1071\":2,\"1886\":1,\"1887\":3,\"1895\":1,\"2255\":1,\"2256\":3,\"2264\":1,\"2624\":1,\"2625\":3,\"2633\":1}}],[\"heartbeatevent\",{\"1\":{\"476\":1,\"986\":1,\"1501\":1}}],[\"help\",{\"1\":{\"99\":7,\"105\":7,\"607\":7,\"613\":7,\"1117\":7,\"1123\":7,\"1887\":2,\"1893\":1,\"1896\":1,\"1897\":2,\"1898\":1,\"1905\":1,\"2256\":2,\"2262\":1,\"2265\":1,\"2266\":2,\"2267\":1,\"2274\":1,\"2625\":2,\"2631\":1,\"2634\":1,\"2635\":2,\"2636\":1,\"2643\":1}}],[\"hello\",{\"1\":{\"98\":3,\"120\":5,\"124\":1,\"433\":1,\"524\":2,\"532\":2,\"534\":3,\"543\":6,\"606\":3,\"628\":5,\"632\":1,\"943\":1,\"1034\":2,\"1042\":2,\"1044\":3,\"1053\":6,\"1116\":3,\"1138\":5,\"1142\":1,\"1458\":1,\"1549\":2,\"1557\":2,\"1559\":3,\"1568\":6,\"1575\":2,\"1902\":4,\"1944\":2,\"2271\":4,\"2325\":2,\"2640\":4}}],[\"hide\",{\"1\":{\"1896\":2,\"2265\":2,\"2634\":2}}],[\"hint\",{\"1\":{\"372\":1,\"880\":1,\"1395\":1}}],[\"hints\",{\"1\":{\"58\":1,\"483\":1,\"485\":1,\"486\":1,\"487\":1,\"566\":1,\"993\":1,\"995\":1,\"996\":1,\"997\":1,\"1076\":1,\"1508\":1,\"1510\":1,\"1511\":1,\"1512\":1}}],[\"hi\",{\"1\":{\"98\":3,\"606\":3,\"1116\":3}}],[\"highlight\",{\"1\":{\"118\":1,\"626\":1,\"1136\":1}}],[\"high\",{\"1\":{\"58\":1,\"566\":1,\"1076\":1}}],[\"httpclientsession\",{\"1\":{\"1753\":1,\"2122\":1,\"2473\":1}}],[\"httpversion\",{\"1\":{\"1652\":1,\"1659\":1,\"1698\":1,\"1704\":1,\"1728\":1,\"1753\":1,\"2021\":1,\"2028\":1,\"2067\":1,\"2073\":1,\"2097\":1,\"2122\":1,\"2390\":1,\"2397\":1,\"2436\":1,\"2442\":1,\"2473\":1,\"2478\":1}}],[\"https\",{\"1\":{\"447\":1,\"493\":2,\"494\":1,\"495\":3,\"497\":1,\"498\":1,\"499\":1,\"501\":1,\"502\":1,\"503\":1,\"957\":1,\"1003\":2,\"1004\":1,\"1005\":3,\"1007\":1,\"1008\":1,\"1009\":1,\"1011\":1,\"1012\":1,\"1013\":1,\"1472\":1,\"1518\":2,\"1519\":1,\"1520\":3,\"1522\":1,\"1523\":1,\"1524\":1,\"1526\":1,\"1527\":1,\"1528\":1}}],[\"httpserversetup\",{\"1\":{\"119\":1,\"120\":3,\"471\":2,\"627\":1,\"628\":3,\"981\":2,\"1137\":1,\"1138\":3,\"1496\":2,\"1596\":1,\"1686\":1,\"1733\":1,\"1777\":1,\"1965\":1,\"2055\":1,\"2102\":1,\"2146\":1,\"2315\":1,\"2424\":1,\"2448\":1,\"2515\":1}}],[\"http\",{\"0\":{\"120\":1,\"628\":1,\"1138\":1,\"1934\":1,\"1936\":1,\"2303\":1,\"2305\":1,\"2672\":1,\"2674\":1},\"1\":{\"53\":4,\"78\":5,\"79\":1,\"80\":2,\"119\":1,\"120\":1,\"447\":1,\"471\":10,\"474\":3,\"486\":1,\"487\":1,\"494\":1,\"523\":1,\"561\":4,\"586\":5,\"587\":1,\"588\":2,\"627\":1,\"628\":1,\"957\":1,\"981\":10,\"984\":3,\"996\":1,\"997\":1,\"1004\":1,\"1033\":1,\"1071\":4,\"1096\":5,\"1097\":1,\"1098\":2,\"1137\":1,\"1138\":1,\"1472\":1,\"1496\":10,\"1499\":3,\"1511\":1,\"1512\":1,\"1519\":1,\"1548\":1,\"1596\":1,\"1598\":1,\"1697\":1,\"1733\":1,\"1751\":1,\"1752\":1,\"1753\":1,\"1754\":1,\"1933\":2,\"1934\":6,\"1965\":1,\"1967\":1,\"2066\":1,\"2102\":1,\"2120\":1,\"2121\":1,\"2122\":1,\"2123\":1,\"2302\":2,\"2303\":6,\"2315\":1,\"2317\":1,\"2435\":1,\"2448\":1,\"2471\":1,\"2472\":1,\"2473\":1,\"2474\":1,\"2671\":2,\"2672\":6}}],[\"httpx\",{\"0\":{\"78\":1,\"586\":1,\"1096\":1,\"1697\":1,\"2066\":1,\"2435\":1},\"1\":{\"7\":1,\"19\":1,\"31\":1,\"78\":1,\"586\":1,\"1096\":1,\"1697\":3,\"1702\":1,\"1934\":1,\"2066\":3,\"2071\":1,\"2303\":1,\"2435\":3,\"2440\":1,\"2672\":1}}],[\"ubuntu\",{\"1\":{\"2690\":4,\"2705\":4,\"2720\":4}}],[\"upgrade\",{\"0\":{\"1925\":1,\"2294\":1,\"2663\":1},\"1\":{\"1921\":1,\"1925\":2,\"2290\":1,\"2294\":2,\"2659\":1,\"2663\":2,\"2679\":4,\"2690\":2,\"2694\":4,\"2705\":2,\"2709\":4,\"2720\":2}}],[\"updating\",{\"1\":{\"399\":1,\"907\":1,\"1422\":1}}],[\"updater\",{\"1\":{\"139\":1,\"140\":2,\"242\":2,\"647\":1,\"648\":2,\"750\":2,\"1157\":1,\"1158\":2,\"1263\":2}}],[\"utf\",{\"1\":{\"518\":1,\"519\":1,\"1028\":1,\"1029\":1,\"1543\":1,\"1544\":1}}],[\"utils\",{\"0\":{\"397\":1,\"905\":1,\"1420\":1,\"1647\":1,\"2016\":1,\"2385\":1},\"1\":{\"466\":1,\"477\":1,\"976\":1,\"987\":1,\"1491\":1,\"1502\":1}}],[\"uy\",{\"1\":{\"502\":1,\"1012\":1,\"1527\":1}}],[\"u><\",{\"1\":{\"418\":2,\"928\":2,\"1443\":2}}],[\"unmatch\",{\"1\":{\"1892\":1,\"2261\":1,\"2630\":1}}],[\"uninstall\",{\"1\":{\"1922\":1,\"2291\":1,\"2660\":1}}],[\"unix\",{\"1\":{\"436\":1,\"437\":1,\"438\":1,\"946\":1,\"947\":1,\"948\":1,\"1461\":1,\"1462\":1,\"1463\":1}}],[\"uniontype\",{\"1\":{\"401\":1,\"909\":1,\"1424\":1}}],[\"union\",{\"1\":{\"401\":1,\"475\":2,\"909\":1,\"985\":2,\"1424\":1,\"1500\":2,\"1890\":1,\"2259\":1,\"2628\":1}}],[\"unimessage\",{\"1\":{\"108\":1,\"616\":1,\"1126\":1}}],[\"unspecified\",{\"1\":{\"222\":1,\"730\":1,\"1242\":1}}],[\"unset\",{\"1\":{\"158\":1,\"666\":1,\"1176\":1}}],[\"undefined\",{\"1\":{\"143\":1,\"144\":1,\"651\":1,\"652\":1,\"1161\":1,\"1162\":1}}],[\"untyped\",{\"1\":{\"142\":1,\"145\":1,\"229\":1,\"230\":1,\"266\":1,\"269\":1,\"270\":1,\"271\":1,\"272\":1,\"273\":1,\"286\":1,\"329\":1,\"373\":1,\"414\":1,\"415\":1,\"650\":1,\"653\":1,\"737\":1,\"738\":1,\"774\":1,\"777\":1,\"778\":1,\"779\":1,\"780\":1,\"781\":1,\"794\":1,\"837\":1,\"881\":1,\"924\":1,\"925\":1,\"1160\":1,\"1163\":1,\"1249\":1,\"1250\":1,\"1253\":1,\"1287\":1,\"1290\":1,\"1291\":1,\"1292\":1,\"1293\":1,\"1306\":1,\"1352\":1,\"1396\":1,\"1439\":1,\"1440\":1,\"1596\":1,\"1597\":1,\"1625\":1,\"1626\":1,\"1627\":1,\"1628\":1,\"1661\":1,\"1662\":1,\"1686\":1,\"1688\":1,\"1715\":1,\"1716\":1,\"1761\":1,\"1762\":1,\"1763\":1,\"1775\":1,\"1776\":1,\"1777\":1,\"1779\":1,\"1781\":1,\"1782\":1,\"1786\":1,\"1787\":1,\"1793\":1,\"1794\":1,\"1827\":1,\"1965\":1,\"1966\":1,\"1994\":1,\"1995\":1,\"1996\":1,\"1997\":1,\"2030\":1,\"2031\":1,\"2055\":1,\"2057\":1,\"2084\":1,\"2085\":1,\"2130\":1,\"2131\":1,\"2132\":1,\"2144\":1,\"2145\":1,\"2146\":1,\"2148\":1,\"2150\":1,\"2151\":1,\"2155\":1,\"2156\":1,\"2162\":1,\"2163\":1,\"2196\":1,\"2315\":1,\"2316\":1,\"2363\":1,\"2364\":1,\"2365\":1,\"2366\":1,\"2399\":1,\"2400\":1,\"2424\":1,\"2426\":1,\"2463\":1,\"2464\":1,\"2499\":1,\"2500\":1,\"2501\":1,\"2513\":1,\"2514\":1,\"2515\":1,\"2517\":1,\"2519\":1,\"2520\":1,\"2524\":1,\"2525\":1,\"2531\":1,\"2532\":1,\"2565\":1}}],[\"usageerror\",{\"1\":{\"2679\":1,\"2694\":1,\"2709\":1}}],[\"usage\",{\"1\":{\"1896\":1,\"2265\":1,\"2634\":1}}],[\"usage=\",{\"1\":{\"110\":1,\"618\":1,\"1128\":1}}],[\"uses\",{\"1\":{\"2690\":4,\"2705\":4,\"2720\":4}}],[\"use\",{\"0\":{\"435\":1,\"945\":1,\"1460\":1,\"1910\":1,\"1912\":1,\"1913\":1,\"2279\":1,\"2281\":1,\"2282\":1,\"2648\":1,\"2650\":1,\"2651\":1},\"1\":{\"118\":1,\"161\":1,\"297\":1,\"302\":1,\"435\":1,\"436\":1,\"437\":1,\"438\":1,\"626\":1,\"669\":1,\"805\":1,\"810\":1,\"945\":1,\"946\":1,\"947\":1,\"948\":1,\"1136\":1,\"1179\":1,\"1322\":1,\"1323\":1,\"1460\":1,\"1461\":1,\"1462\":1,\"1463\":1}}],[\"username\",{\"1\":{\"429\":2,\"939\":2,\"1454\":2,\"1929\":1,\"2298\":1,\"2667\":1}}],[\"users\",{\"1\":{\"329\":1,\"330\":1,\"332\":1,\"436\":1,\"437\":1,\"438\":1,\"837\":1,\"838\":1,\"840\":1,\"946\":1,\"947\":1,\"948\":1,\"1352\":1,\"1356\":1,\"1358\":1,\"1461\":1,\"1462\":1,\"1463\":1}}],[\"user\",{\"1\":{\"46\":2,\"140\":5,\"329\":2,\"331\":1,\"332\":1,\"421\":1,\"425\":1,\"429\":1,\"438\":1,\"476\":7,\"543\":2,\"554\":2,\"648\":5,\"837\":2,\"839\":1,\"840\":1,\"931\":1,\"935\":1,\"939\":1,\"948\":1,\"986\":7,\"1053\":2,\"1064\":2,\"1158\":5,\"1352\":2,\"1357\":1,\"1358\":1,\"1446\":1,\"1450\":1,\"1454\":1,\"1463\":1,\"1501\":7,\"1568\":2,\"1924\":1,\"2293\":1,\"2662\":1,\"2690\":4,\"2705\":4,\"2720\":4}}],[\"uvicorn\",{\"1\":{\"64\":6,\"65\":1,\"66\":1,\"67\":1,\"68\":1,\"72\":1,\"73\":1,\"74\":1,\"75\":1,\"76\":1,\"572\":6,\"573\":1,\"574\":1,\"575\":1,\"576\":1,\"580\":1,\"581\":1,\"582\":1,\"583\":1,\"584\":1,\"1082\":6,\"1083\":1,\"1084\":1,\"1085\":1,\"1086\":1,\"1090\":1,\"1091\":1,\"1092\":1,\"1093\":1,\"1094\":1,\"1676\":1,\"1677\":1,\"1678\":1,\"1679\":1,\"1688\":1,\"1767\":1,\"1768\":1,\"1769\":1,\"1770\":1,\"1779\":1,\"2045\":1,\"2046\":1,\"2047\":1,\"2048\":1,\"2057\":1,\"2136\":1,\"2137\":1,\"2138\":1,\"2139\":1,\"2148\":1,\"2414\":1,\"2415\":1,\"2416\":1,\"2417\":1,\"2426\":1,\"2505\":1,\"2506\":1,\"2507\":1,\"2508\":1,\"2517\":1}}],[\"url=dialect+driver\",{\"1\":{\"1929\":1,\"2298\":1,\"2667\":1}}],[\"url=api\",{\"1\":{\"474\":1,\"984\":1,\"1499\":1}}],[\"url=\",{\"1\":{\"470\":1,\"980\":1,\"1495\":1}}],[\"url\",{\"0\":{\"1929\":1,\"2298\":1,\"2667\":1},\"1\":{\"53\":2,\"120\":2,\"121\":2,\"470\":3,\"471\":4,\"561\":2,\"628\":2,\"629\":2,\"980\":3,\"981\":4,\"1071\":2,\"1138\":2,\"1139\":2,\"1495\":3,\"1496\":4,\"1728\":2,\"1886\":10,\"1890\":1,\"1906\":9,\"1929\":1,\"1930\":2,\"1932\":1,\"2097\":2,\"2255\":10,\"2259\":1,\"2275\":9,\"2298\":1,\"2299\":2,\"2301\":1,\"2478\":2,\"2624\":10,\"2628\":1,\"2644\":9,\"2667\":1,\"2668\":2,\"2670\":1,\"2690\":2,\"2705\":2,\"2720\":2}}],[\"轮询\",{\"1\":{\"53\":1,\"561\":1,\"1071\":1}}],[\"fetch\",{\"0\":{\"1918\":1,\"2287\":1,\"2656\":1}}],[\"featured\",{\"1\":{\"78\":1,\"586\":1,\"1096\":1}}],[\"fxyz\",{\"1\":{\"1903\":1,\"2272\":1,\"2641\":1}}],[\"fdef\",{\"1\":{\"1903\":1,\"2272\":1,\"2641\":1}}],[\"f|\",{\"1\":{\"1893\":1,\"2262\":1,\"2631\":1}}],[\"f8bbd0>error\",{\"1\":{\"470\":2,\"980\":2,\"1495\":2}}],[\"f8bbd0><\",{\"1\":{\"470\":3,\"980\":3,\"1495\":3}}],[\"f8bbd0>websocket\",{\"1\":{\"470\":1,\"980\":1,\"1495\":1}}],[\"f\",{\"1\":{\"421\":1,\"470\":2,\"471\":2,\"473\":1,\"474\":1,\"931\":1,\"980\":2,\"981\":2,\"983\":1,\"984\":1,\"1446\":1,\"1495\":2,\"1496\":2,\"1498\":1,\"1499\":1,\"1887\":1,\"1893\":3,\"1903\":1,\"2256\":1,\"2262\":3,\"2272\":1,\"2625\":1,\"2631\":3,\"2641\":1,\"2679\":2,\"2680\":6,\"2681\":3,\"2694\":2,\"2695\":6,\"2696\":3,\"2709\":2,\"2710\":6,\"2711\":3}}],[\"ffffff\",{\"1\":{\"175\":1,\"683\":1,\"1193\":1}}],[\"first\",{\"1\":{\"542\":2,\"1052\":2,\"1567\":2,\"2679\":4,\"2694\":4,\"2709\":4}}],[\"filter=default\",{\"1\":{\"418\":1,\"928\":1,\"1443\":1}}],[\"filter\",{\"1\":{\"418\":2,\"928\":2,\"1443\":2}}],[\"filehost\",{\"0\":{\"1917\":1,\"2286\":1,\"2655\":1}}],[\"filestypes\",{\"1\":{\"1728\":1,\"2097\":1,\"2478\":1}}],[\"files\",{\"1\":{\"1728\":1,\"2097\":1,\"2478\":1}}],[\"file\",{\"1\":{\"114\":1,\"163\":2,\"165\":2,\"224\":2,\"433\":14,\"478\":1,\"622\":1,\"671\":2,\"673\":2,\"732\":2,\"943\":14,\"988\":1,\"1132\":1,\"1181\":2,\"1183\":2,\"1244\":2,\"1458\":14,\"1503\":1,\"1812\":1,\"1813\":1,\"1886\":1,\"1906\":4,\"2181\":1,\"2182\":1,\"2255\":1,\"2275\":4,\"2550\":1,\"2551\":1,\"2624\":1,\"2644\":4}}],[\"finish\",{\"1\":{\"207\":2,\"421\":1,\"422\":2,\"429\":4,\"715\":2,\"931\":1,\"932\":2,\"939\":4,\"1227\":2,\"1446\":1,\"1447\":2,\"1454\":4,\"2680\":4,\"2695\":4,\"2710\":4}}],[\"finishedexception\",{\"1\":{\"195\":1,\"703\":1,\"1215\":1}}],[\"finally\",{\"1\":{\"121\":1,\"297\":1,\"470\":1,\"629\":1,\"805\":1,\"980\":1,\"1139\":1,\"1323\":1,\"1495\":1}}],[\"field\",{\"1\":{\"149\":1,\"150\":1,\"151\":1,\"152\":1,\"153\":1,\"154\":1,\"155\":1,\"156\":1,\"162\":1,\"447\":2,\"657\":1,\"658\":1,\"659\":1,\"660\":1,\"661\":1,\"662\":1,\"663\":1,\"664\":1,\"670\":1,\"957\":2,\"1167\":1,\"1168\":1,\"1169\":1,\"1170\":1,\"1171\":1,\"1172\":1,\"1173\":1,\"1174\":1,\"1180\":1,\"1472\":2,\"1637\":1,\"1650\":1,\"1888\":1,\"1892\":2,\"2006\":1,\"2019\":1,\"2257\":1,\"2261\":2,\"2375\":1,\"2388\":1,\"2626\":1,\"2630\":2}}],[\"fields\",{\"1\":{\"147\":1,\"655\":1,\"1165\":1,\"1640\":1,\"2009\":1,\"2378\":1}}],[\"fieldinfo\",{\"1\":{\"146\":1,\"151\":2,\"152\":1,\"155\":2,\"654\":1,\"659\":2,\"660\":1,\"663\":2,\"1164\":1,\"1169\":2,\"1170\":1,\"1173\":2,\"1640\":1,\"2009\":1,\"2378\":1}}],[\"future\",{\"1\":{\"2679\":1,\"2694\":1,\"2709\":1}}],[\"fuzy\",{\"1\":{\"1904\":2,\"2273\":2,\"2642\":2}}],[\"fuzzy\",{\"1\":{\"1896\":2,\"1897\":1,\"1900\":1,\"1902\":1,\"1904\":3,\"2265\":2,\"2266\":1,\"2269\":1,\"2271\":1,\"2273\":3,\"2634\":2,\"2635\":1,\"2638\":1,\"2640\":1,\"2642\":3}}],[\"func=ws\",{\"1\":{\"121\":1,\"629\":1,\"1139\":1}}],[\"func=hello\",{\"1\":{\"120\":1,\"628\":1,\"1138\":1}}],[\"func\",{\"1\":{\"120\":1,\"121\":1,\"246\":1,\"247\":1,\"288\":1,\"289\":1,\"290\":1,\"291\":1,\"297\":4,\"412\":1,\"628\":1,\"629\":1,\"754\":1,\"755\":1,\"796\":1,\"797\":1,\"798\":1,\"799\":1,\"805\":4,\"922\":1,\"1138\":1,\"1139\":1,\"1267\":1,\"1268\":1,\"1308\":1,\"1309\":1,\"1310\":1,\"1311\":1,\"1323\":4,\"1437\":1,\"1577\":1,\"1578\":1,\"1600\":3,\"1717\":3,\"1718\":3,\"1719\":1,\"1720\":1,\"1789\":1,\"1946\":1,\"1947\":1,\"1969\":3,\"2086\":3,\"2087\":3,\"2088\":1,\"2089\":1,\"2158\":1,\"2319\":3,\"2327\":1,\"2328\":1,\"2465\":3,\"2466\":3,\"2467\":1,\"2468\":1,\"2527\":1}}],[\"function\",{\"1\":{\"117\":1,\"333\":4,\"347\":4,\"406\":2,\"625\":1,\"841\":4,\"855\":4,\"914\":2,\"1135\":1,\"1353\":4,\"1370\":4,\"1429\":2}}],[\"fullname\",{\"1\":{\"1827\":1,\"1828\":1,\"2196\":1,\"2197\":1,\"2565\":1,\"2566\":1}}],[\"fullmatch\",{\"1\":{\"97\":5,\"193\":1,\"216\":2,\"605\":5,\"701\":1,\"724\":2,\"1115\":5,\"1213\":1,\"1236\":2,\"1802\":2,\"2171\":2,\"2540\":2}}],[\"fully\",{\"1\":{\"78\":1,\"586\":1,\"1096\":1}}],[\"found\",{\"1\":{\"2745\":1}}],[\"foo|\",{\"1\":{\"1893\":3,\"2262\":3,\"2631\":3}}],[\"foo|bar|baz\",{\"1\":{\"1890\":1,\"2259\":1,\"2628\":1}}],[\"foobar\",{\"1\":{\"1887\":1,\"2256\":1,\"2625\":1}}],[\"foobaz\",{\"1\":{\"1887\":3,\"2256\":3,\"2625\":3}}],[\"foo\",{\"1\":{\"139\":2,\"140\":4,\"426\":2,\"511\":3,\"512\":3,\"513\":1,\"539\":1,\"647\":2,\"648\":4,\"936\":2,\"1021\":3,\"1022\":3,\"1023\":1,\"1049\":1,\"1157\":2,\"1158\":4,\"1451\":2,\"1536\":3,\"1537\":3,\"1538\":1,\"1564\":1,\"1887\":19,\"1889\":7,\"1890\":11,\"1893\":6,\"1895\":12,\"1896\":1,\"1898\":5,\"1903\":1,\"1905\":2,\"1907\":3,\"1914\":1,\"2256\":19,\"2258\":7,\"2259\":11,\"2262\":6,\"2264\":12,\"2265\":1,\"2267\":5,\"2272\":1,\"2274\":2,\"2276\":3,\"2283\":1,\"2625\":19,\"2627\":7,\"2628\":11,\"2631\":6,\"2633\":12,\"2634\":1,\"2636\":5,\"2641\":1,\"2643\":2,\"2645\":3,\"2652\":1}}],[\"focus\",{\"1\":{\"79\":1,\"587\":1,\"1097\":1}}],[\"formatter\",{\"1\":{\"1897\":1,\"1898\":2,\"2266\":1,\"2267\":2,\"2635\":1,\"2636\":2}}],[\"formatspecfunc\",{\"1\":{\"1633\":2,\"2002\":2,\"2371\":2}}],[\"format=default\",{\"1\":{\"418\":1,\"928\":1,\"1443\":1}}],[\"format=\",{\"1\":{\"418\":1,\"928\":1,\"1443\":1}}],[\"format\",{\"1\":{\"418\":2,\"543\":6,\"928\":2,\"1053\":6,\"1443\":2,\"1568\":6,\"1602\":2,\"1636\":1,\"1638\":1,\"1971\":2,\"2005\":1,\"2007\":1,\"2340\":2,\"2374\":1,\"2376\":1}}],[\"force\",{\"1\":{\"99\":4,\"360\":1,\"361\":1,\"607\":4,\"868\":1,\"869\":1,\"1117\":4,\"1383\":1,\"1384\":1,\"1763\":1,\"1865\":1,\"1870\":1,\"1882\":1,\"2132\":1,\"2234\":1,\"2239\":1,\"2251\":1,\"2501\":1,\"2603\":1,\"2608\":1,\"2620\":1}}],[\"for\",{\"1\":{\"58\":1,\"78\":2,\"79\":1,\"80\":1,\"142\":1,\"145\":1,\"146\":1,\"147\":1,\"148\":1,\"532\":1,\"538\":2,\"566\":1,\"586\":2,\"587\":1,\"588\":1,\"650\":1,\"653\":1,\"654\":1,\"655\":1,\"656\":1,\"1042\":1,\"1048\":2,\"1076\":1,\"1096\":2,\"1097\":1,\"1098\":1,\"1160\":1,\"1163\":1,\"1164\":1,\"1165\":1,\"1166\":1,\"1557\":1,\"1563\":2,\"2681\":2,\"2689\":14,\"2696\":2,\"2704\":14,\"2711\":2,\"2719\":14}}],[\"forwardmixin\",{\"1\":{\"1748\":2,\"2117\":2,\"2469\":2}}],[\"forwardref\",{\"1\":{\"380\":1,\"888\":1,\"1403\":1}}],[\"forward\",{\"1\":{\"53\":1,\"470\":2,\"473\":1,\"561\":1,\"980\":2,\"983\":1,\"1071\":1,\"1495\":2,\"1498\":1}}],[\"flush\",{\"1\":{\"2685\":1,\"2700\":1,\"2715\":1}}],[\"flag\",{\"1\":{\"1903\":1,\"2272\":1,\"2641\":1}}],[\"flag|\",{\"1\":{\"1903\":1,\"2272\":1,\"2641\":1}}],[\"flags\",{\"1\":{\"366\":1,\"367\":1,\"874\":1,\"875\":1,\"1389\":1,\"1390\":1,\"1867\":2,\"1884\":2,\"2236\":2,\"2253\":2,\"2605\":2,\"2622\":2}}],[\"flags=re\",{\"1\":{\"101\":2,\"609\":2,\"1119\":2}}],[\"flask\",{\"1\":{\"70\":3,\"578\":3,\"1088\":3}}],[\"float\",{\"1\":{\"66\":1,\"74\":1,\"170\":1,\"447\":1,\"574\":1,\"582\":1,\"678\":1,\"957\":1,\"1084\":1,\"1092\":1,\"1188\":1,\"1472\":1,\"1652\":1,\"1659\":1,\"1677\":1,\"1698\":1,\"1704\":1,\"1728\":1,\"1753\":1,\"1768\":1,\"1890\":2,\"2021\":1,\"2028\":1,\"2046\":1,\"2067\":1,\"2073\":1,\"2097\":1,\"2122\":1,\"2137\":1,\"2259\":2,\"2390\":1,\"2397\":1,\"2415\":1,\"2436\":1,\"2442\":1,\"2473\":1,\"2478\":1,\"2506\":1,\"2628\":2}}],[\"fail\",{\"1\":{\"2690\":2,\"2705\":2,\"2720\":2}}],[\"failed\",{\"1\":{\"2679\":1,\"2694\":1,\"2709\":1}}],[\"fake\",{\"1\":{\"1934\":8,\"1935\":7,\"2303\":8,\"2304\":7,\"2672\":8,\"2673\":7}}],[\"fabc\",{\"1\":{\"1903\":1,\"2272\":1,\"2641\":1}}],[\"factory\",{\"1\":{\"1632\":1,\"2001\":1,\"2370\":1}}],[\"factory=list\",{\"1\":{\"447\":2,\"957\":2,\"1472\":2}}],[\"false\",{\"1\":{\"64\":1,\"72\":1,\"95\":1,\"96\":1,\"97\":1,\"99\":1,\"297\":1,\"435\":1,\"447\":3,\"476\":1,\"572\":1,\"580\":1,\"603\":1,\"604\":1,\"605\":1,\"607\":1,\"805\":1,\"945\":1,\"957\":3,\"986\":1,\"1082\":1,\"1090\":1,\"1113\":1,\"1114\":1,\"1115\":1,\"1117\":1,\"1323\":1,\"1460\":1,\"1472\":3,\"1501\":1,\"1632\":1,\"1887\":1,\"1890\":1,\"1894\":1,\"1896\":1,\"1902\":1,\"1909\":1,\"1910\":1,\"1911\":1,\"1912\":1,\"1913\":1,\"1916\":1,\"1917\":1,\"1918\":1,\"2001\":1,\"2256\":1,\"2259\":1,\"2263\":1,\"2265\":1,\"2271\":1,\"2278\":1,\"2279\":1,\"2280\":1,\"2281\":1,\"2282\":1,\"2285\":1,\"2286\":1,\"2287\":1,\"2370\":1,\"2625\":1,\"2628\":1,\"2632\":1,\"2634\":1,\"2640\":1,\"2647\":1,\"2648\":1,\"2649\":1,\"2650\":1,\"2651\":1,\"2654\":1,\"2655\":1,\"2656\":1,\"2690\":2,\"2705\":2,\"2720\":2}}],[\"fast\",{\"1\":{\"58\":1,\"566\":1,\"1076\":1,\"2690\":2,\"2705\":2,\"2720\":2}}],[\"fastapi\",{\"0\":{\"58\":1,\"59\":1,\"566\":1,\"567\":1,\"1076\":1,\"1077\":1,\"1669\":1,\"2038\":1,\"2407\":1},\"1\":{\"54\":1,\"58\":3,\"60\":1,\"61\":1,\"62\":1,\"63\":1,\"64\":1,\"69\":1,\"124\":5,\"505\":1,\"562\":1,\"566\":3,\"568\":1,\"569\":1,\"570\":1,\"571\":1,\"572\":1,\"577\":1,\"632\":5,\"1015\":1,\"1072\":1,\"1076\":3,\"1078\":1,\"1079\":1,\"1080\":1,\"1081\":1,\"1082\":1,\"1087\":1,\"1142\":5,\"1530\":1,\"1669\":3,\"1670\":2,\"1680\":1,\"1681\":1,\"1682\":1,\"1683\":2,\"1684\":2,\"1685\":1,\"1688\":1,\"1689\":1,\"2038\":3,\"2039\":2,\"2049\":1,\"2050\":1,\"2051\":1,\"2052\":2,\"2053\":2,\"2054\":1,\"2057\":1,\"2058\":1,\"2407\":3,\"2408\":2,\"2418\":1,\"2419\":1,\"2420\":1,\"2421\":2,\"2422\":2,\"2423\":1,\"2426\":1,\"2427\":1}}],[\"framework\",{\"1\":{\"58\":1,\"566\":1,\"1076\":1}}],[\"from\",{\"1\":{\"38\":1,\"39\":1,\"40\":1,\"55\":1,\"82\":1,\"83\":1,\"95\":2,\"96\":2,\"97\":2,\"98\":2,\"99\":2,\"100\":3,\"101\":2,\"102\":1,\"103\":2,\"105\":2,\"106\":2,\"110\":2,\"114\":1,\"116\":1,\"117\":2,\"118\":2,\"120\":2,\"121\":2,\"124\":1,\"127\":1,\"128\":1,\"129\":1,\"130\":1,\"132\":2,\"133\":1,\"134\":2,\"135\":1,\"136\":2,\"137\":2,\"140\":3,\"152\":1,\"155\":1,\"216\":4,\"218\":1,\"227\":1,\"365\":1,\"417\":1,\"418\":2,\"419\":1,\"421\":1,\"422\":3,\"425\":2,\"426\":1,\"429\":4,\"433\":2,\"451\":2,\"452\":2,\"466\":2,\"467\":1,\"468\":6,\"470\":5,\"471\":2,\"472\":1,\"473\":5,\"474\":4,\"475\":7,\"476\":4,\"477\":5,\"478\":1,\"507\":1,\"515\":1,\"518\":1,\"519\":1,\"526\":1,\"527\":2,\"532\":1,\"534\":1,\"536\":2,\"537\":1,\"541\":1,\"543\":5,\"546\":1,\"547\":1,\"548\":1,\"563\":1,\"590\":1,\"591\":1,\"603\":2,\"604\":2,\"605\":2,\"606\":2,\"607\":2,\"608\":3,\"609\":2,\"610\":1,\"611\":2,\"613\":2,\"614\":2,\"618\":2,\"622\":1,\"624\":1,\"625\":2,\"626\":2,\"628\":2,\"629\":2,\"632\":1,\"635\":1,\"636\":1,\"637\":1,\"638\":1,\"640\":2,\"641\":1,\"642\":2,\"643\":1,\"644\":2,\"645\":2,\"648\":3,\"660\":1,\"663\":1,\"724\":4,\"726\":1,\"735\":1,\"873\":1,\"927\":1,\"928\":2,\"929\":1,\"931\":1,\"932\":3,\"934\":2,\"935\":2,\"936\":3,\"939\":4,\"943\":2,\"961\":2,\"962\":2,\"976\":2,\"977\":1,\"978\":6,\"980\":5,\"981\":2,\"982\":1,\"983\":5,\"984\":4,\"985\":7,\"986\":4,\"987\":5,\"988\":1,\"1017\":1,\"1025\":1,\"1028\":1,\"1029\":1,\"1036\":1,\"1037\":2,\"1042\":1,\"1044\":1,\"1046\":2,\"1047\":1,\"1051\":1,\"1053\":5,\"1056\":1,\"1057\":1,\"1058\":1,\"1073\":1,\"1100\":1,\"1101\":1,\"1113\":2,\"1114\":2,\"1115\":2,\"1116\":2,\"1117\":2,\"1118\":3,\"1119\":2,\"1120\":1,\"1121\":2,\"1123\":2,\"1124\":2,\"1128\":2,\"1132\":1,\"1134\":1,\"1135\":2,\"1136\":2,\"1138\":2,\"1139\":2,\"1142\":1,\"1145\":1,\"1146\":1,\"1147\":1,\"1148\":1,\"1150\":2,\"1151\":1,\"1152\":2,\"1153\":1,\"1154\":2,\"1155\":2,\"1158\":3,\"1170\":1,\"1173\":1,\"1236\":4,\"1238\":1,\"1247\":1,\"1388\":1,\"1442\":1,\"1443\":2,\"1444\":1,\"1446\":1,\"1447\":3,\"1449\":2,\"1450\":2,\"1451\":3,\"1454\":4,\"1458\":2,\"1476\":2,\"1477\":2,\"1491\":2,\"1492\":1,\"1493\":6,\"1495\":5,\"1496\":2,\"1497\":1,\"1498\":5,\"1499\":4,\"1500\":7,\"1501\":4,\"1502\":5,\"1503\":1,\"1532\":1,\"1540\":1,\"1543\":1,\"1544\":1,\"1551\":1,\"1552\":2,\"1557\":1,\"1559\":1,\"1561\":2,\"1562\":1,\"1566\":1,\"1568\":5,\"1802\":4,\"1812\":1,\"1813\":1,\"1886\":1,\"1887\":1,\"1889\":2,\"1890\":2,\"1893\":1,\"1896\":1,\"1898\":1,\"1899\":1,\"1901\":1,\"1902\":2,\"1903\":3,\"1904\":1,\"1905\":1,\"1906\":3,\"1907\":1,\"1934\":3,\"1935\":2,\"2171\":4,\"2181\":1,\"2182\":1,\"2255\":1,\"2256\":1,\"2258\":2,\"2259\":2,\"2262\":1,\"2265\":1,\"2267\":1,\"2268\":1,\"2270\":1,\"2271\":2,\"2272\":3,\"2273\":1,\"2274\":1,\"2275\":3,\"2276\":1,\"2303\":3,\"2304\":2,\"2540\":4,\"2550\":1,\"2551\":1,\"2624\":1,\"2625\":1,\"2627\":2,\"2628\":2,\"2631\":1,\"2634\":1,\"2636\":1,\"2637\":1,\"2639\":1,\"2640\":2,\"2641\":3,\"2642\":1,\"2643\":1,\"2644\":3,\"2645\":1,\"2672\":3,\"2673\":2,\"2678\":3,\"2679\":3,\"2680\":8,\"2681\":5,\"2684\":4,\"2685\":4,\"2687\":4,\"2688\":3,\"2693\":3,\"2694\":3,\"2695\":8,\"2696\":5,\"2699\":4,\"2700\":4,\"2702\":4,\"2703\":3,\"2708\":3,\"2709\":3,\"2710\":8,\"2711\":5,\"2714\":4,\"2715\":4,\"2717\":4,\"2718\":3}}],[\"如指定需要传入参数名称\",{\"1\":{\"1904\":1,\"2273\":1,\"2642\":1}}],[\"如此该命令头会匹配对应的类型\",{\"1\":{\"1887\":1,\"2256\":1,\"2625\":1}}],[\"如根据用户\",{\"1\":{\"491\":1,\"1001\":1,\"1516\":1}}],[\"如无字符串嵌入格式可直接返回文本类型\",{\"1\":{\"477\":1,\"987\":1,\"1502\":1}}],[\"如无配置类可不填\",{\"1\":{\"110\":1,\"618\":1,\"1128\":1}}],[\"如何更好地编写一个跨平台的插件\",{\"1\":{\"422\":1,\"932\":1,\"1447\":1}}],[\"如何对不同平台的事件进行不同的处理\",{\"1\":{\"422\":1,\"932\":1,\"1447\":1}}],[\"如何对私聊和群聊消息进行不同的处理\",{\"1\":{\"422\":1,\"932\":1,\"1447\":1}}],[\"如何根据不同平台事件类型进行不同的处理\",{\"1\":{\"421\":1,\"931\":1,\"1446\":1}}],[\"如何安装驱动器请参考安装驱动器\",{\"1\":{\"52\":1,\"560\":1,\"1070\":1}}],[\"如下所示\",{\"1\":{\"110\":1,\"618\":1,\"1128\":1}}],[\"如需从头匹配请使用\",{\"1\":{\"101\":1,\"367\":1,\"609\":1,\"875\":1,\"1119\":1,\"1390\":1}}],[\"如\",{\"1\":{\"53\":1,\"54\":1,\"64\":1,\"115\":1,\"127\":1,\"128\":1,\"139\":1,\"140\":1,\"169\":1,\"211\":1,\"422\":1,\"432\":1,\"433\":1,\"443\":1,\"449\":1,\"495\":1,\"502\":1,\"561\":1,\"562\":1,\"572\":1,\"623\":1,\"635\":1,\"636\":1,\"647\":1,\"648\":1,\"677\":1,\"719\":1,\"932\":1,\"942\":1,\"943\":1,\"953\":1,\"959\":1,\"1005\":1,\"1012\":1,\"1071\":1,\"1072\":1,\"1082\":1,\"1133\":1,\"1145\":1,\"1146\":1,\"1157\":1,\"1158\":1,\"1187\":1,\"1231\":1,\"1447\":1,\"1457\":1,\"1458\":1,\"1468\":1,\"1474\":1,\"1520\":1,\"1527\":1,\"1589\":1,\"1893\":1,\"1902\":1,\"1904\":1,\"1914\":1,\"1919\":2,\"1958\":1,\"2262\":1,\"2271\":1,\"2273\":1,\"2283\":1,\"2288\":2,\"2308\":1,\"2631\":1,\"2640\":1,\"2642\":1,\"2652\":1,\"2657\":2}}],[\"如果项目还需要考虑跨平台和跨\",{\"1\":{\"2690\":1,\"2705\":1,\"2720\":1}}],[\"如果不指定\",{\"1\":{\"1925\":1,\"2294\":1,\"2663\":1}}],[\"如果不知道该选择哪个驱动器\",{\"1\":{\"52\":1,\"560\":1,\"1070\":1}}],[\"如果传入了多个插件名称\",{\"1\":{\"1817\":1,\"2186\":1,\"2555\":1}}],[\"如果提供的模块名为某个插件的子模块\",{\"1\":{\"1804\":1,\"2173\":1,\"2542\":1}}],[\"如果一条消息中包含\",{\"1\":{\"526\":1,\"1036\":1,\"1551\":1}}],[\"如果使用虚拟环境\",{\"1\":{\"508\":1,\"1018\":1,\"1533\":1}}],[\"如果可能\",{\"1\":{\"490\":1,\"491\":1,\"1000\":1,\"1001\":1,\"1515\":1,\"1516\":1}}],[\"如果想要更深入地学习关于\",{\"1\":{\"2676\":1,\"2691\":1,\"2706\":1}}],[\"如果想要将适配器发布到\",{\"1\":{\"479\":1,\"989\":1,\"1504\":1}}],[\"如果想要输出日志到文件\",{\"1\":{\"418\":1,\"928\":1,\"1443\":1}}],[\"如果采用\",{\"1\":{\"474\":1,\"984\":1,\"1499\":1}}],[\"如果通过\",{\"1\":{\"474\":1,\"984\":1,\"1499\":1}}],[\"如果在之前的创建项目章节中手动创建了相关文件\",{\"1\":{\"513\":1,\"1023\":1,\"1538\":1}}],[\"如果在之前的快速上手章节中已经使用\",{\"1\":{\"513\":1,\"1023\":1,\"1538\":1}}],[\"如果在安装或者开发\",{\"1\":{\"457\":1,\"967\":1,\"1482\":1}}],[\"如果在开启该功能后\",{\"1\":{\"64\":1,\"572\":1,\"1082\":1}}],[\"如果所有的检查都通过\",{\"1\":{\"423\":1,\"933\":1,\"1448\":1}}],[\"如果三者任一类型注解不匹配\",{\"1\":{\"422\":1,\"932\":1,\"1447\":1}}],[\"如果基类就能满足你的需求\",{\"1\":{\"421\":1,\"931\":1,\"1446\":1}}],[\"如果参数解析失败\",{\"1\":{\"365\":1,\"873\":1,\"1388\":1}}],[\"如果我们不满足于基类能获得的信息\",{\"1\":{\"421\":1,\"931\":1,\"1446\":1}}],[\"如果我们希望响应多个用户的消息\",{\"1\":{\"140\":1,\"648\":1,\"1158\":1}}],[\"如果我们需要多平台支持\",{\"1\":{\"38\":1,\"546\":1,\"1056\":1}}],[\"如果希望实现更复杂的会话功能\",{\"1\":{\"140\":1,\"648\":1,\"1158\":1}}],[\"如果希望在会话过程中的不同阶段响应不同类型的事件\",{\"1\":{\"139\":1,\"647\":1,\"1157\":1}}],[\"如果希望接收一个特定类型的消息\",{\"1\":{\"139\":1,\"647\":1,\"1157\":1}}],[\"如果没有找到对应的消息\",{\"1\":{\"262\":1,\"770\":1,\"1283\":1}}],[\"如果没有找到对应的事件\",{\"1\":{\"259\":1,\"767\":1,\"1280\":1}}],[\"如果没有事件\",{\"1\":{\"261\":1,\"769\":1,\"1282\":1}}],[\"如果没有事先声明或加载插件\",{\"1\":{\"116\":1,\"624\":1,\"1134\":1}}],[\"如果没有\",{\"1\":{\"117\":1,\"625\":1,\"1135\":1}}],[\"如果你曾经使用过\",{\"1\":{\"2680\":1,\"2695\":1,\"2710\":1}}],[\"如果你后续使用了\",{\"1\":{\"508\":1,\"1018\":1,\"1533\":1}}],[\"如果你使用自定义的入口文件bot\",{\"1\":{\"514\":1,\"1024\":1,\"1539\":1}}],[\"如果你使用\",{\"1\":{\"507\":1,\"514\":1,\"1017\":1,\"1024\":1,\"1532\":1,\"1539\":1}}],[\"如果你想要了解\",{\"1\":{\"504\":1,\"1014\":1,\"1529\":1}}],[\"如果你想要开发自己的适配器\",{\"1\":{\"51\":1,\"559\":1,\"1069\":1}}],[\"如果你已经有一个插件\",{\"1\":{\"114\":1,\"622\":1,\"1132\":1}}],[\"如果未设置\",{\"1\":{\"105\":1,\"613\":1,\"1123\":1}}],[\"如果匹配成功\",{\"1\":{\"100\":1,\"608\":1,\"1118\":1}}],[\"如果需要在当前消息序列后直接拼接新的消息段\",{\"1\":{\"542\":1,\"1052\":1,\"1567\":1}}],[\"如果需要自定义日志格式\",{\"1\":{\"418\":1,\"928\":1,\"1443\":1}}],[\"如果需要输出彩色日志\",{\"1\":{\"417\":1,\"927\":1,\"1442\":1}}],[\"如果需要记录\",{\"1\":{\"417\":1,\"927\":1,\"1442\":1}}],[\"如果需要获取所有当前声明的插件名称\",{\"1\":{\"111\":1,\"619\":1,\"1129\":1}}],[\"如果需要获取指定适配器连接的\",{\"1\":{\"40\":1,\"548\":1,\"1058\":1}}],[\"如果需要为\",{\"1\":{\"105\":1,\"613\":1,\"1123\":1}}],[\"如果需要严格匹配命令与参数间的空白符\",{\"1\":{\"99\":1,\"607\":1,\"1117\":1}}],[\"如果\",{\"1\":{\"91\":1,\"251\":1,\"329\":1,\"331\":1,\"332\":1,\"401\":3,\"518\":1,\"519\":1,\"543\":1,\"599\":1,\"759\":1,\"837\":1,\"839\":1,\"840\":1,\"909\":3,\"1028\":1,\"1029\":1,\"1053\":1,\"1109\":1,\"1272\":1,\"1352\":1,\"1357\":1,\"1358\":1,\"1424\":3,\"1543\":1,\"1544\":1,\"1568\":1}}],[\"如果阻断为\",{\"1\":{\"90\":1,\"598\":1,\"1108\":1}}],[\"如果响应器的优先级相同\",{\"1\":{\"89\":1,\"597\":1,\"1107\":1}}],[\"如果响应规则检查通过\",{\"1\":{\"88\":1,\"596\":1,\"1106\":1}}],[\"如果权限检查通过\",{\"1\":{\"87\":1,\"595\":1,\"1105\":1}}],[\"如果有其他类型的事件需要响应\",{\"1\":{\"86\":1,\"594\":1,\"1104\":1}}],[\"如果类型为空字符串\",{\"1\":{\"86\":1,\"594\":1,\"1104\":1}}],[\"如果为嵌套的子插件\",{\"1\":{\"1803\":1,\"2172\":1,\"2541\":1}}],[\"如果为字符串\",{\"1\":{\"99\":1,\"607\":1,\"1117\":1}}],[\"如果为\",{\"1\":{\"60\":1,\"61\":1,\"62\":1,\"91\":1,\"99\":1,\"568\":1,\"569\":1,\"570\":1,\"599\":1,\"607\":1,\"1078\":1,\"1079\":1,\"1080\":1,\"1109\":1,\"1117\":1,\"1803\":1,\"2172\":1,\"2541\":1}}],[\"如果事件没有相关\",{\"1\":{\"476\":1,\"986\":1,\"1501\":1}}],[\"如果事件没有用户\",{\"1\":{\"476\":1,\"986\":1,\"1501\":1}}],[\"如果事件非消息类型事件\",{\"1\":{\"476\":1,\"986\":1,\"1501\":1}}],[\"如果事件不包含消息\",{\"1\":{\"49\":1,\"557\":1,\"1067\":1}}],[\"如果事件包含消息\",{\"1\":{\"48\":1,\"556\":1,\"1066\":1}}],[\"如果省略\",{\"1\":{\"40\":1,\"548\":1,\"1058\":1}}],[\"提高代码可读性和书写效率\",{\"1\":{\"525\":1,\"1035\":1,\"1550\":1}}],[\"提高机器人的便携性\",{\"1\":{\"486\":1,\"487\":1,\"996\":1,\"997\":1,\"1511\":1,\"1512\":1}}],[\"提取消息内纯文本消息\",{\"1\":{\"1618\":1,\"1987\":1,\"2356\":1}}],[\"提取消息纯文本字符串\",{\"1\":{\"537\":1,\"1047\":1,\"1562\":1}}],[\"提取\",{\"1\":{\"524\":1,\"1034\":1,\"1549\":1}}],[\"提升用户体验\",{\"1\":{\"502\":1,\"1012\":1,\"1527\":1}}],[\"提升页面的无障碍访问性\",{\"1\":{\"501\":1,\"1011\":1,\"1526\":1}}],[\"提升现有\",{\"1\":{\"486\":1,\"487\":1,\"996\":1,\"997\":1,\"1511\":1,\"1512\":1}}],[\"提供获取关键信息的方法\",{\"1\":{\"1579\":1,\"1948\":1,\"2329\":1}}],[\"提供基本的机器人功能\",{\"1\":{\"523\":1,\"1033\":1,\"1548\":1}}],[\"提供低代码编程支持\",{\"1\":{\"503\":1,\"1013\":1,\"1528\":1}}],[\"提供用户修改信息的处理方式\",{\"1\":{\"502\":1,\"1012\":1,\"1527\":1}}],[\"提供模型迁移与管理功能\",{\"1\":{\"499\":1,\"1009\":1,\"1524\":1}}],[\"提供关系模型定义功能\",{\"1\":{\"499\":1,\"1009\":1,\"1524\":1}}],[\"提供一个项目管理面板服务\",{\"1\":{\"497\":1,\"1007\":1,\"1522\":1}}],[\"提供商\",{\"1\":{\"482\":1,\"992\":1,\"1507\":1}}],[\"提供的加载插件方法前\",{\"1\":{\"116\":1,\"624\":1,\"1134\":1}}],[\"提供的\",{\"1\":{\"60\":1,\"61\":1,\"62\":1,\"63\":1,\"64\":1,\"466\":1,\"474\":1,\"568\":1,\"569\":1,\"570\":1,\"571\":1,\"572\":1,\"976\":1,\"984\":1,\"1078\":1,\"1079\":1,\"1080\":1,\"1081\":1,\"1082\":1,\"1491\":1,\"1499\":1}}],[\"提供了强大且灵活的依赖注入\",{\"1\":{\"2682\":1,\"2697\":1,\"2712\":1}}],[\"提供了预制的几类\",{\"1\":{\"1894\":1,\"2263\":1,\"2632\":1}}],[\"提供了一个便捷而高效的解决方案\",{\"1\":{\"422\":1,\"932\":1,\"1447\":1}}],[\"提供了一个\",{\"1\":{\"419\":1,\"929\":1,\"1444\":1}}],[\"提供了一种方法来确保我们依赖的插件已经被正确加载\",{\"1\":{\"117\":1,\"625\":1,\"1135\":1}}],[\"提供了多种功能各异的辅助函数\",{\"1\":{\"525\":1,\"1035\":1,\"1550\":1}}],[\"提供了多种\",{\"1\":{\"469\":1,\"979\":1,\"1494\":1}}],[\"提供了多种获取插件对象的方法\",{\"1\":{\"111\":1,\"619\":1,\"1129\":1}}],[\"提供了多个插槽以进行事件的预处理等\",{\"1\":{\"287\":1,\"795\":1,\"1307\":1}}],[\"提供了两种响应器组\",{\"1\":{\"104\":1,\"612\":1,\"1122\":1}}],[\"提供了\",{\"1\":{\"39\":1,\"431\":1,\"442\":1,\"547\":1,\"941\":1,\"952\":1,\"1057\":1,\"1456\":1,\"1467\":1}}],[\"提供了使用便捷\",{\"1\":{\"4\":1,\"16\":1,\"28\":1}}],[\"提示\",{\"1\":{\"52\":2,\"84\":1,\"101\":1,\"169\":1,\"361\":1,\"365\":1,\"367\":2,\"422\":1,\"433\":1,\"463\":1,\"465\":1,\"507\":1,\"518\":1,\"519\":1,\"526\":1,\"527\":1,\"560\":2,\"592\":1,\"602\":1,\"609\":1,\"677\":1,\"869\":1,\"873\":1,\"875\":2,\"932\":1,\"943\":1,\"973\":1,\"975\":1,\"1017\":1,\"1028\":1,\"1029\":1,\"1036\":1,\"1037\":1,\"1070\":2,\"1102\":1,\"1112\":1,\"1119\":1,\"1187\":1,\"1384\":1,\"1388\":1,\"1390\":2,\"1447\":1,\"1458\":1,\"1488\":1,\"1490\":1,\"1532\":1,\"1543\":1,\"1544\":1,\"1551\":1,\"1552\":1,\"1651\":1,\"1669\":1,\"1697\":1,\"1758\":1,\"1764\":1,\"1788\":1,\"1887\":1,\"1889\":1,\"1890\":1,\"1891\":1,\"2020\":1,\"2038\":1,\"2066\":1,\"2127\":1,\"2133\":1,\"2157\":1,\"2256\":1,\"2258\":1,\"2259\":1,\"2260\":1,\"2389\":1,\"2407\":1,\"2435\":1,\"2496\":1,\"2502\":1,\"2526\":1,\"2625\":1,\"2627\":1,\"2628\":1,\"2629\":1}}],[\"欢迎感兴趣的同学通过\",{\"1\":{\"496\":1,\"500\":1,\"1006\":1,\"1010\":1,\"1521\":1,\"1525\":1}}],[\"欢迎感兴趣的同学加入\",{\"1\":{\"492\":1,\"1002\":1,\"1517\":1}}],[\"欢迎感兴趣的同学在上面给出的活动官网报名\",{\"1\":{\"480\":1,\"990\":1,\"1505\":1}}],[\"欢迎参与我们的社区讨论\",{\"1\":{\"457\":1,\"967\":1,\"1482\":1}}],[\"欢迎将你的作品分享到插件商店\",{\"1\":{\"140\":1,\"648\":1,\"1158\":1}}],[\"欢迎通过商店发布你的适配器\",{\"1\":{\"51\":1,\"559\":1,\"1069\":1}}],[\"欢迎提交\",{\"1\":{\"11\":1,\"23\":1,\"35\":1}}],[\"开头的十六进制字符串\",{\"1\":{\"1890\":1,\"2259\":1,\"2628\":1}}],[\"开头的插件不会被导入\",{\"1\":{\"1810\":1,\"1811\":1,\"1812\":1,\"1813\":1,\"2179\":1,\"2180\":1,\"2181\":1,\"2182\":1,\"2548\":1,\"2549\":1,\"2550\":1,\"2551\":1}}],[\"开头的消息进行响应\",{\"1\":{\"526\":1,\"1036\":1,\"1551\":1}}],[\"开头的消息\",{\"1\":{\"99\":2,\"361\":2,\"607\":2,\"869\":2,\"1117\":2,\"1384\":2}}],[\"开启\",{\"1\":{\"1675\":1,\"1766\":1,\"1932\":1,\"2044\":1,\"2135\":1,\"2301\":1,\"2413\":1,\"2504\":1,\"2670\":1}}],[\"开启该功能后\",{\"1\":{\"64\":1,\"572\":1,\"1082\":1}}],[\"开始\",{\"1\":{\"526\":1,\"1036\":1,\"1551\":1}}],[\"开始视为与机器人有关\",{\"1\":{\"50\":1,\"558\":1,\"1068\":1}}],[\"开源之夏\",{\"1\":{\"492\":1,\"496\":1,\"500\":1,\"1002\":1,\"1006\":1,\"1010\":1,\"1517\":1,\"1521\":1,\"1525\":1}}],[\"开源软件供应链点亮计划\",{\"1\":{\"480\":1,\"990\":1,\"1505\":1}}],[\"开发过程中\",{\"1\":{\"2679\":1,\"2694\":1,\"2709\":1}}],[\"开发插件有一个基本的认识\",{\"1\":{\"2676\":1,\"2691\":1,\"2706\":1}}],[\"开发者指南内容较多\",{\"1\":{\"2676\":1,\"2691\":1,\"2706\":1}}],[\"开发者指南\",{\"0\":{\"2676\":1,\"2691\":1,\"2706\":1},\"1\":{\"2742\":1,\"2743\":1,\"2744\":1}}],[\"开发者可以根据需要进行合适的测试\",{\"1\":{\"478\":1,\"988\":1,\"1503\":1}}],[\"开发相关知识\",{\"1\":{\"486\":1,\"487\":1,\"996\":1,\"997\":1,\"1511\":1,\"1512\":1}}],[\"开发\",{\"1\":{\"450\":1,\"490\":1,\"491\":1,\"495\":1,\"502\":1,\"960\":1,\"1000\":1,\"1001\":1,\"1005\":1,\"1012\":1,\"1475\":1,\"1515\":1,\"1516\":1,\"1520\":1,\"1527\":1}}],[\"开发的\",{\"1\":{\"448\":1,\"958\":1,\"1473\":1}}],[\"开箱即用\",{\"0\":{\"4\":1,\"16\":1,\"28\":1}}],[\"或分块\",{\"1\":{\"2689\":1,\"2704\":1,\"2719\":1}}],[\"或全部\",{\"1\":{\"2689\":1,\"2704\":1,\"2719\":1}}],[\"或元组\",{\"1\":{\"2689\":1,\"2704\":1,\"2719\":1}}],[\"或异步迭代器\",{\"1\":{\"2689\":1,\"2704\":1,\"2719\":1}}],[\"或时间戳\",{\"1\":{\"1890\":1,\"2259\":1,\"2628\":1}}],[\"或不在指定的值中\",{\"1\":{\"1889\":1,\"2258\":1,\"2627\":1}}],[\"或插件路径\",{\"1\":{\"1809\":1,\"2178\":1,\"2547\":1}}],[\"或其子类代替\",{\"1\":{\"1748\":1,\"1749\":1,\"2117\":1,\"2118\":1,\"2469\":1,\"2480\":1}}],[\"或其它\",{\"1\":{\"483\":1,\"993\":1,\"1508\":1}}],[\"或适配器自定义类型的参数\",{\"1\":{\"534\":1,\"1044\":1,\"1559\":1}}],[\"或通用的\",{\"1\":{\"482\":1,\"992\":1,\"1507\":1}}],[\"或通过\",{\"1\":{\"480\":1,\"492\":1,\"990\":1,\"1002\":1,\"1505\":1,\"1517\":1}}],[\"或\",{\"1\":{\"306\":1,\"401\":2,\"525\":1,\"539\":1,\"814\":1,\"909\":2,\"1035\":1,\"1049\":1,\"1325\":1,\"1424\":2,\"1550\":1,\"1564\":1,\"1887\":12,\"1889\":1,\"1890\":2,\"1893\":1,\"1905\":2,\"2256\":12,\"2258\":1,\"2259\":2,\"2262\":1,\"2274\":2,\"2625\":12,\"2627\":1,\"2628\":2,\"2631\":1,\"2643\":2}}],[\"或使用\",{\"1\":{\"203\":1,\"711\":1,\"1223\":1}}],[\"或一系列字符串\",{\"1\":{\"95\":1,\"96\":1,\"97\":1,\"98\":1,\"603\":1,\"604\":1,\"605\":1,\"606\":1,\"1113\":1,\"1114\":1,\"1115\":1,\"1116\":1}}],[\"或以\",{\"1\":{\"50\":1,\"526\":1,\"558\":1,\"1036\":1,\"1068\":1,\"1551\":1}}],[\"或者在使用过程中遇到了问题\",{\"1\":{\"2676\":1,\"2691\":1,\"2706\":1}}],[\"或者标识符\",{\"1\":{\"1889\":1,\"2258\":1,\"2627\":1}}],[\"或者有新奇的点子\",{\"1\":{\"457\":1,\"967\":1,\"1482\":1}}],[\"或者修改\",{\"1\":{\"422\":1,\"932\":1,\"1447\":1}}],[\"或者为其他\",{\"1\":{\"419\":1,\"929\":1,\"1444\":1}}],[\"或者使用自加\",{\"1\":{\"542\":1,\"1052\":1,\"1567\":1}}],[\"或者使用\",{\"1\":{\"113\":1,\"532\":1,\"621\":1,\"1042\":1,\"1131\":1,\"1557\":1}}],[\"或者通过模块路径获取插件对象\",{\"1\":{\"111\":1,\"619\":1,\"1129\":1}}],[\"或者通过\",{\"1\":{\"110\":1,\"618\":1,\"1128\":1}}],[\"或者一系列类型\",{\"1\":{\"103\":1,\"611\":1,\"1121\":1}}],[\"或者\",{\"1\":{\"40\":1,\"95\":1,\"96\":1,\"97\":1,\"98\":1,\"99\":1,\"203\":1,\"533\":1,\"548\":1,\"603\":1,\"604\":1,\"605\":1,\"606\":1,\"607\":1,\"711\":1,\"1043\":1,\"1058\":1,\"1113\":1,\"1114\":1,\"1115\":1,\"1116\":1,\"1117\":1,\"1223\":1,\"1558\":1,\"1651\":1,\"1669\":1,\"1697\":1,\"1764\":1,\"1788\":1,\"2020\":1,\"2038\":1,\"2066\":1,\"2133\":1,\"2157\":1,\"2389\":1,\"2407\":1,\"2435\":1,\"2502\":1,\"2526\":1,\"2678\":1,\"2693\":1,\"2708\":1}}],[\"或者向项目\",{\"1\":{\"10\":1,\"22\":1,\"34\":1}}],[\"则\",{\"1\":{\"1902\":2,\"2271\":2,\"2640\":2}}],[\"则指令\",{\"1\":{\"1902\":1,\"2271\":1,\"2640\":1}}],[\"则未知参数将作为名为\",{\"1\":{\"1896\":1,\"2265\":1,\"2634\":1}}],[\"则命令名称为\",{\"1\":{\"1893\":1,\"2262\":1,\"2631\":1}}],[\"则命令与参数间必须有且与给定字符串一致的空白符\",{\"1\":{\"99\":1,\"607\":1,\"1117\":1}}],[\"则命令与参数间必须有任意个数的空白符\",{\"1\":{\"99\":1,\"607\":1,\"1117\":1}}],[\"则读取里面的表达式\",{\"1\":{\"1887\":1,\"2256\":1,\"2625\":1}}],[\"则为文件\",{\"1\":{\"1803\":1,\"2172\":1,\"2541\":1}}],[\"则抛出异常\",{\"1\":{\"476\":3,\"986\":3,\"1501\":3}}],[\"则需要通过\",{\"1\":{\"474\":1,\"984\":1,\"1499\":1}}],[\"则事件会被处理\",{\"1\":{\"423\":1,\"933\":1,\"1448\":1}}],[\"则通过\",{\"1\":{\"365\":1,\"873\":1,\"1388\":1}}],[\"则会将所有分支升级到最新版本\",{\"1\":{\"1925\":1,\"2294\":1,\"2663\":1}}],[\"则会检查其\",{\"1\":{\"401\":1,\"909\":1,\"1424\":1}}],[\"则会检查其中的所有值是否是\",{\"1\":{\"401\":1,\"909\":1,\"1424\":1}}],[\"则会检查其中的所有类型是否是\",{\"1\":{\"401\":1,\"909\":1,\"1424\":1}}],[\"则会去除原有的会话\",{\"1\":{\"331\":1,\"332\":1,\"839\":1,\"840\":1,\"1357\":1,\"1358\":1}}],[\"则会去除原有检查函数的会话\",{\"1\":{\"329\":1,\"837\":1,\"1352\":1}}],[\"则会进行进一步的参数解析\",{\"1\":{\"100\":1,\"608\":1,\"1118\":1}}],[\"则会产生异常\",{\"1\":{\"49\":1,\"557\":1,\"1067\":1}}],[\"则在该时间点后\",{\"1\":{\"91\":1,\"599\":1,\"1109\":1}}],[\"则在该响应器被触发后\",{\"1\":{\"90\":1,\"598\":1,\"1108\":1}}],[\"则该响应器在被触发后会被自动销毁\",{\"1\":{\"91\":1,\"599\":1,\"1109\":1}}],[\"则按照响应器的注册顺序进行触发\",{\"1\":{\"89\":1,\"597\":1,\"1107\":1}}],[\"则触发该响应器\",{\"1\":{\"88\":1,\"596\":1,\"1106\":1}}],[\"则执行响应规则检查\",{\"1\":{\"87\":1,\"595\":1,\"1105\":1}}],[\"则响应器将会响应所有类型的事件\",{\"1\":{\"86\":1,\"594\":1,\"1104\":1}}],[\"则不提供\",{\"1\":{\"60\":1,\"61\":1,\"62\":1,\"568\":1,\"569\":1,\"570\":1,\"1078\":1,\"1079\":1,\"1080\":1}}],[\"则可以通过该方法获取\",{\"1\":{\"48\":1,\"556\":1,\"1066\":1}}],[\"频道等诸多平台的适配支持\",{\"1\":{\"498\":1,\"1008\":1,\"1523\":1}}],[\"频道\",{\"1\":{\"47\":1,\"457\":1,\"474\":1,\"555\":1,\"967\":1,\"984\":1,\"1065\":1,\"1482\":1,\"1499\":1}}],[\"lt\",{\"1\":{\"1887\":2,\"2256\":2,\"2625\":2}}],[\"len\",{\"1\":{\"532\":1,\"1042\":1,\"1557\":1}}],[\"level\",{\"0\":{\"455\":1,\"965\":1,\"1480\":1},\"1\":{\"227\":1,\"230\":1,\"415\":1,\"417\":3,\"418\":3,\"735\":1,\"738\":1,\"925\":1,\"927\":3,\"928\":3,\"1247\":1,\"1250\":1,\"1440\":1,\"1442\":3,\"1443\":3}}],[\"levelname\",{\"1\":{\"227\":1,\"735\":1,\"1247\":1}}],[\"level=\",{\"1\":{\"418\":1,\"928\":1,\"1443\":1}}],[\"level=0\",{\"1\":{\"418\":1,\"928\":1,\"1443\":1}}],[\"level=info\",{\"1\":{\"169\":1,\"677\":1,\"1187\":1}}],[\"level=25\",{\"1\":{\"169\":1,\"677\":1,\"1187\":1}}],[\"lvl>\",{\"1\":{\"418\":2,\"928\":2,\"1443\":2}}],[\"ls\",{\"1\":{\"365\":1,\"873\":1,\"1388\":1}}],[\"latest\",{\"1\":{\"2690\":6,\"2705\":6,\"2720\":6}}],[\"labels\",{\"1\":{\"2679\":1,\"2694\":1,\"2709\":1}}],[\"label\",{\"1\":{\"2679\":2,\"2694\":2,\"2709\":2,\"2725\":1,\"2726\":1,\"2727\":1,\"2732\":1,\"2733\":1,\"2734\":1,\"2739\":1,\"2740\":1,\"2741\":1,\"2742\":1,\"2743\":1,\"2744\":1}}],[\"last\",{\"1\":{\"178\":2,\"327\":1,\"686\":2,\"835\":1,\"1196\":2,\"1348\":1,\"2679\":1,\"2694\":1,\"2709\":1}}],[\"languageserver\",{\"1\":{\"10\":1,\"22\":1,\"34\":1}}],[\"language\",{\"1\":{\"10\":2,\"22\":2,\"34\":2}}],[\"localhost\",{\"1\":{\"1930\":1,\"2299\":1,\"2668\":1,\"2690\":4,\"2705\":4,\"2720\":4}}],[\"locals\",{\"1\":{\"447\":1,\"957\":1,\"1472\":1}}],[\"localstore\",{\"0\":{\"435\":1,\"436\":1,\"437\":1,\"438\":1,\"439\":1,\"440\":1,\"441\":1,\"945\":1,\"946\":1,\"947\":1,\"948\":1,\"949\":1,\"950\":1,\"951\":1,\"1460\":1,\"1461\":1,\"1462\":1,\"1463\":1,\"1464\":1,\"1465\":1,\"1466\":1},\"1\":{\"431\":1,\"432\":2,\"433\":4,\"435\":1,\"436\":2,\"437\":2,\"438\":2,\"439\":1,\"440\":1,\"441\":1,\"503\":2,\"941\":1,\"942\":2,\"943\":4,\"945\":1,\"946\":2,\"947\":2,\"948\":2,\"949\":1,\"950\":1,\"951\":1,\"1013\":2,\"1456\":1,\"1457\":2,\"1458\":4,\"1460\":1,\"1461\":2,\"1462\":2,\"1463\":2,\"1464\":1,\"1465\":1,\"1466\":1,\"1528\":2}}],[\"local\",{\"1\":{\"436\":1,\"437\":2,\"438\":1,\"946\":1,\"947\":2,\"948\":1,\"1461\":1,\"1462\":2,\"1463\":1}}],[\"localns\",{\"1\":{\"380\":1,\"888\":1,\"1403\":1}}],[\"location=location\",{\"1\":{\"2680\":2,\"2695\":2,\"2710\":2}}],[\"location=\",{\"1\":{\"2680\":1,\"2695\":1,\"2710\":1}}],[\"location\",{\"1\":{\"421\":4,\"931\":4,\"1446\":4,\"2678\":5,\"2679\":7,\"2680\":15,\"2681\":4,\"2693\":5,\"2694\":7,\"2695\":15,\"2696\":4,\"2708\":5,\"2709\":7,\"2710\":15,\"2711\":4}}],[\"loader\",{\"1\":{\"501\":1,\"1011\":1,\"1526\":1}}],[\"loaded\",{\"1\":{\"111\":1,\"216\":2,\"619\":1,\"724\":2,\"1129\":1,\"1236\":2}}],[\"load\",{\"0\":{\"1808\":1,\"2177\":1,\"2546\":1},\"1\":{\"114\":1,\"116\":1,\"216\":12,\"507\":3,\"513\":2,\"515\":2,\"516\":1,\"517\":1,\"518\":3,\"519\":3,\"520\":2,\"521\":1,\"622\":1,\"624\":1,\"724\":12,\"1017\":3,\"1023\":2,\"1025\":2,\"1026\":1,\"1027\":1,\"1028\":3,\"1029\":3,\"1030\":2,\"1031\":1,\"1132\":1,\"1134\":1,\"1236\":12,\"1532\":3,\"1538\":2,\"1540\":2,\"1541\":1,\"1542\":1,\"1543\":3,\"1544\":3,\"1545\":2,\"1546\":1,\"1802\":12,\"1803\":1,\"1812\":1,\"1813\":1,\"2171\":12,\"2172\":1,\"2181\":1,\"2182\":1,\"2540\":12,\"2541\":1,\"2550\":1,\"2551\":1}}],[\"logrecord\",{\"1\":{\"229\":1,\"737\":1,\"1249\":1}}],[\"logging\",{\"0\":{\"419\":1,\"929\":1,\"1444\":1},\"1\":{\"228\":2,\"229\":1,\"419\":5,\"736\":2,\"737\":1,\"929\":5,\"1248\":2,\"1249\":1,\"1444\":5,\"1685\":1,\"2054\":1,\"2423\":1}}],[\"logger\",{\"1\":{\"226\":2,\"227\":2,\"415\":1,\"417\":14,\"418\":6,\"419\":3,\"466\":5,\"734\":2,\"735\":2,\"925\":1,\"927\":14,\"928\":6,\"929\":3,\"976\":5,\"1246\":2,\"1247\":2,\"1440\":1,\"1442\":14,\"1443\":6,\"1444\":3,\"1491\":5,\"1685\":2,\"1715\":1,\"1761\":1,\"1776\":1,\"2054\":2,\"2084\":1,\"2130\":1,\"2145\":1,\"2423\":2,\"2463\":1,\"2499\":1,\"2514\":1}}],[\"loguruhandler\",{\"1\":{\"419\":5,\"929\":5,\"1444\":5}}],[\"loguru\",{\"1\":{\"169\":1,\"226\":2,\"228\":2,\"398\":1,\"416\":1,\"417\":1,\"418\":1,\"419\":1,\"476\":1,\"677\":1,\"734\":2,\"736\":2,\"906\":1,\"926\":1,\"927\":1,\"928\":1,\"929\":1,\"986\":1,\"1187\":1,\"1246\":2,\"1248\":2,\"1421\":1,\"1441\":1,\"1442\":1,\"1443\":1,\"1444\":1,\"1501\":1}}],[\"log\",{\"0\":{\"226\":1,\"455\":1,\"466\":1,\"734\":1,\"965\":1,\"976\":1,\"1246\":1,\"1480\":1,\"1491\":1},\"1\":{\"45\":2,\"169\":2,\"209\":2,\"227\":2,\"230\":1,\"417\":3,\"418\":5,\"419\":1,\"466\":10,\"470\":3,\"473\":3,\"474\":1,\"553\":2,\"677\":2,\"717\":2,\"735\":2,\"738\":1,\"927\":3,\"928\":5,\"929\":1,\"976\":10,\"980\":3,\"983\":3,\"984\":1,\"1063\":2,\"1187\":2,\"1229\":2,\"1247\":2,\"1250\":1,\"1442\":3,\"1443\":5,\"1444\":1,\"1491\":10,\"1495\":3,\"1498\":3,\"1499\":1}}],[\"lifespan\",{\"1\":{\"1600\":2,\"1717\":2,\"1718\":2,\"1969\":2,\"2086\":2,\"2087\":2,\"2319\":2,\"2465\":2,\"2466\":2}}],[\"libonebot\",{\"0\":{\"490\":1,\"491\":1,\"1000\":1,\"1001\":1,\"1515\":1,\"1516\":1},\"1\":{\"490\":3,\"491\":3,\"1000\":3,\"1001\":3,\"1515\":3,\"1516\":3}}],[\"library\",{\"1\":{\"79\":1,\"110\":1,\"436\":1,\"437\":1,\"587\":1,\"618\":1,\"946\":1,\"947\":1,\"1097\":1,\"1128\":1,\"1461\":1,\"1462\":1}}],[\"linux\",{\"1\":{\"433\":1,\"505\":1,\"943\":1,\"1015\":1,\"1458\":1,\"1530\":1,\"2690\":2,\"2705\":2,\"2720\":2}}],[\"line\",{\"1\":{\"118\":1,\"626\":1,\"1136\":1}}],[\"literal\",{\"1\":{\"177\":1,\"178\":1,\"179\":1,\"180\":1,\"181\":1,\"182\":1,\"183\":1,\"184\":1,\"185\":1,\"186\":1,\"187\":1,\"188\":1,\"189\":1,\"190\":1,\"191\":1,\"192\":1,\"193\":1,\"194\":1,\"298\":1,\"319\":1,\"376\":1,\"377\":1,\"401\":1,\"685\":1,\"686\":1,\"687\":1,\"688\":1,\"689\":1,\"690\":1,\"691\":1,\"692\":1,\"693\":1,\"694\":1,\"695\":1,\"696\":1,\"697\":1,\"698\":1,\"699\":1,\"700\":1,\"701\":1,\"702\":1,\"806\":1,\"827\":1,\"884\":1,\"885\":1,\"909\":1,\"1195\":1,\"1196\":1,\"1197\":1,\"1198\":1,\"1199\":1,\"1200\":1,\"1201\":1,\"1202\":1,\"1203\":1,\"1204\":1,\"1205\":1,\"1206\":1,\"1207\":1,\"1208\":1,\"1209\":1,\"1210\":1,\"1211\":1,\"1212\":1,\"1213\":1,\"1214\":1,\"1316\":1,\"1340\":1,\"1399\":1,\"1400\":1,\"1424\":1,\"1890\":1,\"1915\":1,\"2259\":1,\"2284\":1,\"2628\":1,\"2653\":1}}],[\"like\",{\"1\":{\"161\":1,\"362\":1,\"365\":1,\"669\":1,\"870\":1,\"873\":1,\"1179\":1,\"1385\":1,\"1388\":1,\"1866\":1,\"1871\":1,\"1883\":1,\"2235\":1,\"2240\":1,\"2252\":1,\"2604\":1,\"2609\":1,\"2621\":1}}],[\"list\",{\"1\":{\"65\":1,\"67\":1,\"68\":1,\"73\":1,\"75\":1,\"76\":1,\"82\":1,\"156\":2,\"237\":1,\"242\":1,\"276\":1,\"277\":1,\"278\":4,\"279\":1,\"280\":1,\"282\":1,\"283\":2,\"285\":1,\"360\":1,\"363\":6,\"364\":1,\"377\":1,\"413\":1,\"447\":2,\"530\":2,\"532\":2,\"534\":1,\"538\":1,\"573\":1,\"575\":1,\"576\":1,\"581\":1,\"583\":1,\"584\":1,\"590\":1,\"664\":2,\"745\":1,\"750\":1,\"784\":1,\"785\":1,\"786\":4,\"787\":1,\"788\":1,\"790\":1,\"791\":2,\"793\":1,\"868\":1,\"871\":6,\"872\":1,\"885\":1,\"923\":1,\"957\":2,\"1040\":2,\"1042\":2,\"1044\":1,\"1048\":1,\"1083\":1,\"1085\":1,\"1086\":1,\"1091\":1,\"1093\":1,\"1094\":1,\"1100\":1,\"1174\":2,\"1258\":1,\"1263\":1,\"1296\":1,\"1297\":1,\"1298\":4,\"1299\":1,\"1300\":1,\"1302\":1,\"1303\":2,\"1305\":1,\"1383\":1,\"1386\":6,\"1387\":1,\"1400\":1,\"1438\":1,\"1472\":2,\"1555\":2,\"1557\":2,\"1559\":1,\"1563\":1,\"1676\":1,\"1678\":1,\"1679\":1,\"1767\":1,\"1769\":1,\"1770\":1,\"1856\":1,\"1857\":1,\"1858\":1,\"1859\":1,\"1860\":1,\"1861\":1,\"1862\":1,\"1863\":1,\"1864\":1,\"1865\":1,\"1866\":1,\"1867\":1,\"1868\":1,\"1869\":1,\"1870\":1,\"1871\":1,\"1872\":1,\"1873\":1,\"1874\":1,\"1875\":1,\"1876\":1,\"1877\":1,\"1878\":1,\"1879\":1,\"1880\":1,\"1881\":1,\"1882\":1,\"1883\":1,\"1884\":1,\"1885\":1,\"1890\":2,\"1900\":1,\"1902\":2,\"1903\":1,\"1914\":1,\"2045\":1,\"2047\":1,\"2048\":1,\"2136\":1,\"2138\":1,\"2139\":1,\"2225\":1,\"2226\":1,\"2227\":1,\"2228\":1,\"2229\":1,\"2230\":1,\"2231\":1,\"2232\":1,\"2233\":1,\"2234\":1,\"2235\":1,\"2236\":1,\"2237\":1,\"2238\":1,\"2239\":1,\"2240\":1,\"2241\":1,\"2242\":1,\"2243\":1,\"2244\":1,\"2245\":1,\"2246\":1,\"2247\":1,\"2248\":1,\"2249\":1,\"2250\":1,\"2251\":1,\"2252\":1,\"2253\":1,\"2254\":1,\"2259\":2,\"2269\":1,\"2271\":2,\"2272\":1,\"2283\":1,\"2414\":1,\"2416\":1,\"2417\":1,\"2505\":1,\"2507\":1,\"2508\":1,\"2594\":1,\"2595\":1,\"2596\":1,\"2597\":1,\"2598\":1,\"2599\":1,\"2600\":1,\"2601\":1,\"2602\":1,\"2603\":1,\"2604\":1,\"2605\":1,\"2606\":1,\"2607\":1,\"2608\":1,\"2609\":1,\"2610\":1,\"2611\":1,\"2612\":1,\"2613\":1,\"2614\":1,\"2615\":1,\"2616\":1,\"2617\":1,\"2618\":1,\"2619\":1,\"2620\":1,\"2621\":1,\"2622\":1,\"2623\":1,\"2628\":2,\"2638\":1,\"2640\":2,\"2641\":1,\"2652\":1}}],[\"用来提供更好的自动补全\",{\"1\":{\"1906\":1,\"2275\":1,\"2644\":1}}],[\"用来识别\",{\"1\":{\"222\":1,\"730\":1,\"1242\":1}}],[\"用法和\",{\"1\":{\"1602\":1,\"1971\":1,\"2340\":1}}],[\"用法与\",{\"1\":{\"362\":1,\"870\":1,\"1385\":1}}],[\"用法\",{\"1\":{\"169\":1,\"171\":1,\"173\":1,\"174\":1,\"175\":1,\"200\":1,\"203\":1,\"205\":1,\"206\":1,\"207\":1,\"217\":1,\"218\":1,\"219\":1,\"220\":1,\"221\":1,\"222\":1,\"223\":1,\"224\":1,\"225\":1,\"227\":1,\"293\":1,\"297\":1,\"333\":1,\"347\":1,\"361\":1,\"362\":1,\"365\":1,\"677\":1,\"679\":1,\"681\":1,\"682\":1,\"683\":1,\"708\":1,\"711\":1,\"713\":1,\"714\":1,\"715\":1,\"725\":1,\"726\":1,\"727\":1,\"728\":1,\"729\":1,\"730\":1,\"731\":1,\"732\":1,\"733\":1,\"735\":1,\"801\":1,\"805\":1,\"841\":1,\"855\":1,\"869\":1,\"870\":1,\"873\":1,\"1187\":1,\"1189\":1,\"1191\":1,\"1192\":1,\"1193\":1,\"1220\":1,\"1223\":1,\"1225\":1,\"1226\":1,\"1227\":1,\"1237\":1,\"1238\":1,\"1239\":1,\"1240\":1,\"1241\":1,\"1242\":1,\"1243\":1,\"1244\":1,\"1245\":1,\"1247\":1,\"1313\":1,\"1323\":1,\"1353\":1,\"1370\":1,\"1384\":1,\"1385\":1,\"1388\":1,\"1575\":1,\"1812\":1,\"1813\":1,\"1944\":1,\"2181\":1,\"2182\":1,\"2325\":1,\"2550\":1,\"2551\":1}}],[\"用于处理平台\",{\"1\":{\"1935\":1,\"2304\":1,\"2673\":1}}],[\"用于处理上报消息\",{\"1\":{\"1570\":1,\"1939\":1,\"2320\":1}}],[\"用于接收平台\",{\"1\":{\"1934\":1,\"2303\":1,\"2672\":1}}],[\"用于告知解析器该参数为一个\",{\"1\":{\"1891\":1,\"2260\":1,\"2629\":1}}],[\"用于告知解析器该参数可以接受多个值\",{\"1\":{\"1891\":1,\"2260\":1,\"2629\":1}}],[\"用于商店分类\",{\"1\":{\"1836\":1,\"2205\":1,\"2574\":1}}],[\"用于描述参数信息\",{\"1\":{\"1640\":1,\"2009\":1,\"2378\":1}}],[\"用于判断当前事件属于哪一个会话\",{\"1\":{\"1585\":1,\"1954\":1,\"2335\":1}}],[\"用于判断一条消息是不是命令\",{\"1\":{\"173\":1,\"681\":1,\"1191\":1}}],[\"用于无平台适配接入\",{\"1\":{\"494\":1,\"1004\":1,\"1519\":1}}],[\"用于日志打印\",{\"1\":{\"476\":2,\"986\":2,\"1501\":2}}],[\"用于日志记录\",{\"1\":{\"45\":1,\"553\":1,\"1063\":1}}],[\"用于将\",{\"1\":{\"419\":1,\"929\":1,\"1444\":1}}],[\"用于将文本形式的命令切分为元组\",{\"1\":{\"174\":1,\"682\":1,\"1192\":1}}],[\"用于打印\",{\"1\":{\"415\":1,\"925\":1,\"1440\":1}}],[\"用于记录带颜色日志时转义\",{\"1\":{\"398\":1,\"906\":1,\"1421\":1}}],[\"用于存储依赖函数的返回值\",{\"1\":{\"396\":1,\"904\":1,\"1419\":1}}],[\"用于更新会话对象权限\",{\"1\":{\"395\":1,\"903\":1,\"1418\":1}}],[\"用于更新响应的事件类型\",{\"1\":{\"394\":1,\"902\":1,\"1417\":1}}],[\"用于管理事件响应器\",{\"1\":{\"274\":1,\"782\":1,\"1294\":1}}],[\"用于收集帮助信息等\",{\"1\":{\"109\":1,\"617\":1,\"1127\":1}}],[\"用于指定默认值\",{\"1\":{\"1891\":1,\"2260\":1,\"2629\":1}}],[\"用于指定是否忽略大小写\",{\"1\":{\"95\":1,\"96\":1,\"97\":1,\"603\":1,\"604\":1,\"605\":1,\"1113\":1,\"1114\":1,\"1115\":1}}],[\"用于指定响应器的默认状态\",{\"1\":{\"92\":1,\"600\":1,\"1110\":1}}],[\"用于指定响应器的过期时间\",{\"1\":{\"91\":1,\"599\":1,\"1109\":1}}],[\"用于指定响应器的优先级\",{\"1\":{\"89\":1,\"597\":1,\"1107\":1}}],[\"用于指定响应器是否为临时响应器\",{\"1\":{\"91\":1,\"599\":1,\"1109\":1}}],[\"用于指定响应器是否阻断事件的传播\",{\"1\":{\"90\":1,\"598\":1,\"1108\":1}}],[\"用于在与其他驱动器配合使用时加载\",{\"1\":{\"54\":1,\"562\":1,\"1072\":1}}],[\"用户指南\",{\"0\":{\"1919\":1,\"2288\":1,\"2657\":1}}],[\"用户名作为插件作者名\",{\"1\":{\"502\":1,\"1012\":1,\"1527\":1}}],[\"用户请求提交插件到商店时进行自动化检测\",{\"1\":{\"502\":1,\"1012\":1,\"1527\":1}}],[\"用户上手与深入教程设计\",{\"0\":{\"495\":1,\"1005\":1,\"1520\":1}}],[\"用户提供一套易用便捷\",{\"1\":{\"485\":1,\"995\":1,\"1510\":1}}],[\"用户可以向\",{\"1\":{\"53\":1,\"561\":1,\"1071\":1}}],[\"用户无需编写任何代码\",{\"1\":{\"0\":1,\"12\":1,\"24\":1}}],[\"db\",{\"1\":{\"2690\":14,\"2705\":14,\"2720\":14}}],[\"duplication=mydup\",{\"1\":{\"1906\":1,\"2275\":1,\"2644\":1}}],[\"duplication\",{\"0\":{\"1906\":1,\"2275\":1,\"2644\":1},\"1\":{\"1906\":7,\"2275\":7,\"2644\":7}}],[\"dump\",{\"1\":{\"476\":2,\"986\":2,\"1501\":2}}],[\"d+\",{\"1\":{\"1887\":3,\"1890\":1,\"1901\":2,\"2256\":3,\"2259\":1,\"2270\":2,\"2625\":3,\"2628\":1,\"2639\":2}}],[\"drop\",{\"1\":{\"2679\":3,\"2694\":3,\"2709\":3}}],[\"draft\",{\"1\":{\"502\":1,\"1012\":1,\"1527\":1}}],[\"driverexception\",{\"1\":{\"195\":1,\"703\":1,\"1215\":1}}],[\"drivers\",{\"0\":{\"1651\":1,\"1669\":1,\"1697\":1,\"1706\":1,\"1758\":1,\"1764\":1,\"1788\":1,\"2020\":1,\"2038\":1,\"2066\":1,\"2075\":1,\"2127\":1,\"2133\":1,\"2157\":1,\"2389\":1,\"2407\":1,\"2435\":1,\"2444\":1,\"2496\":1,\"2502\":1,\"2526\":1},\"1\":{\"118\":1,\"120\":1,\"121\":1,\"166\":1,\"468\":1,\"470\":1,\"471\":1,\"474\":1,\"626\":1,\"628\":1,\"629\":1,\"674\":1,\"978\":1,\"980\":1,\"981\":1,\"984\":1,\"1136\":1,\"1138\":1,\"1139\":1,\"1184\":1,\"1493\":1,\"1495\":1,\"1496\":1,\"1499\":1}}],[\"driver=~websockets\",{\"1\":{\"79\":1,\"587\":1,\"1097\":1}}],[\"driver=~httpx\",{\"1\":{\"78\":1,\"586\":1,\"1096\":1}}],[\"driver=~httpx+~websockets\",{\"1\":{\"54\":1,\"562\":1,\"1072\":1}}],[\"driver=~quart\",{\"1\":{\"70\":1,\"578\":1,\"1088\":1}}],[\"driver=~none\",{\"1\":{\"57\":1,\"565\":1,\"1075\":1}}],[\"driver=~aiohttp\",{\"1\":{\"54\":1,\"80\":1,\"562\":1,\"588\":1,\"1072\":1,\"1098\":1}}],[\"driver=~fastapi+~httpx+~websockets\",{\"1\":{\"54\":1,\"562\":1,\"1072\":1}}],[\"driver=~fastapi\",{\"1\":{\"54\":1,\"58\":1,\"562\":1,\"566\":1,\"1072\":1,\"1076\":1}}],[\"driver\",{\"1\":{\"38\":3,\"52\":1,\"54\":2,\"55\":4,\"118\":2,\"120\":4,\"121\":4,\"127\":4,\"128\":4,\"129\":4,\"130\":4,\"166\":2,\"213\":1,\"217\":7,\"218\":1,\"219\":1,\"220\":2,\"221\":2,\"222\":1,\"223\":1,\"224\":2,\"225\":3,\"468\":4,\"469\":1,\"470\":9,\"471\":7,\"474\":2,\"507\":3,\"523\":1,\"546\":3,\"560\":1,\"562\":2,\"563\":4,\"626\":2,\"628\":4,\"629\":4,\"635\":4,\"636\":4,\"637\":4,\"638\":4,\"674\":2,\"721\":1,\"725\":7,\"726\":1,\"727\":1,\"728\":2,\"729\":2,\"730\":1,\"731\":1,\"732\":2,\"733\":3,\"801\":1,\"978\":4,\"979\":1,\"980\":9,\"981\":7,\"984\":2,\"1017\":3,\"1033\":1,\"1056\":3,\"1070\":1,\"1072\":2,\"1073\":4,\"1136\":2,\"1138\":4,\"1139\":4,\"1145\":4,\"1146\":4,\"1147\":4,\"1148\":4,\"1184\":2,\"1233\":1,\"1237\":7,\"1238\":1,\"1239\":1,\"1240\":2,\"1241\":2,\"1242\":1,\"1243\":1,\"1244\":2,\"1245\":3,\"1313\":1,\"1493\":4,\"1494\":1,\"1495\":9,\"1496\":7,\"1499\":2,\"1532\":3,\"1548\":1,\"1569\":1,\"1589\":4,\"1590\":1,\"1651\":1,\"1669\":1,\"1697\":1,\"1750\":4,\"1761\":1,\"1762\":1,\"1763\":1,\"1764\":1,\"1788\":1,\"1938\":1,\"1958\":4,\"1959\":1,\"2020\":1,\"2038\":1,\"2066\":1,\"2119\":4,\"2130\":1,\"2131\":1,\"2132\":1,\"2133\":1,\"2157\":1,\"2307\":1,\"2308\":4,\"2309\":1,\"2389\":1,\"2407\":1,\"2435\":1,\"2495\":4,\"2499\":1,\"2500\":1,\"2501\":1,\"2502\":1,\"2526\":1}}],[\"days=1\",{\"1\":{\"452\":1,\"962\":1,\"1477\":1}}],[\"day\",{\"1\":{\"452\":2,\"962\":2,\"1477\":2}}],[\"database\",{\"0\":{\"1929\":1,\"2298\":1,\"2667\":1,\"2769\":1,\"2772\":1,\"2775\":1},\"1\":{\"1929\":2,\"1932\":1,\"2298\":2,\"2301\":1,\"2667\":2,\"2670\":1,\"2690\":4,\"2705\":4,\"2720\":4}}],[\"database=database\",{\"1\":{\"224\":1,\"732\":1,\"1244\":1}}],[\"datatypes\",{\"1\":{\"1728\":1,\"2097\":1,\"2478\":1}}],[\"data=\",{\"1\":{\"532\":2,\"543\":6,\"1042\":2,\"1053\":6,\"1557\":2,\"1568\":6}}],[\"data=data\",{\"1\":{\"475\":1,\"985\":1,\"1500\":1}}],[\"data=platform\",{\"1\":{\"474\":1,\"984\":1,\"1499\":1}}],[\"dataclass\",{\"1\":{\"413\":1,\"923\":1,\"1438\":1}}],[\"data\",{\"0\":{\"437\":1,\"440\":1,\"947\":1,\"950\":1,\"1462\":1,\"1465\":1},\"1\":{\"121\":2,\"136\":1,\"137\":1,\"147\":1,\"159\":2,\"160\":1,\"386\":1,\"433\":9,\"437\":5,\"438\":2,\"440\":2,\"470\":1,\"474\":10,\"475\":2,\"532\":1,\"536\":2,\"629\":2,\"644\":1,\"645\":1,\"655\":1,\"667\":2,\"668\":1,\"894\":1,\"943\":9,\"947\":5,\"948\":2,\"950\":2,\"980\":1,\"984\":10,\"985\":2,\"1042\":1,\"1046\":2,\"1139\":2,\"1154\":1,\"1155\":1,\"1165\":1,\"1177\":2,\"1178\":1,\"1409\":1,\"1458\":9,\"1462\":5,\"1463\":2,\"1465\":2,\"1495\":1,\"1499\":10,\"1500\":2,\"1557\":1,\"1561\":2,\"1575\":1,\"1577\":1,\"1578\":1,\"1589\":1,\"1666\":1,\"1667\":1,\"1695\":1,\"1696\":1,\"1728\":1,\"1742\":1,\"1743\":1,\"1744\":1,\"1786\":1,\"1787\":1,\"1798\":1,\"1799\":1,\"1895\":1,\"1944\":1,\"1946\":1,\"1947\":1,\"1958\":1,\"2035\":1,\"2036\":1,\"2064\":1,\"2065\":1,\"2097\":1,\"2111\":1,\"2112\":1,\"2113\":1,\"2155\":1,\"2156\":1,\"2167\":1,\"2168\":1,\"2264\":1,\"2308\":1,\"2325\":1,\"2327\":1,\"2328\":1,\"2404\":1,\"2405\":1,\"2433\":1,\"2434\":1,\"2478\":1,\"2489\":1,\"2490\":1,\"2491\":1,\"2524\":1,\"2525\":1,\"2536\":1,\"2537\":1,\"2633\":1}}],[\"datetime\",{\"1\":{\"91\":1,\"241\":1,\"242\":1,\"599\":1,\"749\":1,\"750\":1,\"1109\":1,\"1262\":1,\"1263\":1,\"1856\":1,\"1857\":1,\"1858\":1,\"1859\":1,\"1860\":1,\"1861\":1,\"1862\":1,\"1863\":1,\"1864\":1,\"1865\":1,\"1866\":1,\"1867\":1,\"1868\":1,\"1869\":1,\"1870\":1,\"1871\":1,\"1872\":1,\"1873\":1,\"1874\":1,\"1875\":1,\"1876\":1,\"1877\":1,\"1878\":1,\"1879\":1,\"1880\":1,\"1881\":1,\"1882\":1,\"1883\":1,\"1884\":1,\"1885\":1,\"1890\":2,\"2225\":1,\"2226\":1,\"2227\":1,\"2228\":1,\"2229\":1,\"2230\":1,\"2231\":1,\"2232\":1,\"2233\":1,\"2234\":1,\"2235\":1,\"2236\":1,\"2237\":1,\"2238\":1,\"2239\":1,\"2240\":1,\"2241\":1,\"2242\":1,\"2243\":1,\"2244\":1,\"2245\":1,\"2246\":1,\"2247\":1,\"2248\":1,\"2249\":1,\"2250\":1,\"2251\":1,\"2252\":1,\"2253\":1,\"2254\":1,\"2259\":2,\"2594\":1,\"2595\":1,\"2596\":1,\"2597\":1,\"2598\":1,\"2599\":1,\"2600\":1,\"2601\":1,\"2602\":1,\"2603\":1,\"2604\":1,\"2605\":1,\"2606\":1,\"2607\":1,\"2608\":1,\"2609\":1,\"2610\":1,\"2611\":1,\"2612\":1,\"2613\":1,\"2614\":1,\"2615\":1,\"2616\":1,\"2617\":1,\"2618\":1,\"2619\":1,\"2620\":1,\"2621\":1,\"2622\":1,\"2623\":1,\"2628\":2}}],[\"dsn>\",{\"1\":{\"446\":1,\"956\":1,\"1471\":1}}],[\"dsn=<your\",{\"1\":{\"446\":1,\"956\":1,\"1471\":1}}],[\"dsn\",{\"0\":{\"445\":1,\"955\":1,\"1470\":1},\"1\":{\"445\":2,\"446\":1,\"447\":1,\"955\":2,\"956\":1,\"957\":1,\"1470\":2,\"1471\":1,\"1472\":1}}],[\"dt\",{\"1\":{\"175\":1,\"683\":1,\"1193\":1}}],[\"d\",{\"1\":{\"175\":1,\"421\":1,\"683\":1,\"931\":1,\"1193\":1,\"1446\":1,\"1750\":4,\"1887\":1,\"2119\":4,\"2256\":1,\"2495\":4,\"2625\":1}}],[\"ddl\",{\"1\":{\"2679\":1,\"2694\":1,\"2709\":1}}],[\"dd\",{\"1\":{\"175\":2,\"418\":2,\"683\":2,\"928\":2,\"1193\":2,\"1443\":2}}],[\"down\",{\"1\":{\"2679\":1,\"2694\":1,\"2709\":1}}],[\"downgrade\",{\"0\":{\"1926\":1,\"2295\":1,\"2664\":1},\"1\":{\"1922\":1,\"1926\":2,\"2291\":1,\"2295\":2,\"2660\":1,\"2664\":2,\"2679\":3,\"2694\":3,\"2709\":3}}],[\"domain\",{\"1\":{\"1722\":1,\"1723\":1,\"1724\":1,\"1725\":1,\"2091\":1,\"2092\":1,\"2093\":1,\"2094\":1,\"2451\":1,\"2452\":1,\"2453\":1,\"2454\":1}}],[\"done\",{\"1\":{\"470\":1,\"980\":1,\"1495\":1}}],[\"doesn\",{\"1\":{\"470\":1,\"471\":1,\"980\":1,\"981\":1,\"1495\":1,\"1496\":1}}],[\"docusaurus\",{\"1\":{\"501\":6,\"1011\":6,\"1526\":6}}],[\"documents\",{\"1\":{\"437\":1,\"438\":1,\"947\":1,\"948\":1,\"1462\":1,\"1463\":1}}],[\"docstring\",{\"1\":{\"483\":1,\"993\":1,\"1508\":1}}],[\"docs\",{\"1\":{\"447\":1,\"957\":1,\"1472\":1}}],[\"dotenv\",{\"1\":{\"162\":1,\"163\":2,\"165\":1,\"224\":1,\"446\":1,\"506\":2,\"670\":1,\"671\":2,\"673\":1,\"732\":1,\"956\":1,\"1016\":2,\"1180\":1,\"1181\":2,\"1183\":1,\"1244\":1,\"1471\":1,\"1531\":2}}],[\"do\",{\"1\":{\"121\":1,\"127\":1,\"128\":1,\"129\":1,\"130\":1,\"132\":1,\"133\":1,\"134\":1,\"135\":1,\"629\":1,\"635\":1,\"636\":1,\"637\":1,\"638\":1,\"640\":1,\"641\":1,\"642\":1,\"643\":1,\"1139\":1,\"1145\":1,\"1146\":1,\"1147\":1,\"1148\":1,\"1150\":1,\"1151\":1,\"1152\":1,\"1153\":1,\"1904\":1,\"2273\":1,\"2642\":1}}],[\"dirs\",{\"1\":{\"513\":2,\"518\":2,\"519\":2,\"1023\":2,\"1028\":2,\"1029\":2,\"1538\":2,\"1543\":2,\"1544\":2,\"1812\":2,\"1813\":2,\"2181\":2,\"2182\":2,\"2550\":2,\"2551\":2}}],[\"dir=\",{\"1\":{\"436\":1,\"437\":1,\"438\":1,\"439\":1,\"440\":1,\"441\":1,\"946\":1,\"947\":1,\"948\":1,\"949\":1,\"950\":1,\"951\":1,\"1461\":1,\"1462\":1,\"1463\":1,\"1464\":1,\"1465\":1,\"1466\":1}}],[\"directory>\",{\"1\":{\"436\":1,\"437\":1,\"438\":1,\"946\":1,\"947\":1,\"948\":1,\"1461\":1,\"1462\":1,\"1463\":1}}],[\"dir\",{\"0\":{\"436\":1,\"437\":1,\"438\":1,\"439\":1,\"440\":1,\"441\":1,\"946\":1,\"947\":1,\"948\":1,\"949\":1,\"950\":1,\"951\":1,\"1461\":1,\"1462\":1,\"1463\":1,\"1464\":1,\"1465\":1,\"1466\":1},\"1\":{\"433\":6,\"438\":1,\"943\":6,\"948\":1,\"1458\":6,\"1463\":1,\"1810\":1,\"1811\":1,\"1812\":1,\"1813\":1,\"2179\":1,\"2180\":1,\"2181\":1,\"2182\":1,\"2548\":1,\"2549\":1,\"2550\":1,\"2551\":1}}],[\"diagnose=true\",{\"1\":{\"418\":1,\"928\":1,\"1443\":1}}],[\"disable\",{\"1\":{\"1897\":1,\"2266\":1,\"2635\":1}}],[\"discord\",{\"0\":{\"498\":1,\"1008\":1,\"1523\":1},\"1\":{\"457\":1,\"498\":4,\"967\":1,\"1008\":4,\"1482\":1,\"1523\":4}}],[\"disconnect\",{\"1\":{\"130\":1,\"472\":3,\"638\":1,\"982\":3,\"1148\":1,\"1497\":3,\"1934\":1,\"2303\":1,\"2672\":1}}],[\"dist\",{\"1\":{\"69\":1,\"77\":1,\"577\":1,\"585\":1,\"1087\":1,\"1095\":1}}],[\"dict\",{\"1\":{\"92\":1,\"136\":1,\"137\":1,\"147\":1,\"155\":1,\"158\":1,\"219\":1,\"223\":1,\"321\":1,\"380\":2,\"382\":1,\"385\":1,\"386\":1,\"396\":1,\"399\":3,\"456\":1,\"473\":3,\"600\":1,\"644\":1,\"645\":1,\"655\":1,\"663\":1,\"666\":1,\"727\":1,\"731\":1,\"829\":1,\"888\":2,\"890\":1,\"893\":1,\"894\":1,\"904\":1,\"907\":3,\"966\":1,\"983\":3,\"1110\":1,\"1154\":1,\"1155\":1,\"1165\":1,\"1173\":1,\"1176\":1,\"1239\":1,\"1243\":1,\"1342\":1,\"1403\":2,\"1405\":1,\"1408\":1,\"1409\":1,\"1419\":1,\"1422\":3,\"1481\":1,\"1498\":3,\"1591\":1,\"1621\":1,\"1646\":1,\"1649\":1,\"1680\":1,\"1712\":1,\"1727\":1,\"1771\":1,\"1823\":1,\"1840\":1,\"1890\":2,\"1960\":1,\"1990\":1,\"2015\":1,\"2018\":1,\"2049\":1,\"2081\":1,\"2096\":1,\"2140\":1,\"2192\":1,\"2209\":1,\"2259\":2,\"2310\":1,\"2359\":1,\"2384\":1,\"2387\":1,\"2418\":1,\"2456\":1,\"2460\":1,\"2509\":1,\"2561\":1,\"2578\":1,\"2628\":2}}],[\"demoextension\",{\"1\":{\"1914\":1,\"2283\":1,\"2652\":1}}],[\"delete\",{\"1\":{\"1902\":1,\"2271\":1,\"2640\":1}}],[\"delete=true\",{\"1\":{\"1902\":1,\"2271\":1,\"2640\":1}}],[\"delimiter\",{\"1\":{\"163\":1,\"165\":1,\"671\":1,\"673\":1,\"1181\":1,\"1183\":1}}],[\"dest=\",{\"1\":{\"1906\":3,\"2275\":3,\"2644\":3}}],[\"dest\",{\"1\":{\"1893\":1,\"2262\":1,\"2631\":1}}],[\"description=\",{\"1\":{\"110\":1,\"618\":1,\"1128\":1}}],[\"description\",{\"1\":{\"44\":2,\"476\":1,\"552\":2,\"986\":1,\"1062\":2,\"1501\":1,\"1896\":1,\"2265\":1,\"2634\":1}}],[\"developer\",{\"0\":{\"2751\":1,\"2758\":1,\"2765\":1}}],[\"dev\",{\"1\":{\"480\":1,\"492\":1,\"496\":1,\"500\":1,\"990\":1,\"1002\":1,\"1006\":1,\"1010\":1,\"1505\":1,\"1517\":1,\"1521\":1,\"1525\":1}}],[\"debug\",{\"1\":{\"417\":2,\"447\":1,\"455\":3,\"466\":2,\"474\":1,\"927\":2,\"957\":1,\"965\":3,\"976\":2,\"984\":1,\"1442\":2,\"1472\":1,\"1480\":3,\"1491\":2,\"1499\":1,\"1930\":1,\"1932\":1,\"2299\":1,\"2301\":1,\"2668\":1,\"2670\":1}}],[\"depth\",{\"1\":{\"1853\":1,\"1854\":1,\"1855\":1,\"2222\":1,\"2223\":1,\"2224\":1,\"2591\":1,\"2592\":1,\"2593\":1}}],[\"deprecated\",{\"1\":{\"242\":2,\"750\":2,\"1263\":2,\"1748\":1,\"1749\":1,\"1853\":1,\"1854\":1,\"2117\":1,\"2118\":1,\"2222\":1,\"2223\":1,\"2469\":1,\"2480\":1,\"2591\":1,\"2592\":1}}],[\"dependparam\",{\"1\":{\"383\":1,\"384\":1,\"387\":1,\"388\":1,\"389\":1,\"390\":1,\"391\":1,\"392\":1,\"394\":1,\"395\":1,\"891\":1,\"892\":1,\"895\":1,\"896\":1,\"897\":1,\"898\":1,\"899\":1,\"900\":1,\"902\":1,\"903\":1,\"1406\":1,\"1407\":1,\"1410\":1,\"1411\":1,\"1412\":1,\"1413\":1,\"1414\":1,\"1415\":1,\"1417\":1,\"1418\":1}}],[\"depend\",{\"1\":{\"297\":4,\"805\":4,\"1323\":4}}],[\"depends\",{\"1\":{\"200\":1,\"297\":2,\"422\":1,\"708\":1,\"805\":2,\"932\":1,\"1220\":1,\"1323\":2,\"1447\":1,\"2679\":1,\"2680\":2,\"2681\":5,\"2684\":2,\"2685\":2,\"2687\":2,\"2688\":2,\"2694\":1,\"2695\":2,\"2696\":5,\"2699\":2,\"2700\":2,\"2702\":2,\"2703\":2,\"2709\":1,\"2710\":2,\"2711\":5,\"2714\":2,\"2715\":2,\"2717\":2,\"2718\":2}}],[\"dependencies\",{\"0\":{\"1639\":1,\"1647\":1,\"2008\":1,\"2016\":1,\"2377\":1,\"2385\":1},\"1\":{\"2690\":2,\"2705\":2,\"2720\":2}}],[\"dependencycache\",{\"1\":{\"244\":1,\"245\":1,\"267\":1,\"268\":1,\"271\":1,\"272\":1,\"292\":1,\"335\":1,\"349\":1,\"752\":1,\"753\":1,\"775\":1,\"776\":1,\"779\":1,\"780\":1,\"800\":1,\"843\":1,\"857\":1,\"904\":1,\"1265\":1,\"1266\":1,\"1288\":1,\"1289\":1,\"1292\":1,\"1293\":1,\"1312\":1,\"1355\":1,\"1372\":1,\"1419\":1}}],[\"dependency\",{\"1\":{\"200\":1,\"244\":1,\"245\":1,\"267\":1,\"268\":1,\"271\":1,\"272\":1,\"292\":1,\"297\":1,\"335\":1,\"349\":1,\"708\":1,\"752\":1,\"753\":1,\"775\":1,\"776\":1,\"779\":1,\"780\":1,\"800\":1,\"805\":1,\"843\":1,\"857\":1,\"1220\":1,\"1265\":1,\"1266\":1,\"1288\":1,\"1289\":1,\"1292\":1,\"1293\":1,\"1312\":1,\"1323\":1,\"1355\":1,\"1372\":1}}],[\"dependentcallable\",{\"1\":{\"383\":1,\"384\":1,\"387\":1,\"388\":1,\"389\":1,\"390\":1,\"391\":1,\"392\":1,\"393\":1,\"394\":1,\"395\":1,\"396\":1,\"891\":1,\"892\":1,\"895\":1,\"896\":1,\"897\":1,\"898\":1,\"899\":1,\"900\":1,\"901\":1,\"902\":1,\"903\":1,\"904\":1,\"1406\":1,\"1407\":1,\"1410\":1,\"1411\":1,\"1412\":1,\"1413\":1,\"1414\":1,\"1415\":1,\"1416\":1,\"1417\":1,\"1418\":1,\"1419\":1,\"1642\":1,\"1644\":1,\"2011\":1,\"2013\":1,\"2380\":1,\"2382\":1}}],[\"dependent\",{\"1\":{\"139\":1,\"140\":1,\"200\":1,\"237\":1,\"242\":3,\"302\":2,\"333\":1,\"334\":1,\"347\":1,\"348\":1,\"647\":1,\"648\":1,\"708\":1,\"745\":1,\"750\":3,\"810\":2,\"841\":1,\"842\":1,\"855\":1,\"856\":1,\"1157\":1,\"1158\":1,\"1220\":1,\"1258\":1,\"1263\":3,\"1322\":2,\"1353\":1,\"1354\":1,\"1370\":1,\"1371\":1,\"1644\":1,\"1856\":1,\"1857\":1,\"1858\":1,\"1859\":1,\"1860\":1,\"1861\":1,\"1862\":1,\"1863\":1,\"1864\":1,\"1865\":1,\"1866\":1,\"1867\":1,\"1868\":1,\"1869\":1,\"1870\":1,\"1871\":1,\"1872\":1,\"1873\":1,\"1874\":1,\"1875\":1,\"1876\":1,\"1877\":1,\"1878\":1,\"1879\":1,\"1880\":1,\"1881\":1,\"1882\":1,\"1883\":1,\"1884\":1,\"1885\":1,\"2013\":1,\"2225\":1,\"2226\":1,\"2227\":1,\"2228\":1,\"2229\":1,\"2230\":1,\"2231\":1,\"2232\":1,\"2233\":1,\"2234\":1,\"2235\":1,\"2236\":1,\"2237\":1,\"2238\":1,\"2239\":1,\"2240\":1,\"2241\":1,\"2242\":1,\"2243\":1,\"2244\":1,\"2245\":1,\"2246\":1,\"2247\":1,\"2248\":1,\"2249\":1,\"2250\":1,\"2251\":1,\"2252\":1,\"2253\":1,\"2254\":1,\"2382\":1,\"2594\":1,\"2595\":1,\"2596\":1,\"2597\":1,\"2598\":1,\"2599\":1,\"2600\":1,\"2601\":1,\"2602\":1,\"2603\":1,\"2604\":1,\"2605\":1,\"2606\":1,\"2607\":1,\"2608\":1,\"2609\":1,\"2610\":1,\"2611\":1,\"2612\":1,\"2613\":1,\"2614\":1,\"2615\":1,\"2616\":1,\"2617\":1,\"2618\":1,\"2619\":1,\"2620\":1,\"2621\":1,\"2622\":1,\"2623\":1}}],[\"defined\",{\"1\":{\"437\":1,\"947\":1,\"1462\":1}}],[\"def\",{\"1\":{\"120\":1,\"121\":1,\"124\":1,\"127\":1,\"128\":1,\"129\":1,\"130\":1,\"132\":1,\"133\":1,\"134\":1,\"135\":1,\"136\":1,\"137\":1,\"139\":1,\"140\":2,\"200\":2,\"203\":1,\"205\":1,\"206\":1,\"207\":1,\"297\":3,\"421\":1,\"422\":4,\"424\":1,\"425\":2,\"426\":1,\"429\":5,\"452\":2,\"468\":2,\"470\":5,\"471\":4,\"472\":2,\"473\":2,\"474\":1,\"475\":3,\"476\":12,\"477\":5,\"628\":1,\"629\":1,\"632\":1,\"635\":1,\"636\":1,\"637\":1,\"638\":1,\"640\":1,\"641\":1,\"642\":1,\"643\":1,\"644\":1,\"645\":1,\"647\":1,\"648\":2,\"708\":2,\"711\":1,\"713\":1,\"714\":1,\"715\":1,\"805\":3,\"931\":1,\"932\":4,\"934\":1,\"935\":2,\"936\":1,\"939\":5,\"962\":2,\"978\":2,\"980\":5,\"981\":4,\"982\":2,\"983\":2,\"984\":1,\"985\":3,\"986\":12,\"987\":5,\"1138\":1,\"1139\":1,\"1142\":1,\"1145\":1,\"1146\":1,\"1147\":1,\"1148\":1,\"1150\":1,\"1151\":1,\"1152\":1,\"1153\":1,\"1154\":1,\"1155\":1,\"1157\":1,\"1158\":2,\"1220\":2,\"1223\":1,\"1225\":1,\"1226\":1,\"1227\":1,\"1323\":3,\"1446\":1,\"1447\":4,\"1449\":1,\"1450\":2,\"1451\":1,\"1454\":5,\"1477\":2,\"1493\":2,\"1495\":5,\"1496\":4,\"1497\":2,\"1498\":2,\"1499\":1,\"1500\":3,\"1501\":12,\"1502\":5,\"1902\":1,\"1903\":1,\"1934\":2,\"1935\":1,\"2271\":1,\"2272\":1,\"2303\":2,\"2304\":1,\"2640\":1,\"2641\":1,\"2672\":2,\"2673\":1,\"2679\":2,\"2680\":7,\"2681\":4,\"2684\":2,\"2685\":2,\"2687\":2,\"2688\":2,\"2689\":12,\"2694\":2,\"2695\":7,\"2696\":4,\"2699\":2,\"2700\":2,\"2702\":2,\"2703\":2,\"2704\":12,\"2709\":2,\"2710\":7,\"2711\":4,\"2714\":2,\"2715\":2,\"2717\":2,\"2718\":2,\"2719\":12}}],[\"default=0\",{\"1\":{\"1903\":1,\"2272\":1,\"2641\":1}}],[\"default=optionresult\",{\"1\":{\"1893\":1,\"2262\":1,\"2631\":1}}],[\"default=false\",{\"1\":{\"1893\":1,\"2262\":1,\"2631\":1}}],[\"default1\",{\"1\":{\"1888\":1,\"2257\":1,\"2626\":1}}],[\"defaultparam\",{\"1\":{\"383\":1,\"384\":1,\"387\":1,\"388\":1,\"389\":1,\"390\":1,\"391\":1,\"392\":1,\"394\":1,\"395\":1,\"891\":1,\"892\":1,\"895\":1,\"896\":1,\"897\":1,\"898\":1,\"899\":1,\"900\":1,\"902\":1,\"903\":1,\"1406\":1,\"1407\":1,\"1410\":1,\"1411\":1,\"1412\":1,\"1413\":1,\"1414\":1,\"1415\":1,\"1417\":1,\"1418\":1}}],[\"defaults\",{\"1\":{\"158\":1,\"666\":1,\"1176\":1}}],[\"default\",{\"0\":{\"1892\":1,\"2261\":1,\"2630\":1},\"1\":{\"92\":1,\"145\":1,\"146\":1,\"153\":1,\"242\":3,\"259\":3,\"261\":3,\"262\":3,\"265\":2,\"278\":2,\"283\":1,\"326\":1,\"327\":1,\"411\":2,\"418\":2,\"436\":1,\"447\":3,\"600\":1,\"653\":1,\"654\":1,\"661\":1,\"750\":3,\"767\":3,\"769\":3,\"770\":3,\"773\":2,\"786\":2,\"791\":1,\"834\":1,\"835\":1,\"921\":2,\"928\":2,\"946\":1,\"957\":3,\"1110\":1,\"1163\":1,\"1164\":1,\"1171\":1,\"1263\":3,\"1280\":3,\"1282\":3,\"1283\":3,\"1286\":2,\"1298\":2,\"1303\":1,\"1347\":1,\"1348\":1,\"1436\":2,\"1443\":2,\"1461\":1,\"1472\":3,\"1625\":1,\"1723\":1,\"1888\":4,\"1891\":1,\"1892\":3,\"1893\":1,\"1899\":3,\"1994\":1,\"2092\":1,\"2257\":4,\"2260\":1,\"2261\":3,\"2262\":1,\"2268\":3,\"2363\":1,\"2452\":1,\"2626\":4,\"2629\":1,\"2630\":3,\"2631\":1,\"2637\":3}}],[\"事件的响应\",{\"1\":{\"503\":1,\"1013\":1,\"1528\":1}}],[\"事件和会话状态\",{\"1\":{\"427\":1,\"937\":1,\"1452\":1}}],[\"事件均是\",{\"1\":{\"421\":1,\"931\":1,\"1446\":1}}],[\"事件信息通常不仅仅包含消息这一个内容\",{\"1\":{\"420\":1,\"930\":1,\"1445\":1}}],[\"事件参数\",{\"1\":{\"326\":1,\"327\":1,\"834\":1,\"835\":1,\"1347\":1,\"1348\":1}}],[\"事件后处理函数\",{\"1\":{\"388\":1,\"896\":1,\"1411\":1}}],[\"事件后处理\",{\"0\":{\"133\":1,\"641\":1,\"1151\":1},\"1\":{\"289\":1,\"797\":1,\"1309\":1}}],[\"事件预处理函数\",{\"1\":{\"387\":1,\"895\":1,\"1410\":1}}],[\"事件预处理\",{\"0\":{\"132\":1,\"640\":1,\"1150\":1},\"1\":{\"288\":1,\"796\":1,\"1308\":1}}],[\"事件处理状态\",{\"1\":{\"382\":1,\"890\":1,\"1405\":1}}],[\"事件处理状态注入参数\",{\"1\":{\"301\":1,\"809\":1,\"1327\":1}}],[\"事件处理过程中发生的异常基类\",{\"1\":{\"198\":1,\"706\":1,\"1218\":1}}],[\"事件处理过程中使用到的常量\",{\"1\":{\"176\":1,\"684\":1,\"1194\":1}}],[\"事件处理钩子函数\",{\"0\":{\"131\":1,\"639\":1,\"1149\":1}}],[\"事件处理函数列表\",{\"1\":{\"93\":1,\"242\":1,\"601\":1,\"750\":1,\"1111\":1,\"1263\":1,\"1856\":1,\"1857\":1,\"1858\":1,\"1859\":1,\"1860\":1,\"1861\":1,\"1862\":1,\"1863\":1,\"1864\":1,\"1865\":1,\"1866\":1,\"1867\":1,\"1868\":1,\"1870\":1,\"1871\":1,\"1873\":1,\"1874\":1,\"1875\":1,\"1876\":1,\"1877\":1,\"1878\":1,\"1879\":1,\"1880\":1,\"1881\":1,\"1882\":1,\"1883\":1,\"1884\":1,\"1885\":1,\"2225\":1,\"2226\":1,\"2227\":1,\"2228\":1,\"2229\":1,\"2230\":1,\"2231\":1,\"2232\":1,\"2233\":1,\"2234\":1,\"2235\":1,\"2236\":1,\"2237\":1,\"2239\":1,\"2240\":1,\"2242\":1,\"2243\":1,\"2244\":1,\"2245\":1,\"2246\":1,\"2247\":1,\"2248\":1,\"2249\":1,\"2250\":1,\"2251\":1,\"2252\":1,\"2253\":1,\"2254\":1,\"2594\":1,\"2595\":1,\"2596\":1,\"2597\":1,\"2598\":1,\"2599\":1,\"2600\":1,\"2601\":1,\"2602\":1,\"2603\":1,\"2604\":1,\"2605\":1,\"2606\":1,\"2608\":1,\"2609\":1,\"2611\":1,\"2612\":1,\"2613\":1,\"2614\":1,\"2615\":1,\"2616\":1,\"2617\":1,\"2618\":1,\"2619\":1,\"2620\":1,\"2621\":1,\"2622\":1,\"2623\":1}}],[\"事件\",{\"0\":{\"473\":1,\"983\":1,\"1498\":1},\"1\":{\"125\":1,\"132\":1,\"133\":1,\"134\":1,\"135\":1,\"259\":1,\"260\":1,\"261\":1,\"476\":1,\"523\":1,\"633\":1,\"640\":1,\"641\":1,\"642\":1,\"643\":1,\"767\":1,\"768\":1,\"769\":1,\"986\":1,\"1033\":1,\"1143\":1,\"1150\":1,\"1151\":1,\"1152\":1,\"1153\":1,\"1280\":1,\"1281\":1,\"1282\":1,\"1501\":1,\"1548\":1}}],[\"事件传递来修改或扩展操作系统\",{\"1\":{\"125\":1,\"633\":1,\"1143\":1}}],[\"事件将不会再传播给其他下一优先级的响应器\",{\"1\":{\"90\":1,\"598\":1,\"1108\":1}}],[\"事件响应权限\",{\"1\":{\"1856\":1,\"1857\":1,\"1858\":1,\"1859\":1,\"1860\":1,\"1861\":1,\"1862\":1,\"1863\":1,\"1864\":1,\"1865\":1,\"1866\":1,\"1867\":1,\"1868\":1,\"1870\":1,\"1871\":1,\"1873\":1,\"1874\":1,\"1875\":1,\"1876\":1,\"1877\":1,\"1878\":1,\"1879\":1,\"1880\":1,\"1881\":1,\"1882\":1,\"1883\":1,\"1884\":1,\"1885\":1,\"2225\":1,\"2226\":1,\"2227\":1,\"2228\":1,\"2229\":1,\"2230\":1,\"2231\":1,\"2232\":1,\"2233\":1,\"2234\":1,\"2235\":1,\"2236\":1,\"2237\":1,\"2239\":1,\"2240\":1,\"2242\":1,\"2243\":1,\"2244\":1,\"2245\":1,\"2246\":1,\"2247\":1,\"2248\":1,\"2249\":1,\"2250\":1,\"2251\":1,\"2252\":1,\"2253\":1,\"2254\":1,\"2594\":1,\"2595\":1,\"2596\":1,\"2597\":1,\"2598\":1,\"2599\":1,\"2600\":1,\"2601\":1,\"2602\":1,\"2603\":1,\"2604\":1,\"2605\":1,\"2606\":1,\"2608\":1,\"2609\":1,\"2611\":1,\"2612\":1,\"2613\":1,\"2614\":1,\"2615\":1,\"2616\":1,\"2617\":1,\"2618\":1,\"2619\":1,\"2620\":1,\"2621\":1,\"2622\":1,\"2623\":1}}],[\"事件响应规则\",{\"0\":{\"88\":1,\"596\":1,\"1106\":1},\"1\":{\"88\":1,\"596\":1,\"1106\":1,\"1856\":1,\"1857\":1,\"1858\":1,\"1859\":1,\"1860\":1,\"1861\":1,\"1862\":1,\"1863\":1,\"1864\":1,\"1865\":1,\"1866\":1,\"1867\":1,\"1868\":1,\"1870\":1,\"1871\":1,\"1873\":1,\"1874\":1,\"1875\":1,\"1876\":1,\"1877\":1,\"1878\":1,\"1879\":1,\"1880\":1,\"1881\":1,\"1882\":1,\"1883\":1,\"1884\":1,\"1885\":1,\"2225\":1,\"2226\":1,\"2227\":1,\"2228\":1,\"2229\":1,\"2230\":1,\"2231\":1,\"2232\":1,\"2233\":1,\"2234\":1,\"2235\":1,\"2236\":1,\"2237\":1,\"2239\":1,\"2240\":1,\"2242\":1,\"2243\":1,\"2244\":1,\"2245\":1,\"2246\":1,\"2247\":1,\"2248\":1,\"2249\":1,\"2250\":1,\"2251\":1,\"2252\":1,\"2253\":1,\"2254\":1,\"2594\":1,\"2595\":1,\"2596\":1,\"2597\":1,\"2598\":1,\"2599\":1,\"2600\":1,\"2601\":1,\"2602\":1,\"2603\":1,\"2604\":1,\"2605\":1,\"2606\":1,\"2608\":1,\"2609\":1,\"2611\":1,\"2612\":1,\"2613\":1,\"2614\":1,\"2615\":1,\"2616\":1,\"2617\":1,\"2618\":1,\"2619\":1,\"2620\":1,\"2621\":1,\"2622\":1,\"2623\":1}}],[\"事件响应器辅助函数\",{\"0\":{\"525\":1,\"1035\":1,\"1550\":1},\"1\":{\"525\":1,\"1035\":1,\"1550\":1}}],[\"事件响应器可以通过一系列特定的规则筛选出具有某种特征的事件\",{\"1\":{\"524\":1,\"1034\":1,\"1549\":1}}],[\"事件响应器运行后后处理函数\",{\"1\":{\"390\":1,\"898\":1,\"1413\":1}}],[\"事件响应器运行前预处理函数\",{\"1\":{\"389\":1,\"897\":1,\"1412\":1}}],[\"事件响应器实例注入参数\",{\"1\":{\"305\":1,\"813\":1,\"1326\":1}}],[\"事件响应器管理器\",{\"1\":{\"274\":1,\"782\":1,\"1294\":1}}],[\"事件响应器最终有效时间点\",{\"1\":{\"242\":1,\"750\":1,\"1263\":1,\"1856\":1,\"1857\":1,\"1858\":1,\"1859\":1,\"1860\":1,\"1861\":1,\"1862\":1,\"1863\":1,\"1864\":1,\"1865\":1,\"1866\":1,\"1867\":1,\"1868\":1,\"1870\":1,\"1871\":1,\"1873\":1,\"1874\":1,\"1875\":1,\"1876\":1,\"1877\":1,\"1878\":1,\"1879\":1,\"1880\":1,\"1881\":1,\"1882\":1,\"1883\":1,\"1884\":1,\"1885\":1,\"2225\":1,\"2226\":1,\"2227\":1,\"2228\":1,\"2229\":1,\"2230\":1,\"2231\":1,\"2232\":1,\"2233\":1,\"2234\":1,\"2235\":1,\"2236\":1,\"2237\":1,\"2239\":1,\"2240\":1,\"2242\":1,\"2243\":1,\"2244\":1,\"2245\":1,\"2246\":1,\"2247\":1,\"2248\":1,\"2249\":1,\"2250\":1,\"2251\":1,\"2252\":1,\"2253\":1,\"2254\":1,\"2594\":1,\"2595\":1,\"2596\":1,\"2597\":1,\"2598\":1,\"2599\":1,\"2600\":1,\"2601\":1,\"2602\":1,\"2603\":1,\"2604\":1,\"2605\":1,\"2606\":1,\"2608\":1,\"2609\":1,\"2611\":1,\"2612\":1,\"2613\":1,\"2614\":1,\"2615\":1,\"2616\":1,\"2617\":1,\"2618\":1,\"2619\":1,\"2620\":1,\"2621\":1,\"2622\":1,\"2623\":1}}],[\"事件响应器源代码上下文信息\",{\"1\":{\"242\":1,\"750\":1,\"1263\":1}}],[\"事件响应器所在模块\",{\"1\":{\"242\":1,\"750\":1,\"1263\":1}}],[\"事件响应器所在插件\",{\"1\":{\"242\":1,\"750\":1,\"1263\":1}}],[\"事件响应器过期时间点\",{\"1\":{\"241\":1,\"749\":1,\"1262\":1}}],[\"事件响应器优先级\",{\"1\":{\"238\":1,\"746\":1,\"1259\":1,\"1856\":1,\"1857\":1,\"1858\":1,\"1859\":1,\"1860\":1,\"1861\":1,\"1862\":1,\"1863\":1,\"1864\":1,\"1865\":1,\"1866\":1,\"1867\":1,\"1868\":1,\"1870\":1,\"1871\":1,\"1873\":1,\"1874\":1,\"1875\":1,\"1876\":1,\"1877\":1,\"1878\":1,\"1879\":1,\"1880\":1,\"1881\":1,\"1882\":1,\"1883\":1,\"1884\":1,\"1885\":1,\"2225\":1,\"2226\":1,\"2227\":1,\"2228\":1,\"2229\":1,\"2230\":1,\"2231\":1,\"2232\":1,\"2233\":1,\"2234\":1,\"2235\":1,\"2236\":1,\"2237\":1,\"2239\":1,\"2240\":1,\"2242\":1,\"2243\":1,\"2244\":1,\"2245\":1,\"2246\":1,\"2247\":1,\"2248\":1,\"2249\":1,\"2250\":1,\"2251\":1,\"2252\":1,\"2253\":1,\"2254\":1,\"2594\":1,\"2595\":1,\"2596\":1,\"2597\":1,\"2598\":1,\"2599\":1,\"2600\":1,\"2601\":1,\"2602\":1,\"2603\":1,\"2604\":1,\"2605\":1,\"2606\":1,\"2608\":1,\"2609\":1,\"2611\":1,\"2612\":1,\"2613\":1,\"2614\":1,\"2615\":1,\"2616\":1,\"2617\":1,\"2618\":1,\"2619\":1,\"2620\":1,\"2621\":1,\"2622\":1,\"2623\":1}}],[\"事件响应器拥有的事件处理函数列表\",{\"1\":{\"237\":1,\"745\":1,\"1258\":1}}],[\"事件响应器触发权限\",{\"1\":{\"236\":1,\"744\":1,\"1257\":1}}],[\"事件响应器匹配规则\",{\"1\":{\"235\":1,\"743\":1,\"1256\":1}}],[\"事件响应器类\",{\"1\":{\"233\":1,\"741\":1,\"1254\":1}}],[\"事件响应器类型的检查在所有其他检查\",{\"1\":{\"86\":1,\"594\":1,\"1104\":1}}],[\"事件响应器类型\",{\"0\":{\"86\":1,\"594\":1,\"1104\":1},\"1\":{\"86\":1,\"234\":1,\"242\":1,\"594\":1,\"742\":1,\"750\":1,\"1104\":1,\"1255\":1,\"1263\":1,\"1856\":1,\"1873\":1,\"2225\":1,\"2242\":1,\"2594\":1,\"2611\":1}}],[\"事件响应器\",{\"0\":{\"524\":1,\"1034\":1,\"1549\":1},\"1\":{\"134\":1,\"135\":1,\"292\":1,\"524\":1,\"642\":1,\"643\":1,\"800\":1,\"1034\":1,\"1152\":1,\"1153\":1,\"1312\":1,\"1549\":1,\"1852\":1,\"2221\":1,\"2590\":1}}],[\"事件响应器的默认状态\",{\"1\":{\"92\":1,\"600\":1,\"1110\":1}}],[\"事件响应器的有效期分为\",{\"1\":{\"91\":1,\"599\":1,\"1109\":1}}],[\"事件响应器的响应规则会在事件响应器的权限检查通过后进行匹配\",{\"1\":{\"88\":1,\"596\":1,\"1106\":1}}],[\"事件响应器的存储提供者\",{\"1\":{\"82\":1,\"590\":1,\"1100\":1}}],[\"事件响应器的存储类似于会话存储\",{\"1\":{\"81\":1,\"589\":1,\"1099\":1}}],[\"事件响应器组成\",{\"0\":{\"85\":1,\"593\":1,\"1103\":1}}],[\"事件响应器允许继承\",{\"1\":{\"84\":1,\"592\":1,\"1102\":1}}],[\"事件响应器进阶\",{\"0\":{\"84\":1,\"592\":1,\"1102\":1}}],[\"事件响应器将会转为临时响应器\",{\"1\":{\"81\":1,\"589\":1,\"1099\":1}}],[\"事件响应器是否为临时\",{\"1\":{\"240\":1,\"748\":1,\"1261\":1}}],[\"事件响应器是否阻止事件传播\",{\"1\":{\"239\":1,\"747\":1,\"1260\":1}}],[\"事件响应器是\",{\"1\":{\"81\":1,\"589\":1,\"1099\":1}}],[\"事件响应器存储器基类\",{\"1\":{\"285\":1,\"793\":1,\"1305\":1}}],[\"事件响应器存储器类\",{\"1\":{\"284\":1,\"792\":1,\"1304\":1}}],[\"事件响应器存储\",{\"0\":{\"81\":1,\"589\":1,\"1099\":1}}],[\"事件触发权限会在事件响应器的类型检查通过后进行检查\",{\"1\":{\"87\":1,\"595\":1,\"1105\":1}}],[\"事件触发权限\",{\"0\":{\"87\":1,\"595\":1,\"1105\":1},\"1\":{\"87\":1,\"93\":1,\"595\":1,\"601\":1,\"1105\":1,\"1111\":1}}],[\"事件是否与机器人有关\",{\"0\":{\"50\":1,\"558\":1,\"1068\":1}}],[\"事件纯文本消息\",{\"0\":{\"49\":1,\"557\":1,\"1067\":1}}],[\"事件消息\",{\"0\":{\"48\":1,\"556\":1,\"1066\":1}}],[\"事件会话\",{\"0\":{\"47\":1,\"555\":1,\"1065\":1},\"1\":{\"47\":1,\"555\":1,\"1065\":1}}],[\"事件主体\",{\"0\":{\"46\":1,\"554\":1,\"1064\":1},\"1\":{\"46\":1,\"554\":1,\"1064\":1}}],[\"事件日志字符串由事件名称和事件描述组成\",{\"1\":{\"45\":1,\"553\":1,\"1063\":1}}],[\"事件日志字符串\",{\"0\":{\"45\":1,\"553\":1,\"1063\":1}}],[\"事件描述由适配器定义\",{\"1\":{\"44\":1,\"552\":1,\"1062\":1}}],[\"事件描述\",{\"0\":{\"44\":1,\"552\":1,\"1062\":1}}],[\"事件名称由适配器定义\",{\"1\":{\"43\":1,\"551\":1,\"1061\":1}}],[\"事件名称\",{\"0\":{\"43\":1,\"551\":1,\"1061\":1}}],[\"事件类型与重载\",{\"0\":{\"420\":1,\"930\":1,\"1445\":1}}],[\"事件类型通常为\",{\"1\":{\"42\":1,\"550\":1,\"1060\":1}}],[\"事件类型\",{\"0\":{\"42\":1,\"421\":1,\"550\":1,\"931\":1,\"1060\":1,\"1446\":1},\"1\":{\"371\":1,\"879\":1,\"1394\":1,\"1868\":1,\"1885\":1,\"2237\":1,\"2254\":1,\"2606\":1,\"2623\":1}}],[\"基础部分帮助新用户快速上手开发\",{\"1\":{\"495\":1,\"1005\":1,\"1520\":1}}],[\"基本用法\",{\"1\":{\"482\":1,\"483\":1,\"485\":1,\"486\":1,\"487\":1,\"489\":1,\"992\":1,\"993\":1,\"995\":1,\"996\":1,\"997\":1,\"999\":1,\"1507\":1,\"1508\":1,\"1510\":1,\"1511\":1,\"1512\":1,\"1514\":1}}],[\"基本辅助函数或\",{\"1\":{\"1037\":1,\"1552\":1}}],[\"基本辅助函数\",{\"0\":{\"93\":1,\"601\":1,\"1111\":1}}],[\"基类作为模板构建\",{\"1\":{\"543\":1,\"1053\":1,\"1568\":1}}],[\"基类对一些必要的属性进行了抽象\",{\"1\":{\"421\":1,\"931\":1,\"1446\":1}}],[\"基类的子类型\",{\"1\":{\"421\":1,\"931\":1,\"1446\":1}}],[\"基类能提供如下信息\",{\"1\":{\"41\":1,\"549\":1,\"1059\":1}}],[\"基类\",{\"1\":{\"41\":1,\"524\":1,\"525\":1,\"549\":1,\"1034\":1,\"1035\":1,\"1059\":1,\"1549\":1,\"1550\":1,\"1570\":1,\"1579\":1,\"1939\":1,\"1948\":1,\"2320\":1,\"2329\":1}}],[\"基于装饰器的方式\",{\"1\":{\"452\":1,\"962\":1,\"1477\":1}}],[\"基于\",{\"1\":{\"2\":1,\"14\":1,\"26\":1,\"108\":1,\"452\":1,\"501\":2,\"616\":1,\"962\":1,\"1011\":2,\"1126\":1,\"1477\":1,\"1526\":2}}],[\"通用化\",{\"1\":{\"489\":1,\"999\":1,\"1514\":1}}],[\"通用消息模型\",{\"1\":{\"108\":1,\"616\":1,\"1126\":1}}],[\"通信模式\",{\"1\":{\"494\":1,\"1004\":1,\"1519\":1}}],[\"通信\",{\"1\":{\"490\":2,\"491\":2,\"523\":1,\"1000\":2,\"1001\":2,\"1033\":1,\"1515\":2,\"1516\":2,\"1548\":1,\"1935\":1,\"2304\":1,\"2673\":1}}],[\"通信的方式\",{\"1\":{\"474\":1,\"984\":1,\"1499\":1}}],[\"通信可以通过\",{\"1\":{\"474\":1,\"984\":1,\"1499\":1}}],[\"通知\",{\"1\":{\"86\":1,\"594\":1,\"1104\":1}}],[\"通常不需要修改\",{\"1\":{\"1587\":1,\"1956\":1,\"2337\":1}}],[\"通常不能得到消息的纯文本\",{\"1\":{\"537\":1,\"1047\":1,\"1562\":1}}],[\"通常是用户\",{\"1\":{\"1584\":1,\"1585\":1,\"1953\":1,\"1954\":1,\"2334\":1,\"2335\":1}}],[\"通常你不需要修改这个方法\",{\"1\":{\"1583\":1,\"1952\":1,\"2333\":1}}],[\"通常用于加载一系列本地编写的项目插件\",{\"1\":{\"516\":1,\"1026\":1,\"1541\":1}}],[\"通常用于加载第三方插件或者项目插件\",{\"1\":{\"515\":1,\"1025\":1,\"1540\":1}}],[\"通常用于日志记录\",{\"1\":{\"43\":1,\"44\":1,\"551\":1,\"552\":1,\"1061\":1,\"1062\":1}}],[\"通常在日志中展示\",{\"1\":{\"477\":1,\"987\":1,\"1502\":1}}],[\"通常在事件处理函数的依赖中使用\",{\"1\":{\"258\":1,\"766\":1,\"1279\":1}}],[\"通常需要包含鉴权信息\",{\"1\":{\"474\":1,\"984\":1,\"1499\":1}}],[\"通常适配器需要一些配置项\",{\"1\":{\"467\":1,\"977\":1,\"1492\":1}}],[\"通常由用户\",{\"1\":{\"140\":1,\"648\":1,\"1158\":1}}],[\"通常\",{\"1\":{\"110\":1,\"618\":1,\"1128\":1,\"1589\":1,\"1958\":1,\"2308\":1}}],[\"通常情况下\",{\"1\":{\"86\":1,\"123\":1,\"139\":1,\"525\":1,\"532\":1,\"594\":1,\"631\":1,\"647\":1,\"1035\":1,\"1042\":1,\"1104\":1,\"1141\":1,\"1157\":1,\"1550\":1,\"1557\":1}}],[\"通常将事件目标主体为机器人\",{\"1\":{\"50\":1,\"558\":1,\"1068\":1}}],[\"通常为事件具体内容\",{\"1\":{\"1582\":1,\"1951\":1,\"2332\":1}}],[\"通常为事件消息的纯文本内容\",{\"1\":{\"49\":1,\"557\":1,\"1067\":1}}],[\"通常为负责处理事件并进行一系列的操作\",{\"1\":{\"523\":1,\"1033\":1,\"1548\":1}}],[\"通常为\",{\"1\":{\"515\":1,\"516\":1,\"523\":1,\"1025\":1,\"1026\":1,\"1033\":1,\"1540\":1,\"1541\":1,\"1548\":1}}],[\"通常为请求事件\",{\"1\":{\"476\":1,\"986\":1,\"1501\":1}}],[\"通常为通知事件\",{\"1\":{\"476\":1,\"986\":1,\"1501\":1}}],[\"通常为元事件\",{\"1\":{\"476\":1,\"986\":1,\"1501\":1}}],[\"通常为机器人用户\",{\"1\":{\"46\":1,\"47\":1,\"554\":1,\"555\":1,\"1064\":1,\"1065\":1}}],[\"通常为机器人的帐号\",{\"1\":{\"40\":1,\"548\":1,\"1058\":1}}],[\"通过发送消息与机器人进行交互\",{\"1\":{\"1935\":1,\"2304\":1,\"2673\":1}}],[\"通过parse方法返回解析结果\",{\"1\":{\"1886\":1,\"2255\":1,\"2624\":1}}],[\"通过模块名获取已经导入的某个插件\",{\"1\":{\"1804\":1,\"2173\":1,\"2542\":1}}],[\"通过读取\",{\"1\":{\"518\":1,\"519\":1,\"1028\":1,\"1029\":1,\"1543\":1,\"1544\":1}}],[\"通过点分割模块名称或使用\",{\"1\":{\"515\":1,\"1025\":1,\"1540\":1}}],[\"通过以下命令创建一个名为\",{\"1\":{\"513\":1,\"1023\":1,\"1538\":1}}],[\"通过脚手架扩展使用低代码框架\",{\"1\":{\"503\":1,\"1013\":1,\"1528\":1}}],[\"通过减少常见的编码错误和降低入门门槛\",{\"1\":{\"503\":1,\"1013\":1,\"1528\":1}}],[\"通过工具自动生成\",{\"1\":{\"483\":1,\"993\":1,\"1508\":1}}],[\"通过某种方式获取到\",{\"1\":{\"474\":1,\"984\":1,\"1499\":1}}],[\"通过配置或者平台\",{\"1\":{\"472\":1,\"982\":1,\"1497\":1}}],[\"通过响应规则来控制事件的处理\",{\"1\":{\"423\":1,\"933\":1,\"1448\":1}}],[\"通过兼容层添加路由\",{\"0\":{\"119\":1,\"627\":1,\"1137\":1}}],[\"通过这种途径\",{\"1\":{\"1933\":1,\"2302\":1,\"2671\":1}}],[\"通过这种方式\",{\"1\":{\"112\":1,\"140\":1,\"620\":1,\"648\":1,\"1130\":1,\"1158\":1}}],[\"通过这些属性以及插件元数据\",{\"1\":{\"111\":1,\"619\":1,\"1129\":1}}],[\"通过其他方式发送给机器人用户等\",{\"1\":{\"110\":1,\"618\":1,\"1128\":1}}],[\"通过它可以实现机器人的模块化以及功能扩展\",{\"1\":{\"5\":1,\"17\":1,\"29\":1}}],[\"通过\",{\"1\":{\"3\":1,\"15\":1,\"27\":1,\"117\":1,\"118\":1,\"361\":2,\"365\":3,\"367\":2,\"457\":3,\"518\":1,\"519\":1,\"625\":1,\"626\":1,\"869\":2,\"873\":3,\"875\":2,\"967\":3,\"1028\":1,\"1029\":1,\"1135\":1,\"1136\":1,\"1384\":2,\"1388\":3,\"1390\":2,\"1482\":3,\"1543\":1,\"1544\":1,\"1866\":1,\"1883\":1,\"1887\":1,\"1902\":1,\"2235\":1,\"2252\":1,\"2256\":1,\"2271\":1,\"2604\":1,\"2621\":1,\"2625\":1,\"2640\":1,\"2680\":1,\"2695\":1,\"2710\":1}}],[\"属性来自定义表名\",{\"1\":{\"2678\":1,\"2693\":1,\"2708\":1}}],[\"属性进行调用\",{\"1\":{\"1575\":1,\"1944\":1,\"2325\":1}}],[\"属性\",{\"1\":{\"40\":1,\"222\":1,\"421\":1,\"548\":1,\"730\":1,\"931\":1,\"1058\":1,\"1242\":1,\"1446\":1}}],[\"属性获取\",{\"1\":{\"40\":1,\"548\":1,\"1058\":1}}],[\"将数据库模式同步到数据库中\",{\"1\":{\"2679\":1,\"2694\":1,\"2709\":1}}],[\"将命名空间挂载到\",{\"1\":{\"1898\":1,\"2267\":1,\"2636\":1}}],[\"将多个值存为列表\",{\"1\":{\"1894\":1,\"2263\":1,\"2632\":1}}],[\"将多个消息连接并将自身作为分割\",{\"1\":{\"1614\":1,\"1983\":1,\"2352\":1}}],[\"将一个驱动器和多个混入类合并\",{\"1\":{\"1750\":1,\"2119\":1,\"2495\":1}}],[\"将后端框架封装\",{\"1\":{\"1730\":1,\"2099\":1,\"2445\":1}}],[\"将消息处理为平台所需的格式后\",{\"1\":{\"475\":1,\"985\":1,\"1500\":1}}],[\"将\",{\"1\":{\"228\":1,\"736\":1,\"1248\":1}}],[\"将从\",{\"1\":{\"164\":1,\"672\":1,\"1182\":1}}],[\"将只会响应\",{\"1\":{\"139\":1,\"647\":1,\"1157\":1}}],[\"将会自动处理加载\",{\"1\":{\"514\":1,\"1024\":1,\"1539\":1}}],[\"将会存储到\",{\"1\":{\"224\":1,\"732\":1,\"1244\":1}}],[\"将会从\",{\"1\":{\"163\":1,\"224\":1,\"671\":1,\"732\":1,\"1181\":1,\"1244\":1}}],[\"将会复制一个新的临时事件响应器\",{\"1\":{\"138\":1,\"646\":1,\"1156\":1}}],[\"将会返回所有\",{\"1\":{\"40\":1,\"548\":1,\"1058\":1}}],[\"将默认匹配\",{\"1\":{\"105\":1,\"613\":1,\"1123\":1}}],[\"将不会解析参数\",{\"1\":{\"100\":1,\"608\":1,\"1118\":1}}],[\"将事件响应器存储于其他地方\",{\"1\":{\"81\":1,\"589\":1,\"1099\":1}}],[\"将负责做任何需要的事情\",{\"1\":{\"7\":1,\"19\":1,\"31\":1}}],[\"参见\",{\"1\":{\"1919\":1,\"1929\":1,\"2288\":1,\"2298\":1,\"2657\":1,\"2667\":1}}],[\"参与\",{\"1\":{\"492\":1,\"496\":1,\"500\":1,\"1002\":1,\"1006\":1,\"1010\":1,\"1517\":1,\"1521\":1,\"1525\":1}}],[\"参与开发\",{\"0\":{\"460\":1,\"970\":1,\"1485\":1}}],[\"参与讨论\",{\"0\":{\"457\":1,\"967\":1,\"1482\":1}}],[\"参数为一个\",{\"1\":{\"2688\":1,\"2703\":1,\"2718\":1}}],[\"参数是迁移脚本的分支\",{\"1\":{\"2679\":1,\"2694\":1,\"2709\":1}}],[\"参数是迁移脚本的描述\",{\"1\":{\"2679\":1,\"2694\":1,\"2709\":1}}],[\"参数字典或\",{\"1\":{\"1930\":1,\"2299\":1,\"2668\":1}}],[\"参数单元的缺失提示生成函数\",{\"1\":{\"1892\":1,\"2261\":1,\"2630\":1}}],[\"参数单元的错误提示生成函数\",{\"1\":{\"1892\":1,\"2261\":1,\"2630\":1}}],[\"参数单元的补全说明生成函数\",{\"1\":{\"1892\":1,\"2261\":1,\"2630\":1}}],[\"参数单元的默认值\",{\"1\":{\"1892\":1,\"2261\":1,\"2630\":1}}],[\"参数单元默认值的别名\",{\"1\":{\"1892\":1,\"2261\":1,\"2630\":1}}],[\"参数需要匹配一个\",{\"1\":{\"1890\":1,\"2259\":1,\"2628\":1}}],[\"参数除外\",{\"1\":{\"1889\":1,\"2258\":1,\"2627\":1}}],[\"参数之后\",{\"1\":{\"1888\":1,\"2257\":1,\"2626\":1}}],[\"参数不依照构造顺序传入\",{\"1\":{\"1888\":1,\"2257\":1,\"2626\":1}}],[\"参数声明\",{\"0\":{\"1888\":1,\"2257\":1,\"2626\":1}}],[\"参数package和二个\",{\"1\":{\"1886\":1,\"2255\":1,\"2624\":1}}],[\"参数时\",{\"1\":{\"1866\":1,\"1883\":1,\"2235\":1,\"2252\":1,\"2604\":1,\"2621\":1}}],[\"参数类型注解来实现使用不同平台的接口\",{\"1\":{\"422\":2,\"932\":2,\"1447\":2}}],[\"参数分别为\",{\"1\":{\"386\":1,\"894\":1,\"1409\":1}}],[\"参数消息纯文本\",{\"1\":{\"303\":1,\"811\":1,\"1317\":1}}],[\"参数消息文本\",{\"1\":{\"296\":1,\"804\":1,\"1319\":1}}],[\"参数消息\",{\"1\":{\"295\":1,\"803\":1,\"1315\":1}}],[\"参数名称\",{\"1\":{\"1904\":1,\"2273\":1,\"2642\":1}}],[\"参数名\",{\"1\":{\"251\":1,\"256\":1,\"759\":1,\"764\":1,\"1272\":1,\"1277\":1}}],[\"参数解析后的结果可以通过\",{\"1\":{\"100\":1,\"608\":1,\"1118\":1}}],[\"参数解析采用\",{\"1\":{\"100\":1,\"608\":1,\"1118\":1}}],[\"参数可以是任意\",{\"1\":{\"2688\":1,\"2703\":1,\"2718\":1}}],[\"参数可以是\",{\"1\":{\"99\":1,\"607\":1,\"1117\":1}}],[\"参数外\",{\"1\":{\"93\":1,\"601\":1,\"1111\":1}}],[\"参数\",{\"1\":{\"40\":1,\"99\":1,\"100\":1,\"105\":1,\"146\":1,\"148\":1,\"152\":1,\"153\":1,\"154\":1,\"155\":1,\"156\":1,\"157\":1,\"158\":1,\"159\":1,\"160\":1,\"161\":1,\"163\":1,\"165\":1,\"196\":1,\"197\":1,\"198\":1,\"199\":1,\"200\":1,\"201\":1,\"202\":1,\"203\":1,\"204\":1,\"205\":1,\"206\":1,\"207\":1,\"208\":1,\"209\":1,\"210\":1,\"211\":1,\"212\":1,\"213\":1,\"214\":1,\"217\":1,\"218\":2,\"219\":1,\"220\":1,\"221\":1,\"222\":1,\"223\":1,\"224\":1,\"225\":1,\"228\":1,\"229\":1,\"230\":1,\"233\":1,\"242\":1,\"243\":1,\"244\":1,\"245\":1,\"246\":1,\"247\":1,\"248\":1,\"249\":1,\"250\":1,\"251\":1,\"252\":1,\"253\":1,\"254\":1,\"255\":1,\"256\":1,\"257\":1,\"258\":1,\"259\":2,\"260\":1,\"261\":2,\"262\":2,\"263\":1,\"264\":1,\"265\":2,\"266\":1,\"267\":1,\"268\":1,\"269\":1,\"270\":1,\"271\":1,\"272\":1,\"274\":1,\"275\":1,\"276\":1,\"277\":1,\"278\":2,\"279\":1,\"280\":1,\"281\":1,\"282\":1,\"283\":1,\"284\":1,\"285\":1,\"288\":1,\"289\":1,\"290\":1,\"291\":1,\"292\":1,\"293\":1,\"295\":1,\"296\":1,\"297\":1,\"298\":1,\"299\":1,\"300\":1,\"301\":1,\"302\":1,\"303\":1,\"304\":1,\"305\":1,\"306\":1,\"307\":1,\"308\":1,\"309\":1,\"310\":2,\"311\":1,\"312\":1,\"313\":1,\"314\":1,\"315\":1,\"316\":1,\"317\":1,\"318\":1,\"319\":3,\"320\":1,\"321\":1,\"322\":1,\"323\":1,\"324\":1,\"325\":1,\"326\":1,\"327\":1,\"329\":1,\"330\":1,\"331\":1,\"332\":1,\"333\":1,\"335\":1,\"336\":1,\"337\":1,\"338\":1,\"339\":1,\"344\":1,\"347\":1,\"349\":1,\"350\":1,\"351\":1,\"352\":1,\"353\":1,\"354\":1,\"355\":1,\"356\":1,\"357\":1,\"358\":1,\"359\":1,\"360\":1,\"361\":1,\"362\":1,\"363\":3,\"364\":1,\"365\":1,\"366\":1,\"367\":1,\"368\":1,\"369\":1,\"370\":1,\"371\":1,\"373\":1,\"374\":1,\"375\":1,\"376\":1,\"377\":1,\"378\":1,\"379\":1,\"380\":1,\"381\":1,\"398\":1,\"399\":1,\"400\":1,\"401\":1,\"402\":1,\"403\":1,\"404\":1,\"405\":1,\"406\":1,\"407\":1,\"408\":3,\"409\":1,\"410\":1,\"411\":1,\"412\":1,\"413\":1,\"414\":1,\"415\":1,\"423\":1,\"548\":1,\"607\":1,\"608\":1,\"613\":1,\"654\":1,\"656\":1,\"660\":1,\"661\":1,\"662\":1,\"663\":1,\"664\":1,\"665\":1,\"666\":1,\"667\":1,\"668\":1,\"669\":1,\"671\":1,\"673\":1,\"704\":1,\"705\":1,\"706\":1,\"707\":1,\"708\":1,\"709\":1,\"710\":1,\"711\":1,\"712\":1,\"713\":1,\"714\":1,\"715\":1,\"716\":1,\"717\":1,\"718\":1,\"719\":1,\"720\":1,\"721\":1,\"722\":1,\"725\":1,\"726\":2,\"727\":1,\"728\":1,\"729\":1,\"730\":1,\"731\":1,\"732\":1,\"733\":1,\"736\":1,\"737\":1,\"738\":1,\"741\":1,\"750\":1,\"751\":1,\"752\":1,\"753\":1,\"754\":1,\"755\":1,\"756\":1,\"757\":1,\"758\":1,\"759\":1,\"760\":1,\"761\":1,\"762\":1,\"763\":1,\"764\":1,\"765\":1,\"766\":1,\"767\":2,\"768\":1,\"769\":2,\"770\":2,\"771\":1,\"772\":1,\"773\":2,\"774\":1,\"775\":1,\"776\":1,\"777\":1,\"778\":1,\"779\":1,\"780\":1,\"782\":1,\"783\":1,\"784\":1,\"785\":1,\"786\":2,\"787\":1,\"788\":1,\"789\":1,\"790\":1,\"791\":1,\"792\":1,\"793\":1,\"796\":1,\"797\":1,\"798\":1,\"799\":1,\"800\":1,\"801\":1,\"803\":1,\"804\":1,\"805\":1,\"806\":1,\"807\":1,\"808\":1,\"809\":1,\"810\":1,\"811\":1,\"812\":1,\"813\":1,\"814\":1,\"815\":1,\"816\":1,\"817\":1,\"818\":2,\"819\":1,\"820\":1,\"821\":1,\"822\":1,\"823\":1,\"824\":1,\"825\":1,\"826\":1,\"827\":3,\"828\":1,\"829\":1,\"830\":1,\"831\":1,\"832\":1,\"833\":1,\"834\":1,\"835\":1,\"837\":1,\"838\":1,\"839\":1,\"840\":1,\"841\":1,\"843\":1,\"844\":1,\"845\":1,\"846\":1,\"847\":1,\"852\":1,\"855\":1,\"857\":1,\"858\":1,\"859\":1,\"860\":1,\"861\":1,\"862\":1,\"863\":1,\"864\":1,\"865\":1,\"866\":1,\"867\":1,\"868\":1,\"869\":1,\"870\":1,\"871\":3,\"872\":1,\"873\":1,\"874\":1,\"875\":1,\"876\":1,\"877\":1,\"878\":1,\"879\":1,\"881\":1,\"882\":1,\"883\":1,\"884\":1,\"885\":1,\"886\":1,\"887\":1,\"888\":1,\"889\":1,\"906\":1,\"907\":1,\"908\":1,\"909\":1,\"910\":1,\"911\":1,\"912\":1,\"913\":1,\"914\":1,\"915\":1,\"916\":3,\"917\":1,\"918\":1,\"919\":1,\"920\":1,\"921\":1,\"922\":1,\"923\":1,\"924\":1,\"925\":1,\"933\":1,\"1058\":1,\"1117\":1,\"1118\":1,\"1123\":1,\"1164\":1,\"1166\":1,\"1170\":1,\"1171\":1,\"1172\":1,\"1173\":1,\"1174\":1,\"1175\":1,\"1176\":1,\"1177\":1,\"1178\":1,\"1179\":1,\"1181\":1,\"1183\":1,\"1216\":1,\"1217\":1,\"1218\":1,\"1219\":1,\"1220\":1,\"1221\":1,\"1222\":1,\"1223\":1,\"1224\":1,\"1225\":1,\"1226\":1,\"1227\":1,\"1228\":1,\"1229\":1,\"1230\":1,\"1231\":1,\"1232\":1,\"1233\":1,\"1234\":1,\"1237\":1,\"1238\":2,\"1239\":1,\"1240\":1,\"1241\":1,\"1242\":1,\"1243\":1,\"1244\":1,\"1245\":1,\"1248\":1,\"1249\":1,\"1250\":1,\"1254\":1,\"1263\":1,\"1264\":1,\"1265\":1,\"1266\":1,\"1267\":1,\"1268\":1,\"1269\":1,\"1270\":1,\"1271\":1,\"1272\":1,\"1273\":1,\"1274\":1,\"1275\":1,\"1276\":1,\"1277\":1,\"1278\":1,\"1279\":1,\"1280\":2,\"1281\":1,\"1282\":2,\"1283\":2,\"1284\":1,\"1285\":1,\"1286\":2,\"1287\":1,\"1288\":1,\"1289\":1,\"1290\":1,\"1291\":1,\"1292\":1,\"1293\":1,\"1294\":1,\"1295\":1,\"1296\":1,\"1297\":1,\"1298\":2,\"1299\":1,\"1300\":1,\"1301\":1,\"1302\":1,\"1303\":1,\"1304\":1,\"1305\":1,\"1308\":1,\"1309\":1,\"1310\":1,\"1311\":1,\"1312\":1,\"1313\":1,\"1315\":1,\"1316\":1,\"1317\":1,\"1318\":1,\"1319\":1,\"1320\":1,\"1321\":1,\"1322\":1,\"1323\":1,\"1324\":1,\"1325\":1,\"1326\":1,\"1327\":1,\"1328\":1,\"1329\":1,\"1330\":1,\"1331\":2,\"1332\":1,\"1333\":1,\"1334\":1,\"1335\":1,\"1336\":1,\"1337\":1,\"1338\":1,\"1339\":1,\"1340\":3,\"1341\":1,\"1342\":1,\"1343\":1,\"1344\":1,\"1345\":1,\"1346\":1,\"1347\":1,\"1348\":1,\"1349\":1,\"1350\":1,\"1352\":1,\"1353\":1,\"1355\":1,\"1356\":1,\"1357\":1,\"1358\":1,\"1359\":1,\"1360\":1,\"1361\":1,\"1362\":1,\"1367\":1,\"1370\":1,\"1372\":1,\"1373\":1,\"1374\":1,\"1375\":1,\"1376\":1,\"1377\":1,\"1378\":1,\"1379\":1,\"1380\":1,\"1381\":1,\"1382\":1,\"1383\":1,\"1384\":1,\"1385\":1,\"1386\":3,\"1387\":1,\"1388\":1,\"1389\":1,\"1390\":1,\"1391\":1,\"1392\":1,\"1393\":1,\"1394\":1,\"1396\":1,\"1397\":1,\"1398\":1,\"1399\":1,\"1400\":1,\"1401\":1,\"1402\":1,\"1403\":1,\"1404\":1,\"1421\":1,\"1422\":1,\"1423\":1,\"1424\":1,\"1425\":1,\"1426\":1,\"1427\":1,\"1428\":1,\"1429\":1,\"1430\":1,\"1431\":3,\"1432\":1,\"1433\":1,\"1434\":1,\"1435\":1,\"1436\":1,\"1437\":1,\"1438\":1,\"1439\":1,\"1440\":1,\"1448\":1,\"1570\":1,\"1575\":1,\"1576\":1,\"1577\":1,\"1578\":1,\"1579\":1,\"1580\":1,\"1581\":1,\"1582\":1,\"1583\":1,\"1584\":1,\"1585\":1,\"1586\":1,\"1587\":1,\"1588\":1,\"1589\":1,\"1592\":1,\"1594\":1,\"1595\":1,\"1596\":1,\"1597\":1,\"1598\":1,\"1599\":1,\"1600\":1,\"1601\":1,\"1602\":1,\"1603\":1,\"1604\":1,\"1605\":5,\"1606\":1,\"1607\":1,\"1608\":1,\"1609\":1,\"1610\":1,\"1611\":1,\"1612\":1,\"1613\":1,\"1614\":1,\"1615\":1,\"1616\":1,\"1617\":1,\"1618\":1,\"1619\":1,\"1622\":1,\"1623\":1,\"1624\":1,\"1625\":1,\"1626\":1,\"1627\":1,\"1628\":1,\"1629\":1,\"1630\":1,\"1631\":1,\"1632\":1,\"1633\":1,\"1634\":1,\"1635\":1,\"1636\":1,\"1637\":1,\"1638\":1,\"1640\":2,\"1641\":1,\"1642\":1,\"1643\":1,\"1644\":1,\"1645\":1,\"1646\":1,\"1648\":1,\"1649\":1,\"1650\":1,\"1652\":1,\"1653\":1,\"1654\":1,\"1655\":1,\"1656\":1,\"1657\":1,\"1658\":1,\"1659\":1,\"1660\":1,\"1661\":1,\"1662\":1,\"1663\":1,\"1664\":1,\"1665\":1,\"1666\":1,\"1667\":1,\"1668\":1,\"1670\":1,\"1681\":1,\"1686\":1,\"1687\":1,\"1688\":1,\"1689\":1,\"1690\":1,\"1691\":1,\"1692\":1,\"1693\":1,\"1694\":1,\"1695\":1,\"1696\":1,\"1698\":1,\"1699\":1,\"1700\":1,\"1701\":1,\"1702\":1,\"1703\":1,\"1704\":1,\"1705\":1,\"1707\":1,\"1709\":1,\"1713\":1,\"1716\":1,\"1717\":1,\"1718\":1,\"1719\":1,\"1720\":1,\"1721\":1,\"1722\":1,\"1723\":1,\"1724\":1,\"1725\":1,\"1726\":1,\"1727\":1,\"1728\":1,\"1729\":1,\"1730\":1,\"1733\":1,\"1734\":1,\"1735\":1,\"1737\":1,\"1738\":1,\"1739\":1,\"1740\":1,\"1741\":1,\"1742\":1,\"1743\":1,\"1744\":1,\"1745\":1,\"1746\":1,\"1747\":1,\"1750\":2,\"1751\":1,\"1752\":1,\"1753\":1,\"1754\":1,\"1755\":1,\"1756\":1,\"1757\":1,\"1759\":1,\"1762\":1,\"1763\":1,\"1765\":1,\"1772\":1,\"1777\":1,\"1778\":1,\"1779\":1,\"1780\":1,\"1781\":1,\"1782\":1,\"1783\":1,\"1784\":1,\"1785\":1,\"1786\":1,\"1787\":1,\"1789\":1,\"1790\":1,\"1791\":1,\"1792\":1,\"1793\":1,\"1794\":1,\"1795\":1,\"1796\":1,\"1797\":1,\"1798\":1,\"1799\":1,\"1800\":1,\"1803\":1,\"1804\":1,\"1805\":1,\"1806\":1,\"1807\":1,\"1809\":1,\"1810\":1,\"1811\":1,\"1812\":1,\"1813\":1,\"1814\":1,\"1815\":1,\"1816\":1,\"1817\":1,\"1819\":1,\"1824\":1,\"1825\":1,\"1826\":1,\"1827\":1,\"1828\":1,\"1829\":1,\"1830\":1,\"1832\":1,\"1841\":1,\"1842\":1,\"1852\":1,\"1853\":1,\"1854\":1,\"1855\":1,\"1856\":1,\"1857\":1,\"1858\":1,\"1859\":1,\"1860\":1,\"1861\":1,\"1862\":1,\"1863\":1,\"1864\":1,\"1865\":1,\"1866\":1,\"1867\":1,\"1868\":1,\"1869\":1,\"1870\":1,\"1871\":1,\"1872\":1,\"1873\":1,\"1874\":1,\"1875\":1,\"1876\":1,\"1877\":1,\"1878\":1,\"1879\":1,\"1880\":1,\"1881\":1,\"1882\":1,\"1883\":1,\"1884\":1,\"1885\":1,\"1886\":1,\"1891\":2,\"1939\":1,\"1944\":1,\"1945\":1,\"1946\":1,\"1947\":1,\"1948\":1,\"1949\":1,\"1950\":1,\"1951\":1,\"1952\":1,\"1953\":1,\"1954\":1,\"1955\":1,\"1956\":1,\"1957\":1,\"1958\":1,\"1961\":1,\"1963\":1,\"1964\":1,\"1965\":1,\"1966\":1,\"1967\":1,\"1968\":1,\"1969\":1,\"1970\":1,\"1971\":1,\"1972\":1,\"1973\":1,\"1974\":5,\"1975\":1,\"1976\":1,\"1977\":1,\"1978\":1,\"1979\":1,\"1980\":1,\"1981\":1,\"1982\":1,\"1983\":1,\"1984\":1,\"1985\":1,\"1986\":1,\"1987\":1,\"1988\":1,\"1991\":1,\"1992\":1,\"1993\":1,\"1994\":1,\"1995\":1,\"1996\":1,\"1997\":1,\"1998\":1,\"1999\":1,\"2000\":1,\"2001\":1,\"2002\":1,\"2003\":1,\"2004\":1,\"2005\":1,\"2006\":1,\"2007\":1,\"2009\":2,\"2010\":1,\"2011\":1,\"2012\":1,\"2013\":1,\"2014\":1,\"2015\":1,\"2017\":1,\"2018\":1,\"2019\":1,\"2021\":1,\"2022\":1,\"2023\":1,\"2024\":1,\"2025\":1,\"2026\":1,\"2027\":1,\"2028\":1,\"2029\":1,\"2030\":1,\"2031\":1,\"2032\":1,\"2033\":1,\"2034\":1,\"2035\":1,\"2036\":1,\"2037\":1,\"2039\":1,\"2050\":1,\"2055\":1,\"2056\":1,\"2057\":1,\"2058\":1,\"2059\":1,\"2060\":1,\"2061\":1,\"2062\":1,\"2063\":1,\"2064\":1,\"2065\":1,\"2067\":1,\"2068\":1,\"2069\":1,\"2070\":1,\"2071\":1,\"2072\":1,\"2073\":1,\"2074\":1,\"2076\":1,\"2078\":1,\"2082\":1,\"2085\":1,\"2086\":1,\"2087\":1,\"2088\":1,\"2089\":1,\"2090\":1,\"2091\":1,\"2092\":1,\"2093\":1,\"2094\":1,\"2095\":1,\"2096\":1,\"2097\":1,\"2098\":1,\"2099\":1,\"2102\":1,\"2103\":1,\"2104\":1,\"2106\":1,\"2107\":1,\"2108\":1,\"2109\":1,\"2110\":1,\"2111\":1,\"2112\":1,\"2113\":1,\"2114\":1,\"2115\":1,\"2116\":1,\"2119\":2,\"2120\":1,\"2121\":1,\"2122\":1,\"2123\":1,\"2124\":1,\"2125\":1,\"2126\":1,\"2128\":1,\"2131\":1,\"2132\":1,\"2134\":1,\"2141\":1,\"2146\":1,\"2147\":1,\"2148\":1,\"2149\":1,\"2150\":1,\"2151\":1,\"2152\":1,\"2153\":1,\"2154\":1,\"2155\":1,\"2156\":1,\"2158\":1,\"2159\":1,\"2160\":1,\"2161\":1,\"2162\":1,\"2163\":1,\"2164\":1,\"2165\":1,\"2166\":1,\"2167\":1,\"2168\":1,\"2169\":1,\"2172\":1,\"2173\":1,\"2174\":1,\"2175\":1,\"2176\":1,\"2178\":1,\"2179\":1,\"2180\":1,\"2181\":1,\"2182\":1,\"2183\":1,\"2184\":1,\"2185\":1,\"2186\":1,\"2188\":1,\"2193\":1,\"2194\":1,\"2195\":1,\"2196\":1,\"2197\":1,\"2198\":1,\"2199\":1,\"2201\":1,\"2210\":1,\"2211\":1,\"2221\":1,\"2222\":1,\"2223\":1,\"2224\":1,\"2225\":1,\"2226\":1,\"2227\":1,\"2228\":1,\"2229\":1,\"2230\":1,\"2231\":1,\"2232\":1,\"2233\":1,\"2234\":1,\"2235\":1,\"2236\":1,\"2237\":1,\"2238\":1,\"2239\":1,\"2240\":1,\"2241\":1,\"2242\":1,\"2243\":1,\"2244\":1,\"2245\":1,\"2246\":1,\"2247\":1,\"2248\":1,\"2249\":1,\"2250\":1,\"2251\":1,\"2252\":1,\"2253\":1,\"2254\":1,\"2255\":1,\"2260\":2,\"2308\":1,\"2311\":1,\"2313\":1,\"2314\":1,\"2315\":1,\"2316\":1,\"2317\":1,\"2318\":1,\"2319\":1,\"2320\":1,\"2325\":1,\"2326\":1,\"2327\":1,\"2328\":1,\"2329\":1,\"2330\":1,\"2331\":1,\"2332\":1,\"2333\":1,\"2334\":1,\"2335\":1,\"2336\":1,\"2337\":1,\"2338\":1,\"2339\":1,\"2340\":1,\"2341\":1,\"2342\":1,\"2343\":5,\"2344\":1,\"2345\":1,\"2346\":1,\"2347\":1,\"2348\":1,\"2349\":1,\"2350\":1,\"2351\":1,\"2352\":1,\"2353\":1,\"2354\":1,\"2355\":1,\"2356\":1,\"2357\":1,\"2360\":1,\"2361\":1,\"2362\":1,\"2363\":1,\"2364\":1,\"2365\":1,\"2366\":1,\"2367\":1,\"2368\":1,\"2369\":1,\"2370\":1,\"2371\":1,\"2372\":1,\"2373\":1,\"2374\":1,\"2375\":1,\"2376\":1,\"2378\":2,\"2379\":1,\"2380\":1,\"2381\":1,\"2382\":1,\"2383\":1,\"2384\":1,\"2386\":1,\"2387\":1,\"2388\":1,\"2390\":1,\"2391\":1,\"2392\":1,\"2393\":1,\"2394\":1,\"2395\":1,\"2396\":1,\"2397\":1,\"2398\":1,\"2399\":1,\"2400\":1,\"2401\":1,\"2402\":1,\"2403\":1,\"2404\":1,\"2405\":1,\"2406\":1,\"2408\":1,\"2419\":1,\"2424\":1,\"2425\":1,\"2426\":1,\"2427\":1,\"2428\":1,\"2429\":1,\"2430\":1,\"2431\":1,\"2432\":1,\"2433\":1,\"2434\":1,\"2436\":1,\"2437\":1,\"2438\":1,\"2439\":1,\"2440\":1,\"2441\":1,\"2442\":1,\"2443\":1,\"2445\":1,\"2448\":1,\"2449\":1,\"2450\":1,\"2451\":1,\"2452\":1,\"2453\":1,\"2454\":1,\"2455\":1,\"2456\":1,\"2457\":1,\"2461\":1,\"2464\":1,\"2465\":1,\"2466\":1,\"2467\":1,\"2468\":1,\"2470\":1,\"2471\":1,\"2472\":1,\"2473\":1,\"2474\":1,\"2475\":1,\"2476\":1,\"2478\":1,\"2479\":1,\"2481\":1,\"2482\":1,\"2484\":1,\"2485\":1,\"2486\":1,\"2487\":1,\"2488\":1,\"2489\":1,\"2490\":1,\"2491\":1,\"2492\":1,\"2493\":1,\"2494\":1,\"2495\":2,\"2497\":1,\"2500\":1,\"2501\":1,\"2503\":1,\"2510\":1,\"2515\":1,\"2516\":1,\"2517\":1,\"2518\":1,\"2519\":1,\"2520\":1,\"2521\":1,\"2522\":1,\"2523\":1,\"2524\":1,\"2525\":1,\"2527\":1,\"2528\":1,\"2529\":1,\"2530\":1,\"2531\":1,\"2532\":1,\"2533\":1,\"2534\":1,\"2535\":1,\"2536\":1,\"2537\":1,\"2538\":1,\"2541\":1,\"2542\":1,\"2543\":1,\"2544\":1,\"2545\":1,\"2547\":1,\"2548\":1,\"2549\":1,\"2550\":1,\"2551\":1,\"2552\":1,\"2553\":1,\"2554\":1,\"2555\":1,\"2557\":1,\"2562\":1,\"2563\":1,\"2564\":1,\"2565\":1,\"2566\":1,\"2567\":1,\"2568\":1,\"2570\":1,\"2579\":1,\"2580\":1,\"2590\":1,\"2591\":1,\"2592\":1,\"2593\":1,\"2594\":1,\"2595\":1,\"2596\":1,\"2597\":1,\"2598\":1,\"2599\":1,\"2600\":1,\"2601\":1,\"2602\":1,\"2603\":1,\"2604\":1,\"2605\":1,\"2606\":1,\"2607\":1,\"2608\":1,\"2609\":1,\"2610\":1,\"2611\":1,\"2612\":1,\"2613\":1,\"2614\":1,\"2615\":1,\"2616\":1,\"2617\":1,\"2618\":1,\"2619\":1,\"2620\":1,\"2621\":1,\"2622\":1,\"2623\":1,\"2624\":1,\"2629\":2}}],[\"参考配置调度器\",{\"1\":{\"456\":1,\"966\":1,\"1481\":1}}],[\"参考文档\",{\"1\":{\"362\":1,\"870\":1,\"1385\":1}}],[\"参考命令响应规则\",{\"1\":{\"173\":1,\"174\":1,\"681\":1,\"682\":1,\"1191\":1,\"1192\":1}}],[\"参考\",{\"1\":{\"3\":1,\"15\":1,\"27\":1,\"169\":1,\"372\":1,\"398\":1,\"677\":1,\"880\":1,\"906\":1,\"1187\":1,\"1395\":1,\"1421\":1,\"1818\":1,\"2187\":1,\"2556\":1}}],[\"image\",{\"1\":{\"2690\":4,\"2705\":4,\"2720\":4}}],[\"implement\",{\"1\":{\"373\":1,\"881\":1,\"1396\":1}}],[\"import\",{\"1\":{\"38\":2,\"39\":2,\"40\":4,\"55\":1,\"82\":1,\"83\":1,\"95\":2,\"96\":2,\"97\":2,\"98\":2,\"99\":2,\"100\":3,\"101\":2,\"102\":1,\"103\":2,\"105\":2,\"106\":2,\"110\":2,\"111\":4,\"114\":2,\"116\":4,\"117\":2,\"118\":2,\"120\":2,\"121\":2,\"123\":1,\"124\":2,\"127\":1,\"128\":1,\"129\":1,\"130\":1,\"132\":2,\"133\":1,\"134\":2,\"135\":1,\"136\":2,\"137\":2,\"140\":2,\"218\":1,\"227\":1,\"293\":1,\"365\":1,\"417\":1,\"418\":2,\"419\":1,\"421\":1,\"422\":3,\"425\":2,\"426\":1,\"429\":4,\"433\":3,\"451\":2,\"452\":2,\"466\":2,\"467\":1,\"468\":6,\"470\":5,\"471\":2,\"472\":1,\"473\":6,\"474\":4,\"475\":7,\"476\":4,\"477\":5,\"478\":2,\"507\":2,\"514\":2,\"515\":1,\"526\":1,\"527\":2,\"532\":1,\"534\":1,\"536\":2,\"537\":1,\"541\":1,\"543\":5,\"546\":2,\"547\":2,\"548\":4,\"563\":1,\"590\":1,\"591\":1,\"603\":2,\"604\":2,\"605\":2,\"606\":2,\"607\":2,\"608\":3,\"609\":2,\"610\":1,\"611\":2,\"613\":2,\"614\":2,\"618\":2,\"619\":4,\"622\":2,\"624\":4,\"625\":2,\"626\":2,\"628\":2,\"629\":2,\"631\":1,\"632\":2,\"635\":1,\"636\":1,\"637\":1,\"638\":1,\"640\":2,\"641\":1,\"642\":2,\"643\":1,\"644\":2,\"645\":2,\"648\":2,\"726\":1,\"735\":1,\"873\":1,\"927\":1,\"928\":2,\"929\":1,\"931\":1,\"932\":3,\"934\":2,\"935\":2,\"936\":3,\"939\":4,\"943\":3,\"961\":2,\"962\":2,\"976\":2,\"977\":1,\"978\":6,\"980\":5,\"981\":2,\"982\":1,\"983\":6,\"984\":4,\"985\":7,\"986\":4,\"987\":5,\"988\":2,\"1017\":2,\"1024\":2,\"1025\":1,\"1036\":1,\"1037\":2,\"1042\":1,\"1044\":1,\"1046\":2,\"1047\":1,\"1051\":1,\"1053\":5,\"1056\":2,\"1057\":2,\"1058\":4,\"1073\":1,\"1100\":1,\"1101\":1,\"1113\":2,\"1114\":2,\"1115\":2,\"1116\":2,\"1117\":2,\"1118\":3,\"1119\":2,\"1120\":1,\"1121\":2,\"1123\":2,\"1124\":2,\"1128\":2,\"1129\":4,\"1132\":2,\"1134\":4,\"1135\":2,\"1136\":2,\"1138\":2,\"1139\":2,\"1141\":1,\"1142\":2,\"1145\":1,\"1146\":1,\"1147\":1,\"1148\":1,\"1150\":2,\"1151\":1,\"1152\":2,\"1153\":1,\"1154\":2,\"1155\":2,\"1158\":2,\"1238\":1,\"1247\":1,\"1388\":1,\"1442\":1,\"1443\":2,\"1444\":1,\"1446\":1,\"1447\":3,\"1449\":2,\"1450\":2,\"1451\":3,\"1454\":4,\"1458\":3,\"1476\":2,\"1477\":2,\"1491\":2,\"1492\":1,\"1493\":6,\"1495\":5,\"1496\":2,\"1497\":1,\"1498\":6,\"1499\":4,\"1500\":7,\"1501\":4,\"1502\":5,\"1503\":2,\"1532\":2,\"1539\":2,\"1540\":1,\"1551\":1,\"1552\":2,\"1557\":1,\"1559\":1,\"1561\":2,\"1562\":1,\"1566\":1,\"1568\":5,\"1818\":1,\"1886\":1,\"1887\":1,\"1889\":2,\"1890\":2,\"1893\":1,\"1896\":1,\"1898\":1,\"1899\":1,\"1901\":1,\"1902\":2,\"1903\":3,\"1904\":1,\"1905\":1,\"1906\":3,\"1907\":1,\"1934\":4,\"1935\":3,\"2187\":1,\"2255\":1,\"2256\":1,\"2258\":2,\"2259\":2,\"2262\":1,\"2265\":1,\"2267\":1,\"2268\":1,\"2270\":1,\"2271\":2,\"2272\":3,\"2273\":1,\"2274\":1,\"2275\":3,\"2276\":1,\"2303\":4,\"2304\":3,\"2556\":1,\"2624\":1,\"2625\":1,\"2627\":2,\"2628\":2,\"2631\":1,\"2634\":1,\"2636\":1,\"2637\":1,\"2639\":1,\"2640\":2,\"2641\":3,\"2642\":1,\"2643\":1,\"2644\":3,\"2645\":1,\"2672\":4,\"2673\":3,\"2678\":3,\"2679\":4,\"2680\":8,\"2681\":5,\"2684\":4,\"2685\":4,\"2687\":4,\"2688\":3,\"2693\":3,\"2694\":4,\"2695\":8,\"2696\":5,\"2699\":4,\"2700\":4,\"2702\":4,\"2703\":3,\"2708\":3,\"2709\":4,\"2710\":8,\"2711\":5,\"2714\":4,\"2715\":4,\"2717\":4,\"2718\":3}}],[\"i的命令参数解析器\",{\"1\":{\"1886\":1,\"2255\":1,\"2624\":1}}],[\"i\",{\"1\":{\"1886\":1,\"1906\":1,\"2255\":1,\"2275\":1,\"2624\":1,\"2644\":1}}],[\"i|\",{\"1\":{\"1886\":1,\"1906\":1,\"2255\":1,\"2275\":1,\"2624\":1,\"2644\":1}}],[\"iyume\",{\"1\":{\"498\":1,\"1008\":1,\"1523\":1}}],[\"iterator\",{\"1\":{\"2689\":2,\"2704\":2,\"2719\":2}}],[\"iterable\",{\"1\":{\"248\":1,\"249\":1,\"250\":1,\"251\":1,\"477\":2,\"534\":1,\"756\":1,\"757\":1,\"758\":1,\"759\":1,\"987\":2,\"1044\":1,\"1269\":1,\"1270\":1,\"1271\":1,\"1272\":1,\"1502\":2,\"1559\":1,\"1604\":1,\"1613\":1,\"1614\":2,\"1624\":1,\"1629\":2,\"1644\":2,\"1811\":2,\"1819\":2,\"1973\":1,\"1982\":1,\"1983\":2,\"1993\":1,\"1998\":2,\"2013\":2,\"2180\":2,\"2188\":2,\"2342\":1,\"2351\":1,\"2352\":2,\"2362\":1,\"2367\":2,\"2382\":2,\"2549\":2,\"2557\":2}}],[\"itemsview\",{\"1\":{\"277\":1,\"785\":1,\"1297\":1}}],[\"ipv4\",{\"1\":{\"1890\":1,\"2259\":1,\"2628\":1}}],[\"ipvanyaddress\",{\"1\":{\"167\":1,\"675\":1,\"1185\":1}}],[\"ip\",{\"1\":{\"167\":1,\"506\":1,\"675\":1,\"1016\":1,\"1185\":1,\"1531\":1}}],[\"ignore\",{\"1\":{\"478\":1,\"988\":1,\"1503\":1}}],[\"ignoredexception\",{\"1\":{\"132\":3,\"134\":3,\"195\":1,\"640\":3,\"642\":3,\"703\":1,\"1150\":3,\"1152\":3,\"1215\":1}}],[\"ignorecase=false\",{\"1\":{\"95\":2,\"96\":2,\"97\":2,\"603\":2,\"604\":2,\"605\":2,\"1113\":2,\"1114\":2,\"1115\":2}}],[\"ignorecase\",{\"1\":{\"95\":1,\"96\":1,\"97\":1,\"101\":2,\"352\":1,\"353\":1,\"354\":1,\"355\":1,\"356\":1,\"357\":1,\"603\":1,\"604\":1,\"605\":1,\"609\":2,\"860\":1,\"861\":1,\"862\":1,\"863\":1,\"864\":1,\"865\":1,\"1113\":1,\"1114\":1,\"1115\":1,\"1119\":2,\"1375\":1,\"1376\":1,\"1377\":1,\"1378\":1,\"1379\":1,\"1380\":1,\"1861\":1,\"1862\":1,\"1863\":1,\"1878\":1,\"1879\":1,\"1880\":1,\"2230\":1,\"2231\":1,\"2232\":1,\"2247\":1,\"2248\":1,\"2249\":1,\"2599\":1,\"2600\":1,\"2601\":1,\"2616\":1,\"2617\":1,\"2618\":1}}],[\"if\",{\"1\":{\"120\":1,\"121\":1,\"132\":1,\"134\":1,\"136\":1,\"137\":1,\"429\":2,\"437\":1,\"470\":2,\"471\":1,\"475\":1,\"507\":1,\"628\":1,\"629\":1,\"640\":1,\"642\":1,\"644\":1,\"645\":1,\"939\":2,\"947\":1,\"980\":2,\"981\":1,\"985\":1,\"1017\":1,\"1138\":1,\"1139\":1,\"1150\":1,\"1152\":1,\"1154\":1,\"1155\":1,\"1454\":2,\"1462\":1,\"1495\":2,\"1496\":1,\"1500\":1,\"1532\":1,\"2679\":2,\"2680\":4,\"2694\":2,\"2695\":4,\"2709\":2,\"2710\":4}}],[\"inspect\",{\"1\":{\"1648\":1,\"1649\":1,\"2017\":1,\"2018\":1,\"2386\":1,\"2387\":1}}],[\"install\",{\"1\":{\"432\":1,\"443\":1,\"449\":1,\"505\":2,\"942\":1,\"953\":1,\"959\":1,\"1015\":2,\"1457\":1,\"1468\":1,\"1474\":1,\"1530\":2,\"1651\":2,\"1669\":2,\"1697\":2,\"1764\":2,\"1788\":2,\"1886\":3,\"1898\":2,\"1906\":9,\"1921\":2,\"2020\":2,\"2038\":2,\"2066\":2,\"2133\":2,\"2157\":2,\"2255\":3,\"2267\":2,\"2275\":9,\"2290\":2,\"2389\":2,\"2407\":2,\"2435\":2,\"2502\":2,\"2526\":2,\"2624\":3,\"2636\":2,\"2644\":9,\"2659\":2,\"2690\":4,\"2705\":4,\"2720\":4}}],[\"instance\",{\"1\":{\"155\":1,\"663\":1,\"1173\":1}}],[\"index\",{\"1\":{\"541\":2,\"1051\":2,\"1566\":2,\"1608\":1,\"1886\":2,\"1906\":5,\"1977\":1,\"2255\":2,\"2275\":5,\"2346\":1,\"2624\":2,\"2644\":5}}],[\"ini\",{\"1\":{\"478\":1,\"988\":1,\"1503\":1}}],[\"initializing\",{\"1\":{\"2679\":1,\"2694\":1,\"2709\":1}}],[\"init\",{\"1\":{\"110\":2,\"114\":1,\"155\":1,\"217\":1,\"218\":1,\"219\":1,\"220\":1,\"221\":1,\"222\":1,\"223\":1,\"224\":1,\"418\":1,\"463\":1,\"468\":2,\"470\":2,\"471\":2,\"475\":2,\"507\":1,\"512\":3,\"513\":1,\"514\":1,\"618\":2,\"622\":1,\"663\":1,\"725\":1,\"726\":1,\"727\":1,\"728\":1,\"729\":1,\"730\":1,\"731\":1,\"732\":1,\"928\":1,\"973\":1,\"978\":2,\"980\":2,\"981\":2,\"985\":2,\"1017\":1,\"1022\":3,\"1023\":1,\"1024\":1,\"1128\":2,\"1132\":1,\"1173\":1,\"1237\":1,\"1238\":1,\"1239\":1,\"1240\":1,\"1241\":1,\"1242\":1,\"1243\":1,\"1244\":1,\"1443\":1,\"1488\":1,\"1493\":2,\"1495\":2,\"1496\":2,\"1500\":2,\"1532\":1,\"1537\":3,\"1538\":1,\"1539\":1,\"1921\":1,\"2290\":1,\"2659\":1,\"2679\":1,\"2694\":1,\"2709\":1}}],[\"include\",{\"1\":{\"158\":1,\"447\":1,\"541\":2,\"666\":1,\"957\":1,\"1051\":2,\"1176\":1,\"1472\":1,\"1566\":2,\"2690\":1,\"2705\":1,\"2720\":1}}],[\"info=\",{\"1\":{\"2679\":2,\"2694\":2,\"2709\":2}}],[\"info\",{\"1\":{\"152\":1,\"155\":1,\"169\":1,\"227\":1,\"417\":4,\"455\":1,\"466\":2,\"660\":1,\"663\":1,\"677\":1,\"735\":1,\"927\":4,\"965\":1,\"976\":2,\"1170\":1,\"1173\":1,\"1187\":1,\"1247\":1,\"1442\":4,\"1480\":1,\"1491\":2,\"1895\":1,\"2264\":1,\"2633\":1}}],[\"infos\",{\"1\":{\"152\":1,\"660\":1,\"1170\":1}}],[\"int>\",{\"1\":{\"1893\":1,\"1905\":1,\"2262\":1,\"2274\":1,\"2631\":1,\"2643\":1}}],[\"integer\",{\"1\":{\"1887\":1,\"2256\":1,\"2625\":1}}],[\"interval\",{\"1\":{\"452\":1,\"962\":1,\"1477\":1}}],[\"interfaceclass\",{\"1\":{\"373\":1,\"881\":1,\"1396\":1}}],[\"interface\",{\"1\":{\"373\":1,\"881\":1,\"1396\":1}}],[\"int\",{\"1\":{\"82\":1,\"168\":1,\"169\":2,\"238\":1,\"242\":1,\"275\":1,\"277\":1,\"278\":2,\"279\":1,\"280\":1,\"282\":1,\"283\":1,\"285\":1,\"319\":4,\"366\":1,\"367\":1,\"447\":2,\"452\":4,\"455\":1,\"541\":1,\"590\":1,\"676\":1,\"677\":2,\"746\":1,\"750\":1,\"783\":1,\"785\":1,\"786\":2,\"787\":1,\"788\":1,\"790\":1,\"791\":1,\"793\":1,\"827\":4,\"874\":1,\"875\":1,\"957\":2,\"962\":4,\"965\":1,\"1051\":1,\"1100\":1,\"1186\":1,\"1187\":2,\"1259\":1,\"1263\":1,\"1295\":1,\"1297\":1,\"1298\":2,\"1299\":1,\"1300\":1,\"1302\":1,\"1303\":1,\"1305\":1,\"1340\":4,\"1389\":1,\"1390\":1,\"1472\":2,\"1477\":4,\"1480\":1,\"1566\":1,\"1605\":2,\"1608\":1,\"1609\":1,\"1610\":1,\"1637\":1,\"1662\":1,\"1688\":1,\"1691\":1,\"1729\":1,\"1738\":1,\"1779\":1,\"1782\":1,\"1794\":1,\"1853\":1,\"1854\":1,\"1855\":1,\"1856\":1,\"1857\":1,\"1858\":1,\"1859\":1,\"1860\":1,\"1861\":1,\"1862\":1,\"1863\":1,\"1864\":1,\"1865\":1,\"1866\":1,\"1867\":2,\"1868\":1,\"1869\":1,\"1870\":1,\"1871\":1,\"1872\":1,\"1873\":1,\"1874\":1,\"1875\":1,\"1876\":1,\"1877\":1,\"1878\":1,\"1879\":1,\"1880\":1,\"1881\":1,\"1882\":1,\"1883\":1,\"1884\":2,\"1885\":1,\"1887\":10,\"1890\":3,\"1893\":1,\"1901\":1,\"1903\":2,\"1905\":1,\"1907\":1,\"1974\":2,\"1977\":1,\"1978\":1,\"1979\":1,\"2006\":1,\"2031\":1,\"2057\":1,\"2060\":1,\"2098\":1,\"2107\":1,\"2148\":1,\"2151\":1,\"2163\":1,\"2222\":1,\"2223\":1,\"2224\":1,\"2225\":1,\"2226\":1,\"2227\":1,\"2228\":1,\"2229\":1,\"2230\":1,\"2231\":1,\"2232\":1,\"2233\":1,\"2234\":1,\"2235\":1,\"2236\":2,\"2237\":1,\"2238\":1,\"2239\":1,\"2240\":1,\"2241\":1,\"2242\":1,\"2243\":1,\"2244\":1,\"2245\":1,\"2246\":1,\"2247\":1,\"2248\":1,\"2249\":1,\"2250\":1,\"2251\":1,\"2252\":1,\"2253\":2,\"2254\":1,\"2256\":10,\"2259\":3,\"2262\":1,\"2270\":1,\"2272\":2,\"2274\":1,\"2276\":1,\"2343\":2,\"2346\":1,\"2347\":1,\"2348\":1,\"2375\":1,\"2400\":1,\"2426\":1,\"2429\":1,\"2479\":1,\"2485\":1,\"2517\":1,\"2520\":1,\"2532\":1,\"2591\":1,\"2592\":1,\"2593\":1,\"2594\":1,\"2595\":1,\"2596\":1,\"2597\":1,\"2598\":1,\"2599\":1,\"2600\":1,\"2601\":1,\"2602\":1,\"2603\":1,\"2604\":1,\"2605\":2,\"2606\":1,\"2607\":1,\"2608\":1,\"2609\":1,\"2610\":1,\"2611\":1,\"2612\":1,\"2613\":1,\"2614\":1,\"2615\":1,\"2616\":1,\"2617\":1,\"2618\":1,\"2619\":1,\"2620\":1,\"2621\":1,\"2622\":2,\"2623\":1,\"2625\":10,\"2628\":3,\"2631\":1,\"2639\":1,\"2641\":2,\"2643\":1,\"2645\":1,\"2684\":1,\"2685\":1,\"2687\":2,\"2688\":1,\"2699\":1,\"2700\":1,\"2702\":2,\"2703\":1,\"2714\":1,\"2715\":1,\"2717\":2,\"2718\":1}}],[\"in\",{\"1\":{\"79\":1,\"161\":1,\"425\":1,\"437\":1,\"447\":2,\"532\":1,\"538\":1,\"540\":3,\"587\":1,\"669\":1,\"935\":1,\"947\":1,\"957\":2,\"1042\":1,\"1048\":1,\"1050\":3,\"1097\":1,\"1179\":1,\"1450\":1,\"1462\":1,\"1472\":2,\"1557\":1,\"1563\":1,\"1565\":3,\"1934\":1,\"1935\":1,\"2303\":1,\"2304\":1,\"2672\":1,\"2673\":1,\"2681\":2,\"2689\":14,\"2696\":2,\"2704\":14,\"2711\":2,\"2719\":14}}],[\"issue\",{\"1\":{\"457\":1,\"495\":1,\"502\":1,\"967\":1,\"1005\":1,\"1012\":1,\"1482\":1,\"1520\":1,\"1527\":1}}],[\"issues\",{\"1\":{\"457\":1,\"495\":2,\"967\":1,\"1005\":2,\"1482\":1,\"1520\":2}}],[\"iso\",{\"1\":{\"175\":1,\"683\":1,\"1193\":1}}],[\"isinstance\",{\"1\":{\"83\":1,\"118\":1,\"120\":1,\"121\":1,\"470\":1,\"471\":1,\"591\":1,\"626\":1,\"628\":1,\"629\":1,\"980\":1,\"981\":1,\"1101\":1,\"1136\":1,\"1138\":1,\"1139\":1,\"1495\":1,\"1496\":1}}],[\"is\",{\"1\":{\"50\":2,\"58\":1,\"70\":1,\"78\":1,\"79\":1,\"103\":3,\"132\":1,\"134\":1,\"147\":1,\"417\":7,\"424\":3,\"425\":4,\"426\":3,\"470\":1,\"476\":1,\"477\":1,\"526\":1,\"537\":2,\"558\":2,\"566\":1,\"578\":1,\"586\":1,\"587\":1,\"611\":3,\"640\":1,\"642\":1,\"655\":1,\"927\":7,\"934\":3,\"935\":4,\"936\":3,\"980\":1,\"986\":1,\"987\":1,\"1036\":1,\"1047\":2,\"1068\":2,\"1076\":1,\"1088\":1,\"1096\":1,\"1097\":1,\"1121\":3,\"1150\":1,\"1152\":1,\"1165\":1,\"1442\":7,\"1449\":3,\"1450\":4,\"1451\":3,\"1495\":1,\"1501\":1,\"1502\":1,\"1551\":1,\"1562\":2,\"1904\":1,\"2273\":1,\"2642\":1,\"2679\":1,\"2694\":1,\"2709\":1}}],[\"id>\",{\"1\":{\"1924\":1,\"1925\":2,\"1926\":2,\"2293\":1,\"2294\":2,\"2295\":2,\"2662\":1,\"2663\":2,\"2664\":2}}],[\"id=bot\",{\"1\":{\"472\":1,\"982\":1,\"1497\":1}}],[\"id=\",{\"1\":{\"452\":2,\"962\":2,\"1477\":2}}],[\"id=123123\",{\"1\":{\"422\":1,\"932\":1,\"1447\":1}}],[\"id\",{\"0\":{\"46\":1,\"47\":1,\"554\":1,\"555\":1,\"1064\":1,\"1065\":1},\"1\":{\"40\":9,\"46\":4,\"47\":5,\"136\":1,\"137\":1,\"140\":6,\"177\":1,\"222\":6,\"223\":1,\"250\":2,\"257\":2,\"259\":4,\"260\":1,\"326\":1,\"329\":1,\"330\":1,\"331\":2,\"332\":1,\"418\":2,\"421\":3,\"425\":1,\"439\":1,\"440\":1,\"441\":1,\"467\":1,\"472\":3,\"474\":1,\"475\":2,\"476\":14,\"543\":2,\"548\":9,\"554\":4,\"555\":5,\"644\":1,\"645\":1,\"648\":6,\"685\":1,\"730\":6,\"731\":1,\"758\":2,\"765\":2,\"767\":4,\"768\":1,\"834\":1,\"837\":1,\"838\":1,\"839\":2,\"840\":1,\"928\":2,\"931\":3,\"935\":1,\"949\":1,\"950\":1,\"951\":1,\"977\":1,\"982\":3,\"984\":1,\"985\":2,\"986\":14,\"1053\":2,\"1058\":9,\"1064\":4,\"1065\":5,\"1154\":1,\"1155\":1,\"1158\":6,\"1195\":1,\"1242\":6,\"1243\":1,\"1271\":2,\"1278\":2,\"1280\":4,\"1281\":1,\"1347\":1,\"1349\":1,\"1352\":1,\"1356\":1,\"1357\":2,\"1358\":1,\"1443\":2,\"1446\":3,\"1450\":1,\"1464\":1,\"1465\":1,\"1466\":1,\"1492\":1,\"1497\":3,\"1499\":1,\"1500\":2,\"1501\":14,\"1568\":2,\"1570\":2,\"1572\":1,\"1584\":2,\"1585\":3,\"1803\":2,\"1934\":1,\"1935\":1,\"1939\":2,\"1941\":1,\"1953\":2,\"1954\":3,\"2172\":2,\"2303\":1,\"2304\":1,\"2320\":2,\"2322\":1,\"2334\":2,\"2335\":3,\"2541\":2,\"2672\":1,\"2673\":1,\"2679\":1,\"2684\":3,\"2685\":3,\"2687\":5,\"2688\":3,\"2694\":1,\"2699\":3,\"2700\":3,\"2702\":5,\"2703\":3,\"2709\":1,\"2714\":3,\"2715\":3,\"2717\":5,\"2718\":3}}],[\"然后检查机器人发送的信息是否正确\",{\"1\":{\"1935\":1,\"2304\":1,\"2673\":1}}],[\"然后前往商店页面\",{\"1\":{\"479\":1,\"989\":1,\"1504\":1}}],[\"然后根据平台具体的消息类型\",{\"1\":{\"477\":1,\"987\":1,\"1502\":1}}],[\"然后根据平台消息的类型\",{\"1\":{\"476\":1,\"986\":1,\"1501\":1}}],[\"然后在项目设置中找到\",{\"1\":{\"445\":1,\"955\":1,\"1470\":1}}],[\"然后在其基础上配合使用其他驱动器的功能\",{\"1\":{\"54\":1,\"562\":1,\"1072\":1}}],[\"然后使用\",{\"1\":{\"417\":1,\"927\":1,\"1442\":1,\"2680\":1,\"2695\":1,\"2710\":1}}],[\"然后将它们的返回值作为参数值传递给父依赖\",{\"1\":{\"302\":1,\"810\":1,\"1322\":1}}],[\"然后通过驱动器的\",{\"1\":{\"38\":1,\"546\":1,\"1056\":1}}],[\"然后交由驱动器发送\",{\"1\":{\"37\":1,\"545\":1,\"1055\":1}}],[\"然后交由机器人插件处理\",{\"1\":{\"37\":1,\"545\":1,\"1055\":1}}],[\"=>get\",{\"1\":{\"216\":3,\"724\":3,\"1236\":3}}],[\"=>load\",{\"1\":{\"216\":2,\"724\":2,\"1236\":2,\"1802\":2,\"2171\":2,\"2540\":2}}],[\"=>\",{\"1\":{\"216\":23,\"724\":23,\"1236\":23,\"1802\":22,\"2171\":22,\"2540\":22}}],[\"==\",{\"1\":{\"136\":1,\"137\":1,\"222\":1,\"477\":1,\"507\":1,\"536\":2,\"537\":2,\"539\":2,\"541\":8,\"542\":1,\"644\":1,\"645\":1,\"730\":1,\"987\":1,\"1017\":1,\"1046\":2,\"1047\":2,\"1049\":2,\"1051\":8,\"1052\":1,\"1154\":1,\"1155\":1,\"1242\":1,\"1502\":1,\"1532\":1,\"1561\":2,\"1562\":2,\"1564\":2,\"1566\":8,\"1567\":1,\"1887\":1,\"1934\":2,\"1935\":1,\"2256\":1,\"2303\":2,\"2304\":1,\"2625\":1,\"2672\":2,\"2673\":1,\"2681\":2,\"2687\":1,\"2688\":1,\"2696\":2,\"2702\":1,\"2703\":1,\"2711\":2,\"2717\":1,\"2718\":1}}],[\"=\",{\"1\":{\"38\":1,\"39\":3,\"40\":4,\"42\":1,\"43\":1,\"44\":1,\"45\":1,\"46\":1,\"47\":1,\"48\":1,\"49\":1,\"50\":1,\"55\":1,\"64\":1,\"72\":1,\"95\":2,\"96\":2,\"97\":2,\"98\":2,\"99\":5,\"100\":4,\"101\":2,\"102\":1,\"103\":1,\"105\":7,\"106\":3,\"110\":1,\"111\":4,\"114\":1,\"118\":1,\"120\":1,\"121\":2,\"123\":2,\"124\":1,\"127\":1,\"128\":1,\"129\":1,\"130\":1,\"139\":1,\"140\":2,\"200\":1,\"203\":1,\"217\":1,\"218\":1,\"219\":1,\"220\":1,\"221\":1,\"222\":1,\"223\":1,\"297\":2,\"365\":2,\"421\":1,\"424\":2,\"425\":2,\"426\":7,\"427\":2,\"429\":6,\"433\":8,\"447\":20,\"455\":3,\"466\":1,\"468\":1,\"470\":4,\"471\":3,\"472\":2,\"473\":1,\"474\":3,\"475\":2,\"478\":1,\"490\":1,\"491\":1,\"507\":1,\"513\":1,\"519\":2,\"526\":1,\"527\":1,\"532\":1,\"539\":2,\"541\":1,\"542\":3,\"546\":1,\"547\":3,\"548\":4,\"550\":1,\"551\":1,\"552\":1,\"553\":1,\"554\":1,\"555\":1,\"556\":1,\"557\":1,\"558\":1,\"563\":1,\"572\":1,\"580\":1,\"603\":2,\"604\":2,\"605\":2,\"606\":2,\"607\":5,\"608\":4,\"609\":2,\"610\":1,\"611\":1,\"613\":7,\"614\":3,\"618\":1,\"619\":4,\"622\":1,\"626\":1,\"628\":1,\"629\":2,\"631\":2,\"632\":1,\"635\":1,\"636\":1,\"637\":1,\"638\":1,\"647\":1,\"648\":2,\"708\":1,\"711\":1,\"725\":1,\"726\":1,\"727\":1,\"728\":1,\"729\":1,\"730\":1,\"731\":1,\"805\":2,\"873\":2,\"931\":1,\"934\":2,\"935\":2,\"936\":7,\"937\":2,\"939\":6,\"943\":8,\"957\":20,\"965\":3,\"976\":1,\"978\":1,\"980\":4,\"981\":3,\"982\":2,\"983\":1,\"984\":3,\"985\":2,\"988\":1,\"1000\":1,\"1001\":1,\"1017\":1,\"1023\":1,\"1029\":2,\"1036\":1,\"1037\":1,\"1042\":1,\"1049\":2,\"1051\":1,\"1052\":3,\"1056\":1,\"1057\":3,\"1058\":4,\"1060\":1,\"1061\":1,\"1062\":1,\"1063\":1,\"1064\":1,\"1065\":1,\"1066\":1,\"1067\":1,\"1068\":1,\"1073\":1,\"1082\":1,\"1090\":1,\"1113\":2,\"1114\":2,\"1115\":2,\"1116\":2,\"1117\":5,\"1118\":4,\"1119\":2,\"1120\":1,\"1121\":1,\"1123\":7,\"1124\":3,\"1128\":1,\"1129\":4,\"1132\":1,\"1136\":1,\"1138\":1,\"1139\":2,\"1141\":2,\"1142\":1,\"1145\":1,\"1146\":1,\"1147\":1,\"1148\":1,\"1157\":1,\"1158\":2,\"1220\":1,\"1223\":1,\"1237\":1,\"1238\":1,\"1239\":1,\"1240\":1,\"1241\":1,\"1242\":1,\"1243\":1,\"1323\":2,\"1388\":2,\"1446\":1,\"1449\":2,\"1450\":2,\"1451\":7,\"1452\":2,\"1454\":6,\"1458\":8,\"1472\":20,\"1480\":3,\"1491\":1,\"1493\":1,\"1495\":4,\"1496\":3,\"1497\":2,\"1498\":1,\"1499\":3,\"1500\":2,\"1503\":1,\"1515\":1,\"1516\":1,\"1532\":1,\"1538\":1,\"1544\":2,\"1551\":1,\"1552\":1,\"1557\":1,\"1564\":2,\"1566\":1,\"1567\":3,\"1813\":2,\"1886\":2,\"1887\":1,\"1889\":2,\"1890\":1,\"1893\":2,\"1896\":1,\"1898\":7,\"1899\":4,\"1901\":1,\"1902\":2,\"1903\":3,\"1904\":1,\"1905\":1,\"1906\":5,\"1907\":1,\"1934\":4,\"1935\":3,\"2182\":2,\"2255\":2,\"2256\":1,\"2258\":2,\"2259\":1,\"2262\":2,\"2265\":1,\"2267\":7,\"2268\":4,\"2270\":1,\"2271\":2,\"2272\":3,\"2273\":1,\"2274\":1,\"2275\":5,\"2276\":1,\"2303\":4,\"2304\":3,\"2551\":2,\"2624\":2,\"2625\":1,\"2627\":2,\"2628\":1,\"2631\":2,\"2634\":1,\"2636\":7,\"2637\":4,\"2639\":1,\"2640\":2,\"2641\":3,\"2642\":1,\"2643\":1,\"2644\":5,\"2645\":1,\"2672\":4,\"2673\":3,\"2678\":2,\"2679\":6,\"2680\":19,\"2681\":5,\"2684\":5,\"2685\":5,\"2687\":2,\"2688\":1,\"2689\":12,\"2693\":2,\"2694\":6,\"2695\":19,\"2696\":5,\"2699\":5,\"2700\":5,\"2702\":2,\"2703\":1,\"2704\":12,\"2708\":2,\"2709\":6,\"2710\":19,\"2711\":5,\"2714\":5,\"2715\":5,\"2717\":2,\"2718\":1,\"2719\":12}}],[\"我们没必要在所有平台和\",{\"1\":{\"2690\":1,\"2705\":1,\"2720\":1}}],[\"我们都是通过会话获得数据的\",{\"1\":{\"2681\":1,\"2696\":1,\"2711\":1}}],[\"我们一般不会手写它们\",{\"1\":{\"2679\":1,\"2694\":1,\"2709\":1}}],[\"我们应该检查它们\",{\"1\":{\"2679\":1,\"2694\":1,\"2709\":1}}],[\"我们成功定义了模型\",{\"1\":{\"2679\":1,\"2694\":1,\"2709\":1}}],[\"我们同样需要通过\",{\"1\":{\"1935\":1,\"2304\":1,\"2673\":1}}],[\"我们向\",{\"1\":{\"1934\":1,\"1935\":1,\"2303\":1,\"2304\":1,\"2672\":1,\"2673\":1}}],[\"我们想要让\",{\"1\":{\"1930\":1,\"2299\":1,\"2668\":1}}],[\"我们想要创建一个机器人\",{\"1\":{\"1921\":1,\"2290\":1,\"2659\":1}}],[\"我们通过\",{\"1\":{\"2680\":1,\"2695\":1,\"2710\":1}}],[\"我们通过一个例子来讲解\",{\"1\":{\"1886\":1,\"2255\":1,\"2624\":1}}],[\"我们通常需要对\",{\"1\":{\"1934\":1,\"2303\":1,\"2672\":1}}],[\"我们通常直接使用\",{\"1\":{\"116\":1,\"624\":1,\"1134\":1}}],[\"我们提供了一个消息模板功能来构建消息序列\",{\"1\":{\"543\":1,\"1053\":1,\"1568\":1}}],[\"我们还可以注意到\",{\"1\":{\"2679\":1,\"2694\":1,\"2709\":1}}],[\"我们还可以定义一系列的路由来处理\",{\"1\":{\"1935\":1,\"2304\":1,\"2673\":1}}],[\"我们还可以完成对适配器的测试\",{\"1\":{\"1933\":1,\"2302\":1,\"2671\":1}}],[\"我们还可以使用消息序列的\",{\"1\":{\"540\":1,\"1050\":1,\"1565\":1}}],[\"我们还可以对\",{\"1\":{\"426\":1,\"936\":1,\"1451\":1}}],[\"我们导入的为\",{\"1\":{\"531\":1,\"1041\":1,\"1556\":1}}],[\"我们使用了消息序列的\",{\"1\":{\"530\":1,\"1040\":1,\"1555\":1}}],[\"我们使用了内置插件\",{\"1\":{\"524\":1,\"1034\":1,\"1549\":1}}],[\"我们直接使用\",{\"1\":{\"526\":1,\"1036\":1,\"1551\":1}}],[\"我们只需要使用辅助函数即可完成事件响应器的创建\",{\"1\":{\"525\":1,\"1035\":1,\"1550\":1}}],[\"我们只需要传入\",{\"1\":{\"427\":1,\"937\":1,\"1452\":1}}],[\"我们暂时不需要了解其中内容的含义\",{\"1\":{\"507\":1,\"1017\":1,\"1532\":1}}],[\"我们首先需要获取测试用模拟客户端\",{\"1\":{\"1934\":1,\"2303\":1,\"2672\":1}}],[\"我们首先需要将项目所需依赖安装至环境中\",{\"1\":{\"505\":1,\"1015\":1,\"1530\":1}}],[\"我们首先需要从适配器模块中导入所需要的适配器类\",{\"1\":{\"38\":1,\"546\":1,\"1056\":1}}],[\"我们十分不推荐直接创建机器人项目\",{\"1\":{\"504\":1,\"1014\":1,\"1529\":1}}],[\"我们计划引入\",{\"1\":{\"503\":1,\"1013\":1,\"1528\":1}}],[\"我们发现部分新手因不熟悉编程概念或框架本身而遇到问题\",{\"1\":{\"503\":1,\"1013\":1,\"1528\":1}}],[\"我们发现许多用户发布的插件中存在文件存储结构化数据\",{\"1\":{\"499\":1,\"1009\":1,\"1524\":1}}],[\"我们希望提供一个统一的数据存储与管理方式\",{\"1\":{\"499\":1,\"1009\":1,\"1524\":1}}],[\"我们希望提供一款基于命令行的适配器\",{\"1\":{\"494\":1,\"1004\":1,\"1519\":1}}],[\"我们希望借此机会接入\",{\"1\":{\"498\":1,\"1008\":1,\"1523\":1}}],[\"我们希望借此项目在聊天机器人社区中推广\",{\"1\":{\"490\":1,\"1000\":1,\"1515\":1}}],[\"我们希望借助现有命令行脚手架的可扩展特性\",{\"1\":{\"497\":1,\"1007\":1,\"1522\":1}}],[\"我们希望使用\",{\"1\":{\"490\":1,\"491\":1,\"1000\":1,\"1001\":1,\"1515\":1,\"1516\":1}}],[\"我们希望在\",{\"1\":{\"489\":1,\"999\":1,\"1514\":1}}],[\"我们希望能够开发一款基于\",{\"1\":{\"485\":1,\"995\":1,\"1510\":1}}],[\"我们希望将\",{\"1\":{\"483\":1,\"993\":1,\"1508\":1}}],[\"我们希望将其中与旧的机器人平台相关的内容改为基于\",{\"1\":{\"482\":1,\"992\":1,\"1507\":1}}],[\"我们可能会频繁地修改模型\",{\"1\":{\"2679\":1,\"2694\":1,\"2709\":1}}],[\"我们可能需要手动调整迁移脚本\",{\"1\":{\"2679\":1,\"2694\":1,\"2709\":1}}],[\"我们可能需要记录一些信息\",{\"1\":{\"429\":1,\"939\":1,\"1454\":1}}],[\"我们可以关闭\",{\"1\":{\"2679\":1,\"2694\":1,\"2709\":1}}],[\"我们可以正常启动机器人了\",{\"1\":{\"2679\":1,\"2694\":1,\"2709\":1}}],[\"我们可以查看一下它的内容\",{\"1\":{\"2679\":1,\"2694\":1,\"2709\":1}}],[\"我们可以用以下代码检查模型生成的数据库模式是否正确\",{\"1\":{\"2678\":1,\"2693\":1,\"2708\":1}}],[\"我们可以设计出如下的模型\",{\"1\":{\"2678\":1,\"2693\":1,\"2708\":1}}],[\"我们可以定义一系列的路由来处理\",{\"1\":{\"1934\":1,\"2303\":1,\"2672\":1}}],[\"我们可以添加一些参数来对事件响应器进行更加精细的调整\",{\"1\":{\"527\":1,\"1037\":1,\"1552\":1}}],[\"我们可以将\",{\"1\":{\"426\":1,\"936\":1,\"1451\":1}}],[\"我们可以将规则进行细分\",{\"1\":{\"426\":1,\"936\":1,\"1451\":1}}],[\"我们可以将一个大型插件拆分成多个功能子插件\",{\"1\":{\"112\":1,\"620\":1,\"1130\":1}}],[\"我们可以组合两个\",{\"1\":{\"425\":1,\"935\":1,\"1450\":1}}],[\"我们可以根据上一节中添加的配置项\",{\"1\":{\"424\":1,\"934\":1,\"1449\":1}}],[\"我们可以小小的修改一下事件处理函数的事件参数类型注解\",{\"1\":{\"421\":1,\"931\":1,\"1446\":1}}],[\"我们可以从\",{\"1\":{\"417\":1,\"418\":1,\"927\":1,\"928\":1,\"1442\":1,\"1443\":1}}],[\"我们可以实现多用户同时参与的会话\",{\"1\":{\"140\":1,\"648\":1,\"1158\":1}}],[\"我们可以如下修改\",{\"1\":{\"140\":1,\"648\":1,\"1158\":1}}],[\"我们可以在这个钩子函数中进行一些清理工作\",{\"1\":{\"128\":1,\"636\":1,\"1146\":1}}],[\"我们可以在插件\",{\"1\":{\"117\":2,\"625\":2,\"1135\":2}}],[\"我们可以在当前插件中声明依赖的插件\",{\"1\":{\"117\":1,\"625\":1,\"1135\":1}}],[\"我们可以在使用\",{\"1\":{\"113\":1,\"621\":1,\"1131\":1}}],[\"我们可以更好地维护和扩展插件\",{\"1\":{\"115\":1,\"623\":1,\"1133\":1}}],[\"我们可以直接在插件中使用\",{\"1\":{\"112\":1,\"620\":1,\"1130\":1}}],[\"我们可以看到\",{\"1\":{\"110\":1,\"618\":1,\"1128\":1}}],[\"我们可以为插件添加插件元数据\",{\"1\":{\"110\":1,\"618\":1,\"1128\":1}}],[\"我们可以创建一个匹配\",{\"1\":{\"100\":1,\"103\":1,\"608\":1,\"611\":1,\"1118\":1,\"1121\":1}}],[\"我们可以创建一个匹配消息中包含字母并且忽略大小写的规则\",{\"1\":{\"101\":1,\"609\":1,\"1119\":1}}],[\"我们可以创建一个匹配消息中包含\",{\"1\":{\"98\":1,\"606\":1,\"1116\":1}}],[\"我们可以创建一个匹配消息为\",{\"1\":{\"97\":1,\"605\":1,\"1115\":1}}],[\"我们可以创建一个匹配消息结尾为\",{\"1\":{\"96\":1,\"604\":1,\"1114\":1}}],[\"我们可以创建一个匹配消息开头为\",{\"1\":{\"95\":1,\"603\":1,\"1113\":1}}],[\"我们可以通过检查请求返回是否正确\",{\"1\":{\"1934\":1,\"2303\":1,\"2672\":1}}],[\"我们可以通过引起\",{\"1\":{\"136\":1,\"137\":1,\"644\":1,\"645\":1,\"1154\":1,\"1155\":1}}],[\"我们可以通过以下方式判断\",{\"1\":{\"118\":1,\"626\":1,\"1136\":1}}],[\"我们可以通过两种途径向\",{\"1\":{\"118\":1,\"626\":1,\"1136\":1}}],[\"我们可以通过\",{\"1\":{\"83\":1,\"123\":1,\"540\":1,\"591\":1,\"631\":1,\"1050\":1,\"1101\":1,\"1141\":1,\"1565\":1,\"1935\":1,\"2304\":1,\"2673\":1}}],[\"我们可以通过适配器的\",{\"1\":{\"40\":1,\"548\":1,\"1058\":1}}],[\"我们可以通过适配器的名称或类型来获取指定的适配器实例\",{\"1\":{\"39\":1,\"547\":1,\"1057\":1}}],[\"我们可以方便地进行逐优先级事件传播\",{\"1\":{\"82\":1,\"590\":1,\"1100\":1}}],[\"我们可以使用脚手架快速创建项目\",{\"1\":{\"464\":1,\"974\":1,\"1489\":1}}],[\"我们可以使用\",{\"1\":{\"54\":1,\"418\":1,\"562\":1,\"928\":1,\"1072\":1,\"1443\":1}}],[\"我们定义了一个函数\",{\"1\":{\"424\":1,\"934\":1,\"1449\":1}}],[\"我们为\",{\"1\":{\"423\":1,\"933\":1,\"1448\":1}}],[\"我们在编写机器人时\",{\"1\":{\"422\":1,\"932\":1,\"1447\":1}}],[\"我们将使用\",{\"1\":{\"532\":1,\"1042\":1,\"1557\":1}}],[\"我们将重点介绍机器人功能实现\",{\"1\":{\"523\":1,\"1033\":1,\"1548\":1}}],[\"我们将简要介绍如何在不使用\",{\"1\":{\"504\":1,\"1014\":1,\"1529\":1}}],[\"我们将在最佳实践中介绍\",{\"1\":{\"422\":1,\"932\":1,\"1447\":1}}],[\"我们将在重载一节中介绍\",{\"1\":{\"421\":1,\"931\":1,\"1446\":1}}],[\"我们将介绍如何获取事件更多的信息以及根据事件类型进行不同的处理\",{\"1\":{\"420\":1,\"930\":1,\"1445\":1}}],[\"我们将介绍事件响应器的组成\",{\"1\":{\"84\":1,\"592\":1,\"1102\":1}}],[\"我们获取了\",{\"1\":{\"421\":1,\"931\":1,\"1446\":1}}],[\"我们实际可以获得的信息通常多于基类抽象方法所提供的\",{\"1\":{\"421\":1,\"931\":1,\"1446\":1}}],[\"我们仅需一行代码即可记录对应级别的日志\",{\"1\":{\"417\":1,\"927\":1,\"1442\":1}}],[\"我们已经成功定义了模型\",{\"1\":{\"2680\":1,\"2695\":1,\"2710\":1}}],[\"我们已经安装了\",{\"1\":{\"1922\":1,\"2291\":1,\"2660\":1}}],[\"我们已经通过依赖注入\",{\"1\":{\"530\":1,\"1040\":1,\"1555\":1}}],[\"我们已经介绍了如何安装和使用\",{\"1\":{\"504\":1,\"1014\":1,\"1529\":1}}],[\"我们已经介绍了事件响应器的基本用法以及响应规则\",{\"1\":{\"84\":1,\"592\":1,\"1102\":1}}],[\"我们已经了解了\",{\"1\":{\"430\":1,\"940\":1,\"1455\":1}}],[\"我们已经了解了如何获取事件信息以及使用平台接口\",{\"1\":{\"420\":1,\"930\":1,\"1445\":1}}],[\"我们已经了解了如何控制会话的更新\",{\"1\":{\"140\":1,\"648\":1,\"1158\":1}}],[\"我们就需要先构造一个消息序列\",{\"1\":{\"533\":1,\"1043\":1,\"1558\":1}}],[\"我们就需要使用更复杂的逻辑来更新响应事件类型\",{\"1\":{\"139\":1,\"647\":1,\"1157\":1}}],[\"我们就获得了一个可以响应\",{\"1\":{\"527\":1,\"1037\":1,\"1552\":1}}],[\"我们就获得一个名为\",{\"1\":{\"526\":1,\"1036\":1,\"1551\":1}}],[\"我们就使用了\",{\"1\":{\"421\":1,\"931\":1,\"1446\":1}}],[\"我们就可以执行迁移脚本\",{\"1\":{\"2679\":1,\"2694\":1,\"2709\":1}}],[\"我们就可以直接使用\",{\"1\":{\"124\":1,\"632\":1,\"1142\":1}}],[\"我们就可以收集所需要的插件信息了\",{\"1\":{\"111\":1,\"619\":1,\"1129\":1}}],[\"我们就可以通过修改事件参数类型注解来实现对不同事件的处理\",{\"1\":{\"422\":1,\"932\":1,\"1447\":1}}],[\"我们就可以通过\",{\"1\":{\"55\":1,\"563\":1,\"1073\":1}}],[\"我们并不希望在模块被导入时就执行一些耗时操作\",{\"1\":{\"127\":1,\"635\":1,\"1145\":1}}],[\"我们添加了一个\",{\"1\":{\"124\":1,\"632\":1,\"1142\":1}}],[\"我们添加一个\",{\"1\":{\"120\":1,\"121\":1,\"628\":1,\"629\":1,\"1138\":1,\"1139\":1}}],[\"我们了解了驱动器的两种类型\",{\"1\":{\"118\":1,\"626\":1,\"1136\":1}}],[\"我们必须在\",{\"1\":{\"116\":1,\"624\":1,\"1134\":1}}],[\"我们不需要对跨插件访问进行特殊处理\",{\"1\":{\"116\":1,\"624\":1,\"1134\":1}}],[\"我们不能在使用\",{\"1\":{\"116\":1,\"624\":1,\"1134\":1}}],[\"我们创建了一个\",{\"1\":{\"526\":1,\"1036\":1,\"1551\":1}}],[\"我们创建一个具有相同响应规则的响应器组\",{\"1\":{\"106\":1,\"614\":1,\"1124\":1}}],[\"我们创建\",{\"1\":{\"105\":1,\"613\":1,\"1123\":1}}],[\"我们需要在不同数据库后端上测试\",{\"1\":{\"2690\":1,\"2705\":1,\"2720\":1}}],[\"我们需要在插件顶层模块\",{\"1\":{\"110\":1,\"618\":1,\"1128\":1}}],[\"我们需要提交事务\",{\"1\":{\"2680\":1,\"2695\":1,\"2710\":1}}],[\"我们需要使用会话操作数据\",{\"1\":{\"2680\":1,\"2695\":1,\"2710\":1}}],[\"我们需要创建一个迁移脚本\",{\"1\":{\"2679\":1,\"2694\":1,\"2709\":1}}],[\"我们需要迁移数据库\",{\"1\":{\"2679\":1,\"2694\":1,\"2709\":1}}],[\"我们需要设计存储的数据的结构\",{\"1\":{\"2678\":1,\"2693\":1,\"2708\":1}}],[\"我们需要实现\",{\"1\":{\"474\":1,\"984\":1,\"1499\":1}}],[\"我们需要调用\",{\"1\":{\"472\":1,\"982\":1,\"1497\":1}}],[\"我们需要将适配器发布到\",{\"1\":{\"479\":1,\"989\":1,\"1504\":1}}],[\"我们需要将其转为适配器的\",{\"1\":{\"473\":1,\"983\":1,\"1498\":1}}],[\"我们需要将\",{\"1\":{\"472\":1,\"982\":1,\"1497\":1}}],[\"我们需要根据平台文档和特性选择合适的通信方式\",{\"1\":{\"469\":1,\"979\":1,\"1494\":1}}],[\"我们需要继承基类\",{\"1\":{\"468\":1,\"475\":1,\"476\":1,\"978\":1,\"985\":1,\"986\":1,\"1493\":1,\"1500\":1,\"1501\":1}}],[\"我们需要继承\",{\"1\":{\"462\":1,\"477\":1,\"972\":1,\"987\":1,\"1487\":1,\"1502\":1}}],[\"我们需要先了解一下插件的概念\",{\"1\":{\"509\":1,\"1019\":1,\"1534\":1}}],[\"我们需要先了解适配器的功能与组成\",{\"1\":{\"462\":1,\"972\":1,\"1487\":1}}],[\"我们需要先将适配器注册到驱动器中\",{\"1\":{\"38\":1,\"546\":1,\"1056\":1}}],[\"我们需要合并多个规则\",{\"1\":{\"426\":1,\"936\":1,\"1451\":1}}],[\"我们需要确保使用的平台接口与所要发送的平台类型一致\",{\"1\":{\"420\":1,\"930\":1,\"1445\":1}}],[\"我们需要移除\",{\"1\":{\"418\":1,\"928\":1,\"1443\":1}}],[\"我们需要自定义触发权限更新函数\",{\"1\":{\"140\":1,\"648\":1,\"1158\":1}}],[\"我们需要自定义响应事件类型更新函数\",{\"1\":{\"139\":1,\"647\":1,\"1157\":1}}],[\"我们需要注意驱动器是否为服务端类型\",{\"1\":{\"118\":1,\"626\":1,\"1136\":1}}],[\"我们需要注意驱动器的类型\",{\"1\":{\"118\":1,\"626\":1,\"1136\":1}}],[\"我们需要选择一个主要驱动器\",{\"1\":{\"54\":1,\"562\":1,\"1072\":1}}],[\"我们也希望随着新平台加入\",{\"1\":{\"486\":1,\"487\":1,\"996\":1,\"997\":1,\"1511\":1,\"1512\":1}}],[\"我们也无需担心合并了一个\",{\"1\":{\"426\":1,\"936\":1,\"1451\":1}}],[\"我们也可以像\",{\"1\":{\"2681\":1,\"2696\":1,\"2711\":1}}],[\"我们也可以主动使用响应规则来判断事件是否符合条件\",{\"1\":{\"427\":1,\"937\":1,\"1452\":1}}],[\"我们也可以选择不提供\",{\"1\":{\"100\":1,\"608\":1,\"1118\":1}}],[\"我们也可以通过依赖注入获得数据\",{\"1\":{\"2681\":1,\"2696\":1,\"2711\":1}}],[\"我们也可以通过参数指定\",{\"1\":{\"1934\":1,\"2303\":1,\"2672\":1}}],[\"我们也可以通过消息段或消息序列的\",{\"1\":{\"542\":1,\"1052\":1,\"1567\":1}}],[\"我们也可以通过消息序列的\",{\"1\":{\"541\":1,\"1051\":1,\"1566\":1}}],[\"我们也可以通过修改\",{\"1\":{\"422\":1,\"932\":1,\"1447\":1}}],[\"我们也可以通过\",{\"1\":{\"40\":1,\"109\":1,\"548\":1,\"617\":1,\"1058\":1,\"1127\":1}}],[\"我们也提到了如何使用基类抽象方法来获取事件通用信息\",{\"1\":{\"41\":1,\"549\":1,\"1059\":1}}],[\"我们以\",{\"1\":{\"38\":1,\"421\":1,\"422\":1,\"546\":1,\"931\":1,\"932\":1,\"1056\":1,\"1446\":1,\"1447\":1}}],[\"注解的标识符\",{\"1\":{\"1889\":1,\"2258\":1,\"2627\":1}}],[\"注\",{\"1\":{\"490\":1,\"491\":1,\"1000\":1,\"1001\":1,\"1515\":1,\"1516\":1}}],[\"注册一个新的\",{\"1\":{\"1871\":1,\"2240\":1,\"2609\":1}}],[\"注册一个新的命令\",{\"1\":{\"1870\":1,\"2239\":1,\"2608\":1}}],[\"注册一个事件响应器\",{\"1\":{\"1868\":1,\"1885\":1,\"2237\":1,\"2254\":1,\"2606\":1,\"2623\":1}}],[\"注册一个支持\",{\"1\":{\"1866\":1,\"1883\":1,\"2235\":1,\"2252\":1,\"2604\":1,\"2621\":1}}],[\"注册一个请求事件响应器\",{\"1\":{\"1860\":1,\"1877\":1,\"2229\":1,\"2246\":1,\"2598\":1,\"2615\":1}}],[\"注册一个通知事件响应器\",{\"1\":{\"1859\":1,\"1876\":1,\"2228\":1,\"2245\":1,\"2597\":1,\"2614\":1}}],[\"注册一个消息事件响应器\",{\"1\":{\"1858\":1,\"1861\":1,\"1862\":1,\"1863\":1,\"1864\":1,\"1865\":1,\"1867\":1,\"1875\":1,\"1878\":1,\"1879\":1,\"1880\":1,\"1881\":1,\"1882\":1,\"1884\":1,\"2227\":1,\"2230\":1,\"2231\":1,\"2232\":1,\"2233\":1,\"2234\":1,\"2236\":1,\"2244\":1,\"2247\":1,\"2248\":1,\"2249\":1,\"2250\":1,\"2251\":1,\"2253\":1,\"2596\":1,\"2599\":1,\"2600\":1,\"2601\":1,\"2602\":1,\"2603\":1,\"2605\":1,\"2613\":1,\"2616\":1,\"2617\":1,\"2618\":1,\"2619\":1,\"2620\":1,\"2622\":1}}],[\"注册一个元事件响应器\",{\"1\":{\"1857\":1,\"1874\":1,\"2226\":1,\"2243\":1,\"2595\":1,\"2612\":1}}],[\"注册一个基础事件响应器\",{\"1\":{\"1856\":1,\"1873\":1,\"2225\":1,\"2242\":1,\"2594\":1,\"2611\":1}}],[\"注册一个停止时执行的函数\",{\"1\":{\"1718\":1,\"2087\":1,\"2466\":1}}],[\"注册一个启动时执行的函数\",{\"1\":{\"1717\":1,\"2086\":1,\"2465\":1}}],[\"注册一个协议适配器\",{\"1\":{\"1713\":1,\"2082\":1,\"2461\":1}}],[\"注册并创建一个新的项目\",{\"1\":{\"445\":1,\"955\":1,\"1470\":1}}],[\"注册适配器\",{\"0\":{\"38\":1,\"546\":1,\"1056\":1},\"1\":{\"507\":2,\"1017\":2,\"1532\":2,\"1569\":1,\"1938\":1,\"2307\":1}}],[\"注意\",{\"1\":{\"78\":1,\"79\":1,\"421\":1,\"422\":1,\"446\":1,\"452\":1,\"513\":2,\"515\":1,\"516\":1,\"531\":1,\"532\":1,\"543\":2,\"586\":1,\"587\":1,\"931\":1,\"932\":1,\"956\":1,\"962\":1,\"1023\":2,\"1025\":1,\"1026\":1,\"1041\":1,\"1042\":1,\"1053\":2,\"1096\":1,\"1097\":1,\"1446\":1,\"1447\":1,\"1471\":1,\"1477\":1,\"1538\":2,\"1540\":1,\"1541\":1,\"1556\":1,\"1557\":1,\"1568\":2,\"1919\":1,\"1932\":1,\"2288\":1,\"2301\":1,\"2657\":1,\"2670\":1,\"2679\":1,\"2680\":1,\"2689\":1,\"2694\":1,\"2695\":1,\"2704\":1,\"2709\":1,\"2710\":1,\"2719\":1}}],[\"注入参数\",{\"1\":{\"298\":1,\"299\":1,\"300\":1,\"806\":1,\"807\":1,\"808\":1,\"1316\":1,\"1320\":1,\"1324\":1}}],[\"注入\",{\"1\":{\"7\":1,\"19\":1,\"31\":1}}],[\"以外的语句\",{\"1\":{\"2688\":1,\"2703\":1,\"2718\":1}}],[\"以避免对其他测试产生影响\",{\"1\":{\"1934\":1,\"2303\":1,\"2672\":1}}],[\"以pip为例\",{\"1\":{\"1906\":1,\"2275\":1,\"2644\":1}}],[\"以上配置之间有覆盖关系\",{\"1\":{\"1932\":1,\"2301\":1,\"2670\":1}}],[\"以上下文管理器方式配置命名空间\",{\"1\":{\"1898\":1,\"2267\":1,\"2636\":1}}],[\"以上版本\",{\"1\":{\"0\":1,\"12\":1,\"24\":1}}],[\"以保证计数器的正确性\",{\"1\":{\"1894\":1,\"2263\":1,\"2632\":1}}],[\"以保证追加的正确性\",{\"1\":{\"1894\":1,\"2263\":1,\"2632\":1}}],[\"以携带对于该参数的更多信息\",{\"1\":{\"1892\":1,\"2261\":1,\"2630\":1}}],[\"以方便用户调用\",{\"1\":{\"1889\":1,\"2258\":1,\"2627\":1}}],[\"以满足适配器使用\",{\"1\":{\"1730\":1,\"2099\":1,\"2445\":1}}],[\"以适应不同平台中的消息模式\",{\"1\":{\"531\":1,\"1041\":1,\"1556\":1}}],[\"以\",{\"1\":{\"505\":1,\"1015\":1,\"1530\":1,\"1810\":1,\"1811\":1,\"1812\":1,\"1813\":1,\"1889\":1,\"2179\":1,\"2180\":1,\"2181\":1,\"2182\":1,\"2258\":1,\"2548\":1,\"2549\":1,\"2550\":1,\"2551\":1,\"2627\":1}}],[\"以提升搜索引擎优化\",{\"1\":{\"501\":1,\"1011\":1,\"1526\":1}}],[\"以网页的形式帮助用户开发\",{\"1\":{\"497\":1,\"1007\":1,\"1522\":1}}],[\"以应对平台事件数据的变更\",{\"1\":{\"473\":1,\"983\":1,\"1498\":1}}],[\"以下是建议的输入\",{\"1\":{\"1905\":1,\"2274\":1,\"2643\":1}}],[\"以下是为加载插件提供的几种方式\",{\"1\":{\"514\":1,\"1024\":1,\"1539\":1}}],[\"以下简称命名空间\",{\"1\":{\"1897\":1,\"2266\":1,\"2635\":1}}],[\"以下步骤均在该文件夹中进行\",{\"1\":{\"504\":1,\"1014\":1,\"1529\":1}}],[\"以下数据目录配置项默认值将会对应变更\",{\"1\":{\"435\":1,\"945\":1,\"1460\":1}}],[\"以下内容可以直接通过本模块导入\",{\"1\":{\"216\":1,\"724\":1,\"1236\":1,\"1802\":1,\"2171\":1,\"2540\":1}}],[\"以便我们在不同的环境中\",{\"1\":{\"2679\":1,\"2694\":1,\"2709\":1}}],[\"以便其他开发者使用我们的适配器\",{\"1\":{\"479\":1,\"989\":1,\"1504\":1}}],[\"以便及时发现问题并进行修复\",{\"1\":{\"442\":1,\"952\":1,\"1467\":1}}],[\"以便在会话中的不同阶段进行判断和处理\",{\"1\":{\"429\":1,\"939\":1,\"1454\":1}}],[\"以便机器人插件处理\",{\"1\":{\"37\":1,\"477\":1,\"545\":1,\"987\":1,\"1055\":1,\"1502\":1}}],[\"以事件响应器列表为值的映射\",{\"1\":{\"82\":1,\"590\":1,\"1100\":1}}],[\"以及他们小写形式\",{\"1\":{\"1890\":1,\"2259\":1,\"2628\":1}}],[\"以及机器人生命周期管理\",{\"1\":{\"1709\":1,\"2078\":1,\"2457\":1}}],[\"以及所有给定目录下的插件\",{\"1\":{\"517\":1,\"1027\":1,\"1542\":1}}],[\"以及驱动器\",{\"1\":{\"505\":1,\"1015\":1,\"1530\":1}}],[\"以及正确创建\",{\"1\":{\"468\":1,\"978\":1,\"1493\":1}}],[\"以及python\",{\"1\":{\"162\":1,\"670\":1,\"1180\":1}}],[\"以及返回体信息\",{\"1\":{\"120\":1,\"628\":1,\"1138\":1}}],[\"以及如何获取插件信息\",{\"1\":{\"109\":1,\"617\":1,\"1127\":1}}],[\"以及\",{\"1\":{\"108\":1,\"224\":1,\"226\":1,\"486\":1,\"487\":1,\"506\":1,\"616\":1,\"732\":1,\"734\":1,\"996\":1,\"997\":1,\"1016\":1,\"1126\":1,\"1244\":1,\"1246\":1,\"1511\":1,\"1512\":1,\"1531\":1,\"1812\":1,\"1813\":1,\"2181\":1,\"2182\":1,\"2550\":1,\"2551\":1}}],[\"以及是否启用该功能\",{\"1\":{\"64\":1,\"572\":1,\"1082\":1}}],[\"以及事件主体对象\",{\"1\":{\"37\":1,\"545\":1,\"1055\":1}}],[\"effective\",{\"1\":{\"1924\":1,\"2293\":1,\"2662\":1}}],[\"eval\",{\"1\":{\"1902\":9,\"2271\":9,\"2640\":9}}],[\"every\",{\"1\":{\"452\":3,\"962\":3,\"1477\":3}}],[\"eventmessage\",{\"1\":{\"367\":2,\"532\":1,\"875\":2,\"1042\":1,\"1390\":2,\"1557\":1}}],[\"eventparam\",{\"1\":{\"387\":1,\"388\":1,\"389\":1,\"390\":1,\"391\":1,\"392\":1,\"394\":1,\"395\":1,\"895\":1,\"896\":1,\"897\":1,\"898\":1,\"899\":1,\"900\":1,\"902\":1,\"903\":1,\"1410\":1,\"1411\":1,\"1412\":1,\"1413\":1,\"1414\":1,\"1415\":1,\"1417\":1,\"1418\":1}}],[\"eventpostprocessor\",{\"1\":{\"289\":2,\"388\":1,\"797\":2,\"896\":1,\"1309\":2,\"1411\":1}}],[\"eventpreprocessor\",{\"1\":{\"288\":2,\"387\":1,\"796\":2,\"895\":1,\"1308\":2,\"1410\":1}}],[\"event\",{\"0\":{\"473\":1,\"476\":1,\"983\":1,\"986\":1,\"1498\":1,\"1501\":1},\"1\":{\"37\":1,\"41\":1,\"42\":2,\"43\":2,\"44\":2,\"45\":1,\"46\":1,\"47\":1,\"48\":1,\"49\":1,\"50\":1,\"86\":1,\"132\":5,\"133\":4,\"134\":3,\"135\":2,\"140\":4,\"209\":2,\"242\":1,\"244\":2,\"245\":2,\"259\":4,\"260\":2,\"261\":4,\"267\":2,\"268\":2,\"270\":2,\"271\":2,\"272\":2,\"292\":3,\"293\":5,\"300\":2,\"331\":3,\"335\":3,\"343\":2,\"349\":3,\"370\":1,\"371\":1,\"387\":1,\"388\":1,\"389\":1,\"390\":1,\"391\":1,\"392\":1,\"394\":1,\"395\":1,\"421\":4,\"422\":3,\"425\":4,\"427\":1,\"462\":1,\"463\":1,\"465\":1,\"473\":17,\"475\":11,\"476\":15,\"526\":1,\"532\":1,\"545\":1,\"549\":1,\"550\":2,\"551\":2,\"552\":2,\"553\":1,\"554\":1,\"555\":1,\"556\":1,\"557\":1,\"558\":1,\"594\":1,\"640\":5,\"641\":4,\"642\":3,\"643\":2,\"648\":4,\"717\":2,\"750\":1,\"752\":2,\"753\":2,\"767\":4,\"768\":2,\"769\":4,\"775\":2,\"776\":2,\"778\":2,\"779\":2,\"780\":2,\"800\":3,\"801\":5,\"808\":2,\"839\":3,\"843\":3,\"851\":2,\"857\":3,\"878\":1,\"879\":1,\"895\":1,\"896\":1,\"897\":1,\"898\":1,\"899\":1,\"900\":1,\"902\":1,\"903\":1,\"931\":4,\"932\":3,\"935\":4,\"937\":1,\"972\":1,\"973\":1,\"975\":1,\"983\":17,\"985\":11,\"986\":15,\"1036\":1,\"1042\":1,\"1055\":1,\"1059\":1,\"1060\":2,\"1061\":2,\"1062\":2,\"1063\":1,\"1064\":1,\"1065\":1,\"1066\":1,\"1067\":1,\"1068\":1,\"1104\":1,\"1150\":5,\"1151\":4,\"1152\":3,\"1153\":2,\"1158\":4,\"1229\":2,\"1263\":1,\"1265\":2,\"1266\":2,\"1280\":4,\"1281\":2,\"1282\":4,\"1288\":2,\"1289\":2,\"1291\":2,\"1292\":2,\"1293\":2,\"1312\":3,\"1313\":5,\"1324\":2,\"1355\":3,\"1357\":3,\"1366\":2,\"1372\":3,\"1393\":1,\"1394\":1,\"1410\":1,\"1411\":1,\"1412\":1,\"1413\":1,\"1414\":1,\"1415\":1,\"1417\":1,\"1418\":1,\"1446\":4,\"1447\":3,\"1450\":4,\"1452\":1,\"1487\":1,\"1488\":1,\"1490\":1,\"1498\":17,\"1500\":11,\"1501\":15,\"1551\":1,\"1557\":1,\"1576\":2,\"1579\":1,\"1868\":2,\"1885\":2,\"1945\":2,\"1948\":1,\"2237\":2,\"2254\":2,\"2326\":2,\"2329\":1,\"2606\":2,\"2623\":2}}],[\"email\",{\"1\":{\"1890\":1,\"2259\":1,\"2628\":1}}],[\"emoji\",{\"1\":{\"543\":5,\"1053\":5,\"1568\":5}}],[\"empty\",{\"1\":{\"153\":1,\"217\":1,\"219\":1,\"220\":1,\"221\":1,\"223\":1,\"233\":1,\"243\":1,\"258\":1,\"261\":1,\"265\":1,\"266\":1,\"269\":1,\"274\":1,\"275\":1,\"276\":1,\"277\":1,\"280\":1,\"281\":1,\"307\":1,\"308\":1,\"309\":1,\"310\":1,\"311\":1,\"312\":1,\"313\":1,\"314\":1,\"315\":1,\"316\":1,\"317\":1,\"318\":1,\"320\":1,\"321\":1,\"322\":1,\"323\":1,\"324\":1,\"325\":1,\"369\":1,\"661\":1,\"725\":1,\"727\":1,\"728\":1,\"729\":1,\"731\":1,\"741\":1,\"751\":1,\"766\":1,\"769\":1,\"773\":1,\"774\":1,\"777\":1,\"782\":1,\"783\":1,\"784\":1,\"785\":1,\"788\":1,\"789\":1,\"815\":1,\"816\":1,\"817\":1,\"818\":1,\"819\":1,\"820\":1,\"821\":1,\"822\":1,\"823\":1,\"824\":1,\"825\":1,\"826\":1,\"828\":1,\"829\":1,\"830\":1,\"831\":1,\"832\":1,\"833\":1,\"877\":1,\"1171\":1,\"1237\":1,\"1239\":1,\"1240\":1,\"1241\":1,\"1243\":1,\"1254\":1,\"1264\":1,\"1279\":1,\"1282\":1,\"1286\":1,\"1287\":1,\"1290\":1,\"1294\":1,\"1295\":1,\"1296\":1,\"1297\":1,\"1300\":1,\"1301\":1,\"1328\":1,\"1329\":1,\"1330\":1,\"1331\":1,\"1332\":1,\"1333\":1,\"1334\":1,\"1335\":1,\"1336\":1,\"1337\":1,\"1338\":1,\"1339\":1,\"1341\":1,\"1342\":1,\"1343\":1,\"1344\":1,\"1345\":1,\"1346\":1,\"1350\":1,\"1392\":1,\"1580\":1,\"1581\":1,\"1582\":1,\"1583\":1,\"1584\":1,\"1585\":1,\"1586\":1,\"1587\":1,\"1588\":1,\"1592\":1,\"1603\":1,\"1615\":1,\"1618\":1,\"1622\":1,\"1623\":1,\"1626\":1,\"1627\":1,\"1628\":1,\"1630\":1,\"1631\":1,\"1654\":1,\"1655\":1,\"1661\":1,\"1663\":1,\"1664\":1,\"1665\":1,\"1690\":1,\"1692\":1,\"1693\":1,\"1694\":1,\"1700\":1,\"1701\":1,\"1737\":1,\"1739\":1,\"1740\":1,\"1741\":1,\"1781\":1,\"1783\":1,\"1784\":1,\"1785\":1,\"1793\":1,\"1795\":1,\"1796\":1,\"1797\":1,\"1805\":1,\"1806\":1,\"1825\":1,\"1841\":1,\"1892\":1,\"1949\":1,\"1950\":1,\"1951\":1,\"1952\":1,\"1953\":1,\"1954\":1,\"1955\":1,\"1956\":1,\"1957\":1,\"1961\":1,\"1972\":1,\"1984\":1,\"1987\":1,\"1991\":1,\"1992\":1,\"1995\":1,\"1996\":1,\"1997\":1,\"1999\":1,\"2000\":1,\"2023\":1,\"2024\":1,\"2030\":1,\"2032\":1,\"2033\":1,\"2034\":1,\"2059\":1,\"2061\":1,\"2062\":1,\"2063\":1,\"2069\":1,\"2070\":1,\"2106\":1,\"2108\":1,\"2109\":1,\"2110\":1,\"2150\":1,\"2152\":1,\"2153\":1,\"2154\":1,\"2162\":1,\"2164\":1,\"2165\":1,\"2166\":1,\"2174\":1,\"2175\":1,\"2194\":1,\"2210\":1,\"2261\":1,\"2311\":1,\"2330\":1,\"2331\":1,\"2332\":1,\"2333\":1,\"2334\":1,\"2335\":1,\"2336\":1,\"2337\":1,\"2338\":1,\"2341\":1,\"2353\":1,\"2356\":1,\"2360\":1,\"2361\":1,\"2364\":1,\"2365\":1,\"2366\":1,\"2368\":1,\"2369\":1,\"2392\":1,\"2393\":1,\"2399\":1,\"2401\":1,\"2402\":1,\"2403\":1,\"2428\":1,\"2430\":1,\"2431\":1,\"2432\":1,\"2438\":1,\"2439\":1,\"2484\":1,\"2486\":1,\"2487\":1,\"2488\":1,\"2519\":1,\"2521\":1,\"2522\":1,\"2523\":1,\"2531\":1,\"2533\":1,\"2534\":1,\"2535\":1,\"2543\":1,\"2544\":1,\"2563\":1,\"2579\":1,\"2630\":1}}],[\"echo=true\",{\"1\":{\"1932\":1,\"2301\":1,\"2670\":1}}],[\"echo\",{\"0\":{\"1932\":1,\"2301\":1,\"2670\":1},\"1\":{\"507\":1,\"513\":1,\"520\":1,\"521\":1,\"524\":2,\"1017\":1,\"1023\":1,\"1030\":1,\"1031\":1,\"1034\":2,\"1532\":1,\"1538\":1,\"1545\":1,\"1546\":1,\"1549\":2,\"1902\":7,\"1930\":2,\"1931\":1,\"1932\":3,\"2271\":7,\"2299\":2,\"2300\":1,\"2301\":3,\"2640\":7,\"2668\":2,\"2669\":1,\"2670\":3}}],[\"escape\",{\"1\":{\"476\":1,\"477\":1,\"986\":1,\"987\":1,\"1501\":1,\"1502\":1}}],[\"else\",{\"1\":{\"429\":1,\"939\":1,\"1454\":1}}],[\"ellipsis\",{\"1\":{\"142\":1,\"650\":1,\"1160\":1,\"1894\":2,\"2263\":2,\"2632\":2}}],[\"error\",{\"1\":{\"417\":4,\"418\":2,\"466\":2,\"470\":3,\"473\":1,\"927\":4,\"928\":2,\"976\":2,\"980\":3,\"983\":1,\"1442\":4,\"1443\":2,\"1491\":2,\"1495\":3,\"1498\":1,\"1895\":2,\"2264\":2,\"2633\":2,\"2679\":2,\"2694\":2,\"2709\":2}}],[\"err\",{\"1\":{\"408\":4,\"916\":4,\"1431\":4}}],[\"err=none\",{\"1\":{\"408\":1,\"916\":1,\"1431\":1}}],[\"engine\",{\"0\":{\"1931\":1,\"2300\":1,\"2669\":1},\"1\":{\"1930\":1,\"1931\":2,\"1932\":1,\"2299\":1,\"2300\":2,\"2301\":1,\"2668\":1,\"2669\":2,\"2670\":1}}],[\"enumeration\",{\"1\":{\"1745\":1,\"2114\":1,\"2475\":1}}],[\"end\",{\"1\":{\"1608\":1,\"1977\":1,\"2346\":1,\"2679\":4,\"2694\":4,\"2709\":4}}],[\"endswith\",{\"1\":{\"96\":5,\"192\":1,\"216\":2,\"604\":5,\"700\":1,\"724\":2,\"1114\":5,\"1212\":1,\"1236\":2,\"1802\":2,\"2171\":2,\"2540\":2}}],[\"entrypoint\",{\"1\":{\"507\":1,\"1017\":1,\"1532\":1}}],[\"enabled\",{\"1\":{\"424\":2,\"425\":1,\"426\":1,\"934\":2,\"935\":1,\"936\":1,\"1449\":2,\"1450\":1,\"1451\":1}}],[\"enable\",{\"0\":{\"1916\":1,\"2285\":1,\"2654\":1},\"1\":{\"424\":4,\"425\":2,\"426\":3,\"934\":4,\"935\":2,\"936\":3,\"1449\":4,\"1450\":2,\"1451\":3,\"1897\":1,\"2266\":1,\"2635\":1}}],[\"encoding=\",{\"1\":{\"518\":1,\"519\":1,\"1028\":1,\"1029\":1,\"1543\":1,\"1544\":1}}],[\"encoding\",{\"1\":{\"163\":1,\"165\":1,\"671\":1,\"673\":1,\"1181\":1,\"1183\":1,\"1812\":1,\"1813\":1,\"2181\":1,\"2182\":1,\"2550\":1,\"2551\":1}}],[\"environment\",{\"1\":{\"164\":1,\"165\":1,\"447\":1,\"672\":1,\"673\":1,\"957\":1,\"1182\":1,\"1183\":1,\"1472\":1}}],[\"env\",{\"1\":{\"163\":3,\"164\":1,\"165\":4,\"224\":6,\"447\":1,\"506\":1,\"671\":3,\"672\":1,\"673\":4,\"732\":6,\"957\":1,\"1016\":1,\"1181\":3,\"1182\":1,\"1183\":4,\"1244\":6,\"1472\":1,\"1531\":1,\"1668\":2,\"1681\":2,\"1705\":2,\"1709\":3,\"1759\":2,\"1772\":2,\"1800\":2,\"2037\":2,\"2050\":2,\"2074\":2,\"2078\":3,\"2128\":2,\"2141\":2,\"2169\":2,\"2406\":2,\"2419\":2,\"2443\":2,\"2457\":3,\"2497\":2,\"2510\":2,\"2538\":2,\"2690\":6,\"2705\":6,\"2720\":6}}],[\"e\",{\"1\":{\"121\":1,\"466\":2,\"470\":6,\"473\":1,\"629\":1,\"918\":2,\"976\":2,\"980\":6,\"983\":1,\"1139\":1,\"1433\":2,\"1491\":2,\"1495\":6,\"1498\":1}}],[\"execute\",{\"1\":{\"2689\":12,\"2704\":12,\"2719\":12}}],[\"exiting\",{\"1\":{\"2679\":1,\"2694\":1,\"2709\":1}}],[\"extend\",{\"1\":{\"542\":2,\"1052\":2,\"1567\":2}}],[\"extensions\",{\"0\":{\"1914\":1,\"2283\":1,\"2652\":1},\"1\":{\"468\":1,\"470\":1,\"474\":1,\"475\":1,\"476\":1,\"477\":1,\"978\":1,\"980\":1,\"984\":1,\"985\":1,\"986\":1,\"987\":1,\"1493\":1,\"1495\":1,\"1499\":1,\"1500\":1,\"1501\":1,\"1502\":1}}],[\"extract\",{\"1\":{\"530\":1,\"537\":2,\"1040\":1,\"1047\":2,\"1555\":1,\"1562\":2,\"1587\":1,\"1956\":1,\"2337\":1,\"2680\":3,\"2681\":6,\"2695\":3,\"2696\":6,\"2710\":3,\"2711\":6}}],[\"extra\",{\"1\":{\"110\":2,\"146\":1,\"147\":1,\"618\":2,\"654\":1,\"655\":1,\"1128\":2,\"1164\":1,\"1165\":1,\"1896\":1,\"2265\":1,\"2634\":1}}],[\"extra=\",{\"1\":{\"110\":1,\"618\":1,\"1128\":1}}],[\"exc\",{\"1\":{\"408\":5,\"916\":5,\"918\":1,\"1431\":5,\"1433\":1}}],[\"exclude\",{\"1\":{\"158\":4,\"447\":1,\"541\":2,\"666\":4,\"957\":1,\"1051\":2,\"1176\":4,\"1472\":1,\"1566\":2}}],[\"exceptions\",{\"1\":{\"2679\":1,\"2694\":1,\"2709\":1}}],[\"exception=true\",{\"1\":{\"417\":1,\"927\":1,\"1442\":1}}],[\"exceptionparam\",{\"1\":{\"390\":1,\"898\":1,\"1413\":1}}],[\"exception\",{\"0\":{\"195\":1,\"703\":1,\"1215\":1},\"1\":{\"121\":1,\"132\":2,\"134\":2,\"135\":2,\"136\":1,\"137\":4,\"208\":1,\"306\":2,\"386\":2,\"408\":2,\"415\":1,\"417\":2,\"466\":1,\"470\":3,\"473\":1,\"629\":1,\"640\":2,\"642\":2,\"643\":2,\"644\":1,\"645\":4,\"716\":1,\"814\":2,\"894\":2,\"916\":2,\"925\":1,\"927\":2,\"976\":1,\"980\":3,\"983\":1,\"1139\":1,\"1150\":2,\"1152\":2,\"1153\":2,\"1154\":1,\"1155\":4,\"1228\":1,\"1325\":2,\"1409\":2,\"1431\":2,\"1440\":1,\"1442\":2,\"1491\":1,\"1495\":3,\"1498\":1,\"1578\":1,\"1896\":1,\"1897\":1,\"1947\":1,\"2265\":1,\"2266\":1,\"2328\":1,\"2634\":1,\"2635\":1}}],[\"except\",{\"1\":{\"121\":1,\"417\":1,\"466\":1,\"470\":3,\"473\":1,\"629\":1,\"927\":1,\"976\":1,\"980\":3,\"983\":1,\"1139\":1,\"1442\":1,\"1491\":1,\"1495\":3,\"1498\":1}}],[\"example=\",{\"1\":{\"1896\":1,\"2265\":1,\"2634\":1}}],[\"example\",{\"1\":{\"110\":3,\"111\":2,\"618\":3,\"619\":2,\"1128\":3,\"1129\":2,\"1896\":1,\"2265\":1,\"2634\":1}}],[\"expire\",{\"1\":{\"91\":3,\"93\":1,\"175\":2,\"242\":1,\"599\":3,\"601\":1,\"683\":2,\"750\":1,\"1109\":3,\"1111\":1,\"1193\":2,\"1263\":1,\"1856\":1,\"1857\":1,\"1858\":1,\"1859\":1,\"1860\":1,\"1861\":1,\"1862\":1,\"1863\":1,\"1864\":1,\"1865\":1,\"1866\":1,\"1867\":1,\"1868\":1,\"1869\":1,\"1870\":1,\"1871\":1,\"1872\":1,\"1873\":1,\"1874\":1,\"1875\":1,\"1876\":1,\"1877\":1,\"1878\":1,\"1879\":1,\"1880\":1,\"1881\":1,\"1882\":1,\"1883\":1,\"1884\":1,\"1885\":1,\"2225\":1,\"2226\":1,\"2227\":1,\"2228\":1,\"2229\":1,\"2230\":1,\"2231\":1,\"2232\":1,\"2233\":1,\"2234\":1,\"2235\":1,\"2236\":1,\"2237\":1,\"2238\":1,\"2239\":1,\"2240\":1,\"2241\":1,\"2242\":1,\"2243\":1,\"2244\":1,\"2245\":1,\"2246\":1,\"2247\":1,\"2248\":1,\"2249\":1,\"2250\":1,\"2251\":1,\"2252\":1,\"2253\":1,\"2254\":1,\"2594\":1,\"2595\":1,\"2596\":1,\"2597\":1,\"2598\":1,\"2599\":1,\"2600\":1,\"2601\":1,\"2602\":1,\"2603\":1,\"2604\":1,\"2605\":1,\"2606\":1,\"2607\":1,\"2608\":1,\"2609\":1,\"2610\":1,\"2611\":1,\"2612\":1,\"2613\":1,\"2614\":1,\"2615\":1,\"2616\":1,\"2617\":1,\"2618\":1,\"2619\":1,\"2620\":1,\"2621\":1,\"2622\":1,\"2623\":1}}],[\"editable\",{\"1\":{\"478\":1,\"988\":1,\"1503\":1}}],[\"edit\",{\"1\":{\"11\":1,\"23\":1,\"35\":1}}],[\"负责命令参数的类型检查与类型转化\",{\"1\":{\"1890\":1,\"2259\":1,\"2628\":1}}],[\"负责将平台消息与\",{\"1\":{\"523\":1,\"1033\":1,\"1548\":1}}],[\"负责接收和发送消息\",{\"1\":{\"523\":1,\"1033\":1,\"1548\":1}}],[\"负责连接各个组成部分\",{\"1\":{\"523\":1,\"1033\":1,\"1548\":1}}],[\"负责转换事件\",{\"1\":{\"468\":1,\"978\":1,\"1493\":1}}],[\"负责转换事件和调用接口\",{\"1\":{\"37\":1,\"545\":1,\"1055\":1}}],[\"负责正确序列化消息\",{\"1\":{\"37\":1,\"477\":1,\"545\":1,\"987\":1,\"1055\":1,\"1502\":1}}],[\"负责定义事件内容\",{\"1\":{\"37\":1,\"545\":1,\"1055\":1}}],[\"负责存储平台机器人相关信息\",{\"1\":{\"37\":1,\"475\":1,\"545\":1,\"985\":1,\"1055\":1,\"1500\":1}}],[\"为关闭\",{\"1\":{\"1896\":1,\"1915\":1,\"2265\":1,\"2284\":1,\"2634\":1,\"2653\":1}}],[\"为消息段定义了一个方法\",{\"1\":{\"537\":1,\"1047\":1,\"1562\":1}}],[\"为确保消息的正常处理与跨平台兼容性\",{\"1\":{\"528\":1,\"1038\":1,\"1553\":1}}],[\"为事件响应器添加参数\",{\"0\":{\"527\":1,\"1037\":1,\"1552\":1}}],[\"为机器人提供具体的功能\",{\"1\":{\"504\":1,\"1014\":1,\"1529\":1}}],[\"为用户提供了详细的文档介绍\",{\"1\":{\"495\":1,\"1005\":1,\"1520\":1}}],[\"为用户提供了命令行脚手架\",{\"1\":{\"493\":1,\"1003\":1,\"1518\":1}}],[\"为具体的值或者\",{\"1\":{\"1888\":1,\"2257\":1,\"2626\":1}}],[\"为具体\",{\"1\":{\"473\":1,\"983\":1,\"1498\":1}}],[\"为保证兼容性\",{\"1\":{\"299\":1,\"300\":1,\"301\":1,\"305\":1,\"306\":1,\"807\":1,\"808\":1,\"809\":1,\"813\":1,\"814\":1,\"1320\":1,\"1324\":1,\"1325\":1,\"1326\":1,\"1327\":1}}],[\"为键\",{\"1\":{\"223\":1,\"731\":1,\"1243\":1}}],[\"为键的字典\",{\"1\":{\"40\":2,\"548\":2,\"1058\":2}}],[\"为方便使用\",{\"1\":{\"216\":1,\"724\":1,\"1236\":1,\"1802\":1,\"2171\":1,\"2540\":1}}],[\"为兼容\",{\"1\":{\"141\":1,\"649\":1,\"1159\":1}}],[\"为例\",{\"1\":{\"124\":1,\"505\":1,\"632\":1,\"1015\":1,\"1142\":1,\"1530\":1}}],[\"为其他插件编写提供功能\",{\"1\":{\"110\":1,\"618\":1,\"1128\":1}}],[\"为\",{\"1\":{\"99\":2,\"166\":1,\"203\":1,\"406\":1,\"407\":1,\"417\":1,\"436\":1,\"437\":1,\"438\":1,\"485\":1,\"607\":2,\"674\":1,\"711\":1,\"914\":1,\"915\":1,\"927\":1,\"946\":1,\"947\":1,\"948\":1,\"995\":1,\"1117\":2,\"1184\":1,\"1223\":1,\"1429\":1,\"1430\":1,\"1442\":1,\"1461\":1,\"1462\":1,\"1463\":1,\"1510\":1,\"1839\":1,\"1890\":2,\"1896\":2,\"1902\":2,\"1903\":1,\"1915\":2,\"2208\":1,\"2259\":2,\"2265\":2,\"2271\":2,\"2272\":1,\"2284\":2,\"2577\":1,\"2628\":2,\"2634\":2,\"2640\":2,\"2641\":1,\"2653\":2}}],[\"为四种类型的事件响应器提供了五个基本的辅助函数\",{\"1\":{\"93\":1,\"601\":1,\"1111\":1}}],[\"为了提高项目的兼容性\",{\"1\":{\"2690\":1,\"2705\":1,\"2720\":1}}],[\"为了提供安全可靠的跨平台模板字符\",{\"1\":{\"543\":1,\"1053\":1,\"1568\":1}}],[\"为了更好的理解多种类型的消息组成方式\",{\"1\":{\"532\":1,\"1042\":1,\"1557\":1}}],[\"为了更方便的管理一系列功能相近的响应器\",{\"1\":{\"104\":1,\"612\":1,\"1122\":1}}],[\"为了解决初学者在使用面向开发者的聊天机器人框架\",{\"1\":{\"503\":1,\"1013\":1,\"1528\":1}}],[\"为了简化内置驱动器模块路径\",{\"1\":{\"54\":1,\"562\":1,\"1072\":1}}],[\"为了实现这两种功能\",{\"1\":{\"37\":1,\"545\":1,\"1055\":1}}],[\"为你的代码提供这些必要依赖\",{\"1\":{\"7\":1,\"19\":1,\"31\":1}}],[\"其对应的\",{\"1\":{\"1906\":1,\"2275\":1,\"2644\":1}}],[\"其自动支持\",{\"1\":{\"1903\":1,\"2272\":1,\"2641\":1}}],[\"其优先度低于\",{\"1\":{\"1897\":1,\"2266\":1,\"2635\":1}}],[\"其接收一个表示匹配失败的元素的参数\",{\"1\":{\"1892\":1,\"2261\":1,\"2630\":1}}],[\"其构造方法形如\",{\"1\":{\"1891\":3,\"2260\":3,\"2629\":3}}],[\"其与\",{\"1\":{\"1889\":1,\"2258\":1,\"2627\":1}}],[\"其与函数签名类似\",{\"1\":{\"1888\":1,\"2257\":1,\"2626\":1}}],[\"其有三种为\",{\"1\":{\"1889\":1,\"2258\":1,\"2627\":1}}],[\"其余是模版代码\",{\"1\":{\"2679\":1,\"2694\":1,\"2709\":1}}],[\"其余信息可直接获取\",{\"1\":{\"1579\":1,\"1948\":1,\"2329\":1}}],[\"其余参数均相同\",{\"1\":{\"93\":1,\"601\":1,\"1111\":1}}],[\"其它\",{\"1\":{\"493\":1,\"1003\":1,\"1518\":1}}],[\"其官方提供了丰富的聊天机器人\",{\"1\":{\"487\":1,\"997\":1,\"1512\":1}}],[\"其强大的定时任务功能被广泛应用于各个场景\",{\"1\":{\"448\":1,\"958\":1,\"1473\":1}}],[\"其中有一个\",{\"1\":{\"2679\":1,\"2694\":1,\"2709\":1}}],[\"其中的\",{\"1\":{\"1890\":1,\"2259\":1,\"2628\":1}}],[\"其中的元素为\",{\"1\":{\"1890\":1,\"2259\":1,\"2628\":1}}],[\"其中包含的文件将在稍后章节中用到\",{\"1\":{\"513\":1,\"1023\":1,\"1538\":1}}],[\"其中是\",{\"1\":{\"328\":1,\"346\":1,\"836\":1,\"854\":1,\"1351\":1,\"1369\":1}}],[\"其中\",{\"1\":{\"37\":1,\"54\":1,\"117\":1,\"545\":1,\"562\":1,\"625\":1,\"1055\":1,\"1072\":1,\"1135\":1,\"1887\":1,\"1888\":1,\"1925\":1,\"1926\":1,\"2256\":1,\"2257\":1,\"2294\":1,\"2295\":1,\"2625\":1,\"2626\":1,\"2663\":1,\"2664\":1,\"2678\":2,\"2679\":1,\"2681\":1,\"2693\":2,\"2694\":1,\"2696\":1,\"2708\":2,\"2709\":1,\"2711\":1}}],[\"其他传递给适配器的参数\",{\"1\":{\"1713\":1,\"2082\":1,\"2461\":1}}],[\"其他由\",{\"1\":{\"1589\":1,\"1958\":1,\"2308\":1}}],[\"其他类型的消息段将会原样添加\",{\"1\":{\"543\":1,\"1053\":1,\"1568\":1}}],[\"其他部分均可按需选择\",{\"1\":{\"523\":1,\"1033\":1,\"1548\":1}}],[\"其他加载方式\",{\"0\":{\"522\":1,\"1032\":1,\"1547\":1}}],[\"其他项目如\",{\"1\":{\"497\":1,\"1007\":1,\"1522\":1}}],[\"其他插件可以通过约定\",{\"1\":{\"110\":1,\"618\":1,\"1128\":1}}],[\"其他则不会\",{\"1\":{\"90\":1,\"598\":1,\"1108\":1}}],[\"其他\",{\"0\":{\"11\":1,\"23\":1,\"35\":1}}],[\"是主键\",{\"1\":{\"2678\":1,\"2693\":1,\"2708\":1}}],[\"是可选参数\",{\"1\":{\"1925\":1,\"2294\":1,\"2663\":1}}],[\"是因为\",{\"1\":{\"1890\":1,\"2259\":1,\"2628\":1}}],[\"是用于声明命令参数的组件\",{\"1\":{\"1888\":1,\"2257\":1,\"2626\":1}}],[\"是用来初始化并运行机器人的\",{\"1\":{\"507\":1,\"1017\":1,\"1532\":1}}],[\"是对接收到的事件进行响应的基本单元\",{\"1\":{\"524\":1,\"1034\":1,\"1549\":1}}],[\"是中国科学院软件研究所发起的开源软件供应链点亮计划系列暑期活动\",{\"1\":{\"500\":1,\"1010\":1,\"1525\":1}}],[\"是中国科学院软件研究所与\",{\"1\":{\"480\":1,\"990\":1,\"1505\":1}}],[\"是由开源软件供应链点亮计划发起\",{\"1\":{\"492\":1,\"496\":1,\"1002\":1,\"1006\":1,\"1517\":1,\"1521\":1}}],[\"是以上两种方式的合体\",{\"1\":{\"474\":1,\"984\":1,\"1499\":1}}],[\"是若干个\",{\"1\":{\"425\":1,\"935\":1,\"1450\":1}}],[\"是\",{\"1\":{\"401\":3,\"419\":1,\"476\":1,\"518\":1,\"519\":1,\"909\":3,\"929\":1,\"986\":1,\"1028\":1,\"1029\":1,\"1424\":3,\"1444\":1,\"1501\":1,\"1543\":1,\"1544\":1,\"2679\":1,\"2694\":1,\"2709\":1}}],[\"是计算机程序设计术语\",{\"1\":{\"125\":1,\"633\":1,\"1143\":1}}],[\"是一段消息\",{\"1\":{\"531\":1,\"1041\":1,\"1556\":1}}],[\"是一款较为广泛使用的安全即时聊天软件\",{\"1\":{\"486\":1,\"996\":1,\"1511\":1}}],[\"是一类提供了拓展响应规则的插件\",{\"1\":{\"108\":1,\"616\":1,\"1126\":1}}],[\"是一个特殊的依赖注入\",{\"1\":{\"2681\":1,\"2696\":1,\"2711\":1}}],[\"是一个特殊的标注\",{\"1\":{\"1891\":1,\"2260\":1,\"2629\":1}}],[\"是一个有作用域限制的会话\",{\"1\":{\"2680\":1,\"2695\":1,\"2710\":1}}],[\"是一个返回值为\",{\"1\":{\"424\":1,\"934\":1,\"1449\":1}}],[\"是一个插件化的框架\",{\"1\":{\"109\":1,\"617\":1,\"1127\":1}}],[\"是一个简单\",{\"1\":{\"108\":1,\"616\":1,\"1126\":1,\"1886\":1,\"2255\":1,\"2624\":1}}],[\"是一个布尔值\",{\"1\":{\"90\":1,\"91\":1,\"598\":1,\"599\":1,\"1108\":1,\"1109\":1}}],[\"是一个正整数\",{\"1\":{\"89\":1,\"597\":1,\"1107\":1}}],[\"是一个\",{\"1\":{\"87\":1,\"88\":1,\"91\":1,\"92\":1,\"448\":1,\"595\":1,\"596\":1,\"599\":1,\"600\":1,\"958\":1,\"1105\":1,\"1106\":1,\"1109\":1,\"1110\":1,\"1473\":1}}],[\"是一个类\",{\"1\":{\"70\":1,\"578\":1,\"1088\":1}}],[\"是一个易上手\",{\"1\":{\"58\":1,\"566\":1,\"1076\":1}}],[\"是一个现代\",{\"1\":{\"0\":1,\"12\":1,\"24\":1}}],[\"是最常用的响应规则\",{\"1\":{\"99\":1,\"607\":1,\"1117\":1}}],[\"是否启动时拉取一次发送对象列表\",{\"1\":{\"1918\":1,\"2287\":1,\"2656\":1}}],[\"是否启用文件托管\",{\"1\":{\"1917\":1,\"2286\":1,\"2655\":1}}],[\"是否启用\",{\"1\":{\"1916\":1,\"2285\":1,\"2654\":1}}],[\"是否全局使用原始消息\",{\"1\":{\"1912\":1,\"2281\":1,\"2650\":1}}],[\"是否全局启用命令自动补全\",{\"1\":{\"1911\":1,\"2280\":1,\"2649\":1}}],[\"是否全局启用输出信息自动发送\",{\"1\":{\"1909\":1,\"2278\":1,\"2647\":1}}],[\"是否读取\",{\"1\":{\"1910\":1,\"1913\":1,\"2279\":1,\"2282\":1,\"2648\":1,\"2651\":1}}],[\"是否调用时保留指令前缀\",{\"1\":{\"1900\":1,\"2269\":1,\"2638\":1}}],[\"是否允许命令后随参数\",{\"1\":{\"1900\":1,\"2269\":1,\"2638\":1}}],[\"是否允许在模板中访问私有属性\",{\"1\":{\"1632\":1,\"2001\":1,\"2370\":1}}],[\"是否匹配成功\",{\"1\":{\"1895\":1,\"2264\":1,\"2633\":1}}],[\"是否包含适配器路由的\",{\"1\":{\"1674\":1,\"2043\":1,\"2412\":1}}],[\"是否仅包含指定消息段\",{\"1\":{\"1611\":1,\"1980\":1,\"2349\":1}}],[\"是否仅包含指定类型的消息段\",{\"1\":{\"540\":1,\"1050\":1,\"1565\":1}}],[\"是否都为指定消息段\",{\"1\":{\"540\":1,\"1050\":1,\"1565\":1}}],[\"是否存在指定类型的消息段\",{\"1\":{\"540\":1,\"1050\":1,\"1565\":1}}],[\"是否存在消息段\",{\"1\":{\"540\":1,\"1050\":1,\"1565\":1}}],[\"是否存在并运行\",{\"1\":{\"508\":1,\"1018\":1,\"1533\":1}}],[\"是否自动启动\",{\"1\":{\"454\":1,\"964\":1,\"1479\":1}}],[\"是否为\",{\"1\":{\"424\":1,\"934\":1,\"1449\":1}}],[\"是否为临时事件响应器\",{\"1\":{\"242\":1,\"750\":1,\"1263\":1,\"1856\":1,\"1857\":1,\"1858\":1,\"1859\":1,\"1860\":1,\"1861\":1,\"1862\":1,\"1863\":1,\"1864\":1,\"1865\":1,\"1866\":1,\"1867\":1,\"1868\":1,\"1870\":1,\"1871\":1,\"1873\":1,\"1874\":1,\"1875\":1,\"1876\":1,\"1877\":1,\"1878\":1,\"1879\":1,\"1880\":1,\"1881\":1,\"1882\":1,\"1883\":1,\"1884\":1,\"1885\":1,\"2225\":1,\"2226\":1,\"2227\":1,\"2228\":1,\"2229\":1,\"2230\":1,\"2231\":1,\"2232\":1,\"2233\":1,\"2234\":1,\"2235\":1,\"2236\":1,\"2237\":1,\"2239\":1,\"2240\":1,\"2242\":1,\"2243\":1,\"2244\":1,\"2245\":1,\"2246\":1,\"2247\":1,\"2248\":1,\"2249\":1,\"2250\":1,\"2251\":1,\"2252\":1,\"2253\":1,\"2254\":1,\"2594\":1,\"2595\":1,\"2596\":1,\"2597\":1,\"2598\":1,\"2599\":1,\"2600\":1,\"2601\":1,\"2602\":1,\"2603\":1,\"2604\":1,\"2605\":1,\"2606\":1,\"2608\":1,\"2609\":1,\"2611\":1,\"2612\":1,\"2613\":1,\"2614\":1,\"2615\":1,\"2616\":1,\"2617\":1,\"2618\":1,\"2619\":1,\"2620\":1,\"2621\":1,\"2622\":1,\"2623\":1}}],[\"是否为临时响应器\",{\"1\":{\"93\":1,\"601\":1,\"1111\":1}}],[\"是否是一个异步生成器函数\",{\"1\":{\"405\":1,\"913\":1,\"1428\":1}}],[\"是否是一个生成器函数\",{\"1\":{\"404\":1,\"912\":1,\"1427\":1}}],[\"是否是一个\",{\"1\":{\"403\":1,\"911\":1,\"1426\":1}}],[\"是否是复杂类型\",{\"1\":{\"402\":1,\"910\":1,\"1425\":1}}],[\"是否是\",{\"1\":{\"400\":1,\"401\":2,\"908\":1,\"909\":2,\"1423\":1,\"1424\":2}}],[\"是否强制命令后必须有指定空白符\",{\"1\":{\"360\":1,\"361\":1,\"868\":1,\"869\":1,\"1383\":1,\"1384\":1,\"1865\":1,\"1870\":1,\"1882\":1,\"2234\":1,\"2239\":1,\"2251\":1,\"2603\":1,\"2608\":1,\"2620\":1}}],[\"是否忽略大小写\",{\"1\":{\"352\":1,\"353\":1,\"354\":1,\"355\":1,\"356\":1,\"357\":1,\"860\":1,\"861\":1,\"862\":1,\"863\":1,\"864\":1,\"865\":1,\"1375\":1,\"1376\":1,\"1377\":1,\"1378\":1,\"1379\":1,\"1380\":1,\"1861\":1,\"1862\":1,\"1863\":1,\"1878\":1,\"1879\":1,\"1880\":1,\"2230\":1,\"2231\":1,\"2232\":1,\"2247\":1,\"2248\":1,\"2249\":1,\"2599\":1,\"2600\":1,\"2601\":1,\"2616\":1,\"2617\":1,\"2618\":1}}],[\"是否使用\",{\"1\":{\"297\":1,\"805\":1,\"1323\":1}}],[\"是否使用缓存\",{\"1\":{\"297\":1,\"805\":1,\"1323\":1}}],[\"是否满足匹配规则\",{\"1\":{\"245\":1,\"753\":1,\"1266\":1}}],[\"是否满足权限\",{\"1\":{\"244\":1,\"752\":1,\"1265\":1}}],[\"是否阻止事件向更低优先级传递\",{\"1\":{\"1856\":1,\"1857\":1,\"1858\":1,\"1859\":1,\"1860\":1,\"1861\":1,\"1862\":1,\"1863\":1,\"1864\":1,\"1865\":1,\"1866\":1,\"1867\":1,\"1868\":1,\"1870\":1,\"1871\":1,\"1873\":1,\"1874\":1,\"1875\":1,\"1876\":1,\"1877\":1,\"1878\":1,\"1879\":1,\"1880\":1,\"1881\":1,\"1882\":1,\"1883\":1,\"1884\":1,\"1885\":1,\"2225\":1,\"2226\":1,\"2227\":1,\"2228\":1,\"2229\":1,\"2230\":1,\"2231\":1,\"2232\":1,\"2233\":1,\"2234\":1,\"2235\":1,\"2236\":1,\"2237\":1,\"2239\":1,\"2240\":1,\"2242\":1,\"2243\":1,\"2244\":1,\"2245\":1,\"2246\":1,\"2247\":1,\"2248\":1,\"2249\":1,\"2250\":1,\"2251\":1,\"2252\":1,\"2253\":1,\"2254\":1,\"2594\":1,\"2595\":1,\"2596\":1,\"2597\":1,\"2598\":1,\"2599\":1,\"2600\":1,\"2601\":1,\"2602\":1,\"2603\":1,\"2604\":1,\"2605\":1,\"2606\":1,\"2608\":1,\"2609\":1,\"2611\":1,\"2612\":1,\"2613\":1,\"2614\":1,\"2615\":1,\"2616\":1,\"2617\":1,\"2618\":1,\"2619\":1,\"2620\":1,\"2621\":1,\"2622\":1,\"2623\":1}}],[\"是否阻止事件向更低优先级的响应器传播\",{\"1\":{\"242\":1,\"750\":1,\"1263\":1}}],[\"是否阻断事件传播\",{\"1\":{\"93\":1,\"601\":1,\"1111\":1}}],[\"是否开启\",{\"1\":{\"64\":1,\"72\":1,\"572\":1,\"580\":1,\"1082\":1,\"1090\":1}}],[\"是机器人开发者能够直接获取并使用的核心对象\",{\"1\":{\"475\":1,\"985\":1,\"1500\":1}}],[\"是机器人运行的基石\",{\"1\":{\"52\":1,\"560\":1,\"1070\":1}}],[\"是机器人与平台交互的核心桥梁\",{\"1\":{\"36\":1,\"544\":1,\"1054\":1}}],[\"tutorial\",{\"0\":{\"2753\":1,\"2760\":1,\"2767\":1}}],[\"tuple\",{\"1\":{\"105\":2,\"280\":1,\"311\":1,\"319\":2,\"320\":1,\"330\":1,\"352\":1,\"353\":1,\"354\":1,\"355\":1,\"356\":1,\"357\":1,\"360\":1,\"361\":1,\"363\":6,\"364\":1,\"365\":1,\"400\":3,\"401\":6,\"408\":2,\"613\":2,\"788\":1,\"819\":1,\"827\":2,\"828\":1,\"838\":1,\"860\":1,\"861\":1,\"862\":1,\"863\":1,\"864\":1,\"865\":1,\"868\":1,\"869\":1,\"871\":6,\"872\":1,\"873\":1,\"908\":3,\"909\":6,\"916\":2,\"1123\":2,\"1300\":1,\"1332\":1,\"1340\":2,\"1341\":1,\"1356\":1,\"1375\":1,\"1376\":1,\"1377\":1,\"1378\":1,\"1379\":1,\"1380\":1,\"1383\":1,\"1384\":1,\"1386\":6,\"1387\":1,\"1388\":1,\"1423\":3,\"1424\":6,\"1431\":2,\"1605\":2,\"1637\":1,\"1642\":2,\"1643\":3,\"1861\":1,\"1862\":1,\"1863\":1,\"1865\":2,\"1866\":2,\"1868\":1,\"1869\":1,\"1870\":2,\"1871\":2,\"1878\":1,\"1879\":1,\"1880\":1,\"1882\":2,\"1883\":2,\"1885\":1,\"1974\":2,\"2006\":1,\"2011\":2,\"2012\":3,\"2230\":1,\"2231\":1,\"2232\":1,\"2234\":2,\"2235\":2,\"2237\":1,\"2238\":1,\"2239\":2,\"2240\":2,\"2247\":1,\"2248\":1,\"2249\":1,\"2251\":2,\"2252\":2,\"2254\":1,\"2343\":2,\"2375\":1,\"2380\":2,\"2381\":3,\"2599\":1,\"2600\":1,\"2601\":1,\"2603\":2,\"2604\":2,\"2606\":1,\"2607\":1,\"2608\":2,\"2609\":2,\"2616\":1,\"2617\":1,\"2618\":1,\"2620\":2,\"2621\":2,\"2623\":1,\"2689\":6,\"2704\":6,\"2719\":6}}],[\"txt\",{\"1\":{\"2690\":2,\"2705\":2,\"2720\":2}}],[\"tiger\",{\"1\":{\"1930\":1,\"2299\":1,\"2668\":1}}],[\"tips\",{\"1\":{\"1892\":2,\"2261\":2,\"2630\":2}}],[\"timezone\",{\"1\":{\"456\":2,\"966\":2,\"1481\":2}}],[\"timedelta\",{\"1\":{\"175\":1,\"242\":1,\"683\":1,\"750\":1,\"1193\":1,\"1263\":1,\"1856\":1,\"1857\":1,\"1858\":1,\"1859\":1,\"1860\":1,\"1861\":1,\"1862\":1,\"1863\":1,\"1864\":1,\"1865\":1,\"1866\":1,\"1867\":1,\"1868\":1,\"1869\":1,\"1870\":1,\"1871\":1,\"1872\":1,\"1873\":1,\"1874\":1,\"1875\":1,\"1876\":1,\"1877\":1,\"1878\":1,\"1879\":1,\"1880\":1,\"1881\":1,\"1882\":1,\"1883\":1,\"1884\":1,\"1885\":1,\"2225\":1,\"2226\":1,\"2227\":1,\"2228\":1,\"2229\":1,\"2230\":1,\"2231\":1,\"2232\":1,\"2233\":1,\"2234\":1,\"2235\":1,\"2236\":1,\"2237\":1,\"2238\":1,\"2239\":1,\"2240\":1,\"2241\":1,\"2242\":1,\"2243\":1,\"2244\":1,\"2245\":1,\"2246\":1,\"2247\":1,\"2248\":1,\"2249\":1,\"2250\":1,\"2251\":1,\"2252\":1,\"2253\":1,\"2254\":1,\"2594\":1,\"2595\":1,\"2596\":1,\"2597\":1,\"2598\":1,\"2599\":1,\"2600\":1,\"2601\":1,\"2602\":1,\"2603\":1,\"2604\":1,\"2605\":1,\"2606\":1,\"2607\":1,\"2608\":1,\"2609\":1,\"2610\":1,\"2611\":1,\"2612\":1,\"2613\":1,\"2614\":1,\"2615\":1,\"2616\":1,\"2617\":1,\"2618\":1,\"2619\":1,\"2620\":1,\"2621\":1,\"2622\":1,\"2623\":1}}],[\"time\",{\"1\":{\"91\":3,\"93\":1,\"242\":1,\"418\":2,\"421\":2,\"599\":3,\"601\":1,\"750\":1,\"928\":2,\"931\":2,\"1109\":3,\"1111\":1,\"1263\":1,\"1443\":2,\"1446\":2,\"1856\":1,\"1857\":1,\"1858\":1,\"1859\":1,\"1860\":1,\"1861\":1,\"1862\":1,\"1863\":1,\"1864\":1,\"1865\":1,\"1866\":1,\"1867\":1,\"1868\":1,\"1869\":1,\"1870\":1,\"1871\":1,\"1872\":1,\"1873\":1,\"1874\":1,\"1875\":1,\"1876\":1,\"1877\":1,\"1878\":1,\"1879\":1,\"1880\":1,\"1881\":1,\"1882\":1,\"1883\":1,\"1884\":1,\"1885\":1,\"2225\":1,\"2226\":1,\"2227\":1,\"2228\":1,\"2229\":1,\"2230\":1,\"2231\":1,\"2232\":1,\"2233\":1,\"2234\":1,\"2235\":1,\"2236\":1,\"2237\":1,\"2238\":1,\"2239\":1,\"2240\":1,\"2241\":1,\"2242\":1,\"2243\":1,\"2244\":1,\"2245\":1,\"2246\":1,\"2247\":1,\"2248\":1,\"2249\":1,\"2250\":1,\"2251\":1,\"2252\":1,\"2253\":1,\"2254\":1,\"2594\":1,\"2595\":1,\"2596\":1,\"2597\":1,\"2598\":1,\"2599\":1,\"2600\":1,\"2601\":1,\"2602\":1,\"2603\":1,\"2604\":1,\"2605\":1,\"2606\":1,\"2607\":1,\"2608\":1,\"2609\":1,\"2610\":1,\"2611\":1,\"2612\":1,\"2613\":1,\"2614\":1,\"2615\":1,\"2616\":1,\"2617\":1,\"2618\":1,\"2619\":1,\"2620\":1,\"2621\":1,\"2622\":1,\"2623\":1}}],[\"timeout=\",{\"1\":{\"175\":2,\"683\":2,\"1193\":2}}],[\"timeout\",{\"1\":{\"53\":2,\"447\":1,\"561\":2,\"957\":1,\"1071\":2,\"1472\":1,\"1652\":1,\"1659\":1,\"1698\":1,\"1704\":1,\"1728\":1,\"1753\":1,\"1931\":1,\"2021\":1,\"2028\":1,\"2067\":1,\"2073\":1,\"2097\":1,\"2122\":1,\"2300\":1,\"2390\":1,\"2397\":1,\"2436\":1,\"2442\":1,\"2473\":1,\"2478\":1,\"2669\":1}}],[\"tf\",{\"1\":{\"1634\":1,\"1635\":1,\"1636\":1,\"2003\":1,\"2004\":1,\"2005\":1,\"2372\":1,\"2373\":1,\"2374\":1}}],[\"tms\",{\"1\":{\"1603\":1,\"1604\":1,\"1605\":4,\"1606\":1,\"1607\":1,\"1608\":1,\"1610\":1,\"1611\":1,\"1612\":1,\"1613\":1,\"1614\":1,\"1624\":2,\"1629\":1,\"1972\":1,\"1973\":1,\"1974\":4,\"1975\":1,\"1976\":1,\"1977\":1,\"1979\":1,\"1980\":1,\"1981\":1,\"1982\":1,\"1983\":1,\"1993\":2,\"1998\":1,\"2341\":1,\"2342\":1,\"2343\":4,\"2344\":1,\"2345\":1,\"2346\":1,\"2348\":1,\"2349\":1,\"2350\":1,\"2351\":1,\"2352\":1,\"2362\":2,\"2367\":1}}],[\"tm\",{\"1\":{\"1602\":1,\"1622\":1,\"1624\":1,\"1629\":2,\"1632\":2,\"1971\":1,\"1991\":1,\"1993\":1,\"1998\":2,\"2001\":2,\"2340\":1,\"2360\":1,\"2362\":1,\"2367\":2,\"2370\":2}}],[\"tmp\",{\"1\":{\"436\":1,\"437\":1,\"438\":1,\"439\":1,\"440\":1,\"441\":1,\"946\":1,\"947\":1,\"948\":1,\"949\":1,\"950\":1,\"951\":1,\"1461\":1,\"1462\":1,\"1463\":1,\"1464\":1,\"1465\":1,\"1466\":1}}],[\"tsx\",{\"1\":{\"501\":1,\"1011\":1,\"1526\":1}}],[\"ts\",{\"1\":{\"501\":1,\"1011\":1,\"1526\":1}}],[\"typing\",{\"0\":{\"372\":1,\"880\":1,\"1395\":1},\"1\":{\"401\":3,\"429\":3,\"468\":2,\"470\":1,\"473\":1,\"474\":2,\"475\":2,\"476\":1,\"477\":2,\"909\":3,\"939\":3,\"978\":2,\"980\":1,\"983\":1,\"984\":2,\"985\":2,\"986\":1,\"987\":2,\"1424\":3,\"1454\":3,\"1493\":2,\"1495\":1,\"1498\":1,\"1499\":2,\"1500\":2,\"1501\":1,\"1502\":2,\"1890\":1,\"1906\":1,\"2259\":1,\"2275\":1,\"2628\":1,\"2644\":1,\"2680\":1,\"2687\":1,\"2695\":1,\"2702\":1,\"2710\":1,\"2717\":1}}],[\"typeddict\",{\"1\":{\"1900\":1,\"2269\":1,\"2638\":1}}],[\"typeadapter\",{\"1\":{\"536\":4,\"1046\":4,\"1561\":4}}],[\"typevar\",{\"1\":{\"401\":1,\"909\":1,\"1424\":1}}],[\"types\",{\"1\":{\"370\":1,\"371\":1,\"401\":1,\"878\":1,\"879\":1,\"909\":1,\"1393\":1,\"1394\":1,\"1424\":1,\"1616\":1,\"1617\":1,\"1641\":1,\"1642\":1,\"1643\":1,\"1644\":1,\"1868\":1,\"1885\":1,\"1985\":1,\"1986\":1,\"2010\":1,\"2011\":1,\"2012\":1,\"2013\":1,\"2237\":1,\"2254\":1,\"2354\":1,\"2355\":1,\"2379\":1,\"2380\":1,\"2381\":1,\"2382\":1,\"2606\":1,\"2623\":1}}],[\"typeupdater\",{\"1\":{\"242\":1,\"246\":2,\"394\":1,\"750\":1,\"754\":2,\"902\":1,\"1263\":1,\"1267\":2,\"1417\":1}}],[\"typemismatch\",{\"1\":{\"195\":1,\"703\":1,\"1215\":1}}],[\"type=\",{\"1\":{\"110\":1,\"532\":2,\"543\":6,\"618\":1,\"1042\":2,\"1053\":6,\"1128\":1,\"1557\":2,\"1568\":6}}],[\"typecheckingmode\",{\"1\":{\"10\":1,\"22\":1,\"34\":1}}],[\"type\",{\"1\":{\"10\":2,\"22\":2,\"34\":2,\"42\":2,\"58\":1,\"82\":1,\"86\":1,\"93\":1,\"103\":3,\"110\":1,\"139\":1,\"144\":1,\"156\":1,\"157\":1,\"159\":3,\"160\":3,\"161\":2,\"162\":1,\"163\":1,\"165\":1,\"216\":2,\"218\":1,\"224\":1,\"242\":4,\"276\":1,\"277\":1,\"278\":4,\"279\":1,\"280\":1,\"282\":1,\"283\":2,\"284\":1,\"285\":1,\"292\":1,\"298\":1,\"340\":1,\"341\":1,\"342\":1,\"343\":1,\"370\":1,\"371\":1,\"372\":1,\"374\":2,\"375\":1,\"376\":1,\"377\":2,\"378\":1,\"379\":2,\"400\":2,\"401\":2,\"402\":3,\"408\":2,\"473\":3,\"475\":2,\"476\":5,\"477\":4,\"478\":1,\"483\":1,\"485\":1,\"486\":1,\"487\":1,\"525\":1,\"532\":1,\"536\":2,\"541\":1,\"550\":2,\"566\":1,\"590\":1,\"594\":1,\"601\":1,\"611\":3,\"618\":1,\"647\":1,\"652\":1,\"664\":1,\"665\":1,\"667\":3,\"668\":3,\"669\":2,\"670\":1,\"671\":1,\"673\":1,\"724\":2,\"726\":1,\"732\":1,\"750\":4,\"784\":1,\"785\":1,\"786\":4,\"787\":1,\"788\":1,\"790\":1,\"791\":2,\"792\":1,\"793\":1,\"800\":1,\"806\":1,\"848\":1,\"849\":1,\"850\":1,\"851\":1,\"878\":1,\"879\":1,\"880\":1,\"882\":2,\"883\":1,\"884\":1,\"885\":2,\"886\":1,\"887\":2,\"908\":2,\"909\":2,\"910\":3,\"916\":2,\"983\":3,\"985\":2,\"986\":5,\"987\":4,\"988\":1,\"993\":1,\"995\":1,\"996\":1,\"997\":1,\"1035\":1,\"1042\":1,\"1046\":2,\"1051\":1,\"1060\":2,\"1076\":1,\"1100\":1,\"1104\":1,\"1111\":1,\"1121\":3,\"1128\":1,\"1157\":1,\"1162\":1,\"1174\":1,\"1175\":1,\"1177\":3,\"1178\":3,\"1179\":2,\"1180\":1,\"1181\":1,\"1183\":1,\"1236\":2,\"1238\":1,\"1244\":1,\"1263\":4,\"1296\":1,\"1297\":1,\"1298\":4,\"1299\":1,\"1300\":1,\"1302\":1,\"1303\":2,\"1304\":1,\"1305\":1,\"1312\":1,\"1316\":1,\"1363\":1,\"1364\":1,\"1365\":1,\"1366\":1,\"1393\":1,\"1394\":1,\"1395\":1,\"1397\":2,\"1398\":1,\"1399\":1,\"1400\":2,\"1401\":1,\"1402\":2,\"1423\":2,\"1424\":2,\"1425\":3,\"1431\":2,\"1498\":3,\"1500\":2,\"1501\":5,\"1502\":4,\"1503\":1,\"1508\":1,\"1510\":1,\"1511\":1,\"1512\":1,\"1550\":1,\"1557\":1,\"1561\":2,\"1566\":1,\"1603\":1,\"1609\":1,\"1622\":1,\"1632\":2,\"1642\":1,\"1643\":1,\"1644\":1,\"1713\":1,\"1750\":8,\"1802\":2,\"1807\":1,\"1838\":1,\"1841\":1,\"1847\":1,\"1852\":1,\"1856\":2,\"1857\":1,\"1858\":1,\"1859\":1,\"1860\":1,\"1861\":1,\"1862\":1,\"1863\":1,\"1864\":1,\"1865\":1,\"1866\":1,\"1867\":1,\"1868\":3,\"1870\":1,\"1871\":1,\"1872\":1,\"1873\":2,\"1874\":1,\"1875\":1,\"1876\":1,\"1877\":1,\"1878\":1,\"1879\":1,\"1880\":1,\"1881\":1,\"1882\":1,\"1883\":1,\"1884\":1,\"1885\":3,\"1887\":1,\"1890\":1,\"1891\":1,\"1895\":1,\"1897\":1,\"1898\":1,\"1972\":1,\"1978\":1,\"1991\":1,\"2001\":2,\"2011\":1,\"2012\":1,\"2013\":1,\"2082\":1,\"2119\":8,\"2171\":2,\"2176\":1,\"2207\":1,\"2210\":1,\"2216\":1,\"2221\":1,\"2225\":2,\"2226\":1,\"2227\":1,\"2228\":1,\"2229\":1,\"2230\":1,\"2231\":1,\"2232\":1,\"2233\":1,\"2234\":1,\"2235\":1,\"2236\":1,\"2237\":3,\"2239\":1,\"2240\":1,\"2241\":1,\"2242\":2,\"2243\":1,\"2244\":1,\"2245\":1,\"2246\":1,\"2247\":1,\"2248\":1,\"2249\":1,\"2250\":1,\"2251\":1,\"2252\":1,\"2253\":1,\"2254\":3,\"2256\":1,\"2259\":1,\"2260\":1,\"2264\":1,\"2266\":1,\"2267\":1,\"2341\":1,\"2347\":1,\"2360\":1,\"2370\":2,\"2380\":1,\"2381\":1,\"2382\":1,\"2461\":1,\"2495\":8,\"2540\":2,\"2545\":1,\"2576\":1,\"2579\":1,\"2585\":1,\"2590\":1,\"2594\":2,\"2595\":1,\"2596\":1,\"2597\":1,\"2598\":1,\"2599\":1,\"2600\":1,\"2601\":1,\"2602\":1,\"2603\":1,\"2604\":1,\"2605\":1,\"2606\":3,\"2608\":1,\"2609\":1,\"2610\":1,\"2611\":2,\"2612\":1,\"2613\":1,\"2614\":1,\"2615\":1,\"2616\":1,\"2617\":1,\"2618\":1,\"2619\":1,\"2620\":1,\"2621\":1,\"2622\":1,\"2623\":3,\"2625\":1,\"2628\":1,\"2629\":1,\"2633\":1,\"2635\":1,\"2636\":1}}],[\"tada\",{\"1\":{\"543\":4,\"1053\":4,\"1568\":4}}],[\"table=<weather>\",{\"1\":{\"2679\":2,\"2694\":2,\"2709\":2}}],[\"tablename\",{\"1\":{\"2678\":2,\"2693\":2,\"2708\":2}}],[\"table\",{\"1\":{\"519\":1,\"1029\":1,\"1544\":1,\"2678\":3,\"2679\":8,\"2693\":3,\"2694\":8,\"2708\":3,\"2709\":8}}],[\"tailwind\",{\"1\":{\"501\":1,\"1011\":1,\"1526\":1}}],[\"tailwindcss\",{\"1\":{\"501\":1,\"1011\":1,\"1526\":1}}],[\"tag\",{\"1\":{\"476\":2,\"477\":1,\"986\":2,\"987\":1,\"1501\":2,\"1502\":1}}],[\"task\",{\"1\":{\"293\":1,\"396\":1,\"470\":7,\"473\":1,\"801\":1,\"980\":7,\"983\":1,\"1313\":1,\"1495\":7,\"1498\":1}}],[\"targets\",{\"0\":{\"1918\":1,\"2287\":1,\"2656\":1}}],[\"target\",{\"1\":{\"180\":1,\"181\":1,\"264\":1,\"688\":1,\"689\":1,\"772\":1,\"1198\":1,\"1199\":1,\"1285\":1,\"1827\":1,\"2196\":1,\"2565\":1}}],[\"t\",{\"1\":{\"159\":2,\"160\":2,\"242\":4,\"244\":1,\"245\":2,\"246\":2,\"247\":2,\"248\":1,\"249\":2,\"250\":2,\"251\":2,\"259\":3,\"261\":3,\"262\":3,\"265\":3,\"267\":1,\"268\":1,\"271\":2,\"272\":2,\"278\":3,\"288\":2,\"289\":2,\"290\":2,\"291\":2,\"292\":2,\"297\":1,\"301\":1,\"333\":1,\"335\":1,\"347\":1,\"349\":2,\"363\":6,\"407\":2,\"408\":6,\"412\":1,\"429\":8,\"470\":1,\"471\":1,\"667\":2,\"668\":2,\"750\":4,\"752\":1,\"753\":2,\"754\":2,\"755\":2,\"756\":1,\"757\":2,\"758\":2,\"759\":2,\"767\":3,\"769\":3,\"770\":3,\"773\":3,\"775\":1,\"776\":1,\"779\":2,\"780\":2,\"786\":3,\"796\":2,\"797\":2,\"798\":2,\"799\":2,\"800\":2,\"805\":1,\"809\":1,\"841\":1,\"843\":1,\"855\":1,\"857\":2,\"871\":6,\"915\":2,\"916\":6,\"917\":2,\"922\":1,\"939\":8,\"980\":1,\"981\":1,\"1177\":2,\"1178\":2,\"1263\":4,\"1265\":1,\"1266\":2,\"1267\":2,\"1268\":2,\"1269\":1,\"1270\":2,\"1271\":2,\"1272\":2,\"1280\":3,\"1282\":3,\"1283\":3,\"1286\":3,\"1288\":1,\"1289\":1,\"1292\":2,\"1293\":2,\"1298\":3,\"1308\":2,\"1309\":2,\"1310\":2,\"1311\":2,\"1312\":2,\"1323\":1,\"1327\":1,\"1353\":1,\"1355\":1,\"1370\":1,\"1372\":2,\"1386\":6,\"1430\":2,\"1431\":6,\"1432\":2,\"1437\":1,\"1454\":8,\"1495\":1,\"1496\":1,\"1577\":2,\"1578\":2,\"1633\":2,\"1719\":2,\"1720\":2,\"1789\":2,\"1856\":4,\"1857\":4,\"1858\":4,\"1859\":4,\"1860\":4,\"1861\":4,\"1862\":4,\"1863\":4,\"1864\":4,\"1865\":4,\"1866\":4,\"1867\":4,\"1868\":4,\"1869\":4,\"1870\":4,\"1871\":4,\"1872\":4,\"1873\":4,\"1874\":4,\"1875\":4,\"1876\":4,\"1877\":4,\"1878\":4,\"1879\":4,\"1880\":4,\"1881\":4,\"1882\":4,\"1883\":4,\"1884\":4,\"1885\":4,\"1946\":2,\"1947\":2,\"2002\":2,\"2088\":2,\"2089\":2,\"2158\":2,\"2225\":4,\"2226\":4,\"2227\":4,\"2228\":4,\"2229\":4,\"2230\":4,\"2231\":4,\"2232\":4,\"2233\":4,\"2234\":4,\"2235\":4,\"2236\":4,\"2237\":4,\"2238\":4,\"2239\":4,\"2240\":4,\"2241\":4,\"2242\":4,\"2243\":4,\"2244\":4,\"2245\":4,\"2246\":4,\"2247\":4,\"2248\":4,\"2249\":4,\"2250\":4,\"2251\":4,\"2252\":4,\"2253\":4,\"2254\":4,\"2327\":2,\"2328\":2,\"2371\":2,\"2467\":2,\"2468\":2,\"2527\":2,\"2594\":4,\"2595\":4,\"2596\":4,\"2597\":4,\"2598\":4,\"2599\":4,\"2600\":4,\"2601\":4,\"2602\":4,\"2603\":4,\"2604\":4,\"2605\":4,\"2606\":4,\"2607\":4,\"2608\":4,\"2609\":4,\"2610\":4,\"2611\":4,\"2612\":4,\"2613\":4,\"2614\":4,\"2615\":4,\"2616\":4,\"2617\":4,\"2618\":4,\"2619\":4,\"2620\":4,\"2621\":4,\"2622\":4,\"2623\":4,\"2680\":3,\"2695\":3,\"2710\":3}}],[\"tortoise\",{\"1\":{\"2680\":1,\"2695\":1,\"2710\":1}}],[\"tool\",{\"1\":{\"478\":1,\"513\":1,\"519\":2,\"988\":1,\"1023\":1,\"1029\":2,\"1503\":1,\"1538\":1,\"1544\":2,\"1813\":2,\"2182\":2,\"2551\":2}}],[\"token\",{\"1\":{\"467\":1,\"470\":1,\"977\":1,\"980\":1,\"1492\":1,\"1495\":1}}],[\"toml\",{\"1\":{\"110\":1,\"116\":1,\"216\":2,\"463\":1,\"478\":1,\"513\":3,\"519\":6,\"618\":1,\"624\":1,\"724\":2,\"973\":1,\"988\":1,\"1023\":3,\"1029\":6,\"1128\":1,\"1134\":1,\"1236\":2,\"1488\":1,\"1503\":1,\"1538\":3,\"1544\":6,\"1802\":2,\"1813\":5,\"2171\":2,\"2182\":5,\"2540\":2,\"2551\":5}}],[\"tome\",{\"1\":{\"50\":2,\"132\":1,\"134\":1,\"476\":1,\"526\":1,\"558\":2,\"640\":1,\"642\":1,\"986\":1,\"1036\":1,\"1068\":2,\"1150\":1,\"1152\":1,\"1501\":1,\"1551\":1}}],[\"to\",{\"1\":{\"102\":3,\"106\":1,\"154\":1,\"310\":1,\"426\":1,\"470\":4,\"471\":1,\"473\":2,\"475\":1,\"515\":2,\"516\":1,\"517\":2,\"518\":2,\"519\":2,\"527\":1,\"610\":3,\"614\":1,\"662\":1,\"818\":1,\"936\":1,\"980\":4,\"981\":1,\"983\":2,\"985\":1,\"1025\":2,\"1026\":1,\"1027\":2,\"1028\":2,\"1029\":2,\"1037\":1,\"1120\":3,\"1124\":1,\"1172\":1,\"1331\":1,\"1451\":1,\"1495\":4,\"1496\":1,\"1498\":2,\"1500\":1,\"1540\":2,\"1541\":1,\"1542\":2,\"1543\":2,\"1544\":2,\"1552\":1,\"1809\":2,\"1912\":1,\"2178\":2,\"2281\":1,\"2547\":2,\"2650\":1}}],[\"term\",{\"1\":{\"478\":1,\"988\":1,\"1503\":1}}],[\"telegram\",{\"0\":{\"486\":1,\"996\":1,\"1511\":1},\"1\":{\"471\":1,\"474\":1,\"477\":1,\"486\":5,\"498\":1,\"981\":1,\"984\":1,\"987\":1,\"996\":5,\"1008\":1,\"1496\":1,\"1499\":1,\"1502\":1,\"1511\":5,\"1523\":1}}],[\"testing\",{\"0\":{\"2770\":1,\"2773\":1,\"2776\":1}}],[\"tests\",{\"1\":{\"2690\":2,\"2705\":2,\"2720\":2}}],[\"test123\",{\"1\":{\"1903\":1,\"2272\":1,\"2641\":1}}],[\"test4\",{\"1\":{\"541\":1,\"1051\":1,\"1566\":1}}],[\"test3\",{\"1\":{\"541\":3,\"1051\":3,\"1566\":3}}],[\"test2\",{\"1\":{\"541\":6,\"1051\":6,\"1566\":6}}],[\"test\",{\"1\":{\"361\":6,\"365\":2,\"494\":1,\"540\":1,\"541\":3,\"869\":6,\"873\":2,\"1004\":1,\"1050\":1,\"1051\":3,\"1384\":6,\"1388\":2,\"1519\":1,\"1565\":1,\"1566\":3,\"1889\":5,\"1893\":2,\"1903\":1,\"1904\":4,\"1905\":2,\"1907\":2,\"1934\":6,\"1935\":3,\"2258\":5,\"2262\":2,\"2272\":1,\"2273\":4,\"2274\":2,\"2276\":2,\"2303\":6,\"2304\":3,\"2627\":5,\"2631\":2,\"2641\":1,\"2642\":4,\"2643\":2,\"2645\":2,\"2672\":6,\"2673\":3,\"2690\":4,\"2705\":4,\"2720\":4}}],[\"template\",{\"1\":{\"457\":1,\"543\":6,\"967\":1,\"1053\":6,\"1482\":1,\"1568\":6,\"1632\":1,\"2001\":1,\"2370\":1}}],[\"temp\",{\"1\":{\"91\":2,\"93\":1,\"242\":1,\"599\":2,\"601\":1,\"750\":1,\"1109\":2,\"1111\":1,\"1263\":1,\"1856\":1,\"1857\":1,\"1858\":1,\"1859\":1,\"1860\":1,\"1861\":1,\"1862\":1,\"1863\":1,\"1864\":1,\"1865\":1,\"1866\":1,\"1867\":1,\"1868\":1,\"1869\":1,\"1870\":1,\"1871\":1,\"1872\":1,\"1873\":1,\"1874\":1,\"1875\":1,\"1876\":1,\"1877\":1,\"1878\":1,\"1879\":1,\"1880\":1,\"1881\":1,\"1882\":1,\"1883\":1,\"1884\":1,\"1885\":1,\"2225\":1,\"2226\":1,\"2227\":1,\"2228\":1,\"2229\":1,\"2230\":1,\"2231\":1,\"2232\":1,\"2233\":1,\"2234\":1,\"2235\":1,\"2236\":1,\"2237\":1,\"2238\":1,\"2239\":1,\"2240\":1,\"2241\":1,\"2242\":1,\"2243\":1,\"2244\":1,\"2245\":1,\"2246\":1,\"2247\":1,\"2248\":1,\"2249\":1,\"2250\":1,\"2251\":1,\"2252\":1,\"2253\":1,\"2254\":1,\"2594\":1,\"2595\":1,\"2596\":1,\"2597\":1,\"2598\":1,\"2599\":1,\"2600\":1,\"2601\":1,\"2602\":1,\"2603\":1,\"2604\":1,\"2605\":1,\"2606\":1,\"2607\":1,\"2608\":1,\"2609\":1,\"2610\":1,\"2611\":1,\"2612\":1,\"2613\":1,\"2614\":1,\"2615\":1,\"2616\":1,\"2617\":1,\"2618\":1,\"2619\":1,\"2620\":1,\"2621\":1,\"2622\":1,\"2623\":1}}],[\"text\",{\"1\":{\"49\":1,\"108\":1,\"433\":2,\"474\":2,\"477\":3,\"530\":1,\"532\":4,\"534\":2,\"536\":14,\"537\":9,\"539\":5,\"540\":5,\"541\":6,\"542\":50,\"543\":11,\"557\":1,\"616\":1,\"943\":2,\"984\":2,\"987\":3,\"1040\":1,\"1042\":4,\"1044\":2,\"1046\":14,\"1047\":9,\"1049\":5,\"1050\":5,\"1051\":6,\"1052\":50,\"1053\":11,\"1067\":1,\"1126\":1,\"1458\":2,\"1499\":2,\"1502\":3,\"1555\":1,\"1557\":4,\"1559\":2,\"1561\":14,\"1562\":9,\"1564\":5,\"1565\":5,\"1566\":6,\"1567\":50,\"1568\":11,\"1587\":1,\"1739\":1,\"1740\":1,\"1742\":1,\"1743\":1,\"1893\":1,\"1956\":1,\"2108\":1,\"2109\":1,\"2111\":1,\"2112\":1,\"2262\":1,\"2337\":1,\"2486\":1,\"2487\":1,\"2489\":1,\"2490\":1,\"2631\":1,\"2680\":3,\"2681\":6,\"2695\":3,\"2696\":6,\"2710\":3,\"2711\":6}}],[\"threshold\",{\"1\":{\"1896\":1,\"2265\":1,\"2634\":1}}],[\"third\",{\"1\":{\"542\":2,\"1052\":2,\"1567\":2}}],[\"thirdparty\",{\"1\":{\"507\":1,\"1017\":1,\"1532\":1}}],[\"this\",{\"1\":{\"11\":1,\"23\":1,\"35\":1,\"417\":7,\"927\":7,\"1442\":7}}],[\"that\",{\"1\":{\"147\":1,\"655\":1,\"1165\":1}}],[\"theme\",{\"1\":{\"501\":2,\"1011\":2,\"1526\":2}}],[\"the\",{\"1\":{\"70\":1,\"147\":1,\"149\":2,\"150\":2,\"151\":2,\"153\":2,\"154\":2,\"578\":1,\"655\":1,\"657\":2,\"658\":2,\"659\":2,\"661\":2,\"662\":2,\"1088\":1,\"1165\":1,\"1167\":2,\"1168\":2,\"1169\":2,\"1171\":2,\"1172\":2}}],[\"transport\",{\"1\":{\"447\":1,\"957\":1,\"1472\":1}}],[\"traceback\",{\"1\":{\"417\":1,\"927\":1,\"1442\":1,\"2679\":1,\"2694\":1,\"2709\":1}}],[\"trace\",{\"1\":{\"417\":2,\"927\":2,\"1442\":2}}],[\"trie\",{\"1\":{\"351\":1,\"859\":1,\"1374\":1}}],[\"trio\",{\"1\":{\"14\":1,\"26\":1}}],[\"trying\",{\"1\":{\"470\":2,\"980\":2,\"1495\":2}}],[\"try\",{\"1\":{\"121\":1,\"297\":1,\"417\":1,\"429\":5,\"466\":1,\"470\":2,\"473\":1,\"629\":1,\"805\":1,\"927\":1,\"939\":5,\"976\":1,\"980\":2,\"983\":1,\"1139\":1,\"1323\":1,\"1442\":1,\"1454\":5,\"1491\":1,\"1495\":2,\"1498\":1}}],[\"true\",{\"1\":{\"63\":1,\"90\":1,\"91\":1,\"99\":1,\"100\":2,\"121\":1,\"203\":1,\"297\":1,\"328\":1,\"346\":1,\"365\":2,\"424\":1,\"436\":1,\"437\":1,\"438\":1,\"447\":1,\"454\":1,\"470\":1,\"526\":1,\"537\":1,\"571\":1,\"598\":1,\"599\":1,\"607\":1,\"608\":2,\"629\":1,\"711\":1,\"805\":1,\"836\":1,\"854\":1,\"873\":2,\"934\":1,\"946\":1,\"947\":1,\"948\":1,\"957\":1,\"964\":1,\"980\":1,\"1036\":1,\"1047\":1,\"1081\":1,\"1108\":1,\"1109\":1,\"1117\":1,\"1118\":2,\"1139\":1,\"1223\":1,\"1323\":1,\"1351\":1,\"1369\":1,\"1388\":2,\"1449\":1,\"1461\":1,\"1462\":1,\"1463\":1,\"1472\":1,\"1479\":1,\"1495\":1,\"1551\":1,\"1562\":1,\"1674\":1,\"1887\":1,\"1890\":1,\"1894\":1,\"1930\":1,\"1931\":1,\"2043\":1,\"2256\":1,\"2259\":1,\"2263\":1,\"2299\":1,\"2300\":1,\"2412\":1,\"2625\":1,\"2628\":1,\"2632\":1,\"2668\":1,\"2669\":1}}],[\"文字以及表情等\",{\"1\":{\"543\":1,\"1053\":1,\"1568\":1}}],[\"文本文件\",{\"1\":{\"506\":1,\"1016\":1,\"1531\":1}}],[\"文件编码\",{\"1\":{\"1812\":1,\"1813\":1,\"2181\":1,\"2182\":1,\"2550\":1,\"2551\":1}}],[\"文件路径\",{\"1\":{\"1812\":1,\"1813\":1,\"2181\":1,\"2182\":1,\"2550\":1,\"2551\":1}}],[\"文件加载插件\",{\"1\":{\"518\":1,\"519\":1,\"1028\":1,\"1029\":1,\"1543\":1,\"1544\":1}}],[\"文件夹路径\",{\"1\":{\"1810\":1,\"2179\":1,\"2548\":1}}],[\"文件夹导入的插件\",{\"1\":{\"1803\":1,\"2172\":1,\"2541\":1}}],[\"文件夹\",{\"1\":{\"512\":1,\"1022\":1,\"1537\":1,\"1819\":1,\"1843\":1,\"2188\":1,\"2212\":1,\"2557\":1,\"2581\":1}}],[\"文件夹中配置文件添加以下内容\",{\"1\":{\"10\":1,\"22\":1,\"34\":1}}],[\"文件即可以作为一个插件\",{\"1\":{\"511\":1,\"1021\":1,\"1536\":1}}],[\"文件\",{\"1\":{\"504\":1,\"507\":2,\"511\":1,\"1014\":1,\"1017\":2,\"1021\":1,\"1529\":1,\"1532\":2,\"1536\":1,\"1813\":1,\"1843\":1,\"2182\":1,\"2212\":1,\"2551\":1,\"2581\":1,\"2679\":1,\"2694\":1,\"2709\":1}}],[\"文件存储\",{\"1\":{\"503\":1,\"1013\":1,\"1528\":1}}],[\"文件配置\",{\"1\":{\"224\":1,\"732\":1,\"1244\":1}}],[\"文件中的加载插件部分\",{\"1\":{\"513\":1,\"1023\":1,\"1538\":1}}],[\"文件中的\",{\"1\":{\"513\":1,\"518\":1,\"519\":1,\"1023\":1,\"1028\":1,\"1029\":1,\"1538\":1,\"1543\":1,\"1544\":1,\"1812\":1,\"2181\":1,\"2550\":1}}],[\"文件中编写\",{\"1\":{\"512\":1,\"1022\":1,\"1537\":1}}],[\"文件中读取环境信息\",{\"1\":{\"224\":1,\"732\":1,\"1244\":1}}],[\"文件中\",{\"1\":{\"165\":1,\"673\":1,\"1183\":1}}],[\"文件中加载配置\",{\"1\":{\"164\":1,\"672\":1,\"1182\":1}}],[\"文档来达到你想要的效果\",{\"1\":{\"543\":1,\"1053\":1,\"1568\":1}}],[\"文档来了解如何使用\",{\"1\":{\"433\":1,\"943\":1,\"1458\":1}}],[\"文档通俗易懂\",{\"1\":{\"495\":1,\"1005\":1,\"1520\":1}}],[\"文档分为基础与进阶两个部分\",{\"1\":{\"495\":1,\"1005\":1,\"1520\":1}}],[\"文档需符合风格指南\",{\"1\":{\"489\":1,\"999\":1,\"1514\":1}}],[\"文档生成工具\",{\"1\":{\"483\":1,\"993\":1,\"1508\":1}}],[\"文档改为直接编写在\",{\"1\":{\"483\":1,\"993\":1,\"1508\":1}}],[\"文档自动生成\",{\"0\":{\"483\":1,\"993\":1,\"1508\":1}}],[\"文档中与旧的\",{\"1\":{\"482\":1,\"992\":1,\"1507\":1}}],[\"文档中的\",{\"0\":{\"482\":1,\"992\":1,\"1507\":1}}],[\"文档和\",{\"1\":{\"482\":1,\"992\":1,\"1507\":1}}],[\"文档有部分过时内容需要更新\",{\"1\":{\"482\":1,\"992\":1,\"1507\":1}}],[\"文档的\",{\"1\":{\"482\":1,\"992\":1,\"1507\":1}}],[\"文档地址\",{\"1\":{\"61\":1,\"62\":1,\"569\":1,\"570\":1,\"1079\":1,\"1080\":1}}],[\"文档等功能\",{\"1\":{\"58\":1,\"566\":1,\"1076\":1}}],[\"文档\",{\"1\":{\"4\":1,\"16\":1,\"28\":1,\"61\":1,\"62\":1,\"64\":1,\"100\":1,\"120\":1,\"121\":1,\"124\":1,\"162\":1,\"226\":1,\"417\":1,\"418\":1,\"473\":1,\"483\":4,\"569\":1,\"570\":1,\"572\":1,\"608\":1,\"628\":1,\"629\":1,\"632\":1,\"670\":1,\"734\":1,\"927\":1,\"928\":1,\"983\":1,\"993\":4,\"1037\":1,\"1079\":1,\"1080\":1,\"1082\":1,\"1118\":1,\"1138\":1,\"1139\":1,\"1142\":1,\"1180\":1,\"1246\":1,\"1442\":1,\"1443\":1,\"1498\":1,\"1508\":4,\"1552\":1,\"1670\":1,\"1929\":1,\"2039\":1,\"2298\":1,\"2408\":1,\"2667\":1}}],[\"branches\",{\"1\":{\"2690\":2,\"2705\":2,\"2720\":2}}],[\"branch\",{\"1\":{\"2679\":3,\"2694\":3,\"2709\":3}}],[\"bracket\",{\"1\":{\"1887\":2,\"1896\":1,\"1907\":1,\"1915\":2,\"2256\":2,\"2265\":1,\"2276\":1,\"2284\":2,\"2625\":2,\"2634\":1,\"2645\":1,\"2653\":2}}],[\"breadcrumb\",{\"1\":{\"447\":1,\"957\":1,\"1472\":1}}],[\"breadcrumbs\",{\"1\":{\"447\":1,\"957\":1,\"1472\":1}}],[\"binds=\",{\"1\":{\"1930\":1,\"2299\":1,\"2668\":1}}],[\"bind\",{\"0\":{\"1930\":1,\"2299\":1,\"2668\":1},\"1\":{\"1902\":1,\"1930\":1,\"1932\":1,\"2271\":1,\"2299\":1,\"2301\":1,\"2640\":1,\"2668\":1,\"2670\":1,\"2679\":2,\"2694\":2,\"2709\":2}}],[\"binary\",{\"1\":{\"1741\":1,\"1744\":1,\"2110\":1,\"2113\":1,\"2488\":1,\"2491\":1}}],[\"bin\",{\"1\":{\"505\":1,\"1015\":1,\"1530\":1}}],[\"bg\",{\"1\":{\"470\":3,\"980\":3,\"1495\":3}}],[\"best\",{\"0\":{\"2749\":1,\"2756\":1,\"2763\":1}}],[\"begin\",{\"1\":{\"2680\":1,\"2695\":1,\"2710\":1}}],[\"beta\",{\"1\":{\"493\":1,\"1003\":1,\"1518\":1}}],[\"before\",{\"1\":{\"447\":2,\"957\":2,\"1472\":2}}],[\"bell\",{\"1\":{\"422\":1,\"932\":1,\"1447\":1}}],[\"baz\",{\"1\":{\"1887\":2,\"1890\":5,\"1893\":3,\"1903\":1,\"1914\":1,\"2256\":2,\"2259\":5,\"2262\":3,\"2272\":1,\"2283\":1,\"2625\":2,\"2628\":5,\"2631\":3,\"2641\":1,\"2652\":1}}],[\"barabc\",{\"1\":{\"1903\":1,\"2272\":1,\"2641\":1}}],[\"barbaz\",{\"1\":{\"1887\":2,\"2256\":2,\"2625\":2}}],[\"bar\",{\"1\":{\"426\":2,\"936\":2,\"1451\":2,\"1887\":10,\"1890\":5,\"1893\":4,\"1895\":3,\"1896\":1,\"1898\":1,\"1903\":1,\"1905\":2,\"1907\":3,\"1914\":1,\"2256\":10,\"2259\":5,\"2262\":4,\"2264\":3,\"2265\":1,\"2267\":1,\"2272\":1,\"2274\":2,\"2276\":3,\"2283\":1,\"2625\":10,\"2628\":5,\"2631\":4,\"2633\":3,\"2634\":1,\"2636\":1,\"2641\":1,\"2643\":2,\"2645\":3,\"2652\":1}}],[\"base\",{\"1\":{\"1922\":1,\"1926\":2,\"2291\":1,\"2295\":2,\"2660\":1,\"2664\":2}}],[\"basepattern\",{\"1\":{\"1887\":2,\"1890\":5,\"2256\":2,\"2259\":5,\"2625\":2,\"2628\":5}}],[\"baserequest\",{\"1\":{\"1689\":1,\"1780\":1,\"2058\":1,\"2149\":1,\"2427\":1,\"2518\":1}}],[\"baseexceptiongroup\",{\"1\":{\"918\":1,\"1433\":1}}],[\"baseevent\",{\"1\":{\"476\":2,\"986\":2,\"1501\":2}}],[\"basemessagesegment\",{\"1\":{\"477\":2,\"987\":2,\"1502\":2}}],[\"basemessage\",{\"1\":{\"477\":2,\"987\":2,\"1502\":2}}],[\"basemodel\",{\"1\":{\"156\":1,\"157\":1,\"158\":1,\"467\":2,\"473\":1,\"664\":1,\"665\":1,\"666\":1,\"977\":2,\"983\":1,\"1174\":1,\"1175\":1,\"1176\":1,\"1492\":2,\"1498\":1,\"1838\":1,\"2207\":1,\"2576\":1}}],[\"basebot\",{\"1\":{\"475\":2,\"985\":2,\"1500\":2}}],[\"baseadapter\",{\"1\":{\"468\":2,\"470\":1,\"471\":1,\"472\":1,\"473\":1,\"474\":1,\"978\":2,\"980\":1,\"981\":1,\"982\":1,\"983\":1,\"984\":1,\"1493\":2,\"1495\":1,\"1496\":1,\"1497\":1,\"1498\":1,\"1499\":1}}],[\"basefieldinfo\",{\"1\":{\"155\":1,\"663\":1,\"1173\":1}}],[\"based\",{\"1\":{\"58\":1,\"566\":1,\"1076\":1}}],[\"basicconfig\",{\"1\":{\"419\":1,\"929\":1,\"1444\":1}}],[\"basic\",{\"1\":{\"10\":2,\"22\":2,\"34\":2}}],[\"blacklist\",{\"1\":{\"425\":1,\"935\":1,\"1450\":1}}],[\"blacklisted\",{\"1\":{\"425\":2,\"935\":2,\"1450\":2}}],[\"blockly\",{\"1\":{\"503\":3,\"1013\":3,\"1528\":3}}],[\"block=true\",{\"1\":{\"203\":1,\"426\":1,\"527\":1,\"711\":1,\"936\":1,\"1037\":1,\"1223\":1,\"1451\":1,\"1552\":1}}],[\"block\",{\"1\":{\"90\":1,\"93\":1,\"203\":1,\"242\":1,\"598\":1,\"601\":1,\"711\":1,\"750\":1,\"1108\":1,\"1111\":1,\"1223\":1,\"1263\":1,\"1856\":1,\"1857\":1,\"1858\":1,\"1859\":1,\"1860\":1,\"1861\":1,\"1862\":1,\"1863\":1,\"1864\":1,\"1865\":1,\"1866\":1,\"1867\":1,\"1868\":1,\"1869\":1,\"1870\":1,\"1871\":1,\"1872\":1,\"1873\":1,\"1874\":1,\"1875\":1,\"1876\":1,\"1877\":1,\"1878\":1,\"1879\":1,\"1880\":1,\"1881\":1,\"1882\":1,\"1883\":1,\"1884\":1,\"1885\":1,\"2225\":1,\"2226\":1,\"2227\":1,\"2228\":1,\"2229\":1,\"2230\":1,\"2231\":1,\"2232\":1,\"2233\":1,\"2234\":1,\"2235\":1,\"2236\":1,\"2237\":1,\"2238\":1,\"2239\":1,\"2240\":1,\"2241\":1,\"2242\":1,\"2243\":1,\"2244\":1,\"2245\":1,\"2246\":1,\"2247\":1,\"2248\":1,\"2249\":1,\"2250\":1,\"2251\":1,\"2252\":1,\"2253\":1,\"2254\":1,\"2594\":1,\"2595\":1,\"2596\":1,\"2597\":1,\"2598\":1,\"2599\":1,\"2600\":1,\"2601\":1,\"2602\":1,\"2603\":1,\"2604\":1,\"2605\":1,\"2606\":1,\"2607\":1,\"2608\":1,\"2609\":1,\"2610\":1,\"2611\":1,\"2612\":1,\"2613\":1,\"2614\":1,\"2615\":1,\"2616\":1,\"2617\":1,\"2618\":1,\"2619\":1,\"2620\":1,\"2621\":1,\"2622\":1,\"2623\":1}}],[\"b\",{\"1\":{\"117\":5,\"625\":5,\"1135\":5}}],[\"bytes\",{\"1\":{\"160\":1,\"474\":4,\"668\":1,\"984\":4,\"1178\":1,\"1499\":4,\"1665\":1,\"1667\":1,\"1692\":1,\"1694\":1,\"1696\":1,\"1728\":1,\"1739\":2,\"1741\":1,\"1742\":2,\"1744\":1,\"1783\":1,\"1785\":1,\"1787\":1,\"1795\":1,\"1797\":1,\"1799\":1,\"2034\":1,\"2036\":1,\"2061\":1,\"2063\":1,\"2065\":1,\"2097\":1,\"2108\":2,\"2110\":1,\"2111\":2,\"2113\":1,\"2152\":1,\"2154\":1,\"2156\":1,\"2164\":1,\"2166\":1,\"2168\":1,\"2403\":1,\"2405\":1,\"2430\":1,\"2432\":1,\"2434\":1,\"2478\":1,\"2486\":2,\"2488\":1,\"2489\":2,\"2491\":1,\"2521\":1,\"2523\":1,\"2525\":1,\"2533\":1,\"2535\":1,\"2537\":1}}],[\"by\",{\"1\":{\"111\":1,\"158\":1,\"216\":2,\"619\":1,\"666\":1,\"724\":2,\"1129\":1,\"1176\":1,\"1236\":2,\"2679\":5,\"2694\":5,\"2709\":5}}],[\"builtin\",{\"1\":{\"216\":4,\"507\":1,\"513\":1,\"520\":1,\"521\":1,\"724\":4,\"1017\":1,\"1023\":1,\"1030\":1,\"1031\":1,\"1236\":4,\"1532\":1,\"1538\":1,\"1545\":1,\"1546\":1,\"1802\":4,\"1897\":2,\"1898\":1,\"2171\":4,\"2266\":2,\"2267\":1,\"2540\":4,\"2635\":2,\"2636\":1}}],[\"building\",{\"1\":{\"58\":1,\"79\":1,\"566\":1,\"587\":1,\"1076\":1,\"1097\":1}}],[\"bug\",{\"1\":{\"3\":1,\"15\":1,\"27\":1}}],[\"bootstrap\",{\"1\":{\"513\":1,\"1023\":1,\"1538\":1}}],[\"bool\",{\"1\":{\"50\":1,\"63\":1,\"64\":1,\"72\":1,\"99\":1,\"158\":4,\"239\":1,\"240\":1,\"242\":2,\"244\":1,\"245\":1,\"264\":1,\"297\":2,\"301\":1,\"302\":1,\"304\":1,\"306\":1,\"310\":1,\"333\":1,\"334\":1,\"335\":1,\"347\":1,\"348\":1,\"349\":1,\"352\":1,\"353\":1,\"354\":1,\"355\":1,\"356\":1,\"357\":1,\"360\":1,\"361\":1,\"374\":1,\"375\":1,\"376\":1,\"378\":1,\"379\":1,\"391\":1,\"392\":1,\"400\":1,\"401\":1,\"402\":1,\"403\":1,\"404\":1,\"405\":1,\"424\":2,\"425\":2,\"426\":1,\"427\":1,\"447\":4,\"454\":1,\"476\":1,\"477\":1,\"558\":1,\"571\":1,\"572\":1,\"580\":1,\"607\":1,\"666\":4,\"747\":1,\"748\":1,\"750\":2,\"752\":1,\"753\":1,\"772\":1,\"805\":2,\"809\":1,\"810\":1,\"812\":1,\"814\":1,\"818\":1,\"841\":1,\"842\":1,\"843\":1,\"855\":1,\"856\":1,\"857\":1,\"860\":1,\"861\":1,\"862\":1,\"863\":1,\"864\":1,\"865\":1,\"868\":1,\"869\":1,\"882\":1,\"883\":1,\"884\":1,\"886\":1,\"887\":1,\"899\":1,\"900\":1,\"908\":1,\"909\":1,\"910\":1,\"911\":1,\"912\":1,\"913\":1,\"934\":2,\"935\":2,\"936\":1,\"937\":1,\"957\":4,\"964\":1,\"986\":1,\"987\":1,\"1068\":1,\"1081\":1,\"1082\":1,\"1090\":1,\"1117\":1,\"1176\":4,\"1260\":1,\"1261\":1,\"1263\":2,\"1265\":1,\"1266\":1,\"1285\":1,\"1321\":1,\"1322\":1,\"1323\":2,\"1325\":1,\"1327\":1,\"1331\":1,\"1353\":1,\"1354\":1,\"1355\":1,\"1370\":1,\"1371\":1,\"1372\":1,\"1375\":1,\"1376\":1,\"1377\":1,\"1378\":1,\"1379\":1,\"1380\":1,\"1383\":1,\"1384\":1,\"1397\":1,\"1398\":1,\"1399\":1,\"1401\":1,\"1402\":1,\"1414\":1,\"1415\":1,\"1423\":1,\"1424\":1,\"1425\":1,\"1426\":1,\"1427\":1,\"1428\":1,\"1449\":2,\"1450\":2,\"1451\":1,\"1452\":1,\"1472\":4,\"1479\":1,\"1501\":1,\"1502\":1,\"1588\":1,\"1606\":1,\"1607\":1,\"1611\":1,\"1631\":1,\"1632\":1,\"1640\":1,\"1674\":1,\"1675\":1,\"1736\":1,\"1763\":1,\"1766\":1,\"1856\":2,\"1857\":2,\"1858\":2,\"1859\":2,\"1860\":2,\"1861\":3,\"1862\":3,\"1863\":3,\"1864\":2,\"1865\":3,\"1866\":2,\"1867\":2,\"1868\":2,\"1869\":3,\"1870\":3,\"1871\":2,\"1872\":2,\"1873\":2,\"1874\":2,\"1875\":2,\"1876\":2,\"1877\":2,\"1878\":3,\"1879\":3,\"1880\":3,\"1881\":2,\"1882\":3,\"1883\":2,\"1884\":2,\"1885\":2,\"1887\":2,\"1890\":1,\"1900\":2,\"1909\":1,\"1910\":1,\"1911\":1,\"1912\":1,\"1913\":1,\"1916\":1,\"1917\":1,\"1918\":1,\"1957\":1,\"1975\":1,\"1976\":1,\"1980\":1,\"2000\":1,\"2001\":1,\"2009\":1,\"2043\":1,\"2044\":1,\"2105\":1,\"2132\":1,\"2135\":1,\"2225\":2,\"2226\":2,\"2227\":2,\"2228\":2,\"2229\":2,\"2230\":3,\"2231\":3,\"2232\":3,\"2233\":2,\"2234\":3,\"2235\":2,\"2236\":2,\"2237\":2,\"2238\":3,\"2239\":3,\"2240\":2,\"2241\":2,\"2242\":2,\"2243\":2,\"2244\":2,\"2245\":2,\"2246\":2,\"2247\":3,\"2248\":3,\"2249\":3,\"2250\":2,\"2251\":3,\"2252\":2,\"2253\":2,\"2254\":2,\"2256\":2,\"2259\":1,\"2269\":2,\"2278\":1,\"2279\":1,\"2280\":1,\"2281\":1,\"2282\":1,\"2285\":1,\"2286\":1,\"2287\":1,\"2338\":1,\"2344\":1,\"2345\":1,\"2349\":1,\"2369\":1,\"2370\":1,\"2378\":1,\"2412\":1,\"2413\":1,\"2483\":1,\"2501\":1,\"2504\":1,\"2594\":2,\"2595\":2,\"2596\":2,\"2597\":2,\"2598\":2,\"2599\":3,\"2600\":3,\"2601\":3,\"2602\":2,\"2603\":3,\"2604\":2,\"2605\":2,\"2606\":2,\"2607\":3,\"2608\":3,\"2609\":2,\"2610\":2,\"2611\":2,\"2612\":2,\"2613\":2,\"2614\":2,\"2615\":2,\"2616\":3,\"2617\":3,\"2618\":3,\"2619\":2,\"2620\":3,\"2621\":2,\"2622\":2,\"2623\":2,\"2625\":2,\"2628\":1,\"2638\":2,\"2647\":1,\"2648\":1,\"2649\":1,\"2650\":1,\"2651\":1,\"2654\":1,\"2655\":1,\"2656\":1}}],[\"bodies\",{\"1\":{\"447\":1,\"957\":1,\"1472\":1}}],[\"body\",{\"1\":{\"53\":1,\"561\":1,\"1071\":1}}],[\"bound\",{\"1\":{\"401\":1,\"909\":1,\"1424\":1}}],[\"botdisconnectionhook\",{\"1\":{\"1720\":2,\"2089\":2,\"2468\":2}}],[\"botconnectionhook\",{\"1\":{\"1719\":2,\"2088\":2,\"2467\":2}}],[\"botparam\",{\"1\":{\"383\":1,\"384\":1,\"387\":1,\"388\":1,\"389\":1,\"390\":1,\"391\":1,\"392\":1,\"394\":1,\"395\":1,\"891\":1,\"892\":1,\"895\":1,\"896\":1,\"897\":1,\"898\":1,\"899\":1,\"900\":1,\"902\":1,\"903\":1,\"1406\":1,\"1407\":1,\"1410\":1,\"1411\":1,\"1412\":1,\"1413\":1,\"1414\":1,\"1415\":1,\"1417\":1,\"1418\":1}}],[\"both\",{\"1\":{\"78\":1,\"586\":1,\"1096\":1}}],[\"bots\",{\"1\":{\"40\":6,\"222\":2,\"223\":2,\"548\":6,\"730\":2,\"731\":2,\"1058\":6,\"1242\":2,\"1243\":2,\"1934\":1,\"1935\":1,\"2303\":1,\"2304\":1,\"2672\":1,\"2673\":1}}],[\"bot\",{\"0\":{\"40\":1,\"129\":1,\"130\":1,\"472\":1,\"475\":1,\"548\":1,\"637\":1,\"638\":1,\"982\":1,\"985\":1,\"1058\":1,\"1147\":1,\"1148\":1,\"1497\":1,\"1500\":1},\"1\":{\"37\":2,\"40\":9,\"64\":1,\"72\":1,\"110\":2,\"111\":1,\"113\":1,\"129\":5,\"130\":5,\"132\":1,\"133\":1,\"134\":1,\"135\":1,\"136\":6,\"137\":5,\"215\":1,\"222\":11,\"223\":4,\"244\":3,\"245\":3,\"252\":2,\"253\":2,\"254\":2,\"255\":2,\"256\":2,\"257\":2,\"267\":2,\"268\":2,\"270\":2,\"271\":2,\"272\":2,\"292\":3,\"293\":4,\"299\":2,\"335\":3,\"349\":3,\"383\":2,\"384\":2,\"385\":2,\"386\":3,\"387\":1,\"388\":1,\"389\":1,\"390\":1,\"391\":1,\"392\":1,\"394\":1,\"395\":1,\"422\":9,\"423\":1,\"426\":1,\"427\":2,\"462\":1,\"463\":1,\"465\":1,\"468\":1,\"470\":1,\"472\":18,\"473\":8,\"474\":6,\"475\":8,\"482\":2,\"486\":1,\"498\":1,\"507\":2,\"508\":2,\"513\":15,\"514\":1,\"515\":1,\"516\":1,\"526\":2,\"527\":1,\"543\":1,\"545\":2,\"548\":9,\"572\":1,\"580\":1,\"618\":2,\"619\":1,\"621\":1,\"637\":5,\"638\":5,\"640\":1,\"641\":1,\"642\":1,\"643\":1,\"644\":6,\"645\":5,\"723\":1,\"730\":11,\"731\":4,\"752\":3,\"753\":3,\"760\":2,\"761\":2,\"762\":2,\"763\":2,\"764\":2,\"765\":2,\"775\":2,\"776\":2,\"778\":2,\"779\":2,\"780\":2,\"800\":3,\"801\":4,\"807\":2,\"843\":3,\"857\":3,\"891\":2,\"892\":2,\"893\":2,\"894\":3,\"895\":1,\"896\":1,\"897\":1,\"898\":1,\"899\":1,\"900\":1,\"902\":1,\"903\":1,\"932\":9,\"933\":1,\"936\":1,\"937\":2,\"972\":1,\"973\":1,\"975\":1,\"978\":1,\"980\":1,\"982\":18,\"983\":8,\"984\":6,\"985\":8,\"992\":2,\"996\":1,\"1008\":1,\"1017\":2,\"1018\":2,\"1023\":15,\"1024\":1,\"1025\":1,\"1026\":1,\"1036\":2,\"1037\":1,\"1053\":1,\"1055\":2,\"1058\":9,\"1082\":1,\"1090\":1,\"1128\":2,\"1129\":1,\"1131\":1,\"1147\":5,\"1148\":5,\"1150\":1,\"1151\":1,\"1152\":1,\"1153\":1,\"1154\":6,\"1155\":5,\"1235\":1,\"1242\":11,\"1243\":4,\"1265\":3,\"1266\":3,\"1273\":2,\"1274\":2,\"1275\":2,\"1276\":2,\"1277\":2,\"1278\":2,\"1288\":2,\"1289\":2,\"1291\":2,\"1292\":2,\"1293\":2,\"1312\":3,\"1313\":4,\"1320\":2,\"1355\":3,\"1372\":3,\"1406\":2,\"1407\":2,\"1408\":2,\"1409\":3,\"1410\":1,\"1411\":1,\"1412\":1,\"1413\":1,\"1414\":1,\"1415\":1,\"1417\":1,\"1418\":1,\"1447\":9,\"1448\":1,\"1451\":1,\"1452\":2,\"1487\":1,\"1488\":1,\"1490\":1,\"1493\":1,\"1495\":1,\"1497\":18,\"1498\":8,\"1499\":6,\"1500\":8,\"1507\":2,\"1511\":1,\"1523\":1,\"1532\":2,\"1533\":2,\"1538\":15,\"1539\":1,\"1540\":1,\"1541\":1,\"1551\":2,\"1552\":1,\"1568\":1,\"1570\":1,\"1575\":3,\"1577\":2,\"1578\":2,\"1591\":2,\"1594\":5,\"1595\":5,\"1712\":2,\"1719\":3,\"1720\":3,\"1934\":5,\"1935\":1,\"1939\":1,\"1944\":3,\"1946\":2,\"1947\":2,\"1960\":2,\"1963\":5,\"1964\":5,\"2081\":2,\"2088\":3,\"2089\":3,\"2303\":5,\"2304\":1,\"2310\":2,\"2313\":5,\"2314\":5,\"2320\":1,\"2325\":3,\"2327\":2,\"2328\":2,\"2460\":2,\"2467\":3,\"2468\":3,\"2672\":5,\"2673\":1}}],[\"mymysql\",{\"1\":{\"2690\":4,\"2705\":4,\"2720\":4}}],[\"mysql\",{\"1\":{\"2690\":26,\"2705\":26,\"2720\":26}}],[\"mysql+aiomysql\",{\"1\":{\"2690\":2,\"2705\":2,\"2720\":2}}],[\"mydatabase\",{\"1\":{\"1930\":1,\"2299\":1,\"2668\":1}}],[\"mydup\",{\"1\":{\"1906\":2,\"2275\":2,\"2644\":2}}],[\"multivar\",{\"0\":{\"1891\":1,\"2260\":1,\"2629\":1},\"1\":{\"1891\":6,\"2260\":6,\"2629\":6}}],[\"mutablemapping\",{\"1\":{\"82\":1,\"282\":1,\"590\":1,\"790\":1,\"1100\":1,\"1302\":1}}],[\"mnixry\",{\"1\":{\"494\":1,\"497\":1,\"503\":1,\"1004\":1,\"1007\":1,\"1013\":1,\"1519\":1,\"1522\":1,\"1528\":1}}],[\"m\",{\"1\":{\"175\":1,\"282\":1,\"421\":1,\"505\":1,\"683\":1,\"790\":1,\"931\":1,\"1015\":1,\"1193\":1,\"1302\":1,\"1446\":1,\"1530\":1,\"1750\":2,\"2119\":2,\"2495\":2,\"2679\":2,\"2694\":2,\"2709\":2}}],[\"mm\",{\"1\":{\"175\":2,\"418\":4,\"683\":2,\"928\":4,\"1193\":2,\"1443\":4}}],[\"most\",{\"1\":{\"2679\":1,\"2694\":1,\"2709\":1}}],[\"mockapiexception\",{\"1\":{\"136\":3,\"137\":3,\"195\":1,\"644\":3,\"645\":3,\"703\":1,\"1154\":3,\"1155\":3,\"1215\":1}}],[\"moduletype\",{\"1\":{\"242\":1,\"750\":1,\"1263\":1,\"1816\":1,\"1827\":1,\"1829\":1,\"1830\":1,\"1844\":1,\"1854\":1,\"2185\":1,\"2196\":1,\"2198\":1,\"2199\":1,\"2213\":1,\"2223\":1,\"2554\":1,\"2565\":1,\"2567\":1,\"2568\":1,\"2582\":1,\"2592\":1}}],[\"module\",{\"1\":{\"111\":3,\"216\":2,\"242\":1,\"510\":1,\"619\":3,\"724\":2,\"750\":1,\"1020\":1,\"1129\":3,\"1236\":2,\"1263\":1,\"1535\":1,\"1804\":2,\"1809\":1,\"1811\":1,\"1830\":1,\"2173\":2,\"2178\":1,\"2180\":1,\"2199\":1,\"2542\":2,\"2547\":1,\"2549\":1,\"2568\":1}}],[\"models\",{\"1\":{\"2689\":9,\"2704\":9,\"2719\":9}}],[\"model\",{\"0\":{\"1831\":1,\"2200\":1,\"2569\":1,\"2687\":1,\"2702\":1,\"2717\":1},\"1\":{\"156\":2,\"157\":2,\"158\":1,\"476\":2,\"664\":2,\"665\":2,\"666\":1,\"986\":2,\"1174\":2,\"1175\":2,\"1176\":1,\"1501\":2,\"2678\":3,\"2681\":1,\"2684\":2,\"2685\":2,\"2687\":2,\"2688\":5,\"2689\":31,\"2693\":3,\"2696\":1,\"2699\":2,\"2700\":2,\"2702\":2,\"2703\":5,\"2704\":31,\"2708\":3,\"2711\":1,\"2714\":2,\"2715\":2,\"2717\":2,\"2718\":5,\"2719\":31}}],[\"modelfield\",{\"1\":{\"148\":1,\"152\":1,\"156\":1,\"299\":1,\"300\":1,\"305\":1,\"656\":1,\"660\":1,\"664\":1,\"807\":1,\"808\":1,\"813\":1,\"1166\":1,\"1170\":1,\"1174\":1,\"1320\":1,\"1324\":1,\"1326\":1,\"1642\":1,\"1650\":1,\"2011\":1,\"2019\":1,\"2380\":1,\"2388\":1}}],[\"modern\",{\"1\":{\"58\":1,\"566\":1,\"1076\":1}}],[\"mode\",{\"1\":{\"10\":1,\"22\":1,\"34\":1}}],[\"matrix\",{\"1\":{\"2690\":10,\"2705\":10,\"2720\":10}}],[\"match=true\",{\"1\":{\"1904\":1,\"2273\":1,\"2642\":1}}],[\"match=\",{\"1\":{\"1886\":1,\"2255\":1,\"2624\":1}}],[\"matched=true\",{\"1\":{\"1886\":2,\"2255\":2,\"2624\":2}}],[\"matched\",{\"1\":{\"190\":1,\"698\":1,\"1210\":1,\"1886\":1,\"1895\":4,\"1903\":1,\"1904\":1,\"2255\":1,\"2264\":4,\"2272\":1,\"2273\":1,\"2624\":1,\"2633\":4,\"2641\":1,\"2642\":1}}],[\"matcherparam\",{\"1\":{\"389\":1,\"390\":1,\"394\":1,\"395\":1,\"897\":1,\"898\":1,\"902\":1,\"903\":1,\"1412\":1,\"1413\":1,\"1417\":1,\"1418\":1}}],[\"matcherprovider\",{\"1\":{\"82\":4,\"284\":1,\"590\":4,\"792\":1,\"1100\":4,\"1304\":1}}],[\"matcherexception\",{\"1\":{\"195\":1,\"703\":1,\"1215\":1}}],[\"matcher2\",{\"1\":{\"106\":1,\"614\":1,\"1124\":1}}],[\"matcher1\",{\"1\":{\"106\":1,\"614\":1,\"1124\":1}}],[\"matchergroup\",{\"1\":{\"106\":3,\"216\":2,\"614\":3,\"724\":2,\"1124\":3,\"1236\":2,\"1802\":2,\"2171\":2,\"2540\":2}}],[\"matchersource\",{\"1\":{\"242\":1,\"750\":1,\"1263\":1,\"1855\":1,\"2224\":1,\"2593\":1}}],[\"matchers>\",{\"1\":{\"242\":1,\"750\":1,\"1263\":1}}],[\"matchers\",{\"1\":{\"83\":4,\"242\":1,\"285\":1,\"591\":4,\"750\":1,\"793\":1,\"1101\":4,\"1263\":1,\"1305\":1}}],[\"matcher\",{\"0\":{\"232\":1,\"740\":1,\"1252\":1},\"1\":{\"82\":2,\"83\":1,\"84\":1,\"90\":1,\"95\":1,\"96\":1,\"97\":1,\"98\":1,\"99\":1,\"100\":1,\"101\":1,\"111\":1,\"134\":2,\"135\":2,\"140\":4,\"200\":3,\"203\":7,\"204\":1,\"205\":3,\"206\":3,\"207\":3,\"242\":1,\"276\":1,\"277\":1,\"278\":4,\"279\":1,\"280\":1,\"282\":1,\"283\":2,\"285\":1,\"292\":2,\"305\":2,\"328\":1,\"333\":1,\"340\":1,\"341\":1,\"342\":1,\"343\":1,\"346\":1,\"347\":1,\"389\":1,\"390\":1,\"394\":3,\"395\":3,\"422\":7,\"429\":10,\"524\":2,\"525\":3,\"590\":2,\"591\":1,\"592\":1,\"598\":1,\"603\":1,\"604\":1,\"605\":1,\"606\":1,\"607\":1,\"608\":1,\"609\":1,\"619\":1,\"642\":2,\"643\":2,\"648\":4,\"708\":3,\"711\":7,\"712\":1,\"713\":3,\"714\":3,\"715\":3,\"750\":1,\"784\":1,\"785\":1,\"786\":4,\"787\":1,\"788\":1,\"790\":1,\"791\":2,\"793\":1,\"800\":2,\"813\":2,\"836\":1,\"841\":1,\"848\":1,\"849\":1,\"850\":1,\"851\":1,\"854\":1,\"855\":1,\"897\":1,\"898\":1,\"902\":3,\"903\":3,\"932\":7,\"939\":10,\"1034\":2,\"1035\":3,\"1100\":2,\"1101\":1,\"1102\":1,\"1108\":1,\"1113\":1,\"1114\":1,\"1115\":1,\"1116\":1,\"1117\":1,\"1118\":1,\"1119\":1,\"1129\":1,\"1152\":2,\"1153\":2,\"1158\":4,\"1220\":3,\"1223\":7,\"1224\":1,\"1225\":3,\"1226\":3,\"1227\":3,\"1263\":1,\"1296\":1,\"1297\":1,\"1298\":4,\"1299\":1,\"1300\":1,\"1302\":1,\"1303\":2,\"1305\":1,\"1312\":2,\"1326\":2,\"1351\":1,\"1353\":1,\"1363\":1,\"1364\":1,\"1365\":1,\"1366\":1,\"1369\":1,\"1370\":1,\"1412\":1,\"1413\":1,\"1417\":3,\"1418\":3,\"1447\":7,\"1454\":10,\"1549\":2,\"1550\":3,\"1847\":2,\"1852\":2,\"1853\":1,\"1854\":1,\"1856\":1,\"1857\":1,\"1858\":1,\"1859\":1,\"1860\":1,\"1861\":1,\"1862\":1,\"1863\":1,\"1864\":1,\"1865\":1,\"1866\":1,\"1867\":1,\"1868\":1,\"1870\":1,\"1871\":1,\"1873\":1,\"1874\":1,\"1875\":1,\"1876\":1,\"1877\":1,\"1878\":1,\"1879\":1,\"1880\":1,\"1881\":1,\"1882\":1,\"1883\":1,\"1884\":1,\"1885\":1,\"2216\":2,\"2221\":2,\"2222\":1,\"2223\":1,\"2225\":1,\"2226\":1,\"2227\":1,\"2228\":1,\"2229\":1,\"2230\":1,\"2231\":1,\"2232\":1,\"2233\":1,\"2234\":1,\"2235\":1,\"2236\":1,\"2237\":1,\"2239\":1,\"2240\":1,\"2242\":1,\"2243\":1,\"2244\":1,\"2245\":1,\"2246\":1,\"2247\":1,\"2248\":1,\"2249\":1,\"2250\":1,\"2251\":1,\"2252\":1,\"2253\":1,\"2254\":1,\"2585\":2,\"2590\":2,\"2591\":1,\"2592\":1,\"2594\":1,\"2595\":1,\"2596\":1,\"2597\":1,\"2598\":1,\"2599\":1,\"2600\":1,\"2601\":1,\"2602\":1,\"2603\":1,\"2604\":1,\"2605\":1,\"2606\":1,\"2608\":1,\"2609\":1,\"2611\":1,\"2612\":1,\"2613\":1,\"2614\":1,\"2615\":1,\"2616\":1,\"2617\":1,\"2618\":1,\"2619\":1,\"2620\":1,\"2621\":1,\"2622\":1,\"2623\":1}}],[\"match\",{\"1\":{\"101\":1,\"318\":1,\"367\":1,\"609\":1,\"826\":1,\"875\":1,\"1119\":1,\"1339\":1,\"1390\":1,\"1890\":2,\"1895\":1,\"1896\":1,\"1897\":1,\"2259\":2,\"2264\":1,\"2265\":1,\"2266\":1,\"2628\":2,\"2633\":1,\"2634\":1,\"2635\":1}}],[\"mapped\",{\"1\":{\"2678\":5,\"2681\":4,\"2684\":4,\"2685\":4,\"2687\":4,\"2693\":5,\"2696\":4,\"2699\":4,\"2700\":4,\"2702\":4,\"2708\":5,\"2711\":4,\"2714\":4,\"2715\":4,\"2717\":4}}],[\"mappings\",{\"1\":{\"399\":1,\"907\":1,\"1422\":1}}],[\"mapping\",{\"1\":{\"285\":1,\"399\":1,\"793\":1,\"907\":1,\"1305\":1,\"1422\":1,\"1635\":2,\"1636\":1,\"1637\":1,\"2004\":2,\"2005\":1,\"2006\":1,\"2373\":2,\"2374\":1,\"2375\":1}}],[\"map\",{\"1\":{\"543\":1,\"1053\":1,\"1568\":1}}],[\"mark\",{\"1\":{\"1934\":2,\"1935\":1,\"2303\":2,\"2304\":1,\"2672\":2,\"2673\":1}}],[\"markup\",{\"1\":{\"532\":2,\"537\":1,\"543\":3,\"1042\":2,\"1047\":1,\"1053\":3,\"1557\":2,\"1562\":1,\"1568\":3}}],[\"markdown\",{\"1\":{\"532\":2,\"537\":1,\"541\":16,\"543\":2,\"1042\":2,\"1047\":1,\"1051\":16,\"1053\":2,\"1557\":2,\"1562\":1,\"1566\":16,\"1568\":2}}],[\"main\",{\"1\":{\"507\":1,\"1017\":1,\"1532\":1,\"1895\":3,\"2264\":3,\"2633\":3,\"2690\":2,\"2705\":2,\"2720\":2}}],[\"max\",{\"1\":{\"447\":1,\"957\":1,\"1472\":1,\"1931\":1,\"2300\":1,\"2669\":1}}],[\"macos\",{\"1\":{\"433\":2,\"436\":1,\"437\":1,\"438\":1,\"505\":1,\"943\":2,\"946\":1,\"947\":1,\"948\":1,\"1015\":1,\"1458\":2,\"1461\":1,\"1462\":1,\"1463\":1,\"1530\":1,\"2690\":2,\"2705\":2,\"2720\":2}}],[\"manager\",{\"0\":{\"1818\":1,\"2187\":1,\"2556\":1},\"1\":{\"111\":1,\"407\":2,\"619\":1,\"915\":2,\"1129\":1,\"1430\":2,\"1828\":1,\"1896\":1,\"2197\":1,\"2265\":1,\"2566\":1,\"2634\":1}}],[\"mdx等相关技术\",{\"1\":{\"501\":1,\"1011\":1,\"1526\":1}}],[\"mdx\",{\"1\":{\"501\":1,\"1011\":1,\"1526\":1}}],[\"md\",{\"1\":{\"110\":1,\"463\":1,\"513\":2,\"618\":1,\"973\":1,\"1023\":2,\"1128\":1,\"1488\":1,\"1538\":2,\"1865\":1,\"1867\":1,\"1882\":1,\"1884\":1,\"2234\":1,\"2236\":1,\"2251\":1,\"2253\":1,\"2603\":1,\"2605\":1,\"2620\":1,\"2622\":1}}],[\"migrations\",{\"1\":{\"2679\":2,\"2690\":2,\"2694\":2,\"2705\":2,\"2709\":2,\"2720\":2}}],[\"mirai\",{\"1\":{\"486\":1,\"487\":1,\"996\":1,\"997\":1,\"1511\":1,\"1512\":1}}],[\"missing\",{\"1\":{\"478\":1,\"988\":1,\"1503\":1,\"1892\":1,\"2261\":1,\"2630\":1}}],[\"microframework\",{\"1\":{\"70\":1,\"578\":1,\"1088\":1}}],[\"mixins\",{\"1\":{\"1750\":2,\"2119\":2,\"2495\":2}}],[\"mixin\",{\"1\":{\"54\":2,\"562\":2,\"1072\":2,\"1656\":1,\"1702\":1,\"1750\":2,\"1790\":1,\"2025\":1,\"2071\":1,\"2119\":2,\"2159\":1,\"2394\":1,\"2440\":1,\"2495\":2,\"2528\":1}}],[\"merge\",{\"1\":{\"2680\":2,\"2695\":2,\"2710\":2}}],[\"mean\",{\"1\":{\"1904\":1,\"2273\":1,\"2642\":1}}],[\"medium\",{\"1\":{\"447\":1,\"957\":1,\"1472\":1}}],[\"me\",{\"1\":{\"102\":3,\"106\":2,\"310\":1,\"423\":1,\"426\":3,\"527\":2,\"610\":3,\"614\":2,\"818\":1,\"933\":1,\"936\":3,\"1037\":2,\"1120\":3,\"1124\":2,\"1331\":1,\"1448\":1,\"1451\":3,\"1552\":2,\"1912\":1,\"2281\":1,\"2650\":1}}],[\"method=\",{\"1\":{\"120\":1,\"470\":1,\"474\":1,\"628\":1,\"980\":1,\"984\":1,\"1138\":1,\"1495\":1,\"1499\":1}}],[\"method\",{\"1\":{\"53\":1,\"120\":1,\"474\":2,\"561\":1,\"628\":1,\"984\":2,\"1071\":1,\"1138\":1,\"1499\":2,\"1728\":1,\"2097\":1,\"2478\":1}}],[\"meta=commandmeta\",{\"1\":{\"1896\":1,\"1903\":1,\"1904\":1,\"1907\":1,\"2265\":1,\"2272\":1,\"2273\":1,\"2276\":1,\"2634\":1,\"2641\":1,\"2642\":1,\"2645\":1}}],[\"meta=\",{\"1\":{\"1896\":1,\"2265\":1,\"2634\":1}}],[\"metadata\",{\"1\":{\"111\":1,\"619\":1,\"1129\":1,\"2679\":1,\"2694\":1,\"2709\":1}}],[\"metaevent\",{\"1\":{\"93\":1,\"216\":2,\"601\":1,\"724\":2,\"1111\":1,\"1236\":2,\"1802\":2,\"2171\":2,\"2540\":2}}],[\"meta\",{\"1\":{\"42\":1,\"86\":1,\"110\":1,\"343\":2,\"476\":1,\"550\":1,\"594\":1,\"618\":1,\"851\":2,\"986\":1,\"1060\":1,\"1104\":1,\"1128\":1,\"1366\":2,\"1501\":1}}],[\"message=\",{\"1\":{\"422\":1,\"932\":1,\"1447\":1,\"1575\":2,\"1944\":2,\"2325\":2}}],[\"messageevent\",{\"1\":{\"421\":2,\"476\":1,\"931\":2,\"986\":1,\"1446\":2,\"1501\":1}}],[\"messagetemplate\",{\"1\":{\"251\":1,\"252\":1,\"253\":1,\"254\":1,\"255\":1,\"256\":1,\"257\":1,\"429\":2,\"533\":1,\"543\":3,\"759\":1,\"760\":1,\"761\":1,\"762\":1,\"763\":1,\"764\":1,\"765\":1,\"939\":2,\"1043\":1,\"1053\":3,\"1272\":1,\"1273\":1,\"1274\":1,\"1275\":1,\"1276\":1,\"1277\":1,\"1278\":1,\"1454\":2,\"1558\":1,\"1568\":3,\"1602\":1,\"1971\":1,\"2340\":1}}],[\"messagesegment\",{\"1\":{\"251\":1,\"252\":1,\"253\":1,\"254\":1,\"255\":1,\"256\":1,\"257\":1,\"363\":8,\"475\":2,\"477\":11,\"530\":1,\"531\":1,\"532\":4,\"533\":1,\"534\":7,\"535\":1,\"536\":6,\"537\":4,\"538\":1,\"539\":3,\"540\":2,\"541\":14,\"542\":26,\"543\":17,\"759\":1,\"760\":1,\"761\":1,\"762\":1,\"763\":1,\"764\":1,\"765\":1,\"871\":8,\"985\":2,\"987\":11,\"1040\":1,\"1041\":1,\"1042\":4,\"1043\":1,\"1044\":7,\"1045\":1,\"1046\":6,\"1047\":4,\"1048\":1,\"1049\":3,\"1050\":2,\"1051\":14,\"1052\":26,\"1053\":17,\"1272\":1,\"1273\":1,\"1274\":1,\"1275\":1,\"1276\":1,\"1277\":1,\"1278\":1,\"1386\":8,\"1500\":2,\"1502\":11,\"1555\":1,\"1556\":1,\"1557\":4,\"1558\":1,\"1559\":7,\"1560\":1,\"1561\":6,\"1562\":4,\"1563\":1,\"1564\":3,\"1565\":2,\"1566\":14,\"1567\":26,\"1568\":17,\"1576\":1,\"1602\":1,\"1945\":1,\"1971\":1,\"2326\":1,\"2340\":1}}],[\"message\",{\"0\":{\"287\":1,\"477\":1,\"795\":1,\"987\":1,\"1307\":1,\"1502\":1},\"1\":{\"37\":1,\"42\":1,\"48\":3,\"86\":1,\"90\":1,\"93\":1,\"100\":1,\"106\":2,\"124\":1,\"132\":1,\"133\":1,\"134\":1,\"135\":1,\"136\":1,\"137\":1,\"139\":2,\"140\":2,\"205\":1,\"206\":1,\"207\":1,\"216\":2,\"227\":1,\"251\":1,\"252\":2,\"253\":2,\"254\":1,\"255\":1,\"256\":1,\"257\":1,\"262\":4,\"263\":2,\"298\":1,\"340\":2,\"362\":1,\"394\":1,\"413\":1,\"415\":1,\"417\":7,\"418\":2,\"422\":1,\"462\":1,\"463\":1,\"465\":1,\"475\":8,\"476\":11,\"477\":9,\"528\":1,\"530\":2,\"531\":1,\"532\":6,\"533\":1,\"534\":5,\"535\":1,\"536\":4,\"537\":4,\"538\":1,\"539\":2,\"540\":4,\"541\":17,\"542\":14,\"543\":17,\"545\":1,\"550\":1,\"556\":3,\"594\":1,\"598\":1,\"601\":1,\"608\":1,\"614\":2,\"632\":1,\"640\":1,\"641\":1,\"642\":1,\"643\":1,\"644\":1,\"645\":1,\"647\":2,\"648\":2,\"713\":1,\"714\":1,\"715\":1,\"724\":2,\"735\":1,\"759\":1,\"760\":2,\"761\":2,\"762\":1,\"763\":1,\"764\":1,\"765\":1,\"770\":4,\"771\":2,\"806\":1,\"848\":2,\"870\":1,\"902\":1,\"923\":1,\"925\":1,\"927\":7,\"928\":2,\"932\":1,\"972\":1,\"973\":1,\"975\":1,\"985\":8,\"986\":11,\"987\":9,\"1038\":1,\"1040\":2,\"1041\":1,\"1042\":6,\"1043\":1,\"1044\":5,\"1045\":1,\"1046\":4,\"1047\":4,\"1048\":1,\"1049\":2,\"1050\":4,\"1051\":17,\"1052\":14,\"1053\":17,\"1055\":1,\"1060\":1,\"1066\":3,\"1104\":1,\"1108\":1,\"1111\":1,\"1118\":1,\"1124\":2,\"1142\":1,\"1150\":1,\"1151\":1,\"1152\":1,\"1153\":1,\"1154\":1,\"1155\":1,\"1157\":2,\"1158\":2,\"1225\":1,\"1226\":1,\"1227\":1,\"1236\":2,\"1247\":1,\"1272\":1,\"1273\":2,\"1274\":2,\"1275\":1,\"1276\":1,\"1277\":1,\"1278\":1,\"1283\":4,\"1284\":2,\"1316\":1,\"1363\":2,\"1385\":1,\"1417\":1,\"1438\":1,\"1440\":1,\"1442\":7,\"1443\":2,\"1447\":1,\"1487\":1,\"1488\":1,\"1490\":1,\"1500\":8,\"1501\":11,\"1502\":9,\"1553\":1,\"1555\":2,\"1556\":1,\"1557\":6,\"1558\":1,\"1559\":5,\"1560\":1,\"1561\":4,\"1562\":4,\"1563\":1,\"1564\":2,\"1565\":4,\"1566\":17,\"1567\":14,\"1568\":17,\"1576\":2,\"1586\":1,\"1587\":1,\"1601\":1,\"1602\":1,\"1802\":2,\"1897\":1,\"1945\":2,\"1955\":1,\"1956\":1,\"1970\":1,\"1971\":1,\"2171\":2,\"2266\":1,\"2326\":2,\"2336\":1,\"2337\":1,\"2339\":1,\"2340\":1,\"2540\":2,\"2635\":1,\"2680\":4,\"2681\":1,\"2684\":12,\"2685\":12,\"2687\":4,\"2695\":4,\"2696\":1,\"2699\":12,\"2700\":12,\"2702\":4,\"2710\":4,\"2711\":1,\"2714\":12,\"2715\":12,\"2717\":4}}],[\"msg\",{\"1\":{\"136\":1,\"137\":1,\"352\":1,\"353\":1,\"354\":1,\"355\":1,\"356\":1,\"357\":1,\"477\":1,\"542\":9,\"644\":1,\"645\":1,\"860\":1,\"861\":1,\"862\":1,\"863\":1,\"864\":1,\"865\":1,\"987\":1,\"1052\":9,\"1154\":1,\"1155\":1,\"1375\":1,\"1376\":1,\"1377\":1,\"1378\":1,\"1379\":1,\"1380\":1,\"1502\":1,\"1567\":9,\"1575\":2,\"1604\":1,\"1861\":1,\"1862\":1,\"1863\":1,\"1878\":1,\"1879\":1,\"1880\":1,\"1944\":2,\"1973\":1,\"2230\":1,\"2231\":1,\"2232\":1,\"2247\":1,\"2248\":1,\"2249\":1,\"2325\":2,\"2342\":1,\"2599\":1,\"2600\":1,\"2601\":1,\"2616\":1,\"2617\":1,\"2618\":1,\"2684\":8,\"2685\":8,\"2687\":2,\"2699\":8,\"2700\":8,\"2702\":2,\"2714\":8,\"2715\":8,\"2717\":2}}],[\"ms\",{\"1\":{\"10\":2,\"22\":2,\"34\":2}}],[\">>>\",{\"1\":{\"532\":4,\"543\":10,\"1042\":4,\"1053\":10,\"1557\":4,\"1568\":10}}],[\">=\",{\"1\":{\"429\":1,\"939\":1,\"1454\":1}}],[\">\",{\"1\":{\"10\":1,\"22\":1,\"34\":1,\"120\":1,\"139\":1,\"140\":2,\"163\":1,\"218\":2,\"249\":1,\"250\":1,\"251\":1,\"259\":2,\"261\":2,\"262\":2,\"265\":2,\"278\":2,\"297\":1,\"319\":3,\"363\":3,\"385\":1,\"386\":1,\"403\":1,\"404\":1,\"405\":1,\"406\":2,\"408\":2,\"412\":1,\"424\":1,\"425\":2,\"426\":1,\"468\":1,\"470\":3,\"471\":3,\"473\":1,\"474\":1,\"475\":1,\"476\":11,\"477\":5,\"628\":1,\"647\":1,\"648\":2,\"671\":1,\"726\":2,\"757\":1,\"758\":1,\"759\":1,\"767\":2,\"769\":2,\"770\":2,\"773\":2,\"786\":2,\"805\":1,\"827\":3,\"871\":3,\"893\":1,\"894\":1,\"911\":1,\"912\":1,\"913\":1,\"914\":2,\"916\":2,\"922\":1,\"934\":1,\"935\":2,\"936\":1,\"978\":1,\"980\":3,\"981\":3,\"983\":1,\"984\":1,\"985\":1,\"986\":11,\"987\":5,\"1138\":1,\"1157\":1,\"1158\":2,\"1181\":1,\"1238\":2,\"1270\":1,\"1271\":1,\"1272\":1,\"1280\":2,\"1282\":2,\"1283\":2,\"1286\":2,\"1298\":2,\"1323\":1,\"1340\":3,\"1386\":3,\"1408\":1,\"1409\":1,\"1426\":1,\"1427\":1,\"1428\":1,\"1429\":2,\"1431\":2,\"1437\":1,\"1449\":1,\"1450\":2,\"1451\":1,\"1493\":1,\"1495\":3,\"1496\":3,\"1498\":1,\"1499\":1,\"1500\":1,\"1501\":11,\"1502\":5,\"1605\":5,\"1648\":1,\"1750\":2,\"1789\":2,\"1932\":3,\"1974\":5,\"2017\":1,\"2119\":2,\"2158\":2,\"2301\":3,\"2343\":5,\"2386\":1,\"2495\":2,\"2527\":2,\"2670\":3,\"2679\":2,\"2680\":2,\"2681\":1,\"2684\":1,\"2685\":1,\"2687\":1,\"2688\":1,\"2694\":2,\"2695\":2,\"2696\":1,\"2699\":1,\"2700\":1,\"2702\":1,\"2703\":1,\"2709\":2,\"2710\":2,\"2711\":1,\"2714\":1,\"2715\":1,\"2717\":1,\"2718\":1}}],[\"搜索配置项\",{\"1\":{\"10\":1,\"22\":1,\"34\":1}}],[\"v5\",{\"1\":{\"2690\":2,\"2705\":2,\"2720\":2}}],[\"v4\",{\"1\":{\"2690\":2,\"2705\":2,\"2720\":2}}],[\"v|\",{\"1\":{\"1906\":2,\"2275\":2,\"2644\":2}}],[\"vvv\",{\"1\":{\"1903\":1,\"2272\":1,\"2641\":1}}],[\"varchar\",{\"1\":{\"2678\":2,\"2679\":2,\"2693\":2,\"2694\":2,\"2708\":2,\"2709\":2}}],[\"var1\",{\"1\":{\"1888\":1,\"2257\":1,\"2626\":1}}],[\"var\",{\"0\":{\"1890\":1,\"2259\":1,\"2628\":1},\"1\":{\"1888\":4,\"1890\":3,\"2257\":4,\"2259\":3,\"2626\":4,\"2628\":3}}],[\"validator\",{\"1\":{\"161\":1,\"669\":1,\"1179\":1}}],[\"validate\",{\"1\":{\"154\":1,\"159\":1,\"160\":1,\"297\":1,\"301\":1,\"304\":1,\"306\":1,\"473\":3,\"536\":2,\"662\":1,\"667\":1,\"668\":1,\"805\":1,\"809\":1,\"812\":1,\"814\":1,\"983\":3,\"1046\":2,\"1172\":1,\"1177\":1,\"1178\":1,\"1321\":1,\"1323\":1,\"1325\":1,\"1327\":1,\"1498\":3,\"1561\":2,\"1640\":1,\"2009\":1,\"2378\":1}}],[\"validations\",{\"1\":{\"145\":1,\"653\":1,\"1163\":1}}],[\"value=\",{\"1\":{\"1906\":3,\"2275\":3,\"2644\":3}}],[\"value=false\",{\"1\":{\"1893\":1,\"2262\":1,\"2631\":1}}],[\"value=none\",{\"1\":{\"1886\":1,\"1906\":2,\"2255\":1,\"2275\":2,\"2624\":1,\"2644\":2}}],[\"value=ellipsis\",{\"1\":{\"1886\":1,\"1906\":2,\"2255\":1,\"2275\":2,\"2624\":1,\"2644\":2}}],[\"valueerror\",{\"1\":{\"217\":1,\"218\":2,\"219\":1,\"220\":1,\"221\":1,\"222\":2,\"223\":1,\"476\":3,\"725\":1,\"726\":2,\"727\":1,\"728\":1,\"729\":1,\"730\":2,\"731\":1,\"986\":3,\"1237\":1,\"1238\":2,\"1239\":1,\"1240\":1,\"1241\":1,\"1242\":2,\"1243\":1,\"1501\":3,\"1608\":1,\"1817\":1,\"1977\":1,\"2186\":1,\"2346\":1,\"2555\":1}}],[\"valuesview\",{\"1\":{\"276\":1,\"784\":1,\"1296\":1}}],[\"values\",{\"1\":{\"163\":1,\"165\":1,\"671\":1,\"673\":1,\"1181\":1,\"1183\":1}}],[\"value\",{\"1\":{\"153\":1,\"154\":2,\"351\":1,\"429\":1,\"661\":1,\"662\":2,\"859\":1,\"939\":1,\"1171\":1,\"1172\":2,\"1374\":1,\"1454\":1,\"1606\":1,\"1607\":1,\"1608\":1,\"1610\":1,\"1611\":1,\"1638\":1,\"1650\":1,\"1722\":1,\"1890\":1,\"1891\":1,\"1894\":2,\"1895\":2,\"1903\":1,\"1975\":1,\"1976\":1,\"1977\":1,\"1979\":1,\"1980\":1,\"2007\":1,\"2019\":1,\"2091\":1,\"2259\":1,\"2260\":1,\"2263\":2,\"2264\":2,\"2272\":1,\"2344\":1,\"2345\":1,\"2346\":1,\"2348\":1,\"2349\":1,\"2376\":1,\"2388\":1,\"2451\":1,\"2628\":1,\"2629\":1,\"2632\":2,\"2633\":2,\"2641\":1}}],[\"version\",{\"1\":{\"1652\":1,\"1659\":1,\"1698\":1,\"1704\":1,\"1728\":1,\"1753\":1,\"1906\":1,\"2021\":1,\"2028\":1,\"2067\":1,\"2073\":1,\"2097\":1,\"2122\":1,\"2275\":1,\"2390\":1,\"2397\":1,\"2436\":1,\"2442\":1,\"2473\":1,\"2478\":1,\"2644\":1,\"2690\":5,\"2705\":5,\"2720\":5}}],[\"verbose|\",{\"1\":{\"1903\":1,\"2272\":1,\"2641\":1}}],[\"verbose\",{\"1\":{\"100\":2,\"608\":2,\"1118\":2,\"1903\":1,\"1906\":2,\"2272\":1,\"2275\":2,\"2641\":1,\"2644\":2}}],[\"venv\",{\"1\":{\"505\":5,\"1015\":5,\"1530\":5}}],[\"v3\",{\"1\":{\"501\":1,\"1011\":1,\"1526\":1}}],[\"vue\",{\"1\":{\"497\":1,\"1007\":1,\"1522\":1}}],[\"vuepress\",{\"1\":{\"482\":1,\"992\":1,\"1507\":1}}],[\"v2\",{\"0\":{\"484\":1,\"485\":1,\"486\":1,\"487\":1,\"994\":1,\"995\":1,\"996\":1,\"997\":1,\"1509\":1,\"1510\":1,\"1511\":1,\"1512\":1},\"1\":{\"141\":1,\"161\":1,\"485\":1,\"486\":4,\"487\":4,\"649\":1,\"669\":1,\"995\":1,\"996\":4,\"997\":4,\"1159\":1,\"1179\":1,\"1510\":1,\"1511\":4,\"1512\":4}}],[\"v12\",{\"0\":{\"489\":1,\"999\":1,\"1514\":1},\"1\":{\"474\":1,\"489\":1,\"490\":3,\"491\":2,\"984\":1,\"999\":1,\"1000\":3,\"1001\":2,\"1499\":1,\"1514\":1,\"1515\":3,\"1516\":2}}],[\"v1\",{\"0\":{\"481\":1,\"482\":1,\"483\":1,\"991\":1,\"992\":1,\"993\":1,\"1506\":1,\"1507\":1,\"1508\":1},\"1\":{\"141\":1,\"142\":1,\"146\":1,\"147\":1,\"148\":1,\"161\":1,\"482\":3,\"483\":1,\"649\":1,\"650\":1,\"654\":1,\"655\":1,\"656\":1,\"669\":1,\"992\":3,\"993\":1,\"1159\":1,\"1160\":1,\"1164\":1,\"1165\":1,\"1166\":1,\"1179\":1,\"1507\":3,\"1508\":1}}],[\"v11\",{\"1\":{\"103\":2,\"422\":2,\"474\":1,\"489\":1,\"490\":1,\"491\":1,\"611\":2,\"932\":2,\"984\":1,\"999\":1,\"1000\":1,\"1001\":1,\"1121\":2,\"1447\":2,\"1499\":1,\"1514\":1,\"1515\":1,\"1516\":1}}],[\"v\",{\"1\":{\"100\":3,\"608\":3,\"1118\":3,\"1903\":1,\"1906\":2,\"2272\":1,\"2275\":2,\"2641\":1,\"2644\":2}}],[\"vscode\",{\"1\":{\"10\":5,\"22\":5,\"34\":5}}],[\"visual\",{\"0\":{\"10\":1,\"22\":1,\"34\":1},\"1\":{\"10\":1,\"22\":1,\"34\":1}}],[\"配置为\",{\"1\":{\"1902\":1,\"2271\":1,\"2640\":1}}],[\"配置命令分割字符\",{\"1\":{\"506\":1,\"1016\":1,\"1531\":1}}],[\"配置命令起始字符\",{\"1\":{\"506\":1,\"1016\":1,\"1531\":1}}],[\"配置与运行项目\",{\"1\":{\"497\":1,\"1007\":1,\"1522\":1}}],[\"配置读写等\",{\"1\":{\"490\":1,\"491\":1,\"1000\":1,\"1001\":1,\"1515\":1,\"1516\":1}}],[\"配置读写等功能\",{\"1\":{\"490\":1,\"491\":1,\"1000\":1,\"1001\":1,\"1515\":1,\"1516\":1}}],[\"配置需要包含\",{\"1\":{\"456\":1,\"966\":1,\"1481\":1}}],[\"配置参数\",{\"1\":{\"456\":1,\"966\":1,\"1481\":1}}],[\"配置插件\",{\"0\":{\"446\":1,\"956\":1,\"1471\":1}}],[\"配置目录为\",{\"1\":{\"438\":1,\"948\":1,\"1463\":1}}],[\"配置情况下\",{\"1\":{\"361\":1,\"869\":1,\"1384\":1}}],[\"配置改变日志等级\",{\"1\":{\"230\":1,\"738\":1,\"1250\":1}}],[\"配置改变\",{\"1\":{\"227\":1,\"735\":1,\"1247\":1}}],[\"配置格式为\",{\"1\":{\"166\":1,\"674\":1,\"1184\":1}}],[\"配置方法参考\",{\"1\":{\"165\":1,\"166\":1,\"673\":1,\"674\":1,\"1183\":1,\"1184\":1}}],[\"配置文件中的字段无法满足你的需求\",{\"1\":{\"518\":1,\"519\":1,\"1028\":1,\"1029\":1,\"1543\":1,\"1544\":1}}],[\"配置文件中添加以下配置即可使用\",{\"1\":{\"446\":1,\"956\":1,\"1471\":1}}],[\"配置文件用于存放\",{\"1\":{\"506\":1,\"1016\":1,\"1531\":1}}],[\"配置文件名\",{\"1\":{\"224\":1,\"732\":1,\"1244\":1}}],[\"配置文件\",{\"1\":{\"163\":1,\"504\":1,\"671\":1,\"1014\":1,\"1181\":1,\"1529\":1}}],[\"配置项需符合\",{\"1\":{\"506\":1,\"1016\":1,\"1531\":1}}],[\"配置项需符合特殊格式或\",{\"1\":{\"162\":1,\"670\":1,\"1180\":1}}],[\"配置项的读取将在下方\",{\"1\":{\"467\":1,\"977\":1,\"1492\":1}}],[\"配置项具体含义参考\",{\"1\":{\"447\":1,\"957\":1,\"1472\":1}}],[\"配置项过滤日志等级\",{\"1\":{\"418\":1,\"928\":1,\"1443\":1}}],[\"配置项来过滤输出等级\",{\"1\":{\"417\":1,\"927\":1,\"1442\":1}}],[\"配置项\",{\"0\":{\"59\":1,\"71\":1,\"434\":1,\"447\":1,\"453\":1,\"567\":1,\"579\":1,\"944\":1,\"957\":1,\"963\":1,\"1077\":1,\"1089\":1,\"1459\":1,\"1472\":1,\"1478\":1,\"1908\":1,\"2277\":1,\"2646\":1},\"1\":{\"513\":1,\"1023\":1,\"1538\":1}}],[\"配置驱动器\",{\"0\":{\"54\":1,\"562\":1,\"1072\":1},\"1\":{\"166\":1,\"674\":1,\"1184\":1}}],[\"配置\",{\"0\":{\"1928\":1,\"2297\":1,\"2666\":1},\"1\":{\"10\":1,\"22\":1,\"34\":1,\"165\":1,\"365\":1,\"478\":1,\"483\":1,\"506\":2,\"673\":1,\"873\":1,\"988\":1,\"993\":1,\"1016\":2,\"1183\":1,\"1388\":1,\"1503\":1,\"1508\":1,\"1531\":2,\"1574\":1,\"1593\":1,\"1943\":1,\"1962\":1,\"2312\":1,\"2324\":1}}],[\"配置以达到最佳开发体验\",{\"1\":{\"10\":1,\"22\":1,\"34\":1}}],[\"配合编辑器的类型推导功能\",{\"1\":{\"3\":1,\"15\":1,\"27\":1}}],[\"并不能通过它操作数据\",{\"1\":{\"2680\":1,\"2695\":1,\"2710\":1}}],[\"并不能\",{\"1\":{\"2680\":1,\"2695\":1,\"2710\":1}}],[\"并不推荐你这么做\",{\"1\":{\"2678\":1,\"2693\":1,\"2708\":1}}],[\"并不会将其当作插件进行跟踪\",{\"1\":{\"116\":1,\"624\":1,\"1134\":1}}],[\"并处理\",{\"1\":{\"1934\":1,\"2303\":1,\"2672\":1}}],[\"并开启\",{\"1\":{\"1930\":1,\"2299\":1,\"2668\":1}}],[\"并附带\",{\"1\":{\"1921\":1,\"2290\":1,\"2659\":1}}],[\"并安装\",{\"1\":{\"1921\":1,\"2290\":1,\"2659\":1}}],[\"并按照特定的流程交由预定义的事件处理依赖进行处理\",{\"1\":{\"524\":1,\"1034\":1,\"1549\":1}}],[\"并写入以下内容\",{\"1\":{\"506\":1,\"507\":1,\"1016\":1,\"1017\":1,\"1531\":1,\"1532\":1}}],[\"并定时更新\",{\"1\":{\"502\":1,\"1012\":1,\"1527\":1}}],[\"并在检查失败时阻止启动\",{\"1\":{\"1927\":1,\"2296\":1,\"2665\":1}}],[\"并在解析失败时使用默认值\",{\"1\":{\"1890\":1,\"2259\":1,\"2628\":1}}],[\"并在人工审核通过后自动存储至\",{\"1\":{\"502\":1,\"1012\":1,\"1527\":1}}],[\"并在异步机制的基础上进行了一定程度的同步函数兼容\",{\"1\":{\"2\":1,\"14\":1,\"26\":1}}],[\"并向全球高校学生开放报名\",{\"1\":{\"500\":1,\"1010\":1,\"1525\":1}}],[\"并更新\",{\"1\":{\"482\":1,\"992\":1,\"1507\":1}}],[\"并更新该事件响应器使其响应当前会话主体的消息\",{\"1\":{\"138\":1,\"646\":1,\"1156\":1}}],[\"并实现相关方法\",{\"1\":{\"475\":1,\"476\":1,\"477\":1,\"985\":1,\"986\":1,\"987\":1,\"1500\":1,\"1501\":1,\"1502\":1}}],[\"并实现适配器的基本信息\",{\"1\":{\"468\":1,\"978\":1,\"1493\":1}}],[\"并调用\",{\"1\":{\"473\":1,\"983\":1,\"1498\":1}}],[\"并调用适配器提供的的\",{\"1\":{\"472\":1,\"982\":1,\"1497\":1}}],[\"并编写相关方法用于初始化适配器\",{\"1\":{\"469\":1,\"979\":1,\"1494\":1}}],[\"并以命名空间包的形式编写\",{\"1\":{\"463\":1,\"973\":1,\"1488\":1}}],[\"并根据实际平台来编写每个部分功能\",{\"1\":{\"462\":1,\"972\":1,\"1487\":1}}],[\"并返回对应的值\",{\"1\":{\"1890\":1,\"2259\":1,\"2628\":1}}],[\"并返回通过该函数调用得到的\",{\"1\":{\"1890\":1,\"2259\":1,\"2628\":1}}],[\"并返回结果\",{\"1\":{\"427\":1,\"937\":1,\"1452\":1}}],[\"并返回自定义内容\",{\"1\":{\"202\":1,\"710\":1,\"1222\":1}}],[\"并且迁移了数据库\",{\"1\":{\"2680\":1,\"2695\":1,\"2710\":1}}],[\"并且在开发环境中测试\",{\"1\":{\"2679\":1,\"2694\":1,\"2709\":1}}],[\"并且最好跟随实践\",{\"1\":{\"2676\":1,\"2691\":1,\"2706\":1}}],[\"并且删除它的数据\",{\"1\":{\"1922\":1,\"2291\":1,\"2660\":1}}],[\"并且可以通过\",{\"1\":{\"1902\":1,\"2271\":1,\"2640\":1}}],[\"并且传递参数给原命令\",{\"1\":{\"1900\":1,\"2269\":1,\"2638\":1}}],[\"并且当事件为指定类型时响应\",{\"1\":{\"1868\":1,\"1885\":1,\"2237\":1,\"2254\":1,\"2606\":1,\"2623\":1}}],[\"并且当消息匹配正则表达式时响应\",{\"1\":{\"1867\":1,\"1884\":1,\"2236\":1,\"2253\":1,\"2605\":1,\"2622\":1}}],[\"并且当消息以指定命令开头时响应\",{\"1\":{\"1865\":1,\"1882\":1,\"2234\":1,\"2251\":1,\"2603\":1,\"2620\":1}}],[\"并且当消息纯文本部分包含关键词时响应\",{\"1\":{\"1864\":1,\"1881\":1,\"2233\":1,\"2250\":1,\"2602\":1,\"2619\":1}}],[\"并且当消息的文本部分与指定内容完全一致时响应\",{\"1\":{\"1863\":1,\"1880\":1,\"2232\":1,\"2249\":1,\"2601\":1,\"2618\":1}}],[\"并且当消息的文本部分以指定内容结尾时响应\",{\"1\":{\"1862\":1,\"1879\":1,\"2231\":1,\"2248\":1,\"2600\":1,\"2617\":1}}],[\"并且当消息的文本部分以指定内容开头时响应\",{\"1\":{\"1861\":1,\"1878\":1,\"2230\":1,\"2247\":1,\"2599\":1,\"2616\":1}}],[\"并且提供了拓展的格式化控制符\",{\"1\":{\"1602\":1,\"1971\":1,\"2340\":1}}],[\"并且注意要根据事件类型实现\",{\"1\":{\"476\":1,\"986\":1,\"1501\":1}}],[\"并且根据需要进行调整\",{\"1\":{\"2679\":1,\"2694\":1,\"2709\":1}}],[\"并且根据\",{\"1\":{\"418\":1,\"928\":1,\"1443\":1}}],[\"并且不局限于解析命令式字符串\",{\"1\":{\"108\":1,\"616\":1,\"1126\":1,\"1886\":1,\"2255\":1,\"2624\":1}}],[\"并存储至\",{\"1\":{\"242\":1,\"750\":1,\"1263\":1}}],[\"并提供\",{\"1\":{\"1570\":1,\"1939\":1,\"2320\":1}}],[\"并提供回复事件\",{\"1\":{\"475\":1,\"985\":1,\"1500\":1}}],[\"并提供回复事件的方法\",{\"1\":{\"37\":1,\"545\":1,\"1055\":1}}],[\"并提供一些快捷方法来帮助用户更好的与机器人进行对话\",{\"1\":{\"232\":1,\"740\":1,\"1252\":1}}],[\"并使用相应的\",{\"1\":{\"224\":1,\"732\":1,\"1244\":1}}],[\"并等待下一条消息后重新运行当前\",{\"1\":{\"206\":1,\"714\":1,\"1226\":1}}],[\"并等待下一条消息后继续下一个\",{\"1\":{\"205\":1,\"713\":1,\"1225\":1}}],[\"并进行对应操作\",{\"1\":{\"195\":1,\"703\":1,\"1215\":1}}],[\"并结合为辅助函数来方便我们快速创建指定功能的响应器\",{\"1\":{\"93\":1,\"601\":1,\"1111\":1}}],[\"并接收接口返回数据\",{\"1\":{\"37\":1,\"545\":1,\"1055\":1}}],[\"并将其值设置为\",{\"1\":{\"10\":2,\"22\":2,\"34\":2}}],[\"并启用\",{\"1\":{\"10\":1,\"22\":1,\"34\":1}}],[\"中统一使用插件模块名\",{\"1\":{\"1919\":1,\"2288\":1,\"2657\":1}}],[\"中传入\",{\"1\":{\"1907\":1,\"2276\":1,\"2645\":1}}],[\"中存储匹配组\",{\"1\":{\"1902\":1,\"2271\":1,\"2640\":1}}],[\"中存在匹配组\",{\"1\":{\"1902\":1,\"2271\":1,\"2640\":1}}],[\"中编写协议通信相关代码\",{\"1\":{\"1589\":1,\"1958\":1,\"2308\":1}}],[\"中提供了一系列\",{\"1\":{\"525\":1,\"1035\":1,\"1550\":1}}],[\"中提供了以下两种直接添加任务的方式\",{\"1\":{\"452\":1,\"962\":1,\"1477\":1}}],[\"中所有事件响应器均继承自\",{\"1\":{\"525\":1,\"1035\":1,\"1550\":1}}],[\"中加载插件\",{\"1\":{\"514\":1,\"1024\":1,\"1539\":1}}],[\"中找到\",{\"1\":{\"505\":2,\"1015\":2,\"1530\":2}}],[\"中介绍\",{\"1\":{\"467\":1,\"977\":1,\"1492\":1}}],[\"中选择\",{\"1\":{\"457\":1,\"967\":1,\"1482\":1}}],[\"中导入\",{\"1\":{\"417\":1,\"927\":1,\"1442\":1}}],[\"中一个类型的实例\",{\"1\":{\"401\":1,\"909\":1,\"1424\":1}}],[\"中一个类型的子类或\",{\"1\":{\"401\":2,\"909\":2,\"1424\":2}}],[\"中仅有\",{\"1\":{\"329\":1,\"331\":1,\"332\":1,\"837\":1,\"839\":1,\"840\":1,\"1352\":1,\"1357\":1,\"1358\":1}}],[\"中读取配置\",{\"1\":{\"224\":1,\"732\":1,\"1244\":1}}],[\"中通过\",{\"1\":{\"200\":1,\"205\":1,\"206\":1,\"207\":1,\"708\":1,\"713\":1,\"714\":1,\"715\":1,\"1220\":1,\"1225\":1,\"1226\":1,\"1227\":1}}],[\"中有一系列预定义的钩子函数\",{\"1\":{\"125\":1,\"633\":1,\"1143\":1}}],[\"中直接导入插件\",{\"1\":{\"117\":1,\"625\":1,\"1135\":1}}],[\"中使用\",{\"1\":{\"117\":1,\"625\":1,\"1135\":1}}],[\"中添加\",{\"1\":{\"478\":1,\"513\":1,\"988\":1,\"1023\":1,\"1503\":1,\"1538\":1}}],[\"中添加适配器名称前缀\",{\"1\":{\"466\":1,\"976\":1,\"1491\":1}}],[\"中添加如下代码\",{\"1\":{\"114\":1,\"622\":1,\"1132\":1}}],[\"中添加插件元数据\",{\"1\":{\"110\":1,\"618\":1,\"1128\":1}}],[\"中包含了多个属性\",{\"1\":{\"111\":1,\"619\":1,\"1129\":1}}],[\"中匹配消息中除\",{\"1\":{\"108\":1,\"616\":1,\"1126\":1}}],[\"中的更改\",{\"1\":{\"2684\":1,\"2685\":1,\"2699\":1,\"2700\":1,\"2714\":1,\"2715\":1}}],[\"中的网络通信主要包括以下几种\",{\"1\":{\"1933\":1,\"2302\":1,\"2671\":1}}],[\"中的类型\",{\"1\":{\"1890\":1,\"2259\":1,\"2628\":1}}],[\"中的内容为\",{\"1\":{\"1887\":1,\"2256\":1,\"2625\":1}}],[\"中的消息载体\",{\"1\":{\"528\":1,\"1038\":1,\"1553\":1}}],[\"中的基本组成部分\",{\"1\":{\"523\":1,\"1033\":1,\"1548\":1}}],[\"中的基类\",{\"1\":{\"462\":1,\"465\":1,\"972\":1,\"975\":1,\"1487\":1,\"1490\":1}}],[\"中的\",{\"1\":{\"519\":1,\"1029\":1,\"1544\":1,\"1813\":1,\"1887\":1,\"1889\":1,\"2182\":1,\"2256\":1,\"2258\":1,\"2551\":1,\"2625\":1,\"2627\":1}}],[\"中的事件主体对象\",{\"1\":{\"476\":1,\"986\":1,\"1501\":1}}],[\"中的会话状态是一个字典\",{\"1\":{\"429\":1,\"939\":1,\"1454\":1}}],[\"中的一个类型子类\",{\"1\":{\"401\":1,\"909\":1,\"1424\":1}}],[\"中的一个类型子类并忽略类型错误\",{\"1\":{\"400\":1,\"908\":1,\"1423\":1}}],[\"中的客户端和服务端型驱动器可以相互配合使用\",{\"1\":{\"54\":1,\"562\":1,\"1072\":1}}],[\"中的第一个\",{\"1\":{\"40\":1,\"548\":1,\"1058\":1}}],[\"中\",{\"1\":{\"10\":1,\"22\":1,\"34\":1,\"37\":1,\"108\":1,\"110\":1,\"118\":1,\"138\":1,\"421\":1,\"448\":1,\"468\":1,\"479\":1,\"483\":2,\"486\":1,\"487\":1,\"489\":1,\"491\":1,\"510\":1,\"524\":1,\"525\":1,\"528\":1,\"530\":1,\"545\":1,\"616\":1,\"618\":1,\"626\":1,\"646\":1,\"931\":1,\"958\":1,\"978\":1,\"989\":1,\"993\":2,\"996\":1,\"997\":1,\"999\":1,\"1001\":1,\"1020\":1,\"1034\":1,\"1035\":1,\"1038\":1,\"1040\":1,\"1055\":1,\"1126\":1,\"1128\":1,\"1136\":1,\"1156\":1,\"1446\":1,\"1473\":1,\"1493\":1,\"1504\":1,\"1508\":2,\"1511\":1,\"1512\":1,\"1514\":1,\"1516\":1,\"1535\":1,\"1549\":1,\"1550\":1,\"1553\":1,\"1555\":1,\"1889\":2,\"1890\":1,\"1895\":1,\"2258\":2,\"2259\":1,\"2264\":1,\"2627\":2,\"2628\":1,\"2633\":1}}],[\"cp\",{\"1\":{\"1905\":1,\"2274\":1,\"2643\":1}}],[\"cb\",{\"1\":{\"1902\":1,\"2271\":1,\"2640\":1}}],[\"ctx\",{\"1\":{\"1780\":1,\"1934\":5,\"1935\":2,\"2149\":1,\"2303\":5,\"2304\":2,\"2518\":1,\"2672\":5,\"2673\":2}}],[\"css\",{\"1\":{\"501\":1,\"1011\":1,\"1526\":1}}],[\"chatrecorder\",{\"1\":{\"1924\":1,\"2293\":1,\"2662\":1}}],[\"changelog\",{\"1\":{\"501\":1,\"1011\":1,\"1526\":1}}],[\"checkout\",{\"1\":{\"2690\":2,\"2705\":2,\"2720\":2}}],[\"check=false\",{\"1\":{\"2679\":1,\"2694\":1,\"2709\":1}}],[\"check=true\",{\"1\":{\"1927\":1,\"2296\":1,\"2665\":1}}],[\"check\",{\"0\":{\"1927\":1,\"2296\":1,\"2665\":1},\"1\":{\"1921\":1,\"1922\":1,\"1927\":1,\"2290\":1,\"2291\":1,\"2296\":1,\"2659\":1,\"2660\":1,\"2665\":1}}],[\"checkers\",{\"1\":{\"333\":1,\"347\":1,\"841\":1,\"855\":1,\"1353\":1,\"1370\":1,\"1641\":1,\"2010\":1,\"2379\":1}}],[\"checker\",{\"1\":{\"299\":1,\"300\":1,\"305\":1,\"426\":4,\"427\":1,\"807\":1,\"808\":1,\"813\":1,\"936\":4,\"937\":1,\"1320\":1,\"1324\":1,\"1326\":1,\"1451\":4,\"1452\":1}}],[\"checking\",{\"1\":{\"10\":2,\"22\":2,\"34\":2,\"475\":2,\"985\":2,\"1500\":2}}],[\"ci\",{\"1\":{\"483\":2,\"993\":2,\"1508\":2}}],[\"cqhttp\",{\"1\":{\"482\":2,\"490\":1,\"491\":1,\"992\":2,\"1000\":1,\"1001\":1,\"1507\":2,\"1515\":1,\"1516\":1}}],[\"certs\",{\"1\":{\"447\":1,\"957\":1,\"1472\":1}}],[\"c\",{\"1\":{\"436\":1,\"437\":2,\"438\":2,\"491\":1,\"946\":1,\"947\":2,\"948\":2,\"1001\":1,\"1461\":1,\"1462\":2,\"1463\":2,\"1516\":1,\"1807\":2,\"2176\":2,\"2545\":2}}],[\"cwd=true\",{\"1\":{\"435\":1,\"945\":1,\"1460\":1}}],[\"cwd\",{\"0\":{\"435\":1,\"945\":1,\"1460\":1},\"1\":{\"436\":1,\"437\":1,\"438\":1,\"946\":1,\"947\":1,\"948\":1,\"1461\":1,\"1462\":1,\"1463\":1}}],[\"c>\",{\"1\":{\"418\":2,\"928\":2,\"1443\":2}}],[\"crlf\",{\"1\":{\"1896\":1,\"2265\":1,\"2634\":1}}],[\"cron\",{\"1\":{\"452\":1,\"962\":1,\"1477\":1}}],[\"critical\",{\"1\":{\"417\":3,\"927\":3,\"1442\":3}}],[\"createtable\",{\"1\":{\"2678\":2,\"2693\":2,\"2708\":2}}],[\"create\",{\"1\":{\"113\":2,\"293\":1,\"464\":1,\"470\":1,\"473\":1,\"513\":1,\"621\":2,\"974\":1,\"980\":1,\"983\":1,\"1023\":1,\"1131\":2,\"1489\":1,\"1495\":1,\"1498\":1,\"1538\":1,\"1930\":1,\"1931\":1,\"2299\":1,\"2300\":1,\"2668\":1,\"2669\":1,\"2678\":2,\"2679\":3,\"2693\":2,\"2694\":3,\"2708\":2,\"2709\":3}}],[\"cm\",{\"1\":{\"407\":1,\"915\":1,\"1430\":1}}],[\"cmds\",{\"1\":{\"360\":1,\"361\":1,\"364\":1,\"365\":1,\"868\":1,\"869\":1,\"872\":1,\"873\":1,\"1383\":1,\"1384\":1,\"1387\":1,\"1388\":1}}],[\"cmd\",{\"1\":{\"99\":2,\"100\":3,\"105\":15,\"607\":2,\"608\":3,\"613\":15,\"1117\":2,\"1118\":3,\"1123\":15,\"1865\":1,\"1866\":1,\"1869\":1,\"1870\":1,\"1871\":1,\"1882\":1,\"1883\":1,\"1902\":3,\"2234\":1,\"2235\":1,\"2238\":1,\"2239\":1,\"2240\":1,\"2251\":1,\"2252\":1,\"2271\":3,\"2603\":1,\"2604\":1,\"2607\":1,\"2608\":1,\"2609\":1,\"2620\":1,\"2621\":1,\"2640\":3}}],[\"current\",{\"1\":{\"180\":1,\"470\":1,\"471\":1,\"688\":1,\"980\":1,\"981\":1,\"1198\":1,\"1495\":1,\"1496\":1}}],[\"custom\",{\"1\":{\"124\":1,\"632\":1,\"1142\":1}}],[\"customprovider\",{\"1\":{\"82\":1,\"83\":2,\"590\":1,\"591\":2,\"1100\":1,\"1101\":2}}],[\"cvc\",{\"1\":{\"161\":2,\"669\":2,\"1179\":2}}],[\"ca\",{\"1\":{\"447\":1,\"957\":1,\"1472\":1}}],[\"caches\",{\"1\":{\"436\":1,\"946\":1,\"1461\":1}}],[\"cache\",{\"0\":{\"436\":1,\"439\":1,\"946\":1,\"949\":1,\"1461\":1,\"1464\":1},\"1\":{\"244\":1,\"245\":1,\"264\":1,\"267\":1,\"268\":1,\"271\":1,\"272\":1,\"292\":1,\"297\":1,\"302\":1,\"335\":1,\"349\":1,\"433\":4,\"436\":5,\"439\":2,\"752\":1,\"753\":1,\"772\":1,\"775\":1,\"776\":1,\"779\":1,\"780\":1,\"800\":1,\"805\":1,\"810\":1,\"843\":1,\"857\":1,\"943\":4,\"946\":5,\"949\":2,\"1265\":1,\"1266\":1,\"1285\":1,\"1288\":1,\"1289\":1,\"1292\":1,\"1293\":1,\"1312\":1,\"1322\":1,\"1323\":1,\"1355\":1,\"1372\":1,\"1458\":4,\"1461\":5,\"1464\":2,\"1897\":1,\"2266\":1,\"2635\":1}}],[\"calledapihook\",{\"1\":{\"1578\":2,\"1947\":2,\"2328\":2}}],[\"called\",{\"1\":{\"137\":1,\"645\":1,\"1155\":1}}],[\"call\",{\"1\":{\"136\":1,\"385\":1,\"386\":1,\"403\":2,\"404\":2,\"405\":2,\"406\":1,\"474\":2,\"644\":1,\"893\":1,\"894\":1,\"911\":2,\"912\":2,\"913\":2,\"914\":1,\"984\":2,\"1154\":1,\"1408\":1,\"1409\":1,\"1426\":2,\"1427\":2,\"1428\":2,\"1429\":1,\"1499\":2,\"1575\":1,\"1641\":1,\"1642\":1,\"1644\":1,\"1648\":1,\"1944\":1,\"2010\":1,\"2011\":1,\"2013\":1,\"2017\":1,\"2325\":1,\"2379\":1,\"2380\":1,\"2382\":1,\"2386\":1,\"2679\":1,\"2694\":1,\"2709\":1}}],[\"callingapihook\",{\"1\":{\"1577\":2,\"1946\":2,\"2327\":2}}],[\"calling\",{\"1\":{\"136\":1,\"474\":1,\"644\":1,\"984\":1,\"1154\":1,\"1499\":1}}],[\"callable\",{\"1\":{\"120\":1,\"121\":1,\"403\":1,\"447\":2,\"628\":1,\"629\":1,\"911\":1,\"957\":2,\"1138\":1,\"1139\":1,\"1426\":1,\"1472\":2,\"1641\":1,\"1890\":1,\"2010\":1,\"2259\":1,\"2379\":1,\"2628\":1}}],[\"cancel\",{\"1\":{\"470\":1,\"980\":1,\"1495\":1}}],[\"can\",{\"1\":{\"118\":1,\"626\":1,\"1136\":1}}],[\"cleoold\",{\"1\":{\"482\":1,\"483\":1,\"992\":1,\"993\":1,\"1507\":1,\"1508\":1}}],[\"cleanup\",{\"1\":{\"121\":1,\"629\":1,\"1139\":1}}],[\"cls\",{\"1\":{\"400\":2,\"401\":5,\"468\":1,\"473\":1,\"477\":2,\"908\":2,\"909\":5,\"978\":1,\"983\":1,\"987\":2,\"1423\":2,\"1424\":5,\"1493\":1,\"1498\":1,\"1502\":2}}],[\"close\",{\"1\":{\"121\":1,\"502\":1,\"629\":1,\"1012\":1,\"1139\":1,\"1527\":1}}],[\"closed<\",{\"1\":{\"470\":1,\"980\":1,\"1495\":1}}],[\"closed\",{\"1\":{\"121\":1,\"629\":1,\"1139\":1}}],[\"classmethod\",{\"1\":{\"468\":1,\"473\":1,\"477\":2,\"978\":1,\"983\":1,\"987\":2,\"1493\":1,\"1498\":1,\"1502\":2}}],[\"classvar\",{\"1\":{\"234\":1,\"235\":1,\"236\":1,\"237\":1,\"238\":1,\"240\":1,\"241\":1,\"742\":1,\"743\":1,\"744\":1,\"745\":1,\"746\":1,\"748\":1,\"749\":1,\"1255\":1,\"1256\":1,\"1257\":1,\"1258\":1,\"1259\":1,\"1261\":1,\"1262\":1}}],[\"class\",{\"1\":{\"82\":1,\"146\":1,\"148\":1,\"161\":1,\"284\":1,\"400\":2,\"401\":5,\"467\":1,\"468\":1,\"470\":1,\"471\":1,\"472\":1,\"473\":2,\"474\":1,\"475\":1,\"476\":5,\"477\":4,\"590\":1,\"654\":1,\"656\":1,\"669\":1,\"792\":1,\"908\":2,\"909\":5,\"977\":1,\"978\":1,\"980\":1,\"981\":1,\"982\":1,\"983\":2,\"984\":1,\"985\":1,\"986\":5,\"987\":4,\"1100\":1,\"1164\":1,\"1166\":1,\"1179\":1,\"1304\":1,\"1423\":2,\"1424\":5,\"1492\":1,\"1493\":1,\"1495\":1,\"1496\":1,\"1497\":1,\"1498\":2,\"1499\":1,\"1500\":1,\"1501\":5,\"1502\":4,\"1900\":1,\"1906\":2,\"2269\":1,\"2275\":2,\"2638\":1,\"2644\":2,\"2678\":2,\"2681\":1,\"2684\":1,\"2685\":1,\"2687\":1,\"2693\":2,\"2696\":1,\"2699\":1,\"2700\":1,\"2702\":1,\"2708\":2,\"2711\":1,\"2714\":1,\"2715\":1,\"2717\":1}}],[\"click\",{\"1\":{\"2679\":1,\"2694\":1,\"2709\":1}}],[\"clientwebsocketresponse\",{\"1\":{\"1660\":1,\"2029\":1,\"2398\":1}}],[\"clients\",{\"1\":{\"79\":1,\"587\":1,\"1097\":1}}],[\"clientsession\",{\"1\":{\"7\":1,\"19\":1,\"31\":1,\"1660\":1,\"2029\":1,\"2398\":1}}],[\"client\",{\"1\":{\"78\":1,\"80\":1,\"445\":1,\"470\":2,\"586\":1,\"588\":1,\"955\":1,\"980\":2,\"1096\":1,\"1098\":1,\"1470\":1,\"1495\":2,\"1934\":5,\"1935\":4,\"2303\":5,\"2304\":4,\"2672\":5,\"2673\":4}}],[\"cli\",{\"0\":{\"464\":1,\"493\":1,\"974\":1,\"1003\":1,\"1489\":1,\"1518\":1,\"1923\":1,\"2292\":1,\"2661\":1},\"1\":{\"4\":2,\"16\":2,\"28\":2,\"64\":1,\"72\":1,\"113\":1,\"433\":1,\"493\":6,\"497\":3,\"499\":1,\"503\":2,\"504\":3,\"507\":1,\"508\":2,\"513\":2,\"514\":2,\"572\":1,\"580\":1,\"621\":1,\"943\":1,\"1003\":6,\"1007\":3,\"1009\":1,\"1013\":2,\"1014\":3,\"1017\":1,\"1018\":2,\"1023\":2,\"1024\":2,\"1082\":1,\"1090\":1,\"1131\":1,\"1458\":1,\"1518\":6,\"1522\":3,\"1524\":1,\"1528\":2,\"1529\":3,\"1532\":1,\"1533\":2,\"1538\":2,\"1539\":2,\"1923\":1,\"2292\":1,\"2661\":1,\"2690\":2,\"2705\":2,\"2720\":2}}],[\"collections\",{\"1\":{\"2679\":1,\"2681\":2,\"2694\":1,\"2696\":2,\"2709\":1,\"2711\":2}}],[\"column\",{\"1\":{\"2678\":2,\"2679\":6,\"2681\":1,\"2684\":2,\"2685\":2,\"2687\":2,\"2693\":2,\"2694\":6,\"2696\":1,\"2699\":2,\"2700\":2,\"2702\":2,\"2708\":2,\"2709\":6,\"2711\":1,\"2714\":2,\"2715\":2,\"2717\":2}}],[\"colors=true\",{\"1\":{\"417\":1,\"927\":1,\"1442\":1}}],[\"colors\",{\"1\":{\"417\":1,\"927\":1,\"1442\":1}}],[\"color\",{\"1\":{\"398\":1,\"906\":1,\"1421\":1}}],[\"cov\",{\"1\":{\"478\":2,\"988\":2,\"1503\":2}}],[\"count\",{\"1\":{\"429\":5,\"541\":2,\"939\":5,\"1051\":2,\"1454\":5,\"1566\":2,\"1609\":1,\"1894\":2,\"1901\":2,\"1903\":2,\"1906\":1,\"1978\":1,\"2263\":2,\"2270\":2,\"2272\":2,\"2275\":1,\"2347\":1,\"2632\":2,\"2639\":2,\"2641\":2,\"2644\":1}}],[\"coro\",{\"1\":{\"408\":5,\"916\":5,\"917\":1,\"1431\":5,\"1432\":1}}],[\"coroutine\",{\"1\":{\"406\":1,\"408\":2,\"914\":1,\"916\":2,\"917\":1,\"1429\":1,\"1431\":2,\"1432\":1,\"1789\":2,\"2158\":2,\"2527\":2}}],[\"correctness\",{\"1\":{\"79\":1,\"587\":1,\"1097\":1}}],[\"community\",{\"0\":{\"2750\":1,\"2757\":1,\"2764\":1}}],[\"commit\",{\"1\":{\"2680\":2,\"2684\":1,\"2695\":2,\"2699\":1,\"2710\":2,\"2714\":1}}],[\"commands\",{\"1\":{\"2679\":9,\"2694\":9,\"2709\":9}}],[\"commandstart\",{\"1\":{\"99\":1,\"607\":1,\"1117\":1}}],[\"command的使用\",{\"0\":{\"1902\":1,\"2271\":1,\"2640\":1}}],[\"commandmeta\",{\"0\":{\"1896\":1,\"2265\":1,\"2634\":1},\"1\":{\"1896\":1,\"1897\":1,\"1903\":1,\"1904\":1,\"1907\":1,\"2265\":1,\"2266\":1,\"2272\":1,\"2273\":1,\"2276\":1,\"2634\":1,\"2635\":1,\"2641\":1,\"2642\":1,\"2645\":1}}],[\"command>\",{\"1\":{\"1865\":1,\"1882\":1,\"2234\":1,\"2251\":1,\"2603\":1,\"2620\":1}}],[\"commandgroup\",{\"1\":{\"105\":6,\"216\":2,\"613\":6,\"724\":2,\"1123\":6,\"1236\":2,\"1802\":2,\"2171\":2,\"2540\":2}}],[\"commandwhitespace\",{\"1\":{\"99\":1,\"607\":1,\"1117\":1}}],[\"commandarg\",{\"1\":{\"99\":1,\"361\":1,\"530\":1,\"607\":1,\"869\":1,\"1040\":1,\"1117\":1,\"1384\":1,\"1555\":1,\"2680\":4,\"2681\":1,\"2695\":4,\"2696\":1,\"2710\":4,\"2711\":1}}],[\"command\",{\"0\":{\"1910\":1,\"1913\":1,\"2279\":1,\"2282\":1,\"2648\":1,\"2651\":1},\"1\":{\"90\":1,\"99\":15,\"100\":7,\"105\":5,\"173\":1,\"174\":1,\"183\":1,\"184\":1,\"185\":1,\"186\":1,\"187\":1,\"216\":4,\"351\":2,\"361\":5,\"365\":6,\"424\":1,\"425\":1,\"426\":2,\"506\":2,\"525\":1,\"526\":3,\"527\":2,\"598\":1,\"607\":15,\"608\":7,\"613\":5,\"681\":1,\"682\":1,\"691\":1,\"692\":1,\"693\":1,\"694\":1,\"695\":1,\"724\":4,\"859\":2,\"869\":5,\"873\":6,\"934\":1,\"935\":1,\"936\":2,\"1016\":2,\"1035\":1,\"1036\":3,\"1037\":2,\"1108\":1,\"1117\":15,\"1118\":7,\"1123\":5,\"1191\":1,\"1192\":1,\"1203\":1,\"1204\":1,\"1205\":1,\"1206\":1,\"1207\":1,\"1236\":4,\"1374\":2,\"1384\":5,\"1388\":6,\"1449\":1,\"1450\":1,\"1451\":2,\"1531\":2,\"1550\":1,\"1551\":3,\"1552\":2,\"1802\":4,\"1865\":1,\"1866\":1,\"1882\":1,\"1883\":1,\"1887\":1,\"1900\":1,\"1902\":5,\"1910\":1,\"1913\":1,\"2171\":4,\"2234\":1,\"2235\":1,\"2251\":1,\"2252\":1,\"2256\":1,\"2269\":1,\"2271\":5,\"2279\":1,\"2282\":1,\"2540\":4,\"2603\":1,\"2604\":1,\"2620\":1,\"2621\":1,\"2625\":1,\"2638\":1,\"2640\":5,\"2648\":1,\"2651\":1,\"2680\":2,\"2695\":2,\"2710\":2}}],[\"comp\",{\"1\":{\"1897\":2,\"1905\":2,\"1911\":1,\"2266\":2,\"2274\":2,\"2280\":1,\"2635\":2,\"2643\":2,\"2649\":1}}],[\"compact=true\",{\"1\":{\"1903\":4,\"2272\":4,\"2641\":4}}],[\"compact\",{\"1\":{\"1896\":1,\"1897\":1,\"1903\":1,\"2265\":1,\"2266\":1,\"2272\":1,\"2634\":1,\"2635\":1,\"2641\":1}}],[\"compatibility\",{\"1\":{\"142\":1,\"146\":1,\"147\":1,\"148\":1,\"650\":1,\"654\":1,\"655\":1,\"656\":1,\"1160\":1,\"1164\":1,\"1165\":1,\"1166\":1}}],[\"compat\",{\"0\":{\"141\":1,\"649\":1,\"1159\":1},\"1\":{\"473\":1,\"476\":1,\"983\":1,\"986\":1,\"1498\":1,\"1501\":1}}],[\"completion\",{\"0\":{\"1911\":1,\"2280\":1,\"2649\":1},\"1\":{\"1892\":1,\"2261\":1,\"2630\":1}}],[\"combineddriver\",{\"1\":{\"1750\":2,\"2119\":2,\"2495\":2}}],[\"com\",{\"1\":{\"493\":2,\"494\":1,\"495\":3,\"497\":1,\"498\":1,\"499\":1,\"501\":1,\"502\":1,\"503\":1,\"1003\":2,\"1004\":1,\"1005\":3,\"1007\":1,\"1008\":1,\"1009\":1,\"1011\":1,\"1012\":1,\"1013\":1,\"1518\":2,\"1519\":1,\"1520\":3,\"1522\":1,\"1523\":1,\"1524\":1,\"1526\":1,\"1527\":1,\"1528\":1}}],[\"conftest\",{\"1\":{\"478\":1,\"988\":1,\"1503\":1}}],[\"config=config\",{\"1\":{\"110\":1,\"618\":1,\"1128\":1}}],[\"config\",{\"0\":{\"162\":1,\"438\":1,\"441\":1,\"456\":1,\"467\":1,\"670\":1,\"948\":1,\"951\":1,\"966\":1,\"977\":1,\"1180\":1,\"1463\":1,\"1466\":1,\"1481\":1,\"1492\":1},\"1\":{\"110\":4,\"145\":1,\"157\":1,\"165\":1,\"216\":2,\"224\":1,\"227\":1,\"230\":1,\"424\":4,\"425\":1,\"426\":5,\"433\":4,\"438\":4,\"441\":2,\"463\":1,\"467\":1,\"468\":7,\"470\":6,\"471\":6,\"513\":1,\"518\":1,\"519\":1,\"618\":4,\"653\":1,\"665\":1,\"673\":1,\"724\":2,\"732\":1,\"735\":1,\"738\":1,\"934\":7,\"935\":1,\"936\":8,\"943\":4,\"948\":4,\"951\":2,\"973\":1,\"977\":1,\"978\":7,\"980\":6,\"981\":6,\"1023\":1,\"1028\":1,\"1029\":1,\"1128\":4,\"1163\":1,\"1175\":1,\"1183\":1,\"1236\":2,\"1244\":1,\"1247\":1,\"1250\":1,\"1449\":7,\"1450\":1,\"1451\":8,\"1458\":4,\"1463\":4,\"1466\":2,\"1488\":1,\"1492\":1,\"1493\":7,\"1495\":6,\"1496\":6,\"1538\":1,\"1543\":1,\"1544\":1,\"1574\":1,\"1593\":1,\"1668\":2,\"1681\":1,\"1705\":2,\"1709\":3,\"1711\":1,\"1759\":2,\"1772\":1,\"1800\":2,\"1807\":1,\"1898\":3,\"1899\":4,\"1943\":1,\"1962\":1,\"2037\":2,\"2050\":1,\"2074\":2,\"2078\":3,\"2080\":1,\"2128\":2,\"2141\":1,\"2169\":2,\"2176\":1,\"2267\":3,\"2268\":4,\"2312\":1,\"2324\":1,\"2406\":2,\"2419\":1,\"2443\":2,\"2457\":3,\"2459\":1,\"2497\":2,\"2510\":1,\"2538\":2,\"2545\":1,\"2636\":3,\"2637\":4,\"2679\":1,\"2694\":1,\"2709\":1}}],[\"contains\",{\"1\":{\"1607\":1,\"1976\":1,\"2345\":1}}],[\"contact\",{\"1\":{\"480\":1,\"492\":1,\"496\":1,\"500\":1,\"990\":1,\"1002\":1,\"1006\":1,\"1010\":1,\"1505\":1,\"1517\":1,\"1521\":1,\"1525\":1}}],[\"contributing\",{\"1\":{\"460\":1,\"486\":1,\"487\":1,\"497\":1,\"498\":1,\"499\":1,\"970\":1,\"996\":1,\"997\":1,\"1007\":1,\"1008\":1,\"1009\":1,\"1485\":1,\"1511\":1,\"1512\":1,\"1522\":1,\"1523\":1,\"1524\":1}}],[\"contenttypes\",{\"1\":{\"1728\":1,\"1729\":1,\"2097\":1,\"2098\":1,\"2478\":1,\"2479\":1}}],[\"content\",{\"1\":{\"1728\":1,\"1729\":1,\"1902\":4,\"1903\":2,\"2097\":1,\"2098\":1,\"2271\":4,\"2272\":2,\"2478\":1,\"2479\":1,\"2640\":4,\"2641\":2}}],[\"content=\",{\"1\":{\"120\":1,\"471\":1,\"628\":1,\"981\":1,\"1138\":1,\"1496\":1}}],[\"context\",{\"0\":{\"1915\":1,\"2284\":1,\"2653\":1},\"1\":{\"407\":2,\"476\":2,\"915\":2,\"986\":2,\"1430\":2,\"1501\":2,\"1896\":1,\"1897\":1,\"1907\":3,\"2265\":1,\"2266\":1,\"2276\":3,\"2634\":1,\"2635\":1,\"2645\":3}}],[\"contextlib\",{\"1\":{\"121\":1,\"629\":1,\"1139\":1}}],[\"conduct\",{\"0\":{\"459\":1,\"969\":1,\"1484\":1},\"1\":{\"459\":1,\"969\":1,\"1484\":1}}],[\"constraint\",{\"1\":{\"2678\":1,\"2679\":1,\"2693\":1,\"2694\":1,\"2708\":1,\"2709\":1}}],[\"constraints\",{\"1\":{\"401\":1,\"909\":1,\"1424\":1}}],[\"construct\",{\"1\":{\"152\":1,\"477\":1,\"660\":1,\"987\":1,\"1170\":1,\"1502\":1}}],[\"consts\",{\"0\":{\"176\":1,\"684\":1,\"1194\":1}}],[\"consoleadapter\",{\"1\":{\"507\":2,\"1017\":2,\"1532\":2}}],[\"consolebot\",{\"1\":{\"422\":2,\"932\":2,\"1447\":2}}],[\"console\",{\"1\":{\"38\":2,\"39\":3,\"40\":3,\"218\":1,\"421\":3,\"422\":2,\"494\":1,\"505\":1,\"507\":1,\"532\":2,\"534\":1,\"536\":1,\"537\":1,\"541\":1,\"543\":4,\"546\":2,\"547\":3,\"548\":3,\"726\":1,\"931\":3,\"932\":2,\"1004\":1,\"1015\":1,\"1017\":1,\"1042\":2,\"1044\":1,\"1046\":1,\"1047\":1,\"1051\":1,\"1053\":4,\"1056\":2,\"1057\":3,\"1058\":3,\"1238\":1,\"1446\":3,\"1447\":2,\"1519\":1,\"1530\":1,\"1532\":1,\"1557\":2,\"1559\":1,\"1561\":1,\"1562\":1,\"1566\":1,\"1568\":4}}],[\"connections\",{\"1\":{\"470\":1,\"980\":1,\"1495\":1}}],[\"connect\",{\"1\":{\"129\":1,\"472\":3,\"637\":1,\"982\":3,\"1147\":1,\"1497\":3,\"1935\":2,\"2304\":2,\"2673\":2}}],[\"cookietypes\",{\"1\":{\"1652\":1,\"1659\":1,\"1698\":1,\"1704\":1,\"1721\":1,\"1726\":1,\"1728\":1,\"1753\":1,\"2021\":1,\"2028\":1,\"2067\":1,\"2073\":1,\"2090\":1,\"2095\":1,\"2097\":1,\"2122\":1,\"2390\":1,\"2397\":1,\"2436\":1,\"2442\":1,\"2450\":1,\"2455\":1,\"2473\":1,\"2478\":1}}],[\"cookies\",{\"1\":{\"1652\":1,\"1659\":1,\"1698\":1,\"1704\":1,\"1721\":1,\"1726\":1,\"1728\":1,\"1753\":1,\"2021\":1,\"2028\":1,\"2067\":1,\"2073\":1,\"2090\":1,\"2095\":1,\"2097\":1,\"2122\":1,\"2390\":1,\"2397\":1,\"2436\":1,\"2442\":1,\"2450\":1,\"2455\":1,\"2473\":1,\"2478\":1}}],[\"cookie\",{\"1\":{\"53\":2,\"561\":2,\"1071\":2}}],[\"code=200\",{\"1\":{\"471\":1,\"981\":1,\"1496\":1}}],[\"code\",{\"0\":{\"10\":1,\"22\":1,\"34\":1,\"459\":1,\"969\":1,\"1484\":1},\"1\":{\"10\":1,\"22\":1,\"34\":1,\"459\":1,\"492\":1,\"496\":1,\"969\":1,\"1002\":1,\"1006\":1,\"1484\":1,\"1517\":1,\"1521\":1,\"1662\":1,\"1691\":1,\"1729\":1,\"1738\":1,\"1782\":1,\"1794\":1,\"1934\":1,\"2031\":1,\"2060\":1,\"2098\":1,\"2107\":1,\"2151\":1,\"2163\":1,\"2303\":1,\"2400\":1,\"2429\":1,\"2479\":1,\"2485\":1,\"2520\":1,\"2532\":1,\"2672\":1}}],[\"框架搭建的机器人具有以下几个基本组成部分\",{\"1\":{\"523\":1,\"1033\":1,\"1548\":1}}],[\"框架的使用\",{\"1\":{\"503\":1,\"1013\":1,\"1528\":1}}],[\"框架与\",{\"1\":{\"502\":1,\"1012\":1,\"1527\":1}}],[\"框架进行构建\",{\"1\":{\"501\":1,\"1011\":1,\"1526\":1}}],[\"框架功能与插件编写\",{\"1\":{\"499\":1,\"1009\":1,\"1524\":1}}],[\"框架功能\",{\"1\":{\"493\":1,\"494\":1,\"495\":1,\"497\":1,\"498\":1,\"1003\":1,\"1004\":1,\"1005\":1,\"1007\":1,\"1008\":1,\"1518\":1,\"1519\":1,\"1520\":1,\"1522\":1,\"1523\":1}}],[\"框架\",{\"1\":{\"58\":1,\"499\":1,\"566\":1,\"1009\":1,\"1076\":1,\"1524\":1}}],[\"框架初始化完成后\",{\"1\":{\"55\":1,\"563\":1,\"1073\":1}}],[\"框架使用\",{\"1\":{\"8\":1,\"20\":1,\"32\":1}}],[\"框架基于\",{\"1\":{\"8\":1,\"20\":1,\"32\":1,\"502\":1,\"1012\":1,\"1527\":1}}],[\"还提供了一种更加简洁的方式来使用正则表达式\",{\"1\":{\"1887\":1,\"2256\":1,\"2625\":1}}],[\"还可以使用本地文件来自行管理数据\",{\"1\":{\"431\":1,\"941\":1,\"1456\":1}}],[\"还可以自行添加配置项到\",{\"1\":{\"165\":1,\"673\":1,\"1183\":1}}],[\"还有其他平台提供的信息\",{\"1\":{\"420\":1,\"930\":1,\"1445\":1}}],[\"还有几个可选的属性\",{\"1\":{\"110\":1,\"618\":1,\"1128\":1}}],[\"还有更多\",{\"1\":{\"7\":1,\"19\":1,\"31\":1}}],[\"还内置了一些常用的响应规则\",{\"1\":{\"93\":1,\"601\":1,\"1111\":1}}],[\"还能尽量减少代码的耦合和重复\",{\"1\":{\"7\":1,\"19\":1,\"31\":1}}],[\"它记录了数据库模式的变化\",{\"1\":{\"2679\":1,\"2694\":1,\"2709\":1}}],[\"它定义了一个路由\",{\"1\":{\"1934\":1,\"1935\":1,\"2303\":1,\"2304\":1,\"2672\":1,\"2673\":1}}],[\"它定义的事件响应器能响应机器人用户发送的\",{\"1\":{\"524\":1,\"1034\":1,\"1549\":1}}],[\"它要求创建的alconna的主命令前缀必须是\",{\"1\":{\"1898\":1,\"2267\":1,\"2636\":1}}],[\"它在提醒我们\",{\"1\":{\"2679\":1,\"2694\":1,\"2709\":1}}],[\"它在以下常见场景中尤其有用\",{\"1\":{\"543\":1,\"1053\":1,\"1568\":1}}],[\"它在完成上述工作的同时\",{\"1\":{\"7\":1,\"19\":1,\"31\":1}}],[\"它的用法和\",{\"1\":{\"543\":1,\"1053\":1,\"1568\":1}}],[\"它的类型即是消息序列\",{\"1\":{\"530\":1,\"1040\":1,\"1555\":1}}],[\"它的模块结构如下\",{\"1\":{\"110\":1,\"618\":1,\"1128\":1}}],[\"它可能是一段纯文本\",{\"1\":{\"528\":1,\"1038\":1,\"1553\":1}}],[\"它可以匹配多个会话\",{\"1\":{\"140\":1,\"648\":1,\"1158\":1}}],[\"它由\",{\"1\":{\"502\":1,\"1012\":1,\"1527\":1}}],[\"它由一系列的\",{\"1\":{\"423\":1,\"933\":1,\"1448\":1}}],[\"它接收三个参数\",{\"1\":{\"466\":1,\"976\":1,\"1491\":1}}],[\"它会根据类型标注和\",{\"1\":{\"2681\":1,\"2696\":1,\"2711\":1}}],[\"它会根据配置中的\",{\"1\":{\"99\":1,\"607\":1,\"1117\":1}}],[\"它会并发调用每个\",{\"1\":{\"425\":1,\"935\":1,\"1450\":1}}],[\"它会检查配置项\",{\"1\":{\"424\":1,\"934\":1,\"1449\":1}}],[\"它将会话的触发权限更新为当前事件的会话\",{\"1\":{\"140\":1,\"648\":1,\"1158\":1}}],[\"它允许插件开发者为插件添加一些额外的信息\",{\"1\":{\"110\":1,\"618\":1,\"1128\":1}}],[\"它们是用来创建和删除表的\",{\"1\":{\"2679\":1,\"2694\":1,\"2709\":1}}],[\"它们专为其他插件提供功能支持\",{\"1\":{\"115\":1,\"623\":1,\"1133\":1}}],[\"它们可以帮助我们进行响应器的统一管理\",{\"1\":{\"104\":1,\"612\":1,\"1122\":1}}],[\"它们默认存储在一个字典中\",{\"1\":{\"81\":1,\"589\":1,\"1099\":1}}],[\"它首先与\",{\"1\":{\"100\":1,\"608\":1,\"1118\":1}}],[\"它用于匹配消息是否为命令\",{\"1\":{\"99\":1,\"607\":1,\"1117\":1}}],[\"它决定了整个\",{\"1\":{\"81\":1,\"589\":1,\"1099\":1}}],[\"它是机器人初始化的第一步\",{\"1\":{\"52\":1,\"560\":1,\"1070\":1}}],[\"它是机器人的唯一\",{\"1\":{\"40\":1,\"548\":1,\"1058\":1}}],[\"它负责在驱动器和机器人插件之间转换与传递消息\",{\"1\":{\"36\":1,\"544\":1,\"1054\":1}}],[\"它基于\",{\"1\":{\"0\":1,\"12\":1,\"24\":1}}],[\"sqldepends\",{\"0\":{\"2688\":1,\"2703\":1,\"2718\":1},\"1\":{\"2681\":4,\"2688\":2,\"2696\":4,\"2703\":2,\"2711\":4,\"2718\":2}}],[\"sql\",{\"1\":{\"2679\":1,\"2681\":2,\"2688\":3,\"2689\":12,\"2694\":1,\"2696\":2,\"2703\":3,\"2704\":12,\"2709\":1,\"2711\":2,\"2718\":3,\"2719\":12}}],[\"sqlite3\",{\"1\":{\"2690\":2,\"2705\":2,\"2720\":2}}],[\"sqlite+aiosqlite\",{\"1\":{\"1930\":1,\"2299\":1,\"2668\":1,\"2690\":2,\"2705\":2,\"2720\":2}}],[\"sqlite\",{\"1\":{\"1921\":2,\"1930\":1,\"2290\":2,\"2299\":1,\"2659\":2,\"2668\":1,\"2690\":12,\"2705\":12,\"2720\":12}}],[\"sqlalchemy\",{\"0\":{\"1929\":1,\"1930\":1,\"1931\":1,\"1932\":1,\"2298\":1,\"2299\":1,\"2300\":1,\"2301\":1,\"2667\":1,\"2668\":1,\"2669\":1,\"2670\":1},\"1\":{\"7\":1,\"19\":1,\"31\":1,\"499\":2,\"1009\":2,\"1524\":2,\"1929\":2,\"1930\":1,\"1931\":1,\"1932\":5,\"2298\":2,\"2299\":1,\"2300\":1,\"2301\":5,\"2667\":2,\"2668\":1,\"2669\":1,\"2670\":5,\"2676\":1,\"2678\":2,\"2679\":1,\"2680\":1,\"2681\":1,\"2684\":1,\"2685\":1,\"2687\":1,\"2688\":1,\"2690\":2,\"2691\":1,\"2693\":2,\"2694\":1,\"2695\":1,\"2696\":1,\"2699\":1,\"2700\":1,\"2702\":1,\"2703\":1,\"2705\":2,\"2706\":1,\"2708\":2,\"2709\":1,\"2710\":1,\"2711\":1,\"2714\":1,\"2715\":1,\"2717\":1,\"2718\":1,\"2720\":2}}],[\"sa\",{\"1\":{\"2679\":11,\"2689\":4,\"2694\":11,\"2704\":4,\"2709\":11,\"2719\":4}}],[\"saa\",{\"0\":{\"1916\":1,\"2285\":1,\"2654\":1},\"1\":{\"1916\":1,\"2285\":1,\"2654\":1}}],[\"sample\",{\"1\":{\"447\":1,\"957\":1,\"1472\":1}}],[\"same\",{\"1\":{\"438\":1,\"948\":1,\"1463\":1}}],[\"spec\",{\"1\":{\"1633\":1,\"1638\":1,\"1829\":1,\"2002\":1,\"2007\":1,\"2198\":1,\"2371\":1,\"2376\":1,\"2567\":1}}],[\"sphinx\",{\"1\":{\"483\":1,\"486\":1,\"487\":1,\"993\":1,\"996\":1,\"997\":1,\"1508\":1,\"1511\":1,\"1512\":1}}],[\"slice\",{\"1\":{\"541\":1,\"1051\":1,\"1566\":1,\"1605\":2,\"1974\":2,\"2343\":2}}],[\"sleep\",{\"1\":{\"470\":1,\"980\":1,\"1495\":1}}],[\"size\",{\"1\":{\"1931\":1,\"2300\":1,\"2669\":1}}],[\"signature\",{\"1\":{\"1648\":1,\"2017\":1,\"2386\":1}}],[\"single\",{\"1\":{\"521\":1,\"1031\":1,\"1546\":1}}],[\"simplicity\",{\"1\":{\"79\":1,\"587\":1,\"1097\":1}}],[\"src\",{\"1\":{\"516\":1,\"1026\":1,\"1541\":1}}],[\"scalarresult\",{\"1\":{\"2689\":1,\"2704\":1,\"2719\":1}}],[\"scalars\",{\"1\":{\"2687\":1,\"2689\":7,\"2702\":1,\"2704\":7,\"2717\":1,\"2719\":7}}],[\"scoped\",{\"0\":{\"2685\":1,\"2700\":1,\"2715\":1},\"1\":{\"2680\":8,\"2684\":2,\"2685\":4,\"2695\":8,\"2699\":2,\"2700\":4,\"2710\":8,\"2714\":2,\"2715\":4}}],[\"scott\",{\"1\":{\"1930\":1,\"2299\":1,\"2668\":1}}],[\"sct\",{\"1\":{\"1905\":1,\"2274\":1,\"2643\":1}}],[\"scripts\",{\"1\":{\"505\":1,\"1015\":1,\"1530\":1}}],[\"scheduled\",{\"1\":{\"452\":1,\"962\":1,\"1477\":1}}],[\"scheduler\",{\"1\":{\"448\":1,\"451\":2,\"452\":3,\"454\":2,\"958\":1,\"961\":2,\"962\":3,\"964\":2,\"1473\":1,\"1476\":2,\"1477\":3,\"1479\":2}}],[\"schema=none\",{\"1\":{\"2679\":1,\"2694\":1,\"2709\":1}}],[\"schema\",{\"1\":{\"63\":1,\"571\":1,\"1081\":1,\"1674\":1,\"2043\":1,\"2412\":1,\"2678\":1,\"2693\":1,\"2708\":1}}],[\"sk\",{\"1\":{\"495\":1,\"1005\":1,\"1520\":1}}],[\"skip\",{\"1\":{\"200\":4,\"708\":4,\"1220\":4}}],[\"skippedexception\",{\"1\":{\"195\":1,\"703\":1,\"1215\":1}}],[\"sys\",{\"1\":{\"418\":1,\"928\":1,\"1443\":1}}],[\"sync\",{\"1\":{\"78\":1,\"333\":2,\"347\":2,\"406\":1,\"407\":1,\"586\":1,\"841\":2,\"855\":2,\"914\":1,\"915\":1,\"1096\":1,\"1353\":2,\"1370\":2,\"1429\":1,\"1430\":1}}],[\"soon\",{\"1\":{\"801\":1,\"1313\":1}}],[\"source\",{\"1\":{\"242\":1,\"505\":1,\"750\":1,\"1015\":1,\"1263\":1,\"1530\":1,\"1853\":1,\"1854\":1,\"2222\":1,\"2223\":1,\"2591\":1,\"2592\":1}}],[\"something\",{\"1\":{\"127\":1,\"128\":1,\"129\":1,\"130\":1,\"132\":1,\"133\":1,\"134\":1,\"135\":1,\"466\":1,\"471\":2,\"635\":1,\"636\":1,\"637\":1,\"638\":1,\"640\":1,\"641\":1,\"642\":1,\"643\":1,\"976\":1,\"981\":2,\"1145\":1,\"1146\":1,\"1147\":1,\"1148\":1,\"1150\":1,\"1151\":1,\"1152\":1,\"1153\":1,\"1491\":1,\"1496\":2}}],[\"some\",{\"1\":{\"117\":1,\"121\":1,\"132\":1,\"134\":1,\"205\":1,\"206\":1,\"207\":1,\"427\":1,\"429\":1,\"539\":1,\"625\":1,\"629\":1,\"640\":1,\"642\":1,\"713\":1,\"714\":1,\"715\":1,\"937\":1,\"939\":1,\"1049\":1,\"1135\":1,\"1139\":1,\"1150\":1,\"1152\":1,\"1225\":1,\"1226\":1,\"1227\":1,\"1452\":1,\"1454\":1,\"1564\":1,\"1812\":2,\"1813\":2,\"2181\":2,\"2182\":2,\"2550\":2,\"2551\":2}}],[\"s\",{\"1\":{\"175\":1,\"227\":4,\"398\":1,\"683\":1,\"735\":4,\"906\":1,\"1193\":1,\"1247\":4,\"1421\":1}}],[\"ssg\",{\"1\":{\"501\":2,\"1011\":2,\"1526\":2}}],[\"ss\",{\"1\":{\"175\":2,\"418\":2,\"683\":2,\"928\":2,\"1193\":2,\"1443\":2}}],[\"shortcutregwrapper\",{\"1\":{\"1900\":1,\"2269\":1,\"2638\":1}}],[\"shortcutargs\",{\"1\":{\"1900\":2,\"2269\":2,\"2638\":2}}],[\"shortcut\",{\"1\":{\"1896\":1,\"1897\":2,\"1900\":2,\"1901\":1,\"1902\":8,\"1905\":1,\"2265\":1,\"2266\":2,\"2269\":2,\"2270\":1,\"2271\":8,\"2274\":1,\"2634\":1,\"2635\":2,\"2638\":2,\"2639\":1,\"2640\":8,\"2643\":1}}],[\"shanghai\",{\"1\":{\"456\":1,\"966\":1,\"1481\":1}}],[\"share\",{\"1\":{\"437\":1,\"947\":1,\"1462\":1}}],[\"shutdown\",{\"1\":{\"128\":1,\"447\":1,\"470\":3,\"636\":1,\"957\":1,\"980\":3,\"1146\":1,\"1472\":1,\"1495\":3}}],[\"shelltextformatter\",{\"1\":{\"1898\":2,\"2267\":2,\"2636\":2}}],[\"shellcommandargs\",{\"1\":{\"100\":1,\"365\":2,\"608\":1,\"873\":2,\"1118\":1,\"1388\":2,\"1866\":1,\"1883\":1,\"2235\":1,\"2252\":1,\"2604\":1,\"2621\":1}}],[\"shellcommandargv\",{\"1\":{\"100\":1,\"365\":1,\"608\":1,\"873\":1,\"1118\":1,\"1388\":1,\"1866\":1,\"1883\":1,\"2235\":1,\"2252\":1,\"2604\":1,\"2621\":1}}],[\"shell\",{\"1\":{\"100\":7,\"188\":1,\"189\":1,\"216\":2,\"316\":1,\"317\":1,\"362\":1,\"364\":1,\"365\":2,\"608\":7,\"696\":1,\"697\":1,\"724\":2,\"824\":1,\"825\":1,\"870\":1,\"872\":1,\"873\":2,\"1118\":7,\"1208\":1,\"1209\":1,\"1236\":2,\"1337\":1,\"1338\":1,\"1385\":1,\"1387\":1,\"1388\":2,\"1802\":2,\"1866\":1,\"1871\":1,\"1883\":1,\"2171\":2,\"2235\":1,\"2240\":1,\"2252\":1,\"2540\":2,\"2604\":1,\"2609\":1,\"2621\":1}}],[\"sun\",{\"1\":{\"502\":1,\"1012\":1,\"1527\":1}}],[\"summer\",{\"1\":{\"492\":1,\"496\":1,\"1002\":1,\"1006\":1,\"1517\":1,\"1521\":1}}],[\"success\",{\"1\":{\"417\":3,\"927\":3,\"1442\":3,\"1934\":1,\"1935\":1,\"2303\":1,\"2304\":1,\"2672\":1,\"2673\":1,\"2679\":1,\"2694\":1,\"2709\":1}}],[\"super\",{\"1\":{\"468\":1,\"470\":1,\"471\":1,\"475\":1,\"978\":1,\"980\":1,\"981\":1,\"985\":1,\"1493\":1,\"1495\":1,\"1496\":1,\"1500\":1}}],[\"superusers=\",{\"1\":{\"171\":1,\"679\":1,\"1189\":1}}],[\"suppress\",{\"1\":{\"121\":1,\"629\":1,\"1139\":1}}],[\"supportsindex\",{\"1\":{\"1608\":1,\"1977\":1,\"2346\":1}}],[\"supported\",{\"1\":{\"110\":1,\"618\":1,\"1128\":1}}],[\"support\",{\"1\":{\"78\":1,\"437\":1,\"470\":1,\"471\":1,\"586\":1,\"947\":1,\"980\":1,\"981\":1,\"1096\":1,\"1462\":1,\"1495\":1,\"1496\":1}}],[\"subcomanndresult\",{\"1\":{\"1893\":1,\"2262\":1,\"2631\":1}}],[\"subcommandstub\",{\"1\":{\"1906\":4,\"2275\":4,\"2644\":4}}],[\"subcommands\",{\"1\":{\"1895\":1,\"2264\":1,\"2633\":1}}],[\"subcommands=\",{\"1\":{\"1886\":2,\"1906\":2,\"2255\":2,\"2275\":2,\"2624\":2,\"2644\":2}}],[\"subcommand\",{\"0\":{\"1893\":1,\"2262\":1,\"2631\":1},\"1\":{\"1886\":3,\"1893\":5,\"1898\":3,\"1903\":1,\"1906\":2,\"2255\":3,\"2262\":5,\"2267\":3,\"2272\":1,\"2275\":2,\"2624\":3,\"2631\":5,\"2636\":3,\"2641\":1,\"2644\":2}}],[\"sub\",{\"1\":{\"105\":3,\"111\":1,\"113\":1,\"114\":1,\"361\":2,\"613\":3,\"619\":1,\"621\":1,\"622\":1,\"869\":2,\"1123\":3,\"1129\":1,\"1131\":1,\"1132\":1,\"1384\":2}}],[\"swagger\",{\"1\":{\"61\":2,\"569\":2,\"1079\":2,\"1672\":1,\"2041\":1,\"2410\":1}}],[\"steps\",{\"1\":{\"2690\":2,\"2705\":2,\"2720\":2}}],[\"style=\",{\"1\":{\"1907\":1,\"2276\":1,\"2645\":1}}],[\"style\",{\"0\":{\"1915\":1,\"2284\":1,\"2653\":1},\"1\":{\"1896\":1,\"1897\":1,\"1907\":2,\"2265\":1,\"2266\":1,\"2276\":2,\"2634\":1,\"2635\":1,\"2645\":2}}],[\"stdout\",{\"1\":{\"227\":1,\"418\":1,\"735\":1,\"928\":1,\"1247\":1,\"1443\":1}}],[\"store\",{\"1\":{\"100\":2,\"365\":1,\"433\":8,\"608\":2,\"873\":1,\"943\":8,\"1118\":2,\"1388\":1,\"1458\":8,\"1894\":6,\"2263\":6,\"2632\":6}}],[\"stoppropagation\",{\"1\":{\"195\":1,\"703\":1,\"1215\":1}}],[\"stop\",{\"1\":{\"90\":1,\"203\":2,\"598\":1,\"711\":2,\"1108\":1,\"1223\":2}}],[\"staticmethod\",{\"1\":{\"477\":1,\"987\":1,\"1502\":1}}],[\"status\",{\"1\":{\"471\":1,\"981\":1,\"1496\":1,\"1729\":1,\"1934\":2,\"1935\":1,\"2098\":1,\"2303\":2,\"2304\":1,\"2479\":1,\"2672\":2,\"2673\":1}}],[\"stateparam\",{\"1\":{\"387\":1,\"388\":1,\"389\":1,\"390\":1,\"391\":1,\"394\":1,\"395\":1,\"895\":1,\"896\":1,\"897\":1,\"898\":1,\"899\":1,\"902\":1,\"903\":1,\"1410\":1,\"1411\":1,\"1412\":1,\"1413\":1,\"1414\":1,\"1417\":1,\"1418\":1}}],[\"state\",{\"1\":{\"92\":1,\"93\":1,\"242\":3,\"245\":2,\"271\":2,\"272\":2,\"292\":2,\"301\":2,\"349\":3,\"382\":1,\"387\":1,\"388\":1,\"389\":1,\"390\":1,\"391\":1,\"394\":1,\"395\":1,\"427\":1,\"429\":17,\"600\":1,\"601\":1,\"750\":3,\"753\":2,\"779\":2,\"780\":2,\"800\":2,\"809\":2,\"857\":3,\"890\":1,\"895\":1,\"896\":1,\"897\":1,\"898\":1,\"899\":1,\"902\":1,\"903\":1,\"937\":1,\"939\":17,\"1110\":1,\"1111\":1,\"1263\":3,\"1266\":2,\"1292\":2,\"1293\":2,\"1312\":2,\"1327\":2,\"1372\":3,\"1405\":1,\"1410\":1,\"1411\":1,\"1412\":1,\"1413\":1,\"1414\":1,\"1417\":1,\"1418\":1,\"1452\":1,\"1454\":17,\"1856\":3,\"1857\":3,\"1858\":3,\"1859\":3,\"1860\":3,\"1861\":3,\"1862\":3,\"1863\":3,\"1864\":3,\"1865\":3,\"1866\":3,\"1867\":3,\"1868\":3,\"1869\":2,\"1870\":3,\"1871\":3,\"1872\":2,\"1873\":3,\"1874\":3,\"1875\":3,\"1876\":3,\"1877\":3,\"1878\":3,\"1879\":3,\"1880\":3,\"1881\":3,\"1882\":3,\"1883\":3,\"1884\":3,\"1885\":3,\"2225\":3,\"2226\":3,\"2227\":3,\"2228\":3,\"2229\":3,\"2230\":3,\"2231\":3,\"2232\":3,\"2233\":3,\"2234\":3,\"2235\":3,\"2236\":3,\"2237\":3,\"2238\":2,\"2239\":3,\"2240\":3,\"2241\":2,\"2242\":3,\"2243\":3,\"2244\":3,\"2245\":3,\"2246\":3,\"2247\":3,\"2248\":3,\"2249\":3,\"2250\":3,\"2251\":3,\"2252\":3,\"2253\":3,\"2254\":3,\"2594\":3,\"2595\":3,\"2596\":3,\"2597\":3,\"2598\":3,\"2599\":3,\"2600\":3,\"2601\":3,\"2602\":3,\"2603\":3,\"2604\":3,\"2605\":3,\"2606\":3,\"2607\":2,\"2608\":3,\"2609\":3,\"2610\":2,\"2611\":3,\"2612\":3,\"2613\":3,\"2614\":3,\"2615\":3,\"2616\":3,\"2617\":3,\"2618\":3,\"2619\":3,\"2620\":3,\"2621\":3,\"2622\":3,\"2623\":3,\"2680\":9,\"2695\":9,\"2710\":9}}],[\"stacktrace\",{\"1\":{\"447\":1,\"957\":1,\"1472\":1}}],[\"stack\",{\"1\":{\"244\":1,\"245\":1,\"267\":1,\"268\":1,\"271\":1,\"272\":1,\"292\":1,\"335\":1,\"349\":1,\"752\":1,\"753\":1,\"775\":1,\"776\":1,\"779\":1,\"780\":1,\"800\":1,\"843\":1,\"857\":1,\"1265\":1,\"1266\":1,\"1288\":1,\"1289\":1,\"1292\":1,\"1293\":1,\"1312\":1,\"1355\":1,\"1372\":1}}],[\"start=\",{\"1\":{\"173\":1,\"506\":1,\"681\":1,\"1016\":1,\"1191\":1,\"1531\":1}}],[\"startup\",{\"1\":{\"127\":1,\"470\":3,\"635\":1,\"980\":3,\"1145\":1,\"1495\":3,\"1927\":1,\"2296\":1,\"2665\":1,\"2679\":2,\"2694\":2,\"2709\":2}}],[\"start\",{\"0\":{\"1910\":1,\"2279\":1,\"2648\":1},\"1\":{\"99\":2,\"186\":1,\"351\":1,\"361\":2,\"365\":2,\"454\":1,\"607\":2,\"694\":1,\"801\":1,\"859\":1,\"869\":2,\"873\":2,\"964\":1,\"1117\":2,\"1206\":1,\"1313\":1,\"1374\":1,\"1384\":2,\"1388\":2,\"1479\":1,\"1608\":1,\"1910\":1,\"1977\":1,\"2279\":1,\"2346\":1,\"2648\":1}}],[\"startswith\",{\"1\":{\"95\":5,\"191\":1,\"216\":2,\"603\":5,\"699\":1,\"724\":2,\"1113\":5,\"1211\":1,\"1236\":2,\"1802\":2,\"2171\":2,\"2540\":2,\"2690\":4,\"2705\":4,\"2720\":4}}],[\"standard\",{\"1\":{\"58\":1,\"147\":1,\"566\":1,\"655\":1,\"1076\":1,\"1165\":1}}],[\"strategy\",{\"1\":{\"2690\":2,\"2705\":2,\"2720\":2}}],[\"stream\",{\"1\":{\"2687\":1,\"2689\":9,\"2702\":1,\"2704\":9,\"2717\":1,\"2719\":9}}],[\"strict\",{\"1\":{\"1896\":1,\"1897\":1,\"2265\":1,\"2266\":1,\"2634\":1,\"2635\":1}}],[\"string\",{\"1\":{\"45\":1,\"209\":1,\"553\":1,\"717\":1,\"1063\":1,\"1229\":1,\"1602\":1,\"1636\":1,\"1887\":1,\"1971\":1,\"2005\":1,\"2256\":1,\"2340\":1,\"2374\":1,\"2625\":1,\"2679\":6,\"2694\":6,\"2709\":6}}],[\"strftime\",{\"1\":{\"421\":1,\"931\":1,\"1446\":1}}],[\"str\",{\"1\":{\"42\":1,\"43\":1,\"44\":1,\"45\":1,\"46\":1,\"47\":1,\"49\":1,\"60\":1,\"61\":1,\"62\":1,\"65\":1,\"67\":1,\"68\":1,\"69\":1,\"73\":1,\"75\":1,\"76\":1,\"77\":1,\"111\":1,\"114\":1,\"120\":2,\"121\":1,\"136\":2,\"137\":2,\"139\":1,\"147\":1,\"149\":1,\"152\":1,\"155\":1,\"158\":3,\"160\":1,\"163\":2,\"164\":1,\"165\":2,\"166\":1,\"169\":1,\"171\":1,\"172\":1,\"173\":1,\"174\":1,\"218\":1,\"219\":1,\"222\":1,\"223\":1,\"231\":1,\"234\":1,\"242\":2,\"250\":1,\"251\":2,\"252\":1,\"253\":1,\"254\":1,\"255\":1,\"256\":2,\"257\":2,\"259\":2,\"260\":1,\"262\":2,\"263\":1,\"264\":1,\"265\":4,\"267\":1,\"295\":1,\"296\":2,\"298\":2,\"303\":2,\"307\":1,\"309\":1,\"311\":1,\"312\":1,\"314\":1,\"315\":1,\"318\":1,\"319\":10,\"321\":1,\"322\":1,\"323\":1,\"324\":1,\"325\":1,\"326\":1,\"329\":1,\"330\":1,\"332\":1,\"352\":1,\"353\":2,\"354\":1,\"355\":2,\"356\":1,\"357\":2,\"358\":1,\"359\":1,\"360\":2,\"361\":3,\"363\":8,\"364\":1,\"365\":2,\"366\":1,\"367\":2,\"380\":2,\"385\":2,\"386\":2,\"394\":1,\"398\":2,\"409\":1,\"410\":1,\"411\":4,\"415\":1,\"421\":1,\"429\":1,\"447\":11,\"467\":2,\"468\":1,\"473\":3,\"474\":3,\"475\":2,\"476\":14,\"477\":3,\"478\":1,\"531\":1,\"533\":1,\"534\":2,\"535\":1,\"537\":1,\"542\":1,\"543\":3,\"550\":1,\"551\":1,\"552\":1,\"553\":1,\"554\":1,\"555\":1,\"557\":1,\"568\":1,\"569\":1,\"570\":1,\"573\":1,\"575\":1,\"576\":1,\"577\":1,\"581\":1,\"583\":1,\"584\":1,\"585\":1,\"619\":1,\"622\":1,\"628\":2,\"629\":1,\"644\":2,\"645\":2,\"647\":1,\"655\":1,\"657\":1,\"660\":1,\"663\":1,\"666\":3,\"668\":1,\"671\":2,\"672\":1,\"673\":2,\"674\":1,\"677\":1,\"679\":1,\"680\":1,\"681\":1,\"682\":1,\"726\":1,\"727\":1,\"730\":1,\"731\":1,\"739\":1,\"742\":1,\"750\":2,\"758\":1,\"759\":2,\"760\":1,\"761\":1,\"762\":1,\"763\":1,\"764\":2,\"765\":2,\"767\":2,\"768\":1,\"770\":2,\"771\":1,\"772\":1,\"773\":4,\"775\":1,\"803\":1,\"804\":2,\"806\":2,\"811\":2,\"815\":1,\"817\":1,\"819\":1,\"820\":1,\"822\":1,\"823\":1,\"826\":1,\"827\":10,\"829\":1,\"830\":1,\"831\":1,\"832\":1,\"833\":1,\"834\":1,\"837\":1,\"838\":1,\"840\":1,\"860\":1,\"861\":2,\"862\":1,\"863\":2,\"864\":1,\"865\":2,\"866\":1,\"867\":1,\"868\":2,\"869\":3,\"871\":8,\"872\":1,\"873\":2,\"874\":1,\"875\":2,\"888\":2,\"893\":2,\"894\":2,\"902\":1,\"906\":2,\"919\":1,\"920\":1,\"921\":4,\"925\":1,\"931\":1,\"939\":1,\"957\":11,\"977\":2,\"978\":1,\"983\":3,\"984\":3,\"985\":2,\"986\":14,\"987\":3,\"988\":1,\"1041\":1,\"1043\":1,\"1044\":2,\"1045\":1,\"1047\":1,\"1052\":1,\"1053\":3,\"1060\":1,\"1061\":1,\"1062\":1,\"1063\":1,\"1064\":1,\"1065\":1,\"1067\":1,\"1078\":1,\"1079\":1,\"1080\":1,\"1083\":1,\"1085\":1,\"1086\":1,\"1087\":1,\"1091\":1,\"1093\":1,\"1094\":1,\"1095\":1,\"1129\":1,\"1132\":1,\"1138\":2,\"1139\":1,\"1154\":2,\"1155\":2,\"1157\":1,\"1165\":1,\"1167\":1,\"1170\":1,\"1173\":1,\"1176\":3,\"1178\":1,\"1181\":2,\"1182\":1,\"1183\":2,\"1184\":1,\"1187\":1,\"1189\":1,\"1190\":1,\"1191\":1,\"1192\":1,\"1238\":1,\"1239\":1,\"1242\":1,\"1243\":1,\"1251\":1,\"1255\":1,\"1263\":2,\"1271\":1,\"1272\":2,\"1273\":1,\"1274\":1,\"1275\":1,\"1276\":1,\"1277\":2,\"1278\":2,\"1280\":2,\"1281\":1,\"1283\":2,\"1284\":1,\"1285\":1,\"1286\":4,\"1288\":1,\"1315\":1,\"1316\":2,\"1317\":2,\"1318\":1,\"1319\":2,\"1328\":1,\"1330\":1,\"1332\":1,\"1333\":1,\"1335\":1,\"1336\":1,\"1339\":1,\"1340\":10,\"1342\":1,\"1343\":1,\"1344\":1,\"1345\":1,\"1346\":1,\"1347\":1,\"1349\":1,\"1352\":1,\"1356\":1,\"1358\":1,\"1375\":1,\"1376\":2,\"1377\":1,\"1378\":2,\"1379\":1,\"1380\":2,\"1381\":1,\"1382\":1,\"1383\":2,\"1384\":3,\"1386\":8,\"1387\":1,\"1388\":2,\"1389\":1,\"1390\":2,\"1403\":2,\"1408\":2,\"1409\":2,\"1417\":1,\"1421\":2,\"1434\":1,\"1435\":1,\"1436\":4,\"1440\":1,\"1446\":1,\"1454\":1,\"1472\":11,\"1492\":2,\"1493\":1,\"1498\":3,\"1499\":3,\"1500\":2,\"1501\":14,\"1502\":3,\"1503\":1,\"1556\":1,\"1558\":1,\"1559\":2,\"1560\":1,\"1562\":1,\"1567\":1,\"1568\":3,\"1570\":1,\"1572\":1,\"1573\":1,\"1575\":1,\"1576\":1,\"1580\":1,\"1581\":1,\"1582\":1,\"1583\":1,\"1584\":1,\"1585\":1,\"1587\":1,\"1591\":1,\"1592\":1,\"1602\":2,\"1604\":1,\"1605\":3,\"1606\":1,\"1607\":1,\"1608\":1,\"1609\":1,\"1610\":1,\"1611\":1,\"1612\":1,\"1616\":1,\"1617\":1,\"1618\":1,\"1620\":1,\"1621\":1,\"1623\":2,\"1624\":1,\"1625\":1,\"1632\":3,\"1633\":1,\"1635\":1,\"1636\":2,\"1637\":3,\"1638\":1,\"1646\":1,\"1649\":1,\"1652\":2,\"1659\":2,\"1662\":1,\"1663\":1,\"1664\":1,\"1666\":1,\"1671\":1,\"1672\":1,\"1673\":1,\"1676\":1,\"1678\":1,\"1679\":1,\"1680\":1,\"1682\":1,\"1688\":2,\"1691\":1,\"1692\":1,\"1693\":1,\"1695\":1,\"1698\":2,\"1704\":2,\"1708\":1,\"1710\":1,\"1712\":1,\"1714\":1,\"1722\":4,\"1723\":5,\"1724\":3,\"1725\":2,\"1727\":2,\"1728\":4,\"1738\":1,\"1739\":1,\"1740\":1,\"1742\":1,\"1743\":1,\"1753\":2,\"1760\":1,\"1767\":1,\"1769\":1,\"1770\":1,\"1771\":1,\"1773\":1,\"1779\":2,\"1782\":1,\"1783\":1,\"1784\":1,\"1786\":1,\"1794\":1,\"1795\":1,\"1796\":1,\"1798\":1,\"1803\":1,\"1804\":1,\"1806\":1,\"1809\":1,\"1810\":1,\"1811\":2,\"1812\":2,\"1813\":2,\"1814\":1,\"1815\":1,\"1816\":1,\"1817\":2,\"1819\":2,\"1820\":1,\"1821\":1,\"1822\":1,\"1823\":2,\"1824\":1,\"1827\":2,\"1828\":2,\"1833\":1,\"1834\":1,\"1835\":1,\"1836\":1,\"1837\":1,\"1839\":1,\"1843\":1,\"1845\":1,\"1850\":1,\"1856\":1,\"1861\":2,\"1862\":2,\"1863\":2,\"1864\":1,\"1865\":5,\"1866\":4,\"1867\":1,\"1869\":2,\"1870\":5,\"1871\":4,\"1872\":1,\"1873\":1,\"1878\":2,\"1879\":2,\"1880\":2,\"1881\":1,\"1882\":5,\"1883\":4,\"1884\":1,\"1886\":3,\"1889\":2,\"1890\":5,\"1891\":3,\"1898\":2,\"1900\":2,\"1902\":3,\"1903\":2,\"1906\":12,\"1914\":1,\"1939\":1,\"1941\":1,\"1942\":1,\"1944\":1,\"1945\":1,\"1949\":1,\"1950\":1,\"1951\":1,\"1952\":1,\"1953\":1,\"1954\":1,\"1956\":1,\"1960\":1,\"1961\":1,\"1971\":2,\"1973\":1,\"1974\":3,\"1975\":1,\"1976\":1,\"1977\":1,\"1978\":1,\"1979\":1,\"1980\":1,\"1981\":1,\"1985\":1,\"1986\":1,\"1987\":1,\"1989\":1,\"1990\":1,\"1992\":2,\"1993\":1,\"1994\":1,\"2001\":3,\"2002\":1,\"2004\":1,\"2005\":2,\"2006\":3,\"2007\":1,\"2015\":1,\"2018\":1,\"2021\":2,\"2028\":2,\"2031\":1,\"2032\":1,\"2033\":1,\"2035\":1,\"2040\":1,\"2041\":1,\"2042\":1,\"2045\":1,\"2047\":1,\"2048\":1,\"2049\":1,\"2051\":1,\"2057\":2,\"2060\":1,\"2061\":1,\"2062\":1,\"2064\":1,\"2067\":2,\"2073\":2,\"2077\":1,\"2079\":1,\"2081\":1,\"2083\":1,\"2091\":4,\"2092\":5,\"2093\":3,\"2094\":2,\"2096\":2,\"2097\":4,\"2107\":1,\"2108\":1,\"2109\":1,\"2111\":1,\"2112\":1,\"2122\":2,\"2129\":1,\"2136\":1,\"2138\":1,\"2139\":1,\"2140\":1,\"2142\":1,\"2148\":2,\"2151\":1,\"2152\":1,\"2153\":1,\"2155\":1,\"2163\":1,\"2164\":1,\"2165\":1,\"2167\":1,\"2172\":1,\"2173\":1,\"2175\":1,\"2178\":1,\"2179\":1,\"2180\":2,\"2181\":2,\"2182\":2,\"2183\":1,\"2184\":1,\"2185\":1,\"2186\":2,\"2188\":2,\"2189\":1,\"2190\":1,\"2191\":1,\"2192\":2,\"2193\":1,\"2196\":2,\"2197\":2,\"2202\":1,\"2203\":1,\"2204\":1,\"2205\":1,\"2206\":1,\"2208\":1,\"2212\":1,\"2214\":1,\"2219\":1,\"2225\":1,\"2230\":2,\"2231\":2,\"2232\":2,\"2233\":1,\"2234\":5,\"2235\":4,\"2236\":1,\"2238\":2,\"2239\":5,\"2240\":4,\"2241\":1,\"2242\":1,\"2247\":2,\"2248\":2,\"2249\":2,\"2250\":1,\"2251\":5,\"2252\":4,\"2253\":1,\"2255\":3,\"2258\":2,\"2259\":5,\"2260\":3,\"2267\":2,\"2269\":2,\"2271\":3,\"2272\":2,\"2275\":12,\"2283\":1,\"2310\":1,\"2311\":1,\"2320\":1,\"2322\":1,\"2323\":1,\"2325\":1,\"2326\":1,\"2330\":1,\"2331\":1,\"2332\":1,\"2333\":1,\"2334\":1,\"2335\":1,\"2337\":1,\"2340\":2,\"2342\":1,\"2343\":3,\"2344\":1,\"2345\":1,\"2346\":1,\"2347\":1,\"2348\":1,\"2349\":1,\"2350\":1,\"2354\":1,\"2355\":1,\"2356\":1,\"2358\":1,\"2359\":1,\"2361\":2,\"2362\":1,\"2363\":1,\"2370\":3,\"2371\":1,\"2373\":1,\"2374\":2,\"2375\":3,\"2376\":1,\"2384\":1,\"2387\":1,\"2390\":2,\"2397\":2,\"2400\":1,\"2401\":1,\"2402\":1,\"2404\":1,\"2409\":1,\"2410\":1,\"2411\":1,\"2414\":1,\"2416\":1,\"2417\":1,\"2418\":1,\"2420\":1,\"2426\":2,\"2429\":1,\"2430\":1,\"2431\":1,\"2433\":1,\"2436\":2,\"2442\":2,\"2451\":4,\"2452\":5,\"2453\":3,\"2454\":2,\"2456\":2,\"2458\":1,\"2460\":1,\"2462\":1,\"2473\":2,\"2477\":1,\"2478\":4,\"2485\":1,\"2486\":1,\"2487\":1,\"2489\":1,\"2490\":1,\"2498\":1,\"2505\":1,\"2507\":1,\"2508\":1,\"2509\":1,\"2511\":1,\"2517\":2,\"2520\":1,\"2521\":1,\"2522\":1,\"2524\":1,\"2532\":1,\"2533\":1,\"2534\":1,\"2536\":1,\"2541\":1,\"2542\":1,\"2544\":1,\"2547\":1,\"2548\":1,\"2549\":2,\"2550\":2,\"2551\":2,\"2552\":1,\"2553\":1,\"2554\":1,\"2555\":2,\"2557\":2,\"2558\":1,\"2559\":1,\"2560\":1,\"2561\":2,\"2562\":1,\"2565\":2,\"2566\":2,\"2571\":1,\"2572\":1,\"2573\":1,\"2574\":1,\"2575\":1,\"2577\":1,\"2581\":1,\"2583\":1,\"2588\":1,\"2594\":1,\"2599\":2,\"2600\":2,\"2601\":2,\"2602\":1,\"2603\":5,\"2604\":4,\"2605\":1,\"2607\":2,\"2608\":5,\"2609\":4,\"2610\":1,\"2611\":1,\"2616\":2,\"2617\":2,\"2618\":2,\"2619\":1,\"2620\":5,\"2621\":4,\"2622\":1,\"2624\":3,\"2627\":2,\"2628\":5,\"2629\":3,\"2636\":2,\"2638\":2,\"2640\":3,\"2641\":2,\"2644\":12,\"2652\":1,\"2678\":2,\"2679\":9,\"2680\":3,\"2681\":4,\"2684\":1,\"2685\":1,\"2693\":2,\"2694\":9,\"2695\":3,\"2696\":4,\"2699\":1,\"2700\":1,\"2708\":2,\"2709\":9,\"2710\":3,\"2711\":4,\"2714\":1,\"2715\":1}}],[\"studio\",{\"0\":{\"10\":1,\"22\":1,\"34\":1},\"1\":{\"10\":1,\"22\":1,\"34\":1}}],[\"services\",{\"1\":{\"2690\":2,\"2705\":2,\"2720\":2}}],[\"servers\",{\"1\":{\"79\":1,\"587\":1,\"1097\":1}}],[\"server\",{\"1\":{\"10\":2,\"22\":2,\"34\":2,\"80\":1,\"120\":1,\"121\":1,\"123\":1,\"220\":2,\"447\":1,\"471\":4,\"588\":1,\"628\":1,\"629\":1,\"631\":1,\"728\":2,\"957\":1,\"981\":4,\"1098\":1,\"1138\":1,\"1139\":1,\"1141\":1,\"1240\":2,\"1472\":1,\"1496\":4,\"1934\":6,\"1935\":3,\"2303\":6,\"2304\":3,\"2672\":6,\"2673\":3}}],[\"second\",{\"1\":{\"542\":2,\"1052\":2,\"1567\":2}}],[\"seg\",{\"1\":{\"542\":2,\"1052\":2,\"1567\":2}}],[\"segment\",{\"1\":{\"477\":1,\"532\":3,\"538\":1,\"987\":1,\"1042\":3,\"1048\":1,\"1502\":1,\"1557\":3,\"1563\":1}}],[\"seo\",{\"1\":{\"501\":3,\"1011\":3,\"1526\":3}}],[\"sentry\",{\"0\":{\"445\":1,\"955\":1,\"1470\":1},\"1\":{\"442\":2,\"443\":2,\"445\":1,\"446\":3,\"447\":22,\"952\":2,\"953\":2,\"955\":1,\"956\":3,\"957\":22,\"1467\":2,\"1468\":2,\"1470\":1,\"1471\":3,\"1472\":22}}],[\"send\",{\"0\":{\"1909\":1,\"2278\":1,\"2647\":1},\"1\":{\"121\":1,\"136\":1,\"137\":1,\"252\":1,\"253\":1,\"254\":1,\"255\":1,\"256\":1,\"257\":1,\"422\":1,\"447\":2,\"474\":5,\"475\":2,\"629\":1,\"644\":1,\"645\":1,\"760\":1,\"761\":1,\"762\":1,\"763\":1,\"764\":1,\"765\":1,\"932\":1,\"957\":2,\"984\":5,\"985\":2,\"1139\":1,\"1154\":1,\"1155\":1,\"1273\":1,\"1274\":1,\"1275\":1,\"1276\":1,\"1277\":1,\"1278\":1,\"1447\":1,\"1472\":2,\"1499\":5,\"1500\":2,\"1575\":2,\"1935\":1,\"1944\":2,\"2304\":1,\"2325\":2,\"2673\":1,\"2680\":2,\"2681\":3,\"2684\":1,\"2685\":1,\"2695\":2,\"2696\":3,\"2699\":1,\"2700\":1,\"2710\":2,\"2711\":3,\"2714\":1,\"2715\":1}}],[\"sequence\",{\"1\":{\"363\":2,\"871\":2,\"1386\":2,\"1636\":1,\"1637\":1,\"1827\":1,\"2005\":1,\"2006\":1,\"2196\":1,\"2374\":1,\"2375\":1,\"2565\":1,\"2679\":4,\"2681\":4,\"2689\":6,\"2694\":4,\"2696\":4,\"2704\":6,\"2709\":4,\"2711\":4,\"2719\":6}}],[\"sep\",{\"0\":{\"1913\":1,\"2282\":1,\"2651\":1},\"1\":{\"361\":2,\"365\":2,\"869\":2,\"873\":2,\"1384\":2,\"1388\":2,\"1913\":1,\"2282\":1,\"2651\":1}}],[\"sep=\",{\"1\":{\"174\":1,\"506\":1,\"682\":1,\"1016\":1,\"1192\":1,\"1531\":1}}],[\"separators\",{\"1\":{\"1897\":1,\"2266\":1,\"2635\":1}}],[\"separator\",{\"1\":{\"99\":2,\"607\":2,\"1117\":2}}],[\"search\",{\"1\":{\"101\":1,\"367\":1,\"609\":1,\"875\":1,\"1119\":1,\"1390\":1,\"1819\":1,\"2188\":1,\"2557\":1}}],[\"setu\",{\"1\":{\"1901\":2,\"1902\":3,\"2270\":2,\"2271\":3,\"2639\":2,\"2640\":3}}],[\"setup\",{\"1\":{\"120\":1,\"121\":1,\"470\":3,\"471\":8,\"628\":1,\"629\":1,\"980\":3,\"981\":8,\"1138\":1,\"1139\":1,\"1495\":3,\"1496\":8,\"1596\":1,\"1597\":1,\"1598\":1,\"1599\":1,\"1653\":1,\"1657\":1,\"1658\":1,\"1686\":1,\"1687\":1,\"1699\":1,\"1703\":1,\"1733\":1,\"1734\":1,\"1752\":1,\"1756\":1,\"1777\":1,\"1778\":1,\"1791\":1,\"1965\":1,\"1966\":1,\"1967\":1,\"1968\":1,\"2022\":1,\"2026\":1,\"2027\":1,\"2055\":1,\"2056\":1,\"2068\":1,\"2072\":1,\"2102\":1,\"2103\":1,\"2121\":1,\"2125\":1,\"2146\":1,\"2147\":1,\"2160\":1,\"2315\":1,\"2316\":1,\"2317\":1,\"2318\":1,\"2391\":1,\"2395\":1,\"2396\":1,\"2424\":1,\"2425\":1,\"2437\":1,\"2441\":1,\"2448\":1,\"2449\":1,\"2472\":1,\"2493\":1,\"2515\":1,\"2516\":1,\"2529\":1,\"2690\":2,\"2705\":2,\"2720\":2}}],[\"settings\",{\"1\":{\"437\":1,\"438\":2,\"947\":1,\"948\":2,\"1462\":1,\"1463\":2}}],[\"set\",{\"1\":{\"83\":2,\"111\":2,\"158\":2,\"171\":1,\"172\":1,\"173\":1,\"174\":1,\"334\":1,\"348\":1,\"591\":2,\"619\":2,\"666\":2,\"679\":1,\"680\":1,\"681\":1,\"682\":1,\"842\":1,\"856\":1,\"1101\":2,\"1129\":2,\"1176\":2,\"1189\":1,\"1190\":1,\"1191\":1,\"1192\":1,\"1354\":1,\"1371\":1,\"1805\":1,\"1806\":1,\"1810\":1,\"1811\":1,\"1812\":1,\"1813\":1,\"1815\":1,\"1817\":1,\"1820\":1,\"1821\":1,\"1822\":1,\"1825\":1,\"1839\":1,\"1841\":1,\"1847\":1,\"1849\":1,\"1864\":1,\"1865\":1,\"1866\":1,\"1870\":1,\"1871\":1,\"1881\":1,\"1882\":1,\"1883\":1,\"2174\":1,\"2175\":1,\"2179\":1,\"2180\":1,\"2181\":1,\"2182\":1,\"2184\":1,\"2186\":1,\"2189\":1,\"2190\":1,\"2191\":1,\"2194\":1,\"2208\":1,\"2210\":1,\"2216\":1,\"2218\":1,\"2233\":1,\"2234\":1,\"2235\":1,\"2239\":1,\"2240\":1,\"2250\":1,\"2251\":1,\"2252\":1,\"2543\":1,\"2544\":1,\"2548\":1,\"2549\":1,\"2550\":1,\"2551\":1,\"2553\":1,\"2555\":1,\"2558\":1,\"2559\":1,\"2560\":1,\"2563\":1,\"2577\":1,\"2579\":1,\"2585\":1,\"2587\":1,\"2602\":1,\"2603\":1,\"2604\":1,\"2608\":1,\"2609\":1,\"2619\":1,\"2620\":1,\"2621\":1}}],[\"select\",{\"1\":{\"2681\":3,\"2687\":1,\"2688\":3,\"2696\":3,\"2702\":1,\"2703\":3,\"2711\":3,\"2717\":1,\"2718\":3}}],[\"selectoreventloop\",{\"1\":{\"64\":2,\"572\":2,\"1082\":2}}],[\"self\",{\"1\":{\"40\":1,\"152\":1,\"222\":6,\"223\":1,\"331\":1,\"332\":1,\"468\":2,\"470\":21,\"471\":13,\"472\":6,\"473\":2,\"474\":3,\"475\":8,\"476\":15,\"477\":3,\"548\":1,\"660\":1,\"730\":6,\"731\":1,\"839\":1,\"840\":1,\"978\":2,\"980\":21,\"981\":13,\"982\":6,\"983\":2,\"984\":3,\"985\":8,\"986\":15,\"987\":3,\"1058\":1,\"1170\":1,\"1242\":6,\"1243\":1,\"1357\":1,\"1358\":1,\"1493\":2,\"1495\":21,\"1496\":13,\"1497\":6,\"1498\":2,\"1499\":3,\"1500\":8,\"1501\":15,\"1502\":3,\"1570\":1,\"1602\":1,\"1605\":6,\"1609\":1,\"1612\":1,\"1613\":2,\"1614\":2,\"1615\":1,\"1616\":1,\"1617\":1,\"1630\":1,\"1939\":1,\"1971\":1,\"1974\":6,\"1978\":1,\"1981\":1,\"1982\":2,\"1983\":2,\"1984\":1,\"1985\":1,\"1986\":1,\"1999\":1,\"2320\":1,\"2340\":1,\"2343\":6,\"2347\":1,\"2350\":1,\"2351\":2,\"2352\":2,\"2353\":1,\"2354\":1,\"2355\":1,\"2368\":1}}],[\"session2\",{\"1\":{\"140\":1,\"648\":1,\"1158\":1}}],[\"session1\",{\"1\":{\"140\":1,\"648\":1,\"1158\":1}}],[\"session\",{\"0\":{\"2685\":1,\"2700\":1,\"2715\":1},\"1\":{\"7\":1,\"19\":1,\"31\":1,\"47\":2,\"175\":2,\"476\":1,\"521\":1,\"555\":2,\"683\":2,\"986\":1,\"1031\":1,\"1065\":2,\"1193\":2,\"1501\":1,\"1546\":1,\"1659\":1,\"1660\":1,\"1704\":1,\"1924\":1,\"2028\":1,\"2029\":1,\"2073\":1,\"2293\":1,\"2397\":1,\"2398\":1,\"2442\":1,\"2662\":1,\"2680\":30,\"2684\":11,\"2685\":11,\"2687\":1,\"2689\":21,\"2695\":30,\"2699\":11,\"2700\":11,\"2702\":1,\"2704\":21,\"2710\":30,\"2714\":11,\"2715\":11,\"2717\":1,\"2719\":21}}],[\"和模块名\",{\"1\":{\"1919\":1,\"2288\":1,\"2657\":1}}],[\"和实现方式\",{\"1\":{\"485\":1,\"995\":1,\"1510\":1}}],[\"和其它语言集成测试框架\",{\"1\":{\"485\":1,\"995\":1,\"1510\":1}}],[\"和用户交互的过程即是会话\",{\"1\":{\"429\":1,\"939\":1,\"1454\":1}}],[\"和typing\",{\"1\":{\"372\":1,\"880\":1,\"1395\":1}}],[\"和群\",{\"1\":{\"140\":1,\"648\":1,\"1158\":1}}],[\"和\",{\"1\":{\"7\":1,\"10\":1,\"19\":1,\"22\":1,\"31\":1,\"34\":1,\"91\":1,\"99\":1,\"119\":1,\"120\":1,\"123\":1,\"422\":1,\"433\":2,\"462\":1,\"465\":1,\"474\":1,\"476\":1,\"477\":1,\"480\":1,\"482\":1,\"483\":1,\"485\":1,\"486\":1,\"487\":1,\"490\":1,\"491\":1,\"492\":1,\"496\":1,\"500\":1,\"503\":1,\"519\":1,\"599\":1,\"607\":1,\"627\":1,\"628\":1,\"631\":1,\"932\":1,\"943\":2,\"972\":1,\"975\":1,\"984\":1,\"986\":1,\"987\":1,\"990\":1,\"992\":1,\"993\":1,\"995\":1,\"996\":1,\"997\":1,\"1000\":1,\"1001\":1,\"1002\":1,\"1006\":1,\"1010\":1,\"1013\":1,\"1029\":1,\"1109\":1,\"1117\":1,\"1137\":1,\"1138\":1,\"1141\":1,\"1447\":1,\"1458\":2,\"1487\":1,\"1490\":1,\"1499\":1,\"1501\":1,\"1502\":1,\"1505\":1,\"1507\":1,\"1508\":1,\"1510\":1,\"1511\":1,\"1512\":1,\"1515\":1,\"1516\":1,\"1517\":1,\"1521\":1,\"1525\":1,\"1528\":1,\"1544\":1,\"1893\":1,\"1904\":1,\"1906\":1,\"1929\":1,\"1932\":1,\"2262\":1,\"2273\":1,\"2275\":1,\"2298\":1,\"2301\":1,\"2631\":1,\"2642\":1,\"2644\":1,\"2667\":1,\"2670\":1,\"2676\":1,\"2679\":1,\"2690\":1,\"2691\":1,\"2694\":1,\"2705\":1,\"2706\":1,\"2709\":1,\"2720\":1}}],[\"author\",{\"1\":{\"1896\":1,\"2265\":1,\"2634\":1}}],[\"autoincrement=true\",{\"1\":{\"2684\":1,\"2685\":1,\"2687\":1,\"2699\":1,\"2700\":1,\"2702\":1,\"2714\":1,\"2715\":1,\"2717\":1}}],[\"autostart\",{\"0\":{\"454\":1,\"964\":1,\"1479\":1}}],[\"auto\",{\"0\":{\"1909\":1,\"1911\":1,\"2278\":1,\"2280\":1,\"2647\":1,\"2649\":1},\"1\":{\"148\":1,\"196\":1,\"197\":1,\"198\":1,\"200\":1,\"201\":1,\"203\":1,\"204\":1,\"205\":1,\"206\":1,\"207\":1,\"209\":1,\"210\":1,\"211\":1,\"212\":1,\"213\":1,\"214\":1,\"228\":1,\"336\":1,\"337\":1,\"338\":1,\"339\":1,\"344\":1,\"350\":1,\"351\":1,\"362\":1,\"368\":1,\"381\":1,\"413\":1,\"656\":1,\"704\":1,\"705\":1,\"706\":1,\"708\":1,\"709\":1,\"711\":1,\"712\":1,\"713\":1,\"714\":1,\"715\":1,\"717\":1,\"718\":1,\"719\":1,\"720\":1,\"721\":1,\"722\":1,\"736\":1,\"844\":1,\"845\":1,\"846\":1,\"847\":1,\"852\":1,\"858\":1,\"859\":1,\"870\":1,\"876\":1,\"889\":1,\"923\":1,\"1166\":1,\"1216\":1,\"1217\":1,\"1218\":1,\"1220\":1,\"1221\":1,\"1223\":1,\"1224\":1,\"1225\":1,\"1226\":1,\"1227\":1,\"1229\":1,\"1230\":1,\"1231\":1,\"1232\":1,\"1233\":1,\"1234\":1,\"1248\":1,\"1359\":1,\"1360\":1,\"1361\":1,\"1362\":1,\"1367\":1,\"1373\":1,\"1374\":1,\"1385\":1,\"1391\":1,\"1404\":1,\"1438\":1,\"1579\":1,\"1619\":1,\"1656\":1,\"1670\":1,\"1702\":1,\"1707\":1,\"1730\":1,\"1745\":1,\"1746\":1,\"1747\":1,\"1751\":1,\"1754\":1,\"1755\":1,\"1757\":1,\"1765\":1,\"1790\":1,\"1826\":1,\"1832\":1,\"1842\":1,\"1948\":1,\"1988\":1,\"2025\":1,\"2039\":1,\"2071\":1,\"2076\":1,\"2099\":1,\"2114\":1,\"2115\":1,\"2116\":1,\"2120\":1,\"2123\":1,\"2124\":1,\"2126\":1,\"2134\":1,\"2159\":1,\"2195\":1,\"2201\":1,\"2211\":1,\"2329\":1,\"2357\":1,\"2394\":1,\"2408\":1,\"2440\":1,\"2445\":1,\"2470\":1,\"2471\":1,\"2474\":1,\"2475\":1,\"2476\":1,\"2481\":1,\"2492\":1,\"2494\":1,\"2503\":1,\"2528\":1,\"2564\":1,\"2570\":1,\"2580\":1,\"2679\":5,\"2694\":5,\"2709\":5}}],[\"abc\",{\"1\":{\"1889\":3,\"1902\":1,\"1903\":1,\"1905\":1,\"2258\":3,\"2271\":1,\"2272\":1,\"2274\":1,\"2627\":3,\"2640\":1,\"2641\":1,\"2643\":1,\"2679\":1,\"2681\":2,\"2694\":1,\"2696\":2,\"2709\":1,\"2711\":2}}],[\"abstractcontextmanager\",{\"1\":{\"407\":1,\"915\":1,\"1430\":1}}],[\"arparma\",{\"0\":{\"1895\":1,\"2264\":1,\"2633\":1},\"1\":{\"1886\":1,\"1889\":1,\"1895\":3,\"2255\":1,\"2258\":1,\"2264\":3,\"2624\":1,\"2627\":1,\"2633\":3}}],[\"arclet\",{\"1\":{\"1886\":1,\"1888\":1,\"1889\":2,\"1890\":1,\"1893\":1,\"1896\":1,\"1898\":1,\"1899\":1,\"1901\":1,\"1902\":2,\"1903\":3,\"1904\":1,\"1905\":1,\"1906\":2,\"1907\":1,\"2255\":1,\"2257\":1,\"2258\":2,\"2259\":1,\"2262\":1,\"2265\":1,\"2267\":1,\"2268\":1,\"2270\":1,\"2271\":2,\"2272\":3,\"2273\":1,\"2274\":1,\"2275\":2,\"2276\":1,\"2624\":1,\"2626\":1,\"2627\":2,\"2628\":1,\"2631\":1,\"2634\":1,\"2636\":1,\"2637\":1,\"2639\":1,\"2640\":2,\"2641\":3,\"2642\":1,\"2643\":1,\"2644\":2,\"2645\":1}}],[\"arcletproject\",{\"1\":{\"1886\":1,\"2255\":1,\"2624\":1}}],[\"array\",{\"1\":{\"519\":1,\"1029\":1,\"1544\":1}}],[\"arg1\",{\"1\":{\"452\":2,\"962\":2,\"1477\":2}}],[\"arg2\",{\"1\":{\"452\":4,\"962\":4,\"1477\":4}}],[\"argplaintext\",{\"1\":{\"298\":1,\"421\":1,\"429\":1,\"806\":1,\"931\":1,\"939\":1,\"1316\":1,\"1446\":1,\"1454\":1,\"2680\":2,\"2695\":2,\"2710\":2}}],[\"argparse\",{\"1\":{\"100\":3,\"362\":2,\"608\":3,\"870\":2,\"1118\":3,\"1385\":2,\"1906\":1,\"2275\":1,\"2644\":1}}],[\"argsstub\",{\"1\":{\"1906\":1,\"2275\":1,\"2644\":1}}],[\"args的使用\",{\"0\":{\"1901\":1,\"2270\":1,\"2639\":1}}],[\"args=argsstub\",{\"1\":{\"1906\":3,\"2275\":3,\"2644\":3}}],[\"args=args\",{\"1\":{\"1906\":3,\"2275\":3,\"2644\":3}}],[\"args=\",{\"1\":{\"452\":2,\"962\":2,\"1477\":2,\"1886\":3,\"1893\":1,\"1906\":1,\"2255\":3,\"2262\":1,\"2275\":1,\"2624\":3,\"2631\":1,\"2644\":1}}],[\"args=none\",{\"1\":{\"363\":1,\"871\":1,\"1386\":1}}],[\"argstr\",{\"1\":{\"298\":1,\"806\":1,\"1316\":1}}],[\"args\",{\"0\":{\"1888\":1,\"2257\":1,\"2626\":1},\"1\":{\"188\":1,\"225\":1,\"298\":1,\"299\":1,\"300\":1,\"301\":1,\"302\":1,\"304\":1,\"305\":1,\"306\":1,\"363\":3,\"696\":1,\"733\":1,\"806\":1,\"807\":1,\"808\":1,\"809\":1,\"810\":1,\"812\":1,\"813\":1,\"814\":1,\"871\":3,\"1208\":1,\"1245\":1,\"1316\":1,\"1320\":1,\"1321\":1,\"1322\":1,\"1324\":1,\"1325\":1,\"1326\":1,\"1327\":1,\"1386\":3,\"1605\":17,\"1608\":1,\"1634\":1,\"1636\":1,\"1637\":1,\"1640\":1,\"1688\":1,\"1716\":1,\"1762\":1,\"1779\":1,\"1886\":7,\"1888\":6,\"1889\":6,\"1890\":4,\"1891\":1,\"1893\":1,\"1894\":6,\"1895\":13,\"1898\":3,\"1900\":1,\"1901\":3,\"1902\":4,\"1903\":5,\"1905\":2,\"1906\":4,\"1907\":2,\"1974\":17,\"1977\":1,\"2003\":1,\"2005\":1,\"2006\":1,\"2009\":1,\"2057\":1,\"2085\":1,\"2131\":1,\"2148\":1,\"2255\":7,\"2257\":6,\"2258\":6,\"2259\":4,\"2260\":1,\"2262\":1,\"2263\":6,\"2264\":13,\"2267\":3,\"2269\":1,\"2270\":3,\"2271\":4,\"2272\":5,\"2274\":2,\"2275\":4,\"2276\":2,\"2343\":17,\"2346\":1,\"2372\":1,\"2374\":1,\"2375\":1,\"2378\":1,\"2426\":1,\"2464\":1,\"2500\":1,\"2517\":1,\"2624\":7,\"2626\":6,\"2627\":6,\"2628\":4,\"2629\":1,\"2631\":1,\"2632\":6,\"2633\":13,\"2636\":3,\"2638\":1,\"2639\":3,\"2640\":4,\"2641\":5,\"2643\":2,\"2644\":4,\"2645\":2,\"2680\":6,\"2681\":2,\"2695\":6,\"2696\":2,\"2710\":6,\"2711\":2}}],[\"arg\",{\"1\":{\"179\":1,\"185\":1,\"295\":1,\"296\":1,\"298\":2,\"303\":1,\"365\":3,\"687\":1,\"693\":1,\"803\":1,\"804\":1,\"806\":2,\"811\":1,\"873\":3,\"1197\":1,\"1205\":1,\"1315\":1,\"1316\":2,\"1317\":1,\"1318\":1,\"1319\":1,\"1388\":3,\"1608\":1,\"1977\":1,\"2346\":1,\"2681\":5,\"2696\":5,\"2711\":5}}],[\"argv\",{\"1\":{\"100\":1,\"189\":1,\"608\":1,\"697\":1,\"1118\":1,\"1209\":1}}],[\"argument\",{\"1\":{\"100\":2,\"365\":1,\"608\":2,\"873\":1,\"1118\":2,\"1388\":1}}],[\"argumentparser\",{\"1\":{\"100\":4,\"362\":1,\"364\":1,\"365\":4,\"608\":4,\"870\":1,\"872\":1,\"873\":4,\"1118\":4,\"1385\":1,\"1387\":1,\"1388\":4,\"1866\":2,\"1871\":2,\"1883\":2,\"2235\":2,\"2240\":2,\"2252\":2,\"2604\":2,\"2609\":2,\"2621\":2}}],[\"ai\",{\"1\":{\"482\":1,\"992\":1,\"1507\":1}}],[\"aiocqhttp\",{\"1\":{\"482\":3,\"992\":3,\"1507\":3}}],[\"aiohttp\",{\"0\":{\"80\":1,\"588\":1,\"1098\":1,\"1651\":1,\"2020\":1,\"2389\":1},\"1\":{\"7\":1,\"19\":1,\"31\":1,\"80\":1,\"588\":1,\"1098\":1,\"1651\":3,\"1656\":1,\"1660\":3,\"2020\":3,\"2025\":1,\"2029\":3,\"2389\":3,\"2394\":1,\"2398\":3}}],[\"attach\",{\"1\":{\"447\":1,\"957\":1,\"1472\":1}}],[\"attr\",{\"1\":{\"411\":1,\"921\":1,\"1436\":1}}],[\"activate\",{\"1\":{\"505\":2,\"1015\":2,\"1530\":2}}],[\"action\",{\"0\":{\"1894\":1,\"2263\":1,\"2632\":1},\"1\":{\"502\":1,\"1012\":1,\"1527\":1,\"1894\":3,\"1903\":1,\"2263\":3,\"2272\":1,\"2632\":3,\"2641\":1}}],[\"actions\",{\"1\":{\"483\":2,\"993\":2,\"1508\":2,\"2690\":6,\"2705\":6,\"2720\":6}}],[\"actionfailed\",{\"1\":{\"195\":1,\"703\":1,\"1215\":1}}],[\"action=count\",{\"1\":{\"1903\":1,\"1906\":1,\"2272\":1,\"2275\":1,\"2641\":1,\"2644\":1}}],[\"action=append\",{\"1\":{\"1903\":1,\"2272\":1,\"2641\":1}}],[\"action=\",{\"1\":{\"100\":2,\"365\":1,\"608\":2,\"873\":1,\"1118\":2,\"1388\":1}}],[\"accept\",{\"1\":{\"121\":1,\"629\":1,\"1139\":1}}],[\"await\",{\"1\":{\"121\":4,\"205\":1,\"206\":1,\"207\":1,\"421\":1,\"422\":4,\"427\":1,\"429\":5,\"470\":1,\"474\":7,\"475\":2,\"629\":4,\"713\":1,\"714\":1,\"715\":1,\"931\":1,\"932\":4,\"937\":1,\"939\":5,\"980\":1,\"984\":7,\"985\":2,\"1139\":4,\"1225\":1,\"1226\":1,\"1227\":1,\"1446\":1,\"1447\":4,\"1452\":1,\"1454\":5,\"1495\":1,\"1499\":7,\"1500\":2,\"1575\":2,\"1934\":1,\"1935\":2,\"1944\":2,\"2303\":1,\"2304\":2,\"2325\":2,\"2672\":1,\"2673\":2,\"2680\":18,\"2681\":3,\"2684\":4,\"2685\":4,\"2687\":2,\"2689\":19,\"2695\":18,\"2696\":3,\"2699\":4,\"2700\":4,\"2702\":2,\"2704\":19,\"2710\":18,\"2711\":3,\"2714\":4,\"2715\":4,\"2717\":2,\"2719\":19}}],[\"awaitable\",{\"1\":{\"120\":1,\"121\":1,\"385\":1,\"386\":1,\"628\":1,\"629\":1,\"893\":1,\"894\":1,\"1138\":1,\"1139\":1,\"1408\":1,\"1409\":1}}],[\"awesome\",{\"1\":{\"110\":2,\"111\":1,\"113\":1,\"482\":2,\"507\":1,\"513\":13,\"618\":2,\"619\":1,\"621\":1,\"992\":2,\"1017\":1,\"1023\":13,\"1128\":2,\"1129\":1,\"1131\":1,\"1507\":2,\"1532\":1,\"1538\":13}}],[\"available=false\",{\"1\":{\"1906\":4,\"2275\":4,\"2644\":4}}],[\"available=true\",{\"1\":{\"1906\":2,\"2275\":2,\"2644\":2}}],[\"available\",{\"1\":{\"111\":2,\"216\":2,\"490\":1,\"491\":1,\"619\":2,\"724\":2,\"1000\":1,\"1001\":1,\"1129\":2,\"1236\":2,\"1515\":1,\"1516\":1}}],[\"alc\",{\"1\":{\"1886\":2,\"1887\":2,\"1889\":4,\"1896\":1,\"1898\":2,\"1901\":3,\"1902\":9,\"1903\":6,\"1904\":2,\"1905\":2,\"1906\":3,\"1907\":2,\"2255\":2,\"2256\":2,\"2258\":4,\"2265\":1,\"2267\":2,\"2270\":3,\"2271\":9,\"2272\":6,\"2273\":2,\"2274\":2,\"2275\":3,\"2276\":2,\"2624\":2,\"2625\":2,\"2627\":4,\"2634\":1,\"2636\":2,\"2639\":3,\"2640\":9,\"2641\":6,\"2642\":2,\"2643\":2,\"2644\":3,\"2645\":2}}],[\"alconnaresult\",{\"1\":{\"108\":1,\"616\":1,\"1126\":1}}],[\"alconna\",{\"0\":{\"108\":1,\"616\":1,\"1126\":1,\"1886\":1,\"1909\":1,\"1910\":1,\"1911\":1,\"1912\":1,\"1913\":1,\"1914\":1,\"1915\":1,\"1916\":1,\"1917\":1,\"1918\":1,\"2255\":1,\"2278\":1,\"2279\":1,\"2280\":1,\"2281\":1,\"2282\":1,\"2283\":1,\"2284\":1,\"2285\":1,\"2286\":1,\"2287\":1,\"2624\":1,\"2647\":1,\"2648\":1,\"2649\":1,\"2650\":1,\"2651\":1,\"2652\":1,\"2653\":1,\"2654\":1,\"2655\":1,\"2656\":1,\"2768\":1,\"2771\":1,\"2774\":1},\"1\":{\"108\":6,\"503\":2,\"616\":6,\"1013\":2,\"1126\":6,\"1528\":2,\"1886\":5,\"1887\":5,\"1888\":1,\"1889\":6,\"1890\":1,\"1893\":2,\"1894\":1,\"1895\":1,\"1896\":4,\"1897\":3,\"1898\":4,\"1899\":1,\"1900\":1,\"1901\":4,\"1902\":9,\"1903\":10,\"1904\":3,\"1905\":3,\"1906\":4,\"1907\":3,\"1910\":1,\"1912\":1,\"1913\":1,\"2255\":5,\"2256\":5,\"2257\":1,\"2258\":6,\"2259\":1,\"2262\":2,\"2263\":1,\"2264\":1,\"2265\":4,\"2266\":3,\"2267\":4,\"2268\":1,\"2269\":1,\"2270\":4,\"2271\":9,\"2272\":10,\"2273\":3,\"2274\":3,\"2275\":4,\"2276\":3,\"2279\":1,\"2281\":1,\"2282\":1,\"2624\":5,\"2625\":5,\"2626\":1,\"2627\":6,\"2628\":1,\"2631\":2,\"2632\":1,\"2633\":1,\"2634\":4,\"2635\":3,\"2636\":4,\"2637\":1,\"2638\":1,\"2639\":4,\"2640\":9,\"2641\":10,\"2642\":3,\"2643\":3,\"2644\":4,\"2645\":3,\"2648\":1,\"2650\":1,\"2651\":1,\"2725\":1,\"2732\":1,\"2739\":1}}],[\"algolia\",{\"1\":{\"501\":2,\"1011\":2,\"1526\":2}}],[\"alembic\",{\"1\":{\"499\":1,\"1009\":1,\"1524\":1,\"1927\":1,\"2296\":1,\"2665\":1,\"2676\":1,\"2679\":14,\"2691\":1,\"2694\":14,\"2706\":1,\"2709\":14}}],[\"allow\",{\"1\":{\"1641\":1,\"1642\":1,\"1643\":1,\"1644\":1,\"2010\":1,\"2011\":1,\"2012\":1,\"2013\":1,\"2379\":1,\"2380\":1,\"2381\":1,\"2382\":1}}],[\"all\",{\"1\":{\"216\":2,\"517\":1,\"518\":2,\"519\":2,\"724\":2,\"1027\":1,\"1028\":2,\"1029\":2,\"1236\":2,\"1542\":1,\"1543\":2,\"1544\":2,\"1802\":2,\"1886\":1,\"1895\":3,\"2171\":2,\"2255\":1,\"2264\":3,\"2540\":2,\"2624\":1,\"2633\":3,\"2689\":3,\"2704\":3,\"2719\":3}}],[\"always\",{\"1\":{\"200\":2,\"708\":2,\"1220\":2}}],[\"alias=\",{\"1\":{\"1893\":1,\"2262\":1,\"2631\":1}}],[\"alias\",{\"1\":{\"142\":1,\"158\":1,\"650\":1,\"666\":1,\"1160\":1,\"1176\":1,\"1892\":1,\"1893\":1,\"2261\":1,\"2262\":1,\"2630\":1,\"2631\":1}}],[\"aliases\",{\"1\":{\"105\":2,\"613\":2,\"1123\":2,\"1865\":1,\"1866\":1,\"1869\":1,\"1870\":1,\"1871\":1,\"1882\":1,\"1883\":1,\"2234\":1,\"2235\":1,\"2238\":1,\"2239\":1,\"2240\":1,\"2251\":1,\"2252\":1,\"2603\":1,\"2604\":1,\"2607\":1,\"2608\":1,\"2609\":1,\"2620\":1,\"2621\":1}}],[\"aliases=true\",{\"1\":{\"105\":2,\"613\":2,\"1123\":2}}],[\"aliases=\",{\"1\":{\"99\":1,\"105\":1,\"426\":1,\"527\":1,\"607\":1,\"613\":1,\"936\":1,\"1037\":1,\"1117\":1,\"1123\":1,\"1451\":1,\"1552\":1,\"1906\":2,\"2275\":2,\"2644\":2}}],[\"adjust\",{\"1\":{\"2679\":5,\"2694\":5,\"2709\":5}}],[\"ade8cdca5470\",{\"1\":{\"1924\":1,\"2293\":1,\"2662\":1}}],[\"advanced\",{\"0\":{\"2747\":1,\"2754\":1,\"2761\":1},\"1\":{\"448\":1,\"958\":1,\"1473\":1}}],[\"addopts\",{\"1\":{\"478\":1,\"988\":1,\"1503\":1}}],[\"addhandler\",{\"1\":{\"419\":1,\"929\":1,\"1444\":1}}],[\"add\",{\"1\":{\"100\":2,\"365\":1,\"418\":3,\"452\":2,\"608\":2,\"873\":1,\"928\":3,\"962\":2,\"1118\":2,\"1388\":1,\"1443\":3,\"1477\":2,\"2679\":1,\"2680\":2,\"2684\":1,\"2685\":1,\"2694\":1,\"2695\":2,\"2699\":1,\"2700\":1,\"2709\":1,\"2710\":2,\"2714\":1,\"2715\":1}}],[\"adapterexception\",{\"1\":{\"195\":1,\"703\":1,\"1215\":1}}],[\"adapters\",{\"0\":{\"1569\":1,\"1938\":1,\"2307\":1},\"1\":{\"38\":1,\"39\":3,\"40\":1,\"103\":1,\"108\":1,\"110\":1,\"136\":1,\"137\":1,\"218\":1,\"219\":2,\"421\":2,\"422\":3,\"425\":1,\"429\":1,\"463\":2,\"468\":1,\"475\":1,\"476\":1,\"477\":2,\"478\":4,\"507\":1,\"531\":1,\"532\":1,\"534\":1,\"536\":1,\"537\":1,\"541\":1,\"543\":6,\"546\":1,\"547\":3,\"548\":1,\"611\":1,\"616\":1,\"618\":1,\"644\":1,\"645\":1,\"726\":1,\"727\":2,\"931\":2,\"932\":3,\"935\":1,\"939\":1,\"973\":2,\"978\":1,\"985\":1,\"986\":1,\"987\":2,\"988\":4,\"1017\":1,\"1041\":1,\"1042\":1,\"1044\":1,\"1046\":1,\"1047\":1,\"1051\":1,\"1053\":6,\"1056\":1,\"1057\":3,\"1058\":1,\"1121\":1,\"1126\":1,\"1128\":1,\"1154\":1,\"1155\":1,\"1238\":1,\"1239\":2,\"1446\":2,\"1447\":3,\"1450\":1,\"1454\":1,\"1488\":2,\"1493\":1,\"1500\":1,\"1501\":1,\"1502\":2,\"1503\":4,\"1532\":1,\"1556\":1,\"1557\":1,\"1559\":1,\"1561\":1,\"1562\":1,\"1566\":1,\"1568\":6,\"1839\":1,\"1934\":1,\"1935\":1,\"2208\":1,\"2303\":1,\"2304\":1,\"2577\":1,\"2672\":1,\"2673\":1,\"2680\":1,\"2695\":1,\"2710\":1}}],[\"adapter\",{\"0\":{\"468\":1,\"978\":1,\"1493\":1},\"1\":{\"36\":1,\"37\":1,\"38\":5,\"39\":8,\"40\":5,\"208\":4,\"218\":10,\"219\":3,\"252\":1,\"253\":1,\"254\":1,\"255\":1,\"256\":1,\"257\":1,\"415\":2,\"462\":1,\"463\":7,\"464\":1,\"465\":1,\"466\":1,\"467\":1,\"468\":5,\"470\":3,\"471\":3,\"472\":1,\"473\":1,\"474\":2,\"475\":9,\"478\":1,\"494\":1,\"498\":1,\"505\":1,\"507\":2,\"523\":1,\"544\":1,\"545\":1,\"546\":5,\"547\":8,\"548\":5,\"716\":4,\"726\":10,\"727\":3,\"760\":1,\"761\":1,\"762\":1,\"763\":1,\"764\":1,\"765\":1,\"925\":2,\"972\":1,\"973\":7,\"974\":1,\"975\":1,\"976\":1,\"977\":1,\"978\":5,\"980\":3,\"981\":3,\"982\":1,\"983\":1,\"984\":2,\"985\":9,\"988\":1,\"1004\":1,\"1008\":1,\"1015\":1,\"1017\":2,\"1033\":1,\"1054\":1,\"1055\":1,\"1056\":5,\"1057\":8,\"1058\":5,\"1228\":4,\"1238\":10,\"1239\":3,\"1273\":1,\"1274\":1,\"1275\":1,\"1276\":1,\"1277\":1,\"1278\":1,\"1440\":2,\"1487\":1,\"1488\":7,\"1489\":1,\"1490\":1,\"1491\":1,\"1492\":1,\"1493\":5,\"1495\":3,\"1496\":3,\"1497\":1,\"1498\":1,\"1499\":2,\"1500\":9,\"1503\":1,\"1519\":1,\"1523\":1,\"1530\":1,\"1532\":2,\"1548\":1,\"1569\":1,\"1570\":2,\"1571\":1,\"1589\":2,\"1713\":2,\"1841\":1,\"1934\":5,\"1935\":4,\"1938\":1,\"1939\":2,\"1940\":1,\"1958\":2,\"2082\":2,\"2210\":1,\"2303\":5,\"2304\":4,\"2307\":1,\"2308\":2,\"2320\":2,\"2321\":1,\"2461\":2,\"2579\":1,\"2672\":5,\"2673\":4}}],[\"annotated\",{\"1\":{\"378\":1,\"886\":1,\"1401\":1,\"2681\":2,\"2687\":2,\"2696\":2,\"2702\":2,\"2711\":2,\"2717\":2}}],[\"annotations\",{\"1\":{\"2679\":1,\"2694\":1,\"2709\":1}}],[\"annotation\",{\"1\":{\"150\":1,\"152\":1,\"658\":1,\"660\":1,\"1168\":1,\"1170\":1}}],[\"another\",{\"1\":{\"222\":1,\"730\":1,\"1242\":1}}],[\"and\",{\"1\":{\"78\":3,\"79\":2,\"80\":1,\"137\":1,\"437\":1,\"438\":1,\"470\":1,\"586\":3,\"587\":2,\"588\":1,\"645\":1,\"947\":1,\"948\":1,\"980\":1,\"1096\":3,\"1097\":2,\"1098\":1,\"1155\":1,\"1462\":1,\"1463\":1,\"1495\":1}}],[\"an\",{\"1\":{\"70\":1,\"417\":2,\"578\":1,\"927\":2,\"1088\":1,\"1442\":2,\"1745\":1,\"2114\":1,\"2475\":1}}],[\"anystring\",{\"1\":{\"1890\":1,\"2259\":1,\"2628\":1}}],[\"any\",{\"1\":{\"69\":1,\"77\":1,\"121\":1,\"136\":1,\"137\":2,\"146\":2,\"147\":1,\"150\":1,\"152\":1,\"153\":1,\"154\":2,\"155\":1,\"157\":1,\"158\":1,\"159\":1,\"163\":1,\"165\":1,\"220\":1,\"221\":1,\"224\":1,\"225\":2,\"237\":1,\"242\":1,\"248\":1,\"249\":1,\"250\":1,\"251\":1,\"252\":2,\"295\":1,\"297\":4,\"298\":1,\"299\":1,\"300\":1,\"301\":1,\"302\":2,\"304\":1,\"305\":1,\"306\":1,\"308\":1,\"313\":1,\"316\":1,\"317\":1,\"319\":4,\"320\":1,\"321\":1,\"326\":2,\"327\":2,\"374\":1,\"375\":1,\"376\":1,\"377\":2,\"378\":1,\"379\":1,\"380\":3,\"382\":2,\"383\":1,\"384\":1,\"385\":2,\"386\":3,\"387\":1,\"388\":1,\"389\":1,\"390\":1,\"393\":1,\"396\":2,\"399\":3,\"400\":3,\"401\":3,\"402\":1,\"403\":1,\"404\":1,\"405\":1,\"408\":4,\"409\":1,\"411\":1,\"412\":1,\"447\":7,\"468\":2,\"470\":1,\"471\":2,\"473\":3,\"474\":3,\"475\":4,\"577\":1,\"585\":1,\"629\":1,\"644\":1,\"645\":2,\"654\":2,\"655\":1,\"658\":1,\"660\":1,\"661\":1,\"662\":2,\"663\":1,\"665\":1,\"666\":1,\"667\":1,\"671\":1,\"673\":1,\"728\":1,\"729\":1,\"732\":1,\"733\":2,\"745\":1,\"750\":1,\"756\":1,\"757\":1,\"758\":1,\"759\":1,\"760\":2,\"803\":1,\"805\":4,\"806\":1,\"807\":1,\"808\":1,\"809\":1,\"810\":2,\"812\":1,\"813\":1,\"814\":1,\"816\":1,\"821\":1,\"824\":1,\"825\":1,\"827\":4,\"828\":1,\"829\":1,\"834\":2,\"835\":2,\"882\":1,\"883\":1,\"884\":1,\"885\":2,\"886\":1,\"887\":1,\"888\":3,\"890\":2,\"891\":1,\"892\":1,\"893\":2,\"894\":3,\"895\":1,\"896\":1,\"897\":1,\"898\":1,\"901\":1,\"904\":1,\"907\":3,\"908\":3,\"909\":3,\"910\":1,\"911\":1,\"912\":1,\"913\":1,\"916\":4,\"917\":2,\"919\":1,\"921\":1,\"922\":1,\"957\":7,\"978\":2,\"980\":1,\"981\":2,\"983\":3,\"984\":3,\"985\":4,\"1087\":1,\"1095\":1,\"1139\":1,\"1154\":1,\"1155\":2,\"1164\":2,\"1165\":1,\"1168\":1,\"1170\":1,\"1171\":1,\"1172\":2,\"1173\":1,\"1175\":1,\"1176\":1,\"1177\":1,\"1181\":1,\"1183\":1,\"1240\":1,\"1241\":1,\"1244\":1,\"1245\":2,\"1258\":1,\"1263\":1,\"1269\":1,\"1270\":1,\"1271\":1,\"1272\":1,\"1273\":2,\"1315\":1,\"1316\":1,\"1318\":1,\"1320\":1,\"1321\":1,\"1322\":2,\"1323\":4,\"1324\":1,\"1325\":1,\"1326\":1,\"1327\":1,\"1329\":1,\"1334\":1,\"1337\":1,\"1338\":1,\"1340\":4,\"1341\":1,\"1342\":1,\"1347\":2,\"1348\":2,\"1349\":1,\"1350\":1,\"1397\":1,\"1398\":1,\"1399\":1,\"1400\":2,\"1401\":1,\"1402\":1,\"1403\":3,\"1405\":2,\"1406\":1,\"1407\":1,\"1408\":2,\"1409\":3,\"1410\":1,\"1411\":1,\"1412\":1,\"1413\":1,\"1416\":1,\"1419\":1,\"1422\":3,\"1423\":3,\"1424\":3,\"1425\":1,\"1426\":1,\"1427\":1,\"1428\":1,\"1431\":4,\"1432\":2,\"1434\":1,\"1436\":1,\"1437\":1,\"1472\":7,\"1493\":2,\"1495\":1,\"1496\":2,\"1498\":3,\"1499\":3,\"1500\":4,\"1575\":2,\"1576\":2,\"1589\":1,\"1621\":1,\"1625\":1,\"1635\":1,\"1636\":2,\"1637\":3,\"1638\":2,\"1640\":1,\"1643\":1,\"1644\":1,\"1645\":1,\"1646\":2,\"1648\":1,\"1649\":2,\"1650\":2,\"1680\":1,\"1728\":1,\"1731\":1,\"1732\":1,\"1771\":1,\"1789\":4,\"1840\":2,\"1856\":1,\"1857\":1,\"1858\":1,\"1859\":1,\"1860\":1,\"1861\":1,\"1862\":1,\"1863\":1,\"1864\":1,\"1865\":1,\"1866\":1,\"1867\":1,\"1868\":1,\"1869\":1,\"1870\":1,\"1871\":1,\"1872\":1,\"1873\":1,\"1874\":1,\"1875\":1,\"1876\":1,\"1877\":1,\"1878\":1,\"1879\":1,\"1880\":1,\"1881\":1,\"1882\":1,\"1883\":1,\"1884\":1,\"1885\":1,\"1890\":1,\"1900\":1,\"1944\":2,\"1945\":2,\"1958\":1,\"1990\":1,\"1994\":1,\"2004\":1,\"2005\":2,\"2006\":3,\"2007\":2,\"2009\":1,\"2012\":1,\"2013\":1,\"2014\":1,\"2015\":2,\"2017\":1,\"2018\":2,\"2019\":2,\"2049\":1,\"2097\":1,\"2100\":1,\"2101\":1,\"2140\":1,\"2158\":4,\"2209\":2,\"2225\":1,\"2226\":1,\"2227\":1,\"2228\":1,\"2229\":1,\"2230\":1,\"2231\":1,\"2232\":1,\"2233\":1,\"2234\":1,\"2235\":1,\"2236\":1,\"2237\":1,\"2238\":1,\"2239\":1,\"2240\":1,\"2241\":1,\"2242\":1,\"2243\":1,\"2244\":1,\"2245\":1,\"2246\":1,\"2247\":1,\"2248\":1,\"2249\":1,\"2250\":1,\"2251\":1,\"2252\":1,\"2253\":1,\"2254\":1,\"2259\":1,\"2269\":1,\"2308\":1,\"2325\":2,\"2326\":2,\"2359\":1,\"2363\":1,\"2373\":1,\"2374\":2,\"2375\":3,\"2376\":2,\"2378\":1,\"2381\":1,\"2382\":1,\"2383\":1,\"2384\":2,\"2386\":1,\"2387\":2,\"2388\":2,\"2418\":1,\"2446\":1,\"2447\":1,\"2478\":1,\"2509\":1,\"2527\":4,\"2578\":2,\"2594\":1,\"2595\":1,\"2596\":1,\"2597\":1,\"2598\":1,\"2599\":1,\"2600\":1,\"2601\":1,\"2602\":1,\"2603\":1,\"2604\":1,\"2605\":1,\"2606\":1,\"2607\":1,\"2608\":1,\"2609\":1,\"2610\":1,\"2611\":1,\"2612\":1,\"2613\":1,\"2614\":1,\"2615\":1,\"2616\":1,\"2617\":1,\"2618\":1,\"2619\":1,\"2620\":1,\"2621\":1,\"2622\":1,\"2623\":1,\"2628\":1,\"2638\":1}}],[\"analysis\",{\"1\":{\"10\":2,\"22\":2,\"34\":2}}],[\"apscheduler等\",{\"1\":{\"503\":1,\"1013\":1,\"1528\":1}}],[\"apscheduler\",{\"0\":{\"454\":1,\"455\":1,\"456\":1,\"964\":1,\"965\":1,\"966\":1,\"1479\":1,\"1480\":1,\"1481\":1},\"1\":{\"448\":3,\"449\":2,\"450\":3,\"451\":3,\"452\":6,\"455\":1,\"456\":4,\"503\":1,\"958\":3,\"959\":2,\"960\":3,\"961\":3,\"962\":6,\"965\":1,\"966\":4,\"1013\":1,\"1473\":3,\"1474\":2,\"1475\":3,\"1476\":3,\"1477\":6,\"1480\":1,\"1481\":4,\"1528\":1}}],[\"api的方式来获取信息或收发消息\",{\"1\":{\"452\":1,\"962\":1,\"1477\":1}}],[\"apinotavailable\",{\"1\":{\"195\":1,\"703\":1,\"1215\":1}}],[\"api\",{\"0\":{\"474\":1,\"483\":1,\"984\":1,\"993\":1,\"1499\":1,\"1508\":1},\"1\":{\"58\":1,\"70\":1,\"118\":1,\"120\":1,\"121\":1,\"124\":3,\"136\":4,\"137\":4,\"170\":1,\"202\":2,\"210\":1,\"211\":2,\"212\":2,\"252\":1,\"253\":1,\"254\":1,\"255\":1,\"256\":1,\"257\":1,\"385\":1,\"386\":2,\"472\":1,\"474\":7,\"475\":2,\"482\":1,\"483\":7,\"485\":1,\"486\":3,\"487\":3,\"489\":4,\"495\":1,\"502\":1,\"566\":1,\"578\":1,\"626\":1,\"628\":1,\"629\":1,\"632\":3,\"644\":4,\"645\":4,\"678\":1,\"710\":2,\"718\":1,\"719\":2,\"720\":2,\"760\":1,\"761\":1,\"762\":1,\"763\":1,\"764\":1,\"765\":1,\"893\":1,\"894\":2,\"982\":1,\"984\":7,\"985\":2,\"992\":1,\"993\":7,\"995\":1,\"996\":3,\"997\":3,\"999\":4,\"1005\":1,\"1012\":1,\"1037\":1,\"1076\":1,\"1088\":1,\"1136\":1,\"1138\":1,\"1139\":1,\"1142\":3,\"1154\":4,\"1155\":4,\"1188\":1,\"1222\":2,\"1230\":1,\"1231\":2,\"1232\":2,\"1273\":1,\"1274\":1,\"1275\":1,\"1276\":1,\"1277\":1,\"1278\":1,\"1408\":1,\"1409\":2,\"1497\":1,\"1499\":7,\"1500\":2,\"1507\":1,\"1508\":7,\"1510\":1,\"1511\":3,\"1512\":3,\"1514\":4,\"1520\":1,\"1527\":1,\"1552\":1,\"1570\":1,\"1575\":5,\"1577\":4,\"1578\":6,\"1939\":1,\"1944\":5,\"1946\":4,\"1947\":6,\"2320\":1,\"2325\":5,\"2327\":4,\"2328\":6}}],[\"apis\",{\"1\":{\"58\":1,\"78\":1,\"490\":1,\"491\":1,\"566\":1,\"586\":1,\"1000\":1,\"1001\":1,\"1076\":1,\"1096\":1,\"1515\":1,\"1516\":1}}],[\"appendices\",{\"0\":{\"2748\":1,\"2755\":1,\"2762\":1}}],[\"append\",{\"1\":{\"478\":1,\"542\":3,\"988\":1,\"1052\":3,\"1503\":1,\"1567\":3,\"1894\":3,\"1903\":1,\"2263\":3,\"2272\":1,\"2632\":3,\"2641\":1}}],[\"apply\",{\"0\":{\"1917\":1,\"1918\":1,\"2286\":1,\"2287\":1,\"2655\":1,\"2656\":1}}],[\"applyaddfriendevent\",{\"1\":{\"476\":1,\"986\":1,\"1501\":1}}],[\"application\",{\"1\":{\"110\":2,\"437\":2,\"438\":1,\"618\":2,\"947\":2,\"948\":1,\"1128\":2,\"1462\":2,\"1463\":1,\"2679\":1,\"2694\":1,\"2709\":1}}],[\"appdata\",{\"1\":{\"436\":1,\"437\":1,\"438\":1,\"946\":1,\"947\":1,\"948\":1,\"1461\":1,\"1462\":1,\"1463\":1}}],[\"app=\",{\"1\":{\"64\":1,\"72\":1,\"572\":1,\"580\":1,\"1082\":1,\"1090\":1}}],[\"app\",{\"1\":{\"40\":1,\"64\":2,\"72\":2,\"123\":4,\"124\":3,\"220\":4,\"447\":2,\"502\":3,\"548\":1,\"572\":2,\"580\":2,\"631\":4,\"632\":3,\"728\":4,\"957\":2,\"1012\":3,\"1058\":1,\"1082\":2,\"1090\":2,\"1141\":4,\"1142\":3,\"1240\":4,\"1472\":2,\"1527\":3,\"1683\":1,\"1684\":1,\"1688\":1,\"1731\":1,\"1779\":1,\"1934\":11,\"1935\":5,\"2052\":1,\"2053\":1,\"2057\":1,\"2100\":1,\"2148\":1,\"2303\":11,\"2304\":5,\"2421\":1,\"2422\":1,\"2426\":1,\"2446\":1,\"2517\":1,\"2672\":11,\"2673\":5}}],[\"a\",{\"1\":{\"58\":1,\"78\":1,\"79\":2,\"101\":2,\"117\":3,\"152\":1,\"155\":1,\"156\":1,\"157\":1,\"218\":3,\"365\":1,\"417\":6,\"466\":2,\"470\":1,\"471\":1,\"566\":1,\"586\":1,\"587\":2,\"609\":2,\"625\":3,\"660\":1,\"663\":1,\"664\":1,\"665\":1,\"726\":3,\"873\":1,\"927\":6,\"976\":2,\"980\":1,\"981\":1,\"1076\":1,\"1096\":1,\"1097\":2,\"1119\":2,\"1135\":3,\"1170\":1,\"1173\":1,\"1174\":1,\"1175\":1,\"1238\":3,\"1388\":1,\"1442\":6,\"1491\":2,\"1495\":1,\"1496\":1,\"1893\":1,\"2262\":1,\"2631\":1}}],[\"asciinema\",{\"1\":{\"495\":1,\"1005\":1,\"1520\":1}}],[\"asctime\",{\"1\":{\"227\":1,\"735\":1,\"1247\":1}}],[\"asia\",{\"1\":{\"456\":1,\"966\":1,\"1481\":1}}],[\"as\",{\"1\":{\"121\":1,\"422\":2,\"433\":1,\"438\":1,\"466\":1,\"468\":1,\"470\":4,\"473\":1,\"475\":1,\"476\":1,\"477\":2,\"507\":1,\"629\":1,\"932\":2,\"943\":1,\"948\":1,\"976\":1,\"978\":1,\"980\":4,\"983\":1,\"985\":1,\"986\":1,\"987\":2,\"1017\":1,\"1139\":1,\"1447\":2,\"1458\":1,\"1463\":1,\"1491\":1,\"1493\":1,\"1495\":4,\"1498\":1,\"1500\":1,\"1501\":1,\"1502\":2,\"1532\":1,\"1898\":1,\"1899\":1,\"1934\":3,\"1935\":2,\"2267\":1,\"2268\":1,\"2303\":3,\"2304\":2,\"2636\":1,\"2637\":1,\"2672\":3,\"2673\":2,\"2679\":1,\"2694\":1,\"2709\":1}}],[\"assertionerror\",{\"1\":{\"220\":1,\"221\":1,\"728\":1,\"729\":1,\"1240\":1,\"1241\":1}}],[\"assert\",{\"1\":{\"83\":1,\"222\":1,\"426\":1,\"591\":1,\"730\":1,\"936\":1,\"1101\":1,\"1242\":1,\"1451\":1,\"1887\":1,\"1903\":1,\"1934\":3,\"1935\":2,\"2256\":1,\"2272\":1,\"2303\":3,\"2304\":2,\"2625\":1,\"2641\":1,\"2672\":3,\"2673\":2}}],[\"asgi=asgi\",{\"1\":{\"1934\":1,\"2303\":1,\"2672\":1}}],[\"asgimixin\",{\"1\":{\"118\":2,\"120\":2,\"121\":2,\"220\":2,\"221\":2,\"471\":2,\"626\":2,\"628\":2,\"629\":2,\"728\":2,\"729\":2,\"981\":2,\"1136\":2,\"1138\":2,\"1139\":2,\"1240\":2,\"1241\":2,\"1496\":2}}],[\"asgi\",{\"0\":{\"122\":1,\"123\":1,\"630\":1,\"631\":1,\"1140\":1,\"1141\":1},\"1\":{\"53\":2,\"58\":2,\"64\":3,\"70\":1,\"72\":2,\"118\":4,\"123\":4,\"124\":2,\"221\":4,\"471\":2,\"561\":2,\"566\":2,\"572\":3,\"578\":1,\"580\":2,\"626\":4,\"631\":4,\"632\":2,\"729\":4,\"981\":2,\"1071\":2,\"1076\":2,\"1082\":3,\"1088\":1,\"1090\":2,\"1136\":4,\"1141\":4,\"1142\":2,\"1241\":4,\"1496\":2,\"1730\":1,\"1732\":1,\"1934\":3,\"1935\":1,\"2099\":1,\"2101\":1,\"2303\":3,\"2304\":1,\"2445\":1,\"2447\":1,\"2672\":3,\"2673\":1}}],[\"asyncscalarresult\",{\"1\":{\"2689\":1,\"2704\":1,\"2719\":1}}],[\"asyncsession\",{\"0\":{\"2684\":1,\"2699\":1,\"2714\":1},\"1\":{\"2684\":2,\"2699\":2,\"2714\":2}}],[\"asyncresult\",{\"1\":{\"2689\":1,\"2704\":1,\"2719\":1}}],[\"asynciterator\",{\"1\":{\"2689\":2,\"2704\":2,\"2719\":2}}],[\"asyncio\",{\"1\":{\"2\":1,\"14\":1,\"26\":1,\"64\":3,\"70\":1,\"80\":1,\"293\":2,\"470\":4,\"473\":2,\"482\":1,\"483\":1,\"485\":1,\"486\":1,\"487\":1,\"572\":3,\"578\":1,\"588\":1,\"980\":4,\"983\":2,\"992\":1,\"993\":1,\"995\":1,\"996\":1,\"997\":1,\"1082\":3,\"1088\":1,\"1098\":1,\"1495\":4,\"1498\":2,\"1507\":1,\"1508\":1,\"1510\":1,\"1511\":1,\"1512\":1,\"1934\":2,\"1935\":1,\"2303\":2,\"2304\":1,\"2672\":2,\"2673\":1}}],[\"asyncengine\",{\"1\":{\"1930\":1,\"2299\":1,\"2668\":1}}],[\"asyncexitstack\",{\"1\":{\"244\":1,\"245\":1,\"267\":1,\"268\":1,\"271\":1,\"272\":1,\"292\":1,\"335\":1,\"349\":1,\"752\":1,\"753\":1,\"775\":1,\"776\":1,\"779\":1,\"780\":1,\"800\":1,\"843\":1,\"857\":1,\"1265\":1,\"1266\":1,\"1288\":1,\"1289\":1,\"1292\":1,\"1293\":1,\"1312\":1,\"1355\":1,\"1372\":1}}],[\"asyncgenerator\",{\"1\":{\"407\":1,\"915\":1,\"1430\":1,\"1599\":1,\"1658\":1,\"1756\":1,\"1791\":1,\"1968\":1,\"2027\":1,\"2125\":1,\"2160\":1,\"2318\":1,\"2396\":1,\"2493\":1,\"2529\":1}}],[\"asynchronous\",{\"1\":{\"80\":1,\"588\":1,\"1098\":1}}],[\"async\",{\"0\":{\"2685\":1,\"2700\":1,\"2715\":1},\"1\":{\"78\":1,\"120\":1,\"121\":1,\"124\":1,\"127\":1,\"128\":1,\"129\":1,\"130\":1,\"132\":1,\"133\":1,\"134\":1,\"135\":1,\"136\":1,\"137\":1,\"139\":1,\"140\":2,\"200\":1,\"203\":1,\"205\":1,\"206\":1,\"207\":1,\"297\":1,\"333\":2,\"347\":2,\"406\":1,\"407\":1,\"421\":1,\"422\":4,\"424\":1,\"425\":2,\"426\":1,\"429\":5,\"452\":1,\"470\":4,\"471\":2,\"473\":1,\"474\":1,\"475\":2,\"586\":1,\"628\":1,\"629\":1,\"632\":1,\"635\":1,\"636\":1,\"637\":1,\"638\":1,\"640\":1,\"641\":1,\"642\":1,\"643\":1,\"644\":1,\"645\":1,\"647\":1,\"648\":2,\"708\":1,\"711\":1,\"713\":1,\"714\":1,\"715\":1,\"805\":1,\"841\":2,\"855\":2,\"914\":1,\"915\":1,\"931\":1,\"932\":4,\"934\":1,\"935\":2,\"936\":1,\"939\":5,\"962\":1,\"980\":4,\"981\":2,\"983\":1,\"984\":1,\"985\":2,\"1096\":1,\"1138\":1,\"1139\":1,\"1142\":1,\"1145\":1,\"1146\":1,\"1147\":1,\"1148\":1,\"1150\":1,\"1151\":1,\"1152\":1,\"1153\":1,\"1154\":1,\"1155\":1,\"1157\":1,\"1158\":2,\"1220\":1,\"1223\":1,\"1225\":1,\"1226\":1,\"1227\":1,\"1323\":1,\"1353\":2,\"1370\":2,\"1429\":1,\"1430\":1,\"1446\":1,\"1447\":4,\"1449\":1,\"1450\":2,\"1451\":1,\"1454\":5,\"1477\":1,\"1495\":4,\"1496\":2,\"1498\":1,\"1499\":1,\"1500\":2,\"1930\":1,\"1931\":1,\"1934\":5,\"1935\":3,\"2299\":1,\"2300\":1,\"2303\":5,\"2304\":3,\"2668\":1,\"2669\":1,\"2672\":5,\"2673\":3,\"2680\":16,\"2681\":3,\"2684\":5,\"2685\":5,\"2687\":1,\"2688\":1,\"2689\":18,\"2695\":16,\"2696\":3,\"2699\":5,\"2700\":5,\"2702\":1,\"2703\":1,\"2704\":18,\"2710\":16,\"2711\":3,\"2714\":5,\"2715\":5,\"2717\":1,\"2718\":1,\"2719\":18}}],[\"asyncclient\",{\"1\":{\"7\":1,\"19\":1,\"31\":1}}],[\"共享数据库以及网络请求连接会话\",{\"1\":{\"7\":1,\"19\":1,\"31\":1}}],[\"同样会返回该插件\",{\"1\":{\"1804\":1,\"2173\":1,\"2542\":1}}],[\"同样是一个合法的插件\",{\"1\":{\"512\":1,\"1022\":1,\"1537\":1}}],[\"同样能从文档中受益\",{\"1\":{\"495\":1,\"1005\":1,\"1520\":1}}],[\"同样的还有\",{\"1\":{\"1891\":1,\"2260\":1,\"2629\":1}}],[\"同样的\",{\"1\":{\"422\":1,\"474\":1,\"541\":1,\"932\":1,\"984\":1,\"1051\":1,\"1447\":1,\"1499\":1,\"1566\":1}}],[\"同样的代码逻辑多次重复\",{\"1\":{\"7\":1,\"19\":1,\"31\":1}}],[\"同步更新使用说明文档\",{\"1\":{\"494\":1,\"1004\":1,\"1519\":1}}],[\"同步更新使用文档\",{\"1\":{\"493\":1,\"1003\":1,\"1518\":1}}],[\"同时提供了便捷的查询方法\",{\"1\":{\"1895\":1,\"2264\":1,\"2633\":1}}],[\"同时可以使用\",{\"1\":{\"1890\":1,\"2259\":1,\"2628\":1}}],[\"同时支持\",{\"1\":{\"1888\":1,\"2257\":1,\"2626\":1}}],[\"同时也会自动去除\",{\"1\":{\"526\":1,\"1036\":1,\"1551\":1}}],[\"同时插件间也可能产生冲突\",{\"1\":{\"499\":1,\"1009\":1,\"1524\":1}}],[\"同时插件提供\",{\"1\":{\"433\":1,\"943\":1,\"1458\":1}}],[\"同时完善进阶内容\",{\"1\":{\"495\":1,\"1005\":1,\"1520\":1}}],[\"同时其官方提供了丰富的聊天机器人\",{\"1\":{\"486\":1,\"996\":1,\"1511\":1}}],[\"同时对\",{\"1\":{\"482\":1,\"992\":1,\"1507\":1}}],[\"同时\",{\"1\":{\"0\":1,\"12\":1,\"24\":1,\"54\":1,\"109\":1,\"420\":1,\"426\":1,\"486\":1,\"487\":1,\"490\":1,\"531\":1,\"562\":1,\"617\":1,\"930\":1,\"936\":1,\"996\":1,\"997\":1,\"1000\":1,\"1018\":1,\"1041\":1,\"1072\":1,\"1127\":1,\"1445\":1,\"1451\":1,\"1511\":1,\"1512\":1,\"1515\":1,\"1533\":1,\"1556\":1,\"1933\":1,\"2302\":1,\"2671\":1}}],[\"这类独立的数据库后端不会受平台和\",{\"1\":{\"2690\":1,\"2705\":1,\"2720\":1}}],[\"这类为大型机器人开发而设计的项目来说\",{\"1\":{\"485\":1,\"995\":1,\"1510\":1}}],[\"这意味着我们需要频繁地创建并执行迁移脚本\",{\"1\":{\"2679\":1,\"2694\":1,\"2709\":1}}],[\"这就是迁移脚本的作用\",{\"1\":{\"2679\":1,\"2694\":1,\"2709\":1}}],[\"这就是我们创建的迁移脚本\",{\"1\":{\"2679\":1,\"2694\":1,\"2709\":1}}],[\"这使得我们可以实现如下命令\",{\"1\":{\"1903\":1,\"2272\":1,\"2641\":1}}],[\"这是因为\",{\"1\":{\"2678\":1,\"2693\":1,\"2708\":1}}],[\"这是注释\",{\"1\":{\"1889\":2,\"2258\":2,\"2627\":2}}],[\"这是一个示例插件\",{\"1\":{\"110\":1,\"618\":1,\"1128\":1}}],[\"这是一个以机器人\",{\"1\":{\"40\":1,\"548\":1,\"1058\":1}}],[\"这段代码通过alconna创捷了一个接受主命令名为pip\",{\"1\":{\"1886\":1,\"2255\":1,\"2624\":1}}],[\"这也是最常见的用法\",{\"1\":{\"1925\":1,\"2294\":1,\"2663\":1}}],[\"这也是一个以机器人\",{\"1\":{\"40\":1,\"548\":1,\"1058\":1}}],[\"这也意味着你可以将默认值设置为\",{\"1\":{\"1892\":1,\"2261\":1,\"2630\":1}}],[\"这也意味着\",{\"1\":{\"531\":1,\"1041\":1,\"1556\":1}}],[\"这由插件编写者决定\",{\"1\":{\"523\":1,\"1033\":1,\"1548\":1}}],[\"这种加载方式是以上两种方式的混合\",{\"1\":{\"517\":1,\"1027\":1,\"1542\":1}}],[\"这会导致插件不能正常运行\",{\"1\":{\"2679\":1,\"2694\":1,\"2709\":1}}],[\"这会导致插件加载失败\",{\"1\":{\"116\":1,\"624\":1,\"1134\":1}}],[\"这会导致\",{\"1\":{\"514\":1,\"1024\":1,\"1539\":1}}],[\"这时候就需要对错误进行跟踪\",{\"1\":{\"442\":1,\"952\":1,\"1467\":1}}],[\"这时候我们可以在这个钩子函数中进行这些操作\",{\"1\":{\"127\":1,\"635\":1,\"1145\":1}}],[\"这时候我们就需要在插件之间进行跨插件访问\",{\"1\":{\"115\":1,\"623\":1,\"1133\":1}}],[\"这个事件响应器会对\",{\"1\":{\"526\":1,\"1036\":1,\"1551\":1}}],[\"这个时候包\",{\"1\":{\"512\":1,\"1022\":1,\"1537\":1}}],[\"这个时候模块\",{\"1\":{\"511\":1,\"1021\":1,\"1536\":1}}],[\"这个\",{\"1\":{\"466\":1,\"976\":1,\"1491\":1}}],[\"这个函数\",{\"1\":{\"424\":1,\"934\":1,\"1449\":1}}],[\"这个参数就是一个响应规则\",{\"1\":{\"423\":1,\"933\":1,\"1448\":1}}],[\"这个方法由协议适配器进行了实现\",{\"1\":{\"421\":1,\"931\":1,\"1446\":1}}],[\"这个会话\",{\"1\":{\"140\":1,\"648\":1,\"1158\":1}}],[\"这个过程称为会话更新\",{\"1\":{\"138\":1,\"646\":1,\"1156\":1}}],[\"这个钩子函数会在任何协议适配器连接\",{\"1\":{\"129\":1,\"637\":1,\"1147\":1}}],[\"这个钩子函数会在\",{\"1\":{\"127\":1,\"128\":1,\"130\":1,\"132\":1,\"133\":1,\"134\":1,\"135\":1,\"136\":1,\"137\":1,\"635\":1,\"636\":1,\"638\":1,\"640\":1,\"641\":1,\"642\":1,\"643\":1,\"644\":1,\"645\":1,\"1145\":1,\"1146\":1,\"1148\":1,\"1150\":1,\"1151\":1,\"1152\":1,\"1153\":1,\"1154\":1,\"1155\":1}}],[\"这些代码是由\",{\"1\":{\"2679\":1,\"2694\":1,\"2709\":1}}],[\"这些独特的内容均需要由对应的协议适配器所提供\",{\"1\":{\"531\":1,\"1041\":1,\"1556\":1}}],[\"这些内容的意义和使用方法将会在后续的章节中一一介绍\",{\"1\":{\"527\":1,\"1037\":1,\"1552\":1}}],[\"这些将会在稍后的章节中逐一介绍\",{\"1\":{\"507\":1,\"1017\":1,\"1532\":1}}],[\"这些实现都各自重复实现了\",{\"1\":{\"490\":1,\"491\":1,\"1000\":1,\"1001\":1,\"1515\":1,\"1516\":1}}],[\"这些错误都会导致应用的运行出现问题\",{\"1\":{\"442\":1,\"952\":1,\"1467\":1}}],[\"这些信息都可以存储于会话状态中\",{\"1\":{\"429\":1,\"939\":1,\"1454\":1}}],[\"这些信息编写于插件模块的顶层\",{\"1\":{\"110\":1,\"618\":1,\"1128\":1}}],[\"这些异常并非所有需要用户处理\",{\"1\":{\"195\":1,\"703\":1,\"1215\":1}}],[\"这些配置将会在\",{\"1\":{\"165\":1,\"673\":1,\"1183\":1}}],[\"这些函数可以跟普通的事件处理函数一样接受相应的参数\",{\"1\":{\"131\":1,\"639\":1,\"1149\":1}}],[\"这些钩子函数指的是影响\",{\"1\":{\"131\":1,\"639\":1,\"1149\":1}}],[\"这些钩子函数是由驱动器来运行的\",{\"1\":{\"126\":1,\"634\":1,\"1144\":1}}],[\"这些钩子函数可以用装饰器的形式来使用\",{\"1\":{\"125\":1,\"633\":1,\"1143\":1}}],[\"这两个应用是同一个对象\",{\"1\":{\"123\":1,\"631\":1,\"1141\":1}}],[\"这两种途径各有优劣\",{\"1\":{\"118\":1,\"626\":1,\"1136\":1}}],[\"这里就不再赘述\",{\"1\":{\"1935\":1,\"2304\":1,\"2673\":1}}],[\"这里给出几个简单的例子\",{\"1\":{\"543\":1,\"1053\":1,\"1568\":1}}],[\"这里的逻辑是\",{\"1\":{\"490\":1,\"491\":1,\"1000\":1,\"1001\":1,\"1515\":1,\"1516\":1}}],[\"这里的插件名称是供使用者或机器人用户查看的\",{\"1\":{\"110\":1,\"618\":1,\"1128\":1}}],[\"这里为开发者提供几个常见问题的解决方法\",{\"1\":{\"478\":1,\"988\":1,\"1503\":1}}],[\"这里要断开\",{\"1\":{\"470\":1,\"980\":1,\"1495\":1}}],[\"这里不再赘述\",{\"1\":{\"429\":1,\"939\":1,\"1454\":1}}],[\"这里将不再展示\",{\"1\":{\"139\":1,\"647\":1,\"1157\":1}}],[\"这里将详细介绍驱动器配置的格式\",{\"1\":{\"54\":1,\"562\":1,\"1072\":1}}],[\"这里我们以\",{\"1\":{\"124\":1,\"632\":1,\"1142\":1}}],[\"这在响应规则一节中已经介绍过\",{\"1\":{\"88\":1,\"596\":1,\"1106\":1}}],[\"这在权限控制一节中已经介绍过\",{\"1\":{\"87\":1,\"595\":1,\"1105\":1}}],[\"这在你有以下情形的需求时非常有用\",{\"1\":{\"7\":1,\"19\":1,\"31\":1}}],[\"这样的面向对象编程\",{\"1\":{\"2680\":1,\"2695\":1,\"2710\":1}}],[\"这样可以使你的代码更加通用\",{\"1\":{\"421\":1,\"931\":1,\"1446\":1}}],[\"这样我们就可以通过协议适配器定义的子类型来获取更多的信息\",{\"1\":{\"421\":1,\"931\":1,\"1446\":1}}],[\"这样我们就可以实现持久化\",{\"1\":{\"81\":1,\"589\":1,\"1099\":1}}],[\"这样就能成功匹配\",{\"1\":{\"105\":1,\"613\":1,\"1123\":1}}],[\"这样\",{\"1\":{\"100\":1,\"114\":1,\"422\":2,\"426\":1,\"526\":1,\"527\":1,\"608\":1,\"622\":1,\"932\":2,\"936\":1,\"1036\":1,\"1037\":1,\"1118\":1,\"1132\":1,\"1447\":2,\"1451\":1,\"1551\":1,\"1552\":1}}],[\"这样适配器就可以通过驱动器接收事件和调用接口了\",{\"1\":{\"38\":1,\"546\":1,\"1056\":1}}],[\"这部分代码拥有共享的逻辑\",{\"1\":{\"7\":1,\"19\":1,\"31\":1}}],[\"在类属性中声明子依赖\",{\"1\":{\"2681\":1,\"2696\":1,\"2711\":1}}],[\"在复杂或有歧义的情况下\",{\"1\":{\"2679\":1,\"2694\":1,\"2709\":1}}],[\"在获取到模拟客户端后\",{\"1\":{\"1935\":1,\"2304\":1,\"2673\":1}}],[\"在获取到了\",{\"1\":{\"124\":1,\"632\":1,\"1142\":1}}],[\"在该组件未被解析时使用使用该值替换\",{\"1\":{\"1893\":1,\"2262\":1,\"2631\":1}}],[\"在实际命令中并不需要传入\",{\"1\":{\"1889\":1,\"2258\":1,\"2627\":1}}],[\"在实际使用中\",{\"1\":{\"532\":1,\"1042\":1,\"1557\":1}}],[\"在添加\",{\"1\":{\"1866\":1,\"1883\":1,\"2235\":1,\"2252\":1,\"2604\":1,\"2621\":1}}],[\"在添加路由规则时\",{\"1\":{\"118\":1,\"626\":1,\"1136\":1}}],[\"在传入字段名不是有效标识符时有用\",{\"1\":{\"1635\":1,\"2004\":1,\"2373\":1}}],[\"在命令匹配部分使用\",{\"1\":{\"1623\":1,\"1992\":1,\"2361\":1}}],[\"在事实上\",{\"1\":{\"543\":1,\"1053\":1,\"1568\":1}}],[\"在事件处理流程中\",{\"1\":{\"429\":1,\"939\":1,\"1454\":1}}],[\"在事件类型与重载一节中\",{\"1\":{\"41\":1,\"549\":1,\"1059\":1}}],[\"在以下的示例中\",{\"1\":{\"532\":1,\"1042\":1,\"1557\":1}}],[\"在不同平台中\",{\"1\":{\"528\":1,\"1038\":1,\"1553\":1}}],[\"在辅助函数中\",{\"1\":{\"527\":1,\"1037\":1,\"1552\":1}}],[\"在上面的示例中\",{\"1\":{\"2681\":1,\"2696\":1,\"2711\":1}}],[\"在上面的测试中\",{\"1\":{\"1934\":1,\"1935\":1,\"2303\":1,\"2304\":1,\"2672\":1,\"2673\":1}}],[\"在上面的代码中\",{\"1\":{\"421\":1,\"424\":1,\"931\":1,\"934\":1,\"1446\":1,\"1449\":1}}],[\"在上一节的使用依赖注入中\",{\"1\":{\"530\":1,\"531\":1,\"1040\":1,\"1041\":1,\"1555\":1,\"1556\":1}}],[\"在上一节创建插件中\",{\"1\":{\"526\":1,\"1036\":1,\"1551\":1}}],[\"在接下来的章节中\",{\"1\":{\"523\":1,\"1033\":1,\"1548\":1}}],[\"在接收到来自平台的事件数据后\",{\"1\":{\"473\":1,\"983\":1,\"1498\":1}}],[\"在接收用户新的一条消息后从头开始执行当前处理函数\",{\"1\":{\"256\":1,\"764\":1,\"1277\":1}}],[\"在接收用户新的一条消息后继续下一个处理函数\",{\"1\":{\"254\":1,\"762\":1,\"1275\":1}}],[\"在接收用户新的一条消息后继续运行该函数\",{\"1\":{\"250\":1,\"758\":1,\"1271\":1}}],[\"在接收用户新的一个事件后从头开始执行当前处理函数\",{\"1\":{\"255\":1,\"257\":1,\"763\":1,\"765\":1,\"1276\":1,\"1278\":1}}],[\"在正式编写插件之前\",{\"1\":{\"509\":1,\"1019\":1,\"1534\":1}}],[\"在创建alconna时候传入命名空间以替换默认命名空间\",{\"1\":{\"1898\":1,\"2267\":1,\"2636\":1}}],[\"在创建完成以上文件并确认已安装所需适配器和插件后\",{\"1\":{\"507\":1,\"1017\":1,\"1532\":1}}],[\"在创建项目前\",{\"1\":{\"505\":1,\"1015\":1,\"1530\":1}}],[\"在快速上手中\",{\"1\":{\"504\":1,\"524\":1,\"1014\":1,\"1034\":1,\"1529\":1,\"1549\":1}}],[\"在长期的使用中发现了一些问题和不足的地方\",{\"1\":{\"502\":1,\"1012\":1,\"1527\":1}}],[\"在解决以上问题的基础上\",{\"1\":{\"501\":1,\"1011\":1,\"1526\":1}}],[\"在早期提供了基于网页的\",{\"1\":{\"494\":1,\"1004\":1,\"1519\":1}}],[\"在聊天机器人的开发过程中\",{\"1\":{\"485\":1,\"995\":1,\"1510\":1}}],[\"在代码中补充\",{\"1\":{\"483\":1,\"993\":1,\"1508\":1}}],[\"在更新代码接口的同时需要手动更新文档\",{\"1\":{\"483\":1,\"993\":1,\"1508\":1}}],[\"在完成测试后\",{\"1\":{\"1934\":1,\"2303\":1,\"2672\":1}}],[\"在完成适配器代码的编写后\",{\"1\":{\"479\":1,\"989\":1,\"1504\":1}}],[\"在完成依赖声明后\",{\"1\":{\"117\":1,\"625\":1,\"1135\":1}}],[\"在测试中无法导入\",{\"1\":{\"478\":1,\"988\":1,\"1503\":1}}],[\"在与平台断开连接或出现某些异常进行重连时\",{\"1\":{\"472\":1,\"982\":1,\"1497\":1}}],[\"在与平台建立连接后\",{\"1\":{\"472\":1,\"982\":1,\"1497\":1}}],[\"在编写平台相关内容之前\",{\"1\":{\"468\":1,\"978\":1,\"1493\":1}}],[\"在编写适配器时\",{\"1\":{\"462\":1,\"972\":1,\"1487\":1}}],[\"在编写适配器之前\",{\"1\":{\"462\":1,\"972\":1,\"1487\":1}}],[\"在编程中\",{\"1\":{\"7\":1,\"19\":1,\"31\":1}}],[\"在此我们会简要介绍其调用方法\",{\"1\":{\"450\":1,\"960\":1,\"1475\":1}}],[\"在此基础上添加了消息序列\",{\"1\":{\"100\":1,\"608\":1,\"1118\":1}}],[\"在项目目录中创建一个两层文件夹\",{\"1\":{\"513\":2,\"1023\":2,\"1538\":2}}],[\"在项目目录下执行以下命令\",{\"1\":{\"432\":1,\"443\":1,\"449\":1,\"942\":1,\"953\":1,\"959\":1,\"1457\":1,\"1468\":1,\"1474\":1}}],[\"在项目文件夹中\",{\"1\":{\"508\":1,\"1018\":1,\"1533\":1}}],[\"在项目文件夹中创建一个\",{\"1\":{\"506\":1,\"507\":1,\"1016\":1,\"1017\":1,\"1531\":1,\"1532\":1}}],[\"在项目\",{\"1\":{\"446\":1,\"956\":1,\"1471\":1}}],[\"在安装完成之后\",{\"1\":{\"444\":1,\"954\":1,\"1469\":1}}],[\"在应用实际运行过程中\",{\"1\":{\"442\":1,\"952\":1,\"1467\":1}}],[\"在期间的任何一个事件处理函数都可以进行读写\",{\"1\":{\"429\":1,\"939\":1,\"1454\":1}}],[\"在会话中\",{\"1\":{\"429\":1,\"939\":1,\"1454\":1}}],[\"在原有列表\",{\"1\":{\"541\":1,\"1051\":1,\"1566\":1}}],[\"在原\",{\"1\":{\"426\":1,\"936\":1,\"1451\":1}}],[\"在定义响应规则时\",{\"1\":{\"426\":1,\"936\":1,\"1451\":1}}],[\"在指南中\",{\"1\":{\"423\":1,\"933\":1,\"1448\":1}}],[\"在指南与深入中\",{\"1\":{\"84\":1,\"592\":1,\"1102\":1}}],[\"在自定义权限一节中\",{\"1\":{\"421\":1,\"931\":1,\"1446\":1}}],[\"在本章节中\",{\"1\":{\"420\":1,\"504\":1,\"930\":1,\"1014\":1,\"1445\":1,\"1529\":1}}],[\"在使用之前可以参考事件响应器进阶\",{\"1\":{\"1037\":1,\"1552\":1}}],[\"在使用之前可以参考事件响应器进阶或编辑器的提示\",{\"1\":{\"527\":1}}],[\"在使用事件响应器操作发送消息时\",{\"1\":{\"533\":1,\"1043\":1,\"1558\":1}}],[\"在使用本插件前同样需要使用\",{\"1\":{\"433\":1,\"943\":1,\"1458\":1}}],[\"在使用前请先安装\",{\"1\":{\"432\":1,\"443\":1,\"449\":1,\"942\":1,\"953\":1,\"959\":1,\"1457\":1,\"1468\":1,\"1474\":1}}],[\"在使用插件的过程中\",{\"1\":{\"431\":1,\"941\":1,\"1456\":1}}],[\"在使用平台接口时\",{\"1\":{\"420\":1,\"930\":1,\"1445\":1}}],[\"在使用适配器之前\",{\"1\":{\"38\":1,\"546\":1,\"1056\":1}}],[\"在之前的示例中\",{\"1\":{\"420\":1,\"930\":1,\"1445\":1}}],[\"在机器人入口文件中\",{\"1\":{\"418\":1,\"928\":1,\"1443\":1}}],[\"在启动时会添加一个默认的日志处理器\",{\"1\":{\"418\":1,\"928\":1,\"1443\":1}}],[\"在参数不存在时向用户发送的消息\",{\"1\":{\"251\":1,\"759\":1,\"1272\":1}}],[\"在参数中获取\",{\"1\":{\"90\":1,\"598\":1,\"1108\":1}}],[\"在网络出现问题时抛出\",{\"1\":{\"211\":1,\"719\":1,\"1231\":1}}],[\"在注册了上述响应事件类型更新函数后\",{\"1\":{\"139\":1,\"647\":1,\"1157\":1}}],[\"在某个事件响应器对事件响应后\",{\"1\":{\"138\":1,\"646\":1,\"1156\":1}}],[\"在下面的代码中\",{\"1\":{\"124\":1,\"632\":1,\"1142\":1}}],[\"在向驱动器添加路由规则时\",{\"1\":{\"118\":1,\"626\":1,\"1136\":1}}],[\"在驱动器一节中\",{\"1\":{\"118\":1,\"626\":1,\"1136\":1}}],[\"在消息类型的事件响应器的基础上\",{\"1\":{\"93\":1,\"601\":1,\"1111\":1}}],[\"在响应器被触发时\",{\"1\":{\"92\":1,\"600\":1,\"1110\":1}}],[\"在部分情况中\",{\"1\":{\"90\":1,\"598\":1,\"1108\":1}}],[\"在这里加载插件\",{\"1\":{\"507\":1,\"513\":1,\"1017\":1,\"1023\":1,\"1532\":1,\"1538\":1}}],[\"在这里是指\",{\"1\":{\"7\":1,\"19\":1,\"31\":1}}],[\"在这个钩子函数中\",{\"1\":{\"136\":1,\"137\":1,\"644\":1,\"645\":1,\"1154\":1,\"1155\":1}}],[\"在这个钩子函数内抛出\",{\"1\":{\"132\":1,\"134\":1,\"640\":1,\"642\":1,\"1150\":1,\"1152\":1}}],[\"在这一节中\",{\"1\":{\"84\":1,\"592\":1,\"1102\":1}}],[\"在多实例间共享会话状态等功能\",{\"1\":{\"81\":1,\"589\":1,\"1099\":1}}],[\"在进入会话状态后\",{\"1\":{\"81\":1,\"589\":1,\"1099\":1}}],[\"在\",{\"1\":{\"10\":3,\"22\":3,\"34\":3,\"55\":1,\"64\":3,\"72\":1,\"110\":1,\"125\":1,\"138\":1,\"195\":1,\"203\":1,\"210\":1,\"333\":1,\"347\":1,\"394\":1,\"395\":1,\"421\":1,\"424\":1,\"433\":1,\"448\":1,\"452\":1,\"457\":1,\"470\":1,\"478\":1,\"502\":2,\"510\":1,\"513\":1,\"524\":1,\"525\":1,\"528\":1,\"530\":1,\"563\":1,\"572\":3,\"580\":1,\"618\":1,\"633\":1,\"646\":1,\"703\":1,\"711\":1,\"718\":1,\"841\":1,\"855\":1,\"902\":1,\"903\":1,\"931\":1,\"934\":1,\"943\":1,\"958\":1,\"962\":1,\"967\":1,\"980\":1,\"988\":1,\"1012\":2,\"1020\":1,\"1023\":1,\"1034\":1,\"1035\":1,\"1038\":1,\"1040\":1,\"1073\":1,\"1082\":3,\"1090\":1,\"1128\":1,\"1143\":1,\"1156\":1,\"1215\":1,\"1223\":1,\"1230\":1,\"1353\":1,\"1370\":1,\"1417\":1,\"1418\":1,\"1446\":1,\"1449\":1,\"1458\":1,\"1473\":1,\"1477\":1,\"1482\":1,\"1495\":1,\"1503\":1,\"1527\":2,\"1535\":1,\"1538\":1,\"1549\":1,\"1550\":1,\"1553\":1,\"1555\":1,\"1589\":1,\"1958\":1,\"2308\":1}}],[\"系统下\",{\"1\":{\"433\":1,\"943\":1,\"1458\":1}}],[\"系统\",{\"1\":{\"7\":1,\"19\":1,\"31\":1}}],[\"依赖于基于\",{\"1\":{\"448\":1,\"958\":1,\"1473\":1}}],[\"依赖于插件\",{\"1\":{\"117\":1,\"625\":1,\"1135\":1}}],[\"依赖参数\",{\"1\":{\"383\":1,\"384\":1,\"387\":1,\"388\":1,\"389\":1,\"390\":1,\"391\":1,\"392\":1,\"394\":1,\"395\":1,\"891\":1,\"892\":1,\"895\":1,\"896\":1,\"897\":1,\"898\":1,\"899\":1,\"900\":1,\"902\":1,\"903\":1,\"1406\":1,\"1407\":1,\"1410\":1,\"1411\":1,\"1412\":1,\"1413\":1,\"1414\":1,\"1415\":1,\"1417\":1,\"1418\":1}}],[\"依赖函数会根据其参数的类型注解来决定是否执行\",{\"1\":{\"422\":1,\"932\":1,\"1447\":1}}],[\"依赖函数\",{\"1\":{\"297\":1,\"805\":1,\"1323\":1}}],[\"依赖缓存\",{\"1\":{\"244\":1,\"245\":1,\"292\":1,\"335\":1,\"349\":1,\"396\":1,\"752\":1,\"753\":1,\"800\":1,\"843\":1,\"857\":1,\"904\":1,\"1265\":1,\"1266\":1,\"1312\":1,\"1355\":1,\"1372\":1,\"1419\":1}}],[\"依赖性\",{\"1\":{\"7\":1,\"19\":1,\"31\":1}}],[\"依赖\",{\"1\":{\"7\":1,\"19\":1,\"31\":1}}],[\"依赖注入获得了一个会话\",{\"1\":{\"2680\":1,\"2695\":1,\"2710\":1}}],[\"依赖注入获取\",{\"1\":{\"99\":1,\"100\":1,\"101\":1,\"607\":1,\"608\":1,\"609\":1,\"1117\":1,\"1118\":1,\"1119\":1}}],[\"依赖注入解析前的参数检查\",{\"1\":{\"1641\":1,\"2010\":1,\"2379\":1}}],[\"依赖注入的可调用对象\",{\"1\":{\"1641\":1,\"2010\":1,\"2379\":1}}],[\"依赖注入的基本单元\",{\"1\":{\"1640\":1,\"2009\":1,\"2378\":1}}],[\"依赖注入容器\",{\"1\":{\"1641\":1,\"2010\":1,\"2379\":1}}],[\"依赖注入也可以使用这个特性来对不同的返回值进行处理\",{\"1\":{\"422\":1,\"932\":1,\"1447\":1}}],[\"依赖注入等方式实现输入参数校验\",{\"1\":{\"58\":1,\"566\":1,\"1076\":1}}],[\"依赖注入\",{\"0\":{\"2681\":1,\"2682\":1,\"2696\":1,\"2697\":1,\"2711\":1,\"2712\":1},\"1\":{\"7\":1,\"19\":1,\"31\":1,\"2681\":1,\"2696\":1,\"2711\":1}}],[\"依赖注入系统\",{\"0\":{\"6\":1,\"18\":1,\"30\":1}}],[\"即内容是唯一的且非空的\",{\"1\":{\"2678\":1,\"2693\":1,\"2708\":1}}],[\"即回滚到初始状态\",{\"1\":{\"1926\":1,\"2295\":1,\"2664\":1}}],[\"即未经过\",{\"1\":{\"1912\":1,\"2281\":1,\"2650\":1}}],[\"即不声明\",{\"1\":{\"1892\":1,\"2261\":1,\"2630\":1}}],[\"即使有\",{\"1\":{\"1890\":1,\"2259\":1,\"2628\":1}}],[\"即使用\",{\"1\":{\"117\":1,\"625\":1,\"1135\":1}}],[\"即关闭\",{\"1\":{\"1671\":1,\"1672\":1,\"1673\":1,\"2040\":1,\"2041\":1,\"2042\":1,\"2409\":1,\"2410\":1,\"2411\":1}}],[\"即事件响应器收到的信息内容为\",{\"1\":{\"526\":1,\"1036\":1,\"1551\":1}}],[\"即插件\",{\"1\":{\"523\":1,\"1033\":1,\"1548\":1}}],[\"即可像\",{\"1\":{\"1934\":1,\"2303\":1,\"2672\":1}}],[\"即可运行机器人\",{\"1\":{\"507\":1,\"1017\":1,\"1532\":1}}],[\"即可创建一个带有基本结构的适配器项目\",{\"1\":{\"464\":1,\"974\":1,\"1489\":1}}],[\"即在\",{\"1\":{\"463\":1,\"973\":1,\"1488\":1}}],[\"即刻开始插件编写\",{\"1\":{\"430\":1,\"940\":1,\"1455\":1}}],[\"即为一个\",{\"1\":{\"424\":1,\"934\":1,\"1449\":1}}],[\"即只会输出\",{\"1\":{\"417\":1,\"927\":1,\"1442\":1}}],[\"即判断事件是否满足权限的处理函数\",{\"1\":{\"392\":1,\"900\":1,\"1415\":1}}],[\"即判断是否响应事件的处理函数\",{\"1\":{\"391\":1,\"899\":1,\"1414\":1}}],[\"即触发一次后删除\",{\"1\":{\"242\":1,\"750\":1,\"1263\":1}}],[\"即运行全局\",{\"1\":{\"225\":1,\"733\":1,\"1245\":1}}],[\"即是进入了会话状态\",{\"1\":{\"138\":1,\"646\":1,\"1156\":1}}],[\"即是该响应器所要响应的事件类型\",{\"1\":{\"86\":1,\"594\":1,\"1104\":1}}],[\"即便插件导入顺序不同\",{\"1\":{\"116\":1,\"624\":1,\"1134\":1}}],[\"即一个插件可以包含其他插件\",{\"1\":{\"112\":1,\"620\":1,\"1130\":1}}],[\"即仅使用基本适配器功能\",{\"1\":{\"110\":1,\"618\":1,\"1128\":1}}],[\"即以优先级为键\",{\"1\":{\"82\":1,\"590\":1,\"1100\":1}}],[\"即驱动器类\",{\"1\":{\"54\":1,\"562\":1,\"1072\":1}}],[\"即服务端型驱动器\",{\"1\":{\"53\":1,\"561\":1,\"1071\":1}}],[\"即客户端型驱动器\",{\"1\":{\"53\":1,\"561\":1,\"1071\":1}}],[\"即\",{\"1\":{\"7\":2,\"19\":2,\"31\":2,\"54\":1,\"64\":1,\"116\":1,\"424\":1,\"528\":1,\"562\":1,\"572\":1,\"624\":1,\"934\":1,\"1038\":1,\"1072\":1,\"1082\":1,\"1134\":1,\"1449\":1,\"1553\":1,\"1803\":1,\"1804\":1,\"2172\":1,\"2173\":1,\"2541\":1,\"2542\":1}}],[\"什么是依赖注入\",{\"0\":{\"7\":1,\"19\":1,\"31\":1}}],[\"减少代码冗余\",{\"1\":{\"6\":1,\"18\":1,\"30\":1}}],[\"增加代码的可读性\",{\"1\":{\"6\":1,\"18\":1,\"30\":1}}],[\"清晰\",{\"1\":{\"6\":1,\"18\":1,\"30\":1}}],[\"可逆地同步数据库模式\",{\"1\":{\"2679\":1,\"2694\":1,\"2709\":1}}],[\"可复现地\",{\"1\":{\"2679\":1,\"2694\":1,\"2709\":1}}],[\"可自定义类型\",{\"1\":{\"1856\":1,\"1873\":1,\"2225\":1,\"2242\":1,\"2594\":1,\"2611\":1}}],[\"可与其他驱动器共用的混入基类\",{\"1\":{\"1707\":1,\"2076\":1,\"2476\":1}}],[\"可导入的\",{\"1\":{\"515\":1,\"516\":1,\"1025\":1,\"1026\":1,\"1540\":1,\"1541\":1}}],[\"可选\",{\"1\":{\"501\":1,\"505\":1,\"1011\":1,\"1015\":1,\"1526\":1,\"1530\":1,\"1921\":2,\"1922\":2,\"2290\":2,\"2291\":2,\"2659\":2,\"2660\":2}}],[\"可选参数解析器\",{\"1\":{\"364\":1,\"872\":1,\"1387\":1}}],[\"可选参数\",{\"1\":{\"95\":1,\"96\":1,\"97\":1,\"603\":1,\"604\":1,\"605\":1,\"1113\":1,\"1114\":1,\"1115\":1}}],[\"可对网页的开发以及生产构建性能做相应的优化提升\",{\"1\":{\"501\":1,\"1011\":1,\"1526\":1}}],[\"可参考跨插件访问和嵌套插件\",{\"1\":{\"522\":1,\"1032\":1,\"1547\":1}}],[\"可参考\",{\"1\":{\"433\":1,\"451\":1,\"943\":1,\"961\":1,\"1458\":1,\"1476\":1}}],[\"可参考获取商店插件来了解并选择安装插件的方式\",{\"1\":{\"432\":1,\"443\":1,\"449\":1,\"942\":1,\"953\":1,\"959\":1,\"1457\":1,\"1468\":1,\"1474\":1}}],[\"可用\",{\"1\":{\"222\":1,\"730\":1,\"1242\":1}}],[\"可用于获取正确的数据存储路径并写入数据\",{\"1\":{\"431\":1,\"941\":1,\"1456\":1}}],[\"可用于在计划任务的回调等情形中获取当前\",{\"1\":{\"217\":1,\"725\":1,\"1237\":1}}],[\"可用于结束用户会话\",{\"1\":{\"207\":1,\"715\":1,\"1227\":1}}],[\"可用于用户重新输入\",{\"1\":{\"206\":1,\"714\":1,\"1226\":1}}],[\"可用于用户输入新信息\",{\"1\":{\"205\":1,\"713\":1,\"1225\":1}}],[\"可在\",{\"1\":{\"209\":1,\"717\":1,\"1229\":1}}],[\"可由插件编写者自由扩展定义\",{\"1\":{\"1840\":1,\"2209\":1,\"2578\":1}}],[\"可由\",{\"1\":{\"199\":1,\"202\":1,\"707\":1,\"710\":1,\"1219\":1,\"1222\":1}}],[\"可能会知道\",{\"1\":{\"2680\":1,\"2695\":1,\"2710\":1}}],[\"可能会出现各种各样的错误\",{\"1\":{\"442\":1,\"952\":1,\"1467\":1}}],[\"可能会出现意料之外的错误出现\",{\"1\":{\"116\":1,\"624\":1,\"1134\":1}}],[\"可能造成文档与代码不匹配\",{\"1\":{\"483\":1,\"993\":1,\"1508\":1}}],[\"可能是由于代码逻辑错误\",{\"1\":{\"442\":1,\"952\":1,\"1467\":1}}],[\"可能为\",{\"1\":{\"390\":1,\"898\":1,\"1413\":1}}],[\"可能还未加载\",{\"1\":{\"111\":1,\"619\":1,\"1129\":1}}],[\"可不填写\",{\"1\":{\"110\":1,\"618\":1,\"1128\":1}}],[\"可以回退\",{\"1\":{\"2685\":1,\"2700\":1,\"2715\":1}}],[\"可以方便地帮助你获取数据库会话和查询数据\",{\"1\":{\"2682\":1,\"2697\":1,\"2712\":1}}],[\"可以方便地进行错误跟踪\",{\"1\":{\"442\":1,\"952\":1,\"1467\":1}}],[\"可以正确地生成迁移脚本\",{\"1\":{\"2679\":1,\"2694\":1,\"2709\":1}}],[\"可以注意到脚本的主体部分\",{\"1\":{\"2679\":1,\"2694\":1,\"2709\":1}}],[\"可以注意到表名是\",{\"1\":{\"2678\":1,\"2693\":1,\"2708\":1}}],[\"可以注入\",{\"1\":{\"132\":1,\"133\":1,\"134\":1,\"135\":1,\"640\":1,\"641\":1,\"642\":1,\"643\":1,\"1150\":1,\"1151\":1,\"1152\":1,\"1153\":1}}],[\"可以查阅专题以及其官方文档\",{\"1\":{\"2676\":1,\"2691\":1,\"2706\":1}}],[\"可以这样配置\",{\"1\":{\"1930\":1,\"2299\":1,\"2668\":1}}],[\"可以执行此命令\",{\"1\":{\"1926\":1,\"2295\":1,\"2664\":1}}],[\"可以设置\",{\"1\":{\"1903\":1,\"2272\":1,\"2641\":1}}],[\"可以设置包括参数字典在内的默认值\",{\"1\":{\"1893\":1,\"2262\":1,\"2631\":1}}],[\"可以动态操作快捷指令\",{\"1\":{\"1902\":1,\"2271\":1,\"2640\":1}}],[\"可以类型标注\",{\"1\":{\"1895\":1,\"2264\":1,\"2633\":1}}],[\"可以特别设置传入一类\",{\"1\":{\"1894\":1,\"2263\":1,\"2632\":1}}],[\"可以传入自己的\",{\"1\":{\"1893\":1,\"2262\":1,\"2631\":1}}],[\"可以传入一组\",{\"1\":{\"1893\":1,\"2262\":1,\"2631\":1}}],[\"可以抛出\",{\"1\":{\"1583\":1,\"1952\":1,\"2333\":1}}],[\"可以进行有限制的相互调用\",{\"1\":{\"510\":1,\"1020\":1,\"1535\":1}}],[\"可以运行机器人的场景进行功能体验或测试\",{\"1\":{\"494\":1,\"1004\":1,\"1519\":1}}],[\"可以向\",{\"1\":{\"417\":2,\"927\":2,\"1442\":2}}],[\"可以帮助我们了解运行状况\",{\"1\":{\"416\":1,\"926\":1,\"1441\":1}}],[\"可以序列化\",{\"1\":{\"413\":1,\"923\":1,\"1438\":1}}],[\"可以匹配\",{\"1\":{\"361\":2,\"869\":2,\"1384\":2}}],[\"可以为\",{\"1\":{\"169\":1,\"677\":1,\"1187\":1}}],[\"可以直接调用\",{\"1\":{\"474\":1,\"984\":1,\"1499\":1}}],[\"可以直接通过事件响应器辅助函数或者自行合并其他规则使用\",{\"1\":{\"428\":1,\"938\":1,\"1453\":1}}],[\"可以直接通过源码查看\",{\"1\":{\"110\":1,\"618\":1,\"1128\":1}}],[\"可以直接注入\",{\"1\":{\"129\":1,\"130\":1,\"637\":1,\"638\":1,\"1147\":1,\"1148\":1}}],[\"可以分为两类\",{\"1\":{\"125\":1,\"633\":1,\"1143\":1}}],[\"可以参考\",{\"1\":{\"120\":1,\"121\":1,\"433\":1,\"452\":1,\"628\":1,\"629\":1,\"943\":1,\"962\":1,\"1138\":1,\"1139\":1,\"1458\":1,\"1477\":1}}],[\"可以参考开发文档\",{\"1\":{\"51\":1,\"559\":1,\"1069\":1}}],[\"可以在更多平台上运行\",{\"1\":{\"421\":1,\"931\":1,\"1446\":1}}],[\"可以在\",{\"1\":{\"200\":1,\"205\":1,\"206\":1,\"207\":1,\"708\":1,\"713\":1,\"714\":1,\"715\":1,\"1220\":1,\"1225\":1,\"1226\":1,\"1227\":1}}],[\"可以在插件的\",{\"1\":{\"114\":1,\"622\":1,\"1132\":1}}],[\"可以在不需要外部网络连接时使用\",{\"1\":{\"57\":1,\"565\":1,\"1075\":1}}],[\"可以用于获取指定类型指定个数的消息段\",{\"1\":{\"541\":1,\"1051\":1,\"1566\":1}}],[\"可以用于索引指定类型的消息段\",{\"1\":{\"541\":1,\"1051\":1,\"1566\":1}}],[\"可以用于判断消息段是否为纯文本\",{\"1\":{\"537\":1,\"1047\":1,\"1562\":1}}],[\"可以用于存储任意信息\",{\"1\":{\"110\":1,\"618\":1,\"1128\":1}}],[\"可以用于管理一系列具有相同属性的响应器\",{\"1\":{\"106\":1,\"614\":1,\"1124\":1}}],[\"可以用于管理一系列具有相同前置命令的子命令响应器\",{\"1\":{\"105\":1,\"613\":1,\"1123\":1}}],[\"可以通过with方式创建命名空间\",{\"1\":{\"1898\":1,\"2267\":1,\"2636\":1}}],[\"可以通过以下几种方式构造\",{\"1\":{\"1888\":1,\"2257\":1,\"2626\":1}}],[\"可以通过该消息类型的\",{\"1\":{\"1602\":1,\"1971\":1,\"2340\":1}}],[\"可以通过该函数或直接通过\",{\"1\":{\"1575\":1,\"1944\":1,\"2325\":1}}],[\"可以通过依赖注入\",{\"1\":{\"532\":1,\"1042\":1,\"1557\":1}}],[\"可以通过类型\",{\"1\":{\"429\":1,\"939\":1,\"1454\":1}}],[\"可以通过类型注解\",{\"1\":{\"58\":1,\"566\":1,\"1076\":1}}],[\"可以通过\",{\"1\":{\"298\":1,\"361\":1,\"365\":1,\"367\":1,\"806\":1,\"869\":1,\"873\":1,\"875\":1,\"1316\":1,\"1384\":1,\"1388\":1,\"1390\":1,\"1866\":1,\"1883\":1,\"2235\":1,\"2252\":1,\"2604\":1,\"2621\":1}}],[\"可以通过加载插件来扩展功能\",{\"1\":{\"109\":1,\"617\":1,\"1127\":1}}],[\"可以添加\",{\"1\":{\"105\":1,\"613\":1,\"1123\":1}}],[\"可以是本地插件或是通过\",{\"1\":{\"1809\":1,\"2178\":1,\"2547\":1}}],[\"可以是任何\",{\"1\":{\"1641\":1,\"2010\":1,\"2379\":1}}],[\"可以是\",{\"1\":{\"93\":2,\"601\":2,\"1111\":2}}],[\"可以自行定义新的类型\",{\"1\":{\"86\":1,\"594\":1,\"1104\":1}}],[\"可以先阅读相关协议适配器文档说明\",{\"1\":{\"52\":1,\"560\":1,\"1070\":1}}],[\"可以多次调用\",{\"1\":{\"38\":1,\"546\":1,\"1056\":1}}],[\"可以使用父类型作为类型标注\",{\"1\":{\"2689\":1,\"2704\":1,\"2719\":1}}],[\"可以使用完整插件模块名或者插件标识符加载\",{\"1\":{\"1824\":1,\"2193\":1,\"2562\":1}}],[\"可以使用依赖注入\",{\"1\":{\"139\":1,\"140\":1,\"647\":1,\"648\":1,\"1157\":1,\"1158\":1}}],[\"可以使用\",{\"1\":{\"10\":1,\"22\":1,\"34\":1,\"90\":1,\"99\":1,\"111\":1,\"433\":1,\"518\":1,\"519\":1,\"536\":1,\"542\":1,\"598\":1,\"607\":1,\"619\":1,\"943\":1,\"1028\":1,\"1029\":1,\"1046\":1,\"1052\":1,\"1108\":1,\"1117\":1,\"1129\":1,\"1458\":1,\"1543\":1,\"1544\":1,\"1561\":1,\"1567\":1}}],[\"可以让事件的处理过程更加的简洁\",{\"1\":{\"6\":1,\"18\":1,\"30\":1}}],[\"可扩展的\",{\"1\":{\"0\":1,\"12\":1,\"24\":1,\"489\":1,\"999\":1,\"1514\":1}}],[\"的非\",{\"1\":{\"2690\":1,\"2705\":1,\"2720\":1}}],[\"的城市有\",{\"1\":{\"2681\":2,\"2696\":2,\"2711\":2}}],[\"的天气\",{\"1\":{\"2680\":2,\"2695\":2,\"2710\":2}}],[\"的天气是什么\",{\"1\":{\"2678\":1,\"2693\":1,\"2708\":1}}],[\"的天气是\",{\"1\":{\"421\":1,\"931\":1,\"1446\":1,\"2680\":2,\"2695\":2,\"2710\":2}}],[\"的启动检查\",{\"1\":{\"2679\":1,\"2694\":1,\"2709\":1}}],[\"的启动流程\",{\"1\":{\"504\":1,\"1014\":1,\"1529\":1}}],[\"的知识\",{\"1\":{\"2676\":1,\"2691\":1,\"2706\":1}}],[\"的匹配行为\",{\"1\":{\"1912\":1,\"2281\":1,\"2650\":1}}],[\"的匹配结果\",{\"1\":{\"1902\":1,\"2271\":1,\"2640\":1}}],[\"的配置项\",{\"1\":{\"1910\":1,\"1913\":1,\"2279\":1,\"2282\":1,\"2648\":1,\"2651\":1}}],[\"的配置项外\",{\"1\":{\"165\":1,\"673\":1,\"1183\":1}}],[\"的值分两种\",{\"1\":{\"1907\":1,\"2276\":1,\"2645\":1}}],[\"的值为特殊值\",{\"1\":{\"1892\":1,\"2261\":1,\"2630\":1}}],[\"的快捷指令\",{\"1\":{\"1901\":1,\"1902\":2,\"2270\":1,\"2271\":2,\"2639\":1,\"2640\":2}}],[\"的第一个参数为快捷指令名称\",{\"1\":{\"1900\":1,\"2269\":1,\"2638\":1}}],[\"的元数据相当于其配置\",{\"1\":{\"1896\":1,\"2265\":1,\"2634\":1}}],[\"的解析参数字典\",{\"1\":{\"1895\":1,\"2264\":1,\"2633\":1}}],[\"的解析值\",{\"1\":{\"1895\":1,\"2264\":1,\"2633\":1}}],[\"的解析结果\",{\"1\":{\"1895\":2,\"2264\":2,\"2633\":2}}],[\"的唯一区别在于\",{\"1\":{\"1893\":1,\"2262\":1,\"2631\":1}}],[\"的名字或别名没有要求必须在前面写上\",{\"1\":{\"1893\":1,\"2262\":1,\"2631\":1}}],[\"的名称\",{\"1\":{\"415\":1,\"925\":1,\"1440\":1}}],[\"的字符串\",{\"1\":{\"1890\":4,\"2259\":4,\"2628\":4}}],[\"的字典将事件响应器存储于内存中\",{\"1\":{\"81\":1,\"589\":1,\"1099\":1}}],[\"的var表面上看需要传入一个\",{\"1\":{\"1890\":1,\"2259\":1,\"2628\":1}}],[\"的作用是用以标记解析出来的参数并存放于\",{\"1\":{\"1889\":1,\"2258\":1,\"2627\":1}}],[\"的组合\",{\"1\":{\"1887\":1,\"2256\":1,\"2625\":1}}],[\"的实例\",{\"1\":{\"1886\":1,\"1890\":1,\"2255\":1,\"2259\":1,\"2624\":1,\"2628\":1}}],[\"的消息段切片\",{\"1\":{\"1605\":1,\"1974\":1,\"2343\":1}}],[\"的消息段第\",{\"1\":{\"1605\":1,\"1974\":1,\"2343\":1}}],[\"的消息段\",{\"1\":{\"1605\":1,\"1974\":1,\"2343\":1}}],[\"的子类\",{\"1\":{\"532\":1,\"1042\":1,\"1557\":1}}],[\"的本质是由若干消息段所组成的序列\",{\"1\":{\"530\":1,\"1040\":1,\"1555\":1}}],[\"的主要作用是用于表达\",{\"1\":{\"530\":1,\"1040\":1,\"1555\":1}}],[\"的事件响应器了\",{\"1\":{\"526\":1,\"1036\":1,\"1551\":1}}],[\"的封装\",{\"1\":{\"520\":1,\"1030\":1,\"1545\":1}}],[\"的文件夹\",{\"1\":{\"513\":1,\"1023\":1,\"1538\":1}}],[\"的文件夹即是一个常规\",{\"1\":{\"512\":1,\"1022\":1,\"1537\":1}}],[\"的文档中\",{\"1\":{\"483\":1,\"993\":1,\"1508\":1}}],[\"的一个模块\",{\"1\":{\"510\":1,\"1020\":1,\"1535\":1}}],[\"的一些工具函数\",{\"1\":{\"397\":1,\"905\":1,\"1420\":1}}],[\"的使用\",{\"1\":{\"503\":1,\"1013\":1,\"1528\":1}}],[\"的使用方法请参考\",{\"1\":{\"100\":1,\"608\":1,\"1118\":1}}],[\"的基本原理和使用方式\",{\"1\":{\"485\":1,\"995\":1,\"1510\":1}}],[\"的用户\",{\"1\":{\"485\":1,\"995\":1,\"1510\":1}}],[\"的方式指定组合参数之间的分隔符\",{\"1\":{\"1902\":1,\"2271\":1,\"2640\":1}}],[\"的方式创建一个机器人项目的最小实例并启动\",{\"1\":{\"504\":1,\"1014\":1,\"1529\":1}}],[\"的方式实现插件加载与跟踪管理\",{\"1\":{\"116\":1,\"624\":1,\"1134\":1}}],[\"的方法\",{\"1\":{\"476\":2,\"986\":2,\"1501\":2,\"1584\":1,\"1585\":1,\"1953\":1,\"1954\":1,\"2334\":1,\"2335\":1}}],[\"的信息也可以在此定义和存储\",{\"1\":{\"475\":1,\"985\":1,\"1500\":1}}],[\"的上层方法\",{\"1\":{\"475\":1,\"985\":1,\"1500\":1}}],[\"的区别\",{\"1\":{\"474\":1,\"984\":1,\"1499\":1}}],[\"的默认配置\",{\"1\":{\"1897\":1,\"2266\":1,\"2635\":1}}],[\"的默认\",{\"1\":{\"466\":1,\"976\":1,\"1491\":1}}],[\"的默认格式和过滤器\",{\"1\":{\"418\":1,\"928\":1,\"1443\":1}}],[\"的相关配置\",{\"1\":{\"456\":1,\"966\":1,\"1481\":1}}],[\"的更多使用方法\",{\"1\":{\"452\":1,\"962\":1,\"1477\":1}}],[\"的更多功能和原理\",{\"1\":{\"430\":1,\"940\":1,\"1455\":1}}],[\"的定时任务并不是由事件响应器所触发的事件\",{\"1\":{\"452\":1,\"962\":1,\"1477\":1}}],[\"的大多数功能用法\",{\"1\":{\"430\":1,\"940\":1,\"1455\":1}}],[\"的密码\",{\"1\":{\"429\":1,\"939\":1,\"1454\":1}}],[\"的抽象方法\",{\"1\":{\"421\":1,\"931\":1,\"1446\":1}}],[\"的执行函数\",{\"1\":{\"407\":1,\"915\":1,\"1430\":1}}],[\"的装饰器\",{\"1\":{\"406\":1,\"914\":1,\"1429\":1}}],[\"的集合\",{\"1\":{\"328\":1,\"346\":1,\"425\":1,\"836\":1,\"854\":1,\"935\":1,\"1351\":1,\"1369\":1,\"1450\":1}}],[\"的类型定义\",{\"1\":{\"328\":1,\"346\":1,\"836\":1,\"854\":1,\"1351\":1,\"1369\":1}}],[\"的类型注解和异步优先特性\",{\"1\":{\"0\":1,\"12\":1,\"24\":1}}],[\"的异常注入参数\",{\"1\":{\"306\":1,\"814\":1,\"1325\":1}}],[\"的异步版本\",{\"1\":{\"70\":1,\"578\":1,\"1088\":1}}],[\"的参数字典中\",{\"1\":{\"1895\":1,\"2264\":1,\"2633\":1}}],[\"的参数\",{\"1\":{\"252\":1,\"253\":1,\"254\":1,\"255\":1,\"256\":1,\"257\":1,\"299\":1,\"300\":1,\"301\":1,\"305\":1,\"306\":1,\"471\":2,\"760\":1,\"761\":1,\"762\":1,\"763\":1,\"764\":1,\"765\":1,\"807\":1,\"808\":1,\"809\":1,\"813\":1,\"814\":1,\"981\":2,\"1273\":1,\"1274\":1,\"1275\":1,\"1276\":1,\"1277\":1,\"1278\":1,\"1320\":1,\"1324\":1,\"1325\":1,\"1326\":1,\"1327\":1,\"1496\":2,\"1891\":1,\"1896\":1,\"2260\":1,\"2265\":1,\"2629\":1,\"2634\":1}}],[\"的参数类型不匹配\",{\"1\":{\"201\":1,\"709\":1,\"1221\":1}}],[\"的日志\",{\"1\":{\"415\":1,\"417\":1,\"925\":1,\"927\":1,\"1440\":1,\"1442\":1}}],[\"的日志转发到\",{\"1\":{\"228\":1,\"736\":1,\"1248\":1}}],[\"的日志记录\",{\"1\":{\"226\":1,\"734\":1,\"1246\":1}}],[\"的命名参数\",{\"1\":{\"225\":1,\"733\":1,\"1245\":1}}],[\"的位置参数\",{\"1\":{\"225\":1,\"733\":1,\"1245\":1}}],[\"的简写\",{\"1\":{\"222\":1,\"730\":1,\"1242\":1}}],[\"的运行\",{\"1\":{\"200\":1,\"708\":1,\"1220\":1}}],[\"的缩写\",{\"1\":{\"166\":1,\"674\":1,\"1184\":1,\"1839\":1,\"2208\":1,\"2577\":1}}],[\"的优先级读取环境信息\",{\"1\":{\"163\":1,\"671\":1,\"1181\":1}}],[\"的连接时运行\",{\"1\":{\"130\":1,\"638\":1,\"1148\":1}}],[\"的详细信息\",{\"1\":{\"120\":1,\"121\":1,\"628\":1,\"629\":1,\"1138\":1,\"1139\":1}}],[\"的路由\",{\"1\":{\"120\":1,\"121\":1,\"628\":1,\"629\":1,\"1138\":1,\"1139\":1}}],[\"的兼容层建立路由规则\",{\"1\":{\"118\":1,\"626\":1,\"1136\":1}}],[\"的插件\",{\"1\":{\"513\":1,\"1023\":1,\"1538\":1}}],[\"的插件系统为用户实现应用提供了极高的便捷性\",{\"1\":{\"499\":1,\"1009\":1,\"1524\":1}}],[\"的插件系统来获取相关信息\",{\"1\":{\"109\":1,\"617\":1,\"1127\":1}}],[\"的插件信息中看到这些子插件的信息\",{\"1\":{\"114\":1,\"622\":1,\"1132\":1}}],[\"的特性\",{\"1\":{\"108\":1,\"616\":1,\"1126\":1}}],[\"的规则\",{\"1\":{\"95\":1,\"96\":1,\"97\":1,\"98\":1,\"603\":1,\"604\":1,\"605\":1,\"606\":1,\"1113\":1,\"1114\":1,\"1115\":1,\"1116\":1}}],[\"的其他参数\",{\"1\":{\"69\":1,\"77\":1,\"577\":1,\"585\":1,\"1087\":1,\"1095\":1,\"1680\":1,\"1771\":1,\"2049\":1,\"2140\":1,\"2418\":1,\"2509\":1}}],[\"的库因此可能无法正常工作\",{\"1\":{\"64\":1,\"572\":1,\"1082\":1}}],[\"的\",{\"1\":{\"40\":1,\"64\":1,\"72\":1,\"222\":3,\"223\":1,\"252\":1,\"253\":1,\"254\":1,\"255\":1,\"256\":1,\"257\":1,\"340\":1,\"341\":1,\"342\":1,\"343\":1,\"367\":2,\"372\":1,\"373\":1,\"413\":1,\"455\":1,\"472\":1,\"473\":1,\"474\":2,\"478\":1,\"482\":1,\"502\":1,\"515\":1,\"518\":1,\"519\":1,\"536\":1,\"548\":1,\"572\":1,\"580\":1,\"730\":3,\"731\":1,\"760\":1,\"761\":1,\"762\":1,\"763\":1,\"764\":1,\"765\":1,\"848\":1,\"849\":1,\"850\":1,\"851\":1,\"875\":2,\"880\":1,\"881\":1,\"923\":1,\"965\":1,\"982\":1,\"983\":1,\"984\":2,\"988\":1,\"992\":1,\"1012\":1,\"1025\":1,\"1028\":1,\"1029\":1,\"1046\":1,\"1058\":1,\"1082\":1,\"1090\":1,\"1242\":3,\"1243\":1,\"1273\":1,\"1274\":1,\"1275\":1,\"1276\":1,\"1277\":1,\"1278\":1,\"1363\":1,\"1364\":1,\"1365\":1,\"1366\":1,\"1390\":2,\"1395\":1,\"1396\":1,\"1438\":1,\"1480\":1,\"1497\":1,\"1498\":1,\"1499\":2,\"1503\":1,\"1507\":1,\"1527\":1,\"1540\":1,\"1543\":1,\"1544\":1,\"1561\":1,\"1903\":1,\"1906\":1,\"2272\":1,\"2275\":1,\"2641\":1,\"2644\":1}}],[\"的核心\",{\"1\":{\"5\":1,\"17\":1,\"29\":1,\"1886\":1,\"2255\":1,\"2624\":1}}],[\"使框架对初学者更加友好\",{\"1\":{\"503\":1,\"1013\":1,\"1528\":1}}],[\"使其更加通俗易懂\",{\"1\":{\"495\":1,\"1005\":1,\"1520\":1}}],[\"使其变为子类型\",{\"1\":{\"421\":1,\"931\":1,\"1446\":1}}],[\"使开发者能够调用平台提供的\",{\"1\":{\"474\":1,\"984\":1,\"1499\":1}}],[\"使它在每次事件响应器运行后执行\",{\"1\":{\"291\":1,\"799\":1,\"1311\":1}}],[\"使它在每次事件响应器运行前执行\",{\"1\":{\"290\":1,\"798\":1,\"1310\":1}}],[\"使它在每次接收到事件并分发给各响应器之后执行\",{\"1\":{\"289\":1,\"797\":1,\"1309\":1}}],[\"使它在每次接收到事件并分发给各响应器之前执行\",{\"1\":{\"288\":1,\"796\":1,\"1308\":1}}],[\"使得解析命令时允许名称与后随参数之间没有分隔\",{\"1\":{\"1903\":1,\"2272\":1,\"2641\":1}}],[\"使得用户能够快速搭建聊天机器人\",{\"1\":{\"503\":1,\"1013\":1,\"1528\":1}}],[\"使得用户初次接触\",{\"1\":{\"4\":1,\"16\":1,\"28\":1}}],[\"使得插件更加清晰\",{\"1\":{\"112\":1,\"620\":1,\"1130\":1}}],[\"使用上有一定难度\",{\"1\":{\"1919\":1,\"2288\":1,\"2657\":1}}],[\"使用基类构建模板与使用\",{\"1\":{\"543\":1,\"1053\":1,\"1568\":1}}],[\"使用消息模板\",{\"0\":{\"543\":1,\"1053\":1,\"1568\":1}}],[\"使用消息序列\",{\"0\":{\"532\":1,\"1042\":1,\"1557\":1}}],[\"使用配置好环境的\",{\"1\":{\"508\":1,\"1018\":1,\"1533\":1}}],[\"使用脚手架\",{\"1\":{\"495\":1,\"1005\":1,\"1520\":1}}],[\"使用其它\",{\"1\":{\"482\":1,\"992\":1,\"1507\":1}}],[\"使用当前工作目录作为数据存储目录\",{\"1\":{\"435\":1,\"945\":1,\"1460\":1}}],[\"使用时无需关心操作系统的差异\",{\"1\":{\"433\":1,\"943\":1,\"1458\":1}}],[\"使用插件\",{\"0\":{\"433\":1,\"444\":1,\"450\":1,\"943\":1,\"954\":1,\"960\":1,\"1458\":1,\"1469\":1,\"1475\":1}}],[\"使用的\",{\"1\":{\"1685\":1,\"1761\":1,\"1776\":1,\"2054\":1,\"2130\":1,\"2145\":1,\"2423\":1,\"2499\":1,\"2514\":1}}],[\"使用的键名\",{\"1\":{\"429\":1,\"939\":1,\"1454\":1}}],[\"使用的事件循环会被\",{\"1\":{\"64\":1,\"572\":1,\"1082\":1}}],[\"使用优秀的\",{\"1\":{\"416\":1,\"926\":1,\"1441\":1}}],[\"使用默认\",{\"1\":{\"361\":1,\"365\":1,\"869\":1,\"873\":1,\"1384\":1,\"1388\":1}}],[\"使用嵌套插件\",{\"1\":{\"113\":1,\"513\":1,\"621\":1,\"1023\":1,\"1131\":1,\"1538\":1}}],[\"使用方法\",{\"1\":{\"109\":1,\"617\":1,\"1127\":1}}],[\"使用方法请阅读本文档指南以及\",{\"1\":{\"4\":1,\"16\":1,\"28\":1}}],[\"使用\",{\"0\":{\"122\":1,\"464\":1,\"630\":1,\"974\":1,\"1140\":1,\"1489\":1},\"1\":{\"64\":1,\"72\":1,\"162\":1,\"226\":1,\"372\":1,\"426\":1,\"451\":1,\"506\":1,\"523\":1,\"543\":1,\"572\":1,\"580\":1,\"670\":1,\"734\":1,\"880\":1,\"936\":1,\"961\":1,\"1016\":1,\"1033\":1,\"1053\":1,\"1082\":1,\"1090\":1,\"1180\":1,\"1246\":1,\"1395\":1,\"1451\":1,\"1476\":1,\"1531\":1,\"1548\":1,\"1568\":1,\"1569\":1,\"1688\":1,\"1779\":1,\"1843\":1,\"1893\":1,\"1938\":1,\"2057\":1,\"2148\":1,\"2212\":1,\"2262\":1,\"2307\":1,\"2426\":1,\"2517\":1,\"2581\":1,\"2631\":1}}],[\"使用适配器\",{\"0\":{\"36\":1,\"544\":1,\"1054\":1},\"1\":{\"495\":1,\"1005\":1,\"1520\":1}}],[\"nullable=false\",{\"1\":{\"2679\":6,\"2694\":6,\"2709\":6}}],[\"null\",{\"1\":{\"2678\":2,\"2679\":2,\"2693\":2,\"2694\":2,\"2708\":2,\"2709\":2}}],[\"number\",{\"1\":{\"1887\":1,\"1890\":2,\"2256\":1,\"2259\":2,\"2625\":1,\"2628\":2}}],[\"np\",{\"1\":{\"1899\":4,\"2268\":4,\"2637\":4}}],[\"np1\",{\"1\":{\"1898\":4,\"2267\":4,\"2636\":4}}],[\"ns\",{\"1\":{\"1898\":2,\"2267\":2,\"2636\":2}}],[\"nepattern\",{\"1\":{\"1887\":2,\"1890\":5,\"2256\":2,\"2259\":5,\"2625\":2,\"2628\":5}}],[\"net\",{\"1\":{\"491\":1,\"1001\":1,\"1516\":1}}],[\"networkerror\",{\"1\":{\"195\":1,\"703\":1,\"1215\":1}}],[\"need\",{\"1\":{\"470\":1,\"471\":1,\"980\":1,\"981\":1,\"1495\":1,\"1496\":1}}],[\"new\",{\"1\":{\"457\":1,\"525\":1,\"967\":1,\"1035\":1,\"1482\":1,\"1550\":1}}],[\"never\",{\"1\":{\"200\":1,\"708\":1,\"1220\":1}}],[\"nested\",{\"1\":{\"163\":1,\"165\":1,\"671\":1,\"673\":1,\"1181\":1,\"1183\":1}}],[\"next\",{\"1\":{\"118\":1,\"181\":1,\"626\":1,\"689\":1,\"1136\":1,\"1199\":1}}],[\"n\",{\"1\":{\"113\":1,\"513\":2,\"621\":1,\"1023\":2,\"1131\":1,\"1538\":2}}],[\"node\",{\"1\":{\"490\":1,\"491\":2,\"1000\":1,\"1001\":2,\"1515\":1,\"1516\":2}}],[\"no\",{\"1\":{\"476\":3,\"986\":3,\"1501\":3}}],[\"noreturn\",{\"1\":{\"253\":1,\"254\":1,\"255\":1,\"256\":1,\"257\":1,\"258\":1,\"761\":1,\"762\":1,\"763\":1,\"764\":1,\"765\":1,\"766\":1,\"1274\":1,\"1275\":1,\"1276\":1,\"1277\":1,\"1278\":1,\"1279\":1}}],[\"nologexception\",{\"1\":{\"195\":1,\"703\":1,\"1215\":1,\"1583\":2,\"1952\":2,\"2333\":2}}],[\"notrequired\",{\"1\":{\"1900\":6,\"2269\":6,\"2638\":6}}],[\"not\",{\"1\":{\"132\":1,\"134\":1,\"137\":1,\"147\":1,\"425\":1,\"437\":2,\"470\":3,\"471\":1,\"640\":1,\"642\":1,\"645\":1,\"655\":1,\"935\":1,\"947\":2,\"980\":3,\"981\":1,\"1150\":1,\"1152\":1,\"1155\":1,\"1165\":1,\"1450\":1,\"1462\":2,\"1495\":3,\"1496\":1,\"1904\":1,\"2273\":1,\"2642\":1,\"2678\":2,\"2679\":2,\"2680\":3,\"2693\":2,\"2694\":2,\"2695\":3,\"2708\":2,\"2709\":2,\"2710\":3,\"2745\":1}}],[\"notimplementederror\",{\"1\":{\"64\":1,\"572\":1,\"1082\":1}}],[\"notice\",{\"1\":{\"42\":1,\"86\":1,\"93\":1,\"139\":3,\"203\":1,\"216\":2,\"341\":2,\"476\":1,\"550\":1,\"594\":1,\"601\":1,\"647\":3,\"711\":1,\"724\":2,\"849\":2,\"986\":1,\"1060\":1,\"1104\":1,\"1111\":1,\"1157\":3,\"1223\":1,\"1236\":2,\"1364\":2,\"1501\":1,\"1802\":2,\"2171\":2,\"2540\":2}}],[\"noneflow\",{\"0\":{\"502\":1,\"1012\":1,\"1527\":1},\"1\":{\"502\":2,\"1012\":2,\"1527\":2}}],[\"nonepress\",{\"0\":{\"501\":1,\"1011\":1,\"1526\":1},\"1\":{\"501\":3,\"1011\":3,\"1526\":3}}],[\"noneblockly\",{\"0\":{\"503\":1,\"1013\":1,\"1528\":1},\"1\":{\"503\":2,\"1013\":2,\"1528\":2}}],[\"nonebug\",{\"0\":{\"485\":1,\"995\":1,\"1510\":1},\"1\":{\"485\":2,\"995\":2,\"1510\":2,\"1933\":1,\"1934\":2,\"1935\":1,\"2302\":1,\"2303\":2,\"2304\":1,\"2671\":1,\"2672\":2,\"2673\":1}}],[\"nonebotconfig\",{\"1\":{\"1681\":1,\"1772\":1,\"2050\":1,\"2141\":1,\"2419\":1,\"2510\":1}}],[\"nonebotexception\",{\"1\":{\"195\":1,\"703\":1,\"1215\":1}}],[\"nonebot\",{\"0\":{\"141\":1,\"162\":1,\"176\":1,\"195\":1,\"215\":1,\"226\":1,\"232\":1,\"287\":1,\"294\":1,\"328\":1,\"346\":1,\"372\":1,\"397\":1,\"481\":1,\"482\":1,\"483\":1,\"484\":1,\"485\":1,\"486\":1,\"487\":1,\"497\":1,\"498\":1,\"499\":1,\"649\":1,\"670\":1,\"684\":1,\"703\":1,\"723\":1,\"734\":1,\"740\":1,\"795\":1,\"802\":1,\"836\":1,\"854\":1,\"880\":1,\"905\":1,\"991\":1,\"992\":1,\"993\":1,\"994\":1,\"995\":1,\"996\":1,\"997\":1,\"1007\":1,\"1008\":1,\"1009\":1,\"1159\":1,\"1180\":1,\"1194\":1,\"1215\":1,\"1235\":1,\"1246\":1,\"1252\":1,\"1307\":1,\"1314\":1,\"1351\":1,\"1369\":1,\"1395\":1,\"1420\":1,\"1506\":1,\"1507\":1,\"1508\":1,\"1509\":1,\"1510\":1,\"1511\":1,\"1512\":1,\"1522\":1,\"1523\":1,\"1524\":1,\"1569\":1,\"1639\":1,\"1647\":1,\"1651\":1,\"1669\":1,\"1697\":1,\"1706\":1,\"1758\":1,\"1764\":1,\"1788\":1,\"1801\":1,\"1808\":1,\"1818\":1,\"1831\":1,\"1851\":1,\"1938\":1,\"2008\":1,\"2016\":1,\"2020\":1,\"2038\":1,\"2066\":1,\"2075\":1,\"2127\":1,\"2133\":1,\"2157\":1,\"2170\":1,\"2177\":1,\"2187\":1,\"2200\":1,\"2220\":1,\"2307\":1,\"2377\":1,\"2385\":1,\"2389\":1,\"2407\":1,\"2435\":1,\"2444\":1,\"2496\":1,\"2502\":1,\"2526\":1,\"2539\":1,\"2546\":1,\"2556\":1,\"2569\":1,\"2589\":1},\"1\":{\"0\":4,\"2\":1,\"3\":1,\"4\":2,\"5\":1,\"6\":1,\"7\":1,\"12\":4,\"14\":1,\"15\":1,\"16\":2,\"17\":1,\"18\":1,\"19\":1,\"24\":4,\"26\":1,\"27\":1,\"28\":2,\"29\":1,\"30\":1,\"31\":1,\"37\":2,\"38\":3,\"39\":6,\"40\":7,\"54\":2,\"55\":2,\"57\":1,\"64\":3,\"72\":3,\"81\":3,\"82\":1,\"83\":1,\"86\":1,\"90\":1,\"93\":2,\"95\":2,\"96\":2,\"97\":2,\"98\":2,\"99\":2,\"100\":3,\"101\":2,\"102\":1,\"103\":2,\"104\":1,\"105\":2,\"106\":2,\"108\":2,\"109\":2,\"110\":4,\"111\":9,\"112\":2,\"114\":3,\"115\":2,\"116\":5,\"117\":3,\"118\":4,\"119\":1,\"120\":2,\"121\":2,\"123\":4,\"124\":2,\"125\":1,\"126\":1,\"127\":2,\"128\":2,\"129\":2,\"130\":2,\"131\":1,\"132\":5,\"133\":2,\"134\":5,\"135\":2,\"136\":2,\"137\":2,\"138\":2,\"140\":2,\"162\":2,\"164\":1,\"165\":2,\"166\":2,\"167\":1,\"168\":1,\"169\":1,\"176\":1,\"195\":2,\"196\":1,\"199\":1,\"200\":1,\"202\":1,\"203\":1,\"205\":1,\"206\":1,\"207\":1,\"209\":1,\"215\":1,\"217\":2,\"218\":3,\"219\":2,\"220\":2,\"221\":2,\"222\":5,\"223\":3,\"224\":4,\"225\":2,\"226\":2,\"227\":2,\"250\":1,\"251\":1,\"287\":1,\"365\":1,\"372\":1,\"397\":1,\"416\":1,\"417\":2,\"418\":8,\"419\":2,\"421\":3,\"422\":4,\"423\":1,\"425\":2,\"426\":1,\"428\":1,\"429\":7,\"430\":2,\"431\":2,\"432\":2,\"433\":4,\"442\":2,\"443\":2,\"447\":1,\"448\":2,\"449\":2,\"450\":2,\"451\":4,\"452\":3,\"455\":1,\"457\":2,\"462\":1,\"463\":5,\"465\":1,\"466\":3,\"468\":4,\"469\":1,\"470\":4,\"471\":2,\"472\":2,\"473\":1,\"474\":2,\"475\":3,\"476\":5,\"477\":3,\"478\":4,\"479\":1,\"480\":2,\"482\":3,\"483\":1,\"485\":4,\"486\":4,\"487\":4,\"492\":2,\"493\":2,\"494\":2,\"495\":3,\"496\":2,\"497\":6,\"498\":6,\"499\":4,\"500\":2,\"501\":2,\"502\":4,\"503\":10,\"504\":1,\"505\":1,\"506\":3,\"507\":9,\"510\":3,\"513\":4,\"514\":4,\"515\":2,\"516\":1,\"517\":1,\"518\":1,\"519\":3,\"520\":2,\"521\":1,\"523\":6,\"524\":1,\"525\":5,\"526\":1,\"527\":2,\"528\":2,\"530\":1,\"531\":1,\"532\":1,\"534\":1,\"536\":1,\"537\":2,\"541\":1,\"543\":6,\"545\":2,\"546\":3,\"547\":6,\"548\":7,\"562\":2,\"563\":2,\"565\":1,\"572\":3,\"580\":3,\"589\":3,\"590\":1,\"591\":1,\"594\":1,\"598\":1,\"601\":2,\"603\":2,\"604\":2,\"605\":2,\"606\":2,\"607\":2,\"608\":3,\"609\":2,\"610\":1,\"611\":2,\"612\":1,\"613\":2,\"614\":2,\"616\":2,\"617\":2,\"618\":4,\"619\":9,\"620\":2,\"622\":3,\"623\":2,\"624\":5,\"625\":3,\"626\":4,\"627\":1,\"628\":2,\"629\":2,\"631\":4,\"632\":2,\"633\":1,\"634\":1,\"635\":2,\"636\":2,\"637\":2,\"638\":2,\"639\":1,\"640\":5,\"641\":2,\"642\":5,\"643\":2,\"644\":2,\"645\":2,\"646\":2,\"648\":2,\"670\":2,\"672\":1,\"673\":2,\"674\":2,\"675\":1,\"676\":1,\"677\":1,\"684\":1,\"703\":2,\"704\":1,\"707\":1,\"708\":1,\"710\":1,\"711\":1,\"713\":1,\"714\":1,\"715\":1,\"717\":1,\"723\":1,\"725\":2,\"726\":3,\"727\":2,\"728\":2,\"729\":2,\"730\":5,\"731\":3,\"732\":4,\"733\":2,\"734\":2,\"735\":2,\"758\":1,\"759\":1,\"795\":1,\"873\":1,\"880\":1,\"905\":1,\"926\":1,\"927\":2,\"928\":8,\"929\":2,\"931\":3,\"932\":4,\"933\":1,\"934\":1,\"935\":2,\"936\":2,\"938\":1,\"939\":7,\"940\":2,\"941\":2,\"942\":2,\"943\":4,\"952\":2,\"953\":2,\"957\":1,\"958\":2,\"959\":2,\"960\":2,\"961\":4,\"962\":3,\"965\":1,\"967\":2,\"972\":1,\"973\":5,\"975\":1,\"976\":3,\"978\":4,\"979\":1,\"980\":4,\"981\":2,\"982\":2,\"983\":1,\"984\":2,\"985\":3,\"986\":5,\"987\":3,\"988\":4,\"989\":1,\"990\":2,\"992\":3,\"993\":1,\"995\":4,\"996\":4,\"997\":4,\"1002\":2,\"1003\":2,\"1004\":2,\"1005\":3,\"1006\":2,\"1007\":6,\"1008\":6,\"1009\":4,\"1010\":2,\"1011\":2,\"1012\":4,\"1013\":10,\"1014\":1,\"1015\":1,\"1016\":3,\"1017\":9,\"1020\":3,\"1023\":4,\"1024\":4,\"1025\":2,\"1026\":1,\"1027\":1,\"1028\":1,\"1029\":3,\"1030\":2,\"1031\":1,\"1033\":6,\"1034\":1,\"1035\":5,\"1036\":1,\"1037\":2,\"1038\":2,\"1040\":1,\"1041\":1,\"1042\":1,\"1044\":1,\"1046\":1,\"1047\":2,\"1051\":1,\"1053\":6,\"1055\":2,\"1056\":3,\"1057\":6,\"1058\":7,\"1072\":2,\"1073\":2,\"1075\":1,\"1082\":3,\"1090\":3,\"1099\":3,\"1100\":1,\"1101\":1,\"1104\":1,\"1108\":1,\"1111\":2,\"1113\":2,\"1114\":2,\"1115\":2,\"1116\":2,\"1117\":2,\"1118\":3,\"1119\":2,\"1120\":1,\"1121\":2,\"1122\":1,\"1123\":2,\"1124\":2,\"1126\":2,\"1127\":2,\"1128\":4,\"1129\":9,\"1130\":2,\"1132\":3,\"1133\":2,\"1134\":5,\"1135\":3,\"1136\":4,\"1137\":1,\"1138\":2,\"1139\":2,\"1141\":4,\"1142\":2,\"1143\":1,\"1144\":1,\"1145\":2,\"1146\":2,\"1147\":2,\"1148\":2,\"1149\":1,\"1150\":5,\"1151\":2,\"1152\":5,\"1153\":2,\"1154\":2,\"1155\":2,\"1156\":2,\"1158\":2,\"1180\":2,\"1182\":1,\"1183\":2,\"1184\":2,\"1185\":1,\"1186\":1,\"1187\":1,\"1194\":1,\"1215\":2,\"1216\":1,\"1219\":1,\"1220\":1,\"1222\":1,\"1223\":1,\"1225\":1,\"1226\":1,\"1227\":1,\"1229\":1,\"1235\":1,\"1237\":2,\"1238\":3,\"1239\":2,\"1240\":2,\"1241\":2,\"1242\":5,\"1243\":3,\"1244\":4,\"1245\":2,\"1246\":2,\"1247\":2,\"1271\":1,\"1272\":1,\"1307\":1,\"1388\":1,\"1395\":1,\"1420\":1,\"1441\":1,\"1442\":2,\"1443\":8,\"1444\":2,\"1446\":3,\"1447\":4,\"1448\":1,\"1449\":1,\"1450\":2,\"1451\":2,\"1453\":1,\"1454\":7,\"1455\":2,\"1456\":2,\"1457\":2,\"1458\":4,\"1467\":2,\"1468\":2,\"1472\":1,\"1473\":2,\"1474\":2,\"1475\":2,\"1476\":4,\"1477\":3,\"1480\":1,\"1482\":2,\"1487\":1,\"1488\":5,\"1490\":1,\"1491\":3,\"1493\":4,\"1494\":1,\"1495\":4,\"1496\":2,\"1497\":2,\"1498\":1,\"1499\":2,\"1500\":3,\"1501\":5,\"1502\":3,\"1503\":4,\"1504\":1,\"1505\":2,\"1507\":3,\"1508\":1,\"1510\":4,\"1511\":4,\"1512\":4,\"1517\":2,\"1518\":2,\"1519\":2,\"1520\":3,\"1521\":2,\"1522\":6,\"1523\":6,\"1524\":4,\"1525\":2,\"1526\":2,\"1527\":4,\"1528\":10,\"1529\":1,\"1530\":1,\"1531\":3,\"1532\":9,\"1535\":3,\"1538\":4,\"1539\":4,\"1540\":2,\"1541\":1,\"1542\":1,\"1543\":1,\"1544\":3,\"1545\":2,\"1546\":1,\"1548\":6,\"1549\":1,\"1550\":5,\"1551\":1,\"1552\":2,\"1553\":2,\"1555\":1,\"1556\":1,\"1557\":1,\"1559\":1,\"1561\":1,\"1562\":2,\"1566\":1,\"1568\":6,\"1574\":1,\"1580\":1,\"1583\":2,\"1593\":1,\"1594\":1,\"1595\":1,\"1801\":1,\"1812\":1,\"1813\":3,\"1814\":1,\"1815\":1,\"1839\":1,\"1843\":1,\"1866\":1,\"1871\":1,\"1883\":1,\"1910\":1,\"1913\":1,\"1919\":4,\"1921\":4,\"1922\":3,\"1924\":4,\"1930\":2,\"1933\":2,\"1934\":7,\"1935\":5,\"1943\":1,\"1949\":1,\"1952\":2,\"1962\":1,\"1963\":1,\"1964\":1,\"2170\":1,\"2181\":1,\"2182\":3,\"2183\":1,\"2184\":1,\"2208\":1,\"2212\":1,\"2235\":1,\"2240\":1,\"2252\":1,\"2279\":1,\"2282\":1,\"2288\":4,\"2290\":4,\"2291\":3,\"2293\":4,\"2299\":2,\"2302\":2,\"2303\":7,\"2304\":5,\"2312\":1,\"2313\":1,\"2314\":1,\"2324\":1,\"2330\":1,\"2333\":2,\"2539\":1,\"2550\":1,\"2551\":3,\"2552\":1,\"2553\":1,\"2577\":1,\"2581\":1,\"2604\":1,\"2609\":1,\"2621\":1,\"2648\":1,\"2651\":1,\"2657\":4,\"2659\":4,\"2660\":3,\"2662\":4,\"2668\":2,\"2671\":2,\"2672\":7,\"2673\":5,\"2676\":1,\"2678\":2,\"2679\":6,\"2680\":11,\"2681\":2,\"2682\":1,\"2684\":3,\"2685\":3,\"2687\":2,\"2688\":2,\"2691\":1,\"2693\":2,\"2694\":6,\"2695\":11,\"2696\":2,\"2697\":1,\"2699\":3,\"2700\":3,\"2702\":2,\"2703\":2,\"2706\":1,\"2708\":2,\"2709\":6,\"2710\":11,\"2711\":2,\"2712\":1,\"2714\":3,\"2715\":3,\"2717\":2,\"2718\":2}}],[\"nonebot2\",{\"0\":{\"493\":1,\"494\":1,\"495\":1,\"1003\":1,\"1004\":1,\"1005\":1,\"1518\":1,\"1519\":1,\"1520\":1},\"1\":{\"0\":1,\"12\":1,\"24\":1,\"436\":3,\"437\":4,\"438\":3,\"461\":1,\"493\":5,\"494\":4,\"495\":9,\"505\":3,\"946\":3,\"947\":4,\"948\":3,\"971\":1,\"1003\":5,\"1004\":4,\"1005\":9,\"1015\":3,\"1461\":3,\"1462\":4,\"1463\":3,\"1486\":1,\"1518\":5,\"1519\":4,\"1520\":9,\"1530\":3,\"1651\":1,\"1669\":1,\"1697\":1,\"1764\":1,\"1788\":1,\"1886\":4,\"2020\":1,\"2038\":1,\"2066\":1,\"2133\":1,\"2157\":1,\"2255\":4,\"2389\":1,\"2407\":1,\"2435\":1,\"2502\":1,\"2526\":1,\"2624\":4}}],[\"none\",{\"0\":{\"57\":1,\"565\":1,\"1075\":1,\"1758\":1,\"2127\":1,\"2496\":1},\"1\":{\"60\":3,\"61\":3,\"62\":3,\"65\":2,\"66\":2,\"67\":2,\"68\":2,\"73\":2,\"74\":2,\"75\":2,\"76\":2,\"91\":1,\"111\":2,\"152\":1,\"158\":3,\"163\":3,\"165\":3,\"170\":1,\"222\":1,\"224\":2,\"225\":1,\"241\":1,\"242\":10,\"243\":1,\"244\":2,\"245\":2,\"248\":1,\"249\":1,\"250\":1,\"251\":2,\"253\":1,\"254\":1,\"255\":1,\"256\":1,\"257\":1,\"259\":2,\"260\":1,\"261\":2,\"262\":2,\"263\":1,\"264\":1,\"265\":2,\"267\":2,\"268\":2,\"271\":2,\"272\":2,\"278\":2,\"281\":1,\"282\":1,\"284\":1,\"292\":3,\"293\":1,\"295\":1,\"296\":1,\"297\":1,\"299\":2,\"300\":2,\"303\":1,\"305\":2,\"306\":1,\"326\":1,\"329\":1,\"330\":1,\"331\":1,\"332\":1,\"335\":2,\"349\":2,\"360\":1,\"361\":1,\"363\":3,\"364\":1,\"365\":1,\"375\":1,\"376\":1,\"378\":1,\"379\":1,\"386\":1,\"390\":1,\"401\":2,\"406\":2,\"407\":1,\"408\":3,\"411\":1,\"426\":3,\"447\":21,\"470\":5,\"471\":1,\"568\":3,\"569\":3,\"570\":3,\"573\":2,\"574\":2,\"575\":2,\"576\":2,\"581\":2,\"582\":2,\"583\":2,\"584\":2,\"599\":1,\"619\":2,\"660\":1,\"666\":3,\"671\":3,\"673\":3,\"678\":1,\"730\":1,\"732\":2,\"733\":1,\"749\":1,\"750\":10,\"751\":1,\"752\":2,\"753\":2,\"756\":1,\"757\":1,\"758\":1,\"759\":2,\"761\":1,\"762\":1,\"763\":1,\"764\":1,\"765\":1,\"767\":2,\"768\":1,\"769\":2,\"770\":2,\"771\":1,\"772\":1,\"773\":2,\"775\":2,\"776\":2,\"779\":2,\"780\":2,\"786\":2,\"789\":1,\"790\":1,\"792\":1,\"800\":3,\"801\":1,\"803\":1,\"804\":1,\"805\":1,\"807\":2,\"808\":2,\"811\":1,\"813\":2,\"814\":1,\"834\":1,\"837\":1,\"838\":1,\"839\":1,\"840\":1,\"843\":2,\"857\":2,\"868\":1,\"869\":1,\"871\":3,\"872\":1,\"873\":1,\"883\":1,\"884\":1,\"886\":1,\"887\":1,\"894\":1,\"898\":1,\"909\":2,\"914\":2,\"915\":1,\"916\":3,\"918\":2,\"921\":1,\"936\":3,\"957\":21,\"980\":5,\"981\":1,\"1078\":3,\"1079\":3,\"1080\":3,\"1083\":2,\"1084\":2,\"1085\":2,\"1086\":2,\"1091\":2,\"1092\":2,\"1093\":2,\"1094\":2,\"1109\":1,\"1129\":2,\"1170\":1,\"1176\":3,\"1181\":3,\"1183\":3,\"1188\":1,\"1242\":1,\"1244\":2,\"1245\":1,\"1262\":1,\"1263\":10,\"1264\":1,\"1265\":2,\"1266\":2,\"1269\":1,\"1270\":1,\"1271\":1,\"1272\":2,\"1274\":1,\"1275\":1,\"1276\":1,\"1277\":1,\"1278\":1,\"1280\":2,\"1281\":1,\"1282\":2,\"1283\":2,\"1284\":1,\"1285\":1,\"1286\":2,\"1288\":2,\"1289\":2,\"1292\":2,\"1293\":2,\"1298\":2,\"1301\":1,\"1302\":1,\"1304\":1,\"1312\":3,\"1313\":1,\"1315\":1,\"1317\":1,\"1318\":1,\"1319\":1,\"1320\":2,\"1323\":1,\"1324\":2,\"1325\":1,\"1326\":2,\"1347\":1,\"1349\":1,\"1352\":1,\"1355\":2,\"1356\":1,\"1357\":1,\"1358\":1,\"1372\":2,\"1383\":1,\"1384\":1,\"1386\":3,\"1387\":1,\"1388\":1,\"1398\":1,\"1399\":1,\"1401\":1,\"1402\":1,\"1409\":1,\"1413\":1,\"1424\":2,\"1429\":2,\"1430\":1,\"1431\":3,\"1433\":2,\"1436\":1,\"1451\":3,\"1472\":21,\"1495\":5,\"1496\":1,\"1594\":1,\"1595\":1,\"1599\":1,\"1609\":1,\"1633\":1,\"1644\":1,\"1645\":1,\"1652\":2,\"1654\":1,\"1655\":1,\"1658\":1,\"1659\":2,\"1666\":1,\"1667\":1,\"1671\":2,\"1672\":2,\"1673\":2,\"1676\":1,\"1678\":1,\"1679\":1,\"1687\":1,\"1688\":3,\"1690\":1,\"1691\":1,\"1695\":1,\"1696\":1,\"1698\":2,\"1700\":1,\"1701\":1,\"1704\":2,\"1713\":1,\"1722\":1,\"1723\":4,\"1724\":3,\"1725\":3,\"1726\":1,\"1728\":2,\"1729\":1,\"1733\":1,\"1734\":1,\"1737\":1,\"1738\":1,\"1742\":1,\"1743\":1,\"1744\":1,\"1753\":2,\"1756\":1,\"1758\":1,\"1759\":1,\"1760\":1,\"1761\":1,\"1762\":1,\"1763\":1,\"1767\":1,\"1769\":1,\"1770\":1,\"1778\":1,\"1779\":3,\"1791\":1,\"1798\":1,\"1799\":1,\"1803\":1,\"1804\":1,\"1809\":1,\"1814\":1,\"1817\":1,\"1819\":2,\"1824\":1,\"1827\":2,\"1829\":1,\"1830\":1,\"1836\":1,\"1837\":1,\"1838\":1,\"1839\":2,\"1841\":1,\"1848\":1,\"1852\":1,\"1853\":1,\"1854\":1,\"1855\":1,\"1856\":5,\"1857\":5,\"1858\":5,\"1859\":5,\"1860\":5,\"1861\":5,\"1862\":5,\"1863\":5,\"1864\":5,\"1865\":7,\"1866\":7,\"1867\":5,\"1868\":5,\"1869\":5,\"1870\":7,\"1871\":7,\"1872\":5,\"1873\":5,\"1874\":5,\"1875\":5,\"1876\":5,\"1877\":5,\"1878\":5,\"1879\":5,\"1880\":5,\"1881\":5,\"1882\":7,\"1883\":7,\"1884\":5,\"1885\":5,\"1890\":1,\"1892\":1,\"1896\":1,\"1906\":2,\"1915\":2,\"1963\":1,\"1964\":1,\"1968\":1,\"1978\":1,\"2002\":1,\"2013\":1,\"2014\":1,\"2021\":2,\"2023\":1,\"2024\":1,\"2027\":1,\"2028\":2,\"2035\":1,\"2036\":1,\"2040\":2,\"2041\":2,\"2042\":2,\"2045\":1,\"2047\":1,\"2048\":1,\"2056\":1,\"2057\":3,\"2059\":1,\"2060\":1,\"2064\":1,\"2065\":1,\"2067\":2,\"2069\":1,\"2070\":1,\"2073\":2,\"2082\":1,\"2091\":1,\"2092\":4,\"2093\":3,\"2094\":3,\"2095\":1,\"2097\":2,\"2098\":1,\"2102\":1,\"2103\":1,\"2106\":1,\"2107\":1,\"2111\":1,\"2112\":1,\"2113\":1,\"2122\":2,\"2125\":1,\"2127\":1,\"2128\":1,\"2129\":1,\"2130\":1,\"2131\":1,\"2132\":1,\"2136\":1,\"2138\":1,\"2139\":1,\"2147\":1,\"2148\":3,\"2160\":1,\"2167\":1,\"2168\":1,\"2172\":1,\"2173\":1,\"2178\":1,\"2183\":1,\"2186\":1,\"2188\":2,\"2193\":1,\"2196\":2,\"2198\":1,\"2199\":1,\"2205\":1,\"2206\":1,\"2207\":1,\"2208\":2,\"2210\":1,\"2217\":1,\"2221\":1,\"2222\":1,\"2223\":1,\"2224\":1,\"2225\":5,\"2226\":5,\"2227\":5,\"2228\":5,\"2229\":5,\"2230\":5,\"2231\":5,\"2232\":5,\"2233\":5,\"2234\":7,\"2235\":7,\"2236\":5,\"2237\":5,\"2238\":5,\"2239\":7,\"2240\":7,\"2241\":5,\"2242\":5,\"2243\":5,\"2244\":5,\"2245\":5,\"2246\":5,\"2247\":5,\"2248\":5,\"2249\":5,\"2250\":5,\"2251\":7,\"2252\":7,\"2253\":5,\"2254\":5,\"2259\":1,\"2261\":1,\"2265\":1,\"2275\":2,\"2284\":2,\"2313\":1,\"2314\":1,\"2318\":1,\"2347\":1,\"2371\":1,\"2382\":1,\"2383\":1,\"2390\":2,\"2392\":1,\"2393\":1,\"2396\":1,\"2397\":2,\"2404\":1,\"2405\":1,\"2409\":2,\"2410\":2,\"2411\":2,\"2414\":1,\"2416\":1,\"2417\":1,\"2425\":1,\"2426\":3,\"2428\":1,\"2429\":1,\"2433\":1,\"2434\":1,\"2436\":2,\"2438\":1,\"2439\":1,\"2442\":2,\"2448\":1,\"2449\":1,\"2451\":1,\"2452\":4,\"2453\":3,\"2454\":3,\"2455\":1,\"2461\":1,\"2473\":2,\"2478\":2,\"2479\":1,\"2484\":1,\"2485\":1,\"2489\":1,\"2490\":1,\"2491\":1,\"2493\":1,\"2496\":1,\"2497\":1,\"2498\":1,\"2499\":1,\"2500\":1,\"2501\":1,\"2505\":1,\"2507\":1,\"2508\":1,\"2516\":1,\"2517\":3,\"2529\":1,\"2536\":1,\"2537\":1,\"2541\":1,\"2542\":1,\"2547\":1,\"2552\":1,\"2555\":1,\"2557\":2,\"2562\":1,\"2565\":2,\"2567\":1,\"2568\":1,\"2574\":1,\"2575\":1,\"2576\":1,\"2577\":2,\"2579\":1,\"2586\":1,\"2590\":1,\"2591\":1,\"2592\":1,\"2593\":1,\"2594\":5,\"2595\":5,\"2596\":5,\"2597\":5,\"2598\":5,\"2599\":5,\"2600\":5,\"2601\":5,\"2602\":5,\"2603\":7,\"2604\":7,\"2605\":5,\"2606\":5,\"2607\":5,\"2608\":7,\"2609\":7,\"2610\":5,\"2611\":5,\"2612\":5,\"2613\":5,\"2614\":5,\"2615\":5,\"2616\":5,\"2617\":5,\"2618\":5,\"2619\":5,\"2620\":7,\"2621\":7,\"2622\":5,\"2623\":5,\"2628\":1,\"2630\":1,\"2634\":1,\"2644\":2,\"2653\":2,\"2679\":7,\"2687\":1,\"2689\":4,\"2694\":7,\"2702\":1,\"2704\":4,\"2709\":7,\"2717\":1,\"2719\":4}}],[\"namespace=config\",{\"1\":{\"1898\":1,\"2267\":1,\"2636\":1}}],[\"namespace=ns\",{\"1\":{\"1898\":1,\"2267\":1,\"2636\":1}}],[\"namespace=none\",{\"1\":{\"363\":1,\"871\":1,\"1386\":1}}],[\"namespaces\",{\"1\":{\"1898\":2,\"2267\":2,\"2636\":2}}],[\"namespace\",{\"1\":{\"363\":7,\"871\":7,\"1386\":7,\"1898\":4,\"1899\":7,\"1906\":2,\"2267\":4,\"2268\":7,\"2275\":2,\"2636\":4,\"2637\":7,\"2644\":2}}],[\"names\",{\"1\":{\"111\":3,\"216\":2,\"619\":3,\"724\":2,\"1129\":3,\"1236\":2,\"1817\":1,\"2186\":1,\"2555\":1}}],[\"name=op\",{\"1\":{\"2679\":2,\"2694\":2,\"2709\":2}}],[\"name=\",{\"1\":{\"110\":1,\"120\":1,\"121\":1,\"543\":1,\"618\":1,\"628\":1,\"629\":1,\"1053\":1,\"1128\":1,\"1138\":1,\"1139\":1,\"1568\":1,\"1906\":3,\"2275\":3,\"2644\":3}}],[\"name\",{\"1\":{\"39\":1,\"43\":2,\"111\":3,\"120\":1,\"121\":1,\"149\":1,\"152\":1,\"208\":1,\"216\":2,\"218\":4,\"224\":1,\"227\":1,\"297\":1,\"415\":1,\"418\":2,\"433\":4,\"447\":1,\"463\":4,\"466\":1,\"468\":2,\"470\":1,\"471\":3,\"475\":1,\"476\":2,\"478\":1,\"507\":1,\"543\":2,\"547\":1,\"551\":2,\"619\":3,\"628\":1,\"629\":1,\"657\":1,\"660\":1,\"716\":1,\"724\":2,\"726\":4,\"732\":1,\"735\":1,\"805\":1,\"925\":1,\"928\":2,\"943\":4,\"957\":1,\"973\":4,\"976\":1,\"978\":2,\"980\":1,\"981\":3,\"985\":1,\"986\":2,\"988\":1,\"1017\":1,\"1053\":2,\"1057\":1,\"1061\":2,\"1129\":3,\"1138\":1,\"1139\":1,\"1167\":1,\"1170\":1,\"1228\":1,\"1236\":2,\"1238\":4,\"1244\":1,\"1247\":1,\"1323\":1,\"1440\":1,\"1443\":2,\"1458\":4,\"1472\":1,\"1488\":4,\"1491\":1,\"1493\":2,\"1495\":1,\"1496\":3,\"1500\":1,\"1501\":2,\"1503\":1,\"1532\":1,\"1568\":2,\"1633\":1,\"1637\":1,\"1722\":1,\"1723\":1,\"1724\":1,\"1804\":2,\"1814\":1,\"1816\":1,\"1824\":1,\"1887\":1,\"1891\":1,\"1893\":1,\"1897\":2,\"1898\":1,\"1899\":1,\"2002\":1,\"2006\":1,\"2091\":1,\"2092\":1,\"2093\":1,\"2173\":2,\"2183\":1,\"2185\":1,\"2193\":1,\"2256\":1,\"2260\":1,\"2262\":1,\"2266\":2,\"2267\":1,\"2268\":1,\"2371\":1,\"2375\":1,\"2451\":1,\"2452\":1,\"2453\":1,\"2542\":2,\"2552\":1,\"2554\":1,\"2562\":1,\"2625\":1,\"2629\":1,\"2631\":1,\"2635\":2,\"2636\":1,\"2637\":1,\"2679\":4,\"2690\":8,\"2694\":4,\"2705\":8,\"2709\":4,\"2720\":8}}],[\"nb\",{\"0\":{\"464\":1,\"974\":1,\"1489\":1},\"1\":{\"4\":1,\"16\":1,\"28\":1,\"64\":2,\"72\":2,\"113\":3,\"432\":1,\"433\":2,\"443\":1,\"449\":1,\"464\":1,\"493\":5,\"497\":2,\"499\":1,\"503\":2,\"504\":3,\"507\":2,\"508\":3,\"513\":3,\"514\":2,\"572\":2,\"580\":2,\"621\":3,\"942\":1,\"943\":2,\"953\":1,\"959\":1,\"974\":1,\"1003\":5,\"1007\":2,\"1009\":1,\"1013\":2,\"1014\":3,\"1017\":2,\"1018\":4,\"1023\":3,\"1024\":2,\"1082\":2,\"1090\":2,\"1131\":3,\"1457\":1,\"1458\":2,\"1468\":1,\"1474\":1,\"1489\":1,\"1518\":5,\"1522\":2,\"1524\":1,\"1528\":2,\"1529\":3,\"1532\":2,\"1533\":4,\"1538\":3,\"1539\":2,\"1651\":1,\"1669\":1,\"1697\":1,\"1764\":1,\"1788\":1,\"1921\":6,\"1922\":4,\"1924\":1,\"1925\":2,\"1926\":2,\"1927\":1,\"2020\":1,\"2038\":1,\"2066\":1,\"2133\":1,\"2157\":1,\"2290\":6,\"2291\":4,\"2293\":1,\"2294\":2,\"2295\":2,\"2296\":1,\"2389\":1,\"2407\":1,\"2435\":1,\"2502\":1,\"2526\":1,\"2659\":6,\"2660\":4,\"2662\":1,\"2663\":2,\"2664\":2,\"2665\":1,\"2679\":3,\"2690\":2,\"2694\":3,\"2705\":2,\"2709\":3,\"2720\":2}}],[\"编程语言\",{\"1\":{\"490\":1,\"1000\":1,\"1515\":1}}],[\"编程语言及\",{\"1\":{\"482\":1,\"483\":1,\"485\":1,\"486\":1,\"487\":1,\"992\":1,\"993\":1,\"995\":1,\"996\":1,\"997\":1,\"1507\":1,\"1508\":1,\"1510\":1,\"1511\":1,\"1512\":1}}],[\"编辑器推荐配置\",{\"0\":{\"9\":1,\"21\":1,\"33\":1}}],[\"编辑器支持\",{\"0\":{\"8\":1,\"20\":1,\"32\":1},\"1\":{\"3\":1,\"15\":1,\"27\":1}}],[\"编写跨平台插件\",{\"1\":{\"503\":1,\"1013\":1,\"1528\":1}}],[\"编写而成\",{\"1\":{\"502\":1,\"1012\":1,\"1527\":1}}],[\"编写相应的用户使用文档\",{\"1\":{\"499\":1,\"1009\":1,\"1524\":1}}],[\"编写飞书适配器并能够使用\",{\"1\":{\"487\":1,\"997\":1,\"1512\":1}}],[\"编写一个飞书适配器来支持飞书机器人的开发\",{\"1\":{\"487\":1,\"997\":1,\"1512\":1}}],[\"编写一个\",{\"1\":{\"486\":1,\"490\":1,\"996\":1,\"1000\":1,\"1511\":1,\"1515\":1}}],[\"编写一个自定义的存储提供者\",{\"1\":{\"82\":1,\"590\":1,\"1100\":1}}],[\"编写详细的使用文档\",{\"1\":{\"485\":1,\"490\":1,\"491\":1,\"995\":1,\"1000\":1,\"1001\":1,\"1510\":1,\"1515\":1,\"1516\":1}}],[\"编写或应用开源工具自动生成\",{\"1\":{\"483\":1,\"993\":1,\"1508\":1}}],[\"编写各种不同的事件\",{\"1\":{\"476\":1,\"986\":1,\"1501\":1}}],[\"编写适配器\",{\"0\":{\"462\":1,\"972\":1,\"1487\":1}}],[\"编写定时任务更像是编写普通的函数\",{\"1\":{\"452\":1,\"962\":1,\"1477\":1}}],[\"编写存储提供者\",{\"0\":{\"82\":1,\"590\":1,\"1100\":1}}],[\"编写\",{\"1\":{\"2\":1,\"14\":1,\"26\":1,\"486\":1,\"491\":1,\"996\":1,\"1001\":1,\"1511\":1,\"1516\":1}}],[\"杜绝在编辑器中\",{\"1\":{\"3\":1,\"15\":1,\"27\":1}}],[\"能较好的支持\",{\"1\":{\"499\":1,\"1009\":1,\"1524\":1}}],[\"能够正确解析插件间的依赖关系\",{\"1\":{\"510\":1,\"1020\":1,\"1535\":1}}],[\"能够基于\",{\"1\":{\"503\":1,\"1013\":1,\"1528\":1}}],[\"能够自动化的完成许多复杂流程的处理\",{\"1\":{\"502\":1,\"1012\":1,\"1527\":1}}],[\"能够提升页面渲染性能与\",{\"1\":{\"501\":1,\"1011\":1,\"1526\":1}}],[\"能够根据用户\",{\"1\":{\"490\":1,\"1000\":1,\"1515\":1}}],[\"能够为你的需求实现提供便捷灵活的支持\",{\"1\":{\"0\":1,\"12\":1,\"24\":1}}],[\"能将绝大多数的\",{\"1\":{\"3\":1,\"15\":1,\"27\":1}}],[\"等库类似的方法进行使用\",{\"1\":{\"1934\":1,\"2303\":1,\"2672\":1}}],[\"等处理的\",{\"1\":{\"1912\":1,\"2281\":1,\"2650\":1}}],[\"等框架\",{\"1\":{\"501\":1,\"1011\":1,\"1526\":1}}],[\"等迁移工具\",{\"1\":{\"499\":1,\"1009\":1,\"1524\":1}}],[\"等主流语言\",{\"1\":{\"491\":1,\"1001\":1,\"1516\":1}}],[\"等接口\",{\"1\":{\"490\":1,\"491\":1,\"1000\":1,\"1001\":1,\"1515\":1,\"1516\":1}}],[\"等官方接口\",{\"1\":{\"486\":1,\"487\":1,\"996\":1,\"997\":1,\"1511\":1,\"1512\":1}}],[\"等文档生成工具更佳\",{\"1\":{\"483\":1,\"486\":1,\"487\":1,\"993\":1,\"996\":1,\"997\":1,\"1508\":1,\"1511\":1,\"1512\":1}}],[\"等方法\",{\"1\":{\"476\":1,\"986\":1,\"1501\":1}}],[\"等方法一次性加载所有插件\",{\"1\":{\"116\":1,\"624\":1,\"1134\":1}}],[\"等方式\",{\"1\":{\"472\":1,\"982\":1,\"1497\":1}}],[\"等操作系统\",{\"1\":{\"433\":1,\"943\":1,\"1458\":1}}],[\"等价于\",{\"1\":{\"333\":1,\"347\":1,\"841\":1,\"855\":1,\"1353\":1,\"1370\":1,\"2684\":1,\"2685\":1,\"2687\":1,\"2689\":12,\"2699\":1,\"2700\":1,\"2702\":1,\"2704\":12,\"2714\":1,\"2715\":1,\"2717\":1,\"2719\":12}}],[\"等函数参数\",{\"1\":{\"298\":1,\"806\":1,\"1316\":1}}],[\"等级\",{\"1\":{\"227\":1,\"735\":1,\"1247\":1}}],[\"等待用户回复的超时时间\",{\"1\":{\"175\":1,\"683\":1,\"1193\":1}}],[\"等组成\",{\"1\":{\"140\":1,\"648\":1,\"1158\":1}}],[\"等依赖注入函数\",{\"1\":{\"108\":1,\"616\":1,\"1126\":1}}],[\"等规范进行开发并且拥有完整类型注解\",{\"1\":{\"8\":1,\"20\":1,\"32\":1}}],[\"等\",{\"1\":{\"3\":1,\"15\":1,\"27\":1,\"53\":2,\"81\":1,\"139\":1,\"465\":1,\"483\":1,\"490\":1,\"491\":1,\"495\":1,\"497\":1,\"499\":1,\"502\":1,\"561\":2,\"589\":1,\"647\":1,\"975\":1,\"993\":1,\"1000\":1,\"1001\":1,\"1005\":1,\"1007\":1,\"1009\":1,\"1012\":1,\"1071\":2,\"1099\":1,\"1157\":1,\"1490\":1,\"1508\":1,\"1515\":1,\"1516\":1,\"1520\":1,\"1522\":1,\"1524\":1,\"1527\":1,\"1589\":1,\"1958\":1,\"2308\":1}}],[\"push\",{\"1\":{\"2690\":2,\"2705\":2,\"2720\":2}}],[\"pull\",{\"1\":{\"11\":1,\"23\":1,\"35\":1,\"502\":1,\"1012\":1,\"1527\":1}}],[\"pk\",{\"1\":{\"2678\":1,\"2679\":3,\"2693\":1,\"2694\":3,\"2708\":1,\"2709\":3}}],[\"pp\",{\"1\":{\"1903\":2,\"2272\":2,\"2641\":2}}],[\"p<xxx>\",{\"1\":{\"1902\":1,\"2271\":1,\"2640\":1}}],[\"php\",{\"1\":{\"491\":1,\"1001\":1,\"1516\":1}}],[\"pipx\",{\"1\":{\"2690\":2,\"2705\":2,\"2720\":2}}],[\"pip\",{\"1\":{\"505\":2,\"1015\":2,\"1530\":2,\"1651\":1,\"1669\":1,\"1697\":1,\"1764\":1,\"1788\":1,\"1809\":1,\"1886\":4,\"1890\":1,\"1898\":2,\"1906\":3,\"1921\":1,\"2020\":1,\"2038\":1,\"2066\":1,\"2133\":1,\"2157\":1,\"2178\":1,\"2255\":4,\"2259\":1,\"2267\":2,\"2275\":3,\"2290\":1,\"2389\":1,\"2407\":1,\"2435\":1,\"2502\":1,\"2526\":1,\"2547\":1,\"2624\":4,\"2628\":1,\"2636\":2,\"2644\":3,\"2659\":1,\"2690\":2,\"2705\":2,\"2720\":2}}],[\"pii\",{\"1\":{\"447\":1,\"957\":1,\"1472\":1}}],[\"ping\",{\"1\":{\"97\":3,\"605\":3,\"1115\":3}}],[\"p\",{\"1\":{\"175\":1,\"406\":2,\"683\":1,\"914\":2,\"1193\":1,\"1429\":2,\"1789\":2,\"1887\":2,\"2158\":2,\"2256\":2,\"2527\":2,\"2625\":2}}],[\"please\",{\"1\":{\"2679\":5,\"2694\":5,\"2709\":5}}],[\"pluginmanager\",{\"1\":{\"1828\":1,\"1846\":1,\"2197\":1,\"2215\":1,\"2566\":1,\"2584\":1}}],[\"pluginmetadata\",{\"1\":{\"110\":4,\"618\":4,\"1128\":4,\"1802\":2,\"2171\":2,\"2540\":2}}],[\"plugins\",{\"1\":{\"110\":1,\"111\":4,\"113\":1,\"114\":4,\"216\":8,\"507\":3,\"511\":1,\"512\":1,\"513\":12,\"515\":1,\"516\":4,\"517\":2,\"518\":5,\"519\":5,\"521\":1,\"618\":1,\"619\":4,\"621\":1,\"622\":4,\"724\":8,\"1017\":3,\"1021\":1,\"1022\":1,\"1023\":12,\"1025\":1,\"1026\":4,\"1027\":2,\"1028\":5,\"1029\":5,\"1031\":1,\"1128\":1,\"1129\":4,\"1131\":1,\"1132\":4,\"1236\":8,\"1532\":3,\"1536\":1,\"1537\":1,\"1538\":12,\"1540\":1,\"1541\":4,\"1542\":2,\"1543\":5,\"1544\":5,\"1546\":1,\"1802\":6,\"1803\":1,\"1812\":3,\"1813\":2,\"1815\":1,\"1819\":1,\"2171\":6,\"2172\":1,\"2181\":3,\"2182\":2,\"2184\":1,\"2188\":1,\"2540\":6,\"2541\":1,\"2550\":3,\"2551\":2,\"2553\":1,\"2557\":1}}],[\"plugin\",{\"0\":{\"439\":1,\"440\":1,\"441\":1,\"949\":1,\"950\":1,\"951\":1,\"1464\":1,\"1465\":1,\"1466\":1,\"1801\":1,\"1808\":1,\"1818\":1,\"1831\":1,\"1851\":1,\"2170\":1,\"2177\":1,\"2187\":1,\"2200\":1,\"2220\":1,\"2539\":1,\"2546\":1,\"2556\":1,\"2569\":1,\"2589\":1},\"1\":{\"108\":2,\"110\":3,\"111\":12,\"113\":3,\"216\":12,\"242\":2,\"424\":5,\"425\":2,\"426\":4,\"431\":1,\"432\":3,\"433\":10,\"439\":3,\"440\":3,\"441\":3,\"442\":1,\"443\":3,\"448\":1,\"449\":3,\"450\":1,\"451\":3,\"452\":2,\"468\":2,\"470\":2,\"471\":2,\"494\":1,\"497\":1,\"499\":1,\"507\":2,\"513\":3,\"515\":4,\"517\":1,\"518\":4,\"519\":4,\"520\":2,\"523\":2,\"616\":2,\"618\":3,\"619\":12,\"621\":3,\"724\":12,\"750\":2,\"934\":6,\"935\":2,\"936\":5,\"941\":1,\"942\":3,\"943\":10,\"949\":3,\"950\":3,\"951\":3,\"952\":1,\"953\":3,\"958\":1,\"959\":3,\"960\":1,\"961\":3,\"962\":2,\"978\":2,\"980\":2,\"981\":2,\"1004\":1,\"1007\":1,\"1009\":1,\"1017\":2,\"1023\":3,\"1025\":4,\"1027\":1,\"1028\":4,\"1029\":4,\"1030\":2,\"1033\":2,\"1126\":2,\"1128\":3,\"1129\":12,\"1131\":3,\"1236\":12,\"1263\":2,\"1449\":6,\"1450\":2,\"1451\":5,\"1456\":1,\"1457\":3,\"1458\":10,\"1464\":3,\"1465\":3,\"1466\":3,\"1467\":1,\"1468\":3,\"1473\":1,\"1474\":3,\"1475\":1,\"1476\":3,\"1477\":2,\"1493\":2,\"1495\":2,\"1496\":2,\"1519\":1,\"1522\":1,\"1524\":1,\"1532\":2,\"1538\":3,\"1540\":4,\"1542\":1,\"1543\":4,\"1544\":4,\"1545\":2,\"1548\":2,\"1802\":4,\"1803\":3,\"1804\":2,\"1805\":1,\"1809\":3,\"1810\":2,\"1811\":2,\"1812\":4,\"1813\":4,\"1814\":1,\"1815\":1,\"1824\":1,\"1825\":1,\"1848\":1,\"1849\":1,\"1853\":1,\"1919\":4,\"1921\":5,\"1922\":4,\"1924\":4,\"1930\":2,\"2171\":4,\"2172\":3,\"2173\":2,\"2174\":1,\"2178\":3,\"2179\":2,\"2180\":2,\"2181\":4,\"2182\":4,\"2183\":1,\"2184\":1,\"2193\":1,\"2194\":1,\"2217\":1,\"2218\":1,\"2222\":1,\"2288\":4,\"2290\":5,\"2291\":4,\"2293\":4,\"2299\":2,\"2540\":4,\"2541\":3,\"2542\":2,\"2543\":1,\"2547\":3,\"2548\":2,\"2549\":2,\"2550\":4,\"2551\":4,\"2552\":1,\"2553\":1,\"2562\":1,\"2563\":1,\"2586\":1,\"2587\":1,\"2591\":1,\"2657\":4,\"2659\":5,\"2660\":4,\"2662\":4,\"2668\":2,\"2676\":1,\"2678\":2,\"2679\":3,\"2680\":2,\"2681\":1,\"2682\":1,\"2684\":1,\"2685\":1,\"2687\":1,\"2688\":1,\"2691\":1,\"2693\":2,\"2694\":3,\"2695\":2,\"2696\":1,\"2697\":1,\"2699\":1,\"2700\":1,\"2702\":1,\"2703\":1,\"2706\":1,\"2708\":2,\"2709\":3,\"2710\":2,\"2711\":1,\"2712\":1,\"2714\":1,\"2715\":1,\"2717\":1,\"2718\":1}}],[\"placeholder\",{\"1\":{\"1902\":1,\"2271\":1,\"2640\":1}}],[\"plain\",{\"1\":{\"530\":1,\"537\":2,\"1040\":1,\"1047\":2,\"1555\":1,\"1562\":2,\"1587\":1,\"1956\":1,\"2337\":1,\"2680\":3,\"2681\":6,\"2695\":3,\"2696\":6,\"2710\":3,\"2711\":6}}],[\"plaintext\",{\"1\":{\"49\":1,\"298\":1,\"367\":1,\"557\":1,\"806\":1,\"875\":1,\"1067\":1,\"1316\":1,\"1390\":1}}],[\"platform\",{\"1\":{\"470\":3,\"474\":4,\"475\":1,\"980\":3,\"984\":4,\"985\":1,\"1495\":3,\"1499\":4,\"1500\":1}}],[\"playwright\",{\"1\":{\"64\":1,\"572\":1,\"1082\":1}}],[\"position\",{\"1\":{\"2721\":1,\"2722\":1,\"2723\":1,\"2724\":1,\"2725\":1,\"2726\":1,\"2727\":1,\"2728\":1,\"2729\":1,\"2730\":1,\"2731\":1,\"2732\":1,\"2733\":1,\"2734\":1,\"2735\":1,\"2736\":1,\"2737\":1,\"2738\":1,\"2739\":1,\"2740\":1,\"2741\":1,\"2742\":1,\"2743\":1,\"2744\":1}}],[\"postgres\",{\"1\":{\"2690\":20,\"2705\":20,\"2720\":20}}],[\"postgresql+psycopg\",{\"1\":{\"1930\":1,\"2299\":1,\"2668\":1,\"2690\":2,\"2705\":2,\"2720\":2}}],[\"postgresql\",{\"1\":{\"1930\":1,\"2299\":1,\"2668\":1,\"2690\":6,\"2705\":6,\"2720\":6}}],[\"postcss\",{\"1\":{\"501\":1,\"1011\":1,\"1526\":1}}],[\"post\",{\"1\":{\"471\":2,\"981\":2,\"1496\":2,\"1934\":2,\"2303\":2,\"2672\":2}}],[\"postprocessor\",{\"1\":{\"133\":2,\"135\":2,\"641\":2,\"643\":2,\"1151\":2,\"1153\":2}}],[\"pool\",{\"1\":{\"1931\":3,\"1932\":1,\"2300\":3,\"2301\":1,\"2669\":3,\"2670\":1}}],[\"ports\",{\"1\":{\"2690\":4,\"2705\":4,\"2720\":4}}],[\"port\",{\"1\":{\"1688\":1,\"1779\":1,\"1929\":1,\"2057\":1,\"2148\":1,\"2298\":1,\"2426\":1,\"2517\":1,\"2667\":1}}],[\"port=8080\",{\"1\":{\"225\":1,\"506\":1,\"733\":1,\"1016\":1,\"1245\":1,\"1531\":1}}],[\"pong\",{\"1\":{\"97\":3,\"605\":3,\"1115\":3}}],[\"popular\",{\"1\":{\"70\":1,\"578\":1,\"1088\":1}}],[\"practice\",{\"0\":{\"2749\":1,\"2756\":1,\"2763\":1}}],[\"pr\",{\"1\":{\"502\":1,\"1012\":1,\"1527\":1}}],[\"pre\",{\"1\":{\"1641\":1,\"2010\":1,\"2379\":1}}],[\"preprocessor\",{\"1\":{\"132\":2,\"134\":2,\"199\":1,\"640\":2,\"642\":2,\"707\":1,\"1150\":2,\"1152\":2,\"1219\":1}}],[\"prefixes=\",{\"1\":{\"1898\":1,\"1899\":1,\"2267\":1,\"2268\":1,\"2636\":1,\"2637\":1}}],[\"prefixes\",{\"1\":{\"1897\":1,\"1898\":1,\"1899\":2,\"2266\":1,\"2267\":1,\"2268\":2,\"2635\":1,\"2636\":1,\"2637\":2}}],[\"prefix\",{\"1\":{\"105\":2,\"182\":1,\"411\":1,\"613\":2,\"690\":1,\"921\":1,\"1123\":2,\"1202\":1,\"1436\":1,\"1869\":1,\"1887\":1,\"1900\":1,\"2238\":1,\"2256\":1,\"2269\":1,\"2607\":1,\"2625\":1,\"2638\":1}}],[\"primarykeyconstraint\",{\"1\":{\"2679\":2,\"2694\":2,\"2709\":2}}],[\"primary\",{\"1\":{\"2678\":3,\"2679\":2,\"2681\":1,\"2684\":1,\"2685\":1,\"2687\":1,\"2693\":3,\"2694\":2,\"2696\":1,\"2699\":1,\"2700\":1,\"2702\":1,\"2708\":3,\"2709\":2,\"2711\":1,\"2714\":1,\"2715\":1,\"2717\":1}}],[\"private\",{\"1\":{\"422\":1,\"932\":1,\"1447\":1,\"1632\":1,\"2001\":1,\"2370\":1}}],[\"privatemessageevent\",{\"1\":{\"103\":2,\"422\":2,\"611\":2,\"932\":2,\"1121\":2,\"1447\":2}}],[\"print\",{\"1\":{\"416\":1,\"532\":1,\"926\":1,\"1042\":1,\"1441\":1,\"1557\":1,\"1886\":2,\"1902\":3,\"1903\":2,\"1906\":2,\"2255\":2,\"2271\":3,\"2272\":2,\"2275\":2,\"2624\":2,\"2640\":3,\"2641\":2,\"2644\":2,\"2678\":1,\"2689\":12,\"2693\":1,\"2704\":12,\"2708\":1,\"2719\":12}}],[\"priority=plugin\",{\"1\":{\"426\":1,\"936\":1,\"1451\":1}}],[\"priority=10\",{\"1\":{\"105\":1,\"527\":1,\"613\":1,\"1037\":1,\"1123\":1,\"1552\":1}}],[\"priority\",{\"1\":{\"89\":1,\"93\":1,\"242\":1,\"426\":1,\"597\":1,\"601\":1,\"750\":1,\"936\":1,\"1107\":1,\"1111\":1,\"1263\":1,\"1451\":1,\"1856\":1,\"1857\":1,\"1858\":1,\"1859\":1,\"1860\":1,\"1861\":1,\"1862\":1,\"1863\":1,\"1864\":1,\"1865\":1,\"1866\":1,\"1867\":1,\"1868\":1,\"1869\":1,\"1870\":1,\"1871\":1,\"1872\":1,\"1873\":1,\"1874\":1,\"1875\":1,\"1876\":1,\"1877\":1,\"1878\":1,\"1879\":1,\"1880\":1,\"1881\":1,\"1882\":1,\"1883\":1,\"1884\":1,\"1885\":1,\"2225\":1,\"2226\":1,\"2227\":1,\"2228\":1,\"2229\":1,\"2230\":1,\"2231\":1,\"2232\":1,\"2233\":1,\"2234\":1,\"2235\":1,\"2236\":1,\"2237\":1,\"2238\":1,\"2239\":1,\"2240\":1,\"2241\":1,\"2242\":1,\"2243\":1,\"2244\":1,\"2245\":1,\"2246\":1,\"2247\":1,\"2248\":1,\"2249\":1,\"2250\":1,\"2251\":1,\"2252\":1,\"2253\":1,\"2254\":1,\"2594\":1,\"2595\":1,\"2596\":1,\"2597\":1,\"2598\":1,\"2599\":1,\"2600\":1,\"2601\":1,\"2602\":1,\"2603\":1,\"2604\":1,\"2605\":1,\"2606\":1,\"2607\":1,\"2608\":1,\"2609\":1,\"2610\":1,\"2611\":1,\"2612\":1,\"2613\":1,\"2614\":1,\"2615\":1,\"2616\":1,\"2617\":1,\"2618\":1,\"2619\":1,\"2620\":1,\"2621\":1,\"2622\":1,\"2623\":1}}],[\"process\",{\"1\":{\"470\":1,\"980\":1,\"1495\":1}}],[\"processexception\",{\"1\":{\"195\":1,\"703\":1,\"1215\":1}}],[\"problem\",{\"1\":{\"417\":1,\"927\":1,\"1442\":1}}],[\"prompt=messagetemplate\",{\"1\":{\"429\":1,\"939\":1,\"1454\":1}}],[\"prompt=\",{\"1\":{\"421\":1,\"429\":1,\"931\":1,\"939\":1,\"1446\":1,\"1454\":1,\"2680\":1,\"2695\":1,\"2710\":1}}],[\"prompt\",{\"1\":{\"251\":1,\"254\":1,\"255\":1,\"256\":1,\"257\":1,\"505\":1,\"759\":1,\"762\":1,\"763\":1,\"764\":1,\"765\":1,\"1015\":1,\"1200\":1,\"1201\":1,\"1272\":1,\"1275\":1,\"1276\":1,\"1277\":1,\"1278\":1,\"1316\":1,\"1318\":1,\"1349\":1,\"1350\":1,\"1530\":1}}],[\"property\",{\"1\":{\"146\":1,\"654\":1,\"1164\":1}}],[\"propagation\",{\"1\":{\"90\":1,\"203\":2,\"598\":1,\"711\":2,\"1108\":1,\"1223\":2}}],[\"provider\",{\"1\":{\"83\":3,\"284\":1,\"591\":3,\"792\":1,\"1101\":3,\"1304\":1}}],[\"provides\",{\"1\":{\"78\":1,\"586\":1,\"1096\":1}}],[\"proactoreventloop\",{\"1\":{\"64\":2,\"572\":2,\"1082\":2}}],[\"proxy\",{\"1\":{\"53\":2,\"447\":2,\"561\":2,\"957\":2,\"1071\":2,\"1472\":2,\"1652\":1,\"1659\":1,\"1698\":1,\"1704\":1,\"1728\":1,\"1753\":1,\"2021\":1,\"2028\":1,\"2067\":1,\"2073\":1,\"2097\":1,\"2122\":1,\"2390\":1,\"2397\":1,\"2436\":1,\"2442\":1,\"2473\":1,\"2478\":1}}],[\"package\",{\"1\":{\"512\":1,\"1022\":1,\"1537\":1,\"1886\":4,\"1898\":2,\"1906\":6,\"2255\":4,\"2267\":2,\"2275\":6,\"2624\":4,\"2636\":2,\"2644\":6}}],[\"payload\",{\"1\":{\"473\":9,\"983\":9,\"1498\":9}}],[\"pause\",{\"1\":{\"205\":2,\"394\":1,\"395\":1,\"713\":2,\"902\":1,\"903\":1,\"1200\":2,\"1225\":2,\"1350\":1,\"1417\":1,\"1418\":1}}],[\"pausedexception\",{\"1\":{\"195\":1,\"703\":1,\"1215\":1}}],[\"password\",{\"1\":{\"429\":3,\"939\":3,\"1454\":3,\"1929\":1,\"2298\":1,\"2667\":1,\"2690\":6,\"2705\":6,\"2720\":6}}],[\"pass\",{\"1\":{\"127\":1,\"128\":1,\"129\":1,\"130\":1,\"133\":1,\"135\":1,\"154\":1,\"452\":2,\"635\":1,\"636\":1,\"637\":1,\"638\":1,\"641\":1,\"643\":1,\"662\":1,\"962\":2,\"1145\":1,\"1146\":1,\"1147\":1,\"1148\":1,\"1151\":1,\"1153\":1,\"1172\":1,\"1477\":2}}],[\"patch\",{\"0\":{\"1916\":1,\"2285\":1,\"2654\":1}}],[\"pat\",{\"1\":{\"1887\":1,\"2256\":1,\"2625\":1}}],[\"path=url\",{\"1\":{\"120\":1,\"121\":1,\"628\":1,\"629\":1,\"1138\":1,\"1139\":1}}],[\"path\",{\"1\":{\"114\":2,\"120\":1,\"121\":1,\"410\":2,\"433\":2,\"478\":3,\"515\":5,\"516\":1,\"517\":2,\"518\":2,\"519\":2,\"622\":2,\"628\":1,\"629\":1,\"920\":2,\"943\":2,\"988\":3,\"1025\":5,\"1026\":1,\"1027\":2,\"1028\":2,\"1029\":2,\"1132\":2,\"1138\":1,\"1139\":1,\"1435\":2,\"1458\":2,\"1503\":3,\"1540\":5,\"1541\":1,\"1542\":2,\"1543\":2,\"1544\":2,\"1722\":1,\"1723\":1,\"1724\":1,\"1725\":1,\"1809\":5,\"1811\":1,\"1812\":1,\"1813\":1,\"1819\":1,\"1827\":1,\"1828\":1,\"1895\":2,\"2091\":1,\"2092\":1,\"2093\":1,\"2094\":1,\"2178\":5,\"2180\":1,\"2181\":1,\"2182\":1,\"2188\":1,\"2196\":1,\"2197\":1,\"2264\":2,\"2451\":1,\"2452\":1,\"2453\":1,\"2454\":1,\"2547\":5,\"2549\":1,\"2550\":1,\"2551\":1,\"2557\":1,\"2565\":1,\"2566\":1,\"2633\":2}}],[\"pathlib\",{\"1\":{\"114\":1,\"433\":3,\"478\":1,\"515\":2,\"622\":1,\"943\":3,\"988\":1,\"1025\":2,\"1132\":1,\"1458\":3,\"1503\":1,\"1540\":2,\"1809\":1,\"2178\":1,\"2547\":1}}],[\"patterns默认支持的类型有\",{\"1\":{\"1890\":1,\"2259\":1,\"2628\":1}}],[\"patterns\",{\"1\":{\"1890\":2,\"2259\":2,\"2628\":2}}],[\"pattern\",{\"1\":{\"67\":1,\"68\":1,\"75\":1,\"76\":1,\"575\":1,\"576\":1,\"583\":1,\"584\":1,\"1085\":1,\"1086\":1,\"1093\":1,\"1094\":1,\"1678\":1,\"1679\":1,\"1769\":1,\"1770\":1,\"1867\":1,\"1884\":1,\"2047\":1,\"2048\":1,\"2138\":1,\"2139\":1,\"2236\":1,\"2253\":1,\"2416\":1,\"2417\":1,\"2507\":1,\"2508\":1,\"2605\":1,\"2622\":1}}],[\"parameter\",{\"1\":{\"1649\":1,\"2018\":1,\"2387\":1}}],[\"parameterless\",{\"1\":{\"248\":1,\"249\":1,\"250\":1,\"251\":1,\"756\":1,\"757\":1,\"758\":1,\"759\":1,\"1269\":1,\"1270\":1,\"1271\":1,\"1272\":1,\"1641\":1,\"1643\":1,\"1644\":1,\"2010\":1,\"2012\":1,\"2013\":1,\"2379\":1,\"2381\":1,\"2382\":1}}],[\"param\",{\"1\":{\"297\":1,\"805\":1,\"1323\":1,\"1642\":1,\"1643\":2,\"1644\":1,\"1649\":1,\"2011\":1,\"2012\":2,\"2013\":1,\"2018\":1,\"2380\":1,\"2381\":2,\"2382\":1,\"2387\":1}}],[\"params=platform\",{\"1\":{\"474\":1,\"984\":1,\"1499\":1}}],[\"params\",{\"0\":{\"294\":1,\"802\":1,\"1314\":1},\"1\":{\"1641\":1,\"1645\":1,\"1646\":1,\"1652\":1,\"1659\":1,\"1698\":1,\"1704\":1,\"1728\":1,\"1753\":1,\"2010\":1,\"2014\":1,\"2015\":1,\"2021\":1,\"2028\":1,\"2067\":1,\"2073\":1,\"2097\":1,\"2122\":1,\"2379\":1,\"2383\":1,\"2384\":1,\"2390\":1,\"2397\":1,\"2436\":1,\"2442\":1,\"2473\":1,\"2478\":1,\"2680\":3,\"2681\":1,\"2684\":1,\"2685\":1,\"2687\":1,\"2688\":1,\"2695\":3,\"2696\":1,\"2699\":1,\"2700\":1,\"2702\":1,\"2703\":1,\"2710\":3,\"2711\":1,\"2714\":1,\"2715\":1,\"2717\":1,\"2718\":1}}],[\"parse\",{\"1\":{\"188\":1,\"473\":1,\"696\":1,\"983\":1,\"1208\":1,\"1498\":1,\"1886\":1,\"1887\":1,\"1889\":2,\"1895\":1,\"1901\":1,\"1902\":3,\"1903\":3,\"1904\":1,\"1905\":1,\"1906\":2,\"1907\":2,\"2255\":1,\"2256\":1,\"2258\":2,\"2264\":1,\"2270\":1,\"2271\":3,\"2272\":3,\"2273\":1,\"2274\":1,\"2275\":2,\"2276\":2,\"2624\":1,\"2625\":1,\"2627\":2,\"2633\":1,\"2639\":1,\"2640\":3,\"2641\":3,\"2642\":1,\"2643\":1,\"2644\":2,\"2645\":2}}],[\"parserexit\",{\"1\":{\"195\":1,\"365\":1,\"703\":1,\"873\":1,\"1215\":1,\"1388\":1}}],[\"parser=parser\",{\"1\":{\"100\":2,\"365\":1,\"608\":2,\"873\":1,\"1118\":2,\"1388\":1}}],[\"parser\",{\"1\":{\"100\":5,\"364\":1,\"365\":3,\"608\":5,\"872\":1,\"873\":3,\"1118\":5,\"1387\":1,\"1388\":3,\"1866\":2,\"1871\":1,\"1883\":2,\"2235\":2,\"2240\":1,\"2252\":2,\"2604\":2,\"2609\":1,\"2621\":2}}],[\"partition\",{\"1\":{\"2689\":8,\"2704\":8,\"2719\":8}}],[\"partitions\",{\"1\":{\"2689\":17,\"2704\":17,\"2719\":17}}],[\"part\",{\"1\":{\"147\":1,\"655\":1,\"1165\":1}}],[\"parentheses\",{\"1\":{\"1896\":1,\"1907\":2,\"1915\":2,\"2265\":1,\"2276\":2,\"2284\":2,\"2634\":1,\"2645\":2,\"2653\":2}}],[\"parent\",{\"1\":{\"111\":1,\"113\":1,\"114\":4,\"478\":2,\"619\":1,\"621\":1,\"622\":4,\"988\":2,\"1129\":1,\"1131\":1,\"1132\":4,\"1503\":2}}],[\"page\",{\"1\":{\"11\":1,\"23\":1,\"35\":1}}],[\"perm\",{\"1\":{\"329\":2,\"330\":1,\"331\":2,\"332\":2,\"837\":2,\"838\":1,\"839\":2,\"840\":2,\"1352\":2,\"1356\":1,\"1357\":2,\"1358\":2}}],[\"perm=matcher\",{\"1\":{\"140\":2,\"648\":2,\"1158\":2}}],[\"permissionupdater\",{\"1\":{\"242\":1,\"247\":2,\"395\":1,\"750\":1,\"755\":2,\"903\":1,\"1263\":1,\"1268\":2,\"1418\":1}}],[\"permissionchecker\",{\"1\":{\"93\":1,\"328\":2,\"333\":2,\"334\":1,\"392\":1,\"601\":1,\"836\":2,\"841\":2,\"842\":1,\"900\":1,\"1111\":1,\"1351\":2,\"1353\":2,\"1354\":1,\"1415\":1,\"1856\":1,\"1857\":1,\"1858\":1,\"1859\":1,\"1860\":1,\"1861\":1,\"1862\":1,\"1863\":1,\"1864\":1,\"1865\":1,\"1866\":1,\"1867\":1,\"1868\":1,\"1869\":1,\"1870\":1,\"1871\":1,\"1872\":1,\"1873\":1,\"1874\":1,\"1875\":1,\"1876\":1,\"1877\":1,\"1878\":1,\"1879\":1,\"1880\":1,\"1881\":1,\"1882\":1,\"1883\":1,\"1884\":1,\"1885\":1,\"2225\":1,\"2226\":1,\"2227\":1,\"2228\":1,\"2229\":1,\"2230\":1,\"2231\":1,\"2232\":1,\"2233\":1,\"2234\":1,\"2235\":1,\"2236\":1,\"2237\":1,\"2238\":1,\"2239\":1,\"2240\":1,\"2241\":1,\"2242\":1,\"2243\":1,\"2244\":1,\"2245\":1,\"2246\":1,\"2247\":1,\"2248\":1,\"2249\":1,\"2250\":1,\"2251\":1,\"2252\":1,\"2253\":1,\"2254\":1,\"2594\":1,\"2595\":1,\"2596\":1,\"2597\":1,\"2598\":1,\"2599\":1,\"2600\":1,\"2601\":1,\"2602\":1,\"2603\":1,\"2604\":1,\"2605\":1,\"2606\":1,\"2607\":1,\"2608\":1,\"2609\":1,\"2610\":1,\"2611\":1,\"2612\":1,\"2613\":1,\"2614\":1,\"2615\":1,\"2616\":1,\"2617\":1,\"2618\":1,\"2619\":1,\"2620\":1,\"2621\":1,\"2622\":1,\"2623\":1}}],[\"permission\",{\"0\":{\"328\":1,\"836\":1,\"1351\":1},\"1\":{\"87\":2,\"93\":2,\"140\":9,\"236\":1,\"242\":4,\"268\":1,\"328\":2,\"329\":1,\"330\":1,\"331\":1,\"332\":1,\"333\":2,\"340\":1,\"341\":1,\"342\":1,\"343\":1,\"345\":1,\"395\":1,\"595\":2,\"601\":2,\"648\":9,\"744\":1,\"750\":4,\"776\":1,\"836\":2,\"837\":1,\"838\":1,\"839\":1,\"840\":1,\"841\":2,\"848\":1,\"849\":1,\"850\":1,\"851\":1,\"853\":1,\"903\":1,\"1105\":2,\"1111\":2,\"1158\":9,\"1257\":1,\"1263\":4,\"1289\":1,\"1351\":2,\"1352\":1,\"1353\":2,\"1356\":1,\"1357\":1,\"1358\":1,\"1363\":1,\"1364\":1,\"1365\":1,\"1366\":1,\"1368\":1,\"1418\":1,\"1856\":2,\"1857\":2,\"1858\":2,\"1859\":2,\"1860\":2,\"1861\":2,\"1862\":2,\"1863\":2,\"1864\":2,\"1865\":2,\"1866\":2,\"1867\":2,\"1868\":2,\"1869\":2,\"1870\":2,\"1871\":2,\"1872\":2,\"1873\":2,\"1874\":2,\"1875\":2,\"1876\":2,\"1877\":2,\"1878\":2,\"1879\":2,\"1880\":2,\"1881\":2,\"1882\":2,\"1883\":2,\"1884\":2,\"1885\":2,\"2225\":2,\"2226\":2,\"2227\":2,\"2228\":2,\"2229\":2,\"2230\":2,\"2231\":2,\"2232\":2,\"2233\":2,\"2234\":2,\"2235\":2,\"2236\":2,\"2237\":2,\"2238\":2,\"2239\":2,\"2240\":2,\"2241\":2,\"2242\":2,\"2243\":2,\"2244\":2,\"2245\":2,\"2246\":2,\"2247\":2,\"2248\":2,\"2249\":2,\"2250\":2,\"2251\":2,\"2252\":2,\"2253\":2,\"2254\":2,\"2594\":2,\"2595\":2,\"2596\":2,\"2597\":2,\"2598\":2,\"2599\":2,\"2600\":2,\"2601\":2,\"2602\":2,\"2603\":2,\"2604\":2,\"2605\":2,\"2606\":2,\"2607\":2,\"2608\":2,\"2609\":2,\"2610\":2,\"2611\":2,\"2612\":2,\"2613\":2,\"2614\":2,\"2615\":2,\"2616\":2,\"2617\":2,\"2618\":2,\"2619\":2,\"2620\":2,\"2621\":2,\"2622\":2,\"2623\":2}}],[\"performance\",{\"1\":{\"58\":1,\"79\":1,\"566\":1,\"587\":1,\"1076\":1,\"1097\":1}}],[\"pep302\",{\"1\":{\"1818\":1,\"2187\":1,\"2556\":1}}],[\"pep8\",{\"1\":{\"8\":1,\"20\":1,\"32\":1}}],[\"pep484\",{\"1\":{\"8\":1,\"20\":1,\"32\":1}}],[\"pep\",{\"1\":{\"3\":2,\"8\":1,\"15\":2,\"20\":1,\"27\":2,\"32\":1,\"372\":2,\"880\":2,\"1395\":2}}],[\"pypi\",{\"1\":{\"479\":1,\"989\":1,\"1504\":1}}],[\"pyproject\",{\"1\":{\"110\":1,\"463\":1,\"478\":1,\"513\":3,\"618\":1,\"973\":1,\"988\":1,\"1023\":3,\"1128\":1,\"1488\":1,\"1503\":1,\"1538\":3,\"1813\":1,\"2182\":1,\"2551\":1}}],[\"pytest\",{\"1\":{\"478\":3,\"988\":3,\"1503\":3,\"1934\":2,\"1935\":1,\"2303\":2,\"2304\":1,\"2672\":2,\"2673\":1,\"2690\":2,\"2705\":2,\"2720\":2}}],[\"python\",{\"1\":{\"0\":3,\"2\":1,\"10\":8,\"12\":3,\"14\":1,\"22\":8,\"24\":3,\"26\":1,\"34\":8,\"58\":2,\"64\":1,\"78\":1,\"79\":1,\"80\":1,\"81\":1,\"372\":1,\"419\":1,\"448\":2,\"473\":3,\"482\":1,\"483\":3,\"485\":3,\"486\":1,\"487\":1,\"491\":1,\"493\":1,\"494\":1,\"499\":1,\"502\":1,\"503\":2,\"504\":1,\"505\":1,\"506\":1,\"507\":1,\"508\":2,\"510\":1,\"512\":1,\"536\":2,\"566\":2,\"572\":1,\"586\":1,\"587\":1,\"588\":1,\"589\":1,\"880\":1,\"929\":1,\"958\":2,\"983\":3,\"992\":1,\"993\":3,\"995\":3,\"996\":1,\"997\":1,\"1001\":1,\"1003\":1,\"1004\":1,\"1009\":1,\"1012\":1,\"1013\":2,\"1014\":1,\"1015\":1,\"1016\":1,\"1017\":1,\"1018\":2,\"1020\":1,\"1022\":1,\"1046\":2,\"1076\":2,\"1082\":1,\"1096\":1,\"1097\":1,\"1098\":1,\"1099\":1,\"1395\":1,\"1444\":1,\"1473\":2,\"1498\":3,\"1507\":1,\"1508\":3,\"1510\":3,\"1511\":1,\"1512\":1,\"1516\":1,\"1518\":1,\"1519\":1,\"1524\":1,\"1527\":1,\"1528\":2,\"1529\":1,\"1530\":1,\"1531\":1,\"1532\":1,\"1533\":2,\"1535\":1,\"1537\":1,\"1561\":2,\"1887\":1,\"2256\":1,\"2625\":1,\"2690\":14,\"2705\":14,\"2720\":14}}],[\"pydanticfieldinfo\",{\"1\":{\"297\":1,\"805\":1,\"1323\":1}}],[\"pydantic\",{\"1\":{\"141\":2,\"142\":1,\"143\":1,\"144\":1,\"146\":1,\"147\":2,\"148\":1,\"161\":2,\"162\":2,\"297\":1,\"467\":1,\"473\":2,\"506\":1,\"536\":3,\"649\":2,\"650\":1,\"651\":1,\"652\":1,\"654\":1,\"655\":2,\"656\":1,\"669\":2,\"670\":2,\"805\":1,\"977\":1,\"983\":2,\"1016\":1,\"1046\":3,\"1159\":2,\"1160\":1,\"1161\":1,\"1162\":1,\"1164\":1,\"1165\":2,\"1166\":1,\"1179\":2,\"1180\":2,\"1323\":1,\"1492\":1,\"1498\":2,\"1531\":1,\"1561\":3,\"1640\":1,\"2009\":1,\"2378\":1}}],[\"py\",{\"1\":{\"110\":3,\"114\":1,\"463\":6,\"478\":1,\"507\":1,\"508\":2,\"511\":3,\"512\":3,\"513\":4,\"514\":2,\"515\":2,\"516\":1,\"618\":3,\"622\":1,\"973\":6,\"988\":1,\"1017\":1,\"1018\":2,\"1021\":3,\"1022\":3,\"1023\":4,\"1024\":2,\"1025\":2,\"1026\":1,\"1128\":3,\"1132\":1,\"1488\":6,\"1503\":1,\"1532\":1,\"1533\":2,\"1536\":3,\"1537\":3,\"1538\":4,\"1539\":2,\"1540\":2,\"1541\":1,\"2679\":4,\"2694\":4,\"2709\":4}}],[\"pylance\",{\"1\":{\"3\":1,\"8\":1,\"10\":5,\"15\":1,\"20\":1,\"22\":5,\"27\":1,\"32\":1,\"34\":5}}],[\"pyright\",{\"1\":{\"3\":1,\"8\":1,\"15\":1,\"20\":1,\"27\":1,\"32\":1}}],[\"999999\",{\"1\":{\"2679\":1,\"2694\":1,\"2709\":1}}],[\"9492159f98f7\",{\"1\":{\"1924\":1,\"2293\":1,\"2662\":1}}],[\"9\",{\"1\":{\"0\":1,\"12\":1,\"24\":1,\"2690\":2,\"2705\":2,\"2720\":2}}],[\"3306\",{\"1\":{\"2690\":6,\"2705\":6,\"2720\":6}}],[\"3600\",{\"1\":{\"1931\":1,\"2300\":1,\"2669\":1}}],[\"32\",{\"1\":{\"1887\":1,\"2256\":1,\"2625\":1}}],[\"30\",{\"1\":{\"455\":2,\"965\":2,\"1480\":2,\"1931\":1,\"2300\":1,\"2669\":1}}],[\"3\",{\"1\":{\"0\":1,\"12\":1,\"24\":1,\"58\":1,\"78\":1,\"319\":1,\"363\":1,\"429\":1,\"470\":1,\"566\":1,\"586\":1,\"827\":1,\"871\":1,\"939\":1,\"980\":1,\"1076\":1,\"1096\":1,\"1340\":1,\"1386\":1,\"1454\":1,\"1495\":1,\"1605\":1,\"1901\":1,\"1903\":1,\"1974\":1,\"2270\":1,\"2272\":1,\"2343\":1,\"2639\":1,\"2641\":1,\"2690\":10,\"2705\":10,\"2720\":10,\"2742\":1,\"2743\":1,\"2744\":1}}],[\"仅存储一个值\",{\"1\":{\"1894\":1,\"2263\":1,\"2632\":1}}],[\"仅执行一次\",{\"1\":{\"1856\":1,\"1857\":1,\"1858\":1,\"1859\":1,\"1860\":1,\"1861\":1,\"1862\":1,\"1863\":1,\"1864\":1,\"1865\":1,\"1866\":1,\"1867\":1,\"1868\":1,\"1870\":1,\"1871\":1,\"1873\":1,\"1874\":1,\"1875\":1,\"1876\":1,\"1877\":1,\"1878\":1,\"1879\":1,\"1880\":1,\"1881\":1,\"1882\":1,\"1883\":1,\"1884\":1,\"1885\":1,\"2225\":1,\"2226\":1,\"2227\":1,\"2228\":1,\"2229\":1,\"2230\":1,\"2231\":1,\"2232\":1,\"2233\":1,\"2234\":1,\"2235\":1,\"2236\":1,\"2237\":1,\"2239\":1,\"2240\":1,\"2242\":1,\"2243\":1,\"2244\":1,\"2245\":1,\"2246\":1,\"2247\":1,\"2248\":1,\"2249\":1,\"2250\":1,\"2251\":1,\"2252\":1,\"2253\":1,\"2254\":1,\"2594\":1,\"2595\":1,\"2596\":1,\"2597\":1,\"2598\":1,\"2599\":1,\"2600\":1,\"2601\":1,\"2602\":1,\"2603\":1,\"2604\":1,\"2605\":1,\"2606\":1,\"2608\":1,\"2609\":1,\"2611\":1,\"2612\":1,\"2613\":1,\"2614\":1,\"2615\":1,\"2616\":1,\"2617\":1,\"2618\":1,\"2619\":1,\"2620\":1,\"2621\":1,\"2622\":1,\"2623\":1}}],[\"仅在已声明插件的情况下可使用标识符\",{\"1\":{\"1816\":1,\"2185\":1,\"2554\":1}}],[\"仅在需要同时捕获不同类型事件时使用\",{\"1\":{\"340\":1,\"341\":1,\"342\":1,\"343\":1,\"848\":1,\"849\":1,\"850\":1,\"851\":1,\"1363\":1,\"1364\":1,\"1365\":1,\"1366\":1}}],[\"仅能使用\",{\"1\":{\"531\":1,\"1041\":1,\"1556\":1}}],[\"仅需要判断是否相等\",{\"1\":{\"1893\":1,\"2262\":1,\"2631\":1}}],[\"仅需要对插件进行简单的配置即可使用\",{\"1\":{\"444\":1,\"954\":1,\"1469\":1}}],[\"仅需完成环境配置及插件安装\",{\"1\":{\"0\":1,\"12\":1,\"24\":1}}],[\"仅用于\",{\"1\":{\"110\":1,\"618\":1,\"1128\":1}}],[\"仅支持\",{\"1\":{\"0\":1,\"12\":1,\"24\":1}}],[\"概览\",{\"0\":{\"0\":1,\"12\":1,\"24\":1}}]],\"version\":2}}")).map(([e,t])=>[e,It(t,{fields:["h","t","c"],storeFields:["h","t","c"]})]));self.onmessage=({data:{type:e="all",query:t,locale:s,options:n,id:o}})=>{const r=Ct[s];e==="suggest"?self.postMessage([e,o,et(t,r,n)]):e==="search"?self.postMessage([e,o,tt(t,r,n)]):self.postMessage({suggestions:[e,o,et(t,r,n)],results:[e,o,tt(t,r,n)]})};
//# sourceMappingURL=index.js.map
