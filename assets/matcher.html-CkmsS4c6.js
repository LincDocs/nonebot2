import{_ as s,e as a,f as r,g as l,h as n,i as o,j as i,r as p,o as d}from"./app-DlBE6PBf.js";const u={};function g(m,e){const t=p("RouteLink");return d(),a("div",null,[e[123]||(e[123]=r('<h1 id="nonebot-matcher" tabindex="-1"><a class="header-anchor" href="#nonebot-matcher"><span>nonebot.matcher</span></a></h1><p>本模块实现事件响应器的创建与运行，并提供一些快捷方法来帮助用户更好的与机器人进行对话。</p><h2 id="Matcher" tabindex="-1"><a class="header-anchor" href="#Matcher"><span><em>class</em> <code>Matcher()</code></span></a></h2><ul><li><p><strong>说明:</strong> 事件响应器类</p></li><li><p><strong>参数</strong></p><p>empty</p></li></ul><h3 id="Matcher-type" tabindex="-1"><a class="header-anchor" href="#Matcher-type"><span><em>class-var</em> <code>type</code></span></a></h3><ul><li><p><strong>类型:</strong> ClassVar[str]</p></li><li><p><strong>说明:</strong> 事件响应器类型</p></li></ul><h3 id="Matcher-rule" tabindex="-1"><a class="header-anchor" href="#Matcher-rule"><span><em>class-var</em> <code>rule</code></span></a></h3>',7)),l("ul",null,[l("li",null,[l("p",null,[e[1]||(e[1]=l("strong",null,"类型:",-1)),e[2]||(e[2]=n(" ClassVar[")),o(t,{to:"/version-2.3.3/api/rule.html#Rule"},{default:i(()=>e[0]||(e[0]=[n("Rule")])),_:1}),e[3]||(e[3]=n("]"))])]),e[4]||(e[4]=l("li",null,[l("p",null,[l("strong",null,"说明:"),n(" 事件响应器匹配规则")])],-1))]),e[124]||(e[124]=l("h3",{id:"Matcher-permission",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#Matcher-permission"},[l("span",null,[l("em",null,"class-var"),n(),l("code",null,"permission")])])],-1)),l("ul",null,[l("li",null,[l("p",null,[e[6]||(e[6]=l("strong",null,"类型:",-1)),e[7]||(e[7]=n(" ClassVar[")),o(t,{to:"/version-2.3.3/api/permission.html#Permission"},{default:i(()=>e[5]||(e[5]=[n("Permission")])),_:1}),e[8]||(e[8]=n("]"))])]),e[9]||(e[9]=l("li",null,[l("p",null,[l("strong",null,"说明:"),n(" 事件响应器触发权限")])],-1))]),e[125]||(e[125]=l("h3",{id:"Matcher-handlers",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#Matcher-handlers"},[l("span",null,[l("em",null,"class-var"),n(),l("code",null,"handlers")])])],-1)),l("ul",null,[l("li",null,[l("p",null,[e[11]||(e[11]=l("strong",null,"类型:",-1)),e[12]||(e[12]=n(" ClassVar[list[")),o(t,{to:"/version-2.3.3/api/dependencies/#Dependent"},{default:i(()=>e[10]||(e[10]=[n("Dependent")])),_:1}),e[13]||(e[13]=n("[Any]]]"))])]),e[14]||(e[14]=l("li",null,[l("p",null,[l("strong",null,"说明:"),n(" 事件响应器拥有的事件处理函数列表")])],-1))]),e[126]||(e[126]=r('<h3 id="Matcher-priority" tabindex="-1"><a class="header-anchor" href="#Matcher-priority"><span><em>class-var</em> <code>priority</code></span></a></h3><ul><li><p><strong>类型:</strong> ClassVar[int]</p></li><li><p><strong>说明:</strong> 事件响应器优先级</p></li></ul><h3 id="Matcher-block" tabindex="-1"><a class="header-anchor" href="#Matcher-block"><span><em>class-var</em> <code>block</code></span></a></h3><ul><li><p><strong>类型:</strong> bool</p></li><li><p><strong>说明:</strong> 事件响应器是否阻止事件传播</p></li></ul><h3 id="Matcher-temp" tabindex="-1"><a class="header-anchor" href="#Matcher-temp"><span><em>class-var</em> <code>temp</code></span></a></h3><ul><li><p><strong>类型:</strong> ClassVar[bool]</p></li><li><p><strong>说明:</strong> 事件响应器是否为临时</p></li></ul><h3 id="Matcher-expire-time" tabindex="-1"><a class="header-anchor" href="#Matcher-expire-time"><span><em>class-var</em> <code>expire_time</code></span></a></h3><ul><li><p><strong>类型:</strong> ClassVar[datetime | None]</p></li><li><p><strong>说明:</strong> 事件响应器过期时间点</p></li></ul><h3 id="Matcher-new" tabindex="-1"><a class="header-anchor" href="#Matcher-new"><span><em>classmethod</em> <code>new(type_=&quot;&quot;, rule=None, permission=None, handlers=None, temp=False, priority=1, block=False, *, plugin=None, module=None, source=None, expire_time=None, default_state=None, default_type_updater=None, default_permission_updater=None)</code></span></a></h3>',9)),l("ul",null,[e[62]||(e[62]=l("li",null,[l("p",null,[l("strong",null,"说明:"),n(" 创建一个新的事件响应器，并存储至 "),l("code",null,"matchers <#matchers>"),n("_")])],-1)),l("li",null,[e[61]||(e[61]=l("p",null,[l("strong",null,"参数")],-1)),l("ul",null,[e[54]||(e[54]=l("li",null,[l("p",null,[l("code",null,"type_"),n(" (str): 事件响应器类型，与 "),l("code",null,"event.get_type()"),n(" 一致时触发，空字符串表示任意")])],-1)),l("li",null,[l("p",null,[e[16]||(e[16]=l("code",null,"rule",-1)),e[17]||(e[17]=n(" (")),o(t,{to:"/version-2.3.3/api/rule.html#Rule"},{default:i(()=>e[15]||(e[15]=[n("Rule")])),_:1}),e[18]||(e[18]=n(" | None): 匹配规则"))])]),l("li",null,[l("p",null,[e[20]||(e[20]=l("code",null,"permission",-1)),e[21]||(e[21]=n(" (")),o(t,{to:"/version-2.3.3/api/permission.html#Permission"},{default:i(()=>e[19]||(e[19]=[n("Permission")])),_:1}),e[22]||(e[22]=n(" | None): 权限"))])]),l("li",null,[l("p",null,[e[25]||(e[25]=l("code",null,"handlers",-1)),e[26]||(e[26]=n(" (list[")),o(t,{to:"/version-2.3.3/api/typing.html#T-Handler"},{default:i(()=>e[23]||(e[23]=[n("T_Handler")])),_:1}),e[27]||(e[27]=n(" | ")),o(t,{to:"/version-2.3.3/api/dependencies/#Dependent"},{default:i(()=>e[24]||(e[24]=[n("Dependent")])),_:1}),e[28]||(e[28]=n("[Any]] | None): 事件处理函数列表"))])]),e[55]||(e[55]=l("li",null,[l("p",null,[l("code",null,"temp"),n(" (bool): 是否为临时事件响应器，即触发一次后删除")])],-1)),e[56]||(e[56]=l("li",null,[l("p",null,[l("code",null,"priority"),n(" (int): 响应优先级")])],-1)),e[57]||(e[57]=l("li",null,[l("p",null,[l("code",null,"block"),n(" (bool): 是否阻止事件向更低优先级的响应器传播")])],-1)),l("li",null,[l("p",null,[e[30]||(e[30]=l("code",null,"plugin",-1)),e[31]||(e[31]=n(" (")),o(t,{to:"/version-2.3.3/api/plugin/model.html#Plugin"},{default:i(()=>e[29]||(e[29]=[n("Plugin")])),_:1}),e[32]||(e[32]=n(" | None): ")),e[33]||(e[33]=l("strong",null,"Deprecated.",-1)),e[34]||(e[34]=n(" 事件响应器所在插件"))])]),e[58]||(e[58]=l("li",null,[l("p",null,[l("code",null,"module"),n(" (ModuleType | None): "),l("strong",null,"Deprecated."),n(" 事件响应器所在模块")])],-1)),e[59]||(e[59]=l("li",null,[l("p",null,[l("code",null,"source"),n(" (MatcherSource | None): 事件响应器源代码上下文信息")])],-1)),e[60]||(e[60]=l("li",null,[l("p",null,[l("code",null,"expire_time"),n(" (datetime | timedelta | None): 事件响应器最终有效时间点，过时即被删除")])],-1)),l("li",null,[l("p",null,[e[36]||(e[36]=l("code",null,"default_state",-1)),e[37]||(e[37]=n(" (")),o(t,{to:"/version-2.3.3/api/typing.html#T-State"},{default:i(()=>e[35]||(e[35]=[n("T_State")])),_:1}),e[38]||(e[38]=n(" | None): 默认状态 ")),e[39]||(e[39]=l("code",null,"state",-1))])]),l("li",null,[l("p",null,[e[42]||(e[42]=l("code",null,"default_type_updater",-1)),e[43]||(e[43]=n(" (")),o(t,{to:"/version-2.3.3/api/typing.html#T-TypeUpdater"},{default:i(()=>e[40]||(e[40]=[n("T_TypeUpdater")])),_:1}),e[44]||(e[44]=n(" | ")),o(t,{to:"/version-2.3.3/api/dependencies/#Dependent"},{default:i(()=>e[41]||(e[41]=[n("Dependent")])),_:1}),e[45]||(e[45]=n("[str] | None): 默认事件类型更新函数"))])]),l("li",null,[l("p",null,[e[49]||(e[49]=l("code",null,"default_permission_updater",-1)),e[50]||(e[50]=n(" (")),o(t,{to:"/version-2.3.3/api/typing.html#T-PermissionUpdater"},{default:i(()=>e[46]||(e[46]=[n("T_PermissionUpdater")])),_:1}),e[51]||(e[51]=n(" | ")),o(t,{to:"/version-2.3.3/api/dependencies/#Dependent"},{default:i(()=>e[47]||(e[47]=[n("Dependent")])),_:1}),e[52]||(e[52]=n("[")),o(t,{to:"/version-2.3.3/api/permission.html#Permission"},{default:i(()=>e[48]||(e[48]=[n("Permission")])),_:1}),e[53]||(e[53]=n("] | None): 默认会话权限更新函数"))])])])]),e[63]||(e[63]=l("li",null,[l("p",null,[l("strong",null,"返回")]),l("ul",null,[l("li",null,"type[Matcher]: 新的事件响应器类")])],-1))]),e[127]||(e[127]=r('<h3 id="Matcher-destroy" tabindex="-1"><a class="header-anchor" href="#Matcher-destroy"><span><em>classmethod</em> <code>destroy()</code></span></a></h3><ul><li><p><strong>说明:</strong> 销毁当前的事件响应器</p></li><li><p><strong>参数</strong></p><p>empty</p></li><li><p><strong>返回</strong></p><ul><li>None</li></ul></li></ul><h3 id="Matcher-check-perm" tabindex="-1"><a class="header-anchor" href="#Matcher-check-perm"><span><em>classmethod</em> <code>check_perm(bot, event, stack=None, dependency_cache=None)</code></span></a></h3>',3)),l("ul",null,[e[78]||(e[78]=l("li",null,[l("p",null,[l("strong",null,"说明:"),n(" 检查是否满足触发权限")])],-1)),l("li",null,[e[77]||(e[77]=l("p",null,[l("strong",null,"参数")],-1)),l("ul",null,[l("li",null,[l("p",null,[e[65]||(e[65]=l("code",null,"bot",-1)),e[66]||(e[66]=n(" (")),o(t,{to:"/version-2.3.3/api/adapters/#Bot"},{default:i(()=>e[64]||(e[64]=[n("Bot")])),_:1}),e[67]||(e[67]=n("): Bot 对象"))])]),l("li",null,[l("p",null,[e[69]||(e[69]=l("code",null,"event",-1)),e[70]||(e[70]=n(" (")),o(t,{to:"/version-2.3.3/api/adapters/#Event"},{default:i(()=>e[68]||(e[68]=[n("Event")])),_:1}),e[71]||(e[71]=n("): 上报事件"))])]),e[76]||(e[76]=l("li",null,[l("p",null,[l("code",null,"stack"),n(" (AsyncExitStack | None): 异步上下文栈")])],-1)),l("li",null,[l("p",null,[e[73]||(e[73]=l("code",null,"dependency_cache",-1)),e[74]||(e[74]=n(" (")),o(t,{to:"/version-2.3.3/api/typing.html#T-DependencyCache"},{default:i(()=>e[72]||(e[72]=[n("T_DependencyCache")])),_:1}),e[75]||(e[75]=n(" | None): 依赖缓存"))])])])]),e[79]||(e[79]=l("li",null,[l("p",null,[l("strong",null,"返回")]),l("ul",null,[l("li",null,"bool: 是否满足权限")])],-1))]),e[128]||(e[128]=l("h3",{id:"Matcher-check-rule",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#Matcher-check-rule"},[l("span",null,[l("em",null,"classmethod"),n(),l("code",null,"check_rule(bot, event, state, stack=None, dependency_cache=None)")])])],-1)),l("ul",null,[e[98]||(e[98]=l("li",null,[l("p",null,[l("strong",null,"说明:"),n(" 检查是否满足匹配规则")])],-1)),l("li",null,[e[97]||(e[97]=l("p",null,[l("strong",null,"参数")],-1)),l("ul",null,[l("li",null,[l("p",null,[e[81]||(e[81]=l("code",null,"bot",-1)),e[82]||(e[82]=n(" (")),o(t,{to:"/version-2.3.3/api/adapters/#Bot"},{default:i(()=>e[80]||(e[80]=[n("Bot")])),_:1}),e[83]||(e[83]=n("): Bot 对象"))])]),l("li",null,[l("p",null,[e[85]||(e[85]=l("code",null,"event",-1)),e[86]||(e[86]=n(" (")),o(t,{to:"/version-2.3.3/api/adapters/#Event"},{default:i(()=>e[84]||(e[84]=[n("Event")])),_:1}),e[87]||(e[87]=n("): 上报事件"))])]),l("li",null,[l("p",null,[e[89]||(e[89]=l("code",null,"state",-1)),e[90]||(e[90]=n(" (")),o(t,{to:"/version-2.3.3/api/typing.html#T-State"},{default:i(()=>e[88]||(e[88]=[n("T_State")])),_:1}),e[91]||(e[91]=n("): 当前状态"))])]),e[96]||(e[96]=l("li",null,[l("p",null,[l("code",null,"stack"),n(" (AsyncExitStack | None): 异步上下文栈")])],-1)),l("li",null,[l("p",null,[e[93]||(e[93]=l("code",null,"dependency_cache",-1)),e[94]||(e[94]=n(" (")),o(t,{to:"/version-2.3.3/api/typing.html#T-DependencyCache"},{default:i(()=>e[92]||(e[92]=[n("T_DependencyCache")])),_:1}),e[95]||(e[95]=n(" | None): 依赖缓存"))])])])]),e[99]||(e[99]=l("li",null,[l("p",null,[l("strong",null,"返回")]),l("ul",null,[l("li",null,"bool: 是否满足匹配规则")])],-1))]),e[129]||(e[129]=l("h3",{id:"Matcher-type-updater",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#Matcher-type-updater"},[l("span",null,[l("em",null,"classmethod"),n(),l("code",null,"type_updater(func)")])])],-1)),l("ul",null,[e[107]||(e[107]=l("li",null,[l("p",null,[l("strong",null,"说明:"),n(" 装饰一个函数来更改当前事件响应器的默认响应事件类型更新函数")])],-1)),l("li",null,[e[104]||(e[104]=l("p",null,[l("strong",null,"参数")],-1)),l("ul",null,[l("li",null,[e[101]||(e[101]=l("code",null,"func",-1)),e[102]||(e[102]=n(" (")),o(t,{to:"/version-2.3.3/api/typing.html#T-TypeUpdater"},{default:i(()=>e[100]||(e[100]=[n("T_TypeUpdater")])),_:1}),e[103]||(e[103]=n("): 响应事件类型更新函数"))])])]),l("li",null,[e[106]||(e[106]=l("p",null,[l("strong",null,"返回")],-1)),l("ul",null,[l("li",null,[o(t,{to:"/version-2.3.3/api/typing.html#T-TypeUpdater"},{default:i(()=>e[105]||(e[105]=[n("T_TypeUpdater")])),_:1})])])])]),e[130]||(e[130]=l("h3",{id:"Matcher-permission-updater",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#Matcher-permission-updater"},[l("span",null,[l("em",null,"classmethod"),n(),l("code",null,"permission_updater(func)")])])],-1)),l("ul",null,[e[115]||(e[115]=l("li",null,[l("p",null,[l("strong",null,"说明:"),n(" 装饰一个函数来更改当前事件响应器的默认会话权限更新函数")])],-1)),l("li",null,[e[112]||(e[112]=l("p",null,[l("strong",null,"参数")],-1)),l("ul",null,[l("li",null,[e[109]||(e[109]=l("code",null,"func",-1)),e[110]||(e[110]=n(" (")),o(t,{to:"/version-2.3.3/api/typing.html#T-PermissionUpdater"},{default:i(()=>e[108]||(e[108]=[n("T_PermissionUpdater")])),_:1}),e[111]||(e[111]=n("): 会话权限更新函数"))])])]),l("li",null,[e[114]||(e[114]=l("p",null,[l("strong",null,"返回")],-1)),l("ul",null,[l("li",null,[o(t,{to:"/version-2.3.3/api/typing.html#T-PermissionUpdater"},{default:i(()=>e[113]||(e[113]=[n("T_PermissionUpdater")])),_:1})])])])]),e[131]||(e[131]=l("h3",{id:"Matcher-append-handler",tabindex:"-1"},[l("a",{class:"header-anchor",href:"#Matcher-append-handler"},[l("span",null,[l("em",null,"classmethod"),n(),l("code",null,"append_handler(handler, parameterless=None)")])])],-1)),l("ul",null,[l("li",null,[e[121]||(e[121]=l("p",null,[l("strong",null,"参数")],-1)),l("ul",null,[l("li",null,[l("p",null,[e[117]||(e[117]=l("code",null,"handler",-1)),e[118]||(e[118]=n(" (")),o(t,{to:"/version-2.3.3/api/typing.html#T-Handler"},{default:i(()=>e[116]||(e[116]=[n("T_Handler")])),_:1}),e[119]||(e[119]=n(")"))])]),e[120]||(e[120]=l("li",null,[l("p",null,[l("code",null,"parameterless"),n(" (Iterable[Any] | None)")])],-1))])]),e[122]||(e[122]=r('<li><p><strong>返回</strong></p><ul><li><div class="ab-note drop-shadow"><div class="markdown-rendered"><div><h3 id="Matcher-handle" tabindex="-1"><a class="header-anchor" href="#Matcher-handle"><span><em>classmethod</em> <code>handle(parameterless=None)</code></span></a></h3><ul><li><p><strong>说明:</strong> 装饰一个函数来向事件响应器直接添加一个处理函数</p></li><li><p><strong>参数</strong></p><ul><li><code>parameterless</code> (Iterable[Any] | None): 非参数类型依赖列表</li></ul></li><li><p><strong>返回</strong></p><ul><li>(<a class="route-link" href="/nonebot2/version-2.3.3/api/typing.html#T-Handler">T_Handler</a>) -&gt; <a class="route-link" href="/nonebot2/version-2.3.3/api/typing.html#T-Handler">T_Handler</a></li></ul></li></ul><h3 id="Matcher-receive" tabindex="-1"><a class="header-anchor" href="#Matcher-receive"><span><em>classmethod</em> <code>receive(id=&quot;&quot;, parameterless=None)</code></span></a></h3><ul><li><p><strong>说明:</strong> 装饰一个函数来指示 NoneBot 在接收用户新的一条消息后继续运行该函数</p></li><li><p><strong>参数</strong></p><ul><li><p><code>id</code> (str): 消息 ID</p></li><li><p><code>parameterless</code> (Iterable[Any] | None): 非参数类型依赖列表</p></li></ul></li><li><p><strong>返回</strong></p><ul><li>(<a class="route-link" href="/nonebot2/version-2.3.3/api/typing.html#T-Handler">T_Handler</a>) -&gt; <a class="route-link" href="/nonebot2/version-2.3.3/api/typing.html#T-Handler">T_Handler</a></li></ul></li></ul><h3 id="Matcher-got" tabindex="-1"><a class="header-anchor" href="#Matcher-got"><span><em>classmethod</em> <code>got(key, prompt=None, parameterless=None)</code></span></a></h3><ul><li><p><strong>说明</strong></p><p>装饰一个函数来指示 NoneBot 获取一个参数 <code>key</code></p><p>当要获取的 <code>key</code> 不存在时接收用户新的一条消息再运行该函数，<br> 如果 <code>key</code> 已存在则直接继续运行</p></li><li><p><strong>参数</strong></p><ul><li><p><code>key</code> (str): 参数名</p></li><li><p><code>prompt</code> (str | <a class="route-link" href="/nonebot2/version-2.3.3/api/adapters/#Message">Message</a> | <a class="route-link" href="/nonebot2/version-2.3.3/api/adapters/#MessageSegment">MessageSegment</a> | <a class="route-link" href="/nonebot2/version-2.3.3/api/adapters/#MessageTemplate">MessageTemplate</a> | None): 在参数不存在时向用户发送的消息</p></li><li><p><code>parameterless</code> (Iterable[Any] | None): 非参数类型依赖列表</p></li></ul></li><li><p><strong>返回</strong></p><ul><li>(<a class="route-link" href="/nonebot2/version-2.3.3/api/typing.html#T-Handler">T_Handler</a>) -&gt; <a class="route-link" href="/nonebot2/version-2.3.3/api/typing.html#T-Handler">T_Handler</a></li></ul></li></ul><h3 id="Matcher-send" tabindex="-1"><a class="header-anchor" href="#Matcher-send"><span><em>classmethod</em> <code>send(message, **kwargs)</code></span></a></h3><ul><li><p><strong>说明:</strong> 发送一条消息给当前交互用户</p></li><li><p><strong>参数</strong></p><ul><li><p><code>message</code> (str | <a class="route-link" href="/nonebot2/version-2.3.3/api/adapters/#Message">Message</a> | <a class="route-link" href="/nonebot2/version-2.3.3/api/adapters/#MessageSegment">MessageSegment</a> | <a class="route-link" href="/nonebot2/version-2.3.3/api/adapters/#MessageTemplate">MessageTemplate</a>): 消息内容</p></li><li><p><code>**kwargs</code> (Any): <a class="route-link" href="/nonebot2/version-2.3.3/api/adapters/#Bot-send">Bot.send</a> 的参数， 请参考对应 adapter 的 bot 对象 api</p></li></ul></li><li><p><strong>返回</strong></p><ul><li>Any</li></ul></li></ul><h3 id="Matcher-finish" tabindex="-1"><a class="header-anchor" href="#Matcher-finish"><span><em>classmethod</em> <code>finish(message=None, **kwargs)</code></span></a></h3><ul><li><p><strong>说明:</strong> 发送一条消息给当前交互用户并结束当前事件响应器</p></li><li><p><strong>参数</strong></p><ul><li><p><code>message</code> (str | <a class="route-link" href="/nonebot2/version-2.3.3/api/adapters/#Message">Message</a> | <a class="route-link" href="/nonebot2/version-2.3.3/api/adapters/#MessageSegment">MessageSegment</a> | <a class="route-link" href="/nonebot2/version-2.3.3/api/adapters/#MessageTemplate">MessageTemplate</a> | None): 消息内容</p></li><li><p><code>**kwargs</code>: <a class="route-link" href="/nonebot2/version-2.3.3/api/adapters/#Bot-send">Bot.send</a> 的参数， 请参考对应 adapter 的 bot 对象 api</p></li></ul></li><li><p><strong>返回</strong></p><ul><li>NoReturn</li></ul></li></ul><h3 id="Matcher-pause" tabindex="-1"><a class="header-anchor" href="#Matcher-pause"><span><em>classmethod</em> <code>pause(prompt=None, **kwargs)</code></span></a></h3><ul><li><p><strong>说明:</strong> 发送一条消息给当前交互用户并暂停事件响应器，在接收用户新的一条消息后继续下一个处理函数</p></li><li><p><strong>参数</strong></p><ul><li><p><code>prompt</code> (str | <a class="route-link" href="/nonebot2/version-2.3.3/api/adapters/#Message">Message</a> | <a class="route-link" href="/nonebot2/version-2.3.3/api/adapters/#MessageSegment">MessageSegment</a> | <a class="route-link" href="/nonebot2/version-2.3.3/api/adapters/#MessageTemplate">MessageTemplate</a> | None): 消息内容</p></li><li><p><code>**kwargs</code>: <a class="route-link" href="/nonebot2/version-2.3.3/api/adapters/#Bot-send">Bot.send</a> 的参数， 请参考对应 adapter 的 bot 对象 api</p></li></ul></li><li><p><strong>返回</strong></p><ul><li>NoReturn</li></ul></li></ul><h3 id="Matcher-reject" tabindex="-1"><a class="header-anchor" href="#Matcher-reject"><span><em>classmethod</em> <code>reject(prompt=None, **kwargs)</code></span></a></h3><ul><li><p><strong>说明:</strong> 最近使用 <code>got</code> / <code>receive</code> 接收的消息不符合预期， 发送一条消息给当前交互用户并将当前事件处理流程中断在当前位置，在接收用户新的一个事件后从头开始执行当前处理函数</p></li><li><p><strong>参数</strong></p><ul><li><p><code>prompt</code> (str | <a class="route-link" href="/nonebot2/version-2.3.3/api/adapters/#Message">Message</a> | <a class="route-link" href="/nonebot2/version-2.3.3/api/adapters/#MessageSegment">MessageSegment</a> | <a class="route-link" href="/nonebot2/version-2.3.3/api/adapters/#MessageTemplate">MessageTemplate</a> | None): 消息内容</p></li><li><p><code>**kwargs</code>: <a class="route-link" href="/nonebot2/version-2.3.3/api/adapters/#Bot-send">Bot.send</a> 的参数， 请参考对应 adapter 的 bot 对象 api</p></li></ul></li><li><p><strong>返回</strong></p><ul><li>NoReturn</li></ul></li></ul><h3 id="Matcher-reject-arg" tabindex="-1"><a class="header-anchor" href="#Matcher-reject-arg"><span><em>classmethod</em> <code>reject_arg(key, prompt=None, **kwargs)</code></span></a></h3><ul><li><p><strong>说明:</strong> 最近使用 <code>got</code> 接收的消息不符合预期， 发送一条消息给当前交互用户并将当前事件处理流程中断在当前位置，在接收用户新的一条消息后从头开始执行当前处理函数</p></li><li><p><strong>参数</strong></p><ul><li><p><code>key</code> (str): 参数名</p></li><li><p><code>prompt</code> (str | <a class="route-link" href="/nonebot2/version-2.3.3/api/adapters/#Message">Message</a> | <a class="route-link" href="/nonebot2/version-2.3.3/api/adapters/#MessageSegment">MessageSegment</a> | <a class="route-link" href="/nonebot2/version-2.3.3/api/adapters/#MessageTemplate">MessageTemplate</a> | None): 消息内容</p></li><li><p><code>**kwargs</code>: <a class="route-link" href="/nonebot2/version-2.3.3/api/adapters/#Bot-send">Bot.send</a> 的参数， 请参考对应 adapter 的 bot 对象 api</p></li></ul></li><li><p><strong>返回</strong></p><ul><li>NoReturn</li></ul></li></ul><h3 id="Matcher-reject-receive" tabindex="-1"><a class="header-anchor" href="#Matcher-reject-receive"><span><em>classmethod</em> <code>reject_receive(id=&quot;&quot;, prompt=None, **kwargs)</code></span></a></h3><ul><li><p><strong>说明:</strong> 最近使用 <code>receive</code> 接收的消息不符合预期， 发送一条消息给当前交互用户并将当前事件处理流程中断在当前位置，在接收用户新的一个事件后从头开始执行当前处理函数</p></li><li><p><strong>参数</strong></p><ul><li><p><code>id</code> (str): 消息 id</p></li><li><p><code>prompt</code> (str | <a class="route-link" href="/nonebot2/version-2.3.3/api/adapters/#Message">Message</a> | <a class="route-link" href="/nonebot2/version-2.3.3/api/adapters/#MessageSegment">MessageSegment</a> | <a class="route-link" href="/nonebot2/version-2.3.3/api/adapters/#MessageTemplate">MessageTemplate</a> | None): 消息内容</p></li><li><p><code>**kwargs</code>: <a class="route-link" href="/nonebot2/version-2.3.3/api/adapters/#Bot-send">Bot.send</a> 的参数， 请参考对应 adapter 的 bot 对象 api</p></li></ul></li><li><p><strong>返回</strong></p><ul><li>NoReturn</li></ul></li></ul><h3 id="Matcher-skip" tabindex="-1"><a class="header-anchor" href="#Matcher-skip"><span><em>classmethod</em> <code>skip()</code></span></a></h3><ul><li><p><strong>说明</strong></p><p>跳过当前事件处理函数，继续下一个处理函数</p><p>通常在事件处理函数的依赖中使用。</p></li><li><p><strong>参数</strong></p><p>empty</p></li><li><p><strong>返回</strong></p><ul><li>NoReturn</li></ul></li></ul><h3 id="Matcher-get-receive" tabindex="-1"><a class="header-anchor" href="#Matcher-get-receive"><span><em>method</em> <code>get_receive(id, default=None)</code></span></a></h3><ul><li><p><strong>说明</strong></p><p>获取一个 <code>receive</code> 事件</p><p>如果没有找到对应的事件，返回 <code>default</code> 值</p></li><li><p><strong>重载</strong></p><p><strong>1.</strong> <code>(id) -&gt; Event | None</code></p><ul><li><p><strong>参数</strong></p><ul><li><code>id</code> (str)</li></ul></li><li><p><strong>返回</strong></p><ul><li><a class="route-link" href="/nonebot2/version-2.3.3/api/adapters/#Event">Event</a> | None</li></ul></li></ul><p><strong>2.</strong> <code>(id, default) -&gt; Event | T</code></p><ul><li><p><strong>参数</strong></p><ul><li><p><code>id</code> (str)</p></li><li><p><code>default</code> (T)</p></li></ul></li><li><p><strong>返回</strong></p><ul><li><a class="route-link" href="/nonebot2/version-2.3.3/api/adapters/#Event">Event</a> | T</li></ul></li></ul></li></ul><h3 id="Matcher-set-receive" tabindex="-1"><a class="header-anchor" href="#Matcher-set-receive"><span><em>method</em> <code>set_receive(id, event)</code></span></a></h3><ul><li><p><strong>说明:</strong> 设置一个 <code>receive</code> 事件</p></li><li><p><strong>参数</strong></p><ul><li><p><code>id</code> (str)</p></li><li><p><code>event</code> (<a class="route-link" href="/nonebot2/version-2.3.3/api/adapters/#Event">Event</a>)</p></li></ul></li><li><p><strong>返回</strong></p><ul><li>None</li></ul></li></ul><h3 id="Matcher-get-last-receive" tabindex="-1"><a class="header-anchor" href="#Matcher-get-last-receive"><span><em>method</em> <code>get_last_receive(default=None)</code></span></a></h3><ul><li><p><strong>说明</strong></p><p>获取最近一次 <code>receive</code> 事件</p><p>如果没有事件，返回 <code>default</code> 值</p></li><li><p><strong>重载</strong></p><p><strong>1.</strong> <code>() -&gt; Event | None</code></p><ul><li><p><strong>参数</strong></p><p>empty</p></li><li><p><strong>返回</strong></p><ul><li><a class="route-link" href="/nonebot2/version-2.3.3/api/adapters/#Event">Event</a> | None</li></ul></li></ul><p><strong>2.</strong> <code>(default) -&gt; Event | T</code></p><ul><li><p><strong>参数</strong></p><ul><li><code>default</code> (T)</li></ul></li><li><p><strong>返回</strong></p><ul><li><a class="route-link" href="/nonebot2/version-2.3.3/api/adapters/#Event">Event</a> | T</li></ul></li></ul></li></ul><h3 id="Matcher-get-arg" tabindex="-1"><a class="header-anchor" href="#Matcher-get-arg"><span><em>method</em> <code>get_arg(key, default=None)</code></span></a></h3><ul><li><p><strong>说明</strong></p><p>获取一个 <code>got</code> 消息</p><p>如果没有找到对应的消息，返回 <code>default</code> 值</p></li><li><p><strong>重载</strong></p><p><strong>1.</strong> <code>(key) -&gt; Message | None</code></p><ul><li><p><strong>参数</strong></p><ul><li><code>key</code> (str)</li></ul></li><li><p><strong>返回</strong></p><ul><li><a class="route-link" href="/nonebot2/version-2.3.3/api/adapters/#Message">Message</a> | None</li></ul></li></ul><p><strong>2.</strong> <code>(key, default) -&gt; Message | T</code></p><ul><li><p><strong>参数</strong></p><ul><li><p><code>key</code> (str)</p></li><li><p><code>default</code> (T)</p></li></ul></li><li><p><strong>返回</strong></p><ul><li><a class="route-link" href="/nonebot2/version-2.3.3/api/adapters/#Message">Message</a> | T</li></ul></li></ul></li></ul><h3 id="Matcher-set-arg" tabindex="-1"><a class="header-anchor" href="#Matcher-set-arg"><span><em>method</em> <code>set_arg(key, message)</code></span></a></h3><ul><li><p><strong>说明:</strong> 设置一个 <code>got</code> 消息</p></li><li><p><strong>参数</strong></p><ul><li><p><code>key</code> (str)</p></li><li><p><code>message</code> (<a class="route-link" href="/nonebot2/version-2.3.3/api/adapters/#Message">Message</a>)</p></li></ul></li><li><p><strong>返回</strong></p><ul><li>None</li></ul></li></ul><h3 id="Matcher-set-target" tabindex="-1"><a class="header-anchor" href="#Matcher-set-target"><span><em>method</em> <code>set_target(target, cache=True)</code></span></a></h3><ul><li><p><strong>参数</strong></p><ul><li><p><code>target</code> (str)</p></li><li><p><code>cache</code> (bool)</p></li></ul></li><li><p><strong>返回</strong></p><ul><li>None</li></ul></li></ul><h3 id="Matcher-get-target" tabindex="-1"><a class="header-anchor" href="#Matcher-get-target"><span><em>method</em> <code>get_target(default=None)</code></span></a></h3><ul><li><p><strong>重载</strong></p><p><strong>1.</strong> <code>() -&gt; str | None</code></p><ul><li><p><strong>参数</strong></p><p>empty</p></li><li><p><strong>返回</strong></p><ul><li>str | None</li></ul></li></ul><p><strong>2.</strong> <code>(default) -&gt; str | T</code></p><ul><li><p><strong>参数</strong></p><ul><li><code>default</code> (T)</li></ul></li><li><p><strong>返回</strong></p><ul><li>str | T</li></ul></li></ul></li></ul><h3 id="Matcher-stop-propagation" tabindex="-1"><a class="header-anchor" href="#Matcher-stop-propagation"><span><em>method</em> <code>stop_propagation()</code></span></a></h3><ul><li><p><strong>说明:</strong> 阻止事件传播</p></li><li><p><strong>参数</strong></p><p>empty</p></li><li><p><strong>返回</strong></p><ul><li>untyped</li></ul></li></ul><h3 id="Matcher-update-type" tabindex="-1"><a class="header-anchor" href="#Matcher-update-type"><span><em>async method</em> <code>update_type(bot, event, stack=None, dependency_cache=None)</code></span></a></h3><ul><li><p><strong>参数</strong></p><ul><li><p><code>bot</code> (<a class="route-link" href="/nonebot2/version-2.3.3/api/adapters/#Bot">Bot</a>)</p></li><li><p><code>event</code> (<a class="route-link" href="/nonebot2/version-2.3.3/api/adapters/#Event">Event</a>)</p></li><li><p><code>stack</code> (AsyncExitStack | None)</p></li><li><p><code>dependency_cache</code> (<a class="route-link" href="/nonebot2/version-2.3.3/api/typing.html#T-DependencyCache">T_DependencyCache</a> | None)</p></li></ul></li><li><p><strong>返回</strong></p><ul><li>str</li></ul></li></ul><h3 id="Matcher-update-permission" tabindex="-1"><a class="header-anchor" href="#Matcher-update-permission"><span><em>async method</em> <code>update_permission(bot, event, stack=None, dependency_cache=None)</code></span></a></h3><ul><li><p><strong>参数</strong></p><ul><li><p><code>bot</code> (<a class="route-link" href="/nonebot2/version-2.3.3/api/adapters/#Bot">Bot</a>)</p></li><li><p><code>event</code> (<a class="route-link" href="/nonebot2/version-2.3.3/api/adapters/#Event">Event</a>)</p></li><li><p><code>stack</code> (AsyncExitStack | None)</p></li><li><p><code>dependency_cache</code> (<a class="route-link" href="/nonebot2/version-2.3.3/api/typing.html#T-DependencyCache">T_DependencyCache</a> | None)</p></li></ul></li><li><p><strong>返回</strong></p><ul><li><a class="route-link" href="/nonebot2/version-2.3.3/api/permission.html#Permission">Permission</a></li></ul></li></ul><h3 id="Matcher-resolve-reject" tabindex="-1"><a class="header-anchor" href="#Matcher-resolve-reject"><span><em>async method</em> <code>resolve_reject()</code></span></a></h3><ul><li><p><strong>参数</strong></p><p>empty</p></li><li><p><strong>返回</strong></p><ul><li>untyped</li></ul></li></ul><h3 id="Matcher-ensure-context" tabindex="-1"><a class="header-anchor" href="#Matcher-ensure-context"><span><em>method</em> <code>ensure_context(bot, event)</code></span></a></h3><ul><li><p><strong>参数</strong></p><ul><li><p><code>bot</code> (<a class="route-link" href="/nonebot2/version-2.3.3/api/adapters/#Bot">Bot</a>)</p></li><li><p><code>event</code> (<a class="route-link" href="/nonebot2/version-2.3.3/api/adapters/#Event">Event</a>)</p></li></ul></li><li><p><strong>返回</strong></p><ul><li>untyped</li></ul></li></ul><h3 id="Matcher-simple-run" tabindex="-1"><a class="header-anchor" href="#Matcher-simple-run"><span><em>async method</em> <code>simple_run(bot, event, state, stack=None, dependency_cache=None)</code></span></a></h3><ul><li><p><strong>参数</strong></p><ul><li><p><code>bot</code> (<a class="route-link" href="/nonebot2/version-2.3.3/api/adapters/#Bot">Bot</a>)</p></li><li><p><code>event</code> (<a class="route-link" href="/nonebot2/version-2.3.3/api/adapters/#Event">Event</a>)</p></li><li><p><code>state</code> (<a class="route-link" href="/nonebot2/version-2.3.3/api/typing.html#T-State">T_State</a>)</p></li><li><p><code>stack</code> (AsyncExitStack | None)</p></li><li><p><code>dependency_cache</code> (<a class="route-link" href="/nonebot2/version-2.3.3/api/typing.html#T-DependencyCache">T_DependencyCache</a> | None)</p></li></ul></li><li><p><strong>返回</strong></p><ul><li>untyped</li></ul></li></ul><h3 id="Matcher-run" tabindex="-1"><a class="header-anchor" href="#Matcher-run"><span><em>async method</em> <code>run(bot, event, state, stack=None, dependency_cache=None)</code></span></a></h3><ul><li><p><strong>参数</strong></p><ul><li><p><code>bot</code> (<a class="route-link" href="/nonebot2/version-2.3.3/api/adapters/#Bot">Bot</a>)</p></li><li><p><code>event</code> (<a class="route-link" href="/nonebot2/version-2.3.3/api/adapters/#Event">Event</a>)</p></li><li><p><code>state</code> (<a class="route-link" href="/nonebot2/version-2.3.3/api/typing.html#T-State">T_State</a>)</p></li><li><p><code>stack</code> (AsyncExitStack | None)</p></li><li><p><code>dependency_cache</code> (<a class="route-link" href="/nonebot2/version-2.3.3/api/typing.html#T-DependencyCache">T_DependencyCache</a> | None)</p></li></ul></li><li><p><strong>返回</strong></p><ul><li>untyped</li></ul></li></ul></div></div></div></li></ul></li>',1))]),e[132]||(e[132]=r('<h2 id="matchers" tabindex="-1"><a class="header-anchor" href="#matchers"><span><em>var</em> <code>matchers</code></span></a></h2><ul><li><strong>类型:</strong> untyped</li></ul><h2 id="MatcherManager" tabindex="-1"><a class="header-anchor" href="#MatcherManager"><span><em>class</em> <code>MatcherManager()</code></span></a></h2><ul><li><p><strong>说明</strong></p><p>事件响应器管理器</p><p>实现了常用字典操作，用于管理事件响应器。</p></li><li><p><strong>参数</strong></p><p>empty</p></li></ul><h3 id="MatcherManager-keys" tabindex="-1"><a class="header-anchor" href="#MatcherManager-keys"><span><em>method</em> <code>keys()</code></span></a></h3><ul><li><p><strong>参数</strong></p><p>empty</p></li><li><p><strong>返回</strong></p><ul><li>KeysView[int]</li></ul></li></ul><h3 id="MatcherManager-values" tabindex="-1"><a class="header-anchor" href="#MatcherManager-values"><span><em>method</em> <code>values()</code></span></a></h3><ul><li><p><strong>参数</strong></p><p>empty</p></li><li><p><strong>返回</strong></p><ul><li>ValuesView[list[type[<a href="#Matcher">Matcher</a>]]]</li></ul></li></ul><h3 id="MatcherManager-items" tabindex="-1"><a class="header-anchor" href="#MatcherManager-items"><span><em>method</em> <code>items()</code></span></a></h3><ul><li><p><strong>参数</strong></p><p>empty</p></li><li><p><strong>返回</strong></p><ul><li>ItemsView[int, list[type[<a href="#Matcher">Matcher</a>]]]</li></ul></li></ul><h3 id="MatcherManager-get" tabindex="-1"><a class="header-anchor" href="#MatcherManager-get"><span><em>method</em> <code>get(key, default=None)</code></span></a></h3><ul><li><p><strong>重载</strong></p><p><strong>1.</strong> <code>(key) -&gt; list[type[Matcher]] | None</code></p><ul><li><p><strong>参数</strong></p><ul><li><code>key</code> (int)</li></ul></li><li><p><strong>返回</strong></p><ul><li>list[type[<a href="#Matcher">Matcher</a>]] | None</li></ul></li></ul><p><strong>2.</strong> <code>(key, default) -&gt; list[type[Matcher]] | T</code></p><ul><li><p><strong>参数</strong></p><ul><li><p><code>key</code> (int)</p></li><li><p><code>default</code> (T)</p></li></ul></li><li><p><strong>返回</strong></p><ul><li>list[type[<a href="#Matcher">Matcher</a>]] | T</li></ul></li></ul></li></ul><h3 id="MatcherManager-pop" tabindex="-1"><a class="header-anchor" href="#MatcherManager-pop"><span><em>method</em> <code>pop(key)</code></span></a></h3><ul><li><p><strong>参数</strong></p><ul><li><code>key</code> (int)</li></ul></li><li><p><strong>返回</strong></p><ul><li>list[type[<a href="#Matcher">Matcher</a>]]</li></ul></li></ul><h3 id="MatcherManager-popitem" tabindex="-1"><a class="header-anchor" href="#MatcherManager-popitem"><span><em>method</em> <code>popitem()</code></span></a></h3><ul><li><p><strong>参数</strong></p><p>empty</p></li><li><p><strong>返回</strong></p><ul><li>tuple[int, list[type[<a href="#Matcher">Matcher</a>]]]</li></ul></li></ul><h3 id="MatcherManager-clear" tabindex="-1"><a class="header-anchor" href="#MatcherManager-clear"><span><em>method</em> <code>clear()</code></span></a></h3><ul><li><p><strong>参数</strong></p><p>empty</p></li><li><p><strong>返回</strong></p><ul><li>None</li></ul></li></ul><h3 id="MatcherManager-update" tabindex="-1"><a class="header-anchor" href="#MatcherManager-update"><span><em>method</em> <code>update(__m)</code></span></a></h3><ul><li><p><strong>参数</strong></p><ul><li><code>__m</code> (MutableMapping[int, list[type[<a href="#Matcher">Matcher</a>]]])</li></ul></li><li><p><strong>返回</strong></p><ul><li>None</li></ul></li></ul><h3 id="MatcherManager-setdefault" tabindex="-1"><a class="header-anchor" href="#MatcherManager-setdefault"><span><em>method</em> <code>setdefault(key, default)</code></span></a></h3><ul><li><p><strong>参数</strong></p><ul><li><p><code>key</code> (int)</p></li><li><p><code>default</code> (list[type[<a href="#Matcher">Matcher</a>]])</p></li></ul></li><li><p><strong>返回</strong></p><ul><li>list[type[<a href="#Matcher">Matcher</a>]]</li></ul></li></ul><h3 id="MatcherManager-set-provider" tabindex="-1"><a class="header-anchor" href="#MatcherManager-set-provider"><span><em>method</em> <code>set_provider(provider_class)</code></span></a></h3><ul><li><p><strong>说明:</strong> 设置事件响应器存储器</p></li><li><p><strong>参数</strong></p><ul><li><code>provider_class</code> (type[<a href="#MatcherProvider">MatcherProvider</a>]): 事件响应器存储器类</li></ul></li><li><p><strong>返回</strong></p><ul><li>None</li></ul></li></ul><h2 id="MatcherProvider" tabindex="-1"><a class="header-anchor" href="#MatcherProvider"><span><em>abstract class</em> <code>MatcherProvider(matchers)</code></span></a></h2><ul><li><p><strong>说明:</strong> 事件响应器存储器基类</p></li><li><p><strong>参数</strong></p><ul><li><code>matchers</code> (Mapping[int, list[type[<a href="#Matcher">Matcher</a>]]]): 当前存储器中已有的事件响应器</li></ul></li></ul><h2 id="DEFAULT-PROVIDER-CLASS" tabindex="-1"><a class="header-anchor" href="#DEFAULT-PROVIDER-CLASS"><span><em>var</em> <code>DEFAULT_PROVIDER_CLASS</code></span></a></h2><ul><li><p><strong>类型:</strong> untyped</p></li><li><p><strong>说明:</strong> 默认存储器类型</p></li></ul>',28))])}const c=s(u,[["render",g],["__file","matcher.html.vue"]]),v=JSON.parse('{"path":"/version-2.3.3/api/matcher.html","title":"nonebot.matcher","lang":"zh-CN","frontmatter":{"sidebar_position":3,"description":"nonebot.matcher 模块","head":[["meta",{"property":"og:url","content":"https://LincDocs.github.io/nonebot2/version-2.3.3/api/matcher.html"}],["meta",{"property":"og:site_name","content":"nonebot2"}],["meta",{"property":"og:title","content":"nonebot.matcher"}],["meta",{"property":"og:description","content":"nonebot.matcher 模块"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"nonebot.matcher\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincDocs\\",\\"url\\":\\"https://github.com/LincDocs/nonebot2/\\"}]}"]]},"git":{},"readingTime":{"minutes":8.39,"words":2517},"filePathRelative":"version-2.3.3/api/matcher.md","excerpt":"\\n<p>本模块实现事件响应器的创建与运行，并提供一些快捷方法来帮助用户更好的与机器人进行对话。</p>\\n<h2><em>class</em> <code>Matcher()</code></h2>\\n<ul>\\n<li>\\n<p><strong>说明:</strong> 事件响应器类</p>\\n</li>\\n<li>\\n<p><strong>参数</strong></p>\\n<p>empty</p>\\n</li>\\n</ul>\\n<h3><em>class-var</em> <code>type</code></h3>\\n<ul>\\n<li>\\n<p><strong>类型:</strong> ClassVar[str]</p>\\n</li>\\n<li>\\n<p><strong>说明:</strong> 事件响应器类型</p>\\n</li>\\n</ul>","bioChainData":{"outlink":[{"title":"rule","link":"version-2.3.3/api/rule.html"},{"title":"permission","link":"version-2.3.3/api/permission.html"},{"title":"index","link":"version-2.3.3/api/dependencies/index.html"},{"title":"typing","link":"version-2.3.3/api/typing.html"},{"title":"model","link":"version-2.3.3/api/plugin/model.html"},{"title":"index","link":"version-2.3.3/api/adapters/index.html"}],"backlink":[{"title":"exception","link":"version-2.3.3/api/exception.html"},{"title":"message","link":"version-2.3.3/api/message.html"},{"title":"params","link":"version-2.3.3/api/params.html"},{"title":"permission","link":"version-2.3.3/api/permission.html"},{"title":"rule","link":"version-2.3.3/api/rule.html"},{"title":"model","link":"version-2.3.3/api/plugin/model.html"},{"title":"on","link":"version-2.3.3/api/plugin/on.html"}],"localMap":{"nodes":[{"id":"version-2.3.3/api/matcher.md","value":{"title":"matcher","path":"version-2.3.3/api/matcher.md","outlink":["version-2.3.3/api/rule.md","version-2.3.3/api/permission.md","version-2.3.3/api/dependencies/index.md","version-2.3.3/api/typing.md","version-2.3.3/api/plugin/model.md","version-2.3.3/api/adapters/index.md"],"backlink":["version-2.3.3/api/exception.md","version-2.3.3/api/message.md","version-2.3.3/api/params.md","version-2.3.3/api/permission.md","version-2.3.3/api/rule.md","version-2.3.3/api/plugin/model.md","version-2.3.3/api/plugin/on.md"]}},{"id":"version-2.3.3/api/rule.md","value":{"title":"rule","path":"version-2.3.3/api/rule.md","outlink":[],"backlink":[]}},{"id":"version-2.3.3/api/permission.md","value":{"title":"permission","path":"version-2.3.3/api/permission.md","outlink":[],"backlink":[]}},{"id":"version-2.3.3/api/dependencies/index.md","value":{"title":"index","path":"version-2.3.3/api/dependencies/index.md","outlink":[],"backlink":[]}},{"id":"version-2.3.3/api/typing.md","value":{"title":"typing","path":"version-2.3.3/api/typing.md","outlink":[],"backlink":[]}},{"id":"version-2.3.3/api/plugin/model.md","value":{"title":"model","path":"version-2.3.3/api/plugin/model.md","outlink":[],"backlink":[]}},{"id":"version-2.3.3/api/adapters/index.md","value":{"title":"index","path":"version-2.3.3/api/adapters/index.md","outlink":[],"backlink":[]}},{"id":"version-2.3.3/api/exception.md","value":{"title":"exception","path":"version-2.3.3/api/exception.md","outlink":[],"backlink":[]}},{"id":"version-2.3.3/api/message.md","value":{"title":"message","path":"version-2.3.3/api/message.md","outlink":[],"backlink":[]}},{"id":"version-2.3.3/api/params.md","value":{"title":"params","path":"version-2.3.3/api/params.md","outlink":[],"backlink":[]}},{"id":"version-2.3.3/api/plugin/on.md","value":{"title":"on","path":"version-2.3.3/api/plugin/on.md","outlink":[],"backlink":[]}}],"links":[{"source":"version-2.3.3/api/matcher.md","target":"version-2.3.3/api/rule.md"},{"source":"version-2.3.3/api/matcher.md","target":"version-2.3.3/api/permission.md"},{"source":"version-2.3.3/api/matcher.md","target":"version-2.3.3/api/dependencies/index.md"},{"source":"version-2.3.3/api/matcher.md","target":"version-2.3.3/api/typing.md"},{"source":"version-2.3.3/api/matcher.md","target":"version-2.3.3/api/plugin/model.md"},{"source":"version-2.3.3/api/matcher.md","target":"version-2.3.3/api/adapters/index.md"},{"source":"version-2.3.3/api/exception.md","target":"version-2.3.3/api/matcher.md"},{"source":"version-2.3.3/api/message.md","target":"version-2.3.3/api/matcher.md"},{"source":"version-2.3.3/api/params.md","target":"version-2.3.3/api/matcher.md"},{"source":"version-2.3.3/api/permission.md","target":"version-2.3.3/api/matcher.md"},{"source":"version-2.3.3/api/rule.md","target":"version-2.3.3/api/matcher.md"},{"source":"version-2.3.3/api/plugin/model.md","target":"version-2.3.3/api/matcher.md"},{"source":"version-2.3.3/api/plugin/on.md","target":"version-2.3.3/api/matcher.md"}]}}}');export{c as comp,v as data};
