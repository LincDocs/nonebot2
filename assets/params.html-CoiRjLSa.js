import{_ as p,e as o,f as a,g as n,h as i,i as s,j as t,r,o as d}from"./app-DlBE6PBf.js";const u={};function g(m,l){const e=r("RouteLink");return d(),o("div",null,[l[63]||(l[63]=a('<h1 id="nonebot-params" tabindex="-1"><a class="header-anchor" href="#nonebot-params"><span>nonebot.params</span></a></h1><p>本模块定义了依赖注入的各类参数。</p><h2 id="Arg" tabindex="-1"><a class="header-anchor" href="#Arg"><span><em>def</em> <code>Arg(key=None)</code></span></a></h2><ul><li><p><strong>说明:</strong> Arg 参数消息</p></li><li><p><strong>参数</strong></p><ul><li><code>key</code> (str | None)</li></ul></li><li><p><strong>返回</strong></p><ul><li>Any</li></ul></li></ul><h2 id="ArgStr" tabindex="-1"><a class="header-anchor" href="#ArgStr"><span><em>def</em> <code>ArgStr(key=None)</code></span></a></h2><ul><li><p><strong>说明:</strong> Arg 参数消息文本</p></li><li><p><strong>参数</strong></p><ul><li><code>key</code> (str | None)</li></ul></li><li><p><strong>返回</strong></p><ul><li>str</li></ul></li></ul><h2 id="Depends" tabindex="-1"><a class="header-anchor" href="#Depends"><span><em>def</em> <code>Depends(dependency=None, *, use_cache=True, validate=False)</code></span></a></h2>',7)),n("ul",null,[l[7]||(l[7]=n("li",null,[n("p",null,[n("strong",null,"说明:"),i(" 子依赖装饰器")])],-1)),n("li",null,[l[6]||(l[6]=n("p",null,[n("strong",null,"参数")],-1)),n("ul",null,[n("li",null,[n("p",null,[l[1]||(l[1]=n("code",null,"dependency",-1)),l[2]||(l[2]=i(" (")),s(e,{to:"/version-2.4.0/api/typing.html#T-Handler"},{default:t(()=>l[0]||(l[0]=[i("T_Handler")])),_:1}),l[3]||(l[3]=i(" | None): 依赖函数。默认为参数的类型注释。"))])]),l[4]||(l[4]=n("li",null,[n("p",null,[n("code",null,"use_cache"),i(" (bool): 是否使用缓存。默认为 "),n("code",null,"True"),i("。")])],-1)),l[5]||(l[5]=n("li",null,[n("p",null,[n("code",null,"validate"),i(" (bool | PydanticFieldInfo): 是否使用 Pydantic 类型校验。默认为 "),n("code",null,"False"),i("。")])],-1))])]),l[8]||(l[8]=a(`<li><p><strong>返回</strong></p><ul><li>Any</li></ul></li><li><p><strong>用法</strong></p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">def</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> depend_func</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() -&gt; Any:</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;"> ...</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">def</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> depend_gen_func</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">():</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    try</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        yield</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;"> ...</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    finally</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">        ...</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">async</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> def</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> handler</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic;">    param_name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;"> Any </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#61AFEF;"> Depends</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;">(depend_func)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#D19A66;--shiki-dark-font-style:italic;">    gen</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;"> Any </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#61AFEF;"> Depends</span><span style="--shiki-light:#986801;--shiki-dark:#ABB2BF;">(depend_gen_func)</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">):</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">    ...</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li>`,2))]),l[64]||(l[64]=a('<h2 id="ArgParam" tabindex="-1"><a class="header-anchor" href="#ArgParam"><span><em>class</em> <code>ArgParam(*args, key, type, **kwargs)</code></span></a></h2><ul><li><p><strong>说明</strong></p><p>Arg 注入参数</p><p>本注入解析事件响应器操作 <code>got</code> 所获取的参数。</p><p>可以通过 <code>Arg</code>、<code>ArgStr</code>、<code>ArgPlainText</code> 等函数参数 <code>key</code> 指定获取的参数，<br> 留空则会根据参数名称获取。</p></li><li><p><strong>参数</strong></p><ul><li><p><code>*args</code></p></li><li><p><code>key</code> (str)</p></li><li><p><code>type</code> (Literal[&#39;message&#39;, &#39;str&#39;, &#39;plaintext&#39;])</p></li><li><p><code>**kwargs</code> (Any)</p></li></ul></li></ul><h2 id="BotParam" tabindex="-1"><a class="header-anchor" href="#BotParam"><span><em>class</em> <code>BotParam(*args, checker=None, **kwargs)</code></span></a></h2>',3)),n("ul",null,[n("li",null,[l[14]||(l[14]=n("p",null,[n("strong",null,"说明")],-1)),l[15]||(l[15]=n("p",null,"注入参数。",-1)),n("p",null,[l[10]||(l[10]=i("本注入解析所有类型为且仅为 ")),s(e,{to:"/version-2.4.0/api/adapters/#Bot"},{default:t(()=>l[9]||(l[9]=[i("Bot")])),_:1}),l[11]||(l[11]=i(" 及其子类或 ")),l[12]||(l[12]=n("code",null,"None",-1)),l[13]||(l[13]=i(" 的参数。"))]),l[16]||(l[16]=n("p",null,[i("为保证兼容性，本注入还会解析名为 "),n("code",null,"bot"),i(" 且没有类型注解的参数。")],-1))]),n("li",null,[l[23]||(l[23]=n("p",null,[n("strong",null,"参数")],-1)),n("ul",null,[l[21]||(l[21]=n("li",null,[n("p",null,[n("code",null,"*args")])],-1)),n("li",null,[n("p",null,[l[18]||(l[18]=n("code",null,"checker",-1)),l[19]||(l[19]=i(" (")),s(e,{to:"/version-2.4.0/api/compat.html#ModelField"},{default:t(()=>l[17]||(l[17]=[i("ModelField")])),_:1}),l[20]||(l[20]=i(" | None)"))])]),l[22]||(l[22]=n("li",null,[n("p",null,[n("code",null,"**kwargs"),i(" (Any)")])],-1))])])]),l[65]||(l[65]=n("h2",{id:"EventParam",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#EventParam"},[n("span",null,[n("em",null,"class"),i(),n("code",null,"EventParam(*args, checker=None, **kwargs)")])])],-1)),n("ul",null,[n("li",null,[l[29]||(l[29]=n("p",null,[n("strong",null,"说明")],-1)),l[30]||(l[30]=n("p",null,"注入参数",-1)),n("p",null,[l[25]||(l[25]=i("本注入解析所有类型为且仅为 ")),s(e,{to:"/version-2.4.0/api/adapters/#Event"},{default:t(()=>l[24]||(l[24]=[i("Event")])),_:1}),l[26]||(l[26]=i(" 及其子类或 ")),l[27]||(l[27]=n("code",null,"None",-1)),l[28]||(l[28]=i(" 的参数。"))]),l[31]||(l[31]=n("p",null,[i("为保证兼容性，本注入还会解析名为 "),n("code",null,"event"),i(" 且没有类型注解的参数。")],-1))]),n("li",null,[l[38]||(l[38]=n("p",null,[n("strong",null,"参数")],-1)),n("ul",null,[l[36]||(l[36]=n("li",null,[n("p",null,[n("code",null,"*args")])],-1)),n("li",null,[n("p",null,[l[33]||(l[33]=n("code",null,"checker",-1)),l[34]||(l[34]=i(" (")),s(e,{to:"/version-2.4.0/api/compat.html#ModelField"},{default:t(()=>l[32]||(l[32]=[i("ModelField")])),_:1}),l[35]||(l[35]=i(" | None)"))])]),l[37]||(l[37]=n("li",null,[n("p",null,[n("code",null,"**kwargs"),i(" (Any)")])],-1))])])]),l[66]||(l[66]=a('<h2 id="StateParam" tabindex="-1"><a class="header-anchor" href="#StateParam"><span><em>class</em> <code>StateParam(*args, validate=False, **kwargs)</code></span></a></h2><ul><li><p><strong>说明</strong></p><p>事件处理状态注入参数</p><p>本注入解析所有类型为 <code>T_State</code> 的参数。</p><p>为保证兼容性，本注入还会解析名为 <code>state</code> 且没有类型注解的参数。</p></li><li><p><strong>参数</strong></p><ul><li><p><code>*args</code></p></li><li><p><code>validate</code> (bool)</p></li><li><p><code>**kwargs</code> (Any)</p></li></ul></li></ul><h2 id="DependParam" tabindex="-1"><a class="header-anchor" href="#DependParam"><span><em>class</em> <code>DependParam(*args, dependent, use_cache, **kwargs)</code></span></a></h2>',3)),n("ul",null,[l[47]||(l[47]=n("li",null,[n("p",null,[n("strong",null,"说明")]),n("p",null,"子依赖注入参数。"),n("p",null,"本注入解析所有子依赖注入，然后将它们的返回值作为参数值传递给父依赖。"),n("p",null,"本注入应该具有最高优先级，因此应该在其他参数之前检查。")],-1)),n("li",null,[l[46]||(l[46]=n("p",null,[n("strong",null,"参数")],-1)),n("ul",null,[l[43]||(l[43]=n("li",null,[n("p",null,[n("code",null,"*args")])],-1)),n("li",null,[n("p",null,[l[40]||(l[40]=n("code",null,"dependent",-1)),l[41]||(l[41]=i(" (")),s(e,{to:"/version-2.4.0/api/dependencies/#Dependent"},{default:t(()=>l[39]||(l[39]=[i("Dependent")])),_:1}),l[42]||(l[42]=i("[Any])"))])]),l[44]||(l[44]=n("li",null,[n("p",null,[n("code",null,"use_cache"),i(" (bool)")])],-1)),l[45]||(l[45]=n("li",null,[n("p",null,[n("code",null,"**kwargs"),i(" (Any)")])],-1))])])]),l[67]||(l[67]=a('<h2 id="ArgPlainText" tabindex="-1"><a class="header-anchor" href="#ArgPlainText"><span><em>def</em> <code>ArgPlainText(key=None)</code></span></a></h2><ul><li><p><strong>说明:</strong> Arg 参数消息纯文本</p></li><li><p><strong>参数</strong></p><ul><li><code>key</code> (str | None)</li></ul></li><li><p><strong>返回</strong></p><ul><li>str</li></ul></li></ul><h2 id="DefaultParam" tabindex="-1"><a class="header-anchor" href="#DefaultParam"><span><em>class</em> <code>DefaultParam(*args, validate=False, **kwargs)</code></span></a></h2><ul><li><p><strong>说明</strong></p><p>默认值注入参数</p><p>本注入解析所有剩余未能解析且具有默认值的参数。</p><p>本注入参数应该具有最低优先级，因此应该在所有其他注入参数之后使用。</p></li><li><p><strong>参数</strong></p><ul><li><p><code>*args</code></p></li><li><p><code>validate</code> (bool)</p></li><li><p><code>**kwargs</code> (Any)</p></li></ul></li></ul><h2 id="MatcherParam" tabindex="-1"><a class="header-anchor" href="#MatcherParam"><span><em>class</em> <code>MatcherParam(*args, checker=None, **kwargs)</code></span></a></h2>',5)),n("ul",null,[n("li",null,[l[53]||(l[53]=n("p",null,[n("strong",null,"说明")],-1)),l[54]||(l[54]=n("p",null,"事件响应器实例注入参数",-1)),n("p",null,[l[49]||(l[49]=i("本注入解析所有类型为且仅为 ")),s(e,{to:"/version-2.4.0/api/matcher.html#Matcher"},{default:t(()=>l[48]||(l[48]=[i("Matcher")])),_:1}),l[50]||(l[50]=i(" 及其子类或 ")),l[51]||(l[51]=n("code",null,"None",-1)),l[52]||(l[52]=i(" 的参数。"))]),l[55]||(l[55]=n("p",null,[i("为保证兼容性，本注入还会解析名为 "),n("code",null,"matcher"),i(" 且没有类型注解的参数。")],-1))]),n("li",null,[l[62]||(l[62]=n("p",null,[n("strong",null,"参数")],-1)),n("ul",null,[l[60]||(l[60]=n("li",null,[n("p",null,[n("code",null,"*args")])],-1)),n("li",null,[n("p",null,[l[57]||(l[57]=n("code",null,"checker",-1)),l[58]||(l[58]=i(" (")),s(e,{to:"/version-2.4.0/api/compat.html#ModelField"},{default:t(()=>l[56]||(l[56]=[i("ModelField")])),_:1}),l[59]||(l[59]=i(" | None)"))])]),l[61]||(l[61]=n("li",null,[n("p",null,[n("code",null,"**kwargs"),i(" (Any)")])],-1))])])]),l[68]||(l[68]=a('<h2 id="ExceptionParam" tabindex="-1"><a class="header-anchor" href="#ExceptionParam"><span><em>class</em> <code>ExceptionParam(*args, validate=False, **kwargs)</code></span></a></h2><ul><li><p><strong>说明</strong></p><p>的异常注入参数</p><p>本注入解析所有类型为 <code>Exception</code> 或 <code>None</code> 的参数。</p><p>为保证兼容性，本注入还会解析名为 <code>exception</code> 且没有类型注解的参数。</p></li><li><p><strong>参数</strong></p><ul><li><p><code>*args</code></p></li><li><p><code>validate</code> (bool)</p></li><li><p><code>**kwargs</code> (Any)</p></li></ul></li></ul><h2 id="EventType" tabindex="-1"><a class="header-anchor" href="#EventType"><span><em>def</em> <code>EventType()</code></span></a></h2><ul><li><p><strong>说明:</strong> 类型参数</p></li><li><p><strong>参数</strong></p><p>empty</p></li><li><p><strong>返回</strong></p><ul><li>str</li></ul></li></ul><h2 id="EventMessage" tabindex="-1"><a class="header-anchor" href="#EventMessage"><span><em>def</em> <code>EventMessage()</code></span></a></h2><ul><li><p><strong>说明:</strong> 消息参数</p></li><li><p><strong>参数</strong></p><p>empty</p></li><li><p><strong>返回</strong></p><ul><li>Any</li></ul></li></ul><h2 id="EventPlainText" tabindex="-1"><a class="header-anchor" href="#EventPlainText"><span><em>def</em> <code>EventPlainText()</code></span></a></h2><ul><li><p><strong>说明:</strong> 纯文本消息参数</p></li><li><p><strong>参数</strong></p><p>empty</p></li><li><p><strong>返回</strong></p><ul><li>str</li></ul></li></ul><h2 id="EventToMe" tabindex="-1"><a class="header-anchor" href="#EventToMe"><span><em>def</em> <code>EventToMe()</code></span></a></h2><ul><li><p><strong>说明:</strong> <code>to_me</code> 参数</p></li><li><p><strong>参数</strong></p><p>empty</p></li><li><p><strong>返回</strong></p><ul><li>bool</li></ul></li></ul><h2 id="Command" tabindex="-1"><a class="header-anchor" href="#Command"><span><em>def</em> <code>Command()</code></span></a></h2><ul><li><p><strong>说明:</strong> 消息命令元组</p></li><li><p><strong>参数</strong></p><p>empty</p></li><li><p><strong>返回</strong></p><ul><li>tuple[str, ...]</li></ul></li></ul><h2 id="RawCommand" tabindex="-1"><a class="header-anchor" href="#RawCommand"><span><em>def</em> <code>RawCommand()</code></span></a></h2><ul><li><p><strong>说明:</strong> 消息命令文本</p></li><li><p><strong>参数</strong></p><p>empty</p></li><li><p><strong>返回</strong></p><ul><li>str</li></ul></li></ul><h2 id="CommandArg" tabindex="-1"><a class="header-anchor" href="#CommandArg"><span><em>def</em> <code>CommandArg()</code></span></a></h2><ul><li><p><strong>说明:</strong> 消息命令参数</p></li><li><p><strong>参数</strong></p><p>empty</p></li><li><p><strong>返回</strong></p><ul><li>Any</li></ul></li></ul><h2 id="CommandStart" tabindex="-1"><a class="header-anchor" href="#CommandStart"><span><em>def</em> <code>CommandStart()</code></span></a></h2><ul><li><p><strong>说明:</strong> 消息命令开头</p></li><li><p><strong>参数</strong></p><p>empty</p></li><li><p><strong>返回</strong></p><ul><li>str</li></ul></li></ul><h2 id="CommandWhitespace" tabindex="-1"><a class="header-anchor" href="#CommandWhitespace"><span><em>def</em> <code>CommandWhitespace()</code></span></a></h2><ul><li><p><strong>说明:</strong> 消息命令与参数之间的空白</p></li><li><p><strong>参数</strong></p><p>empty</p></li><li><p><strong>返回</strong></p><ul><li>str</li></ul></li></ul><h2 id="ShellCommandArgs" tabindex="-1"><a class="header-anchor" href="#ShellCommandArgs"><span><em>def</em> <code>ShellCommandArgs()</code></span></a></h2><ul><li><p><strong>说明:</strong> shell 命令解析后的参数字典</p></li><li><p><strong>参数</strong></p><p>empty</p></li><li><p><strong>返回</strong></p><ul><li>Any</li></ul></li></ul><h2 id="ShellCommandArgv" tabindex="-1"><a class="header-anchor" href="#ShellCommandArgv"><span><em>def</em> <code>ShellCommandArgv()</code></span></a></h2><ul><li><p><strong>说明:</strong> shell 命令原始参数列表</p></li><li><p><strong>参数</strong></p><p>empty</p></li><li><p><strong>返回</strong></p><ul><li>Any</li></ul></li></ul><h2 id="RegexMatched" tabindex="-1"><a class="header-anchor" href="#RegexMatched"><span><em>def</em> <code>RegexMatched()</code></span></a></h2><ul><li><p><strong>说明:</strong> 正则匹配结果</p></li><li><p><strong>参数</strong></p><p>empty</p></li><li><p><strong>返回</strong></p><ul><li>Match[str]</li></ul></li></ul><h2 id="RegexStr" tabindex="-1"><a class="header-anchor" href="#RegexStr"><span><em>def</em> <code>RegexStr(*groups)</code></span></a></h2><ul><li><p><strong>说明:</strong> 正则匹配结果文本</p></li><li><p><strong>重载</strong></p><p><strong>1.</strong> <code>(__group=0) -&gt; str</code></p><ul><li><p><strong>参数</strong></p><ul><li><code>__group</code> (Literal[0])</li></ul></li><li><p><strong>返回</strong></p><ul><li>str</li></ul></li></ul><p><strong>2.</strong> <code>(__group) -&gt; str | Any</code></p><ul><li><p><strong>参数</strong></p><ul><li><code>__group</code> (str | int)</li></ul></li><li><p><strong>返回</strong></p><ul><li>str | Any</li></ul></li></ul><p><strong>3.</strong> <code>(__group1, __group2, *groups) -&gt; tuple[str | Any, ...]</code></p><ul><li><p><strong>参数</strong></p><ul><li><p><code>__group1</code> (str | int)</p></li><li><p><code>__group2</code> (str | int)</p></li><li><p><code>*groups</code> (str | int)</p></li></ul></li><li><p><strong>返回</strong></p><ul><li>tuple[str | Any, ...]</li></ul></li></ul></li></ul><h2 id="RegexGroup" tabindex="-1"><a class="header-anchor" href="#RegexGroup"><span><em>def</em> <code>RegexGroup()</code></span></a></h2><ul><li><p><strong>说明:</strong> 正则匹配结果 group 元组</p></li><li><p><strong>参数</strong></p><p>empty</p></li><li><p><strong>返回</strong></p><ul><li>tuple[Any, ...]</li></ul></li></ul><h2 id="RegexDict" tabindex="-1"><a class="header-anchor" href="#RegexDict"><span><em>def</em> <code>RegexDict()</code></span></a></h2><ul><li><p><strong>说明:</strong> 正则匹配结果 group 字典</p></li><li><p><strong>参数</strong></p><p>empty</p></li><li><p><strong>返回</strong></p><ul><li>dict[str, Any]</li></ul></li></ul><h2 id="Startswith" tabindex="-1"><a class="header-anchor" href="#Startswith"><span><em>def</em> <code>Startswith()</code></span></a></h2><ul><li><p><strong>说明:</strong> 响应触发前缀</p></li><li><p><strong>参数</strong></p><p>empty</p></li><li><p><strong>返回</strong></p><ul><li>str</li></ul></li></ul><h2 id="Endswith" tabindex="-1"><a class="header-anchor" href="#Endswith"><span><em>def</em> <code>Endswith()</code></span></a></h2><ul><li><p><strong>说明:</strong> 响应触发后缀</p></li><li><p><strong>参数</strong></p><p>empty</p></li><li><p><strong>返回</strong></p><ul><li>str</li></ul></li></ul><h2 id="Fullmatch" tabindex="-1"><a class="header-anchor" href="#Fullmatch"><span><em>def</em> <code>Fullmatch()</code></span></a></h2><ul><li><p><strong>说明:</strong> 响应触发完整消息</p></li><li><p><strong>参数</strong></p><p>empty</p></li><li><p><strong>返回</strong></p><ul><li>str</li></ul></li></ul><h2 id="Keyword" tabindex="-1"><a class="header-anchor" href="#Keyword"><span><em>def</em> <code>Keyword()</code></span></a></h2><ul><li><p><strong>说明:</strong> 响应触发关键字</p></li><li><p><strong>参数</strong></p><p>empty</p></li><li><p><strong>返回</strong></p><ul><li>str</li></ul></li></ul><h2 id="Received" tabindex="-1"><a class="header-anchor" href="#Received"><span><em>def</em> <code>Received(id=None, default=None)</code></span></a></h2><ul><li><p><strong>说明:</strong> <code>receive</code> 事件参数</p></li><li><p><strong>参数</strong></p><ul><li><p><code>id</code> (str | None)</p></li><li><p><code>default</code> (Any)</p></li></ul></li><li><p><strong>返回</strong></p><ul><li>Any</li></ul></li></ul><h2 id="LastReceived" tabindex="-1"><a class="header-anchor" href="#LastReceived"><span><em>def</em> <code>LastReceived(default=None)</code></span></a></h2><ul><li><p><strong>说明:</strong> <code>last_receive</code> 事件参数</p></li><li><p><strong>参数</strong></p><ul><li><code>default</code> (Any)</li></ul></li><li><p><strong>返回</strong></p><ul><li>Any</li></ul></li></ul>',44))])}const k=p(u,[["render",g],["__file","params.html.vue"]]),c=JSON.parse('{"path":"/version-2.4.0/api/params.html","title":"nonebot.params","lang":"zh-CN","frontmatter":{"mdx":{"format":"md"},"sidebar_position":4,"description":"nonebot.params 模块","head":[["meta",{"property":"og:url","content":"https://LincDocs.github.io/nonebot2/version-2.4.0/api/params.html"}],["meta",{"property":"og:site_name","content":"nonebot2"}],["meta",{"property":"og:title","content":"nonebot.params"}],["meta",{"property":"og:description","content":"nonebot.params 模块"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"nonebot.params\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincDocs\\",\\"url\\":\\"https://github.com/LincDocs/nonebot2/\\"}]}"]]},"git":{},"readingTime":{"minutes":4.08,"words":1224},"filePathRelative":"version-2.4.0/api/params.md","excerpt":"\\n<p>本模块定义了依赖注入的各类参数。</p>\\n<h2><em>def</em> <code>Arg(key=None)</code></h2>\\n<ul>\\n<li>\\n<p><strong>说明:</strong> Arg 参数消息</p>\\n</li>\\n<li>\\n<p><strong>参数</strong></p>\\n<ul>\\n<li><code>key</code> (str | None)</li>\\n</ul>\\n</li>\\n<li>\\n<p><strong>返回</strong></p>\\n<ul>\\n<li>Any</li>\\n</ul>\\n</li>\\n</ul>\\n<h2><em>def</em> <code>ArgStr(key=None)</code></h2>","bioChainData":{"outlink":[{"title":"typing","link":"version-2.4.0/api/typing.html"},{"title":"index","link":"version-2.4.0/api/adapters/index.html"},{"title":"compat","link":"version-2.4.0/api/compat.html"},{"title":"index","link":"version-2.4.0/api/dependencies/index.html"},{"title":"matcher","link":"version-2.4.0/api/matcher.html"}],"backlink":[{"title":"rule","link":"version-2.4.0/api/rule.html"},{"title":"on","link":"version-2.4.0/api/plugin/on.html"}],"localMap":{"nodes":[{"id":"version-2.4.0/api/params.md","value":{"title":"params","path":"version-2.4.0/api/params.md","outlink":["version-2.4.0/api/typing.md","version-2.4.0/api/adapters/index.md","version-2.4.0/api/compat.md","version-2.4.0/api/dependencies/index.md","version-2.4.0/api/matcher.md"],"backlink":["version-2.4.0/api/rule.md","version-2.4.0/api/plugin/on.md"]}},{"id":"version-2.4.0/api/typing.md","value":{"title":"typing","path":"version-2.4.0/api/typing.md","outlink":[],"backlink":[]}},{"id":"version-2.4.0/api/adapters/index.md","value":{"title":"index","path":"version-2.4.0/api/adapters/index.md","outlink":[],"backlink":[]}},{"id":"version-2.4.0/api/compat.md","value":{"title":"compat","path":"version-2.4.0/api/compat.md","outlink":[],"backlink":[]}},{"id":"version-2.4.0/api/dependencies/index.md","value":{"title":"index","path":"version-2.4.0/api/dependencies/index.md","outlink":[],"backlink":[]}},{"id":"version-2.4.0/api/matcher.md","value":{"title":"matcher","path":"version-2.4.0/api/matcher.md","outlink":[],"backlink":[]}},{"id":"version-2.4.0/api/rule.md","value":{"title":"rule","path":"version-2.4.0/api/rule.md","outlink":[],"backlink":[]}},{"id":"version-2.4.0/api/plugin/on.md","value":{"title":"on","path":"version-2.4.0/api/plugin/on.md","outlink":[],"backlink":[]}}],"links":[{"source":"version-2.4.0/api/params.md","target":"version-2.4.0/api/typing.md"},{"source":"version-2.4.0/api/params.md","target":"version-2.4.0/api/adapters/index.md"},{"source":"version-2.4.0/api/params.md","target":"version-2.4.0/api/compat.md"},{"source":"version-2.4.0/api/params.md","target":"version-2.4.0/api/dependencies/index.md"},{"source":"version-2.4.0/api/params.md","target":"version-2.4.0/api/matcher.md"},{"source":"version-2.4.0/api/rule.md","target":"version-2.4.0/api/params.md"},{"source":"version-2.4.0/api/plugin/on.md","target":"version-2.4.0/api/params.md"}]}}}');export{k as comp,c as data};
