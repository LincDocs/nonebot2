import{_ as l,e as d,f as n,g as a,h as s,i as t,j as h,r,o as p}from"./app-DlBE6PBf.js";const k={};function o(g,i){const e=r("RouteLink");return p(),d("div",null,[i[10]||(i[10]=n(`<h1 id="使用适配器" tabindex="-1"><a class="header-anchor" href="#使用适配器"><span>使用适配器</span></a></h1><p>适配器 (Adapter) 是机器人与平台交互的核心桥梁，它负责在驱动器和机器人插件之间转换与传递消息。</p><h2 id="适配器功能与组成" tabindex="-1"><a class="header-anchor" href="#适配器功能与组成"><span>适配器功能与组成</span></a></h2><p>适配器通常有两种功能，分别是<strong>接收事件</strong>和<strong>调用平台接口</strong>。其中，接收事件是指将驱动器收到的事件消息转换为 NoneBot 定义的事件模型，然后交由机器人插件处理；调用平台接口是指将机器人插件调用平台接口的数据转换为平台指定的格式，然后交由驱动器发送，并接收接口返回数据。</p><p>为了实现这两种功能，适配器通常由四个部分组成：</p><ul><li><strong>Adapter</strong>：负责转换事件和调用接口，正确创建 Bot 对象并注册到 NoneBot 中。</li><li><strong>Bot</strong>：负责存储平台机器人相关信息，并提供回复事件的方法。</li><li><strong>Event</strong>：负责定义事件内容，以及事件主体对象。</li><li><strong>Message</strong>：负责正确序列化消息，以便机器人插件处理。</li></ul><h2 id="注册适配器" tabindex="-1"><a class="header-anchor" href="#注册适配器"><span>注册适配器</span></a></h2><p>在使用适配器之前，我们需要先将适配器注册到驱动器中，这样适配器就可以通过驱动器接收事件和调用接口了。我们以 Console 适配器为例，来看看如何注册适配器：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> nonebot</span></span>
<span class="line highlighted"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> nonebot.adapters.console </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> Adapter</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">driver </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> nonebot.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">get_driver</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line highlighted"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">driver.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">register_adapter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(Adapter)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们首先需要从适配器模块中导入所需要的适配器类，然后通过驱动器的 <code>register_adapter</code> 方法将适配器注册到驱动器中即可。如果我们需要多平台支持，可以多次调用 <code>register_adapter</code> 方法来注册多个适配器。</p><h2 id="获取已注册的适配器" tabindex="-1"><a class="header-anchor" href="#获取已注册的适配器"><span>获取已注册的适配器</span></a></h2><p>NoneBot 提供了 <code>get_adapter</code> 方法来获取已注册的适配器，我们可以通过适配器的名称或类型来获取指定的适配器实例：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> nonebot</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> nonebot.adapters.console </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> Adapter</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">adapters </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> nonebot.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">get_adapters</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">console_adapter </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> nonebot.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">get_adapter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(Adapter)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">console_adapter </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> nonebot.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">get_adapter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(Adapter.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">get_name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">())</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="获取-bot-对象" tabindex="-1"><a class="header-anchor" href="#获取-bot-对象"><span>获取 Bot 对象</span></a></h2><p>当前所有适配器已连接的 Bot 对象可以通过 <code>get_bots</code> 方法获取，这是一个以机器人 ID 为键的字典：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> nonebot</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">bots </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> nonebot.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">get_bots</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们也可以通过 <code>get_bot</code> 方法获取指定 ID 的 Bot 对象。如果省略 ID 参数，将会返回所有 Bot 中的第一个：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> nonebot</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">bot </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> nonebot.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">get_bot</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;bot_id&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果需要获取指定适配器连接的 Bot 对象，我们可以通过适配器的 <code>bots</code> 属性获取，这也是一个以机器人 ID 为键的字典：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> nonebot</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> nonebot.adapters.console </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> Adapter</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">console_adapter </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> nonebot.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">get_adapter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(Adapter)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">bots </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> console_adapter.bots</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Bot 对象都具有一个 <code>self_id</code> 属性，它是机器人的唯一 ID，由适配器填写，通常为机器人的帐号 ID 或者 APP ID。</p><h2 id="获取事件通用信息" tabindex="-1"><a class="header-anchor" href="#获取事件通用信息"><span>获取事件通用信息</span></a></h2>`,22)),a("p",null,[i[1]||(i[1]=s("适配器的所有事件模型均继承自 ")),i[2]||(i[2]=a("code",null,"Event",-1)),i[3]||(i[3]=s(" 基类，在")),t(e,{to:"/version-2.4.0/appendices/overload.html"},{default:h(()=>i[0]||(i[0]=[s("事件类型与重载")])),_:1}),i[4]||(i[4]=s("一节中，我们也提到了如何使用基类抽象方法来获取事件通用信息。基类能提供如下信息："))]),i[11]||(i[11]=n('<h3 id="事件类型" tabindex="-1"><a class="header-anchor" href="#事件类型"><span>事件类型</span></a></h3><p>事件类型通常为 <code>meta_event</code>、<code>message</code>、<code>notice</code>、<code>request</code>。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">type</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">str</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> event.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">get_type</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="事件名称" tabindex="-1"><a class="header-anchor" href="#事件名称"><span>事件名称</span></a></h3><p>事件名称由适配器定义，通常用于日志记录。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">name: </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">str</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> event.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">get_event_name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="事件描述" tabindex="-1"><a class="header-anchor" href="#事件描述"><span>事件描述</span></a></h3><p>事件描述由适配器定义，通常用于日志记录。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">description: </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">str</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> event.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">get_event_description</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="事件日志字符串" tabindex="-1"><a class="header-anchor" href="#事件日志字符串"><span>事件日志字符串</span></a></h3><p>事件日志字符串由事件名称和事件描述组成，用于日志记录。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">log: </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">str</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> event.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">get_log_string</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="事件主体-id" tabindex="-1"><a class="header-anchor" href="#事件主体-id"><span>事件主体 ID</span></a></h3><p>事件主体 ID 通常为机器人用户 ID。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">user_id: </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">str</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> event.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">get_user_id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="事件会话-id" tabindex="-1"><a class="header-anchor" href="#事件会话-id"><span>事件会话 ID</span></a></h3><p>事件会话 ID 通常为机器人用户 ID 与群聊/频道 ID 组合而成。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">session_id: </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">str</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> event.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">get_session_id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="事件消息" tabindex="-1"><a class="header-anchor" href="#事件消息"><span>事件消息</span></a></h3><p>如果事件包含消息，则可以通过该方法获取，否则会产生异常。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">message: Message </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> event.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">get_message</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="事件纯文本消息" tabindex="-1"><a class="header-anchor" href="#事件纯文本消息"><span>事件纯文本消息</span></a></h3><p>通常为事件消息的纯文本内容，如果事件不包含消息，则会产生异常。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">text: </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">str</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> event.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">get_plaintext</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="事件是否与机器人有关" tabindex="-1"><a class="header-anchor" href="#事件是否与机器人有关"><span>事件是否与机器人有关</span></a></h3><p>由适配器实现的判断，通常将事件目标主体为机器人、消息中包含“@机器人”或以“机器人的昵称”开始视为与机器人有关。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">is_tome: </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">bool</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> event.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">is_tome</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="更多" tabindex="-1"><a class="header-anchor" href="#更多"><span>更多</span></a></h2>',28)),a("p",null,[i[6]||(i[6]=s("官方支持的适配器和社区贡献的适配器均可在")),i[7]||(i[7]=a("a",{href:"/store/adapters",target:"_blank",rel:"noopener noreferrer"},"商店",-1)),i[8]||(i[8]=s("中查看。如果你想要开发自己的适配器，可以参考")),t(e,{to:"/version-2.4.0/developer/adapter-writing.html"},{default:h(()=>i[5]||(i[5]=[s("开发文档")])),_:1}),i[9]||(i[9]=s("。欢迎通过商店发布你的适配器。"))])])}const c=l(k,[["render",o],["__file","adapter.html.vue"]]),B=JSON.parse('{"path":"/version-2.4.0/advanced/adapter.html","title":"使用适配器","lang":"zh-CN","frontmatter":{"sidebar_position":1,"description":"注册适配器与指定平台交互","options":{"menu":[{"category":"advanced","weight":20}]},"head":[["meta",{"property":"og:url","content":"https://LincDocs.github.io/nonebot2/version-2.4.0/advanced/adapter.html"}],["meta",{"property":"og:site_name","content":"nonebot2"}],["meta",{"property":"og:title","content":"使用适配器"}],["meta",{"property":"og:description","content":"注册适配器与指定平台交互"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"使用适配器\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincDocs\\",\\"url\\":\\"https://github.com/LincDocs/nonebot2/\\"}]}"]]},"git":{},"readingTime":{"minutes":3.83,"words":1148},"filePathRelative":"version-2.4.0/advanced/adapter.md","excerpt":"\\n<p>适配器 (Adapter) 是机器人与平台交互的核心桥梁，它负责在驱动器和机器人插件之间转换与传递消息。</p>\\n<h2>适配器功能与组成</h2>\\n<p>适配器通常有两种功能，分别是<strong>接收事件</strong>和<strong>调用平台接口</strong>。其中，接收事件是指将驱动器收到的事件消息转换为 NoneBot 定义的事件模型，然后交由机器人插件处理；调用平台接口是指将机器人插件调用平台接口的数据转换为平台指定的格式，然后交由驱动器发送，并接收接口返回数据。</p>\\n<p>为了实现这两种功能，适配器通常由四个部分组成：</p>\\n<ul>\\n<li><strong>Adapter</strong>：负责转换事件和调用接口，正确创建 Bot 对象并注册到 NoneBot 中。</li>\\n<li><strong>Bot</strong>：负责存储平台机器人相关信息，并提供回复事件的方法。</li>\\n<li><strong>Event</strong>：负责定义事件内容，以及事件主体对象。</li>\\n<li><strong>Message</strong>：负责正确序列化消息，以便机器人插件处理。</li>\\n</ul>","bioChainData":{"outlink":[{"title":"overload","link":"version-2.4.0/appendices/overload.html"},{"title":"adapter-writing","link":"version-2.4.0/developer/adapter-writing.html"}],"backlink":[{"title":"overload","link":"version-2.4.0/appendices/overload.html"}],"localMap":{"nodes":[{"id":"version-2.4.0/advanced/adapter.md","value":{"title":"adapter","path":"version-2.4.0/advanced/adapter.md","outlink":["version-2.4.0/appendices/overload.md","version-2.4.0/developer/adapter-writing.md"],"backlink":["version-2.4.0/appendices/overload.md"]}},{"id":"version-2.4.0/appendices/overload.md","value":{"title":"overload","path":"version-2.4.0/appendices/overload.md","outlink":[],"backlink":[]}},{"id":"version-2.4.0/developer/adapter-writing.md","value":{"title":"adapter-writing","path":"version-2.4.0/developer/adapter-writing.md","outlink":[],"backlink":[]}}],"links":[{"source":"version-2.4.0/advanced/adapter.md","target":"version-2.4.0/appendices/overload.md"},{"source":"version-2.4.0/advanced/adapter.md","target":"version-2.4.0/developer/adapter-writing.md"},{"source":"version-2.4.0/appendices/overload.md","target":"version-2.4.0/advanced/adapter.md"}]}}}');export{c as comp,B as data};
