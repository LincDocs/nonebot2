import{_ as o,e as r,f as l,g as s,h as t,i as a,j as n,r as h,o as d}from"./app-yjG2kzMn.js";const p={},k={class:"hint-container tip"};function c(m,i){const e=h("RouteLink");return d(),r("div",null,[i[16]||(i[16]=l('<h1 id="事件响应器" tabindex="-1"><a class="header-anchor" href="#事件响应器"><span>事件响应器</span></a></h1><p>事件响应器（Matcher）是对接收到的事件进行响应的基本单元，所有的事件响应器都继承自 <code>Matcher</code> 基类。</p><p>在 NoneBot 中，事件响应器可以通过一系列特定的规则<strong>筛选</strong>出<strong>具有某种特征的事件</strong>，并按照<strong>特定的流程</strong>交由<strong>预定义的事件处理依赖</strong>进行处理。例如，在<a href="../quick-start.mdx">快速上手</a>中，我们使用了内置插件 <code>echo</code> ，它定义的事件响应器能响应机器人用户发送的“/echo hello world”消息，提取“hello world”信息并作为回复消息发送。</p><h2 id="事件响应器辅助函数" tabindex="-1"><a class="header-anchor" href="#事件响应器辅助函数"><span>事件响应器辅助函数</span></a></h2><p>NoneBot 中所有事件响应器均继承自 <code>Matcher</code> 基类，但直接使用 <code>Matcher.new()</code> 方法创建事件响应器过于繁琐且不能记录插件信息。因此，NoneBot 中提供了一系列“事件响应器辅助函数”（下称“辅助函数”）来辅助我们用<strong>最简的方式</strong>创建<strong>带有不同规则预设</strong>的事件响应器，提高代码可读性和书写效率。通常情况下，我们只需要使用辅助函数即可完成事件响应器的创建。</p><p>在 NoneBot 中，辅助函数以 <code>on()</code> 或 <code>on_&lt;type/rule&gt;()</code> 形式出现（例如 <code>on_command()</code>），调用后根据不同的参数返回一个 <code>Type[Matcher]</code> 类型的新事件响应器。</p>',6)),s("p",null,[i[1]||(i[1]=t("目前 NoneBot 提供了多种功能各异的辅助函数、具有共同命令名称前缀的命令组以及具有共同参数的响应器组，均可以从 ")),i[2]||(i[2]=s("code",null,"nonebot",-1)),i[3]||(i[3]=t(" 模块直接导入使用，具体内容参考")),a(e,{to:"/advanced/matcher.html"},{default:n(()=>i[0]||(i[0]=[t("事件响应器进阶")])),_:1}),i[4]||(i[4]=t("。"))]),i[17]||(i[17]=s("h2",{id:"创建事件响应器",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#创建事件响应器"},[s("span",null,"创建事件响应器")])],-1)),s("p",null,[i[6]||(i[6]=t("在上一节")),a(e,{to:"/tutorial/create-plugin.html#%E5%88%9B%E5%BB%BA%E6%8F%92%E4%BB%B6"},{default:n(()=>i[5]||(i[5]=[t("创建插件")])),_:1}),i[7]||(i[7]=t("中，我们创建了一个 ")),i[8]||(i[8]=s("code",null,"weather",-1)),i[9]||(i[9]=t(" 插件，现在我们来实现他的功能。"))]),i[18]||(i[18]=l(`<p>我们直接使用 <code>on_command()</code> 辅助函数来创建一个事件响应器：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> nonebot </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> on_command</span></span>
<span class="line"></span>
<span class="line highlighted"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">weather </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;"> on_command</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;天气&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这样，我们就获得一个名为 <code>weather</code> 的事件响应器了，这个事件响应器会对 <code>/天气</code> 开头的消息进行响应。</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p>如果一条消息中包含“@机器人”或以“机器人的昵称”开始，例如 <code>@bot /天气</code> 时，协议适配器会将 <code>event.is_tome()</code> 判断为 <code>True</code> ，同时也会自动去除 <code>@bot</code>，即事件响应器收到的信息内容为 <code>/天气</code>，方便进行命令匹配。</p></div><h3 id="为事件响应器添加参数" tabindex="-1"><a class="header-anchor" href="#为事件响应器添加参数"><span>为事件响应器添加参数</span></a></h3><p>在辅助函数中，我们可以添加一些参数来对事件响应器进行更加精细的调整，例如事件响应器的优先级、匹配规则等。例如：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> nonebot </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> on_command</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> nonebot.rule </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> to_me</span></span>
<span class="line"></span>
<span class="line highlighted"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">weather </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;"> on_command</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;天气&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">rule</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">to_me</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(), </span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">aliases</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;weather&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;查天气&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}, </span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">priority</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">block</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">True</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这样，我们就获得了一个可以响应 <code>天气</code>、<code>weather</code>、<code>查天气</code> 三个命令的响应规则，需要私聊或 <code>@bot</code> 时才会响应，优先级为 10（越小越优先），阻断事件向后续优先级传播的事件响应器了。这些内容的意义和使用方法将会在后续的章节中一一介绍。</p>`,8)),s("div",k,[i[15]||(i[15]=s("p",{class:"hint-container-title"},"提示",-1)),s("p",null,[i[12]||(i[12]=t("需要注意的是，不同的辅助函数有不同的可选参数，在使用之前可以参考")),a(e,{to:"/advanced/matcher.html#%E5%9F%BA%E6%9C%AC%E8%BE%85%E5%8A%A9%E5%87%BD%E6%95%B0"},{default:n(()=>i[10]||(i[10]=[t("事件响应器进阶 - 基本辅助函数")])),_:1}),i[13]||(i[13]=t("或 ")),a(e,{to:"/api/plugin/on.html#on"},{default:n(()=>i[11]||(i[11]=[t("API 文档")])),_:1}),i[14]||(i[14]=t("。"))])])])}const u=o(p,[["render",c],["__file","matcher.html.vue"]]),A=JSON.parse('{"path":"/tutorial/matcher.html","title":"事件响应器","lang":"zh-CN","frontmatter":{"sidebar_position":4,"description":"响应接收到的特定事件","options":{"menu":[{"category":"tutorial","weight":60}]},"head":[["meta",{"property":"og:url","content":"https://LincDocs.github.io/nonebot2/tutorial/matcher.html"}],["meta",{"property":"og:site_name","content":"nonebot2"}],["meta",{"property":"og:title","content":"事件响应器"}],["meta",{"property":"og:description","content":"响应接收到的特定事件"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"事件响应器\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincDocs\\",\\"url\\":\\"https://github.com/LincDocs/nonebot2/\\"}]}"]]},"git":{},"readingTime":{"minutes":2.91,"words":873},"filePathRelative":"tutorial/matcher.md","excerpt":"\\n<p>事件响应器（Matcher）是对接收到的事件进行响应的基本单元，所有的事件响应器都继承自 <code>Matcher</code> 基类。</p>\\n<p>在 NoneBot 中，事件响应器可以通过一系列特定的规则<strong>筛选</strong>出<strong>具有某种特征的事件</strong>，并按照<strong>特定的流程</strong>交由<strong>预定义的事件处理依赖</strong>进行处理。例如，在<a href=\\"../quick-start.mdx\\">快速上手</a>中，我们使用了内置插件 <code>echo</code> ，它定义的事件响应器能响应机器人用户发送的“/echo hello world”消息，提取“hello world”信息并作为回复消息发送。</p>","bioChainData":{"outlink":[{"title":"matcher","link":"advanced/matcher.html"},{"title":"create-plugin","link":"tutorial/create-plugin.html"}],"backlink":[{"title":"matcher","link":"advanced/matcher.html"},{"title":"rule","link":"appendices/rule.html"}],"localMap":{"nodes":[{"id":"tutorial/matcher.md","value":{"title":"matcher","path":"tutorial/matcher.md","outlink":["advanced/matcher.md","tutorial/create-plugin.md"],"backlink":["advanced/matcher.md","appendices/rule.md"]}},{"id":"advanced/matcher.md","value":{"title":"matcher","path":"advanced/matcher.md","outlink":[],"backlink":[]}},{"id":"tutorial/create-plugin.md","value":{"title":"create-plugin","path":"tutorial/create-plugin.md","outlink":[],"backlink":[]}},{"id":"appendices/rule.md","value":{"title":"rule","path":"appendices/rule.md","outlink":[],"backlink":[]}}],"links":[{"source":"tutorial/matcher.md","target":"advanced/matcher.md"},{"source":"tutorial/matcher.md","target":"tutorial/create-plugin.md"},{"source":"advanced/matcher.md","target":"tutorial/matcher.md"},{"source":"appendices/rule.md","target":"tutorial/matcher.md"}]}}}');export{u as comp,A as data};
